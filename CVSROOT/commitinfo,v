head	1.10;
access;
symbols;
locks; strict;
comment	@# @;


1.10
date	2008.07.03.17.34.39;	author tg;	state Exp;
branches;
next	1.9;
commitid	100486D0DBB0626D7EA;

1.9
date	2008.02.22.20.54.45;	author tg;	state Exp;
branches;
next	1.8;
commitid	10047BF369C76960755;

1.8
date	2007.11.18.21.19.52;	author bsiegert;	state Exp;
branches;
next	1.7;
commitid	1004740AC8F00000000;

1.7
date	2007.04.03.20.47.43;	author tg;	state Exp;
branches;
next	1.6;
commitid	1004612BD7E0C2EB294;

1.6
date	2005.12.06.03.11.40;	author tg;	state Exp;
branches;
next	1.5;
commitid	70554395015a9795;

1.5
date	2005.12.05.21.25.09;	author tg;	state Exp;
branches;
next	1.4;
commitid	49854394b01a7fd0;

1.4
date	2005.05.05.16.03.42;	author tg;	state Exp;
branches;
next	1.3;
commitid	117c427a43ef3389;

1.3
date	2005.04.19.22.32.58;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.04.23.29.56;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.04.23.13.43;	author tg;	state Exp;
branches;
next	;


desc
@@


1.10
log
@add commented-out examples for unpatched cvs without %I
@
text
@# $MirOS: CVSROOT/commitinfo,v 1.9 2008/02/22 20:54:45 tg Exp $
#-
# The "commitinfo" file is used to control pre-commit checks.
# The filter on the right is invoked with the repository and a list
# of files to check.  A non-zero exit of the filter program will
# cause the commit to be aborted.
#
# The first entry on a line is a regular expression which is tested
# against the directory that the change is being committed to, relative
# to the $CVSROOT.  For the first match that is found, then the remainder
# of the line is the name of the filter to run.
#
# Format strings present in the filter will be replaced as follows:
#    %c = canonical name of the command being executed
#    %I = unique (randomly generated) commit ID
#    %R = the name of the referrer, if any, otherwise the value NONE
#    %p = path relative to repository
#    %r = repository (path portion of $CVSROOT)
#    %{s} = file name, file name, ...
#
# If no format strings are present in the filter string, a default of
# " %r %s" will be appended to the filter string, but this usage is
# deprecated.
#
# If the repository name does not match any of the regular expressions in this
# file, the "DEFAULT" line is used, if it is specified.
#
# If the name "ALL" appears as a regular expression it is always used
# in addition to the first matching regex or "DEFAULT".

# normal operation
ALL	$CVSROOT/CVSROOT/tracker %r %I %r/%p

# non-MirBSD operation
#ALL	$CVSROOT/CVSROOT/tracker %r - %r/%p
@


1.9
log
@bring this back to our normal cvs server
@
text
@d1 1
a1 1
# $MirOS: commitinfo,v 1.7 2007/04/03 20:47:43 tg Exp $
d31 1
d33 3
@


1.8
log
@tg@@ will kill me for this but anyway:

add an elaborate perl one-liner to give the pgrp to the tracker script
in commitinfo
@
text
@d31 1
a31 1
ALL	perl -e 'exec $ARGV[0], $ARGV[1], getpgrp 0, $ARGV[2];' $CVSROOT/CVSROOT/tracker %r %r/%p
@


1.7
log
@I need a test commit now, so a whitespace cleanup has to do
@
text
@d1 1
a1 1
# $MirOS: CVSROOT/commitinfo,v 1.6 2005/12/06 03:11:40 tg Exp $
d31 1
a31 1
ALL	$CVSROOT/CVSROOT/tracker %r %I %r/%p
@


1.6
log
@by suggestion of Han Boetes, use a temporary directory which is
only group-writable yet sticky, for the temporary files, since
we cannot use mktemp/mkdtemp
@
text
@d1 1
a1 1
# $MirOS: CVSROOT/commitinfo,v 1.5 2005/12/05 21:25:09 tg Exp $
d4 2
a5 2
# The filter on the right is invoked with the repository and a list 
# of files to check.  A non-zero exit of the filter program will 
@


1.5
log
@rename the files a bit (to clean the attic which moves into ocvs):
* commit_prep2	-> tracker
* log_accum2	-> mklogci
* log_write2	-> genlog
* tag_accum2	-> mklogtag
@
text
@d1 1
a1 1
# $MirOS: CVSROOT/commitinfo,v 1.4 2005/05/05 16:03:42 tg Exp $
d31 1
a31 1
ALL	$CVSROOT/CVSROOT/tracker %I %r/%p
@


1.4
log
@enable these debugging outputs
@
text
@d1 1
a1 1
# $MirOS: CVSROOT/commitinfo,v 1.3 2005/04/19 22:32:58 tg Exp $
d31 1
a31 1
ALL	$CVSROOT/CVSROOT/commit_prep2 %I %r/%p
@


1.3
log
@sync with new cvs
@
text
@d1 1
a1 1
# $MirOS: CVSROOT/commitinfo,v 1.2 2005/02/04 23:29:56 tg Exp $
d31 1
a31 1
ALL	$CVSROOT/CVSROOT/commit_prep2 %r/%p
@


1.2
log
@enable logging of CVS commits
@
text
@d1 1
a1 1
# $MirOS$
d15 1
@


1.1
log
@initial checkin
@
text
@d1 2
d29 2
@


