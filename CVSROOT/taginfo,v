head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	2008.07.03.17.34.39;	author tg;	state Exp;
branches;
next	1.6;
commitid	100486D0DBB0626D7EA;

1.6
date	2005.12.06.03.11.40;	author tg;	state Exp;
branches;
next	1.5;
commitid	70554395015a9795;

1.5
date	2005.12.05.21.25.09;	author tg;	state Exp;
branches;
next	1.4;
commitid	49854394b01a7fd0;

1.4
date	2005.05.05.16.03.42;	author tg;	state Exp;
branches;
next	1.3;
commitid	117c427a43ef3389;

1.3
date	2005.04.19.22.32.59;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.04.23.33.43;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.04.23.13.43;	author tg;	state Exp;
branches;
next	;


desc
@@


1.7
log
@add commented-out examples for unpatched cvs without %I
@
text
@# $MirOS: CVSROOT/taginfo,v 1.6 2005/12/06 03:11:40 tg Exp $
#-
# The "taginfo" file is used to control pre-tag checks.
# The filter on the right is invoked with the following arguments
# if no format strings are present:
#
# $1 -- tagname
# $2 -- operation "add" for tag, "mov" for tag -F, and "del" for tag -d
# $3 -- tagtype "?" on delete, "T" for branch, "N" for static
# $4 -- repository
# $5->  file revision [file revision ...]
#
# If any format strings are present in the filter, they will be replaced
# as follows:
#    %b = branch mode = "?" (delete ops - unknown) | "T" (branch)
#                     | "N" (not branch)
#    %o = operation = "add" | "mov" | "del"
#    %c = canonical name of the command being executed
#    %I = unique (randomly generated) commit ID
#    %R = the name of the referrer, if any, otherwise the value NONE
#    %p = path relative to repository
#    %r = repository (path portion of $CVSROOT)
#    %t = tagname
#    %{sVv} = attribute list = file name, old version tag will be deleted
#             from, new version tag will be added to (or deleted from, but
#             this feature is deprecated.  When either old or new revision is
#             unknown, doesn't exist, or isn't applicable, the string "NONE"
#             will be placed on the command line.
#
# Note that %{sVv} is a list operator and not all elements are necessary.
# Thus %{sV} is a legal format string, but will only be replaced with file
# name and old revision. it also generates multiple arguments for each file
# being operated upon.  i.e. if two files, file1 & file2, are having a tag
# moved from version 1.1 to version 1.1.2.9, %{sVv} will generate the
# following six arguments in this order:
# file1, 1.1, 1.1.2.9, file2, 1.1, 1.1.2.9.
#
# A non-zero exit of the filter program will cause the tag to be aborted.
#
# The first entry on a line is a regular expression which is tested
# against the directory that the change is being committed to, relative
# to the $CVSROOT.  For the first match that is found, then the remainder
# of the line is the name of the filter to run.
#
# If the repository name does not match any of the regular expressions in this
# file, the "DEFAULT" line is used, if it is specified.
#
# If the name "ALL" appears as a regular expression it is always used
# in addition to the first matching regex or "DEFAULT".

# normal operation
ALL	$CVSROOT/CVSROOT/tracker %r %I %r/%p

# non-MirBSD operation
#ALL	$CVSROOT/CVSROOT/tracker %r - %r/%p
@


1.6
log
@by suggestion of Han Boetes, use a temporary directory which is
only group-writable yet sticky, for the temporary files, since
we cannot use mktemp/mkdtemp
@
text
@d1 1
a1 1
# $MirOS: CVSROOT/taginfo,v 1.5 2005/12/05 21:25:09 tg Exp $
d51 1
d53 3
@


1.5
log
@rename the files a bit (to clean the attic which moves into ocvs):
* commit_prep2	-> tracker
* log_accum2	-> mklogci
* log_write2	-> genlog
* tag_accum2	-> mklogtag
@
text
@d1 1
a1 1
# $MirOS: CVSROOT/taginfo,v 1.4 2005/05/05 16:03:42 tg Exp $
d51 1
a51 1
ALL	$CVSROOT/CVSROOT/tracker %I %r/%p
@


1.4
log
@enable these debugging outputs
@
text
@d1 1
a1 1
# $MirOS: CVSROOT/taginfo,v 1.3 2005/04/19 22:32:59 tg Exp $
d51 1
a51 1
ALL	$CVSROOT/CVSROOT/commit_prep2 %I %r/%p
@


1.3
log
@sync with new cvs
@
text
@d1 1
a1 1
# $MirOS: CVSROOT/taginfo,v 1.2 2005/02/04 23:33:43 tg Exp $
d51 1
a51 1
ALL	$CVSROOT/CVSROOT/commit_prep2 %r/%p
@


1.2
log
@enable logging of CVS tag operations
enable CVS history and fix configuration of CVS repo
@
text
@d1 1
a1 1
# $MirOS$
d19 1
@


1.1
log
@initial checkin
@
text
@d1 2
d49 2
@


