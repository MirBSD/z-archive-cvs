head	1.7;
access;
symbols
	mirbsd:1.1.7;
locks; strict;
comment	@# @;


1.7
date	2018.10.07.01.10.15;	author tg;	state Exp;
branches;
next	1.6;
commitid	1005BB95CA10BF418E8;

1.6
date	2009.10.30.15.29.20;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004AEB0657446D105F;

1.5
date	2008.11.08.22.24.25;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004916117E0B020D70;

1.4
date	2006.01.28.16.18.59;	author tg;	state Exp;
branches;
next	1.3;
commitid	10043DB9977438B7220;

1.3
date	2005.12.17.05.46.07;	author tg;	state Exp;
branches;
next	1.2;
commitid	10043A3A3E65E20A413;

1.2
date	2005.05.25.23.50.30;	author tg;	state Exp;
branches;
next	1.1;
commitid	715c42950f4ccef2;

1.1
date	2005.02.05.02.36.15;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.02.05.02.36.15;	author tg;	state Exp;
branches;
next	;


desc
@@


1.7
log
@spelling cleanup: “programme” is distinct from “program”; even in
British English, the latter is used for computer programs, while
the former serves for things like the TV programme, or a programme
to plant trees
@
text
@#!/bin/mksh
# $MirOS: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.6 2009/10/30 15:29:20 tg Exp $
#-
# Copyright (c) 2004
#	Thorsten "mirabilos" Glaser <tg@@mirbsd.org>
#
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
#
# All advertising materials mentioning features or use of this soft-
# ware must display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a nontrivial bug.
#-
# Sample implementation for the Heartbeat protocol, originally desi-
# gned by the SixXS IPv6 tunnel provider. MirOS hbServer is not sup-
# ported or endorsed by SixXS.
# This is the client part of the implementation.
#
# Overview:
# This script is intended to be both usable as standalone command as
# well as a DJB-style "/service/*/run" script for supervision by djb
# daemontools. Configuration is at the top of the script; first end-
# user specific configuration such as passwords or interfaces; after
# that, machine class configuration (such as adaptions for the OS).
#
# The script ought to be chmod'd 0500 so no password leakage occurs.
#
# Installation for the MirDNS version of the script:
# Put this into /service/mirdns/run chmod 500. Create a subdirectory
# log/main, chown it to the log user (for example _dnslog). Create a
# /service/mirdns/log/run script (chmod 555) containing these lines:
#	#!/bin/sh
#	exec setuidgid _dnslog multilog t ./main
# Edit the configuration sections below and start the service.
#
# Invocation if not run via daemontools:
# hbclient &		- run as background process, beating
# hbclient down		- run once, tell the server the tunnel is down
# hbclient pass		- run once, ask server for password change
#			  (interactively asks for new password twice)


#=== per-user configuration (MirDNS mode) ===

#-- user preferences

# log to syslog (uncomment to enable)
#SYSLOG="MirDNSv2"			# syslog tag
# log to stdout (comment to disable)
STDOUT=1
# execute script with "set -x" (uncomment to enable)
#STDERR=1				# debug to stdout
#STDERR=log				# debug to file

#-- SixXS login

# my user name, a.k.a. login of the machine
MYUSER="MACHINE"
# my password
MYPASS="secret"
# IPv4 address of the MirDNS server
SERVER="1.2.3.4"

#-- machine specifics

# where do I get my IP address from?
EXT_IF="tun0"				# name of external interface
#SENDER=1				# use "sender" (DANGEROUS, see below)

#=== per-OS configuration (MirDNS mode) ===

# get IPv4 address of external interface
function getip
{
	if [[ -n $SENDER ]]; then
		print sender
	else
		ifconfig $EXT_IF \
		    | grep "^	inet " | head -1 \
		    | while read a b c; do
			print $b
		done
	fi
}

# set up tunnel interface
function setup
{
}

# throw the tunnel through IPv4 land
function throw
{
}

# clean up, remove interfaces and routes
function clean
{
}

#=== subroutines (not configurable) ===

progname="${0:-hbClient}"	# program name
progname="${progname##*/}"	# basename of progname

#-- logging

# send a line to the log
function log
{
	if [[ -n $STDOUT ]]; then
		print "$@@"
	fi
	if [[ ${SYSLOG+set} = set ]]; then
		print "$@@" | logger -t "${SYSLOG:-hbClient}"
	fi
}

# send always; send to syslog if no stdout logging
function logall
{
	if [[ -n $STDOUT ]]; then
		log "$@@"
	else
		print "$@@" | logger -t "${SYSLOG:-hbClient}"
	fi
}

#-- server communication

# add date, password/hash and send to server
function tell
{
	line="$* $(date +%s)"
	cl="$line $MYPASS"
	sl="$line $(print -nr -- $cl | md5)"
	print -n -- $sl\\0 | nc -4nuw0 $SERVER 3740
}

# send DISABLE TUNNEL to server
function do_disable
{
	log disabling tunnel for $MYUSER
	tell DISABLE TUNNEL $MYUSER sender
}

# send HEARTBEAT TUNNEL to server
function do_heartbeat
{
	log beating tunnel for $MYUSER ${1+on} $1
	tell HEARTBEAT TUNNEL $MYUSER ${1:-sender}
}

# send change request for password to server
function do_passwd
{
	log changing password for $MYUSER
	tell PASSWD "$1" $MYUSER
}

#-- running the script

# clean up
function destruct
{
	logall received destruct
	[[ -n $GENPID ]] && rm -f /var/run/$TUNNEL.pid
	do_disable
	throw
	clean
	log bye
	exit ${1:-0}
}

pass=

# read password
function askpass
{
	set -o noglob
	stty -echo
	read pass?"$1 "
	stty echo
	set +o noglob
	print
}

# abort with error
function die
{
	print -- "${progname}:" "$@@"
	exit 1
}

#=== main program ===

typeset -u parm="$1"

if [[ $parm = DOWN ]]; then
	do_disable
	exit 0
fi

if [[ $parm = PASS ]]; then
	print Changing password for $MYUSER
	pass=
	askpass "New password:"
	np1="$pass"
	askpass "Again please:"
	np2="$pass"
	[[ $np1 = $np2 ]] || die Passwords do not match
	[[ -n $np1 ]] || die New password is empty
	do_passwd "$np1"
	me="$(cd $(dirname "$0"); pwd)$(basename "$0")"
	print
	print Do not forget to edit $me
	print replacing the old password with the one just entered.
	exit 0
fi

[[ -n $parm ]] && die Unknown command: $parm


#-- we can run as hbClient now

# daemonise or run under supervision
#XXX this may be the cause for failures; rewrite and use "mksh -T-" instead!
exec 0<&-
[[ -n $STDOUT || $STDERR = 1 ]] || exec 1>&-
if [[ -z $STDERR ]]; then
	exec 2>&-
else
	if [[ $STDERR = 1 ]]; then
		exec 2>&1
	else
		eval "exec 2>>$STDERR"
	fi
	set -x
fi

# set up
log Entering setup for $MYUSER
[[ -n $GENPID ]] && print $$ >/var/run/$TUNNEL.pid
setup

# trap exits
trap 'destruct 0' HUP TERM
trap 'destruct 1' INT

# main loop
OLD_IP=sender
while : ; do
	NEW_IP=$(getip)
	if [[ $NEW_IP != $OLD_IP ]]; then
		# status change (never reached if SENDER)
		if [[ -n $NEW_IP ]]; then
			logall reconfiguring $MYUSER to $NEW_IP
		else
			logall ERROR: $MYUSER cannot find new IP, disabling
			do_disable
		fi
		throw $NEW_IP
		OLD_IP=$NEW_IP
	fi
	[[ -n $NEW_IP ]] && do_heartbeat $NEW_IP
	sleep 60 & wait
done
# NOTREACHED
@


1.6
log
@document that “mksh -T- script” (or “mksh -T- -c "command"”) is better
@
text
@d2 1
a2 1
# $MirOS: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.5 2008/11/08 22:24:25 tg Exp $
d116 1
a116 1
progname="${0:-hbClient}"	# programme name
d208 1
a208 1
#=== main programme ===
@


1.5
log
@mass conversion 66h.42h.de → mirbsd.org
@
text
@d2 1
a2 1
# $MirOS: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.4 2006/01/28 16:18:59 tg Exp $
d240 1
@


1.4
log
@* add multi-server heartbeat client (draft)
* fix $progname in the other clients
@
text
@d2 1
a2 1
# $MirOS: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.3 2005/12/17 05:46:07 tg Exp $
d5 1
a5 1
#	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
@


1.3
log
@big fat licence update (I left some which are bsiegert@@'s alone though)
also, remove licence boilerplate from some .h files who don't deserve it
and remove and add some advertising clauses because I say so
@
text
@d2 1
a2 1
# $MirOS: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.2 2005/05/25 23:50:30 tg Exp $
d116 3
@


1.2
log
@mksh is pretty mature; switch most of contrib/ to it
@
text
@d2 1
a2 1
# $MirOS: contrib/code/heartbeat/toolkit.mirdns/hbclient,v 1.1.7.1 2005/02/05 02:36:15 tg Exp $
d18 8
a25 7
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of this work, even if advised of the possibility of such damage.
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
#!/bin/ksh
# $MirOS$
@


1.1.7.1
log
@All the code in the contributed section
@
text
@@
