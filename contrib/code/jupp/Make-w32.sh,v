head	1.24;
access;
symbols
	joe-3_1jupp38:1.23
	joe-3_1jupp37:1.23
	joe-3_1jupp36:1.23
	joe-3_1jupp35:1.23
	joe-3_1jupp34:1.23
	joe-3_1jupp33:1.23
	joe-3_1jupp32:1.22
	joe-3_1jupp31:1.14
	joe-3_1jupp30:1.14
	joe-3_1jupp29:1.7;
locks; strict;
comment	@# @;


1.24
date	2020.01.01.01.33.33;	author tg;	state Exp;
branches;
next	1.23;
commitid	1005E0BF6FE212699A0;

1.23
date	2018.02.01.02.26.45;	author tg;	state Exp;
branches;
next	1.22;
commitid	1005A727AE6551F0110;

1.22
date	2017.12.16.22.05.25;	author tg;	state Exp;
branches;
next	1.21;
commitid	1005A3598BC67380FB7;

1.21
date	2017.12.07.01.00.30;	author tg;	state Exp;
branches;
next	1.20;
commitid	1005A2892BB042F2F1F;

1.20
date	2017.12.06.21.46.54;	author tg;	state Exp;
branches;
next	1.19;
commitid	1005A28655C5188FF08;

1.19
date	2017.12.03.01.43.50;	author tg;	state Exp;
branches;
next	1.18;
commitid	1005A2356EC4C92E058;

1.18
date	2017.12.02.18.53.37;	author tg;	state Exp;
branches;
next	1.17;
commitid	1005A22F6C9194A0691;

1.17
date	2017.12.02.18.52.59;	author tg;	state Exp;
branches;
next	1.16;
commitid	1005A22F69D7F556D37;

1.16
date	2017.12.02.18.50.01;	author tg;	state Exp;
branches;
next	1.15;
commitid	1005A22F5E2328F5222;

1.15
date	2017.12.02.05.26.39;	author tg;	state Exp;
branches;
next	1.14;
commitid	1005A22397D0C8A82FF;

1.14
date	2017.01.11.21.23.52;	author tg;	state Exp;
branches;
next	1.12;
commitid	1005876A2774944E48A;

1.12
date	2017.01.10.20.23.23;	author tg;	state Exp;
branches;
next	1.11;
commitid	100587542CE1E15454F;

1.11
date	2017.01.10.20.12.03;	author tg;	state Exp;
branches;
next	1.10;
commitid	1005875402D33AC9EE3;

1.10
date	2017.01.10.18.45.38;	author tg;	state Exp;
branches;
next	1.9;
commitid	10058752BE6575B0A7C;

1.9
date	2017.01.10.18.11.51;	author tg;	state Exp;
branches;
next	1.8;
commitid	100587523FD49B99497;

1.8
date	2017.01.10.18.07.48;	author tg;	state Exp;
branches;
next	1.7;
commitid	1005875230B4E642F41;

1.7
date	2016.10.30.02.44.19;	author tg;	state Exp;
branches;
next	1.6;
commitid	10058155E8C33257B8A;

1.6
date	2016.10.30.02.38.34;	author tg;	state Exp;
branches;
next	1.5;
commitid	10058155D3C0F05E9E0;

1.5
date	2016.10.30.00.34.40;	author tg;	state Exp;
branches;
next	1.4;
commitid	1005815402E4893B68F;

1.4
date	2016.10.30.00.28.10;	author tg;	state Exp;
branches;
next	1.3;
commitid	10058153E7A6FB6A86B;

1.3
date	2016.10.29.23.44.43;	author tg;	state Exp;
branches;
next	1.2;
commitid	1005815347F236258ED;

1.2
date	2016.10.29.22.28.48;	author tg;	state Exp;
branches;
next	1.1;
commitid	100581522B40B56A212;

1.1
date	2016.10.29.22.03.24;	author tg;	state Exp;
branches;
next	;
commitid	10058151CC06D1C9B5E;


desc
@@


1.24
log
@fix version displayed in SETUP.INF
@
text
@#!/bin/mksh
# $MirOS: contrib/code/jupp/Make-w32.sh,v 1.23 2018/02/01 02:26:45 tg Exp $

usage() {
	print -ru2 "Usage: $0 [-bCgn]"
	print -ru2 '	Builds jupp32 (with debugging if -g): clean (unless -n),'
	print -ru2 '	configure (unless -n), make, package (unless -b), clean (unless -C)'
	exit 1
}

nopkg=0
nocln=0
debug=0
contb=0
while getopts "bCgn" c; do
	case $c {
	(b)	nopkg=1 ;;
	(C)	nocln=1 ;;
	(g)	debug=1 ;;
	(n)	contb=1 ;;
	(*)	usage ;;
	}
done

extrawarnings="-Wall -Wextra"
(( debug )) && extrawarnings="$extrawarnings -g3"
extrawarnings="$extrawarnings -Wno-unused-parameter -Wno-cast-qual"
extrawarnings="$extrawarnings -Wno-strict-prototypes"

export LC_ALL=C
set -ex
[[ -s configure && -s jupprc && -s charmaps/klingon.in ]]

jupp=$(sed -n "/^PACKAGE_VERSION='3\.1jupp\([0-9]*\)[~'].*\$/s//\1/p" configure)
jwin=
jwnt=$jupp
while (( jwnt > 34 )); do
	jwin=${jwin}z
	(( jwnt -= 25 ))
done
typeset -i1 tmp
(( tmp = 1#a - 10 + jwnt ))
jwin=$jwin${tmp#1#}
jtop=jwin31$jwin
typeset -u jWIN=$jwin

if (( contb )); then
	[[ -s mkw32/build/Makefile ]]
else
	rm -rf mkw32 JWIN31$jWIN.*
	mkdir mkw32{,/{build,$jtop}}
fi
date >>JWIN31$jWIN.log
cd mkw32/build
export CFLAGS='-Os -march=i486 -mtune=pentium-mmx'
export CPPFLAGS='-DJUPPRC_BUILTIN_NAME=\"jupp32rc\"'
(( contb )) || mksh ../../configure \
    --build=i486-pc-cygwin --host=i486-pc-cygwin \
    --prefix=c:/windows/system32 \
    --sysconfdir=c:/windows/system32 \
    --disable-dependency-tracking \
    --disable-terminfo \
    --disable-search-libs \
    --disable-getpwnam \
    --disable-termidx \
    --enable-win32reloc | tee -a ../../JWIN31$jWIN.log
make AM_CFLAGS="$extrawarnings" | tee -a ../../JWIN31$jWIN.log
if (( nopkg )); then
	ln -f joe.exe jupp.exe
	ln -sf ../../jupprc .
	exit 0
fi
cp charmaps/* syntax/* ../$jtop/
cp jmacsrc joerc jpicorc jstarrc ../$jtop/
cp joe.exe ../$jtop/jupp32.exe
cd ../..
cp COPYING mkw32/$jtop/copying.txt
cp /bin/cygwin1.dll mkw32/$jtop/
cp joe.txt mkw32/$jtop/jupp32.txt
cp jupprc mkw32/$jtop/jupp32rc
cd mkw32/$jtop
:>setup.inf
for x in *; do
	[[ $x = *[A-Z]* ]] || continue
	mv "$x" ../_TMP
	typeset -l lc
	lc=$x
	mv ../_TMP "$lc"
done
sed -b -e "s!@@jwin@@!$jupp!g" -e "s!@@ts@@!$(date -u +%m/%d/%Y)!g" \
    <../../setup.inf | while IFS= read -r line; do
	if [[ $line = '@@files@@'* ]]; then
		stat -c '%n=1,,%s' *
	else
		print -r -- "$line"
	fi
done >setup.inf
sz=$(stat -c '%n=1,,%s' setup.inf)
sed -bi "/^setup.inf=1,,/s/^.*\$/$sz/" setup.inf
sz=$(stat -c '%n=1,,%s' setup.inf)
sed -bi "/^setup.inf=1,,/s/^.*\$/$sz/" setup.inf
if [[ $sz != "$(stat -c '%n=1,,%s' setup.inf)" ]]; then
	print -rnu2 "Size of SETUP.INF destabilises between $sz and "
	stat -c '%n=1,,%s' setup.inf
	exit 1
fi
chmod 444 *
cd ..
zip -D -X -9 -k ../JWIN31$jWIN.ZIP $jtop/*
cd ..
ls -l JWIN31$jWIN.*
(( nocln )) || rm -rf mkw32
@


1.23
log
@more reliable SETUP.INF creation
@
text
@d2 1
a2 1
# $MirOS: contrib/code/jupp/Make-w32.sh,v 1.21 2017/12/07 01:00:30 tg Exp $
d36 2
a37 1
while (( jupp > 34 )); do
d39 1
a39 1
	(( jupp -= 25 ))
d42 1
a42 1
(( tmp = 1#a - 10 + jupp ))
@


1.22
log
@review build log
@
text
@d97 9
a105 2
sed -bi "/^setup.inf=1,,/s/^.*\$/$(stat -c '%n=1,,%s' setup.inf)/" setup.inf
sed -bi "/^setup.inf=1,,/s/^.*\$/$(stat -c '%n=1,,%s' setup.inf)/" setup.inf
@


1.21
log
@unfortunately, the polymorphic problems are not yet solved
@
text
@d2 1
a2 1
# $MirOS: contrib/code/jupp/Make-w32.sh,v 1.18 2017/12/02 18:53:37 tg Exp $
d57 1
@


1.20
log
@the code should now be able to cope with this

offenders will be patched away
@
text
@d28 1
@


1.19
log
@update
@
text
@d27 1
a27 4
extrawarnings="$extrawarnings -Wno-old-style-definition"
extrawarnings="$extrawarnings -Wno-unused-parameter -Wno-strict-prototypes"
extrawarnings="$extrawarnings -Wno-cast-qual"
extrawarnings="$extrawarnings -Wno-missing-prototypes -Wno-missing-declarations"
@


1.18
log
@brown paper bag commit
@
text
@d2 1
a2 1
# $MirOS: contrib/code/jupp/Make-w32.sh,v 1.16 2017/12/02 18:50:01 tg Exp $
d27 2
a28 2
extrawarnings="$extrawarnings -Wno-unused-parameter"
extrawarnings="$extrawarnings -Wno-old-style-definition -Wno-strict-prototypes"
@


1.17
log
@generate a build log
@
text
@d104 1
a104 1
ls -l JWIN31$jWIN.ZIP
@


1.16
log
@get rid of -Wmissing-field-initialisers, as Cygwin GCC forces my hand
@
text
@d2 1
a2 1
# $MirOS: contrib/code/jupp/Make-w32.sh,v 1.14 2017/01/11 21:23:52 tg Exp $
d51 1
a51 1
	rm -rf mkw32
d54 1
d66 2
a67 2
    --enable-win32reloc
make AM_CFLAGS="$extrawarnings"
@


1.15
log
@skip TERMINFO altogether on Win32 (jupp32 builds)

XXX einklich™ müßten wir sowas für alle Libraries machen
currently, if someone’s got the SELinux functions in libc, they’re fucked
@
text
@a27 2
echo "N: gcc-3.4.4-999 does not support -Wno-missing-field-initializers"
echo "N: expect warnings about those, they are known, do not report them"
@


1.14
log
@give this thing a usage and an option to not clean at the end
@
text
@d2 1
a2 1
# $MirOS: contrib/code/jupp/Make-w32.sh,v 1.10 2017/01/10 18:45:38 tg Exp $
d63 1
a63 2
    --disable-curses \
    --disable-termcap \
@


1.12
log
@cygwin32, gdb, argv[0], oh my!
@
text
@d4 7
d12 1
d15 1
a15 1
while getopts "bgn" c; do
d18 1
d21 1
a21 1
	(*)	exit 1 ;;
d107 1
a107 1
rm -rf mkw32
@


1.11
log
@…
@
text
@d62 1
a62 1
	ln -sf joe.exe jupp.exe
@


1.10
log
@more flexible, again… and a bufgix
@
text
@d2 1
a2 1
# $MirOS: contrib/code/jupp/Make-w32.sh,v 1.6 2016/10/30 02:38:34 tg Exp $
d62 2
a63 2
	ln -s joe.exe jupp.exe
	ln -s ../../jupprc .
@


1.9
log
@better in-place debugging with w32reloc
@
text
@d4 12
d17 1
a17 4
if [[ $1 = -g ]]; then
	# Debug build and no packaging
	extrawarnings="$extrawarnings -g3"
fi
d41 6
a46 2
rm -rf mkw32
mkdir mkw32{,/{build,$jtop}}
d50 1
a50 1
mksh ../../configure \
d61 1
a61 2
if [[ $1 = -g ]]; then
	# Debug build with no packaging
d63 1
a63 1
	ln -s ../../{charmaps,syntax,jmacsrc,joerc,jpicorc,jstarrc,jupprc} .
@


1.8
log
@for a debug build…
@
text
@d51 1
@


1.7
log
@this must be a build timestamp, and setup.inf must be the latest file
@
text
@d5 4
d48 5
@


1.6
log
@apply fixes from the Win32 build
@
text
@d2 1
a2 1
# $MirOS: contrib/code/jupp/Make-w32.sh,v 1.5 2016/10/30 00:34:40 tg Exp $
d61 2
a62 1
sed -b "s!@@jwin@@!$jupp!g" <../../setup.inf | while IFS= read -r line; do
@


1.5
log
@add crazy extra warnings by default; override *jupprc to *jupp32rc
@
text
@d2 1
a2 1
# $MirOS: contrib/code/jupp/Make-w32.sh,v 1.3 2016/10/29 23:44:43 tg Exp $
d6 2
a7 1
extrawarnings="$extrawarnings -Wno-missing-field-initializers"
d57 3
a59 3
	typeset -u uc
	uc=$x
	mv ../_TMP "$uc"
d61 2
a62 2
sed "s!@@jwin@@!$jupp!g" <../../setup.inf | while IFS= read -r line; do
	if [[ $line = '@@files@@*' ]]; then
d68 2
@


1.4
log
@openpty, login_tty, snprintf do not need any extra libraries,
we do not use tgetflag since we explicitly disable curses and
termcap), and there is no such thing as SELinux
@
text
@d4 7
d31 1
d42 1
a42 1
make
@


1.3
log
@first cut at win32 self-relocation
@
text
@d2 1
a2 1
# $MirOS: contrib/code/jupp/Make-w32.sh,v 1.1 2016/10/29 22:03:24 tg Exp $
d30 1
@


1.2
log
@first cut at improving things
@
text
@d8 1
a8 1
jupp=$(sed -n "/^PACKAGE_VERSION='3.1jupp\([0-9]*\)[~'].*\$/s//\1/p" configure)
d32 1
a32 1
    --enable-win32reloc=old
d39 1
a39 1
cp …/cygwin1.dll mkw32/$jtop/
d42 18
a59 3
sed "s!@@jwin@@!$jupp!g" <setup.inf >mkw32/$jtop/setup.inf
cd mkw32
chmod 444 $jtop/*
@


1.1
log
@add old way to make jupp32
@
text
@d2 1
a2 1
# $MirOS$
d4 1
d7 16
d24 1
a24 1
mksh configure \
d34 15
@

