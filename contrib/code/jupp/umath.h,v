head	1.11;
access;
symbols
	joe-3_1jupp38:1.11
	joe-3_1jupp37:1.11
	joe-3_1jupp36:1.11
	joe-3_1jupp35:1.11
	joe-3_1jupp34:1.11
	joe-3_1jupp33:1.11
	joe-3_1jupp32:1.11
	joe-2_8jupp3:1.1.21.1
	joe-3_1jupp31:1.5
	joe-3_1jupp30:1.4
	joe-3_1jupp29:1.4
	joe-3_1jupp28:1.4
	joe-3_1jupp27:1.4
	joe-3_1jupp26:1.4
	joe-3_1jupp25:1.4
	joe-3_1jupp24:1.4
	joe-3_1jupp23:1.4
	joe-3_1jupp22:1.2
	joe-3_1jupp21:1.2
	joe-3_1jupp20:1.2
	joe-3_1jupp19:1.2
	joe-3_1jupp18:1.2
	joe-3_1jupp17:1.2
	joe-2_8jupp2:1.1.21.1
	joe-3_1jupp16:1.2
	joe-3_1jupp15:1.2
	joe-3_1jupp14:1.2
	joe-3_1jupp12:1.2
	joe-3_1jupp11:1.2
	joe-2_8jupp1:1.1.21.1
	joe-3_1jupp10:1.2
	joe-3_1jupp9:1.2
	joe-3_1jupp8:1.1.201.1
	joe-3_1jupp7:1.1.201.1
	joe-3_1jupp6:1.1.201.1
	joe-3_1jupp5:1.1.201.1
	joe-3_1jupp4:1.1.201.1
	joe-2_8-msdos:1.1.21.1.0.2
	joe-2_8:1.1.21.1
	joe28:1.1.21
	joe-3_1:1.1.201.1
	tg:1.1.201;
locks; strict;
comment	@ * @;


1.11
date	2017.12.06.21.17.03;	author tg;	state Exp;
branches;
next	1.10;
commitid	1005A285E5918D423C7;

1.10
date	2017.12.02.17.00.51;	author tg;	state Exp;
branches;
next	1.9;
commitid	1005A22DC570063953B;

1.9
date	2017.12.02.05.04.28;	author tg;	state Exp;
branches;
next	1.8;
commitid	1005A22346E09CBC4DE;

1.8
date	2017.12.02.04.15.29;	author tg;	state Exp;
branches;
next	1.7;
commitid	1005A2228EC3463D689;

1.7
date	2017.12.02.02.07.36;	author tg;	state Exp;
branches;
next	1.6;
commitid	1005A220AD65C90E687;

1.6
date	2017.12.01.23.26.24;	author tg;	state Exp;
branches;
next	1.5;
commitid	1005A21E4F06CA95502;

1.5
date	2017.03.19.19.19.51;	author tg;	state Exp;
branches;
next	1.4;
commitid	10058CED9DF339F2D5D;

1.4
date	2012.12.30.17.12.37;	author tg;	state Exp;
branches;
next	1.3;
commitid	10050E0761C0C6C216C;

1.3
date	2012.12.30.17.10.58;	author tg;	state Exp;
branches;
next	1.2;
commitid	10050E075B939751F66;

1.2
date	2008.05.13.13.08.28;	author tg;	state Exp;
branches;
next	1.1;
commitid	100482992BC01EE89A1;

1.1
date	2005.02.05.00.37.13;	author tg;	state Exp;
branches
	1.1.21.1
	1.1.201.1;
next	;

1.1.21.1
date	2005.02.12.15.40.24;	author tg;	state Exp;
branches;
next	;

1.1.201.1
date	2005.02.05.00.37.13;	author tg;	state Exp;
branches;
next	;


desc
@@


1.11
log
@begin overhaul for antique/header compat:
• PARAMS begone
• libc4 ustat definition: resolve inline
• ignore HAVE_*_H for headers mksh includes unconditionally
@
text
@/*
 *	Math
 *	Copyright
 *		(C) 1992 Joseph H. Allen
 *
 *	This file is part of JOE (Joe's Own Editor)
 */
#ifndef _JOE_UMATH_H
#define _JOE_UMATH_H 1

#ifdef EXTERN_CMD_C
__IDSTRING(rcsid_umath_h, "$MirOS: contrib/code/jupp/umath.h,v 1.10 2017/12/02 17:00:51 tg Exp $");
#endif

#include <signal.h>

extern volatile sig_atomic_t merrf;
extern const unsigned char *merrt;

long calcl(BW *bw, unsigned char *s);

#if WANT_MATH
int umath(BW *bw);
int umathins(BW *bw);
int umathres(BW *bw);
#else
int unomath(BW *bw);

#define umath		unomath
#define umathins	unomath
#define umathres	unomath
#endif

#endif
@


1.10
log
@fix string name collision by prefixing the idstrings in not-.c files
@
text
@d12 1
a12 1
__IDSTRING(rcsid_umath_h, "$MirOS: contrib/code/jupp/umath.h,v 1.9 2017/12/02 05:04:28 tg Exp $");
a14 1
#ifdef HAVE_SIGNAL_H
a15 1
#endif
@


1.9
log
@idfk why mgcc(1) wants to verarsch me here…
@
text
@d12 1
a12 1
__RCSID("$MirOS: contrib/code/jupp/umath.h,v 1.7 2017/12/02 02:07:36 tg Exp $");
@


1.8
log
@first cut at fixing the klibc builds

cf. https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=852327
@
text
@d19 1
a19 1
extern volatile sig_atomic_t merrf;       
d22 2
a24 1
double calc(BW *bw, unsigned char *s);
a27 4

#define calcl(bw,s)	((long)calc((bw), (s)))
#define calcldec(bw,s)	((long)(calc((bw), (s)) - 1.0))

a28 2

long calcl(BW *bw, unsigned char *s);
d34 1
a34 3
#define calcldec(bw,s)	(calcl((bw), (s)) - 1L)

#endif /* !WANT_MATH */
@


1.7
log
@overhaul the way includes work; give jupp proper RCS IDs

(after all, empty source files are UB; win32.c is likely)
@
text
@d12 1
a12 1
__RCSID("$MirOS$");
d22 1
d31 12
@


1.6
log
@add a level of indirection: never use math’s calc() outside of umath

in the places where we used it, we now have calcl() which takes the
same arguments, evaluates its second parameter (in the context BW of
the first), but returns it as long; calcldec() subtracts 1.0 first

this confines all floating point operations into umath.?
@
text
@a0 1
/* $MirOS: contrib/code/jupp/umath.h,v 1.5 2017/03/19 19:19:51 tg Exp $ */
d11 3
a13 2
#include "config.h"
#include "types.h"
@


1.5
log
@_some_ type cleanup (time_t, sig_atomic_t)

still unsafe signal handler crap abound :(
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/jupp/umath.h,v 1.2 2008/05/13 13:08:28 tg Exp $ */
d27 3
@


1.4
log
@new bindings for math result insertion
@
text
@d15 7
a21 1
extern const unsigned char * volatile merr;
@


1.3
log
@more const cleanliness (and merr is used in a signal handler so it should be volatile), and use NULL not 0 for pointers
@
text
@d18 2
@


1.2
log
@prepare for joe-3.1jupp9:
* sync NEWS
* bump vsn in configure.ac
* tag all files with RCS ID
* sync licence template
@
text
@d1 1
a1 1
/* $MirOS$ */
d15 1
a15 1
extern unsigned char *merr;
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.21.1
log
@Import joe-2.8 sources into vendor branch so it doesn't get lost
@
text
@d1 9
a9 2
#ifndef _Imath
#define _Imath 1
d11 2
a12 1
#include "queue.h"
d14 3
a16 3
extern char *merr;
double calc();
int umath();
@


1.1.201.1
log
@JOE's Own Editor 3.1
@
text
@@
