head	1.16;
access;
symbols
	joe-3_1jupp38:1.14
	joe-3_1jupp37:1.14
	joe-3_1jupp36:1.14
	joe-3_1jupp35:1.14
	joe-3_1jupp34:1.14
	joe-3_1jupp33:1.14
	joe-3_1jupp32:1.14
	joe-3_1jupp31:1.7
	joe-3_1jupp30:1.7
	joe-3_1jupp29:1.7
	joe-3_1jupp28:1.7
	joe-3_1jupp27:1.7
	joe-3_1jupp26:1.5
	joe-3_1jupp25:1.5
	joe-3_1jupp24:1.5
	joe-3_1jupp23:1.5
	joe-3_1jupp22:1.5
	joe-3_1jupp21:1.5
	joe-3_1jupp20:1.5
	joe-3_1jupp19:1.5
	joe-3_1jupp18:1.5
	joe-3_1jupp17:1.5
	joe-3_1jupp16:1.5
	joe-3_1jupp15:1.4
	joe-3_1jupp14:1.2
	joe-3_1jupp12:1.2
	joe-3_1jupp11:1.2
	joe-3_1jupp10:1.2
	joe-3_1jupp9:1.2
	joe-3_1jupp8:1.1.201.1
	joe-3_1jupp7:1.1.201.1
	joe-3_1jupp6:1.1.201.1
	joe-3_1jupp5:1.1.201.1
	joe-3_1jupp4:1.1.201.1
	joe-3_1:1.1.201.1
	tg:1.1.201;
locks; strict;
comment	@ * @;


1.16
date	2020.01.09.14.39.14;	author tg;	state Exp;
branches;
next	1.15;
commitid	1005E173B1E350FEBC1;

1.15
date	2020.01.04.00.04.13;	author tg;	state Exp;
branches;
next	1.14;
commitid	1005E0FD68675B16214;

1.14
date	2017.12.08.02.17.21;	author tg;	state Exp;
branches;
next	1.13;
commitid	1005A29F64A06DEB239;

1.13
date	2017.12.06.21.16.55;	author tg;	state Exp;
branches;
next	1.12;
commitid	1005A285E5918D423C7;

1.12
date	2017.12.04.22.15.38;	author tg;	state Exp;
branches;
next	1.11;
commitid	1005A25C91E16B3B365;

1.11
date	2017.12.03.02.36.01;	author tg;	state Exp;
branches;
next	1.10;
commitid	1005A2363204B0C4612;

1.10
date	2017.12.02.17.00.48;	author tg;	state Exp;
branches;
next	1.9;
commitid	1005A22DC570063953B;

1.9
date	2017.12.02.02.07.26;	author tg;	state Exp;
branches;
next	1.8;
commitid	1005A220AD65C90E687;

1.8
date	2017.12.02.00.16.43;	author tg;	state Exp;
branches;
next	1.7;
commitid	1005A21F0FB306AFC87;

1.7
date	2014.06.26.18.15.17;	author tg;	state Exp;
branches;
next	1.6;
commitid	10053AC63477EECD548;

1.6
date	2013.12.01.00.19.08;	author tg;	state Exp;
branches;
next	1.5;
commitid	100529A80461C27C26A;

1.5
date	2011.07.16.21.57.56;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004E2209506F4A1334;

1.4
date	2011.07.02.22.49.12;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004E0FA07535C20AF8;

1.3
date	2011.07.02.22.43.07;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004E0F9F09240E9C9C;

1.2
date	2008.05.13.13.08.21;	author tg;	state Exp;
branches;
next	1.1;
commitid	100482992BC01EE89A1;

1.1
date	2005.02.05.00.37.07;	author tg;	state Exp;
branches
	1.1.201.1;
next	;

1.1.201.1
date	2005.02.05.00.37.07;	author tg;	state Exp;
branches;
next	;


desc
@@


1.16
log
@https://github.com/openwrt/packages/issues/10841 indicates this is a GCC 8+ bug
@
text
@#ifndef _JOE_CONFIG_H
#define _JOE_CONFIG_H

/* see bottom for RCSID on this one */

#ifndef TEST
#include "autoconf.h"
#else
#define HAVE_CTIME 1
#define HAVE_STRLCAT 1
#define HAVE_STRLCPY 1
#define HAVE_DECL_STRLCAT 1
#define HAVE_DECL_STRLCPY 1
#define HAVE_GETCWD 1
#define HAVE_MKSTEMP 1
#define HAVE_SNPRINTF 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_DIRENT_H 1
#define HAVE_LIMITS_H 1
#define HAVE_SIGNAL_H 1
#define HAVE_STDLIB_H 1
#define HAVE_UNISTD_H 1
#define RETSIGTYPE void
#endif

#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif

#ifdef HAVE_SNPRINTF

#define joe_snprintf_0(buf,len,fmt) snprintf((buf),(len),(fmt))
#define joe_snprintf_1(buf,len,fmt,a) snprintf((buf),(len),(fmt),(a))
#define joe_snprintf_2(buf,len,fmt,a,b) snprintf((buf),(len),(fmt),(a),(b))
#define joe_snprintf_3(buf,len,fmt,a,b,c) snprintf((buf),(len),(fmt),(a),(b),(c))
#define joe_snprintf_4(buf,len,fmt,a,b,c,d) snprintf((buf),(len),(fmt),(a),(b),(c),(d))
#define joe_snprintf_5(buf,len,fmt,a,b,c,d,e) snprintf((buf),(len),(fmt),(a),(b),(c),(d),(e))
#define joe_snprintf_6(buf,len,fmt,a,b,c,d,e,f) snprintf((buf),(len),(fmt),(a),(b),(c),(d),(e),(f))
#define joe_snprintf_7(buf,len,fmt,a,b,c,d,e,f,g) snprintf((buf),(len),(fmt),(a),(b),(c),(d),(e),(f),(g))
#define joe_snprintf_8(buf,len,fmt,a,b,c,d,e,f,g,h) snprintf((buf),(len),(fmt),(a),(b),(c),(d),(e),(f),(g),(h))
#define joe_snprintf_9(buf,len,fmt,a,b,c,d,e,f,g,h,i) snprintf((buf),(len),(fmt),(a),(b),(c),(d),(e),(f),(g),(h),(i))
#define joe_snprintf_10(buf,len,fmt,a,b,c,d,e,f,g,h,i,j) snprintf((buf),(len),(fmt),(a),(b),(c),(d),(e),(f),(g),(h),(i),(j))

#else

#define joe_snprintf_0(buf,len,fmt) sprintf((buf),(fmt))
#define joe_snprintf_1(buf,len,fmt,a) sprintf((buf),(fmt),(a))
#define joe_snprintf_2(buf,len,fmt,a,b) sprintf((buf),(fmt),(a),(b))
#define joe_snprintf_3(buf,len,fmt,a,b,c) sprintf((buf),(fmt),(a),(b),(c))
#define joe_snprintf_4(buf,len,fmt,a,b,c,d) sprintf((buf),(fmt),(a),(b),(c),(d))
#define joe_snprintf_5(buf,len,fmt,a,b,c,d,e) sprintf((buf),(fmt),(a),(b),(c),(d),(e))
#define joe_snprintf_6(buf,len,fmt,a,b,c,d,e,f) sprintf((buf),(fmt),(a),(b),(c),(d),(e),(f))
#define joe_snprintf_7(buf,len,fmt,a,b,c,d,e,f,g) sprintf((buf),(fmt),(a),(b),(c),(d),(e),(f),(g))
#define joe_snprintf_8(buf,len,fmt,a,b,c,d,e,f,g,h) sprintf((buf),(fmt),(a),(b),(c),(d),(e),(f),(g),(h))
#define joe_snprintf_9(buf,len,fmt,a,b,c,d,e,f,g,h,i) sprintf((buf),(fmt),(a),(b),(c),(d),(e),(f),(g),(h),(i))
#define joe_snprintf_10(buf,len,fmt,a,b,c,d,e,f,g,h,i,j) sprintf((buf),(fmt),(a),(b),(c),(d),(e),(f),(g),(h),(i),(j))

#endif

#include <stdio.h>
#ifndef EOF
#define EOF (-1)
#endif
#define NO_MORE_DATA EOF

#ifdef PAGE_SIZE
#define PGSIZE PAGE_SIZE
#else
#define PGSIZE 4096
#endif
#define SEGSIZ PGSIZE
#define LPGSIZE 12
#define ILIMIT (PGSIZE*1024)
#define HTSIZE 2048

#if !defined(__GNUC__) && !defined(__attribute__)
#define __attribute__(p) /* nothing */
#endif

#ifdef HAVE_GCC_ATTRIBUTE_BOUNDED
#define ATTR_BOUNDED(p)	__attribute__((__bounded__ p))
#else
#define ATTR_BOUNDED(p)	/* nothing */
#endif

#if !HAVE_DECL_STRLCAT
size_t strlcat(char *, const char *, size_t)
    ATTR_BOUNDED((__string__, 1, 3));
#endif
#if !HAVE_DECL_STRLCPY
size_t strlcpy(char *, const char *, size_t)
    ATTR_BOUNDED((__string__, 1, 3));
#endif

/* from mksh */

#define BIT(i)		(1U << (i))
#define NELEM(a)	(sizeof(a) / sizeof((a)[0]))

#if defined(MirBSD) && (MirBSD >= 0x09A1) && \
    defined(__ELF__) && defined(__GNUC__) && \
    !defined(__llvm__) && !defined(__NWCC__)
/*
 * We got usable __IDSTRING __COPYRIGHT __RCSID __SCCSID macros
 * which work for all cases; no need to redefine them using the
 * "portable" macros from below when we might have the "better"
 * gcc+ELF specific macros or other system dependent ones.
 */
#else
#undef __IDSTRING
#undef __IDSTRING_CONCAT
#undef __IDSTRING_EXPAND
#undef __COPYRIGHT
#undef __RCSID
#undef __SCCSID
#define __IDSTRING_CONCAT(l,p)		__LINTED__ ## l ## _ ## p
#define __IDSTRING_EXPAND(l,p)		__IDSTRING_CONCAT(l,p)
#ifdef MKSH_DONT_EMIT_IDSTRING
#define __IDSTRING(prefix, string)	/* nothing */
#elif defined(__ELF__) && defined(__GNUC__) && \
    !(defined(__GNUC__) && defined(__mips16) && (__GNUC__ >= 8)) && \
    !defined(__llvm__) && !defined(__NWCC__) && !defined(NO_ASM)
#define __IDSTRING(prefix, string)				\
	__asm__(".section .comment"				\
	"\n	.ascii	\"@@(\"\"#)" #prefix ": \""		\
	"\n	.asciz	\"" string "\""				\
	"\n	.previous")
#else
#define __IDSTRING(prefix, string)				\
	static const char __IDSTRING_EXPAND(__LINE__,prefix) []	\
	    __attribute__((__used__)) = "@@(""#)" #prefix ": " string
#endif
#define __COPYRIGHT(x)		__IDSTRING(copyright,x)
#define __RCSID(x)		__IDSTRING(rcsid,x)
#define __SCCSID(x)		__IDSTRING(sccsid,x)
#endif

#ifdef EXTERN
__IDSTRING(rcsid_config_h, "$MirOS: contrib/code/jupp/config.h,v 1.12 2017/12/04 22:15:38 tg Exp $");
#endif

#endif /* ifndef _JOE_CONFIG_H */
@


1.15
log
@work around a GCC asmgen bug

cf. https://github.com/openwrt/packages/issues/10841
@
text
@d122 1
a122 1
    !(defined(__GNUC__) && defined(__mips16)) && \
@


1.14
log
@more small tweaks
@
text
@d122 1
@


1.13
log
@begin overhaul for antique/header compat:
• PARAMS begone
• libc4 ustat definition: resolve inline
• ignore HAVE_*_H for headers mksh includes unconditionally
@
text
@d63 1
a63 1
#define EOF -1
@


1.12
log
@clean up some unused/MS-DOS® stuff
@
text
@a24 1
#define PARAMS(protos) protos
d139 1
a139 1
__IDSTRING(rcsid_config_h, "$MirOS: contrib/code/jupp/config.h,v 1.10 2017/12/02 17:00:48 tg Exp $");
@


1.11
log
@first cut at getting rid of stdio: scanf half
@
text
@a67 19
#if defined __MSDOS__ && SIZEOF_INT == 2 /* real mode ms-dos compilers */
#if SIZEOF_VOID_P == 4 /* real mode ms-dos compilers with 'far' memory model or something like that */
#define physical(a)  (((unsigned long)(a)&0xFFFF)+(((unsigned long)(a)&0xFFFF0000)>>12))
#define normalize(a) ((void *)(((unsigned long)(a)&0xFFFF000F)+(((unsigned long)(a)&0x0000FFF0)<<12)))
#else
#define physical(a) ((unsigned long)(a))
#define normalize(a) (a)
#endif /* sizeof(void *) == 4 */

#define SEGSIZ 1024
#define PGSIZE 1024
#define LPGSIZE 10
#define ILIMIT (PGSIZE*96L)
#define HTSIZE 128

#else /* not real mode ms-dos */

#define physical(a) ((unsigned long)(a))
#define normalize(a) (a)
a77 2
#endif /* real mode ms-dos */

a81 2
#define ATTR_UNUSED	__attribute__((__unused__))

@


1.10
log
@fix string name collision by prefixing the idstrings in not-.c files
@
text
@d9 3
d163 1
a163 1
__IDSTRING(rcsid_config_h, "$MirOS: contrib/code/jupp/config.h,v 1.9 2017/12/02 02:07:26 tg Exp $");
@


1.9
log
@overhaul the way includes work; give jupp proper RCS IDs

(after all, empty source files are UB; win32.c is likely)
@
text
@d160 1
a160 1
__RCSID("$MirOS: src/bin/mksh/sh.h,v 1.849 2017/10/17 23:45:19 tg Exp $");
@


1.8
log
@what a mess, indeed!

use LONG_MAX instead of homegrown MAXINT/MAXLONG
@
text
@a0 2
/* $MirOS: contrib/code/jupp/config.h,v 1.6 2013/12/01 00:19:08 tg Exp $ */

d4 2
d25 4
d117 46
@


1.7
log
@make everything with a main() compile, too
@
text
@a54 3
#define MAXINT  ((((unsigned int)-1)/2)-1)
#define MAXLONG ((((unsigned long)-1L)/2)-1)

@


1.6
log
@Finally! Convert jupp’s i18n code to something better
and update the nōn-wcwidth parts as well… since they
were… at best(!)… Unicode 3.0.0

This also makes them const (saves more RAM, yay!) and
uses more sane algorithms for tolower/toupper (static
initialisation beats initialisation on first use, for
things can be even more .rodata then!).
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/jupp/config.h,v 1.5 2011/07/16 21:57:56 tg Exp $ */
d11 11
@


1.5
log
@fixes from packages.debian.org/joe are merged; now do a warning cleanup
(although some are only a workaround, and the joe code gives the creeps)
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/jupp/config.h,v 1.4 2011/07/02 22:49:12 tg Exp $ */
d6 1
d8 5
@


1.4
log
@mangle bounded attribute as well
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/jupp/config.h,v 1.3 2011/07/02 22:43:07 tg Exp $ */
d90 9
@


1.3
log
@add ATTR_UNUSED definition, maybe helps later
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/jupp/config.h,v 1.2 2008/05/13 13:08:21 tg Exp $ */
d78 8
a85 2
#ifdef __GNUC__
#define ATTR_UNUSED	__attribute__((unused))
d87 1
a87 1
#define ATTR_UNUSED	/* nothing */
@


1.2
log
@prepare for joe-3.1jupp9:
* sync NEWS
* bump vsn in configure.ac
* tag all files with RCS ID
* sync licence template
@
text
@d1 1
a1 1
/* $MirOS$ */
d78 6
@


1.1
log
@Initial revision
@
text
@d1 2
@


1.1.201.1
log
@JOE's Own Editor 3.1
@
text
@@
