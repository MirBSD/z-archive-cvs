head	1.5;
access;
symbols
	joe-3_1jupp38:1.5
	joe-3_1jupp37:1.5
	joe-3_1jupp36:1.5
	joe-3_1jupp35:1.5
	joe-3_1jupp34:1.5
	joe-3_1jupp33:1.5
	joe-3_1jupp32:1.5
	joe-2_8jupp3:1.1.21.1
	joe-3_1jupp31:1.2
	joe-3_1jupp30:1.2
	joe-3_1jupp29:1.2
	joe-3_1jupp28:1.2
	joe-3_1jupp27:1.2
	joe-3_1jupp26:1.2
	joe-3_1jupp25:1.2
	joe-3_1jupp24:1.2
	joe-3_1jupp23:1.2
	joe-3_1jupp22:1.2
	joe-3_1jupp21:1.2
	joe-3_1jupp20:1.2
	joe-3_1jupp19:1.2
	joe-3_1jupp18:1.2
	joe-3_1jupp17:1.2
	joe-2_8jupp2:1.1.21.1
	joe-3_1jupp16:1.2
	joe-3_1jupp15:1.2
	joe-3_1jupp14:1.2
	joe-3_1jupp12:1.2
	joe-3_1jupp11:1.2
	joe-2_8jupp1:1.1.21.1
	joe-3_1jupp10:1.2
	joe-3_1jupp9:1.2
	joe-3_1jupp8:1.1.201.1
	joe-3_1jupp7:1.1.201.1
	joe-3_1jupp6:1.1.201.1
	joe-3_1jupp5:1.1.201.1
	joe-3_1jupp4:1.1.201.1
	joe-2_8-msdos:1.1.21.1.0.2
	joe-2_8:1.1.21.1
	joe28:1.1.21
	joe-3_1:1.1.201.1
	tg:1.1.201;
locks; strict;
comment	@ * @;


1.5
date	2017.12.06.21.17.03;	author tg;	state Exp;
branches;
next	1.4;
commitid	1005A285E5918D423C7;

1.4
date	2017.12.02.17.00.51;	author tg;	state Exp;
branches;
next	1.3;
commitid	1005A22DC570063953B;

1.3
date	2017.12.02.02.07.36;	author tg;	state Exp;
branches;
next	1.2;
commitid	1005A220AD65C90E687;

1.2
date	2008.05.13.13.08.29;	author tg;	state Exp;
branches;
next	1.1;
commitid	100482992BC01EE89A1;

1.1
date	2005.02.05.00.37.13;	author tg;	state Exp;
branches
	1.1.21.1
	1.1.201.1;
next	;

1.1.21.1
date	2005.02.12.15.40.25;	author tg;	state Exp;
branches;
next	;

1.1.201.1
date	2005.02.05.00.37.13;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@begin overhaul for antique/header compat:
• PARAMS begone
• libc4 ustat definition: resolve inline
• ignore HAVE_*_H for headers mksh includes unconditionally
@
text
@/*
 *	UNDO system
 *	Copyright
 *		(C) 1992 Joseph H. Allen
 *
 *	This file is part of JOE (Joe's Own Editor)
 */
#ifndef _JOE_UNDO_H
#define _JOE_UNDO_H 1

#ifdef EXTERN_B_C
__IDSTRING(rcsid_undo_h, "$MirOS: contrib/code/jupp/undo.h,v 1.4 2017/12/02 17:00:51 tg Exp $");
#endif

extern int inundo;
extern int justkilled;

UNDO *undomk(B *b);
void undorm(UNDO *undo);
int uundo(BW *bw);
int uredo(BW *bw);
void umclear(void);
void undomark(void);
void undoins(UNDO *undo, P *p, long int size);
void undodel(UNDO *undo, long int where, B *b);
int uyank(BW *bw);
int uyankpop(BW *bw);
int uyapp(BW *bw);
int unotmod(BW *bw);
int ucopy(BW *bw);

#endif
@


1.4
log
@fix string name collision by prefixing the idstrings in not-.c files
@
text
@d12 1
a12 1
__IDSTRING(rcsid_undo_h, "$MirOS: contrib/code/jupp/undo.h,v 1.3 2017/12/02 02:07:36 tg Exp $");
d18 13
a30 13
UNDO *undomk PARAMS((B *b));
void undorm PARAMS((UNDO *undo));
int uundo PARAMS((BW *bw));
int uredo PARAMS((BW *bw));
void umclear PARAMS((void));
void undomark PARAMS((void));
void undoins PARAMS((UNDO *undo, P *p, long int size));
void undodel PARAMS((UNDO *undo, long int where, B *b));
int uyank PARAMS((BW *bw));
int uyankpop PARAMS((BW *bw));
int uyapp PARAMS((BW *bw));
int unotmod PARAMS((BW *bw));
int ucopy PARAMS((BW *bw));
@


1.3
log
@overhaul the way includes work; give jupp proper RCS IDs

(after all, empty source files are UB; win32.c is likely)
@
text
@d12 1
a12 1
__RCSID("$MirOS$");
@


1.2
log
@prepare for joe-3.1jupp9:
* sync NEWS
* bump vsn in configure.ac
* tag all files with RCS ID
* sync licence template
@
text
@a0 1
/* $MirOS$ */
d11 3
a13 2
#include "config.h"
#include "types.h"
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.21.1
log
@Import joe-2.8 sources into vendor branch so it doesn't get lost
@
text
@d1 9
a9 2
#ifndef _Iundo
#define _Iundo 1
d12 1
a12 31
#include "queue.h"
#include "b.h"

#define UNDOKEEP 100

typedef struct undo UNDO;
typedef struct undorec UNDOREC;

struct undorec
 {
 LINK(UNDOREC) link;
 UNDOREC *unit;
 int min;
 int changed;		/* Status of modified flag before this record */
 long where;		/* Buffer address of this record */
 long len;		/* Length of insert or delete */
 int del;		/* Set if this is a delete */
 B *big;		/* Set to buffer containing a large amount of deleted data */
 char *small;		/* Set to malloc block containg a small amount of deleted data */
 };

struct undo
 {
 LINK(UNDO) link;
 B *b;
 int nrecs;
 UNDOREC recs;
 UNDOREC *ptr;
 UNDOREC *first;
 UNDOREC *last;
 };
d17 13
a29 13
UNDO *undomk();
void undorm();
int uundo();
int uredo();
void umclear();
void undomark();
void undoins();
void undodel();
int uyank();
int uyankpop();
int uyapp();
int unotmod();
int ucopy();
@


1.1.201.1
log
@JOE's Own Editor 3.1
@
text
@@
