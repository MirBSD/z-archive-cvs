head	1.6;
access;
symbols
	joe-3_1jupp38:1.6
	joe-3_1jupp37:1.5
	joe-3_1jupp36:1.5
	joe-3_1jupp35:1.5
	joe-3_1jupp34:1.5
	joe-3_1jupp33:1.5
	joe-3_1jupp32:1.5
	joe-2_8jupp3:1.1.21.1
	joe-3_1jupp31:1.3
	joe-3_1jupp30:1.3
	joe-3_1jupp29:1.2
	joe-3_1jupp28:1.2
	joe-3_1jupp27:1.2
	joe-3_1jupp26:1.2
	joe-3_1jupp25:1.2
	joe-3_1jupp24:1.2
	joe-3_1jupp23:1.2
	joe-3_1jupp22:1.2
	joe-3_1jupp21:1.2
	joe-3_1jupp20:1.2
	joe-3_1jupp19:1.2
	joe-3_1jupp18:1.2
	joe-3_1jupp17:1.2
	joe-2_8jupp2:1.1.21.1
	joe-3_1jupp16:1.2
	joe-3_1jupp15:1.2
	joe-3_1jupp14:1.2
	joe-3_1jupp12:1.2
	joe-3_1jupp11:1.2
	joe-2_8jupp1:1.1.21.1
	joe-3_1jupp10:1.2
	joe-3_1jupp9:1.2
	joe-3_1jupp8:1.1.201.1
	joe-3_1jupp7:1.1.201.1
	joe-3_1jupp6:1.1.201.1
	joe-3_1jupp5:1.1.201.1
	joe-3_1jupp4:1.1.201.1
	joe-2_8-msdos:1.1.21.1.0.2
	joe-2_8:1.1.21.1
	joe28:1.1.21
	joe-3_1:1.1.201.1
	tg:1.1.201;
locks; strict;
comment	@ * @;


1.6
date	2018.11.11.18.15.37;	author tg;	state Exp;
branches;
next	1.5;
commitid	1005BE871D325833018;

1.5
date	2017.12.08.02.00.40;	author tg;	state Exp;
branches;
next	1.4;
commitid	1005A29F2506E789D2B;

1.4
date	2017.12.02.02.07.30;	author tg;	state Exp;
branches;
next	1.3;
commitid	1005A220AD65C90E687;

1.3
date	2017.01.10.19.16.27;	author tg;	state Exp;
branches;
next	1.2;
commitid	1005875332028CA2A36;

1.2
date	2008.05.13.13.08.24;	author tg;	state Exp;
branches;
next	1.1;
commitid	100482992BC01EE89A1;

1.1
date	2005.02.05.00.37.24;	author tg;	state Exp;
branches
	1.1.21.1
	1.1.201.1;
next	;

1.1.21.1
date	2005.02.12.15.40.22;	author tg;	state Exp;
branches;
next	;

1.1.201.1
date	2005.02.05.00.37.24;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@introduce bunch of Coverity fixes

tested/developed up to https://github.com/mirabilos/jupp/commit/19cfaae48e3d9862833eb4e89f05c1083401bccf
@
text
@/*
 * 	Doubly linked list primitives
 *	Copyright
 *		(C) 1992 Joseph H. Allen
 *
 *	This file is part of JOE (Joe's Own Editor)
 */
#include "config.h"
#include "types.h"

__RCSID("$MirOS: contrib/code/jupp/queue.c,v 1.5 2017/12/08 02:00:40 tg Exp $");

#include <stdlib.h>

#include "queue.h"
#include "utils.h"

void *QUEUE;
void *ITEM;
void *LAST;

void *
alitem(void *list, size_t itemsize)
{
	STDITEM	*freelist = (STDITEM *)list;

	if (qempty(STDITEM, link, freelist)) {
		size_t num = 16;
		unsigned char *i = malloc(itemsize * num);

		while (num--) {
			enquef(STDITEM, link, freelist, i);
			i += itemsize;
		}
	}
	return (void *)deque_f(STDITEM, link, freelist->link.prev);
}

void frchn(void *list, void *ch)
{
	STDITEM *freelist = (STDITEM *)list;
	STDITEM *chn = (STDITEM *)ch;
	STDITEM *i;

	if ((i = chn->link.prev) != chn) {
		deque(STDITEM, link, chn);
		splicef(STDITEM, link, freelist, i);
	}
}
@


1.5
log
@don’t box malloc/calloc/realloc/free; don’t cast malloc result; order calloc args
@
text
@d11 1
a11 1
__RCSID("$MirOS: contrib/code/jupp/queue.c,v 1.4 2017/12/02 02:07:30 tg Exp $");
d22 2
a23 1
void *alitem(void *list, int itemsize)
d28 2
a29 2
		STDITEM *i = malloc(itemsize * 16);
		STDITEM *z = (STDITEM *)((unsigned char *)i + itemsize * 16);
d31 1
a31 1
		while (i != z) {
d33 1
a33 1
			i = (STDITEM *)((unsigned char *)i + itemsize);
@


1.4
log
@overhaul the way includes work; give jupp proper RCS IDs

(after all, empty source files are UB; win32.c is likely)
@
text
@d11 1
a11 1
__RCSID("$MirOS$");
d27 2
a28 2
		STDITEM *i = (STDITEM *) joe_malloc(itemsize * 16);
		STDITEM *z = (STDITEM *) ((unsigned char *) i + itemsize * 16);
d32 1
a32 1
			i = (STDITEM *) ((unsigned char *) i + itemsize);
d35 1
a35 1
	return (void *) deque_f(STDITEM, link, freelist->link.prev);
@


1.3
log
@these now all need <stdlib.h>
@
text
@a0 1
/* $MirOS: contrib/code/jupp/queue.c,v 1.2 2008/05/13 13:08:24 tg Exp $ */
d11 2
@


1.2
log
@prepare for joe-3.1jupp9:
* sync NEWS
* bump vsn in configure.ac
* tag all files with RCS ID
* sync licence template
@
text
@d1 1
a1 1
/* $MirOS$ */
d12 2
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.21.1
log
@Import joe-2.8 sources into vendor branch so it doesn't get lost
@
text
@d1 9
a9 4
/* Doubly linked list primitives
   Copyright (C) 1992 Joseph H. Allen

This file is part of JOE (Joe's Own Editor)
a10 14
JOE is free software; you can redistribute it and/or modify it under the 
terms of the GNU General Public License as published by the Free Software 
Foundation; either version 1, or (at your option) any later version.  

JOE is distributed in the hope that it will be useful, but WITHOUT ANY 
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
details.  

You should have received a copy of the GNU General Public License along with 
JOE; see the file COPYING.  If not, write to the Free Software Foundation, 
675 Mass Ave, Cambridge, MA 02139, USA.  */ 

#include "config.h"
d12 1
d18 27
a44 32
typedef struct stditem STDITEM;
struct stditem
 {
 LINK(STDITEM) link;
 };

void *alitem(freelist,itemsize)
STDITEM *freelist;
 {
 if(qempty(STDITEM,link,freelist))
  {
  STDITEM *i=(STDITEM *)malloc(itemsize*16);
  STDITEM *z=(STDITEM *)((char *)i+itemsize*16);
  while(i!=z)
   {
   enquef(STDITEM,link,freelist,i);
   i=(STDITEM *)((char *)i+itemsize);
   }
  }
 return (void *)deque(STDITEM,link,freelist->link.prev);
 }

void frchn(freelist,chn)
STDITEM *freelist, *chn;
 {
 STDITEM *i;
 if((i=chn->link.prev)!=chn)
  {
  deque(STDITEM,link,chn);
  splicef(STDITEM,link,freelist,i);
  }
 }
@


1.1.201.1
log
@JOE's Own Editor 3.1
@
text
@@
