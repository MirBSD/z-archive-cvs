head	1.10;
access;
symbols
	joe-3_1jupp38:1.10
	joe-3_1jupp37:1.10
	joe-3_1jupp36:1.8
	joe-3_1jupp35:1.8
	joe-3_1jupp34:1.8
	joe-3_1jupp33:1.8
	joe-3_1jupp32:1.8
	joe-3_1jupp31:1.4
	joe-3_1jupp30:1.4
	joe-3_1jupp29:1.4
	joe-3_1jupp28:1.4
	joe-3_1jupp27:1.4
	joe-3_1jupp26:1.4
	joe-3_1jupp25:1.3
	joe-3_1jupp24:1.3
	joe-3_1jupp23:1.3
	joe-3_1jupp22:1.3
	joe-3_1jupp21:1.3
	joe-3_1jupp20:1.3
	joe-3_1jupp19:1.3
	joe-3_1jupp18:1.3
	joe-3_1jupp17:1.3
	joe-3_1jupp16:1.3
	joe-3_1jupp15:1.3
	joe-3_1jupp14:1.3
	joe-3_1jupp12:1.2
	joe-3_1jupp11:1.2
	joe-3_1jupp10:1.2
	joe-3_1jupp9:1.2
	joe-3_1jupp8:1.1.201.1
	joe-3_1jupp7:1.1.201.1
	joe-3_1jupp6:1.1.201.1
	joe-3_1jupp5:1.1.201.1
	joe-3_1jupp4:1.1.201.1
	joe-3_1:1.1.201.1
	tg:1.1.201;
locks; strict;
comment	@ * @;


1.10
date	2018.08.10.02.53.45;	author tg;	state Exp;
branches;
next	1.9;
commitid	1005B6CFE0B5BDFE404;

1.9
date	2018.06.28.01.18.34;	author tg;	state Exp;
branches;
next	1.8;
commitid	1005B34377445239827;

1.8
date	2017.12.06.23.02.08;	author tg;	state Exp;
branches;
next	1.7;
commitid	1005A2876FC4FFE7EF5;

1.7
date	2017.12.06.21.17.04;	author tg;	state Exp;
branches;
next	1.6;
commitid	1005A285E5918D423C7;

1.6
date	2017.12.02.17.00.52;	author tg;	state Exp;
branches;
next	1.5;
commitid	1005A22DC570063953B;

1.5
date	2017.12.02.02.07.37;	author tg;	state Exp;
branches;
next	1.4;
commitid	1005A220AD65C90E687;

1.4
date	2013.11.07.21.50.36;	author tg;	state Exp;
branches;
next	1.3;
commitid	100527C0B43044C6E4A;

1.3
date	2010.04.08.15.31.06;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004BBDF6C54CC9A0DB;

1.2
date	2008.05.13.13.08.30;	author tg;	state Exp;
branches;
next	1.1;
commitid	100482992BC01EE89A1;

1.1
date	2005.02.05.00.37.17;	author tg;	state Exp;
branches
	1.1.201.1;
next	;

1.1.201.1
date	2005.02.05.00.37.17;	author tg;	state Exp;
branches;
next	;


desc
@@


1.10
log
@same as in commitid 1005B6CF36E3932B560, plus assorted cleanup
@
text
@/*
 *	UTF-8 Utilities
 *	Copyright
 *		(C) 2004 Joseph H. Allen
 *
 *	This file is part of JOE (Joe's Own Editor)
 */
#ifndef _Iutf8
#define _Iutf8 1

#ifdef EXTERN
__IDSTRING(rcsid_utf8_h, "$MirOS: contrib/code/jupp/utf8.h,v 1.9 2018/06/28 01:18:34 tg Exp $");
#endif

#include "i18n.h"

/* UTF-8 Encoder
 *
 * c is a UCS character.
 * buf is 7 byte buffer- utf-8 coded character is written to this followed by a 0 termination.
 * returns length (not including terminator).
 */

int utf8_encode(unsigned char *buf,int c);

/* UTF-8 decoder state machine */

struct utf8_sm {
	unsigned char buf[8];	/* Record of sequence */
	int ptr;		/* Record pointer */
	int state;		/* Current state.  0 = idle, anything else is no. of chars left in sequence */
	int accu;		/* Character accumulator */
	int minv;		/* Minimum value, for decoder */
};

/* UTF-8 Decoder
 *
 * Returns 0 - 7FFFFFFF: decoded character
 *                   -1: character accepted, nothing decoded yet.
 *                   -2: incomplete sequence
 *                   -3: no sequence started, but character is between 128 - 191, 254 or 255
 */

int utf8_decode(struct utf8_sm *utf8_sm,unsigned char c);

int utf8_decode_string(unsigned char *s);

int utf8_decode_fwrd(unsigned char **p,int *plen);

/* Initialize state machine */

void utf8_init(struct utf8_sm *utf8_sm);

void joe_locale(void);
void to_utf8(struct charmap *map,unsigned char *s,int c);
int from_utf8(struct charmap *map,unsigned char *s);

extern int utf8;

int mk_wcwidth(int wide,int c);

extern struct charmap *locale_map;	/* Default bytemap of terminal */
extern struct charmap *utf8_map;	/* Bytemap for UTF-8 */

#endif
@


1.9
log
@fix (and harmonise!) some Unicode decoding issues during yak shaving
@
text
@d12 1
a12 1
__IDSTRING(rcsid_utf8_h, "$MirOS: contrib/code/jupp/utf8.h,v 1.7 2017/12/06 21:17:04 tg Exp $");
d19 1
a19 1
 * c is unicode character.
@


1.8
log
@lots of fixes related to prototyping
@
text
@d33 1
@


1.7
log
@begin overhaul for antique/header compat:
• PARAMS begone
• libc4 ustat definition: resolve inline
• ignore HAVE_*_H for headers mksh includes unconditionally
@
text
@d12 1
a12 1
__IDSTRING(rcsid_utf8_h, "$MirOS: contrib/code/jupp/utf8.h,v 1.6 2017/12/02 17:00:52 tg Exp $");
d53 1
a53 1
void joe_locale();
@


1.6
log
@fix string name collision by prefixing the idstrings in not-.c files
@
text
@d12 1
a12 1
__IDSTRING(rcsid_utf8_h, "$MirOS: contrib/code/jupp/utf8.h,v 1.5 2017/12/02 02:07:37 tg Exp $");
d24 1
a24 1
int utf8_encode PARAMS((unsigned char *buf,int c));
d43 1
a43 1
int utf8_decode PARAMS((struct utf8_sm *utf8_sm,unsigned char c));
d45 1
a45 1
int utf8_decode_string PARAMS((unsigned char *s));
d47 1
a47 1
int utf8_decode_fwrd PARAMS((unsigned char **p,int *plen));
d51 1
a51 1
void utf8_init PARAMS((struct utf8_sm *utf8_sm));
d54 2
a55 2
void to_utf8 PARAMS((struct charmap *map,unsigned char *s,int c));
int from_utf8 PARAMS((struct charmap *map,unsigned char *s));
d59 1
a59 1
int mk_wcwidth PARAMS((int wide,int c));
@


1.5
log
@overhaul the way includes work; give jupp proper RCS IDs

(after all, empty source files are UB; win32.c is likely)
@
text
@d12 1
a12 1
__RCSID("$MirOS$");
@


1.4
log
@Update “visible spaces” while typing and fix it for nōn-UTF8 files; also rid some of the assumptions that all charmaps have tab, space at same positions
@
text
@a0 1
/* $MirOS: contrib/code/jupp/utf8.h,v 1.3 2010/04/08 15:31:06 tg Exp $ */
d11 3
a13 2
#include "config.h"
#include "types.h"
@


1.3
log
@Add --disable-getpwnam and clean up warnings
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/jupp/utf8.h,v 1.2 2008/05/13 13:08:30 tg Exp $ */
d62 1
@


1.2
log
@prepare for joe-3.1jupp9:
* sync NEWS
* bump vsn in configure.ac
* tag all files with RCS ID
* sync licence template
@
text
@d1 1
a1 1
/* $MirOS$ */
a58 1
int unictrl PARAMS((int ucs));
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.201.1
log
@JOE's Own Editor 3.1
@
text
@@
