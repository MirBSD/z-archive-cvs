head	1.8;
access;
symbols
	joe-3_1jupp38:1.8
	joe-3_1jupp37:1.8
	joe-3_1jupp36:1.8
	joe-3_1jupp35:1.8
	joe-3_1jupp34:1.8
	joe-3_1jupp33:1.8
	joe-3_1jupp32:1.7
	joe-2_8jupp3:1.1.21.1
	joe-3_1jupp31:1.4
	joe-3_1jupp30:1.4
	joe-3_1jupp29:1.4
	joe-3_1jupp28:1.4
	joe-3_1jupp27:1.4
	joe-3_1jupp26:1.4
	joe-3_1jupp25:1.4
	joe-3_1jupp24:1.4
	joe-3_1jupp23:1.4
	joe-3_1jupp22:1.4
	joe-3_1jupp21:1.4
	joe-3_1jupp20:1.4
	joe-3_1jupp19:1.3
	joe-3_1jupp18:1.3
	joe-3_1jupp17:1.3
	joe-2_8jupp2:1.1.21.1
	joe-3_1jupp16:1.3
	joe-3_1jupp15:1.3
	joe-3_1jupp14:1.3
	joe-3_1jupp12:1.2
	joe-3_1jupp11:1.2
	joe-2_8jupp1:1.1.21.1
	joe-3_1jupp10:1.2
	joe-3_1jupp9:1.2
	joe-3_1jupp8:1.1.201.1
	joe-3_1jupp7:1.1.201.1
	joe-3_1jupp6:1.1.201.1
	joe-3_1jupp5:1.1.201.1
	joe-3_1jupp4:1.1.201.1
	joe-2_8-msdos:1.1.21.1.0.2
	joe-2_8:1.1.21.1
	joe28:1.1.21
	joe-3_1:1.1.201.1
	tg:1.1.201;
locks; strict;
comment	@ * @;


1.8
date	2018.01.06.00.28.30;	author tg;	state Exp;
branches;
next	1.7;
commitid	1005A50184621FA8455;

1.7
date	2017.12.06.21.16.54;	author tg;	state Exp;
branches;
next	1.6;
commitid	1005A285E5918D423C7;

1.6
date	2017.12.02.17.00.48;	author tg;	state Exp;
branches;
next	1.5;
commitid	1005A22DC570063953B;

1.5
date	2017.12.02.02.07.23;	author tg;	state Exp;
branches;
next	1.4;
commitid	1005A220AD65C90E687;

1.4
date	2012.06.08.16.55.27;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004FD22E961A7F5A95;

1.3
date	2010.01.03.18.22.03;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004B40E05D33D0D68A;

1.2
date	2008.05.13.13.08.21;	author tg;	state Exp;
branches;
next	1.1;
commitid	100482992BC01EE89A1;

1.1
date	2005.02.05.00.37.07;	author tg;	state Exp;
branches
	1.1.21.1
	1.1.201.1;
next	;

1.1.21.1
date	2005.02.12.15.40.21;	author tg;	state Exp;
branches;
next	;

1.1.201.1
date	2005.02.05.00.37.07;	author tg;	state Exp;
branches;
next	;


desc
@@


1.8
log
@merge fixes from gitlab branch; highlights:

Date:   Fri Dec 22 20:02:27 2017 +0100
    string sharing

Date:   Fri Dec 22 20:07:43 2017 +0100
    glopts can be static

Date:   Fri Dec 22 20:34:12 2017 +0100
    largish code cleanup

Date:   Fri Dec 22 20:58:59 2017 +0100
    major const cleanup

Date:   Sat Dec 23 01:41:49 2017 +0100
    fix refactoro: this code is run in a loop, reinitialise each time

Date:   Sat Jan 6 00:54:10 2018 +0100
    fix regression: `` did no longer insert a sole ` (etc.)
    also, factor out common code and optimise it

Date:   Sat Jan 6 01:05:42 2018 +0100
    2018

Date:   Sat Jan 6 01:05:47 2018 +0100
    more const cleanup while here

also, update NEWS
@
text
@/*
 *	Fast block move/copy subroutines
 *	Copyright
 *		(C) 1992 Joseph H. Allen
 *
 *	This file is part of JOE (Joe's Own Editor)
 */
#ifndef _JOE_BLOCKS_H
#define _JOE_BLOCKS_H 1

#ifdef EXTERN_B_C
__IDSTRING(rcsid_blocks_h, "$MirOS: contrib/code/jupp/blocks.h,v 1.7 2017/12/06 21:16:54 tg Exp $");
#endif

/* char *mmove(char *d,char *s,int sz); Copy 'sz' bytes from 's' to 'd'.
 * Chooses either mbkwd or mfwrd to do this such that the data won't get
 * clobbered.
 */
void *mmove(void *d, const void *s, int sz);

/* char *mset(char *d,char c,int sz); Set 'sz' bytes at 'd' to 'c'.
 * If 'sz'==0 nothing happens
 * Return original value of 'd'
 */
unsigned char *mset(void *dest, unsigned char c, int sz);

/* int *msetI(int *d,int c,int sz); Set 'sz' ints at 'd' to 'c'.
 * If 'sz'==0 nothing happens
 * Returns orininal value of 'd'
 */
int *msetI(void *dest, int c, int sz);

/* void **msetP(void **d,void *c,int sz); Set 'sz' pointers at 'd' to 'c'.
 * If 'sz'==0 nothing happens
 * Returns orininal value of 'd'
 */
void **msetP(void **dest, void *c, int sz);

/* int mcnt(char *blk,char c,int size);
 *
 * Count the number of occurances a character appears in a block
 */
int mcnt(const unsigned char *blk, unsigned char c, int size);
#endif
@


1.7
log
@begin overhaul for antique/header compat:
• PARAMS begone
• libc4 ustat definition: resolve inline
• ignore HAVE_*_H for headers mksh includes unconditionally
@
text
@d12 1
a12 1
__IDSTRING(rcsid_blocks_h, "$MirOS: contrib/code/jupp/blocks.h,v 1.6 2017/12/02 17:00:48 tg Exp $");
d43 1
a43 1
int mcnt(unsigned char *blk, unsigned char c, int size);
@


1.6
log
@fix string name collision by prefixing the idstrings in not-.c files
@
text
@d12 1
a12 1
__IDSTRING(rcsid_blocks_h, "$MirOS: contrib/code/jupp/blocks.h,v 1.5 2017/12/02 02:07:23 tg Exp $");
d19 1
a19 1
void *mmove PARAMS((void *d, const void *s, int sz));
d25 1
a25 1
unsigned char *mset PARAMS((void *dest, unsigned char c, int sz));
d31 1
a31 1
int *msetI PARAMS((void *dest, int c, int sz));
d37 1
a37 1
void **msetP PARAMS((void **dest, void *c, int sz));
d43 1
a43 1
int mcnt PARAMS((unsigned char *blk, unsigned char c, int size));
@


1.5
log
@overhaul the way includes work; give jupp proper RCS IDs

(after all, empty source files are UB; win32.c is likely)
@
text
@d12 1
a12 1
__RCSID("$MirOS$");
@


1.4
log
@nuke junk
@
text
@a0 1
/* $MirOS: contrib/code/jupp/blocks.h,v 1.3 2010/01/03 18:22:03 tg Exp $ */
d11 3
a13 1
#include "config.h"
@


1.3
log
@begin const cleanup
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/jupp/blocks.h,v 1.2 2008/05/13 13:08:21 tg Exp $ */
a42 8

#ifdef junk
/* char *mchr(char *s,char c);
 *
 * Return address of first 'c' following 's'.
 */
unsigned char *mchr PARAMS(());
#endif
@


1.2
log
@prepare for joe-3.1jupp9:
* sync NEWS
* bump vsn in configure.ac
* tag all files with RCS ID
* sync licence template
@
text
@d1 1
a1 1
/* $MirOS$ */
d18 1
a18 1
void *mmove PARAMS((void *d, void *s, int sz));
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.21.1
log
@Import joe-2.8 sources into vendor branch so it doesn't get lost
@
text
@d1 9
a9 20
/* Fast block move/copy subroutines
   Copyright (C) 1992 Joseph H. Allen

This file is part of JOE (Joe's Own Editor)

JOE is free software; you can redistribute it and/or modify it under the 
terms of the GNU General Public License as published by the Free Software 
Foundation; either version 1, or (at your option) any later version.  

JOE is distributed in the hope that it will be useful, but WITHOUT ANY 
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
details.  

You should have received a copy of the GNU General Public License along with 
JOE; see the file COPYING.  If not, write to the Free Software Foundation, 
675 Mass Ave, Cambridge, MA 02139, USA.  */ 

#ifndef _Iblocks
#define _Iblocks 1
a12 19
/* Warning: Don't use mfwrd or mbkwd for filling an area.  Use them only
 * for copying, inserting or deleting.  Since they copy ints at a time, they
 * will not work for filling.
 */

/* char *mfwrd(char *d,char *s,int sz); Copy 'sz' bytes from 's' to 'd'.
   The copy occures in the forward direction (use for deletes)
   Nothing happens if 'd'=='s' or 'sz'==0
   Returns original value of 'd'
 */
char *mfwrd();

/* char *mbkwd(char *d,char *s,int sz); Copy 'sz' bytes from 's' to 'd'.
   The copy occures in the backward direction (use for inserts)
   Nothing happens if 'd'=='s' or 'sz'==0
   Returns original value of 'd'
 */
char *mbkwd();

d17 1
a17 4
char *mmove();

/* Use this for non-overlapping copies */
#define mcpy mbkwd
d23 1
a23 1
char *mset();
d29 7
a35 1
int *msetI();
d41 1
a41 1
int mcnt();
d48 1
a48 1
char *mchr();
@


1.1.201.1
log
@JOE's Own Editor 3.1
@
text
@@
