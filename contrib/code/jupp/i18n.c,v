head	1.36;
access;
symbols
	joe-3_1jupp38:1.36
	joe-3_1jupp37:1.36
	joe-3_1jupp36:1.33
	joe-3_1jupp35:1.33
	joe-3_1jupp34:1.33
	joe-3_1jupp33:1.33
	joe-3_1jupp32:1.32
	joe-3_1jupp31:1.23
	joe-3_1jupp30:1.16
	joe-3_1jupp29:1.15
	joe-3_1jupp28:1.14
	joe-3_1jupp27:1.14
	joe-3_1jupp26:1.8
	joe-3_1jupp25:1.8
	joe-3_1jupp24:1.6
	joe-3_1jupp23:1.6
	joe-3_1jupp22:1.6
	joe-3_1jupp21:1.5
	joe-3_1jupp20:1.5
	joe-3_1jupp19:1.5
	joe-3_1jupp18:1.5
	joe-3_1jupp17:1.5
	joe-3_1jupp16:1.5
	joe-3_1jupp15:1.5
	joe-3_1jupp14:1.4
	joe-3_1jupp12:1.4
	joe-3_1jupp11:1.3
	joe-3_1jupp10:1.3
	joe-3_1jupp9:1.3
	joe-3_1jupp8:1.2
	joe-3_1jupp7:1.2
	joe-3_1jupp6:1.2
	joe-3_1jupp5:1.2
	joe-3_1jupp4:1.2
	joe-3_1:1.1.201.1
	tg:1.1.201;
locks; strict;
comment	@ * @;


1.36
date	2018.08.10.02.53.43;	author tg;	state Exp;
branches;
next	1.35;
commitid	1005B6CFE0B5BDFE404;

1.35
date	2018.06.28.01.18.33;	author tg;	state Exp;
branches;
next	1.34;
commitid	1005B34377445239827;

1.34
date	2018.06.26.21.22.32;	author tg;	state Exp;
branches;
next	1.33;
commitid	1005B32AE7D3C0B22EA;

1.33
date	2018.01.08.02.01.19;	author tg;	state Exp;
branches;
next	1.32;
commitid	1005A52D0FA22192115;

1.32
date	2017.12.07.01.00.31;	author tg;	state Exp;
branches;
next	1.31;
commitid	1005A2892BB042F2F1F;

1.31
date	2017.12.06.21.46.55;	author tg;	state Exp;
branches;
next	1.30;
commitid	1005A28655C5188FF08;

1.30
date	2017.12.06.21.16.56;	author tg;	state Exp;
branches;
next	1.29;
commitid	1005A285E5918D423C7;

1.29
date	2017.12.03.02.36.01;	author tg;	state Exp;
branches;
next	1.28;
commitid	1005A2363204B0C4612;

1.28
date	2017.12.03.01.43.51;	author tg;	state Exp;
branches;
next	1.27;
commitid	1005A2356EC4C92E058;

1.27
date	2017.12.02.18.50.02;	author tg;	state Exp;
branches;
next	1.26;
commitid	1005A22F5E2328F5222;

1.26
date	2017.12.02.04.32.39;	author tg;	state Exp;
branches;
next	1.25;
commitid	1005A222CF2122034D9;

1.25
date	2017.12.02.02.07.26;	author tg;	state Exp;
branches;
next	1.24;
commitid	1005A220AD65C90E687;

1.24
date	2017.11.18.12.01.52;	author tg;	state Exp;
branches;
next	1.23;
commitid	1005A1021487DBB486A;

1.23
date	2017.08.07.21.38.49;	author tg;	state Exp;
branches;
next	1.22;
commitid	1005988DDE03C3E8F11;

1.22
date	2017.07.08.16.23.25;	author tg;	state Exp;
branches;
next	1.21;
commitid	10059610714037A3711;

1.21
date	2017.07.08.16.22.48;	author tg;	state Exp;
branches;
next	1.20;
commitid	100596106CE7EE9D432;

1.20
date	2017.07.08.16.20.34;	author tg;	state Exp;
branches;
next	1.19;
commitid	1005961066126EB5A4C;

1.19
date	2017.07.08.15.38.52;	author tg;	state Exp;
branches;
next	1.18;
commitid	1005960FCA741D1B24A;

1.18
date	2017.07.08.15.11.05;	author tg;	state Exp;
branches;
next	1.17;
commitid	1005960F5F93CD53417;

1.17
date	2017.03.19.19.30.21;	author tg;	state Exp;
branches;
next	1.16;
commitid	10058CEDC5E02E09C16;

1.16
date	2017.01.11.00.34.03;	author tg;	state Exp;
branches;
next	1.15;
commitid	10058757D85744F7021;

1.15
date	2016.09.01.12.54.41;	author tg;	state Exp;
branches;
next	1.14;
commitid	10057C825090042F66C;

1.14
date	2014.06.26.18.02.30;	author tg;	state Exp;
branches;
next	1.12;
commitid	10053AC60491F30AF0D;

1.12
date	2014.06.26.17.42.53;	author tg;	state Exp;
branches;
next	1.11;
commitid	10053AC5BB0521FC7B9;

1.11
date	2014.06.24.19.53.20;	author tg;	state Exp;
branches;
next	1.10;
commitid	10053A9D73D46F13830;

1.10
date	2013.12.01.00.19.08;	author tg;	state Exp;
branches;
next	1.9;
commitid	100529A80461C27C26A;

1.9
date	2013.11.30.23.20.05;	author tg;	state Exp;
branches;
next	1.8;
commitid	100529A72B0084FADD6;

1.8
date	2013.08.19.17.39.29;	author tg;	state Exp;
branches;
next	1.7;
commitid	1005212586A3540FFF7;

1.7
date	2013.05.31.23.27.17;	author tg;	state Exp;
branches;
next	1.6;
commitid	10051A931CB73794C1D;

1.6
date	2012.09.01.23.46.44;	author tg;	state Exp;
branches;
next	1.5;
commitid	10050429E542CD63CF1;

1.5
date	2010.12.11.16.05.02;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004D03A10A2DDE9B9B;

1.4
date	2009.10.18.16.06.29;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004ADB3D195604AD30;

1.3
date	2008.05.13.13.08.22;	author tg;	state Exp;
branches;
next	1.2;
commitid	100482992BC01EE89A1;

1.2
date	2005.02.05.02.42.20;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.00.37.28;	author tg;	state Exp;
branches
	1.1.201.1;
next	;

1.1.201.1
date	2005.02.05.00.37.28;	author tg;	state Exp;
branches;
next	;


desc
@@


1.36
log
@same as in commitid 1005B6CF36E3932B560, plus assorted cleanup
@
text
@#if 0
.if "0" == "1"
#endif
/*
 *	Universal Coded Character Set/ISO-10646 functions for JOE
 *	Copyright
 *		(C) 1992 Joseph H. Allen
 *	Copyright Â© 2014, 2017
 *		mirabilos <m@@mirbsd.org>
 *
 *	This file is part of JOE (Joe's Own Editor)
 *
 * This is basically the "i18n" file in C
 *
 * There really should be a program to convert from i18n to c, but this
 * was very easy to do with just the text editor.
 */

#include "config.h"
#include <stdlib.h>

__RCSID("$MirOS: contrib/code/jupp/i18n.c,v 1.35 2018/06/28 01:18:33 tg Exp $");

#include "charmap.h"
#include "utils.h"

/* From: X11/xc/programs/xterm/wcwidth.c,v 1.10 */

struct mb_ucsrange {
	unsigned int beg;
	unsigned int end;
};

static size_t mb_ucsbsearch(const struct mb_ucsrange arr[], size_t elems,
    unsigned int val);

/*
 * Generated from the UCD 11.0.0 by
 * MirOS: contrib/code/Snippets/eawparse,v 1.12 2017/09/06 16:05:45 tg Exp $
 */

static const struct mb_ucsrange mb_ucs_combining[] = {
	{ 0x0300, 0x036F },
	{ 0x0483, 0x0489 },
	{ 0x0591, 0x05BD },
	{ 0x05BF, 0x05BF },
	{ 0x05C1, 0x05C2 },
	{ 0x05C4, 0x05C5 },
	{ 0x05C7, 0x05C7 },
	{ 0x0610, 0x061A },
	{ 0x061C, 0x061C },
	{ 0x064B, 0x065F },
	{ 0x0670, 0x0670 },
	{ 0x06D6, 0x06DC },
	{ 0x06DF, 0x06E4 },
	{ 0x06E7, 0x06E8 },
	{ 0x06EA, 0x06ED },
	{ 0x0711, 0x0711 },
	{ 0x0730, 0x074A },
	{ 0x07A6, 0x07B0 },
	{ 0x07EB, 0x07F3 },
	{ 0x07FD, 0x07FD },
	{ 0x0816, 0x0819 },
	{ 0x081B, 0x0823 },
	{ 0x0825, 0x0827 },
	{ 0x0829, 0x082D },
	{ 0x0859, 0x085B },
	{ 0x08D3, 0x08E1 },
	{ 0x08E3, 0x0902 },
	{ 0x093A, 0x093A },
	{ 0x093C, 0x093C },
	{ 0x0941, 0x0948 },
	{ 0x094D, 0x094D },
	{ 0x0951, 0x0957 },
	{ 0x0962, 0x0963 },
	{ 0x0981, 0x0981 },
	{ 0x09BC, 0x09BC },
	{ 0x09C1, 0x09C4 },
	{ 0x09CD, 0x09CD },
	{ 0x09E2, 0x09E3 },
	{ 0x09FE, 0x09FE },
	{ 0x0A01, 0x0A02 },
	{ 0x0A3C, 0x0A3C },
	{ 0x0A41, 0x0A42 },
	{ 0x0A47, 0x0A48 },
	{ 0x0A4B, 0x0A4D },
	{ 0x0A51, 0x0A51 },
	{ 0x0A70, 0x0A71 },
	{ 0x0A75, 0x0A75 },
	{ 0x0A81, 0x0A82 },
	{ 0x0ABC, 0x0ABC },
	{ 0x0AC1, 0x0AC5 },
	{ 0x0AC7, 0x0AC8 },
	{ 0x0ACD, 0x0ACD },
	{ 0x0AE2, 0x0AE3 },
	{ 0x0AFA, 0x0AFF },
	{ 0x0B01, 0x0B01 },
	{ 0x0B3C, 0x0B3C },
	{ 0x0B3F, 0x0B3F },
	{ 0x0B41, 0x0B44 },
	{ 0x0B4D, 0x0B4D },
	{ 0x0B56, 0x0B56 },
	{ 0x0B62, 0x0B63 },
	{ 0x0B82, 0x0B82 },
	{ 0x0BC0, 0x0BC0 },
	{ 0x0BCD, 0x0BCD },
	{ 0x0C00, 0x0C00 },
	{ 0x0C04, 0x0C04 },
	{ 0x0C3E, 0x0C40 },
	{ 0x0C46, 0x0C48 },
	{ 0x0C4A, 0x0C4D },
	{ 0x0C55, 0x0C56 },
	{ 0x0C62, 0x0C63 },
	{ 0x0C81, 0x0C81 },
	{ 0x0CBC, 0x0CBC },
	{ 0x0CBF, 0x0CBF },
	{ 0x0CC6, 0x0CC6 },
	{ 0x0CCC, 0x0CCD },
	{ 0x0CE2, 0x0CE3 },
	{ 0x0D00, 0x0D01 },
	{ 0x0D3B, 0x0D3C },
	{ 0x0D41, 0x0D44 },
	{ 0x0D4D, 0x0D4D },
	{ 0x0D62, 0x0D63 },
	{ 0x0DCA, 0x0DCA },
	{ 0x0DD2, 0x0DD4 },
	{ 0x0DD6, 0x0DD6 },
	{ 0x0E31, 0x0E31 },
	{ 0x0E34, 0x0E3A },
	{ 0x0E47, 0x0E4E },
	{ 0x0EB1, 0x0EB1 },
	{ 0x0EB4, 0x0EB9 },
	{ 0x0EBB, 0x0EBC },
	{ 0x0EC8, 0x0ECD },
	{ 0x0F18, 0x0F19 },
	{ 0x0F35, 0x0F35 },
	{ 0x0F37, 0x0F37 },
	{ 0x0F39, 0x0F39 },
	{ 0x0F71, 0x0F7E },
	{ 0x0F80, 0x0F84 },
	{ 0x0F86, 0x0F87 },
	{ 0x0F8D, 0x0F97 },
	{ 0x0F99, 0x0FBC },
	{ 0x0FC6, 0x0FC6 },
	{ 0x102D, 0x1030 },
	{ 0x1032, 0x1037 },
	{ 0x1039, 0x103A },
	{ 0x103D, 0x103E },
	{ 0x1058, 0x1059 },
	{ 0x105E, 0x1060 },
	{ 0x1071, 0x1074 },
	{ 0x1082, 0x1082 },
	{ 0x1085, 0x1086 },
	{ 0x108D, 0x108D },
	{ 0x109D, 0x109D },
	{ 0x1160, 0x11FF },
	{ 0x135D, 0x135F },
	{ 0x1712, 0x1714 },
	{ 0x1732, 0x1734 },
	{ 0x1752, 0x1753 },
	{ 0x1772, 0x1773 },
	{ 0x17B4, 0x17B5 },
	{ 0x17B7, 0x17BD },
	{ 0x17C6, 0x17C6 },
	{ 0x17C9, 0x17D3 },
	{ 0x17DD, 0x17DD },
	{ 0x180B, 0x180E },
	{ 0x1885, 0x1886 },
	{ 0x18A9, 0x18A9 },
	{ 0x1920, 0x1922 },
	{ 0x1927, 0x1928 },
	{ 0x1932, 0x1932 },
	{ 0x1939, 0x193B },
	{ 0x1A17, 0x1A18 },
	{ 0x1A1B, 0x1A1B },
	{ 0x1A56, 0x1A56 },
	{ 0x1A58, 0x1A5E },
	{ 0x1A60, 0x1A60 },
	{ 0x1A62, 0x1A62 },
	{ 0x1A65, 0x1A6C },
	{ 0x1A73, 0x1A7C },
	{ 0x1A7F, 0x1A7F },
	{ 0x1AB0, 0x1ABE },
	{ 0x1B00, 0x1B03 },
	{ 0x1B34, 0x1B34 },
	{ 0x1B36, 0x1B3A },
	{ 0x1B3C, 0x1B3C },
	{ 0x1B42, 0x1B42 },
	{ 0x1B6B, 0x1B73 },
	{ 0x1B80, 0x1B81 },
	{ 0x1BA2, 0x1BA5 },
	{ 0x1BA8, 0x1BA9 },
	{ 0x1BAB, 0x1BAD },
	{ 0x1BE6, 0x1BE6 },
	{ 0x1BE8, 0x1BE9 },
	{ 0x1BED, 0x1BED },
	{ 0x1BEF, 0x1BF1 },
	{ 0x1C2C, 0x1C33 },
	{ 0x1C36, 0x1C37 },
	{ 0x1CD0, 0x1CD2 },
	{ 0x1CD4, 0x1CE0 },
	{ 0x1CE2, 0x1CE8 },
	{ 0x1CED, 0x1CED },
	{ 0x1CF4, 0x1CF4 },
	{ 0x1CF8, 0x1CF9 },
	{ 0x1DC0, 0x1DF9 },
	{ 0x1DFB, 0x1DFF },
	{ 0x200B, 0x200F },
	{ 0x202A, 0x202E },
	{ 0x2060, 0x2064 },
	{ 0x2066, 0x206F },
	{ 0x20D0, 0x20F0 },
	{ 0x2CEF, 0x2CF1 },
	{ 0x2D7F, 0x2D7F },
	{ 0x2DE0, 0x2DFF },
	{ 0x302A, 0x302D },
	{ 0x3099, 0x309A },
	{ 0xA66F, 0xA672 },
	{ 0xA674, 0xA67D },
	{ 0xA69E, 0xA69F },
	{ 0xA6F0, 0xA6F1 },
	{ 0xA802, 0xA802 },
	{ 0xA806, 0xA806 },
	{ 0xA80B, 0xA80B },
	{ 0xA825, 0xA826 },
	{ 0xA8C4, 0xA8C5 },
	{ 0xA8E0, 0xA8F1 },
	{ 0xA8FF, 0xA8FF },
	{ 0xA926, 0xA92D },
	{ 0xA947, 0xA951 },
	{ 0xA980, 0xA982 },
	{ 0xA9B3, 0xA9B3 },
	{ 0xA9B6, 0xA9B9 },
	{ 0xA9BC, 0xA9BC },
	{ 0xA9E5, 0xA9E5 },
	{ 0xAA29, 0xAA2E },
	{ 0xAA31, 0xAA32 },
	{ 0xAA35, 0xAA36 },
	{ 0xAA43, 0xAA43 },
	{ 0xAA4C, 0xAA4C },
	{ 0xAA7C, 0xAA7C },
	{ 0xAAB0, 0xAAB0 },
	{ 0xAAB2, 0xAAB4 },
	{ 0xAAB7, 0xAAB8 },
	{ 0xAABE, 0xAABF },
	{ 0xAAC1, 0xAAC1 },
	{ 0xAAEC, 0xAAED },
	{ 0xAAF6, 0xAAF6 },
	{ 0xABE5, 0xABE5 },
	{ 0xABE8, 0xABE8 },
	{ 0xABED, 0xABED },
	{ 0xFB1E, 0xFB1E },
	{ 0xFE00, 0xFE0F },
	{ 0xFE20, 0xFE2F },
	{ 0xFEFF, 0xFEFF },
	{ 0xFFF9, 0xFFFB },
	{ 0x101FD, 0x101FD },
	{ 0x102E0, 0x102E0 },
	{ 0x10376, 0x1037A },
	{ 0x10A01, 0x10A03 },
	{ 0x10A05, 0x10A06 },
	{ 0x10A0C, 0x10A0F },
	{ 0x10A38, 0x10A3A },
	{ 0x10A3F, 0x10A3F },
	{ 0x10AE5, 0x10AE6 },
	{ 0x10D24, 0x10D27 },
	{ 0x10F46, 0x10F50 },
	{ 0x11001, 0x11001 },
	{ 0x11038, 0x11046 },
	{ 0x1107F, 0x11081 },
	{ 0x110B3, 0x110B6 },
	{ 0x110B9, 0x110BA },
	{ 0x11100, 0x11102 },
	{ 0x11127, 0x1112B },
	{ 0x1112D, 0x11134 },
	{ 0x11173, 0x11173 },
	{ 0x11180, 0x11181 },
	{ 0x111B6, 0x111BE },
	{ 0x111C9, 0x111CC },
	{ 0x1122F, 0x11231 },
	{ 0x11234, 0x11234 },
	{ 0x11236, 0x11237 },
	{ 0x1123E, 0x1123E },
	{ 0x112DF, 0x112DF },
	{ 0x112E3, 0x112EA },
	{ 0x11300, 0x11301 },
	{ 0x1133B, 0x1133C },
	{ 0x11340, 0x11340 },
	{ 0x11366, 0x1136C },
	{ 0x11370, 0x11374 },
	{ 0x11438, 0x1143F },
	{ 0x11442, 0x11444 },
	{ 0x11446, 0x11446 },
	{ 0x1145E, 0x1145E },
	{ 0x114B3, 0x114B8 },
	{ 0x114BA, 0x114BA },
	{ 0x114BF, 0x114C0 },
	{ 0x114C2, 0x114C3 },
	{ 0x115B2, 0x115B5 },
	{ 0x115BC, 0x115BD },
	{ 0x115BF, 0x115C0 },
	{ 0x115DC, 0x115DD },
	{ 0x11633, 0x1163A },
	{ 0x1163D, 0x1163D },
	{ 0x1163F, 0x11640 },
	{ 0x116AB, 0x116AB },
	{ 0x116AD, 0x116AD },
	{ 0x116B0, 0x116B5 },
	{ 0x116B7, 0x116B7 },
	{ 0x1171D, 0x1171F },
	{ 0x11722, 0x11725 },
	{ 0x11727, 0x1172B },
	{ 0x1182F, 0x11837 },
	{ 0x11839, 0x1183A },
	{ 0x11A01, 0x11A0A },
	{ 0x11A33, 0x11A38 },
	{ 0x11A3B, 0x11A3E },
	{ 0x11A47, 0x11A47 },
	{ 0x11A51, 0x11A56 },
	{ 0x11A59, 0x11A5B },
	{ 0x11A8A, 0x11A96 },
	{ 0x11A98, 0x11A99 },
	{ 0x11C30, 0x11C36 },
	{ 0x11C38, 0x11C3D },
	{ 0x11C3F, 0x11C3F },
	{ 0x11C92, 0x11CA7 },
	{ 0x11CAA, 0x11CB0 },
	{ 0x11CB2, 0x11CB3 },
	{ 0x11CB5, 0x11CB6 },
	{ 0x11D31, 0x11D36 },
	{ 0x11D3A, 0x11D3A },
	{ 0x11D3C, 0x11D3D },
	{ 0x11D3F, 0x11D45 },
	{ 0x11D47, 0x11D47 },
	{ 0x11D90, 0x11D91 },
	{ 0x11D95, 0x11D95 },
	{ 0x11D97, 0x11D97 },
	{ 0x11EF3, 0x11EF4 },
	{ 0x16AF0, 0x16AF4 },
	{ 0x16B30, 0x16B36 },
	{ 0x16F8F, 0x16F92 },
	{ 0x1BC9D, 0x1BC9E },
	{ 0x1BCA0, 0x1BCA3 },
	{ 0x1D167, 0x1D169 },
	{ 0x1D173, 0x1D182 },
	{ 0x1D185, 0x1D18B },
	{ 0x1D1AA, 0x1D1AD },
	{ 0x1D242, 0x1D244 },
	{ 0x1DA00, 0x1DA36 },
	{ 0x1DA3B, 0x1DA6C },
	{ 0x1DA75, 0x1DA75 },
	{ 0x1DA84, 0x1DA84 },
	{ 0x1DA9B, 0x1DA9F },
	{ 0x1DAA1, 0x1DAAF },
	{ 0x1E000, 0x1E006 },
	{ 0x1E008, 0x1E018 },
	{ 0x1E01B, 0x1E021 },
	{ 0x1E023, 0x1E024 },
	{ 0x1E026, 0x1E02A },
	{ 0x1E8D0, 0x1E8D6 },
	{ 0x1E944, 0x1E94A },
	{ 0xE0001, 0xE0001 },
	{ 0xE0020, 0xE007F },
	{ 0xE0100, 0xE01EF }
};

static const struct mb_ucsrange mb_ucs_fullwidth[] = {
	{ 0x1100, 0x115F },
	{ 0x231A, 0x231B },
	{ 0x2329, 0x232A },
	{ 0x23E9, 0x23EC },
	{ 0x23F0, 0x23F0 },
	{ 0x23F3, 0x23F3 },
	{ 0x25FD, 0x25FE },
	{ 0x2614, 0x2615 },
	{ 0x2648, 0x2653 },
	{ 0x267F, 0x267F },
	{ 0x2693, 0x2693 },
	{ 0x26A1, 0x26A1 },
	{ 0x26AA, 0x26AB },
	{ 0x26BD, 0x26BE },
	{ 0x26C4, 0x26C5 },
	{ 0x26CE, 0x26CE },
	{ 0x26D4, 0x26D4 },
	{ 0x26EA, 0x26EA },
	{ 0x26F2, 0x26F3 },
	{ 0x26F5, 0x26F5 },
	{ 0x26FA, 0x26FA },
	{ 0x26FD, 0x26FD },
	{ 0x2705, 0x2705 },
	{ 0x270A, 0x270B },
	{ 0x2728, 0x2728 },
	{ 0x274C, 0x274C },
	{ 0x274E, 0x274E },
	{ 0x2753, 0x2755 },
	{ 0x2757, 0x2757 },
	{ 0x2795, 0x2797 },
	{ 0x27B0, 0x27B0 },
	{ 0x27BF, 0x27BF },
	{ 0x2B1B, 0x2B1C },
	{ 0x2B50, 0x2B50 },
	{ 0x2B55, 0x2B55 },
	{ 0x2E80, 0x3029 },
	{ 0x302E, 0x303E },
	{ 0x3040, 0x3098 },
	{ 0x309B, 0xA4CF },
	{ 0xA960, 0xA97F },
	{ 0xAC00, 0xD7A3 },
	{ 0xF900, 0xFAFF },
	{ 0xFE10, 0xFE19 },
	{ 0xFE30, 0xFE6F },
	{ 0xFF01, 0xFF60 },
	{ 0xFFE0, 0xFFE6 },
	{ 0x16FE0, 0x16FE1 },
	{ 0x17000, 0x187F1 },
	{ 0x18800, 0x18AF2 },
	{ 0x1B000, 0x1B11E },
	{ 0x1B170, 0x1B2FB },
	{ 0x1F004, 0x1F004 },
	{ 0x1F0CF, 0x1F0CF },
	{ 0x1F18E, 0x1F18E },
	{ 0x1F191, 0x1F19A },
	{ 0x1F200, 0x1F202 },
	{ 0x1F210, 0x1F23B },
	{ 0x1F240, 0x1F248 },
	{ 0x1F250, 0x1F251 },
	{ 0x1F260, 0x1F265 },
	{ 0x1F300, 0x1F320 },
	{ 0x1F32D, 0x1F335 },
	{ 0x1F337, 0x1F37C },
	{ 0x1F37E, 0x1F393 },
	{ 0x1F3A0, 0x1F3CA },
	{ 0x1F3CF, 0x1F3D3 },
	{ 0x1F3E0, 0x1F3F0 },
	{ 0x1F3F4, 0x1F3F4 },
	{ 0x1F3F8, 0x1F43E },
	{ 0x1F440, 0x1F440 },
	{ 0x1F442, 0x1F4FC },
	{ 0x1F4FF, 0x1F53D },
	{ 0x1F54B, 0x1F54E },
	{ 0x1F550, 0x1F567 },
	{ 0x1F57A, 0x1F57A },
	{ 0x1F595, 0x1F596 },
	{ 0x1F5A4, 0x1F5A4 },
	{ 0x1F5FB, 0x1F64F },
	{ 0x1F680, 0x1F6C5 },
	{ 0x1F6CC, 0x1F6CC },
	{ 0x1F6D0, 0x1F6D2 },
	{ 0x1F6EB, 0x1F6EC },
	{ 0x1F6F4, 0x1F6F9 },
	{ 0x1F910, 0x1F93E },
	{ 0x1F940, 0x1F970 },
	{ 0x1F973, 0x1F976 },
	{ 0x1F97A, 0x1F97A },
	{ 0x1F97C, 0x1F9A2 },
	{ 0x1F9B0, 0x1F9B9 },
	{ 0x1F9C0, 0x1F9C2 },
	{ 0x1F9D0, 0x1F9FF },
	{ 0x20000, 0x2FFFD },
	{ 0x30000, 0x3FFFD }
};

/* simple binary search in ranges, with bounds optimisation */
static size_t
mb_ucsbsearch(const struct mb_ucsrange arr[], size_t elems, unsigned int val)
{
	size_t min = 0, mid, max = elems;

	if (val < arr[min].beg || val > arr[max - 1].end)
		return ((size_t)-1);

	while (min < max) {
		mid = (min + max) / 2;

		if (val < arr[mid].beg)
			max = mid;
		else if (val > arr[mid].end)
			min = mid + 1;
		else
			return (mid);
	}
	return ((size_t)-1);
}

/* Modified for JOE: returns printed width of control and other non-printable
   characters */

/*XXX possibly more */
static const struct mb_ucsrange joe_ctrlchars[] = {
	{ 0x0080, 0x009F },
	{ 0x200B, 0x200F },
	{ 0x2028, 0x202E },
	{ 0x2060, 0x2063 },
	{ 0x2066, 0x206F },
	{ 0xD800, 0xDFFF },
	{ 0xFDD0, 0xFDEF },
	{ 0xFEFF, 0xFEFF },
	{ 0xFFF9, 0xFFFB }
};

/* returns column width of control character, 0 for regular */
unsigned char unictrlbuf[11];
int unictrl(unsigned int ucs)
{
	*unictrlbuf = 0;

	/* C0 control characters and raw octets use one screen column */
	if (ucs < 32 || ucs == 0x7F || (ucs & 0x80000000))
		return (1);

	/* not a control or noncharacter? */
	if (mb_ucsbsearch(joe_ctrlchars, NELEM(joe_ctrlchars),
	    ucs) == (size_t)-1 && (ucs & 0xFFFE) != 0xFFFE && ucs <= 0x10FFFF)
		return (0);

	return (joe_snprintf_1((char *)unictrlbuf, sizeof(unictrlbuf),
	    "<%X>", ucs));
}

int
joe_wcwidth(unsigned int ucs)
{
	int wide;

#ifndef TEST
	/* If terminal is not UTF-8 or file is not UTF-8: width is 1 */
	/* FIXME */
	if (!locale_map->type)
		return (1);
#endif

	if ((wide = unictrl(ucs)))
		return (wide);

	/* combining characters use 0 screen columns */
	if (mb_ucsbsearch(mb_ucs_combining, NELEM(mb_ucs_combining), ucs) != (size_t)-1)
		return (0);

	/* all others use 1 or 2 screen columns */
	if (mb_ucsbsearch(mb_ucs_fullwidth, NELEM(mb_ucs_fullwidth), ucs) != (size_t)-1)
		return (2);
	return (1);
}

/* Macro for generating joe_iswXXX functions */

#define MAKE_ISW(what)						\
	int joe_isw##what(struct charmap *foo, int c)		\
	{							\
		return ((mb_ucsbsearch(data_wctype_##what,	\
		    NELEM(data_wctype_##what),			\
		    c) != (size_t)-1) ? 1 : 0);			\
	}

/* MAKE_ISW functions... */

/* From: contrib/hosted/tg/jupptables,v 1.4 2017/07/08 14:53:45 tg Exp $ */

#ifdef TEST_I18N
static const struct mb_ucsrange data_wctype_upper[] = {
	{ 0x0041, 0x005A },
	{ 0x00C0, 0x00D6 },
	{ 0x00D8, 0x00DE },
	{ 0x0100, 0x0100 },
	{ 0x0102, 0x0102 },
	{ 0x0104, 0x0104 },
	{ 0x0106, 0x0106 },
	{ 0x0108, 0x0108 },
	{ 0x010A, 0x010A },
	{ 0x010C, 0x010C },
	{ 0x010E, 0x010E },
	{ 0x0110, 0x0110 },
	{ 0x0112, 0x0112 },
	{ 0x0114, 0x0114 },
	{ 0x0116, 0x0116 },
	{ 0x0118, 0x0118 },
	{ 0x011A, 0x011A },
	{ 0x011C, 0x011C },
	{ 0x011E, 0x011E },
	{ 0x0120, 0x0120 },
	{ 0x0122, 0x0122 },
	{ 0x0124, 0x0124 },
	{ 0x0126, 0x0126 },
	{ 0x0128, 0x0128 },
	{ 0x012A, 0x012A },
	{ 0x012C, 0x012C },
	{ 0x012E, 0x012E },
	{ 0x0130, 0x0130 },
	{ 0x0132, 0x0132 },
	{ 0x0134, 0x0134 },
	{ 0x0136, 0x0136 },
	{ 0x0139, 0x0139 },
	{ 0x013B, 0x013B },
	{ 0x013D, 0x013D },
	{ 0x013F, 0x013F },
	{ 0x0141, 0x0141 },
	{ 0x0143, 0x0143 },
	{ 0x0145, 0x0145 },
	{ 0x0147, 0x0147 },
	{ 0x014A, 0x014A },
	{ 0x014C, 0x014C },
	{ 0x014E, 0x014E },
	{ 0x0150, 0x0150 },
	{ 0x0152, 0x0152 },
	{ 0x0154, 0x0154 },
	{ 0x0156, 0x0156 },
	{ 0x0158, 0x0158 },
	{ 0x015A, 0x015A },
	{ 0x015C, 0x015C },
	{ 0x015E, 0x015E },
	{ 0x0160, 0x0160 },
	{ 0x0162, 0x0162 },
	{ 0x0164, 0x0164 },
	{ 0x0166, 0x0166 },
	{ 0x0168, 0x0168 },
	{ 0x016A, 0x016A },
	{ 0x016C, 0x016C },
	{ 0x016E, 0x016E },
	{ 0x0170, 0x0170 },
	{ 0x0172, 0x0172 },
	{ 0x0174, 0x0174 },
	{ 0x0176, 0x0176 },
	{ 0x0178, 0x0179 },
	{ 0x017B, 0x017B },
	{ 0x017D, 0x017D },
	{ 0x0181, 0x0182 },
	{ 0x0184, 0x0184 },
	{ 0x0186, 0x0187 },
	{ 0x0189, 0x018B },
	{ 0x018E, 0x0191 },
	{ 0x0193, 0x0194 },
	{ 0x0196, 0x0198 },
	{ 0x019C, 0x019D },
	{ 0x019F, 0x01A0 },
	{ 0x01A2, 0x01A2 },
	{ 0x01A4, 0x01A4 },
	{ 0x01A6, 0x01A7 },
	{ 0x01A9, 0x01A9 },
	{ 0x01AC, 0x01AC },
	{ 0x01AE, 0x01AF },
	{ 0x01B1, 0x01B3 },
	{ 0x01B5, 0x01B5 },
	{ 0x01B7, 0x01B8 },
	{ 0x01BC, 0x01BC },
	{ 0x01C4, 0x01C5 },
	{ 0x01C7, 0x01C8 },
	{ 0x01CA, 0x01CB },
	{ 0x01CD, 0x01CD },
	{ 0x01CF, 0x01CF },
	{ 0x01D1, 0x01D1 },
	{ 0x01D3, 0x01D3 },
	{ 0x01D5, 0x01D5 },
	{ 0x01D7, 0x01D7 },
	{ 0x01D9, 0x01D9 },
	{ 0x01DB, 0x01DB },
	{ 0x01DE, 0x01DE },
	{ 0x01E0, 0x01E0 },
	{ 0x01E2, 0x01E2 },
	{ 0x01E4, 0x01E4 },
	{ 0x01E6, 0x01E6 },
	{ 0x01E8, 0x01E8 },
	{ 0x01EA, 0x01EA },
	{ 0x01EC, 0x01EC },
	{ 0x01EE, 0x01EE },
	{ 0x01F1, 0x01F2 },
	{ 0x01F4, 0x01F4 },
	{ 0x01F6, 0x01F8 },
	{ 0x01FA, 0x01FA },
	{ 0x01FC, 0x01FC },
	{ 0x01FE, 0x01FE },
	{ 0x0200, 0x0200 },
	{ 0x0202, 0x0202 },
	{ 0x0204, 0x0204 },
	{ 0x0206, 0x0206 },
	{ 0x0208, 0x0208 },
	{ 0x020A, 0x020A },
	{ 0x020C, 0x020C },
	{ 0x020E, 0x020E },
	{ 0x0210, 0x0210 },
	{ 0x0212, 0x0212 },
	{ 0x0214, 0x0214 },
	{ 0x0216, 0x0216 },
	{ 0x0218, 0x0218 },
	{ 0x021A, 0x021A },
	{ 0x021C, 0x021C },
	{ 0x021E, 0x021E },
	{ 0x0220, 0x0220 },
	{ 0x0222, 0x0222 },
	{ 0x0224, 0x0224 },
	{ 0x0226, 0x0226 },
	{ 0x0228, 0x0228 },
	{ 0x022A, 0x022A },
	{ 0x022C, 0x022C },
	{ 0x022E, 0x022E },
	{ 0x0230, 0x0230 },
	{ 0x0232, 0x0232 },
	{ 0x023A, 0x023B },
	{ 0x023D, 0x023E },
	{ 0x0241, 0x0241 },
	{ 0x0243, 0x0246 },
	{ 0x0248, 0x0248 },
	{ 0x024A, 0x024A },
	{ 0x024C, 0x024C },
	{ 0x024E, 0x024E },
	{ 0x0370, 0x0370 },
	{ 0x0372, 0x0372 },
	{ 0x0376, 0x0376 },
	{ 0x037F, 0x037F },
	{ 0x0386, 0x0386 },
	{ 0x0388, 0x038A },
	{ 0x038C, 0x038C },
	{ 0x038E, 0x038F },
	{ 0x0391, 0x03A1 },
	{ 0x03A3, 0x03AB },
	{ 0x03CF, 0x03CF },
	{ 0x03D8, 0x03D8 },
	{ 0x03DA, 0x03DA },
	{ 0x03DC, 0x03DC },
	{ 0x03DE, 0x03DE },
	{ 0x03E0, 0x03E0 },
	{ 0x03E2, 0x03E2 },
	{ 0x03E4, 0x03E4 },
	{ 0x03E6, 0x03E6 },
	{ 0x03E8, 0x03E8 },
	{ 0x03EA, 0x03EA },
	{ 0x03EC, 0x03EC },
	{ 0x03EE, 0x03EE },
	{ 0x03F4, 0x03F4 },
	{ 0x03F7, 0x03F7 },
	{ 0x03F9, 0x03FA },
	{ 0x03FD, 0x042F },
	{ 0x0460, 0x0460 },
	{ 0x0462, 0x0462 },
	{ 0x0464, 0x0464 },
	{ 0x0466, 0x0466 },
	{ 0x0468, 0x0468 },
	{ 0x046A, 0x046A },
	{ 0x046C, 0x046C },
	{ 0x046E, 0x046E },
	{ 0x0470, 0x0470 },
	{ 0x0472, 0x0472 },
	{ 0x0474, 0x0474 },
	{ 0x0476, 0x0476 },
	{ 0x0478, 0x0478 },
	{ 0x047A, 0x047A },
	{ 0x047C, 0x047C },
	{ 0x047E, 0x047E },
	{ 0x0480, 0x0480 },
	{ 0x048A, 0x048A },
	{ 0x048C, 0x048C },
	{ 0x048E, 0x048E },
	{ 0x0490, 0x0490 },
	{ 0x0492, 0x0492 },
	{ 0x0494, 0x0494 },
	{ 0x0496, 0x0496 },
	{ 0x0498, 0x0498 },
	{ 0x049A, 0x049A },
	{ 0x049C, 0x049C },
	{ 0x049E, 0x049E },
	{ 0x04A0, 0x04A0 },
	{ 0x04A2, 0x04A2 },
	{ 0x04A4, 0x04A4 },
	{ 0x04A6, 0x04A6 },
	{ 0x04A8, 0x04A8 },
	{ 0x04AA, 0x04AA },
	{ 0x04AC, 0x04AC },
	{ 0x04AE, 0x04AE },
	{ 0x04B0, 0x04B0 },
	{ 0x04B2, 0x04B2 },
	{ 0x04B4, 0x04B4 },
	{ 0x04B6, 0x04B6 },
	{ 0x04B8, 0x04B8 },
	{ 0x04BA, 0x04BA },
	{ 0x04BC, 0x04BC },
	{ 0x04BE, 0x04BE },
	{ 0x04C0, 0x04C1 },
	{ 0x04C3, 0x04C3 },
	{ 0x04C5, 0x04C5 },
	{ 0x04C7, 0x04C7 },
	{ 0x04C9, 0x04C9 },
	{ 0x04CB, 0x04CB },
	{ 0x04CD, 0x04CD },
	{ 0x04D0, 0x04D0 },
	{ 0x04D2, 0x04D2 },
	{ 0x04D4, 0x04D4 },
	{ 0x04D6, 0x04D6 },
	{ 0x04D8, 0x04D8 },
	{ 0x04DA, 0x04DA },
	{ 0x04DC, 0x04DC },
	{ 0x04DE, 0x04DE },
	{ 0x04E0, 0x04E0 },
	{ 0x04E2, 0x04E2 },
	{ 0x04E4, 0x04E4 },
	{ 0x04E6, 0x04E6 },
	{ 0x04E8, 0x04E8 },
	{ 0x04EA, 0x04EA },
	{ 0x04EC, 0x04EC },
	{ 0x04EE, 0x04EE },
	{ 0x04F0, 0x04F0 },
	{ 0x04F2, 0x04F2 },
	{ 0x04F4, 0x04F4 },
	{ 0x04F6, 0x04F6 },
	{ 0x04F8, 0x04F8 },
	{ 0x04FA, 0x04FA },
	{ 0x04FC, 0x04FC },
	{ 0x04FE, 0x04FE },
	{ 0x0500, 0x0500 },
	{ 0x0502, 0x0502 },
	{ 0x0504, 0x0504 },
	{ 0x0506, 0x0506 },
	{ 0x0508, 0x0508 },
	{ 0x050A, 0x050A },
	{ 0x050C, 0x050C },
	{ 0x050E, 0x050E },
	{ 0x0510, 0x0510 },
	{ 0x0512, 0x0512 },
	{ 0x0514, 0x0514 },
	{ 0x0516, 0x0516 },
	{ 0x0518, 0x0518 },
	{ 0x051A, 0x051A },
	{ 0x051C, 0x051C },
	{ 0x051E, 0x051E },
	{ 0x0520, 0x0520 },
	{ 0x0522, 0x0522 },
	{ 0x0524, 0x0524 },
	{ 0x0526, 0x0526 },
	{ 0x0528, 0x0528 },
	{ 0x052A, 0x052A },
	{ 0x052C, 0x052C },
	{ 0x052E, 0x052E },
	{ 0x0531, 0x0556 },
	{ 0x10A0, 0x10C5 },
	{ 0x10C7, 0x10C7 },
	{ 0x10CD, 0x10CD },
	{ 0x13A0, 0x13F5 },
	{ 0x1C90, 0x1CBA },
	{ 0x1CBD, 0x1CBF },
	{ 0x1E00, 0x1E00 },
	{ 0x1E02, 0x1E02 },
	{ 0x1E04, 0x1E04 },
	{ 0x1E06, 0x1E06 },
	{ 0x1E08, 0x1E08 },
	{ 0x1E0A, 0x1E0A },
	{ 0x1E0C, 0x1E0C },
	{ 0x1E0E, 0x1E0E },
	{ 0x1E10, 0x1E10 },
	{ 0x1E12, 0x1E12 },
	{ 0x1E14, 0x1E14 },
	{ 0x1E16, 0x1E16 },
	{ 0x1E18, 0x1E18 },
	{ 0x1E1A, 0x1E1A },
	{ 0x1E1C, 0x1E1C },
	{ 0x1E1E, 0x1E1E },
	{ 0x1E20, 0x1E20 },
	{ 0x1E22, 0x1E22 },
	{ 0x1E24, 0x1E24 },
	{ 0x1E26, 0x1E26 },
	{ 0x1E28, 0x1E28 },
	{ 0x1E2A, 0x1E2A },
	{ 0x1E2C, 0x1E2C },
	{ 0x1E2E, 0x1E2E },
	{ 0x1E30, 0x1E30 },
	{ 0x1E32, 0x1E32 },
	{ 0x1E34, 0x1E34 },
	{ 0x1E36, 0x1E36 },
	{ 0x1E38, 0x1E38 },
	{ 0x1E3A, 0x1E3A },
	{ 0x1E3C, 0x1E3C },
	{ 0x1E3E, 0x1E3E },
	{ 0x1E40, 0x1E40 },
	{ 0x1E42, 0x1E42 },
	{ 0x1E44, 0x1E44 },
	{ 0x1E46, 0x1E46 },
	{ 0x1E48, 0x1E48 },
	{ 0x1E4A, 0x1E4A },
	{ 0x1E4C, 0x1E4C },
	{ 0x1E4E, 0x1E4E },
	{ 0x1E50, 0x1E50 },
	{ 0x1E52, 0x1E52 },
	{ 0x1E54, 0x1E54 },
	{ 0x1E56, 0x1E56 },
	{ 0x1E58, 0x1E58 },
	{ 0x1E5A, 0x1E5A },
	{ 0x1E5C, 0x1E5C },
	{ 0x1E5E, 0x1E5E },
	{ 0x1E60, 0x1E60 },
	{ 0x1E62, 0x1E62 },
	{ 0x1E64, 0x1E64 },
	{ 0x1E66, 0x1E66 },
	{ 0x1E68, 0x1E68 },
	{ 0x1E6A, 0x1E6A },
	{ 0x1E6C, 0x1E6C },
	{ 0x1E6E, 0x1E6E },
	{ 0x1E70, 0x1E70 },
	{ 0x1E72, 0x1E72 },
	{ 0x1E74, 0x1E74 },
	{ 0x1E76, 0x1E76 },
	{ 0x1E78, 0x1E78 },
	{ 0x1E7A, 0x1E7A },
	{ 0x1E7C, 0x1E7C },
	{ 0x1E7E, 0x1E7E },
	{ 0x1E80, 0x1E80 },
	{ 0x1E82, 0x1E82 },
	{ 0x1E84, 0x1E84 },
	{ 0x1E86, 0x1E86 },
	{ 0x1E88, 0x1E88 },
	{ 0x1E8A, 0x1E8A },
	{ 0x1E8C, 0x1E8C },
	{ 0x1E8E, 0x1E8E },
	{ 0x1E90, 0x1E90 },
	{ 0x1E92, 0x1E92 },
	{ 0x1E94, 0x1E94 },
	{ 0x1E9E, 0x1E9E },
	{ 0x1EA0, 0x1EA0 },
	{ 0x1EA2, 0x1EA2 },
	{ 0x1EA4, 0x1EA4 },
	{ 0x1EA6, 0x1EA6 },
	{ 0x1EA8, 0x1EA8 },
	{ 0x1EAA, 0x1EAA },
	{ 0x1EAC, 0x1EAC },
	{ 0x1EAE, 0x1EAE },
	{ 0x1EB0, 0x1EB0 },
	{ 0x1EB2, 0x1EB2 },
	{ 0x1EB4, 0x1EB4 },
	{ 0x1EB6, 0x1EB6 },
	{ 0x1EB8, 0x1EB8 },
	{ 0x1EBA, 0x1EBA },
	{ 0x1EBC, 0x1EBC },
	{ 0x1EBE, 0x1EBE },
	{ 0x1EC0, 0x1EC0 },
	{ 0x1EC2, 0x1EC2 },
	{ 0x1EC4, 0x1EC4 },
	{ 0x1EC6, 0x1EC6 },
	{ 0x1EC8, 0x1EC8 },
	{ 0x1ECA, 0x1ECA },
	{ 0x1ECC, 0x1ECC },
	{ 0x1ECE, 0x1ECE },
	{ 0x1ED0, 0x1ED0 },
	{ 0x1ED2, 0x1ED2 },
	{ 0x1ED4, 0x1ED4 },
	{ 0x1ED6, 0x1ED6 },
	{ 0x1ED8, 0x1ED8 },
	{ 0x1EDA, 0x1EDA },
	{ 0x1EDC, 0x1EDC },
	{ 0x1EDE, 0x1EDE },
	{ 0x1EE0, 0x1EE0 },
	{ 0x1EE2, 0x1EE2 },
	{ 0x1EE4, 0x1EE4 },
	{ 0x1EE6, 0x1EE6 },
	{ 0x1EE8, 0x1EE8 },
	{ 0x1EEA, 0x1EEA },
	{ 0x1EEC, 0x1EEC },
	{ 0x1EEE, 0x1EEE },
	{ 0x1EF0, 0x1EF0 },
	{ 0x1EF2, 0x1EF2 },
	{ 0x1EF4, 0x1EF4 },
	{ 0x1EF6, 0x1EF6 },
	{ 0x1EF8, 0x1EF8 },
	{ 0x1EFA, 0x1EFA },
	{ 0x1EFC, 0x1EFC },
	{ 0x1EFE, 0x1EFE },
	{ 0x1F08, 0x1F0F },
	{ 0x1F18, 0x1F1D },
	{ 0x1F28, 0x1F2F },
	{ 0x1F38, 0x1F3F },
	{ 0x1F48, 0x1F4D },
	{ 0x1F59, 0x1F59 },
	{ 0x1F5B, 0x1F5B },
	{ 0x1F5D, 0x1F5D },
	{ 0x1F5F, 0x1F5F },
	{ 0x1F68, 0x1F6F },
	{ 0x1F88, 0x1F8F },
	{ 0x1F98, 0x1F9F },
	{ 0x1FA8, 0x1FAF },
	{ 0x1FB8, 0x1FBC },
	{ 0x1FC8, 0x1FCC },
	{ 0x1FD8, 0x1FDB },
	{ 0x1FE8, 0x1FEC },
	{ 0x1FF8, 0x1FFC },
	{ 0x2126, 0x2126 },
	{ 0x212A, 0x212B },
	{ 0x2132, 0x2132 },
	{ 0x2160, 0x216F },
	{ 0x2183, 0x2183 },
	{ 0x24B6, 0x24CF },
	{ 0x2C00, 0x2C2E },
	{ 0x2C60, 0x2C60 },
	{ 0x2C62, 0x2C64 },
	{ 0x2C67, 0x2C67 },
	{ 0x2C69, 0x2C69 },
	{ 0x2C6B, 0x2C6B },
	{ 0x2C6D, 0x2C70 },
	{ 0x2C72, 0x2C72 },
	{ 0x2C75, 0x2C75 },
	{ 0x2C7E, 0x2C80 },
	{ 0x2C82, 0x2C82 },
	{ 0x2C84, 0x2C84 },
	{ 0x2C86, 0x2C86 },
	{ 0x2C88, 0x2C88 },
	{ 0x2C8A, 0x2C8A },
	{ 0x2C8C, 0x2C8C },
	{ 0x2C8E, 0x2C8E },
	{ 0x2C90, 0x2C90 },
	{ 0x2C92, 0x2C92 },
	{ 0x2C94, 0x2C94 },
	{ 0x2C96, 0x2C96 },
	{ 0x2C98, 0x2C98 },
	{ 0x2C9A, 0x2C9A },
	{ 0x2C9C, 0x2C9C },
	{ 0x2C9E, 0x2C9E },
	{ 0x2CA0, 0x2CA0 },
	{ 0x2CA2, 0x2CA2 },
	{ 0x2CA4, 0x2CA4 },
	{ 0x2CA6, 0x2CA6 },
	{ 0x2CA8, 0x2CA8 },
	{ 0x2CAA, 0x2CAA },
	{ 0x2CAC, 0x2CAC },
	{ 0x2CAE, 0x2CAE },
	{ 0x2CB0, 0x2CB0 },
	{ 0x2CB2, 0x2CB2 },
	{ 0x2CB4, 0x2CB4 },
	{ 0x2CB6, 0x2CB6 },
	{ 0x2CB8, 0x2CB8 },
	{ 0x2CBA, 0x2CBA },
	{ 0x2CBC, 0x2CBC },
	{ 0x2CBE, 0x2CBE },
	{ 0x2CC0, 0x2CC0 },
	{ 0x2CC2, 0x2CC2 },
	{ 0x2CC4, 0x2CC4 },
	{ 0x2CC6, 0x2CC6 },
	{ 0x2CC8, 0x2CC8 },
	{ 0x2CCA, 0x2CCA },
	{ 0x2CCC, 0x2CCC },
	{ 0x2CCE, 0x2CCE },
	{ 0x2CD0, 0x2CD0 },
	{ 0x2CD2, 0x2CD2 },
	{ 0x2CD4, 0x2CD4 },
	{ 0x2CD6, 0x2CD6 },
	{ 0x2CD8, 0x2CD8 },
	{ 0x2CDA, 0x2CDA },
	{ 0x2CDC, 0x2CDC },
	{ 0x2CDE, 0x2CDE },
	{ 0x2CE0, 0x2CE0 },
	{ 0x2CE2, 0x2CE2 },
	{ 0x2CEB, 0x2CEB },
	{ 0x2CED, 0x2CED },
	{ 0x2CF2, 0x2CF2 },
	{ 0xA640, 0xA640 },
	{ 0xA642, 0xA642 },
	{ 0xA644, 0xA644 },
	{ 0xA646, 0xA646 },
	{ 0xA648, 0xA648 },
	{ 0xA64A, 0xA64A },
	{ 0xA64C, 0xA64C },
	{ 0xA64E, 0xA64E },
	{ 0xA650, 0xA650 },
	{ 0xA652, 0xA652 },
	{ 0xA654, 0xA654 },
	{ 0xA656, 0xA656 },
	{ 0xA658, 0xA658 },
	{ 0xA65A, 0xA65A },
	{ 0xA65C, 0xA65C },
	{ 0xA65E, 0xA65E },
	{ 0xA660, 0xA660 },
	{ 0xA662, 0xA662 },
	{ 0xA664, 0xA664 },
	{ 0xA666, 0xA666 },
	{ 0xA668, 0xA668 },
	{ 0xA66A, 0xA66A },
	{ 0xA66C, 0xA66C },
	{ 0xA680, 0xA680 },
	{ 0xA682, 0xA682 },
	{ 0xA684, 0xA684 },
	{ 0xA686, 0xA686 },
	{ 0xA688, 0xA688 },
	{ 0xA68A, 0xA68A },
	{ 0xA68C, 0xA68C },
	{ 0xA68E, 0xA68E },
	{ 0xA690, 0xA690 },
	{ 0xA692, 0xA692 },
	{ 0xA694, 0xA694 },
	{ 0xA696, 0xA696 },
	{ 0xA698, 0xA698 },
	{ 0xA69A, 0xA69A },
	{ 0xA722, 0xA722 },
	{ 0xA724, 0xA724 },
	{ 0xA726, 0xA726 },
	{ 0xA728, 0xA728 },
	{ 0xA72A, 0xA72A },
	{ 0xA72C, 0xA72C },
	{ 0xA72E, 0xA72E },
	{ 0xA732, 0xA732 },
	{ 0xA734, 0xA734 },
	{ 0xA736, 0xA736 },
	{ 0xA738, 0xA738 },
	{ 0xA73A, 0xA73A },
	{ 0xA73C, 0xA73C },
	{ 0xA73E, 0xA73E },
	{ 0xA740, 0xA740 },
	{ 0xA742, 0xA742 },
	{ 0xA744, 0xA744 },
	{ 0xA746, 0xA746 },
	{ 0xA748, 0xA748 },
	{ 0xA74A, 0xA74A },
	{ 0xA74C, 0xA74C },
	{ 0xA74E, 0xA74E },
	{ 0xA750, 0xA750 },
	{ 0xA752, 0xA752 },
	{ 0xA754, 0xA754 },
	{ 0xA756, 0xA756 },
	{ 0xA758, 0xA758 },
	{ 0xA75A, 0xA75A },
	{ 0xA75C, 0xA75C },
	{ 0xA75E, 0xA75E },
	{ 0xA760, 0xA760 },
	{ 0xA762, 0xA762 },
	{ 0xA764, 0xA764 },
	{ 0xA766, 0xA766 },
	{ 0xA768, 0xA768 },
	{ 0xA76A, 0xA76A },
	{ 0xA76C, 0xA76C },
	{ 0xA76E, 0xA76E },
	{ 0xA779, 0xA779 },
	{ 0xA77B, 0xA77B },
	{ 0xA77D, 0xA77E },
	{ 0xA780, 0xA780 },
	{ 0xA782, 0xA782 },
	{ 0xA784, 0xA784 },
	{ 0xA786, 0xA786 },
	{ 0xA78B, 0xA78B },
	{ 0xA78D, 0xA78D },
	{ 0xA790, 0xA790 },
	{ 0xA792, 0xA792 },
	{ 0xA796, 0xA796 },
	{ 0xA798, 0xA798 },
	{ 0xA79A, 0xA79A },
	{ 0xA79C, 0xA79C },
	{ 0xA79E, 0xA79E },
	{ 0xA7A0, 0xA7A0 },
	{ 0xA7A2, 0xA7A2 },
	{ 0xA7A4, 0xA7A4 },
	{ 0xA7A6, 0xA7A6 },
	{ 0xA7A8, 0xA7A8 },
	{ 0xA7AA, 0xA7AE },
	{ 0xA7B0, 0xA7B4 },
	{ 0xA7B6, 0xA7B6 },
	{ 0xA7B8, 0xA7B8 },
	{ 0xFF21, 0xFF3A },
	{ 0x10400, 0x10427 },
	{ 0x104B0, 0x104D3 },
	{ 0x10C80, 0x10CB2 },
	{ 0x118A0, 0x118BF },
	{ 0x16E40, 0x16E5F },
	{ 0x1E900, 0x1E921 }
};

MAKE_ISW(upper)

static const struct mb_ucsrange data_wctype_lower[] = {
	{ 0x0061, 0x007A },
	{ 0x00B5, 0x00B5 },
	{ 0x00E0, 0x00F6 },
	{ 0x00F8, 0x00FF },
	{ 0x0101, 0x0101 },
	{ 0x0103, 0x0103 },
	{ 0x0105, 0x0105 },
	{ 0x0107, 0x0107 },
	{ 0x0109, 0x0109 },
	{ 0x010B, 0x010B },
	{ 0x010D, 0x010D },
	{ 0x010F, 0x010F },
	{ 0x0111, 0x0111 },
	{ 0x0113, 0x0113 },
	{ 0x0115, 0x0115 },
	{ 0x0117, 0x0117 },
	{ 0x0119, 0x0119 },
	{ 0x011B, 0x011B },
	{ 0x011D, 0x011D },
	{ 0x011F, 0x011F },
	{ 0x0121, 0x0121 },
	{ 0x0123, 0x0123 },
	{ 0x0125, 0x0125 },
	{ 0x0127, 0x0127 },
	{ 0x0129, 0x0129 },
	{ 0x012B, 0x012B },
	{ 0x012D, 0x012D },
	{ 0x012F, 0x012F },
	{ 0x0131, 0x0131 },
	{ 0x0133, 0x0133 },
	{ 0x0135, 0x0135 },
	{ 0x0137, 0x0137 },
	{ 0x013A, 0x013A },
	{ 0x013C, 0x013C },
	{ 0x013E, 0x013E },
	{ 0x0140, 0x0140 },
	{ 0x0142, 0x0142 },
	{ 0x0144, 0x0144 },
	{ 0x0146, 0x0146 },
	{ 0x0148, 0x0148 },
	{ 0x014B, 0x014B },
	{ 0x014D, 0x014D },
	{ 0x014F, 0x014F },
	{ 0x0151, 0x0151 },
	{ 0x0153, 0x0153 },
	{ 0x0155, 0x0155 },
	{ 0x0157, 0x0157 },
	{ 0x0159, 0x0159 },
	{ 0x015B, 0x015B },
	{ 0x015D, 0x015D },
	{ 0x015F, 0x015F },
	{ 0x0161, 0x0161 },
	{ 0x0163, 0x0163 },
	{ 0x0165, 0x0165 },
	{ 0x0167, 0x0167 },
	{ 0x0169, 0x0169 },
	{ 0x016B, 0x016B },
	{ 0x016D, 0x016D },
	{ 0x016F, 0x016F },
	{ 0x0171, 0x0171 },
	{ 0x0173, 0x0173 },
	{ 0x0175, 0x0175 },
	{ 0x0177, 0x0177 },
	{ 0x017A, 0x017A },
	{ 0x017C, 0x017C },
	{ 0x017E, 0x0180 },
	{ 0x0183, 0x0183 },
	{ 0x0185, 0x0185 },
	{ 0x0188, 0x0188 },
	{ 0x018C, 0x018C },
	{ 0x0192, 0x0192 },
	{ 0x0195, 0x0195 },
	{ 0x0199, 0x019A },
	{ 0x019E, 0x019E },
	{ 0x01A1, 0x01A1 },
	{ 0x01A3, 0x01A3 },
	{ 0x01A5, 0x01A5 },
	{ 0x01A8, 0x01A8 },
	{ 0x01AD, 0x01AD },
	{ 0x01B0, 0x01B0 },
	{ 0x01B4, 0x01B4 },
	{ 0x01B6, 0x01B6 },
	{ 0x01B9, 0x01B9 },
	{ 0x01BD, 0x01BD },
	{ 0x01BF, 0x01BF },
	{ 0x01C6, 0x01C6 },
	{ 0x01C9, 0x01C9 },
	{ 0x01CC, 0x01CC },
	{ 0x01CE, 0x01CE },
	{ 0x01D0, 0x01D0 },
	{ 0x01D2, 0x01D2 },
	{ 0x01D4, 0x01D4 },
	{ 0x01D6, 0x01D6 },
	{ 0x01D8, 0x01D8 },
	{ 0x01DA, 0x01DA },
	{ 0x01DC, 0x01DD },
	{ 0x01DF, 0x01DF },
	{ 0x01E1, 0x01E1 },
	{ 0x01E3, 0x01E3 },
	{ 0x01E5, 0x01E5 },
	{ 0x01E7, 0x01E7 },
	{ 0x01E9, 0x01E9 },
	{ 0x01EB, 0x01EB },
	{ 0x01ED, 0x01ED },
	{ 0x01EF, 0x01EF },
	{ 0x01F3, 0x01F3 },
	{ 0x01F5, 0x01F5 },
	{ 0x01F9, 0x01F9 },
	{ 0x01FB, 0x01FB },
	{ 0x01FD, 0x01FD },
	{ 0x01FF, 0x01FF },
	{ 0x0201, 0x0201 },
	{ 0x0203, 0x0203 },
	{ 0x0205, 0x0205 },
	{ 0x0207, 0x0207 },
	{ 0x0209, 0x0209 },
	{ 0x020B, 0x020B },
	{ 0x020D, 0x020D },
	{ 0x020F, 0x020F },
	{ 0x0211, 0x0211 },
	{ 0x0213, 0x0213 },
	{ 0x0215, 0x0215 },
	{ 0x0217, 0x0217 },
	{ 0x0219, 0x0219 },
	{ 0x021B, 0x021B },
	{ 0x021D, 0x021D },
	{ 0x021F, 0x021F },
	{ 0x0223, 0x0223 },
	{ 0x0225, 0x0225 },
	{ 0x0227, 0x0227 },
	{ 0x0229, 0x0229 },
	{ 0x022B, 0x022B },
	{ 0x022D, 0x022D },
	{ 0x022F, 0x022F },
	{ 0x0231, 0x0231 },
	{ 0x0233, 0x0233 },
	{ 0x023C, 0x023C },
	{ 0x023F, 0x0240 },
	{ 0x0242, 0x0242 },
	{ 0x0247, 0x0247 },
	{ 0x0249, 0x0249 },
	{ 0x024B, 0x024B },
	{ 0x024D, 0x024D },
	{ 0x024F, 0x0254 },
	{ 0x0256, 0x0257 },
	{ 0x0259, 0x0259 },
	{ 0x025B, 0x025C },
	{ 0x0260, 0x0261 },
	{ 0x0263, 0x0263 },
	{ 0x0265, 0x0266 },
	{ 0x0268, 0x026C },
	{ 0x026F, 0x026F },
	{ 0x0271, 0x0272 },
	{ 0x0275, 0x0275 },
	{ 0x027D, 0x027D },
	{ 0x0280, 0x0280 },
	{ 0x0283, 0x0283 },
	{ 0x0287, 0x028C },
	{ 0x0292, 0x0292 },
	{ 0x029D, 0x029E },
	{ 0x0345, 0x0345 },
	{ 0x0371, 0x0371 },
	{ 0x0373, 0x0373 },
	{ 0x0377, 0x0377 },
	{ 0x037B, 0x037D },
	{ 0x03AC, 0x03AF },
	{ 0x03B1, 0x03CE },
	{ 0x03D0, 0x03D1 },
	{ 0x03D5, 0x03D7 },
	{ 0x03D9, 0x03D9 },
	{ 0x03DB, 0x03DB },
	{ 0x03DD, 0x03DD },
	{ 0x03DF, 0x03DF },
	{ 0x03E1, 0x03E1 },
	{ 0x03E3, 0x03E3 },
	{ 0x03E5, 0x03E5 },
	{ 0x03E7, 0x03E7 },
	{ 0x03E9, 0x03E9 },
	{ 0x03EB, 0x03EB },
	{ 0x03ED, 0x03ED },
	{ 0x03EF, 0x03F3 },
	{ 0x03F5, 0x03F5 },
	{ 0x03F8, 0x03F8 },
	{ 0x03FB, 0x03FB },
	{ 0x0430, 0x045F },
	{ 0x0461, 0x0461 },
	{ 0x0463, 0x0463 },
	{ 0x0465, 0x0465 },
	{ 0x0467, 0x0467 },
	{ 0x0469, 0x0469 },
	{ 0x046B, 0x046B },
	{ 0x046D, 0x046D },
	{ 0x046F, 0x046F },
	{ 0x0471, 0x0471 },
	{ 0x0473, 0x0473 },
	{ 0x0475, 0x0475 },
	{ 0x0477, 0x0477 },
	{ 0x0479, 0x0479 },
	{ 0x047B, 0x047B },
	{ 0x047D, 0x047D },
	{ 0x047F, 0x047F },
	{ 0x0481, 0x0481 },
	{ 0x048B, 0x048B },
	{ 0x048D, 0x048D },
	{ 0x048F, 0x048F },
	{ 0x0491, 0x0491 },
	{ 0x0493, 0x0493 },
	{ 0x0495, 0x0495 },
	{ 0x0497, 0x0497 },
	{ 0x0499, 0x0499 },
	{ 0x049B, 0x049B },
	{ 0x049D, 0x049D },
	{ 0x049F, 0x049F },
	{ 0x04A1, 0x04A1 },
	{ 0x04A3, 0x04A3 },
	{ 0x04A5, 0x04A5 },
	{ 0x04A7, 0x04A7 },
	{ 0x04A9, 0x04A9 },
	{ 0x04AB, 0x04AB },
	{ 0x04AD, 0x04AD },
	{ 0x04AF, 0x04AF },
	{ 0x04B1, 0x04B1 },
	{ 0x04B3, 0x04B3 },
	{ 0x04B5, 0x04B5 },
	{ 0x04B7, 0x04B7 },
	{ 0x04B9, 0x04B9 },
	{ 0x04BB, 0x04BB },
	{ 0x04BD, 0x04BD },
	{ 0x04BF, 0x04BF },
	{ 0x04C2, 0x04C2 },
	{ 0x04C4, 0x04C4 },
	{ 0x04C6, 0x04C6 },
	{ 0x04C8, 0x04C8 },
	{ 0x04CA, 0x04CA },
	{ 0x04CC, 0x04CC },
	{ 0x04CE, 0x04CF },
	{ 0x04D1, 0x04D1 },
	{ 0x04D3, 0x04D3 },
	{ 0x04D5, 0x04D5 },
	{ 0x04D7, 0x04D7 },
	{ 0x04D9, 0x04D9 },
	{ 0x04DB, 0x04DB },
	{ 0x04DD, 0x04DD },
	{ 0x04DF, 0x04DF },
	{ 0x04E1, 0x04E1 },
	{ 0x04E3, 0x04E3 },
	{ 0x04E5, 0x04E5 },
	{ 0x04E7, 0x04E7 },
	{ 0x04E9, 0x04E9 },
	{ 0x04EB, 0x04EB },
	{ 0x04ED, 0x04ED },
	{ 0x04EF, 0x04EF },
	{ 0x04F1, 0x04F1 },
	{ 0x04F3, 0x04F3 },
	{ 0x04F5, 0x04F5 },
	{ 0x04F7, 0x04F7 },
	{ 0x04F9, 0x04F9 },
	{ 0x04FB, 0x04FB },
	{ 0x04FD, 0x04FD },
	{ 0x04FF, 0x04FF },
	{ 0x0501, 0x0501 },
	{ 0x0503, 0x0503 },
	{ 0x0505, 0x0505 },
	{ 0x0507, 0x0507 },
	{ 0x0509, 0x0509 },
	{ 0x050B, 0x050B },
	{ 0x050D, 0x050D },
	{ 0x050F, 0x050F },
	{ 0x0511, 0x0511 },
	{ 0x0513, 0x0513 },
	{ 0x0515, 0x0515 },
	{ 0x0517, 0x0517 },
	{ 0x0519, 0x0519 },
	{ 0x051B, 0x051B },
	{ 0x051D, 0x051D },
	{ 0x051F, 0x051F },
	{ 0x0521, 0x0521 },
	{ 0x0523, 0x0523 },
	{ 0x0525, 0x0525 },
	{ 0x0527, 0x0527 },
	{ 0x0529, 0x0529 },
	{ 0x052B, 0x052B },
	{ 0x052D, 0x052D },
	{ 0x052F, 0x052F },
	{ 0x0561, 0x0586 },
	{ 0x10D0, 0x10FA },
	{ 0x10FD, 0x10FF },
	{ 0x13F8, 0x13FD },
	{ 0x1C80, 0x1C88 },
	{ 0x1D79, 0x1D79 },
	{ 0x1D7D, 0x1D7D },
	{ 0x1E01, 0x1E01 },
	{ 0x1E03, 0x1E03 },
	{ 0x1E05, 0x1E05 },
	{ 0x1E07, 0x1E07 },
	{ 0x1E09, 0x1E09 },
	{ 0x1E0B, 0x1E0B },
	{ 0x1E0D, 0x1E0D },
	{ 0x1E0F, 0x1E0F },
	{ 0x1E11, 0x1E11 },
	{ 0x1E13, 0x1E13 },
	{ 0x1E15, 0x1E15 },
	{ 0x1E17, 0x1E17 },
	{ 0x1E19, 0x1E19 },
	{ 0x1E1B, 0x1E1B },
	{ 0x1E1D, 0x1E1D },
	{ 0x1E1F, 0x1E1F },
	{ 0x1E21, 0x1E21 },
	{ 0x1E23, 0x1E23 },
	{ 0x1E25, 0x1E25 },
	{ 0x1E27, 0x1E27 },
	{ 0x1E29, 0x1E29 },
	{ 0x1E2B, 0x1E2B },
	{ 0x1E2D, 0x1E2D },
	{ 0x1E2F, 0x1E2F },
	{ 0x1E31, 0x1E31 },
	{ 0x1E33, 0x1E33 },
	{ 0x1E35, 0x1E35 },
	{ 0x1E37, 0x1E37 },
	{ 0x1E39, 0x1E39 },
	{ 0x1E3B, 0x1E3B },
	{ 0x1E3D, 0x1E3D },
	{ 0x1E3F, 0x1E3F },
	{ 0x1E41, 0x1E41 },
	{ 0x1E43, 0x1E43 },
	{ 0x1E45, 0x1E45 },
	{ 0x1E47, 0x1E47 },
	{ 0x1E49, 0x1E49 },
	{ 0x1E4B, 0x1E4B },
	{ 0x1E4D, 0x1E4D },
	{ 0x1E4F, 0x1E4F },
	{ 0x1E51, 0x1E51 },
	{ 0x1E53, 0x1E53 },
	{ 0x1E55, 0x1E55 },
	{ 0x1E57, 0x1E57 },
	{ 0x1E59, 0x1E59 },
	{ 0x1E5B, 0x1E5B },
	{ 0x1E5D, 0x1E5D },
	{ 0x1E5F, 0x1E5F },
	{ 0x1E61, 0x1E61 },
	{ 0x1E63, 0x1E63 },
	{ 0x1E65, 0x1E65 },
	{ 0x1E67, 0x1E67 },
	{ 0x1E69, 0x1E69 },
	{ 0x1E6B, 0x1E6B },
	{ 0x1E6D, 0x1E6D },
	{ 0x1E6F, 0x1E6F },
	{ 0x1E71, 0x1E71 },
	{ 0x1E73, 0x1E73 },
	{ 0x1E75, 0x1E75 },
	{ 0x1E77, 0x1E77 },
	{ 0x1E79, 0x1E79 },
	{ 0x1E7B, 0x1E7B },
	{ 0x1E7D, 0x1E7D },
	{ 0x1E7F, 0x1E7F },
	{ 0x1E81, 0x1E81 },
	{ 0x1E83, 0x1E83 },
	{ 0x1E85, 0x1E85 },
	{ 0x1E87, 0x1E87 },
	{ 0x1E89, 0x1E89 },
	{ 0x1E8B, 0x1E8B },
	{ 0x1E8D, 0x1E8D },
	{ 0x1E8F, 0x1E8F },
	{ 0x1E91, 0x1E91 },
	{ 0x1E93, 0x1E93 },
	{ 0x1E95, 0x1E95 },
	{ 0x1E9B, 0x1E9B },
	{ 0x1EA1, 0x1EA1 },
	{ 0x1EA3, 0x1EA3 },
	{ 0x1EA5, 0x1EA5 },
	{ 0x1EA7, 0x1EA7 },
	{ 0x1EA9, 0x1EA9 },
	{ 0x1EAB, 0x1EAB },
	{ 0x1EAD, 0x1EAD },
	{ 0x1EAF, 0x1EAF },
	{ 0x1EB1, 0x1EB1 },
	{ 0x1EB3, 0x1EB3 },
	{ 0x1EB5, 0x1EB5 },
	{ 0x1EB7, 0x1EB7 },
	{ 0x1EB9, 0x1EB9 },
	{ 0x1EBB, 0x1EBB },
	{ 0x1EBD, 0x1EBD },
	{ 0x1EBF, 0x1EBF },
	{ 0x1EC1, 0x1EC1 },
	{ 0x1EC3, 0x1EC3 },
	{ 0x1EC5, 0x1EC5 },
	{ 0x1EC7, 0x1EC7 },
	{ 0x1EC9, 0x1EC9 },
	{ 0x1ECB, 0x1ECB },
	{ 0x1ECD, 0x1ECD },
	{ 0x1ECF, 0x1ECF },
	{ 0x1ED1, 0x1ED1 },
	{ 0x1ED3, 0x1ED3 },
	{ 0x1ED5, 0x1ED5 },
	{ 0x1ED7, 0x1ED7 },
	{ 0x1ED9, 0x1ED9 },
	{ 0x1EDB, 0x1EDB },
	{ 0x1EDD, 0x1EDD },
	{ 0x1EDF, 0x1EDF },
	{ 0x1EE1, 0x1EE1 },
	{ 0x1EE3, 0x1EE3 },
	{ 0x1EE5, 0x1EE5 },
	{ 0x1EE7, 0x1EE7 },
	{ 0x1EE9, 0x1EE9 },
	{ 0x1EEB, 0x1EEB },
	{ 0x1EED, 0x1EED },
	{ 0x1EEF, 0x1EEF },
	{ 0x1EF1, 0x1EF1 },
	{ 0x1EF3, 0x1EF3 },
	{ 0x1EF5, 0x1EF5 },
	{ 0x1EF7, 0x1EF7 },
	{ 0x1EF9, 0x1EF9 },
	{ 0x1EFB, 0x1EFB },
	{ 0x1EFD, 0x1EFD },
	{ 0x1EFF, 0x1F07 },
	{ 0x1F10, 0x1F15 },
	{ 0x1F20, 0x1F27 },
	{ 0x1F30, 0x1F37 },
	{ 0x1F40, 0x1F45 },
	{ 0x1F51, 0x1F51 },
	{ 0x1F53, 0x1F53 },
	{ 0x1F55, 0x1F55 },
	{ 0x1F57, 0x1F57 },
	{ 0x1F60, 0x1F67 },
	{ 0x1F70, 0x1F7D },
	{ 0x1F80, 0x1F87 },
	{ 0x1F90, 0x1F97 },
	{ 0x1FA0, 0x1FA7 },
	{ 0x1FB0, 0x1FB1 },
	{ 0x1FB3, 0x1FB3 },
	{ 0x1FBE, 0x1FBE },
	{ 0x1FC3, 0x1FC3 },
	{ 0x1FD0, 0x1FD1 },
	{ 0x1FE0, 0x1FE1 },
	{ 0x1FE5, 0x1FE5 },
	{ 0x1FF3, 0x1FF3 },
	{ 0x214E, 0x214E },
	{ 0x2170, 0x217F },
	{ 0x2184, 0x2184 },
	{ 0x24D0, 0x24E9 },
	{ 0x2C30, 0x2C5E },
	{ 0x2C61, 0x2C61 },
	{ 0x2C65, 0x2C66 },
	{ 0x2C68, 0x2C68 },
	{ 0x2C6A, 0x2C6A },
	{ 0x2C6C, 0x2C6C },
	{ 0x2C73, 0x2C73 },
	{ 0x2C76, 0x2C76 },
	{ 0x2C81, 0x2C81 },
	{ 0x2C83, 0x2C83 },
	{ 0x2C85, 0x2C85 },
	{ 0x2C87, 0x2C87 },
	{ 0x2C89, 0x2C89 },
	{ 0x2C8B, 0x2C8B },
	{ 0x2C8D, 0x2C8D },
	{ 0x2C8F, 0x2C8F },
	{ 0x2C91, 0x2C91 },
	{ 0x2C93, 0x2C93 },
	{ 0x2C95, 0x2C95 },
	{ 0x2C97, 0x2C97 },
	{ 0x2C99, 0x2C99 },
	{ 0x2C9B, 0x2C9B },
	{ 0x2C9D, 0x2C9D },
	{ 0x2C9F, 0x2C9F },
	{ 0x2CA1, 0x2CA1 },
	{ 0x2CA3, 0x2CA3 },
	{ 0x2CA5, 0x2CA5 },
	{ 0x2CA7, 0x2CA7 },
	{ 0x2CA9, 0x2CA9 },
	{ 0x2CAB, 0x2CAB },
	{ 0x2CAD, 0x2CAD },
	{ 0x2CAF, 0x2CAF },
	{ 0x2CB1, 0x2CB1 },
	{ 0x2CB3, 0x2CB3 },
	{ 0x2CB5, 0x2CB5 },
	{ 0x2CB7, 0x2CB7 },
	{ 0x2CB9, 0x2CB9 },
	{ 0x2CBB, 0x2CBB },
	{ 0x2CBD, 0x2CBD },
	{ 0x2CBF, 0x2CBF },
	{ 0x2CC1, 0x2CC1 },
	{ 0x2CC3, 0x2CC3 },
	{ 0x2CC5, 0x2CC5 },
	{ 0x2CC7, 0x2CC7 },
	{ 0x2CC9, 0x2CC9 },
	{ 0x2CCB, 0x2CCB },
	{ 0x2CCD, 0x2CCD },
	{ 0x2CCF, 0x2CCF },
	{ 0x2CD1, 0x2CD1 },
	{ 0x2CD3, 0x2CD3 },
	{ 0x2CD5, 0x2CD5 },
	{ 0x2CD7, 0x2CD7 },
	{ 0x2CD9, 0x2CD9 },
	{ 0x2CDB, 0x2CDB },
	{ 0x2CDD, 0x2CDD },
	{ 0x2CDF, 0x2CDF },
	{ 0x2CE1, 0x2CE1 },
	{ 0x2CE3, 0x2CE3 },
	{ 0x2CEC, 0x2CEC },
	{ 0x2CEE, 0x2CEE },
	{ 0x2CF3, 0x2CF3 },
	{ 0x2D00, 0x2D25 },
	{ 0x2D27, 0x2D27 },
	{ 0x2D2D, 0x2D2D },
	{ 0xA641, 0xA641 },
	{ 0xA643, 0xA643 },
	{ 0xA645, 0xA645 },
	{ 0xA647, 0xA647 },
	{ 0xA649, 0xA649 },
	{ 0xA64B, 0xA64B },
	{ 0xA64D, 0xA64D },
	{ 0xA64F, 0xA64F },
	{ 0xA651, 0xA651 },
	{ 0xA653, 0xA653 },
	{ 0xA655, 0xA655 },
	{ 0xA657, 0xA657 },
	{ 0xA659, 0xA659 },
	{ 0xA65B, 0xA65B },
	{ 0xA65D, 0xA65D },
	{ 0xA65F, 0xA65F },
	{ 0xA661, 0xA661 },
	{ 0xA663, 0xA663 },
	{ 0xA665, 0xA665 },
	{ 0xA667, 0xA667 },
	{ 0xA669, 0xA669 },
	{ 0xA66B, 0xA66B },
	{ 0xA66D, 0xA66D },
	{ 0xA681, 0xA681 },
	{ 0xA683, 0xA683 },
	{ 0xA685, 0xA685 },
	{ 0xA687, 0xA687 },
	{ 0xA689, 0xA689 },
	{ 0xA68B, 0xA68B },
	{ 0xA68D, 0xA68D },
	{ 0xA68F, 0xA68F },
	{ 0xA691, 0xA691 },
	{ 0xA693, 0xA693 },
	{ 0xA695, 0xA695 },
	{ 0xA697, 0xA697 },
	{ 0xA699, 0xA699 },
	{ 0xA69B, 0xA69B },
	{ 0xA723, 0xA723 },
	{ 0xA725, 0xA725 },
	{ 0xA727, 0xA727 },
	{ 0xA729, 0xA729 },
	{ 0xA72B, 0xA72B },
	{ 0xA72D, 0xA72D },
	{ 0xA72F, 0xA72F },
	{ 0xA733, 0xA733 },
	{ 0xA735, 0xA735 },
	{ 0xA737, 0xA737 },
	{ 0xA739, 0xA739 },
	{ 0xA73B, 0xA73B },
	{ 0xA73D, 0xA73D },
	{ 0xA73F, 0xA73F },
	{ 0xA741, 0xA741 },
	{ 0xA743, 0xA743 },
	{ 0xA745, 0xA745 },
	{ 0xA747, 0xA747 },
	{ 0xA749, 0xA749 },
	{ 0xA74B, 0xA74B },
	{ 0xA74D, 0xA74D },
	{ 0xA74F, 0xA74F },
	{ 0xA751, 0xA751 },
	{ 0xA753, 0xA753 },
	{ 0xA755, 0xA755 },
	{ 0xA757, 0xA757 },
	{ 0xA759, 0xA759 },
	{ 0xA75B, 0xA75B },
	{ 0xA75D, 0xA75D },
	{ 0xA75F, 0xA75F },
	{ 0xA761, 0xA761 },
	{ 0xA763, 0xA763 },
	{ 0xA765, 0xA765 },
	{ 0xA767, 0xA767 },
	{ 0xA769, 0xA769 },
	{ 0xA76B, 0xA76B },
	{ 0xA76D, 0xA76D },
	{ 0xA76F, 0xA76F },
	{ 0xA77A, 0xA77A },
	{ 0xA77C, 0xA77C },
	{ 0xA77F, 0xA77F },
	{ 0xA781, 0xA781 },
	{ 0xA783, 0xA783 },
	{ 0xA785, 0xA785 },
	{ 0xA787, 0xA787 },
	{ 0xA78C, 0xA78C },
	{ 0xA791, 0xA791 },
	{ 0xA793, 0xA793 },
	{ 0xA797, 0xA797 },
	{ 0xA799, 0xA799 },
	{ 0xA79B, 0xA79B },
	{ 0xA79D, 0xA79D },
	{ 0xA79F, 0xA79F },
	{ 0xA7A1, 0xA7A1 },
	{ 0xA7A3, 0xA7A3 },
	{ 0xA7A5, 0xA7A5 },
	{ 0xA7A7, 0xA7A7 },
	{ 0xA7A9, 0xA7A9 },
	{ 0xA7B5, 0xA7B5 },
	{ 0xA7B7, 0xA7B7 },
	{ 0xA7B9, 0xA7B9 },
	{ 0xAB53, 0xAB53 },
	{ 0xAB70, 0xABBF },
	{ 0xFF41, 0xFF5A },
	{ 0x10428, 0x1044F },
	{ 0x104D8, 0x104FB },
	{ 0x10CC0, 0x10CF2 },
	{ 0x118C0, 0x118DF },
	{ 0x16E60, 0x16E7F },
	{ 0x1E922, 0x1E943 }
};

MAKE_ISW(lower)
#endif

static const struct mb_ucsrange data_wctype_alpha[] = {
	{ 0x0041, 0x005A },
	{ 0x005F, 0x005F },
	{ 0x0061, 0x007A },
	{ 0x00AA, 0x00AA },
	{ 0x00B5, 0x00B5 },
	{ 0x00BA, 0x00BA },
	{ 0x00C0, 0x00D6 },
	{ 0x00D8, 0x00F6 },
	{ 0x00F8, 0x02C1 },
	{ 0x02C6, 0x02D1 },
	{ 0x02E0, 0x02E4 },
	{ 0x02EC, 0x02EC },
	{ 0x02EE, 0x02EE },
	{ 0x0345, 0x0345 },
	{ 0x0370, 0x0374 },
	{ 0x0376, 0x0377 },
	{ 0x037A, 0x037D },
	{ 0x037F, 0x037F },
	{ 0x0386, 0x0386 },
	{ 0x0388, 0x038A },
	{ 0x038C, 0x038C },
	{ 0x038E, 0x03A1 },
	{ 0x03A3, 0x03F5 },
	{ 0x03F7, 0x0481 },
	{ 0x048A, 0x052F },
	{ 0x0531, 0x0556 },
	{ 0x0559, 0x0559 },
	{ 0x0560, 0x0588 },
	{ 0x05D0, 0x05EA },
	{ 0x05EF, 0x05F2 },
	{ 0x0620, 0x064A },
	{ 0x066E, 0x066F },
	{ 0x0671, 0x06D3 },
	{ 0x06D5, 0x06D5 },
	{ 0x06E5, 0x06E6 },
	{ 0x06EE, 0x06EF },
	{ 0x06FA, 0x06FC },
	{ 0x06FF, 0x06FF },
	{ 0x0710, 0x0710 },
	{ 0x0712, 0x072F },
	{ 0x074D, 0x07A5 },
	{ 0x07B1, 0x07B1 },
	{ 0x07CA, 0x07EA },
	{ 0x07F4, 0x07F5 },
	{ 0x07FA, 0x07FA },
	{ 0x0800, 0x0815 },
	{ 0x081A, 0x081A },
	{ 0x0824, 0x0824 },
	{ 0x0828, 0x0828 },
	{ 0x0840, 0x0858 },
	{ 0x0860, 0x086A },
	{ 0x08A0, 0x08B4 },
	{ 0x08B6, 0x08BD },
	{ 0x0904, 0x0939 },
	{ 0x093D, 0x093D },
	{ 0x0950, 0x0950 },
	{ 0x0958, 0x0961 },
	{ 0x0971, 0x0980 },
	{ 0x0985, 0x098C },
	{ 0x098F, 0x0990 },
	{ 0x0993, 0x09A8 },
	{ 0x09AA, 0x09B0 },
	{ 0x09B2, 0x09B2 },
	{ 0x09B6, 0x09B9 },
	{ 0x09BD, 0x09BD },
	{ 0x09CE, 0x09CE },
	{ 0x09DC, 0x09DD },
	{ 0x09DF, 0x09E1 },
	{ 0x09F0, 0x09F1 },
	{ 0x09FC, 0x09FC },
	{ 0x0A05, 0x0A0A },
	{ 0x0A0F, 0x0A10 },
	{ 0x0A13, 0x0A28 },
	{ 0x0A2A, 0x0A30 },
	{ 0x0A32, 0x0A33 },
	{ 0x0A35, 0x0A36 },
	{ 0x0A38, 0x0A39 },
	{ 0x0A59, 0x0A5C },
	{ 0x0A5E, 0x0A5E },
	{ 0x0A72, 0x0A74 },
	{ 0x0A85, 0x0A8D },
	{ 0x0A8F, 0x0A91 },
	{ 0x0A93, 0x0AA8 },
	{ 0x0AAA, 0x0AB0 },
	{ 0x0AB2, 0x0AB3 },
	{ 0x0AB5, 0x0AB9 },
	{ 0x0ABD, 0x0ABD },
	{ 0x0AD0, 0x0AD0 },
	{ 0x0AE0, 0x0AE1 },
	{ 0x0AF9, 0x0AF9 },
	{ 0x0B05, 0x0B0C },
	{ 0x0B0F, 0x0B10 },
	{ 0x0B13, 0x0B28 },
	{ 0x0B2A, 0x0B30 },
	{ 0x0B32, 0x0B33 },
	{ 0x0B35, 0x0B39 },
	{ 0x0B3D, 0x0B3D },
	{ 0x0B5C, 0x0B5D },
	{ 0x0B5F, 0x0B61 },
	{ 0x0B71, 0x0B71 },
	{ 0x0B83, 0x0B83 },
	{ 0x0B85, 0x0B8A },
	{ 0x0B8E, 0x0B90 },
	{ 0x0B92, 0x0B95 },
	{ 0x0B99, 0x0B9A },
	{ 0x0B9C, 0x0B9C },
	{ 0x0B9E, 0x0B9F },
	{ 0x0BA3, 0x0BA4 },
	{ 0x0BA8, 0x0BAA },
	{ 0x0BAE, 0x0BB9 },
	{ 0x0BD0, 0x0BD0 },
	{ 0x0C05, 0x0C0C },
	{ 0x0C0E, 0x0C10 },
	{ 0x0C12, 0x0C28 },
	{ 0x0C2A, 0x0C39 },
	{ 0x0C3D, 0x0C3D },
	{ 0x0C58, 0x0C5A },
	{ 0x0C60, 0x0C61 },
	{ 0x0C80, 0x0C80 },
	{ 0x0C85, 0x0C8C },
	{ 0x0C8E, 0x0C90 },
	{ 0x0C92, 0x0CA8 },
	{ 0x0CAA, 0x0CB3 },
	{ 0x0CB5, 0x0CB9 },
	{ 0x0CBD, 0x0CBD },
	{ 0x0CDE, 0x0CDE },
	{ 0x0CE0, 0x0CE1 },
	{ 0x0CF1, 0x0CF2 },
	{ 0x0D05, 0x0D0C },
	{ 0x0D0E, 0x0D10 },
	{ 0x0D12, 0x0D3A },
	{ 0x0D3D, 0x0D3D },
	{ 0x0D4E, 0x0D4E },
	{ 0x0D54, 0x0D56 },
	{ 0x0D5F, 0x0D61 },
	{ 0x0D7A, 0x0D7F },
	{ 0x0D85, 0x0D96 },
	{ 0x0D9A, 0x0DB1 },
	{ 0x0DB3, 0x0DBB },
	{ 0x0DBD, 0x0DBD },
	{ 0x0DC0, 0x0DC6 },
	{ 0x0E01, 0x0E30 },
	{ 0x0E32, 0x0E33 },
	{ 0x0E40, 0x0E46 },
	{ 0x0E81, 0x0E82 },
	{ 0x0E84, 0x0E84 },
	{ 0x0E87, 0x0E88 },
	{ 0x0E8A, 0x0E8A },
	{ 0x0E8D, 0x0E8D },
	{ 0x0E94, 0x0E97 },
	{ 0x0E99, 0x0E9F },
	{ 0x0EA1, 0x0EA3 },
	{ 0x0EA5, 0x0EA5 },
	{ 0x0EA7, 0x0EA7 },
	{ 0x0EAA, 0x0EAB },
	{ 0x0EAD, 0x0EB0 },
	{ 0x0EB2, 0x0EB3 },
	{ 0x0EBD, 0x0EBD },
	{ 0x0EC0, 0x0EC4 },
	{ 0x0EC6, 0x0EC6 },
	{ 0x0EDC, 0x0EDF },
	{ 0x0F00, 0x0F00 },
	{ 0x0F40, 0x0F47 },
	{ 0x0F49, 0x0F6C },
	{ 0x0F88, 0x0F8C },
	{ 0x1000, 0x102A },
	{ 0x103F, 0x103F },
	{ 0x1050, 0x1055 },
	{ 0x105A, 0x105D },
	{ 0x1061, 0x1061 },
	{ 0x1065, 0x1066 },
	{ 0x106E, 0x1070 },
	{ 0x1075, 0x1081 },
	{ 0x108E, 0x108E },
	{ 0x10A0, 0x10C5 },
	{ 0x10C7, 0x10C7 },
	{ 0x10CD, 0x10CD },
	{ 0x10D0, 0x10FA },
	{ 0x10FC, 0x1248 },
	{ 0x124A, 0x124D },
	{ 0x1250, 0x1256 },
	{ 0x1258, 0x1258 },
	{ 0x125A, 0x125D },
	{ 0x1260, 0x1288 },
	{ 0x128A, 0x128D },
	{ 0x1290, 0x12B0 },
	{ 0x12B2, 0x12B5 },
	{ 0x12B8, 0x12BE },
	{ 0x12C0, 0x12C0 },
	{ 0x12C2, 0x12C5 },
	{ 0x12C8, 0x12D6 },
	{ 0x12D8, 0x1310 },
	{ 0x1312, 0x1315 },
	{ 0x1318, 0x135A },
	{ 0x1380, 0x138F },
	{ 0x13A0, 0x13F5 },
	{ 0x13F8, 0x13FD },
	{ 0x1401, 0x166C },
	{ 0x166F, 0x167F },
	{ 0x1681, 0x169A },
	{ 0x16A0, 0x16EA },
	{ 0x16F1, 0x16F8 },
	{ 0x1700, 0x170C },
	{ 0x170E, 0x1711 },
	{ 0x1720, 0x1731 },
	{ 0x1740, 0x1751 },
	{ 0x1760, 0x176C },
	{ 0x176E, 0x1770 },
	{ 0x1780, 0x17B3 },
	{ 0x17D7, 0x17D7 },
	{ 0x17DC, 0x17DC },
	{ 0x1820, 0x1878 },
	{ 0x1880, 0x1884 },
	{ 0x1887, 0x18A8 },
	{ 0x18AA, 0x18AA },
	{ 0x18B0, 0x18F5 },
	{ 0x1900, 0x191E },
	{ 0x1950, 0x196D },
	{ 0x1970, 0x1974 },
	{ 0x1980, 0x19AB },
	{ 0x19B0, 0x19C9 },
	{ 0x1A00, 0x1A16 },
	{ 0x1A20, 0x1A54 },
	{ 0x1AA7, 0x1AA7 },
	{ 0x1B05, 0x1B33 },
	{ 0x1B45, 0x1B4B },
	{ 0x1B83, 0x1BA0 },
	{ 0x1BAE, 0x1BAF },
	{ 0x1BBA, 0x1BE5 },
	{ 0x1C00, 0x1C23 },
	{ 0x1C4D, 0x1C4F },
	{ 0x1C5A, 0x1C7D },
	{ 0x1C80, 0x1C88 },
	{ 0x1C90, 0x1CBA },
	{ 0x1CBD, 0x1CBF },
	{ 0x1CE9, 0x1CEC },
	{ 0x1CEE, 0x1CF1 },
	{ 0x1CF5, 0x1CF6 },
	{ 0x1D00, 0x1DBF },
	{ 0x1E00, 0x1F15 },
	{ 0x1F18, 0x1F1D },
	{ 0x1F20, 0x1F45 },
	{ 0x1F48, 0x1F4D },
	{ 0x1F50, 0x1F57 },
	{ 0x1F59, 0x1F59 },
	{ 0x1F5B, 0x1F5B },
	{ 0x1F5D, 0x1F5D },
	{ 0x1F5F, 0x1F7D },
	{ 0x1F80, 0x1FB4 },
	{ 0x1FB6, 0x1FBC },
	{ 0x1FBE, 0x1FBE },
	{ 0x1FC2, 0x1FC4 },
	{ 0x1FC6, 0x1FCC },
	{ 0x1FD0, 0x1FD3 },
	{ 0x1FD6, 0x1FDB },
	{ 0x1FE0, 0x1FEC },
	{ 0x1FF2, 0x1FF4 },
	{ 0x1FF6, 0x1FFC },
	{ 0x2071, 0x2071 },
	{ 0x207F, 0x207F },
	{ 0x2090, 0x209C },
	{ 0x2102, 0x2102 },
	{ 0x2107, 0x2107 },
	{ 0x210A, 0x2113 },
	{ 0x2115, 0x2115 },
	{ 0x2119, 0x211D },
	{ 0x2124, 0x2124 },
	{ 0x2126, 0x2126 },
	{ 0x2128, 0x2128 },
	{ 0x212A, 0x212D },
	{ 0x212F, 0x2139 },
	{ 0x213C, 0x213F },
	{ 0x2145, 0x2149 },
	{ 0x214E, 0x214E },
	{ 0x2160, 0x217F },
	{ 0x2183, 0x2184 },
	{ 0x24B6, 0x24E9 },
	{ 0x2C00, 0x2C2E },
	{ 0x2C30, 0x2C5E },
	{ 0x2C60, 0x2CE4 },
	{ 0x2CEB, 0x2CEE },
	{ 0x2CF2, 0x2CF3 },
	{ 0x2D00, 0x2D25 },
	{ 0x2D27, 0x2D27 },
	{ 0x2D2D, 0x2D2D },
	{ 0x2D30, 0x2D67 },
	{ 0x2D6F, 0x2D6F },
	{ 0x2D80, 0x2D96 },
	{ 0x2DA0, 0x2DA6 },
	{ 0x2DA8, 0x2DAE },
	{ 0x2DB0, 0x2DB6 },
	{ 0x2DB8, 0x2DBE },
	{ 0x2DC0, 0x2DC6 },
	{ 0x2DC8, 0x2DCE },
	{ 0x2DD0, 0x2DD6 },
	{ 0x2DD8, 0x2DDE },
	{ 0x2E2F, 0x2E2F },
	{ 0x3005, 0x3006 },
	{ 0x3031, 0x3035 },
	{ 0x303B, 0x303C },
	{ 0x3041, 0x3096 },
	{ 0x309D, 0x309F },
	{ 0x30A1, 0x30FA },
	{ 0x30FC, 0x30FF },
	{ 0x3105, 0x312F },
	{ 0x3131, 0x318E },
	{ 0x31A0, 0x31BA },
	{ 0x31F0, 0x31FF },
	{ 0x3400, 0x4DB5 },
	{ 0x4E00, 0x9FEF },
	{ 0xA000, 0xA48C },
	{ 0xA4D0, 0xA4FD },
	{ 0xA500, 0xA60C },
	{ 0xA610, 0xA61F },
	{ 0xA62A, 0xA62B },
	{ 0xA640, 0xA66E },
	{ 0xA67F, 0xA69D },
	{ 0xA6A0, 0xA6E5 },
	{ 0xA717, 0xA71F },
	{ 0xA722, 0xA788 },
	{ 0xA78B, 0xA7B9 },
	{ 0xA7F7, 0xA801 },
	{ 0xA803, 0xA805 },
	{ 0xA807, 0xA80A },
	{ 0xA80C, 0xA822 },
	{ 0xA840, 0xA873 },
	{ 0xA882, 0xA8B3 },
	{ 0xA8F2, 0xA8F7 },
	{ 0xA8FB, 0xA8FB },
	{ 0xA8FD, 0xA8FE },
	{ 0xA90A, 0xA925 },
	{ 0xA930, 0xA946 },
	{ 0xA960, 0xA97C },
	{ 0xA984, 0xA9B2 },
	{ 0xA9CF, 0xA9CF },
	{ 0xA9E0, 0xA9E4 },
	{ 0xA9E6, 0xA9EF },
	{ 0xA9FA, 0xA9FE },
	{ 0xAA00, 0xAA28 },
	{ 0xAA40, 0xAA42 },
	{ 0xAA44, 0xAA4B },
	{ 0xAA60, 0xAA76 },
	{ 0xAA7A, 0xAA7A },
	{ 0xAA7E, 0xAAAF },
	{ 0xAAB1, 0xAAB1 },
	{ 0xAAB5, 0xAAB6 },
	{ 0xAAB9, 0xAABD },
	{ 0xAAC0, 0xAAC0 },
	{ 0xAAC2, 0xAAC2 },
	{ 0xAADB, 0xAADD },
	{ 0xAAE0, 0xAAEA },
	{ 0xAAF2, 0xAAF4 },
	{ 0xAB01, 0xAB06 },
	{ 0xAB09, 0xAB0E },
	{ 0xAB11, 0xAB16 },
	{ 0xAB20, 0xAB26 },
	{ 0xAB28, 0xAB2E },
	{ 0xAB30, 0xAB5A },
	{ 0xAB5C, 0xAB65 },
	{ 0xAB70, 0xABE2 },
	{ 0xAC00, 0xD7A3 },
	{ 0xD7B0, 0xD7C6 },
	{ 0xD7CB, 0xD7FB },
	{ 0xF900, 0xFA6D },
	{ 0xFA70, 0xFAD9 },
	{ 0xFB00, 0xFB06 },
	{ 0xFB13, 0xFB17 },
	{ 0xFB1D, 0xFB1D },
	{ 0xFB1F, 0xFB28 },
	{ 0xFB2A, 0xFB36 },
	{ 0xFB38, 0xFB3C },
	{ 0xFB3E, 0xFB3E },
	{ 0xFB40, 0xFB41 },
	{ 0xFB43, 0xFB44 },
	{ 0xFB46, 0xFBB1 },
	{ 0xFBD3, 0xFD3D },
	{ 0xFD50, 0xFD8F },
	{ 0xFD92, 0xFDC7 },
	{ 0xFDF0, 0xFDFB },
	{ 0xFE70, 0xFE74 },
	{ 0xFE76, 0xFEFC },
	{ 0xFF21, 0xFF3A },
	{ 0xFF41, 0xFF5A },
	{ 0xFF66, 0xFFBE },
	{ 0xFFC2, 0xFFC7 },
	{ 0xFFCA, 0xFFCF },
	{ 0xFFD2, 0xFFD7 },
	{ 0xFFDA, 0xFFDC },
	{ 0x10000, 0x1000B },
	{ 0x1000D, 0x10026 },
	{ 0x10028, 0x1003A },
	{ 0x1003C, 0x1003D },
	{ 0x1003F, 0x1004D },
	{ 0x10050, 0x1005D },
	{ 0x10080, 0x100FA },
	{ 0x10280, 0x1029C },
	{ 0x102A0, 0x102D0 },
	{ 0x10300, 0x1031F },
	{ 0x1032D, 0x10340 },
	{ 0x10342, 0x10349 },
	{ 0x10350, 0x10375 },
	{ 0x10380, 0x1039D },
	{ 0x103A0, 0x103C3 },
	{ 0x103C8, 0x103CF },
	{ 0x10400, 0x1049D },
	{ 0x104B0, 0x104D3 },
	{ 0x104D8, 0x104FB },
	{ 0x10500, 0x10527 },
	{ 0x10530, 0x10563 },
	{ 0x10600, 0x10736 },
	{ 0x10740, 0x10755 },
	{ 0x10760, 0x10767 },
	{ 0x10800, 0x10805 },
	{ 0x10808, 0x10808 },
	{ 0x1080A, 0x10835 },
	{ 0x10837, 0x10838 },
	{ 0x1083C, 0x1083C },
	{ 0x1083F, 0x10855 },
	{ 0x10860, 0x10876 },
	{ 0x10880, 0x1089E },
	{ 0x108E0, 0x108F2 },
	{ 0x108F4, 0x108F5 },
	{ 0x10900, 0x10915 },
	{ 0x10920, 0x10939 },
	{ 0x10980, 0x109B7 },
	{ 0x109BE, 0x109BF },
	{ 0x10A00, 0x10A00 },
	{ 0x10A10, 0x10A13 },
	{ 0x10A15, 0x10A17 },
	{ 0x10A19, 0x10A35 },
	{ 0x10A60, 0x10A7C },
	{ 0x10A80, 0x10A9C },
	{ 0x10AC0, 0x10AC7 },
	{ 0x10AC9, 0x10AE4 },
	{ 0x10B00, 0x10B35 },
	{ 0x10B40, 0x10B55 },
	{ 0x10B60, 0x10B72 },
	{ 0x10B80, 0x10B91 },
	{ 0x10C00, 0x10C48 },
	{ 0x10C80, 0x10CB2 },
	{ 0x10CC0, 0x10CF2 },
	{ 0x10D00, 0x10D23 },
	{ 0x10F00, 0x10F1C },
	{ 0x10F27, 0x10F27 },
	{ 0x10F30, 0x10F45 },
	{ 0x11003, 0x11037 },
	{ 0x11083, 0x110AF },
	{ 0x110D0, 0x110E8 },
	{ 0x11103, 0x11126 },
	{ 0x11144, 0x11144 },
	{ 0x11150, 0x11172 },
	{ 0x11176, 0x11176 },
	{ 0x11183, 0x111B2 },
	{ 0x111C1, 0x111C4 },
	{ 0x111DA, 0x111DA },
	{ 0x111DC, 0x111DC },
	{ 0x11200, 0x11211 },
	{ 0x11213, 0x1122B },
	{ 0x11280, 0x11286 },
	{ 0x11288, 0x11288 },
	{ 0x1128A, 0x1128D },
	{ 0x1128F, 0x1129D },
	{ 0x1129F, 0x112A8 },
	{ 0x112B0, 0x112DE },
	{ 0x11305, 0x1130C },
	{ 0x1130F, 0x11310 },
	{ 0x11313, 0x11328 },
	{ 0x1132A, 0x11330 },
	{ 0x11332, 0x11333 },
	{ 0x11335, 0x11339 },
	{ 0x1133D, 0x1133D },
	{ 0x11350, 0x11350 },
	{ 0x1135D, 0x11361 },
	{ 0x11400, 0x11434 },
	{ 0x11447, 0x1144A },
	{ 0x11480, 0x114AF },
	{ 0x114C4, 0x114C5 },
	{ 0x114C7, 0x114C7 },
	{ 0x11580, 0x115AE },
	{ 0x115D8, 0x115DB },
	{ 0x11600, 0x1162F },
	{ 0x11644, 0x11644 },
	{ 0x11680, 0x116AA },
	{ 0x11700, 0x1171A },
	{ 0x11800, 0x1182B },
	{ 0x118A0, 0x118DF },
	{ 0x118FF, 0x118FF },
	{ 0x11A00, 0x11A00 },
	{ 0x11A0B, 0x11A32 },
	{ 0x11A3A, 0x11A3A },
	{ 0x11A50, 0x11A50 },
	{ 0x11A5C, 0x11A83 },
	{ 0x11A86, 0x11A89 },
	{ 0x11A9D, 0x11A9D },
	{ 0x11AC0, 0x11AF8 },
	{ 0x11C00, 0x11C08 },
	{ 0x11C0A, 0x11C2E },
	{ 0x11C40, 0x11C40 },
	{ 0x11C72, 0x11C8F },
	{ 0x11D00, 0x11D06 },
	{ 0x11D08, 0x11D09 },
	{ 0x11D0B, 0x11D30 },
	{ 0x11D46, 0x11D46 },
	{ 0x11D60, 0x11D65 },
	{ 0x11D67, 0x11D68 },
	{ 0x11D6A, 0x11D89 },
	{ 0x11D98, 0x11D98 },
	{ 0x11EE0, 0x11EF2 },
	{ 0x12000, 0x12399 },
	{ 0x12480, 0x12543 },
	{ 0x13000, 0x1342E },
	{ 0x14400, 0x14646 },
	{ 0x16800, 0x16A38 },
	{ 0x16A40, 0x16A5E },
	{ 0x16AD0, 0x16AED },
	{ 0x16B00, 0x16B2F },
	{ 0x16B40, 0x16B43 },
	{ 0x16B63, 0x16B77 },
	{ 0x16B7D, 0x16B8F },
	{ 0x16E40, 0x16E7F },
	{ 0x16F00, 0x16F44 },
	{ 0x16F50, 0x16F50 },
	{ 0x16F93, 0x16F9F },
	{ 0x16FE0, 0x16FE1 },
	{ 0x17000, 0x187F1 },
	{ 0x18800, 0x18AF2 },
	{ 0x1B000, 0x1B11E },
	{ 0x1B170, 0x1B2FB },
	{ 0x1BC00, 0x1BC6A },
	{ 0x1BC70, 0x1BC7C },
	{ 0x1BC80, 0x1BC88 },
	{ 0x1BC90, 0x1BC99 },
	{ 0x1D400, 0x1D454 },
	{ 0x1D456, 0x1D49C },
	{ 0x1D49E, 0x1D49F },
	{ 0x1D4A2, 0x1D4A2 },
	{ 0x1D4A5, 0x1D4A6 },
	{ 0x1D4A9, 0x1D4AC },
	{ 0x1D4AE, 0x1D4B9 },
	{ 0x1D4BB, 0x1D4BB },
	{ 0x1D4BD, 0x1D4C3 },
	{ 0x1D4C5, 0x1D505 },
	{ 0x1D507, 0x1D50A },
	{ 0x1D50D, 0x1D514 },
	{ 0x1D516, 0x1D51C },
	{ 0x1D51E, 0x1D539 },
	{ 0x1D53B, 0x1D53E },
	{ 0x1D540, 0x1D544 },
	{ 0x1D546, 0x1D546 },
	{ 0x1D54A, 0x1D550 },
	{ 0x1D552, 0x1D6A5 },
	{ 0x1D6A8, 0x1D6C0 },
	{ 0x1D6C2, 0x1D6DA },
	{ 0x1D6DC, 0x1D6FA },
	{ 0x1D6FC, 0x1D714 },
	{ 0x1D716, 0x1D734 },
	{ 0x1D736, 0x1D74E },
	{ 0x1D750, 0x1D76E },
	{ 0x1D770, 0x1D788 },
	{ 0x1D78A, 0x1D7A8 },
	{ 0x1D7AA, 0x1D7C2 },
	{ 0x1D7C4, 0x1D7CB },
	{ 0x1E800, 0x1E8C4 },
	{ 0x1E900, 0x1E943 },
	{ 0x1EE00, 0x1EE03 },
	{ 0x1EE05, 0x1EE1F },
	{ 0x1EE21, 0x1EE22 },
	{ 0x1EE24, 0x1EE24 },
	{ 0x1EE27, 0x1EE27 },
	{ 0x1EE29, 0x1EE32 },
	{ 0x1EE34, 0x1EE37 },
	{ 0x1EE39, 0x1EE39 },
	{ 0x1EE3B, 0x1EE3B },
	{ 0x1EE42, 0x1EE42 },
	{ 0x1EE47, 0x1EE47 },
	{ 0x1EE49, 0x1EE49 },
	{ 0x1EE4B, 0x1EE4B },
	{ 0x1EE4D, 0x1EE4F },
	{ 0x1EE51, 0x1EE52 },
	{ 0x1EE54, 0x1EE54 },
	{ 0x1EE57, 0x1EE57 },
	{ 0x1EE59, 0x1EE59 },
	{ 0x1EE5B, 0x1EE5B },
	{ 0x1EE5D, 0x1EE5D },
	{ 0x1EE5F, 0x1EE5F },
	{ 0x1EE61, 0x1EE62 },
	{ 0x1EE64, 0x1EE64 },
	{ 0x1EE67, 0x1EE6A },
	{ 0x1EE6C, 0x1EE72 },
	{ 0x1EE74, 0x1EE77 },
	{ 0x1EE79, 0x1EE7C },
	{ 0x1EE7E, 0x1EE7E },
	{ 0x1EE80, 0x1EE89 },
	{ 0x1EE8B, 0x1EE9B },
	{ 0x1EEA1, 0x1EEA3 },
	{ 0x1EEA5, 0x1EEA9 },
	{ 0x1EEAB, 0x1EEBB },
	{ 0x20000, 0x2A6D6 },
	{ 0x2A700, 0x2B734 },
	{ 0x2B740, 0x2B81D },
	{ 0x2B820, 0x2CEA1 },
	{ 0x2CEB0, 0x2EBE0 },
	{ 0x2F800, 0x2FA1D }
};

MAKE_ISW(alpha)

int joe_iswalnum(struct charmap *foo, int c)
{
	return ((c >= 0x30 && c <= 0x39) ? 1 : joe_iswalpha(foo, c));
}

int joe_iswdigit(struct charmap *foo, int c)
{
	return ((c >= 0x30 && c <= 0x39) ? 1 : 0);
}

static const struct mb_ucsrange data_wctype_space[] = {
	{ 0x0009, 0x000D },
	{ 0x0020, 0x0020 },
	{ 0x1680, 0x1680 },
	{ 0x2000, 0x2006 },
	{ 0x2008, 0x200B },
	{ 0x2028, 0x2029 },
	{ 0x205F, 0x205F },
	{ 0x3000, 0x3000 }
};

MAKE_ISW(space)

#ifdef TEST_I18N
static const struct mb_ucsrange data_wctype_cntrl[] = {
	{ 0x0000, 0x001F },
	{ 0x007F, 0x009F },
	{ 0x2028, 0x2029 }
};

MAKE_ISW(cntrl)
#endif

static const struct mb_ucsrange data_wctype_punct[] = {
	{ 0x0021, 0x002F },
	{ 0x003A, 0x0040 },
	{ 0x005B, 0x0060 },
	{ 0x007B, 0x007E },
	{ 0x00A0, 0x00A9 },
	{ 0x00AB, 0x00B4 },
	{ 0x00B6, 0x00B9 },
	{ 0x00BB, 0x00BF },
	{ 0x00D7, 0x00D7 },
	{ 0x00F7, 0x00F7 },
	{ 0x02C2, 0x02C5 },
	{ 0x02D2, 0x02DF },
	{ 0x02E5, 0x02EB },
	{ 0x02ED, 0x02ED },
	{ 0x02EF, 0x0344 },
	{ 0x0346, 0x036F },
	{ 0x0375, 0x0375 },
	{ 0x037E, 0x037E },
	{ 0x0384, 0x0385 },
	{ 0x0387, 0x0387 },
	{ 0x03F6, 0x03F6 },
	{ 0x0482, 0x0489 },
	{ 0x055A, 0x055F },
	{ 0x0589, 0x058A },
	{ 0x058D, 0x058F },
	{ 0x0591, 0x05C7 },
	{ 0x05F3, 0x05F4 },
	{ 0x0600, 0x061C },
	{ 0x061E, 0x061F },
	{ 0x064B, 0x066D },
	{ 0x0670, 0x0670 },
	{ 0x06D4, 0x06D4 },
	{ 0x06D6, 0x06E4 },
	{ 0x06E7, 0x06ED },
	{ 0x06F0, 0x06F9 },
	{ 0x06FD, 0x06FE },
	{ 0x0700, 0x070D },
	{ 0x070F, 0x070F },
	{ 0x0711, 0x0711 },
	{ 0x0730, 0x074A },
	{ 0x07A6, 0x07B0 },
	{ 0x07C0, 0x07C9 },
	{ 0x07EB, 0x07F3 },
	{ 0x07F6, 0x07F9 },
	{ 0x07FD, 0x07FF },
	{ 0x0816, 0x0819 },
	{ 0x081B, 0x0823 },
	{ 0x0825, 0x0827 },
	{ 0x0829, 0x082D },
	{ 0x0830, 0x083E },
	{ 0x0859, 0x085B },
	{ 0x085E, 0x085E },
	{ 0x08D3, 0x0903 },
	{ 0x093A, 0x093C },
	{ 0x093E, 0x094F },
	{ 0x0951, 0x0957 },
	{ 0x0962, 0x0970 },
	{ 0x0981, 0x0983 },
	{ 0x09BC, 0x09BC },
	{ 0x09BE, 0x09C4 },
	{ 0x09C7, 0x09C8 },
	{ 0x09CB, 0x09CD },
	{ 0x09D7, 0x09D7 },
	{ 0x09E2, 0x09E3 },
	{ 0x09E6, 0x09EF },
	{ 0x09F2, 0x09FB },
	{ 0x09FD, 0x09FE },
	{ 0x0A01, 0x0A03 },
	{ 0x0A3C, 0x0A3C },
	{ 0x0A3E, 0x0A42 },
	{ 0x0A47, 0x0A48 },
	{ 0x0A4B, 0x0A4D },
	{ 0x0A51, 0x0A51 },
	{ 0x0A66, 0x0A71 },
	{ 0x0A75, 0x0A76 },
	{ 0x0A81, 0x0A83 },
	{ 0x0ABC, 0x0ABC },
	{ 0x0ABE, 0x0AC5 },
	{ 0x0AC7, 0x0AC9 },
	{ 0x0ACB, 0x0ACD },
	{ 0x0AE2, 0x0AE3 },
	{ 0x0AE6, 0x0AF1 },
	{ 0x0AFA, 0x0AFF },
	{ 0x0B01, 0x0B03 },
	{ 0x0B3C, 0x0B3C },
	{ 0x0B3E, 0x0B44 },
	{ 0x0B47, 0x0B48 },
	{ 0x0B4B, 0x0B4D },
	{ 0x0B56, 0x0B57 },
	{ 0x0B62, 0x0B63 },
	{ 0x0B66, 0x0B70 },
	{ 0x0B72, 0x0B77 },
	{ 0x0B82, 0x0B82 },
	{ 0x0BBE, 0x0BC2 },
	{ 0x0BC6, 0x0BC8 },
	{ 0x0BCA, 0x0BCD },
	{ 0x0BD7, 0x0BD7 },
	{ 0x0BE6, 0x0BFA },
	{ 0x0C00, 0x0C04 },
	{ 0x0C3E, 0x0C44 },
	{ 0x0C46, 0x0C48 },
	{ 0x0C4A, 0x0C4D },
	{ 0x0C55, 0x0C56 },
	{ 0x0C62, 0x0C63 },
	{ 0x0C66, 0x0C6F },
	{ 0x0C78, 0x0C7F },
	{ 0x0C81, 0x0C84 },
	{ 0x0CBC, 0x0CBC },
	{ 0x0CBE, 0x0CC4 },
	{ 0x0CC6, 0x0CC8 },
	{ 0x0CCA, 0x0CCD },
	{ 0x0CD5, 0x0CD6 },
	{ 0x0CE2, 0x0CE3 },
	{ 0x0CE6, 0x0CEF },
	{ 0x0D00, 0x0D03 },
	{ 0x0D3B, 0x0D3C },
	{ 0x0D3E, 0x0D44 },
	{ 0x0D46, 0x0D48 },
	{ 0x0D4A, 0x0D4D },
	{ 0x0D4F, 0x0D4F },
	{ 0x0D57, 0x0D5E },
	{ 0x0D62, 0x0D63 },
	{ 0x0D66, 0x0D79 },
	{ 0x0D82, 0x0D83 },
	{ 0x0DCA, 0x0DCA },
	{ 0x0DCF, 0x0DD4 },
	{ 0x0DD6, 0x0DD6 },
	{ 0x0DD8, 0x0DDF },
	{ 0x0DE6, 0x0DEF },
	{ 0x0DF2, 0x0DF4 },
	{ 0x0E31, 0x0E31 },
	{ 0x0E34, 0x0E3A },
	{ 0x0E3F, 0x0E3F },
	{ 0x0E47, 0x0E5B },
	{ 0x0EB1, 0x0EB1 },
	{ 0x0EB4, 0x0EB9 },
	{ 0x0EBB, 0x0EBC },
	{ 0x0EC8, 0x0ECD },
	{ 0x0ED0, 0x0ED9 },
	{ 0x0F01, 0x0F3F },
	{ 0x0F71, 0x0F87 },
	{ 0x0F8D, 0x0F97 },
	{ 0x0F99, 0x0FBC },
	{ 0x0FBE, 0x0FCC },
	{ 0x0FCE, 0x0FDA },
	{ 0x102B, 0x103E },
	{ 0x1040, 0x104F },
	{ 0x1056, 0x1059 },
	{ 0x105E, 0x1060 },
	{ 0x1062, 0x1064 },
	{ 0x1067, 0x106D },
	{ 0x1071, 0x1074 },
	{ 0x1082, 0x108D },
	{ 0x108F, 0x109F },
	{ 0x10FB, 0x10FB },
	{ 0x135D, 0x137C },
	{ 0x1390, 0x1399 },
	{ 0x1400, 0x1400 },
	{ 0x166D, 0x166E },
	{ 0x1680, 0x1680 },
	{ 0x169B, 0x169C },
	{ 0x16EB, 0x16F0 },
	{ 0x1712, 0x1714 },
	{ 0x1732, 0x1736 },
	{ 0x1752, 0x1753 },
	{ 0x1772, 0x1773 },
	{ 0x17B4, 0x17D6 },
	{ 0x17D8, 0x17DB },
	{ 0x17DD, 0x17DD },
	{ 0x17E0, 0x17E9 },
	{ 0x17F0, 0x17F9 },
	{ 0x1800, 0x180E },
	{ 0x1810, 0x1819 },
	{ 0x1885, 0x1886 },
	{ 0x18A9, 0x18A9 },
	{ 0x1920, 0x192B },
	{ 0x1930, 0x193B },
	{ 0x1940, 0x1940 },
	{ 0x1944, 0x194F },
	{ 0x19D0, 0x19DA },
	{ 0x19DE, 0x19FF },
	{ 0x1A17, 0x1A1B },
	{ 0x1A1E, 0x1A1F },
	{ 0x1A55, 0x1A5E },
	{ 0x1A60, 0x1A7C },
	{ 0x1A7F, 0x1A89 },
	{ 0x1A90, 0x1A99 },
	{ 0x1AA0, 0x1AA6 },
	{ 0x1AA8, 0x1AAD },
	{ 0x1AB0, 0x1ABE },
	{ 0x1B00, 0x1B04 },
	{ 0x1B34, 0x1B44 },
	{ 0x1B50, 0x1B7C },
	{ 0x1B80, 0x1B82 },
	{ 0x1BA1, 0x1BAD },
	{ 0x1BB0, 0x1BB9 },
	{ 0x1BE6, 0x1BF3 },
	{ 0x1BFC, 0x1BFF },
	{ 0x1C24, 0x1C37 },
	{ 0x1C3B, 0x1C49 },
	{ 0x1C50, 0x1C59 },
	{ 0x1C7E, 0x1C7F },
	{ 0x1CC0, 0x1CC7 },
	{ 0x1CD0, 0x1CE8 },
	{ 0x1CED, 0x1CED },
	{ 0x1CF2, 0x1CF4 },
	{ 0x1CF7, 0x1CF9 },
	{ 0x1DC0, 0x1DF9 },
	{ 0x1DFB, 0x1DFF },
	{ 0x1FBD, 0x1FBD },
	{ 0x1FBF, 0x1FC1 },
	{ 0x1FCD, 0x1FCF },
	{ 0x1FDD, 0x1FDF },
	{ 0x1FED, 0x1FEF },
	{ 0x1FFD, 0x1FFE },
	{ 0x2000, 0x2064 },
	{ 0x2066, 0x2070 },
	{ 0x2074, 0x207E },
	{ 0x2080, 0x208E },
	{ 0x20A0, 0x20BF },
	{ 0x20D0, 0x20F0 },
	{ 0x2100, 0x2101 },
	{ 0x2103, 0x2106 },
	{ 0x2108, 0x2109 },
	{ 0x2114, 0x2114 },
	{ 0x2116, 0x2118 },
	{ 0x211E, 0x2123 },
	{ 0x2125, 0x2125 },
	{ 0x2127, 0x2127 },
	{ 0x2129, 0x2129 },
	{ 0x212E, 0x212E },
	{ 0x213A, 0x213B },
	{ 0x2140, 0x2144 },
	{ 0x214A, 0x214D },
	{ 0x214F, 0x215F },
	{ 0x2180, 0x2182 },
	{ 0x2185, 0x218B },
	{ 0x2190, 0x2426 },
	{ 0x2440, 0x244A },
	{ 0x2460, 0x24B5 },
	{ 0x24EA, 0x2B73 },
	{ 0x2B76, 0x2B95 },
	{ 0x2B98, 0x2BC8 },
	{ 0x2BCA, 0x2BFE },
	{ 0x2CE5, 0x2CEA },
	{ 0x2CEF, 0x2CF1 },
	{ 0x2CF9, 0x2CFF },
	{ 0x2D70, 0x2D70 },
	{ 0x2D7F, 0x2D7F },
	{ 0x2DE0, 0x2E2E },
	{ 0x2E30, 0x2E4E },
	{ 0x2E80, 0x2E99 },
	{ 0x2E9B, 0x2EF3 },
	{ 0x2F00, 0x2FD5 },
	{ 0x2FF0, 0x2FFB },
	{ 0x3000, 0x3004 },
	{ 0x3007, 0x3030 },
	{ 0x3036, 0x303A },
	{ 0x303D, 0x303F },
	{ 0x3099, 0x309C },
	{ 0x30A0, 0x30A0 },
	{ 0x30FB, 0x30FB },
	{ 0x3190, 0x319F },
	{ 0x31C0, 0x31E3 },
	{ 0x3200, 0x321E },
	{ 0x3220, 0x32FE },
	{ 0x3300, 0x33FF },
	{ 0x4DC0, 0x4DFF },
	{ 0xA490, 0xA4C6 },
	{ 0xA4FE, 0xA4FF },
	{ 0xA60D, 0xA60F },
	{ 0xA620, 0xA629 },
	{ 0xA66F, 0xA67E },
	{ 0xA69E, 0xA69F },
	{ 0xA6E6, 0xA6F7 },
	{ 0xA700, 0xA716 },
	{ 0xA720, 0xA721 },
	{ 0xA789, 0xA78A },
	{ 0xA802, 0xA802 },
	{ 0xA806, 0xA806 },
	{ 0xA80B, 0xA80B },
	{ 0xA823, 0xA82B },
	{ 0xA830, 0xA839 },
	{ 0xA874, 0xA877 },
	{ 0xA880, 0xA881 },
	{ 0xA8B4, 0xA8C5 },
	{ 0xA8CE, 0xA8D9 },
	{ 0xA8E0, 0xA8F1 },
	{ 0xA8F8, 0xA8FA },
	{ 0xA8FC, 0xA8FC },
	{ 0xA8FF, 0xA909 },
	{ 0xA926, 0xA92F },
	{ 0xA947, 0xA953 },
	{ 0xA95F, 0xA95F },
	{ 0xA980, 0xA983 },
	{ 0xA9B3, 0xA9CD },
	{ 0xA9D0, 0xA9D9 },
	{ 0xA9DE, 0xA9DF },
	{ 0xA9E5, 0xA9E5 },
	{ 0xA9F0, 0xA9F9 },
	{ 0xAA29, 0xAA36 },
	{ 0xAA43, 0xAA43 },
	{ 0xAA4C, 0xAA4D },
	{ 0xAA50, 0xAA59 },
	{ 0xAA5C, 0xAA5F },
	{ 0xAA77, 0xAA79 },
	{ 0xAA7B, 0xAA7D },
	{ 0xAAB0, 0xAAB0 },
	{ 0xAAB2, 0xAAB4 },
	{ 0xAAB7, 0xAAB8 },
	{ 0xAABE, 0xAABF },
	{ 0xAAC1, 0xAAC1 },
	{ 0xAADE, 0xAADF },
	{ 0xAAEB, 0xAAF1 },
	{ 0xAAF5, 0xAAF6 },
	{ 0xAB5B, 0xAB5B },
	{ 0xABE3, 0xABED },
	{ 0xABF0, 0xABF9 },
	{ 0xE000, 0xF8FF },
	{ 0xFB1E, 0xFB1E },
	{ 0xFB29, 0xFB29 },
	{ 0xFBB2, 0xFBC1 },
	{ 0xFD3E, 0xFD3F },
	{ 0xFDFC, 0xFDFD },
	{ 0xFE00, 0xFE19 },
	{ 0xFE20, 0xFE52 },
	{ 0xFE54, 0xFE66 },
	{ 0xFE68, 0xFE6B },
	{ 0xFEFF, 0xFEFF },
	{ 0xFF01, 0xFF20 },
	{ 0xFF3B, 0xFF40 },
	{ 0xFF5B, 0xFF65 },
	{ 0xFFE0, 0xFFE6 },
	{ 0xFFE8, 0xFFEE },
	{ 0xFFF9, 0xFFFD },
	{ 0x10100, 0x10102 },
	{ 0x10107, 0x10133 },
	{ 0x10137, 0x1018E },
	{ 0x10190, 0x1019B },
	{ 0x101A0, 0x101A0 },
	{ 0x101D0, 0x101FD },
	{ 0x102E0, 0x102FB },
	{ 0x10320, 0x10323 },
	{ 0x10341, 0x10341 },
	{ 0x1034A, 0x1034A },
	{ 0x10376, 0x1037A },
	{ 0x1039F, 0x1039F },
	{ 0x103D0, 0x103D5 },
	{ 0x104A0, 0x104A9 },
	{ 0x1056F, 0x1056F },
	{ 0x10857, 0x1085F },
	{ 0x10877, 0x1087F },
	{ 0x108A7, 0x108AF },
	{ 0x108FB, 0x108FF },
	{ 0x10916, 0x1091B },
	{ 0x1091F, 0x1091F },
	{ 0x1093F, 0x1093F },
	{ 0x109BC, 0x109BD },
	{ 0x109C0, 0x109CF },
	{ 0x109D2, 0x109FF },
	{ 0x10A01, 0x10A03 },
	{ 0x10A05, 0x10A06 },
	{ 0x10A0C, 0x10A0F },
	{ 0x10A38, 0x10A3A },
	{ 0x10A3F, 0x10A48 },
	{ 0x10A50, 0x10A58 },
	{ 0x10A7D, 0x10A7F },
	{ 0x10A9D, 0x10A9F },
	{ 0x10AC8, 0x10AC8 },
	{ 0x10AE5, 0x10AE6 },
	{ 0x10AEB, 0x10AF6 },
	{ 0x10B39, 0x10B3F },
	{ 0x10B58, 0x10B5F },
	{ 0x10B78, 0x10B7F },
	{ 0x10B99, 0x10B9C },
	{ 0x10BA9, 0x10BAF },
	{ 0x10CFA, 0x10CFF },
	{ 0x10D24, 0x10D27 },
	{ 0x10D30, 0x10D39 },
	{ 0x10E60, 0x10E7E },
	{ 0x10F1D, 0x10F26 },
	{ 0x10F46, 0x10F59 },
	{ 0x11000, 0x11002 },
	{ 0x11038, 0x1104D },
	{ 0x11052, 0x1106F },
	{ 0x1107F, 0x11082 },
	{ 0x110B0, 0x110C1 },
	{ 0x110CD, 0x110CD },
	{ 0x110F0, 0x110F9 },
	{ 0x11100, 0x11102 },
	{ 0x11127, 0x11134 },
	{ 0x11136, 0x11143 },
	{ 0x11145, 0x11146 },
	{ 0x11173, 0x11175 },
	{ 0x11180, 0x11182 },
	{ 0x111B3, 0x111C0 },
	{ 0x111C5, 0x111CD },
	{ 0x111D0, 0x111D9 },
	{ 0x111DB, 0x111DB },
	{ 0x111DD, 0x111DF },
	{ 0x111E1, 0x111F4 },
	{ 0x1122C, 0x1123E },
	{ 0x112A9, 0x112A9 },
	{ 0x112DF, 0x112EA },
	{ 0x112F0, 0x112F9 },
	{ 0x11300, 0x11303 },
	{ 0x1133B, 0x1133C },
	{ 0x1133E, 0x11344 },
	{ 0x11347, 0x11348 },
	{ 0x1134B, 0x1134D },
	{ 0x11357, 0x11357 },
	{ 0x11362, 0x11363 },
	{ 0x11366, 0x1136C },
	{ 0x11370, 0x11374 },
	{ 0x11435, 0x11446 },
	{ 0x1144B, 0x11459 },
	{ 0x1145B, 0x1145B },
	{ 0x1145D, 0x1145E },
	{ 0x114B0, 0x114C3 },
	{ 0x114C6, 0x114C6 },
	{ 0x114D0, 0x114D9 },
	{ 0x115AF, 0x115B5 },
	{ 0x115B8, 0x115D7 },
	{ 0x115DC, 0x115DD },
	{ 0x11630, 0x11643 },
	{ 0x11650, 0x11659 },
	{ 0x11660, 0x1166C },
	{ 0x116AB, 0x116B7 },
	{ 0x116C0, 0x116C9 },
	{ 0x1171D, 0x1172B },
	{ 0x11730, 0x1173F },
	{ 0x1182C, 0x1183B },
	{ 0x118E0, 0x118F2 },
	{ 0x11A01, 0x11A0A },
	{ 0x11A33, 0x11A39 },
	{ 0x11A3B, 0x11A47 },
	{ 0x11A51, 0x11A5B },
	{ 0x11A8A, 0x11A9C },
	{ 0x11A9E, 0x11AA2 },
	{ 0x11C2F, 0x11C36 },
	{ 0x11C38, 0x11C3F },
	{ 0x11C41, 0x11C45 },
	{ 0x11C50, 0x11C6C },
	{ 0x11C70, 0x11C71 },
	{ 0x11C92, 0x11CA7 },
	{ 0x11CA9, 0x11CB6 },
	{ 0x11D31, 0x11D36 },
	{ 0x11D3A, 0x11D3A },
	{ 0x11D3C, 0x11D3D },
	{ 0x11D3F, 0x11D45 },
	{ 0x11D47, 0x11D47 },
	{ 0x11D50, 0x11D59 },
	{ 0x11D8A, 0x11D8E },
	{ 0x11D90, 0x11D91 },
	{ 0x11D93, 0x11D97 },
	{ 0x11DA0, 0x11DA9 },
	{ 0x11EF3, 0x11EF8 },
	{ 0x12400, 0x1246E },
	{ 0x12470, 0x12474 },
	{ 0x16A60, 0x16A69 },
	{ 0x16A6E, 0x16A6F },
	{ 0x16AF0, 0x16AF5 },
	{ 0x16B30, 0x16B3F },
	{ 0x16B44, 0x16B45 },
	{ 0x16B50, 0x16B59 },
	{ 0x16B5B, 0x16B61 },
	{ 0x16E80, 0x16E9A },
	{ 0x16F51, 0x16F7E },
	{ 0x16F8F, 0x16F92 },
	{ 0x1BC9C, 0x1BCA3 },
	{ 0x1D000, 0x1D0F5 },
	{ 0x1D100, 0x1D126 },
	{ 0x1D129, 0x1D1E8 },
	{ 0x1D200, 0x1D245 },
	{ 0x1D2E0, 0x1D2F3 },
	{ 0x1D300, 0x1D356 },
	{ 0x1D360, 0x1D378 },
	{ 0x1D6C1, 0x1D6C1 },
	{ 0x1D6DB, 0x1D6DB },
	{ 0x1D6FB, 0x1D6FB },
	{ 0x1D715, 0x1D715 },
	{ 0x1D735, 0x1D735 },
	{ 0x1D74F, 0x1D74F },
	{ 0x1D76F, 0x1D76F },
	{ 0x1D789, 0x1D789 },
	{ 0x1D7A9, 0x1D7A9 },
	{ 0x1D7C3, 0x1D7C3 },
	{ 0x1D7CE, 0x1DA8B },
	{ 0x1DA9B, 0x1DA9F },
	{ 0x1DAA1, 0x1DAAF },
	{ 0x1E000, 0x1E006 },
	{ 0x1E008, 0x1E018 },
	{ 0x1E01B, 0x1E021 },
	{ 0x1E023, 0x1E024 },
	{ 0x1E026, 0x1E02A },
	{ 0x1E8C7, 0x1E8D6 },
	{ 0x1E944, 0x1E94A },
	{ 0x1E950, 0x1E959 },
	{ 0x1E95E, 0x1E95F },
	{ 0x1EC71, 0x1ECB4 },
	{ 0x1EEF0, 0x1EEF1 },
	{ 0x1F000, 0x1F02B },
	{ 0x1F030, 0x1F093 },
	{ 0x1F0A0, 0x1F0AE },
	{ 0x1F0B1, 0x1F0BF },
	{ 0x1F0C1, 0x1F0CF },
	{ 0x1F0D1, 0x1F0F5 },
	{ 0x1F100, 0x1F10C },
	{ 0x1F110, 0x1F16B },
	{ 0x1F170, 0x1F1AC },
	{ 0x1F1E6, 0x1F202 },
	{ 0x1F210, 0x1F23B },
	{ 0x1F240, 0x1F248 },
	{ 0x1F250, 0x1F251 },
	{ 0x1F260, 0x1F265 },
	{ 0x1F300, 0x1F6D4 },
	{ 0x1F6E0, 0x1F6EC },
	{ 0x1F6F0, 0x1F6F9 },
	{ 0x1F700, 0x1F773 },
	{ 0x1F780, 0x1F7D8 },
	{ 0x1F800, 0x1F80B },
	{ 0x1F810, 0x1F847 },
	{ 0x1F850, 0x1F859 },
	{ 0x1F860, 0x1F887 },
	{ 0x1F890, 0x1F8AD },
	{ 0x1F900, 0x1F90B },
	{ 0x1F910, 0x1F93E },
	{ 0x1F940, 0x1F970 },
	{ 0x1F973, 0x1F976 },
	{ 0x1F97A, 0x1F97A },
	{ 0x1F97C, 0x1F9A2 },
	{ 0x1F9B0, 0x1F9B9 },
	{ 0x1F9C0, 0x1F9C2 },
	{ 0x1F9D0, 0x1F9FF },
	{ 0x1FA60, 0x1FA6D },
	{ 0xE0001, 0xE0001 },
	{ 0xE0020, 0xE007F },
	{ 0xE0100, 0xE01EF },
	{ 0xF0000, 0xFFFFD },
	{ 0x100000, 0x10FFFD }
};

MAKE_ISW(punct)

#ifdef TEST_I18N
static const struct mb_ucsrange data_wctype_graph[] = {
	{ 0x0021, 0x007E },
	{ 0x00A0, 0x0377 },
	{ 0x037A, 0x037F },
	{ 0x0384, 0x038A },
	{ 0x038C, 0x038C },
	{ 0x038E, 0x03A1 },
	{ 0x03A3, 0x052F },
	{ 0x0531, 0x0556 },
	{ 0x0559, 0x058A },
	{ 0x058D, 0x058F },
	{ 0x0591, 0x05C7 },
	{ 0x05D0, 0x05EA },
	{ 0x05EF, 0x05F4 },
	{ 0x0600, 0x061C },
	{ 0x061E, 0x070D },
	{ 0x070F, 0x074A },
	{ 0x074D, 0x07B1 },
	{ 0x07C0, 0x07FA },
	{ 0x07FD, 0x082D },
	{ 0x0830, 0x083E },
	{ 0x0840, 0x085B },
	{ 0x085E, 0x085E },
	{ 0x0860, 0x086A },
	{ 0x08A0, 0x08B4 },
	{ 0x08B6, 0x08BD },
	{ 0x08D3, 0x0983 },
	{ 0x0985, 0x098C },
	{ 0x098F, 0x0990 },
	{ 0x0993, 0x09A8 },
	{ 0x09AA, 0x09B0 },
	{ 0x09B2, 0x09B2 },
	{ 0x09B6, 0x09B9 },
	{ 0x09BC, 0x09C4 },
	{ 0x09C7, 0x09C8 },
	{ 0x09CB, 0x09CE },
	{ 0x09D7, 0x09D7 },
	{ 0x09DC, 0x09DD },
	{ 0x09DF, 0x09E3 },
	{ 0x09E6, 0x09FE },
	{ 0x0A01, 0x0A03 },
	{ 0x0A05, 0x0A0A },
	{ 0x0A0F, 0x0A10 },
	{ 0x0A13, 0x0A28 },
	{ 0x0A2A, 0x0A30 },
	{ 0x0A32, 0x0A33 },
	{ 0x0A35, 0x0A36 },
	{ 0x0A38, 0x0A39 },
	{ 0x0A3C, 0x0A3C },
	{ 0x0A3E, 0x0A42 },
	{ 0x0A47, 0x0A48 },
	{ 0x0A4B, 0x0A4D },
	{ 0x0A51, 0x0A51 },
	{ 0x0A59, 0x0A5C },
	{ 0x0A5E, 0x0A5E },
	{ 0x0A66, 0x0A76 },
	{ 0x0A81, 0x0A83 },
	{ 0x0A85, 0x0A8D },
	{ 0x0A8F, 0x0A91 },
	{ 0x0A93, 0x0AA8 },
	{ 0x0AAA, 0x0AB0 },
	{ 0x0AB2, 0x0AB3 },
	{ 0x0AB5, 0x0AB9 },
	{ 0x0ABC, 0x0AC5 },
	{ 0x0AC7, 0x0AC9 },
	{ 0x0ACB, 0x0ACD },
	{ 0x0AD0, 0x0AD0 },
	{ 0x0AE0, 0x0AE3 },
	{ 0x0AE6, 0x0AF1 },
	{ 0x0AF9, 0x0AFF },
	{ 0x0B01, 0x0B03 },
	{ 0x0B05, 0x0B0C },
	{ 0x0B0F, 0x0B10 },
	{ 0x0B13, 0x0B28 },
	{ 0x0B2A, 0x0B30 },
	{ 0x0B32, 0x0B33 },
	{ 0x0B35, 0x0B39 },
	{ 0x0B3C, 0x0B44 },
	{ 0x0B47, 0x0B48 },
	{ 0x0B4B, 0x0B4D },
	{ 0x0B56, 0x0B57 },
	{ 0x0B5C, 0x0B5D },
	{ 0x0B5F, 0x0B63 },
	{ 0x0B66, 0x0B77 },
	{ 0x0B82, 0x0B83 },
	{ 0x0B85, 0x0B8A },
	{ 0x0B8E, 0x0B90 },
	{ 0x0B92, 0x0B95 },
	{ 0x0B99, 0x0B9A },
	{ 0x0B9C, 0x0B9C },
	{ 0x0B9E, 0x0B9F },
	{ 0x0BA3, 0x0BA4 },
	{ 0x0BA8, 0x0BAA },
	{ 0x0BAE, 0x0BB9 },
	{ 0x0BBE, 0x0BC2 },
	{ 0x0BC6, 0x0BC8 },
	{ 0x0BCA, 0x0BCD },
	{ 0x0BD0, 0x0BD0 },
	{ 0x0BD7, 0x0BD7 },
	{ 0x0BE6, 0x0BFA },
	{ 0x0C00, 0x0C0C },
	{ 0x0C0E, 0x0C10 },
	{ 0x0C12, 0x0C28 },
	{ 0x0C2A, 0x0C39 },
	{ 0x0C3D, 0x0C44 },
	{ 0x0C46, 0x0C48 },
	{ 0x0C4A, 0x0C4D },
	{ 0x0C55, 0x0C56 },
	{ 0x0C58, 0x0C5A },
	{ 0x0C60, 0x0C63 },
	{ 0x0C66, 0x0C6F },
	{ 0x0C78, 0x0C8C },
	{ 0x0C8E, 0x0C90 },
	{ 0x0C92, 0x0CA8 },
	{ 0x0CAA, 0x0CB3 },
	{ 0x0CB5, 0x0CB9 },
	{ 0x0CBC, 0x0CC4 },
	{ 0x0CC6, 0x0CC8 },
	{ 0x0CCA, 0x0CCD },
	{ 0x0CD5, 0x0CD6 },
	{ 0x0CDE, 0x0CDE },
	{ 0x0CE0, 0x0CE3 },
	{ 0x0CE6, 0x0CEF },
	{ 0x0CF1, 0x0CF2 },
	{ 0x0D00, 0x0D03 },
	{ 0x0D05, 0x0D0C },
	{ 0x0D0E, 0x0D10 },
	{ 0x0D12, 0x0D44 },
	{ 0x0D46, 0x0D48 },
	{ 0x0D4A, 0x0D4F },
	{ 0x0D54, 0x0D63 },
	{ 0x0D66, 0x0D7F },
	{ 0x0D82, 0x0D83 },
	{ 0x0D85, 0x0D96 },
	{ 0x0D9A, 0x0DB1 },
	{ 0x0DB3, 0x0DBB },
	{ 0x0DBD, 0x0DBD },
	{ 0x0DC0, 0x0DC6 },
	{ 0x0DCA, 0x0DCA },
	{ 0x0DCF, 0x0DD4 },
	{ 0x0DD6, 0x0DD6 },
	{ 0x0DD8, 0x0DDF },
	{ 0x0DE6, 0x0DEF },
	{ 0x0DF2, 0x0DF4 },
	{ 0x0E01, 0x0E3A },
	{ 0x0E3F, 0x0E5B },
	{ 0x0E81, 0x0E82 },
	{ 0x0E84, 0x0E84 },
	{ 0x0E87, 0x0E88 },
	{ 0x0E8A, 0x0E8A },
	{ 0x0E8D, 0x0E8D },
	{ 0x0E94, 0x0E97 },
	{ 0x0E99, 0x0E9F },
	{ 0x0EA1, 0x0EA3 },
	{ 0x0EA5, 0x0EA5 },
	{ 0x0EA7, 0x0EA7 },
	{ 0x0EAA, 0x0EAB },
	{ 0x0EAD, 0x0EB9 },
	{ 0x0EBB, 0x0EBD },
	{ 0x0EC0, 0x0EC4 },
	{ 0x0EC6, 0x0EC6 },
	{ 0x0EC8, 0x0ECD },
	{ 0x0ED0, 0x0ED9 },
	{ 0x0EDC, 0x0EDF },
	{ 0x0F00, 0x0F47 },
	{ 0x0F49, 0x0F6C },
	{ 0x0F71, 0x0F97 },
	{ 0x0F99, 0x0FBC },
	{ 0x0FBE, 0x0FCC },
	{ 0x0FCE, 0x0FDA },
	{ 0x1000, 0x10C5 },
	{ 0x10C7, 0x10C7 },
	{ 0x10CD, 0x10CD },
	{ 0x10D0, 0x1248 },
	{ 0x124A, 0x124D },
	{ 0x1250, 0x1256 },
	{ 0x1258, 0x1258 },
	{ 0x125A, 0x125D },
	{ 0x1260, 0x1288 },
	{ 0x128A, 0x128D },
	{ 0x1290, 0x12B0 },
	{ 0x12B2, 0x12B5 },
	{ 0x12B8, 0x12BE },
	{ 0x12C0, 0x12C0 },
	{ 0x12C2, 0x12C5 },
	{ 0x12C8, 0x12D6 },
	{ 0x12D8, 0x1310 },
	{ 0x1312, 0x1315 },
	{ 0x1318, 0x135A },
	{ 0x135D, 0x137C },
	{ 0x1380, 0x1399 },
	{ 0x13A0, 0x13F5 },
	{ 0x13F8, 0x13FD },
	{ 0x1400, 0x169C },
	{ 0x16A0, 0x16F8 },
	{ 0x1700, 0x170C },
	{ 0x170E, 0x1714 },
	{ 0x1720, 0x1736 },
	{ 0x1740, 0x1753 },
	{ 0x1760, 0x176C },
	{ 0x176E, 0x1770 },
	{ 0x1772, 0x1773 },
	{ 0x1780, 0x17DD },
	{ 0x17E0, 0x17E9 },
	{ 0x17F0, 0x17F9 },
	{ 0x1800, 0x180E },
	{ 0x1810, 0x1819 },
	{ 0x1820, 0x1878 },
	{ 0x1880, 0x18AA },
	{ 0x18B0, 0x18F5 },
	{ 0x1900, 0x191E },
	{ 0x1920, 0x192B },
	{ 0x1930, 0x193B },
	{ 0x1940, 0x1940 },
	{ 0x1944, 0x196D },
	{ 0x1970, 0x1974 },
	{ 0x1980, 0x19AB },
	{ 0x19B0, 0x19C9 },
	{ 0x19D0, 0x19DA },
	{ 0x19DE, 0x1A1B },
	{ 0x1A1E, 0x1A5E },
	{ 0x1A60, 0x1A7C },
	{ 0x1A7F, 0x1A89 },
	{ 0x1A90, 0x1A99 },
	{ 0x1AA0, 0x1AAD },
	{ 0x1AB0, 0x1ABE },
	{ 0x1B00, 0x1B4B },
	{ 0x1B50, 0x1B7C },
	{ 0x1B80, 0x1BF3 },
	{ 0x1BFC, 0x1C37 },
	{ 0x1C3B, 0x1C49 },
	{ 0x1C4D, 0x1C88 },
	{ 0x1C90, 0x1CBA },
	{ 0x1CBD, 0x1CC7 },
	{ 0x1CD0, 0x1CF9 },
	{ 0x1D00, 0x1DF9 },
	{ 0x1DFB, 0x1F15 },
	{ 0x1F18, 0x1F1D },
	{ 0x1F20, 0x1F45 },
	{ 0x1F48, 0x1F4D },
	{ 0x1F50, 0x1F57 },
	{ 0x1F59, 0x1F59 },
	{ 0x1F5B, 0x1F5B },
	{ 0x1F5D, 0x1F5D },
	{ 0x1F5F, 0x1F7D },
	{ 0x1F80, 0x1FB4 },
	{ 0x1FB6, 0x1FC4 },
	{ 0x1FC6, 0x1FD3 },
	{ 0x1FD6, 0x1FDB },
	{ 0x1FDD, 0x1FEF },
	{ 0x1FF2, 0x1FF4 },
	{ 0x1FF6, 0x1FFE },
	{ 0x2000, 0x2064 },
	{ 0x2066, 0x2071 },
	{ 0x2074, 0x208E },
	{ 0x2090, 0x209C },
	{ 0x20A0, 0x20BF },
	{ 0x20D0, 0x20F0 },
	{ 0x2100, 0x218B },
	{ 0x2190, 0x2426 },
	{ 0x2440, 0x244A },
	{ 0x2460, 0x2B73 },
	{ 0x2B76, 0x2B95 },
	{ 0x2B98, 0x2BC8 },
	{ 0x2BCA, 0x2BFE },
	{ 0x2C00, 0x2C2E },
	{ 0x2C30, 0x2C5E },
	{ 0x2C60, 0x2CF3 },
	{ 0x2CF9, 0x2D25 },
	{ 0x2D27, 0x2D27 },
	{ 0x2D2D, 0x2D2D },
	{ 0x2D30, 0x2D67 },
	{ 0x2D6F, 0x2D70 },
	{ 0x2D7F, 0x2D96 },
	{ 0x2DA0, 0x2DA6 },
	{ 0x2DA8, 0x2DAE },
	{ 0x2DB0, 0x2DB6 },
	{ 0x2DB8, 0x2DBE },
	{ 0x2DC0, 0x2DC6 },
	{ 0x2DC8, 0x2DCE },
	{ 0x2DD0, 0x2DD6 },
	{ 0x2DD8, 0x2DDE },
	{ 0x2DE0, 0x2E4E },
	{ 0x2E80, 0x2E99 },
	{ 0x2E9B, 0x2EF3 },
	{ 0x2F00, 0x2FD5 },
	{ 0x2FF0, 0x2FFB },
	{ 0x3000, 0x303F },
	{ 0x3041, 0x3096 },
	{ 0x3099, 0x30FF },
	{ 0x3105, 0x312F },
	{ 0x3131, 0x318E },
	{ 0x3190, 0x31BA },
	{ 0x31C0, 0x31E3 },
	{ 0x31F0, 0x321E },
	{ 0x3220, 0x32FE },
	{ 0x3300, 0x4DB5 },
	{ 0x4DC0, 0x9FEF },
	{ 0xA000, 0xA48C },
	{ 0xA490, 0xA4C6 },
	{ 0xA4D0, 0xA62B },
	{ 0xA640, 0xA6F7 },
	{ 0xA700, 0xA7B9 },
	{ 0xA7F7, 0xA82B },
	{ 0xA830, 0xA839 },
	{ 0xA840, 0xA877 },
	{ 0xA880, 0xA8C5 },
	{ 0xA8CE, 0xA8D9 },
	{ 0xA8E0, 0xA953 },
	{ 0xA95F, 0xA97C },
	{ 0xA980, 0xA9CD },
	{ 0xA9CF, 0xA9D9 },
	{ 0xA9DE, 0xA9FE },
	{ 0xAA00, 0xAA36 },
	{ 0xAA40, 0xAA4D },
	{ 0xAA50, 0xAA59 },
	{ 0xAA5C, 0xAAC2 },
	{ 0xAADB, 0xAAF6 },
	{ 0xAB01, 0xAB06 },
	{ 0xAB09, 0xAB0E },
	{ 0xAB11, 0xAB16 },
	{ 0xAB20, 0xAB26 },
	{ 0xAB28, 0xAB2E },
	{ 0xAB30, 0xAB65 },
	{ 0xAB70, 0xABED },
	{ 0xABF0, 0xABF9 },
	{ 0xAC00, 0xD7A3 },
	{ 0xD7B0, 0xD7C6 },
	{ 0xD7CB, 0xD7FB },
	{ 0xE000, 0xFA6D },
	{ 0xFA70, 0xFAD9 },
	{ 0xFB00, 0xFB06 },
	{ 0xFB13, 0xFB17 },
	{ 0xFB1D, 0xFB36 },
	{ 0xFB38, 0xFB3C },
	{ 0xFB3E, 0xFB3E },
	{ 0xFB40, 0xFB41 },
	{ 0xFB43, 0xFB44 },
	{ 0xFB46, 0xFBC1 },
	{ 0xFBD3, 0xFD3F },
	{ 0xFD50, 0xFD8F },
	{ 0xFD92, 0xFDC7 },
	{ 0xFDF0, 0xFDFD },
	{ 0xFE00, 0xFE19 },
	{ 0xFE20, 0xFE52 },
	{ 0xFE54, 0xFE66 },
	{ 0xFE68, 0xFE6B },
	{ 0xFE70, 0xFE74 },
	{ 0xFE76, 0xFEFC },
	{ 0xFEFF, 0xFEFF },
	{ 0xFF01, 0xFFBE },
	{ 0xFFC2, 0xFFC7 },
	{ 0xFFCA, 0xFFCF },
	{ 0xFFD2, 0xFFD7 },
	{ 0xFFDA, 0xFFDC },
	{ 0xFFE0, 0xFFE6 },
	{ 0xFFE8, 0xFFEE },
	{ 0xFFF9, 0xFFFD },
	{ 0x10000, 0x1000B },
	{ 0x1000D, 0x10026 },
	{ 0x10028, 0x1003A },
	{ 0x1003C, 0x1003D },
	{ 0x1003F, 0x1004D },
	{ 0x10050, 0x1005D },
	{ 0x10080, 0x100FA },
	{ 0x10100, 0x10102 },
	{ 0x10107, 0x10133 },
	{ 0x10137, 0x1018E },
	{ 0x10190, 0x1019B },
	{ 0x101A0, 0x101A0 },
	{ 0x101D0, 0x101FD },
	{ 0x10280, 0x1029C },
	{ 0x102A0, 0x102D0 },
	{ 0x102E0, 0x102FB },
	{ 0x10300, 0x10323 },
	{ 0x1032D, 0x1034A },
	{ 0x10350, 0x1037A },
	{ 0x10380, 0x1039D },
	{ 0x1039F, 0x103C3 },
	{ 0x103C8, 0x103D5 },
	{ 0x10400, 0x1049D },
	{ 0x104A0, 0x104A9 },
	{ 0x104B0, 0x104D3 },
	{ 0x104D8, 0x104FB },
	{ 0x10500, 0x10527 },
	{ 0x10530, 0x10563 },
	{ 0x1056F, 0x1056F },
	{ 0x10600, 0x10736 },
	{ 0x10740, 0x10755 },
	{ 0x10760, 0x10767 },
	{ 0x10800, 0x10805 },
	{ 0x10808, 0x10808 },
	{ 0x1080A, 0x10835 },
	{ 0x10837, 0x10838 },
	{ 0x1083C, 0x1083C },
	{ 0x1083F, 0x10855 },
	{ 0x10857, 0x1089E },
	{ 0x108A7, 0x108AF },
	{ 0x108E0, 0x108F2 },
	{ 0x108F4, 0x108F5 },
	{ 0x108FB, 0x1091B },
	{ 0x1091F, 0x10939 },
	{ 0x1093F, 0x1093F },
	{ 0x10980, 0x109B7 },
	{ 0x109BC, 0x109CF },
	{ 0x109D2, 0x10A03 },
	{ 0x10A05, 0x10A06 },
	{ 0x10A0C, 0x10A13 },
	{ 0x10A15, 0x10A17 },
	{ 0x10A19, 0x10A35 },
	{ 0x10A38, 0x10A3A },
	{ 0x10A3F, 0x10A48 },
	{ 0x10A50, 0x10A58 },
	{ 0x10A60, 0x10A9F },
	{ 0x10AC0, 0x10AE6 },
	{ 0x10AEB, 0x10AF6 },
	{ 0x10B00, 0x10B35 },
	{ 0x10B39, 0x10B55 },
	{ 0x10B58, 0x10B72 },
	{ 0x10B78, 0x10B91 },
	{ 0x10B99, 0x10B9C },
	{ 0x10BA9, 0x10BAF },
	{ 0x10C00, 0x10C48 },
	{ 0x10C80, 0x10CB2 },
	{ 0x10CC0, 0x10CF2 },
	{ 0x10CFA, 0x10D27 },
	{ 0x10D30, 0x10D39 },
	{ 0x10E60, 0x10E7E },
	{ 0x10F00, 0x10F27 },
	{ 0x10F30, 0x10F59 },
	{ 0x11000, 0x1104D },
	{ 0x11052, 0x1106F },
	{ 0x1107F, 0x110C1 },
	{ 0x110CD, 0x110CD },
	{ 0x110D0, 0x110E8 },
	{ 0x110F0, 0x110F9 },
	{ 0x11100, 0x11134 },
	{ 0x11136, 0x11146 },
	{ 0x11150, 0x11176 },
	{ 0x11180, 0x111CD },
	{ 0x111D0, 0x111DF },
	{ 0x111E1, 0x111F4 },
	{ 0x11200, 0x11211 },
	{ 0x11213, 0x1123E },
	{ 0x11280, 0x11286 },
	{ 0x11288, 0x11288 },
	{ 0x1128A, 0x1128D },
	{ 0x1128F, 0x1129D },
	{ 0x1129F, 0x112A9 },
	{ 0x112B0, 0x112EA },
	{ 0x112F0, 0x112F9 },
	{ 0x11300, 0x11303 },
	{ 0x11305, 0x1130C },
	{ 0x1130F, 0x11310 },
	{ 0x11313, 0x11328 },
	{ 0x1132A, 0x11330 },
	{ 0x11332, 0x11333 },
	{ 0x11335, 0x11339 },
	{ 0x1133B, 0x11344 },
	{ 0x11347, 0x11348 },
	{ 0x1134B, 0x1134D },
	{ 0x11350, 0x11350 },
	{ 0x11357, 0x11357 },
	{ 0x1135D, 0x11363 },
	{ 0x11366, 0x1136C },
	{ 0x11370, 0x11374 },
	{ 0x11400, 0x11459 },
	{ 0x1145B, 0x1145B },
	{ 0x1145D, 0x1145E },
	{ 0x11480, 0x114C7 },
	{ 0x114D0, 0x114D9 },
	{ 0x11580, 0x115B5 },
	{ 0x115B8, 0x115DD },
	{ 0x11600, 0x11644 },
	{ 0x11650, 0x11659 },
	{ 0x11660, 0x1166C },
	{ 0x11680, 0x116B7 },
	{ 0x116C0, 0x116C9 },
	{ 0x11700, 0x1171A },
	{ 0x1171D, 0x1172B },
	{ 0x11730, 0x1173F },
	{ 0x11800, 0x1183B },
	{ 0x118A0, 0x118F2 },
	{ 0x118FF, 0x118FF },
	{ 0x11A00, 0x11A47 },
	{ 0x11A50, 0x11A83 },
	{ 0x11A86, 0x11AA2 },
	{ 0x11AC0, 0x11AF8 },
	{ 0x11C00, 0x11C08 },
	{ 0x11C0A, 0x11C36 },
	{ 0x11C38, 0x11C45 },
	{ 0x11C50, 0x11C6C },
	{ 0x11C70, 0x11C8F },
	{ 0x11C92, 0x11CA7 },
	{ 0x11CA9, 0x11CB6 },
	{ 0x11D00, 0x11D06 },
	{ 0x11D08, 0x11D09 },
	{ 0x11D0B, 0x11D36 },
	{ 0x11D3A, 0x11D3A },
	{ 0x11D3C, 0x11D3D },
	{ 0x11D3F, 0x11D47 },
	{ 0x11D50, 0x11D59 },
	{ 0x11D60, 0x11D65 },
	{ 0x11D67, 0x11D68 },
	{ 0x11D6A, 0x11D8E },
	{ 0x11D90, 0x11D91 },
	{ 0x11D93, 0x11D98 },
	{ 0x11DA0, 0x11DA9 },
	{ 0x11EE0, 0x11EF8 },
	{ 0x12000, 0x12399 },
	{ 0x12400, 0x1246E },
	{ 0x12470, 0x12474 },
	{ 0x12480, 0x12543 },
	{ 0x13000, 0x1342E },
	{ 0x14400, 0x14646 },
	{ 0x16800, 0x16A38 },
	{ 0x16A40, 0x16A5E },
	{ 0x16A60, 0x16A69 },
	{ 0x16A6E, 0x16A6F },
	{ 0x16AD0, 0x16AED },
	{ 0x16AF0, 0x16AF5 },
	{ 0x16B00, 0x16B45 },
	{ 0x16B50, 0x16B59 },
	{ 0x16B5B, 0x16B61 },
	{ 0x16B63, 0x16B77 },
	{ 0x16B7D, 0x16B8F },
	{ 0x16E40, 0x16E9A },
	{ 0x16F00, 0x16F44 },
	{ 0x16F50, 0x16F7E },
	{ 0x16F8F, 0x16F9F },
	{ 0x16FE0, 0x16FE1 },
	{ 0x17000, 0x187F1 },
	{ 0x18800, 0x18AF2 },
	{ 0x1B000, 0x1B11E },
	{ 0x1B170, 0x1B2FB },
	{ 0x1BC00, 0x1BC6A },
	{ 0x1BC70, 0x1BC7C },
	{ 0x1BC80, 0x1BC88 },
	{ 0x1BC90, 0x1BC99 },
	{ 0x1BC9C, 0x1BCA3 },
	{ 0x1D000, 0x1D0F5 },
	{ 0x1D100, 0x1D126 },
	{ 0x1D129, 0x1D1E8 },
	{ 0x1D200, 0x1D245 },
	{ 0x1D2E0, 0x1D2F3 },
	{ 0x1D300, 0x1D356 },
	{ 0x1D360, 0x1D378 },
	{ 0x1D400, 0x1D454 },
	{ 0x1D456, 0x1D49C },
	{ 0x1D49E, 0x1D49F },
	{ 0x1D4A2, 0x1D4A2 },
	{ 0x1D4A5, 0x1D4A6 },
	{ 0x1D4A9, 0x1D4AC },
	{ 0x1D4AE, 0x1D4B9 },
	{ 0x1D4BB, 0x1D4BB },
	{ 0x1D4BD, 0x1D4C3 },
	{ 0x1D4C5, 0x1D505 },
	{ 0x1D507, 0x1D50A },
	{ 0x1D50D, 0x1D514 },
	{ 0x1D516, 0x1D51C },
	{ 0x1D51E, 0x1D539 },
	{ 0x1D53B, 0x1D53E },
	{ 0x1D540, 0x1D544 },
	{ 0x1D546, 0x1D546 },
	{ 0x1D54A, 0x1D550 },
	{ 0x1D552, 0x1D6A5 },
	{ 0x1D6A8, 0x1D7CB },
	{ 0x1D7CE, 0x1DA8B },
	{ 0x1DA9B, 0x1DA9F },
	{ 0x1DAA1, 0x1DAAF },
	{ 0x1E000, 0x1E006 },
	{ 0x1E008, 0x1E018 },
	{ 0x1E01B, 0x1E021 },
	{ 0x1E023, 0x1E024 },
	{ 0x1E026, 0x1E02A },
	{ 0x1E800, 0x1E8C4 },
	{ 0x1E8C7, 0x1E8D6 },
	{ 0x1E900, 0x1E94A },
	{ 0x1E950, 0x1E959 },
	{ 0x1E95E, 0x1E95F },
	{ 0x1EC71, 0x1ECB4 },
	{ 0x1EE00, 0x1EE03 },
	{ 0x1EE05, 0x1EE1F },
	{ 0x1EE21, 0x1EE22 },
	{ 0x1EE24, 0x1EE24 },
	{ 0x1EE27, 0x1EE27 },
	{ 0x1EE29, 0x1EE32 },
	{ 0x1EE34, 0x1EE37 },
	{ 0x1EE39, 0x1EE39 },
	{ 0x1EE3B, 0x1EE3B },
	{ 0x1EE42, 0x1EE42 },
	{ 0x1EE47, 0x1EE47 },
	{ 0x1EE49, 0x1EE49 },
	{ 0x1EE4B, 0x1EE4B },
	{ 0x1EE4D, 0x1EE4F },
	{ 0x1EE51, 0x1EE52 },
	{ 0x1EE54, 0x1EE54 },
	{ 0x1EE57, 0x1EE57 },
	{ 0x1EE59, 0x1EE59 },
	{ 0x1EE5B, 0x1EE5B },
	{ 0x1EE5D, 0x1EE5D },
	{ 0x1EE5F, 0x1EE5F },
	{ 0x1EE61, 0x1EE62 },
	{ 0x1EE64, 0x1EE64 },
	{ 0x1EE67, 0x1EE6A },
	{ 0x1EE6C, 0x1EE72 },
	{ 0x1EE74, 0x1EE77 },
	{ 0x1EE79, 0x1EE7C },
	{ 0x1EE7E, 0x1EE7E },
	{ 0x1EE80, 0x1EE89 },
	{ 0x1EE8B, 0x1EE9B },
	{ 0x1EEA1, 0x1EEA3 },
	{ 0x1EEA5, 0x1EEA9 },
	{ 0x1EEAB, 0x1EEBB },
	{ 0x1EEF0, 0x1EEF1 },
	{ 0x1F000, 0x1F02B },
	{ 0x1F030, 0x1F093 },
	{ 0x1F0A0, 0x1F0AE },
	{ 0x1F0B1, 0x1F0BF },
	{ 0x1F0C1, 0x1F0CF },
	{ 0x1F0D1, 0x1F0F5 },
	{ 0x1F100, 0x1F10C },
	{ 0x1F110, 0x1F16B },
	{ 0x1F170, 0x1F1AC },
	{ 0x1F1E6, 0x1F202 },
	{ 0x1F210, 0x1F23B },
	{ 0x1F240, 0x1F248 },
	{ 0x1F250, 0x1F251 },
	{ 0x1F260, 0x1F265 },
	{ 0x1F300, 0x1F6D4 },
	{ 0x1F6E0, 0x1F6EC },
	{ 0x1F6F0, 0x1F6F9 },
	{ 0x1F700, 0x1F773 },
	{ 0x1F780, 0x1F7D8 },
	{ 0x1F800, 0x1F80B },
	{ 0x1F810, 0x1F847 },
	{ 0x1F850, 0x1F859 },
	{ 0x1F860, 0x1F887 },
	{ 0x1F890, 0x1F8AD },
	{ 0x1F900, 0x1F90B },
	{ 0x1F910, 0x1F93E },
	{ 0x1F940, 0x1F970 },
	{ 0x1F973, 0x1F976 },
	{ 0x1F97A, 0x1F97A },
	{ 0x1F97C, 0x1F9A2 },
	{ 0x1F9B0, 0x1F9B9 },
	{ 0x1F9C0, 0x1F9C2 },
	{ 0x1F9D0, 0x1F9FF },
	{ 0x1FA60, 0x1FA6D },
	{ 0x20000, 0x2A6D6 },
	{ 0x2A700, 0x2B734 },
	{ 0x2B740, 0x2B81D },
	{ 0x2B820, 0x2CEA1 },
	{ 0x2CEB0, 0x2EBE0 },
	{ 0x2F800, 0x2FA1D },
	{ 0xE0001, 0xE0001 },
	{ 0xE0020, 0xE007F },
	{ 0xE0100, 0xE01EF },
	{ 0xF0000, 0xFFFFD },
	{ 0x100000, 0x10FFFD }
};

MAKE_ISW(graph)
#endif

static const struct mb_ucsrange data_wctype_print[] = {
	{ 0x0020, 0x007E },
	{ 0x00A0, 0x0377 },
	{ 0x037A, 0x037F },
	{ 0x0384, 0x038A },
	{ 0x038C, 0x038C },
	{ 0x038E, 0x03A1 },
	{ 0x03A3, 0x052F },
	{ 0x0531, 0x0556 },
	{ 0x0559, 0x058A },
	{ 0x058D, 0x058F },
	{ 0x0591, 0x05C7 },
	{ 0x05D0, 0x05EA },
	{ 0x05EF, 0x05F4 },
	{ 0x0600, 0x061C },
	{ 0x061E, 0x070D },
	{ 0x070F, 0x074A },
	{ 0x074D, 0x07B1 },
	{ 0x07C0, 0x07FA },
	{ 0x07FD, 0x082D },
	{ 0x0830, 0x083E },
	{ 0x0840, 0x085B },
	{ 0x085E, 0x085E },
	{ 0x0860, 0x086A },
	{ 0x08A0, 0x08B4 },
	{ 0x08B6, 0x08BD },
	{ 0x08D3, 0x0983 },
	{ 0x0985, 0x098C },
	{ 0x098F, 0x0990 },
	{ 0x0993, 0x09A8 },
	{ 0x09AA, 0x09B0 },
	{ 0x09B2, 0x09B2 },
	{ 0x09B6, 0x09B9 },
	{ 0x09BC, 0x09C4 },
	{ 0x09C7, 0x09C8 },
	{ 0x09CB, 0x09CE },
	{ 0x09D7, 0x09D7 },
	{ 0x09DC, 0x09DD },
	{ 0x09DF, 0x09E3 },
	{ 0x09E6, 0x09FE },
	{ 0x0A01, 0x0A03 },
	{ 0x0A05, 0x0A0A },
	{ 0x0A0F, 0x0A10 },
	{ 0x0A13, 0x0A28 },
	{ 0x0A2A, 0x0A30 },
	{ 0x0A32, 0x0A33 },
	{ 0x0A35, 0x0A36 },
	{ 0x0A38, 0x0A39 },
	{ 0x0A3C, 0x0A3C },
	{ 0x0A3E, 0x0A42 },
	{ 0x0A47, 0x0A48 },
	{ 0x0A4B, 0x0A4D },
	{ 0x0A51, 0x0A51 },
	{ 0x0A59, 0x0A5C },
	{ 0x0A5E, 0x0A5E },
	{ 0x0A66, 0x0A76 },
	{ 0x0A81, 0x0A83 },
	{ 0x0A85, 0x0A8D },
	{ 0x0A8F, 0x0A91 },
	{ 0x0A93, 0x0AA8 },
	{ 0x0AAA, 0x0AB0 },
	{ 0x0AB2, 0x0AB3 },
	{ 0x0AB5, 0x0AB9 },
	{ 0x0ABC, 0x0AC5 },
	{ 0x0AC7, 0x0AC9 },
	{ 0x0ACB, 0x0ACD },
	{ 0x0AD0, 0x0AD0 },
	{ 0x0AE0, 0x0AE3 },
	{ 0x0AE6, 0x0AF1 },
	{ 0x0AF9, 0x0AFF },
	{ 0x0B01, 0x0B03 },
	{ 0x0B05, 0x0B0C },
	{ 0x0B0F, 0x0B10 },
	{ 0x0B13, 0x0B28 },
	{ 0x0B2A, 0x0B30 },
	{ 0x0B32, 0x0B33 },
	{ 0x0B35, 0x0B39 },
	{ 0x0B3C, 0x0B44 },
	{ 0x0B47, 0x0B48 },
	{ 0x0B4B, 0x0B4D },
	{ 0x0B56, 0x0B57 },
	{ 0x0B5C, 0x0B5D },
	{ 0x0B5F, 0x0B63 },
	{ 0x0B66, 0x0B77 },
	{ 0x0B82, 0x0B83 },
	{ 0x0B85, 0x0B8A },
	{ 0x0B8E, 0x0B90 },
	{ 0x0B92, 0x0B95 },
	{ 0x0B99, 0x0B9A },
	{ 0x0B9C, 0x0B9C },
	{ 0x0B9E, 0x0B9F },
	{ 0x0BA3, 0x0BA4 },
	{ 0x0BA8, 0x0BAA },
	{ 0x0BAE, 0x0BB9 },
	{ 0x0BBE, 0x0BC2 },
	{ 0x0BC6, 0x0BC8 },
	{ 0x0BCA, 0x0BCD },
	{ 0x0BD0, 0x0BD0 },
	{ 0x0BD7, 0x0BD7 },
	{ 0x0BE6, 0x0BFA },
	{ 0x0C00, 0x0C0C },
	{ 0x0C0E, 0x0C10 },
	{ 0x0C12, 0x0C28 },
	{ 0x0C2A, 0x0C39 },
	{ 0x0C3D, 0x0C44 },
	{ 0x0C46, 0x0C48 },
	{ 0x0C4A, 0x0C4D },
	{ 0x0C55, 0x0C56 },
	{ 0x0C58, 0x0C5A },
	{ 0x0C60, 0x0C63 },
	{ 0x0C66, 0x0C6F },
	{ 0x0C78, 0x0C8C },
	{ 0x0C8E, 0x0C90 },
	{ 0x0C92, 0x0CA8 },
	{ 0x0CAA, 0x0CB3 },
	{ 0x0CB5, 0x0CB9 },
	{ 0x0CBC, 0x0CC4 },
	{ 0x0CC6, 0x0CC8 },
	{ 0x0CCA, 0x0CCD },
	{ 0x0CD5, 0x0CD6 },
	{ 0x0CDE, 0x0CDE },
	{ 0x0CE0, 0x0CE3 },
	{ 0x0CE6, 0x0CEF },
	{ 0x0CF1, 0x0CF2 },
	{ 0x0D00, 0x0D03 },
	{ 0x0D05, 0x0D0C },
	{ 0x0D0E, 0x0D10 },
	{ 0x0D12, 0x0D44 },
	{ 0x0D46, 0x0D48 },
	{ 0x0D4A, 0x0D4F },
	{ 0x0D54, 0x0D63 },
	{ 0x0D66, 0x0D7F },
	{ 0x0D82, 0x0D83 },
	{ 0x0D85, 0x0D96 },
	{ 0x0D9A, 0x0DB1 },
	{ 0x0DB3, 0x0DBB },
	{ 0x0DBD, 0x0DBD },
	{ 0x0DC0, 0x0DC6 },
	{ 0x0DCA, 0x0DCA },
	{ 0x0DCF, 0x0DD4 },
	{ 0x0DD6, 0x0DD6 },
	{ 0x0DD8, 0x0DDF },
	{ 0x0DE6, 0x0DEF },
	{ 0x0DF2, 0x0DF4 },
	{ 0x0E01, 0x0E3A },
	{ 0x0E3F, 0x0E5B },
	{ 0x0E81, 0x0E82 },
	{ 0x0E84, 0x0E84 },
	{ 0x0E87, 0x0E88 },
	{ 0x0E8A, 0x0E8A },
	{ 0x0E8D, 0x0E8D },
	{ 0x0E94, 0x0E97 },
	{ 0x0E99, 0x0E9F },
	{ 0x0EA1, 0x0EA3 },
	{ 0x0EA5, 0x0EA5 },
	{ 0x0EA7, 0x0EA7 },
	{ 0x0EAA, 0x0EAB },
	{ 0x0EAD, 0x0EB9 },
	{ 0x0EBB, 0x0EBD },
	{ 0x0EC0, 0x0EC4 },
	{ 0x0EC6, 0x0EC6 },
	{ 0x0EC8, 0x0ECD },
	{ 0x0ED0, 0x0ED9 },
	{ 0x0EDC, 0x0EDF },
	{ 0x0F00, 0x0F47 },
	{ 0x0F49, 0x0F6C },
	{ 0x0F71, 0x0F97 },
	{ 0x0F99, 0x0FBC },
	{ 0x0FBE, 0x0FCC },
	{ 0x0FCE, 0x0FDA },
	{ 0x1000, 0x10C5 },
	{ 0x10C7, 0x10C7 },
	{ 0x10CD, 0x10CD },
	{ 0x10D0, 0x1248 },
	{ 0x124A, 0x124D },
	{ 0x1250, 0x1256 },
	{ 0x1258, 0x1258 },
	{ 0x125A, 0x125D },
	{ 0x1260, 0x1288 },
	{ 0x128A, 0x128D },
	{ 0x1290, 0x12B0 },
	{ 0x12B2, 0x12B5 },
	{ 0x12B8, 0x12BE },
	{ 0x12C0, 0x12C0 },
	{ 0x12C2, 0x12C5 },
	{ 0x12C8, 0x12D6 },
	{ 0x12D8, 0x1310 },
	{ 0x1312, 0x1315 },
	{ 0x1318, 0x135A },
	{ 0x135D, 0x137C },
	{ 0x1380, 0x1399 },
	{ 0x13A0, 0x13F5 },
	{ 0x13F8, 0x13FD },
	{ 0x1400, 0x169C },
	{ 0x16A0, 0x16F8 },
	{ 0x1700, 0x170C },
	{ 0x170E, 0x1714 },
	{ 0x1720, 0x1736 },
	{ 0x1740, 0x1753 },
	{ 0x1760, 0x176C },
	{ 0x176E, 0x1770 },
	{ 0x1772, 0x1773 },
	{ 0x1780, 0x17DD },
	{ 0x17E0, 0x17E9 },
	{ 0x17F0, 0x17F9 },
	{ 0x1800, 0x180E },
	{ 0x1810, 0x1819 },
	{ 0x1820, 0x1878 },
	{ 0x1880, 0x18AA },
	{ 0x18B0, 0x18F5 },
	{ 0x1900, 0x191E },
	{ 0x1920, 0x192B },
	{ 0x1930, 0x193B },
	{ 0x1940, 0x1940 },
	{ 0x1944, 0x196D },
	{ 0x1970, 0x1974 },
	{ 0x1980, 0x19AB },
	{ 0x19B0, 0x19C9 },
	{ 0x19D0, 0x19DA },
	{ 0x19DE, 0x1A1B },
	{ 0x1A1E, 0x1A5E },
	{ 0x1A60, 0x1A7C },
	{ 0x1A7F, 0x1A89 },
	{ 0x1A90, 0x1A99 },
	{ 0x1AA0, 0x1AAD },
	{ 0x1AB0, 0x1ABE },
	{ 0x1B00, 0x1B4B },
	{ 0x1B50, 0x1B7C },
	{ 0x1B80, 0x1BF3 },
	{ 0x1BFC, 0x1C37 },
	{ 0x1C3B, 0x1C49 },
	{ 0x1C4D, 0x1C88 },
	{ 0x1C90, 0x1CBA },
	{ 0x1CBD, 0x1CC7 },
	{ 0x1CD0, 0x1CF9 },
	{ 0x1D00, 0x1DF9 },
	{ 0x1DFB, 0x1F15 },
	{ 0x1F18, 0x1F1D },
	{ 0x1F20, 0x1F45 },
	{ 0x1F48, 0x1F4D },
	{ 0x1F50, 0x1F57 },
	{ 0x1F59, 0x1F59 },
	{ 0x1F5B, 0x1F5B },
	{ 0x1F5D, 0x1F5D },
	{ 0x1F5F, 0x1F7D },
	{ 0x1F80, 0x1FB4 },
	{ 0x1FB6, 0x1FC4 },
	{ 0x1FC6, 0x1FD3 },
	{ 0x1FD6, 0x1FDB },
	{ 0x1FDD, 0x1FEF },
	{ 0x1FF2, 0x1FF4 },
	{ 0x1FF6, 0x1FFE },
#ifdef __CYGWIN__
	/* WTF?! https://blogs.msdn.microsoft.com/oldnewthing/20070104-12/?p=28513 */
	{ 0x2000, 0x2021 },
	{ 0x2023, 0x2064 },
#else
	{ 0x2000, 0x2064 },
#endif
	{ 0x2066, 0x2071 },
	{ 0x2074, 0x208E },
	{ 0x2090, 0x209C },
	{ 0x20A0, 0x20BF },
	{ 0x20D0, 0x20F0 },
	{ 0x2100, 0x218B },
	{ 0x2190, 0x2426 },
	{ 0x2440, 0x244A },
	{ 0x2460, 0x2B73 },
	{ 0x2B76, 0x2B95 },
	{ 0x2B98, 0x2BC8 },
	{ 0x2BCA, 0x2BFE },
	{ 0x2C00, 0x2C2E },
	{ 0x2C30, 0x2C5E },
	{ 0x2C60, 0x2CF3 },
	{ 0x2CF9, 0x2D25 },
	{ 0x2D27, 0x2D27 },
	{ 0x2D2D, 0x2D2D },
	{ 0x2D30, 0x2D67 },
	{ 0x2D6F, 0x2D70 },
	{ 0x2D7F, 0x2D96 },
	{ 0x2DA0, 0x2DA6 },
	{ 0x2DA8, 0x2DAE },
	{ 0x2DB0, 0x2DB6 },
	{ 0x2DB8, 0x2DBE },
	{ 0x2DC0, 0x2DC6 },
	{ 0x2DC8, 0x2DCE },
	{ 0x2DD0, 0x2DD6 },
	{ 0x2DD8, 0x2DDE },
	{ 0x2DE0, 0x2E4E },
	{ 0x2E80, 0x2E99 },
	{ 0x2E9B, 0x2EF3 },
	{ 0x2F00, 0x2FD5 },
	{ 0x2FF0, 0x2FFB },
	{ 0x3000, 0x303F },
	{ 0x3041, 0x3096 },
	{ 0x3099, 0x30FF },
	{ 0x3105, 0x312F },
	{ 0x3131, 0x318E },
	{ 0x3190, 0x31BA },
	{ 0x31C0, 0x31E3 },
	{ 0x31F0, 0x321E },
	{ 0x3220, 0x32FE },
	{ 0x3300, 0x4DB5 },
	{ 0x4DC0, 0x9FEF },
	{ 0xA000, 0xA48C },
	{ 0xA490, 0xA4C6 },
	{ 0xA4D0, 0xA62B },
	{ 0xA640, 0xA6F7 },
	{ 0xA700, 0xA7B9 },
	{ 0xA7F7, 0xA82B },
	{ 0xA830, 0xA839 },
	{ 0xA840, 0xA877 },
	{ 0xA880, 0xA8C5 },
	{ 0xA8CE, 0xA8D9 },
	{ 0xA8E0, 0xA953 },
	{ 0xA95F, 0xA97C },
	{ 0xA980, 0xA9CD },
	{ 0xA9CF, 0xA9D9 },
	{ 0xA9DE, 0xA9FE },
	{ 0xAA00, 0xAA36 },
	{ 0xAA40, 0xAA4D },
	{ 0xAA50, 0xAA59 },
	{ 0xAA5C, 0xAAC2 },
	{ 0xAADB, 0xAAF6 },
	{ 0xAB01, 0xAB06 },
	{ 0xAB09, 0xAB0E },
	{ 0xAB11, 0xAB16 },
	{ 0xAB20, 0xAB26 },
	{ 0xAB28, 0xAB2E },
	{ 0xAB30, 0xAB65 },
	{ 0xAB70, 0xABED },
	{ 0xABF0, 0xABF9 },
	{ 0xAC00, 0xD7A3 },
	{ 0xD7B0, 0xD7C6 },
	{ 0xD7CB, 0xD7FB },
	{ 0xE000, 0xFA6D },
	{ 0xFA70, 0xFAD9 },
	{ 0xFB00, 0xFB06 },
	{ 0xFB13, 0xFB17 },
	{ 0xFB1D, 0xFB36 },
	{ 0xFB38, 0xFB3C },
	{ 0xFB3E, 0xFB3E },
	{ 0xFB40, 0xFB41 },
	{ 0xFB43, 0xFB44 },
	{ 0xFB46, 0xFBC1 },
	{ 0xFBD3, 0xFD3F },
	{ 0xFD50, 0xFD8F },
	{ 0xFD92, 0xFDC7 },
	{ 0xFDF0, 0xFDFD },
	{ 0xFE00, 0xFE19 },
	{ 0xFE20, 0xFE52 },
	{ 0xFE54, 0xFE66 },
	{ 0xFE68, 0xFE6B },
	{ 0xFE70, 0xFE74 },
	{ 0xFE76, 0xFEFC },
	{ 0xFEFF, 0xFEFF },
	{ 0xFF01, 0xFFBE },
	{ 0xFFC2, 0xFFC7 },
	{ 0xFFCA, 0xFFCF },
	{ 0xFFD2, 0xFFD7 },
	{ 0xFFDA, 0xFFDC },
	{ 0xFFE0, 0xFFE6 },
	{ 0xFFE8, 0xFFEE },
	{ 0xFFF9, 0xFFFD },
	{ 0x10000, 0x1000B },
	{ 0x1000D, 0x10026 },
	{ 0x10028, 0x1003A },
	{ 0x1003C, 0x1003D },
	{ 0x1003F, 0x1004D },
	{ 0x10050, 0x1005D },
	{ 0x10080, 0x100FA },
	{ 0x10100, 0x10102 },
	{ 0x10107, 0x10133 },
	{ 0x10137, 0x1018E },
	{ 0x10190, 0x1019B },
	{ 0x101A0, 0x101A0 },
	{ 0x101D0, 0x101FD },
	{ 0x10280, 0x1029C },
	{ 0x102A0, 0x102D0 },
	{ 0x102E0, 0x102FB },
	{ 0x10300, 0x10323 },
	{ 0x1032D, 0x1034A },
	{ 0x10350, 0x1037A },
	{ 0x10380, 0x1039D },
	{ 0x1039F, 0x103C3 },
	{ 0x103C8, 0x103D5 },
	{ 0x10400, 0x1049D },
	{ 0x104A0, 0x104A9 },
	{ 0x104B0, 0x104D3 },
	{ 0x104D8, 0x104FB },
	{ 0x10500, 0x10527 },
	{ 0x10530, 0x10563 },
	{ 0x1056F, 0x1056F },
	{ 0x10600, 0x10736 },
	{ 0x10740, 0x10755 },
	{ 0x10760, 0x10767 },
	{ 0x10800, 0x10805 },
	{ 0x10808, 0x10808 },
	{ 0x1080A, 0x10835 },
	{ 0x10837, 0x10838 },
	{ 0x1083C, 0x1083C },
	{ 0x1083F, 0x10855 },
	{ 0x10857, 0x1089E },
	{ 0x108A7, 0x108AF },
	{ 0x108E0, 0x108F2 },
	{ 0x108F4, 0x108F5 },
	{ 0x108FB, 0x1091B },
	{ 0x1091F, 0x10939 },
	{ 0x1093F, 0x1093F },
	{ 0x10980, 0x109B7 },
	{ 0x109BC, 0x109CF },
	{ 0x109D2, 0x10A03 },
	{ 0x10A05, 0x10A06 },
	{ 0x10A0C, 0x10A13 },
	{ 0x10A15, 0x10A17 },
	{ 0x10A19, 0x10A35 },
	{ 0x10A38, 0x10A3A },
	{ 0x10A3F, 0x10A48 },
	{ 0x10A50, 0x10A58 },
	{ 0x10A60, 0x10A9F },
	{ 0x10AC0, 0x10AE6 },
	{ 0x10AEB, 0x10AF6 },
	{ 0x10B00, 0x10B35 },
	{ 0x10B39, 0x10B55 },
	{ 0x10B58, 0x10B72 },
	{ 0x10B78, 0x10B91 },
	{ 0x10B99, 0x10B9C },
	{ 0x10BA9, 0x10BAF },
	{ 0x10C00, 0x10C48 },
	{ 0x10C80, 0x10CB2 },
	{ 0x10CC0, 0x10CF2 },
	{ 0x10CFA, 0x10D27 },
	{ 0x10D30, 0x10D39 },
	{ 0x10E60, 0x10E7E },
	{ 0x10F00, 0x10F27 },
	{ 0x10F30, 0x10F59 },
	{ 0x11000, 0x1104D },
	{ 0x11052, 0x1106F },
	{ 0x1107F, 0x110C1 },
	{ 0x110CD, 0x110CD },
	{ 0x110D0, 0x110E8 },
	{ 0x110F0, 0x110F9 },
	{ 0x11100, 0x11134 },
	{ 0x11136, 0x11146 },
	{ 0x11150, 0x11176 },
	{ 0x11180, 0x111CD },
	{ 0x111D0, 0x111DF },
	{ 0x111E1, 0x111F4 },
	{ 0x11200, 0x11211 },
	{ 0x11213, 0x1123E },
	{ 0x11280, 0x11286 },
	{ 0x11288, 0x11288 },
	{ 0x1128A, 0x1128D },
	{ 0x1128F, 0x1129D },
	{ 0x1129F, 0x112A9 },
	{ 0x112B0, 0x112EA },
	{ 0x112F0, 0x112F9 },
	{ 0x11300, 0x11303 },
	{ 0x11305, 0x1130C },
	{ 0x1130F, 0x11310 },
	{ 0x11313, 0x11328 },
	{ 0x1132A, 0x11330 },
	{ 0x11332, 0x11333 },
	{ 0x11335, 0x11339 },
	{ 0x1133B, 0x11344 },
	{ 0x11347, 0x11348 },
	{ 0x1134B, 0x1134D },
	{ 0x11350, 0x11350 },
	{ 0x11357, 0x11357 },
	{ 0x1135D, 0x11363 },
	{ 0x11366, 0x1136C },
	{ 0x11370, 0x11374 },
	{ 0x11400, 0x11459 },
	{ 0x1145B, 0x1145B },
	{ 0x1145D, 0x1145E },
	{ 0x11480, 0x114C7 },
	{ 0x114D0, 0x114D9 },
	{ 0x11580, 0x115B5 },
	{ 0x115B8, 0x115DD },
	{ 0x11600, 0x11644 },
	{ 0x11650, 0x11659 },
	{ 0x11660, 0x1166C },
	{ 0x11680, 0x116B7 },
	{ 0x116C0, 0x116C9 },
	{ 0x11700, 0x1171A },
	{ 0x1171D, 0x1172B },
	{ 0x11730, 0x1173F },
	{ 0x11800, 0x1183B },
	{ 0x118A0, 0x118F2 },
	{ 0x118FF, 0x118FF },
	{ 0x11A00, 0x11A47 },
	{ 0x11A50, 0x11A83 },
	{ 0x11A86, 0x11AA2 },
	{ 0x11AC0, 0x11AF8 },
	{ 0x11C00, 0x11C08 },
	{ 0x11C0A, 0x11C36 },
	{ 0x11C38, 0x11C45 },
	{ 0x11C50, 0x11C6C },
	{ 0x11C70, 0x11C8F },
	{ 0x11C92, 0x11CA7 },
	{ 0x11CA9, 0x11CB6 },
	{ 0x11D00, 0x11D06 },
	{ 0x11D08, 0x11D09 },
	{ 0x11D0B, 0x11D36 },
	{ 0x11D3A, 0x11D3A },
	{ 0x11D3C, 0x11D3D },
	{ 0x11D3F, 0x11D47 },
	{ 0x11D50, 0x11D59 },
	{ 0x11D60, 0x11D65 },
	{ 0x11D67, 0x11D68 },
	{ 0x11D6A, 0x11D8E },
	{ 0x11D90, 0x11D91 },
	{ 0x11D93, 0x11D98 },
	{ 0x11DA0, 0x11DA9 },
	{ 0x11EE0, 0x11EF8 },
	{ 0x12000, 0x12399 },
	{ 0x12400, 0x1246E },
	{ 0x12470, 0x12474 },
	{ 0x12480, 0x12543 },
	{ 0x13000, 0x1342E },
	{ 0x14400, 0x14646 },
	{ 0x16800, 0x16A38 },
	{ 0x16A40, 0x16A5E },
	{ 0x16A60, 0x16A69 },
	{ 0x16A6E, 0x16A6F },
	{ 0x16AD0, 0x16AED },
	{ 0x16AF0, 0x16AF5 },
	{ 0x16B00, 0x16B45 },
	{ 0x16B50, 0x16B59 },
	{ 0x16B5B, 0x16B61 },
	{ 0x16B63, 0x16B77 },
	{ 0x16B7D, 0x16B8F },
	{ 0x16E40, 0x16E9A },
	{ 0x16F00, 0x16F44 },
	{ 0x16F50, 0x16F7E },
	{ 0x16F8F, 0x16F9F },
	{ 0x16FE0, 0x16FE1 },
	{ 0x17000, 0x187F1 },
	{ 0x18800, 0x18AF2 },
	{ 0x1B000, 0x1B11E },
	{ 0x1B170, 0x1B2FB },
	{ 0x1BC00, 0x1BC6A },
	{ 0x1BC70, 0x1BC7C },
	{ 0x1BC80, 0x1BC88 },
	{ 0x1BC90, 0x1BC99 },
	{ 0x1BC9C, 0x1BCA3 },
	{ 0x1D000, 0x1D0F5 },
	{ 0x1D100, 0x1D126 },
	{ 0x1D129, 0x1D1E8 },
	{ 0x1D200, 0x1D245 },
	{ 0x1D2E0, 0x1D2F3 },
	{ 0x1D300, 0x1D356 },
	{ 0x1D360, 0x1D378 },
	{ 0x1D400, 0x1D454 },
	{ 0x1D456, 0x1D49C },
	{ 0x1D49E, 0x1D49F },
	{ 0x1D4A2, 0x1D4A2 },
	{ 0x1D4A5, 0x1D4A6 },
	{ 0x1D4A9, 0x1D4AC },
	{ 0x1D4AE, 0x1D4B9 },
	{ 0x1D4BB, 0x1D4BB },
	{ 0x1D4BD, 0x1D4C3 },
	{ 0x1D4C5, 0x1D505 },
	{ 0x1D507, 0x1D50A },
	{ 0x1D50D, 0x1D514 },
	{ 0x1D516, 0x1D51C },
	{ 0x1D51E, 0x1D539 },
	{ 0x1D53B, 0x1D53E },
	{ 0x1D540, 0x1D544 },
	{ 0x1D546, 0x1D546 },
	{ 0x1D54A, 0x1D550 },
	{ 0x1D552, 0x1D6A5 },
	{ 0x1D6A8, 0x1D7CB },
	{ 0x1D7CE, 0x1DA8B },
	{ 0x1DA9B, 0x1DA9F },
	{ 0x1DAA1, 0x1DAAF },
	{ 0x1E000, 0x1E006 },
	{ 0x1E008, 0x1E018 },
	{ 0x1E01B, 0x1E021 },
	{ 0x1E023, 0x1E024 },
	{ 0x1E026, 0x1E02A },
	{ 0x1E800, 0x1E8C4 },
	{ 0x1E8C7, 0x1E8D6 },
	{ 0x1E900, 0x1E94A },
	{ 0x1E950, 0x1E959 },
	{ 0x1E95E, 0x1E95F },
	{ 0x1EC71, 0x1ECB4 },
	{ 0x1EE00, 0x1EE03 },
	{ 0x1EE05, 0x1EE1F },
	{ 0x1EE21, 0x1EE22 },
	{ 0x1EE24, 0x1EE24 },
	{ 0x1EE27, 0x1EE27 },
	{ 0x1EE29, 0x1EE32 },
	{ 0x1EE34, 0x1EE37 },
	{ 0x1EE39, 0x1EE39 },
	{ 0x1EE3B, 0x1EE3B },
	{ 0x1EE42, 0x1EE42 },
	{ 0x1EE47, 0x1EE47 },
	{ 0x1EE49, 0x1EE49 },
	{ 0x1EE4B, 0x1EE4B },
	{ 0x1EE4D, 0x1EE4F },
	{ 0x1EE51, 0x1EE52 },
	{ 0x1EE54, 0x1EE54 },
	{ 0x1EE57, 0x1EE57 },
	{ 0x1EE59, 0x1EE59 },
	{ 0x1EE5B, 0x1EE5B },
	{ 0x1EE5D, 0x1EE5D },
	{ 0x1EE5F, 0x1EE5F },
	{ 0x1EE61, 0x1EE62 },
	{ 0x1EE64, 0x1EE64 },
	{ 0x1EE67, 0x1EE6A },
	{ 0x1EE6C, 0x1EE72 },
	{ 0x1EE74, 0x1EE77 },
	{ 0x1EE79, 0x1EE7C },
	{ 0x1EE7E, 0x1EE7E },
	{ 0x1EE80, 0x1EE89 },
	{ 0x1EE8B, 0x1EE9B },
	{ 0x1EEA1, 0x1EEA3 },
	{ 0x1EEA5, 0x1EEA9 },
	{ 0x1EEAB, 0x1EEBB },
	{ 0x1EEF0, 0x1EEF1 },
	{ 0x1F000, 0x1F02B },
	{ 0x1F030, 0x1F093 },
	{ 0x1F0A0, 0x1F0AE },
	{ 0x1F0B1, 0x1F0BF },
	{ 0x1F0C1, 0x1F0CF },
	{ 0x1F0D1, 0x1F0F5 },
	{ 0x1F100, 0x1F10C },
	{ 0x1F110, 0x1F16B },
	{ 0x1F170, 0x1F1AC },
	{ 0x1F1E6, 0x1F202 },
	{ 0x1F210, 0x1F23B },
	{ 0x1F240, 0x1F248 },
	{ 0x1F250, 0x1F251 },
	{ 0x1F260, 0x1F265 },
	{ 0x1F300, 0x1F6D4 },
	{ 0x1F6E0, 0x1F6EC },
	{ 0x1F6F0, 0x1F6F9 },
	{ 0x1F700, 0x1F773 },
	{ 0x1F780, 0x1F7D8 },
	{ 0x1F800, 0x1F80B },
	{ 0x1F810, 0x1F847 },
	{ 0x1F850, 0x1F859 },
	{ 0x1F860, 0x1F887 },
	{ 0x1F890, 0x1F8AD },
	{ 0x1F900, 0x1F90B },
	{ 0x1F910, 0x1F93E },
	{ 0x1F940, 0x1F970 },
	{ 0x1F973, 0x1F976 },
	{ 0x1F97A, 0x1F97A },
	{ 0x1F97C, 0x1F9A2 },
	{ 0x1F9B0, 0x1F9B9 },
	{ 0x1F9C0, 0x1F9C2 },
	{ 0x1F9D0, 0x1F9FF },
	{ 0x1FA60, 0x1FA6D },
	{ 0x20000, 0x2A6D6 },
	{ 0x2A700, 0x2B734 },
	{ 0x2B740, 0x2B81D },
	{ 0x2B820, 0x2CEA1 },
	{ 0x2CEB0, 0x2EBE0 },
	{ 0x2F800, 0x2FA1D },
	{ 0xE0001, 0xE0001 },
	{ 0xE0020, 0xE007F },
	{ 0xE0100, 0xE01EF },
	{ 0xF0000, 0xFFFFD },
	{ 0x100000, 0x10FFFD }
};

MAKE_ISW(print)

#ifdef TEST_I18N
static const struct mb_ucsrange data_wctype_xdigit[] = {
	{ 0x0030, 0x0039 },
	{ 0x0041, 0x0046 },
	{ 0x0061, 0x0066 }
};

MAKE_ISW(xdigit)

static const struct mb_ucsrange data_wctype_blank[] = {
	{ 0x0009, 0x0009 },
	{ 0x0020, 0x0020 },
	{ 0x1680, 0x1680 },
	{ 0x2000, 0x2006 },
	{ 0x2008, 0x200B },
	{ 0x205F, 0x205F },
	{ 0x3000, 0x3000 }
};

MAKE_ISW(blank)
#endif

/* Conversion functions */

static const struct mb_ucsrange data_wcrange_toupper[] = {
	{ 0x0061, 0x007A },
	{ 0x00B5, 0x00B5 },
	{ 0x00E0, 0x00F6 },
	{ 0x00F8, 0x00FE },
	{ 0x00FF, 0x00FF },
	{ 0x0101, 0x0101 },
	{ 0x0103, 0x0103 },
	{ 0x0105, 0x0105 },
	{ 0x0107, 0x0107 },
	{ 0x0109, 0x0109 },
	{ 0x010B, 0x010B },
	{ 0x010D, 0x010D },
	{ 0x010F, 0x010F },
	{ 0x0111, 0x0111 },
	{ 0x0113, 0x0113 },
	{ 0x0115, 0x0115 },
	{ 0x0117, 0x0117 },
	{ 0x0119, 0x0119 },
	{ 0x011B, 0x011B },
	{ 0x011D, 0x011D },
	{ 0x011F, 0x011F },
	{ 0x0121, 0x0121 },
	{ 0x0123, 0x0123 },
	{ 0x0125, 0x0125 },
	{ 0x0127, 0x0127 },
	{ 0x0129, 0x0129 },
	{ 0x012B, 0x012B },
	{ 0x012D, 0x012D },
	{ 0x012F, 0x012F },
	{ 0x0131, 0x0131 },
	{ 0x0133, 0x0133 },
	{ 0x0135, 0x0135 },
	{ 0x0137, 0x0137 },
	{ 0x013A, 0x013A },
	{ 0x013C, 0x013C },
	{ 0x013E, 0x013E },
	{ 0x0140, 0x0140 },
	{ 0x0142, 0x0142 },
	{ 0x0144, 0x0144 },
	{ 0x0146, 0x0146 },
	{ 0x0148, 0x0148 },
	{ 0x014B, 0x014B },
	{ 0x014D, 0x014D },
	{ 0x014F, 0x014F },
	{ 0x0151, 0x0151 },
	{ 0x0153, 0x0153 },
	{ 0x0155, 0x0155 },
	{ 0x0157, 0x0157 },
	{ 0x0159, 0x0159 },
	{ 0x015B, 0x015B },
	{ 0x015D, 0x015D },
	{ 0x015F, 0x015F },
	{ 0x0161, 0x0161 },
	{ 0x0163, 0x0163 },
	{ 0x0165, 0x0165 },
	{ 0x0167, 0x0167 },
	{ 0x0169, 0x0169 },
	{ 0x016B, 0x016B },
	{ 0x016D, 0x016D },
	{ 0x016F, 0x016F },
	{ 0x0171, 0x0171 },
	{ 0x0173, 0x0173 },
	{ 0x0175, 0x0175 },
	{ 0x0177, 0x0177 },
	{ 0x017A, 0x017A },
	{ 0x017C, 0x017C },
	{ 0x017E, 0x017E },
	{ 0x017F, 0x017F },
	{ 0x0180, 0x0180 },
	{ 0x0183, 0x0183 },
	{ 0x0185, 0x0185 },
	{ 0x0188, 0x0188 },
	{ 0x018C, 0x018C },
	{ 0x0192, 0x0192 },
	{ 0x0195, 0x0195 },
	{ 0x0199, 0x0199 },
	{ 0x019A, 0x019A },
	{ 0x019E, 0x019E },
	{ 0x01A1, 0x01A1 },
	{ 0x01A3, 0x01A3 },
	{ 0x01A5, 0x01A5 },
	{ 0x01A8, 0x01A8 },
	{ 0x01AD, 0x01AD },
	{ 0x01B0, 0x01B0 },
	{ 0x01B4, 0x01B4 },
	{ 0x01B6, 0x01B6 },
	{ 0x01B9, 0x01B9 },
	{ 0x01BD, 0x01BD },
	{ 0x01BF, 0x01BF },
	{ 0x01C5, 0x01C5 },
	{ 0x01C6, 0x01C6 },
	{ 0x01C8, 0x01C8 },
	{ 0x01C9, 0x01C9 },
	{ 0x01CB, 0x01CB },
	{ 0x01CC, 0x01CC },
	{ 0x01CE, 0x01CE },
	{ 0x01D0, 0x01D0 },
	{ 0x01D2, 0x01D2 },
	{ 0x01D4, 0x01D4 },
	{ 0x01D6, 0x01D6 },
	{ 0x01D8, 0x01D8 },
	{ 0x01DA, 0x01DA },
	{ 0x01DC, 0x01DC },
	{ 0x01DD, 0x01DD },
	{ 0x01DF, 0x01DF },
	{ 0x01E1, 0x01E1 },
	{ 0x01E3, 0x01E3 },
	{ 0x01E5, 0x01E5 },
	{ 0x01E7, 0x01E7 },
	{ 0x01E9, 0x01E9 },
	{ 0x01EB, 0x01EB },
	{ 0x01ED, 0x01ED },
	{ 0x01EF, 0x01EF },
	{ 0x01F2, 0x01F2 },
	{ 0x01F3, 0x01F3 },
	{ 0x01F5, 0x01F5 },
	{ 0x01F9, 0x01F9 },
	{ 0x01FB, 0x01FB },
	{ 0x01FD, 0x01FD },
	{ 0x01FF, 0x01FF },
	{ 0x0201, 0x0201 },
	{ 0x0203, 0x0203 },
	{ 0x0205, 0x0205 },
	{ 0x0207, 0x0207 },
	{ 0x0209, 0x0209 },
	{ 0x020B, 0x020B },
	{ 0x020D, 0x020D },
	{ 0x020F, 0x020F },
	{ 0x0211, 0x0211 },
	{ 0x0213, 0x0213 },
	{ 0x0215, 0x0215 },
	{ 0x0217, 0x0217 },
	{ 0x0219, 0x0219 },
	{ 0x021B, 0x021B },
	{ 0x021D, 0x021D },
	{ 0x021F, 0x021F },
	{ 0x0223, 0x0223 },
	{ 0x0225, 0x0225 },
	{ 0x0227, 0x0227 },
	{ 0x0229, 0x0229 },
	{ 0x022B, 0x022B },
	{ 0x022D, 0x022D },
	{ 0x022F, 0x022F },
	{ 0x0231, 0x0231 },
	{ 0x0233, 0x0233 },
	{ 0x023C, 0x023C },
	{ 0x023F, 0x0240 },
	{ 0x0242, 0x0242 },
	{ 0x0247, 0x0247 },
	{ 0x0249, 0x0249 },
	{ 0x024B, 0x024B },
	{ 0x024D, 0x024D },
	{ 0x024F, 0x024F },
	{ 0x0250, 0x0250 },
	{ 0x0251, 0x0251 },
	{ 0x0252, 0x0252 },
	{ 0x0253, 0x0253 },
	{ 0x0254, 0x0254 },
	{ 0x0256, 0x0257 },
	{ 0x0259, 0x0259 },
	{ 0x025B, 0x025B },
	{ 0x025C, 0x025C },
	{ 0x0260, 0x0260 },
	{ 0x0261, 0x0261 },
	{ 0x0263, 0x0263 },
	{ 0x0265, 0x0265 },
	{ 0x0266, 0x0266 },
	{ 0x0268, 0x0268 },
	{ 0x0269, 0x0269 },
	{ 0x026A, 0x026A },
	{ 0x026B, 0x026B },
	{ 0x026C, 0x026C },
	{ 0x026F, 0x026F },
	{ 0x0271, 0x0271 },
	{ 0x0272, 0x0272 },
	{ 0x0275, 0x0275 },
	{ 0x027D, 0x027D },
	{ 0x0280, 0x0280 },
	{ 0x0283, 0x0283 },
	{ 0x0287, 0x0287 },
	{ 0x0288, 0x0288 },
	{ 0x0289, 0x0289 },
	{ 0x028A, 0x028B },
	{ 0x028C, 0x028C },
	{ 0x0292, 0x0292 },
	{ 0x029D, 0x029D },
	{ 0x029E, 0x029E },
	{ 0x0345, 0x0345 },
	{ 0x0371, 0x0371 },
	{ 0x0373, 0x0373 },
	{ 0x0377, 0x0377 },
	{ 0x037B, 0x037D },
	{ 0x03AC, 0x03AC },
	{ 0x03AD, 0x03AF },
	{ 0x03B1, 0x03C1 },
	{ 0x03C2, 0x03C2 },
	{ 0x03C3, 0x03CB },
	{ 0x03CC, 0x03CC },
	{ 0x03CD, 0x03CE },
	{ 0x03D0, 0x03D0 },
	{ 0x03D1, 0x03D1 },
	{ 0x03D5, 0x03D5 },
	{ 0x03D6, 0x03D6 },
	{ 0x03D7, 0x03D7 },
	{ 0x03D9, 0x03D9 },
	{ 0x03DB, 0x03DB },
	{ 0x03DD, 0x03DD },
	{ 0x03DF, 0x03DF },
	{ 0x03E1, 0x03E1 },
	{ 0x03E3, 0x03E3 },
	{ 0x03E5, 0x03E5 },
	{ 0x03E7, 0x03E7 },
	{ 0x03E9, 0x03E9 },
	{ 0x03EB, 0x03EB },
	{ 0x03ED, 0x03ED },
	{ 0x03EF, 0x03EF },
	{ 0x03F0, 0x03F0 },
	{ 0x03F1, 0x03F1 },
	{ 0x03F2, 0x03F2 },
	{ 0x03F3, 0x03F3 },
	{ 0x03F5, 0x03F5 },
	{ 0x03F8, 0x03F8 },
	{ 0x03FB, 0x03FB },
	{ 0x0430, 0x044F },
	{ 0x0450, 0x045F },
	{ 0x0461, 0x0461 },
	{ 0x0463, 0x0463 },
	{ 0x0465, 0x0465 },
	{ 0x0467, 0x0467 },
	{ 0x0469, 0x0469 },
	{ 0x046B, 0x046B },
	{ 0x046D, 0x046D },
	{ 0x046F, 0x046F },
	{ 0x0471, 0x0471 },
	{ 0x0473, 0x0473 },
	{ 0x0475, 0x0475 },
	{ 0x0477, 0x0477 },
	{ 0x0479, 0x0479 },
	{ 0x047B, 0x047B },
	{ 0x047D, 0x047D },
	{ 0x047F, 0x047F },
	{ 0x0481, 0x0481 },
	{ 0x048B, 0x048B },
	{ 0x048D, 0x048D },
	{ 0x048F, 0x048F },
	{ 0x0491, 0x0491 },
	{ 0x0493, 0x0493 },
	{ 0x0495, 0x0495 },
	{ 0x0497, 0x0497 },
	{ 0x0499, 0x0499 },
	{ 0x049B, 0x049B },
	{ 0x049D, 0x049D },
	{ 0x049F, 0x049F },
	{ 0x04A1, 0x04A1 },
	{ 0x04A3, 0x04A3 },
	{ 0x04A5, 0x04A5 },
	{ 0x04A7, 0x04A7 },
	{ 0x04A9, 0x04A9 },
	{ 0x04AB, 0x04AB },
	{ 0x04AD, 0x04AD },
	{ 0x04AF, 0x04AF },
	{ 0x04B1, 0x04B1 },
	{ 0x04B3, 0x04B3 },
	{ 0x04B5, 0x04B5 },
	{ 0x04B7, 0x04B7 },
	{ 0x04B9, 0x04B9 },
	{ 0x04BB, 0x04BB },
	{ 0x04BD, 0x04BD },
	{ 0x04BF, 0x04BF },
	{ 0x04C2, 0x04C2 },
	{ 0x04C4, 0x04C4 },
	{ 0x04C6, 0x04C6 },
	{ 0x04C8, 0x04C8 },
	{ 0x04CA, 0x04CA },
	{ 0x04CC, 0x04CC },
	{ 0x04CE, 0x04CE },
	{ 0x04CF, 0x04CF },
	{ 0x04D1, 0x04D1 },
	{ 0x04D3, 0x04D3 },
	{ 0x04D5, 0x04D5 },
	{ 0x04D7, 0x04D7 },
	{ 0x04D9, 0x04D9 },
	{ 0x04DB, 0x04DB },
	{ 0x04DD, 0x04DD },
	{ 0x04DF, 0x04DF },
	{ 0x04E1, 0x04E1 },
	{ 0x04E3, 0x04E3 },
	{ 0x04E5, 0x04E5 },
	{ 0x04E7, 0x04E7 },
	{ 0x04E9, 0x04E9 },
	{ 0x04EB, 0x04EB },
	{ 0x04ED, 0x04ED },
	{ 0x04EF, 0x04EF },
	{ 0x04F1, 0x04F1 },
	{ 0x04F3, 0x04F3 },
	{ 0x04F5, 0x04F5 },
	{ 0x04F7, 0x04F7 },
	{ 0x04F9, 0x04F9 },
	{ 0x04FB, 0x04FB },
	{ 0x04FD, 0x04FD },
	{ 0x04FF, 0x04FF },
	{ 0x0501, 0x0501 },
	{ 0x0503, 0x0503 },
	{ 0x0505, 0x0505 },
	{ 0x0507, 0x0507 },
	{ 0x0509, 0x0509 },
	{ 0x050B, 0x050B },
	{ 0x050D, 0x050D },
	{ 0x050F, 0x050F },
	{ 0x0511, 0x0511 },
	{ 0x0513, 0x0513 },
	{ 0x0515, 0x0515 },
	{ 0x0517, 0x0517 },
	{ 0x0519, 0x0519 },
	{ 0x051B, 0x051B },
	{ 0x051D, 0x051D },
	{ 0x051F, 0x051F },
	{ 0x0521, 0x0521 },
	{ 0x0523, 0x0523 },
	{ 0x0525, 0x0525 },
	{ 0x0527, 0x0527 },
	{ 0x0529, 0x0529 },
	{ 0x052B, 0x052B },
	{ 0x052D, 0x052D },
	{ 0x052F, 0x052F },
	{ 0x0561, 0x0586 },
	{ 0x10D0, 0x10FA },
	{ 0x10FD, 0x10FF },
	{ 0x13F8, 0x13FD },
	{ 0x1C80, 0x1C80 },
	{ 0x1C81, 0x1C81 },
	{ 0x1C82, 0x1C82 },
	{ 0x1C83, 0x1C84 },
	{ 0x1C85, 0x1C85 },
	{ 0x1C86, 0x1C86 },
	{ 0x1C87, 0x1C87 },
	{ 0x1C88, 0x1C88 },
	{ 0x1D79, 0x1D79 },
	{ 0x1D7D, 0x1D7D },
	{ 0x1E01, 0x1E01 },
	{ 0x1E03, 0x1E03 },
	{ 0x1E05, 0x1E05 },
	{ 0x1E07, 0x1E07 },
	{ 0x1E09, 0x1E09 },
	{ 0x1E0B, 0x1E0B },
	{ 0x1E0D, 0x1E0D },
	{ 0x1E0F, 0x1E0F },
	{ 0x1E11, 0x1E11 },
	{ 0x1E13, 0x1E13 },
	{ 0x1E15, 0x1E15 },
	{ 0x1E17, 0x1E17 },
	{ 0x1E19, 0x1E19 },
	{ 0x1E1B, 0x1E1B },
	{ 0x1E1D, 0x1E1D },
	{ 0x1E1F, 0x1E1F },
	{ 0x1E21, 0x1E21 },
	{ 0x1E23, 0x1E23 },
	{ 0x1E25, 0x1E25 },
	{ 0x1E27, 0x1E27 },
	{ 0x1E29, 0x1E29 },
	{ 0x1E2B, 0x1E2B },
	{ 0x1E2D, 0x1E2D },
	{ 0x1E2F, 0x1E2F },
	{ 0x1E31, 0x1E31 },
	{ 0x1E33, 0x1E33 },
	{ 0x1E35, 0x1E35 },
	{ 0x1E37, 0x1E37 },
	{ 0x1E39, 0x1E39 },
	{ 0x1E3B, 0x1E3B },
	{ 0x1E3D, 0x1E3D },
	{ 0x1E3F, 0x1E3F },
	{ 0x1E41, 0x1E41 },
	{ 0x1E43, 0x1E43 },
	{ 0x1E45, 0x1E45 },
	{ 0x1E47, 0x1E47 },
	{ 0x1E49, 0x1E49 },
	{ 0x1E4B, 0x1E4B },
	{ 0x1E4D, 0x1E4D },
	{ 0x1E4F, 0x1E4F },
	{ 0x1E51, 0x1E51 },
	{ 0x1E53, 0x1E53 },
	{ 0x1E55, 0x1E55 },
	{ 0x1E57, 0x1E57 },
	{ 0x1E59, 0x1E59 },
	{ 0x1E5B, 0x1E5B },
	{ 0x1E5D, 0x1E5D },
	{ 0x1E5F, 0x1E5F },
	{ 0x1E61, 0x1E61 },
	{ 0x1E63, 0x1E63 },
	{ 0x1E65, 0x1E65 },
	{ 0x1E67, 0x1E67 },
	{ 0x1E69, 0x1E69 },
	{ 0x1E6B, 0x1E6B },
	{ 0x1E6D, 0x1E6D },
	{ 0x1E6F, 0x1E6F },
	{ 0x1E71, 0x1E71 },
	{ 0x1E73, 0x1E73 },
	{ 0x1E75, 0x1E75 },
	{ 0x1E77, 0x1E77 },
	{ 0x1E79, 0x1E79 },
	{ 0x1E7B, 0x1E7B },
	{ 0x1E7D, 0x1E7D },
	{ 0x1E7F, 0x1E7F },
	{ 0x1E81, 0x1E81 },
	{ 0x1E83, 0x1E83 },
	{ 0x1E85, 0x1E85 },
	{ 0x1E87, 0x1E87 },
	{ 0x1E89, 0x1E89 },
	{ 0x1E8B, 0x1E8B },
	{ 0x1E8D, 0x1E8D },
	{ 0x1E8F, 0x1E8F },
	{ 0x1E91, 0x1E91 },
	{ 0x1E93, 0x1E93 },
	{ 0x1E95, 0x1E95 },
	{ 0x1E9B, 0x1E9B },
	{ 0x1EA1, 0x1EA1 },
	{ 0x1EA3, 0x1EA3 },
	{ 0x1EA5, 0x1EA5 },
	{ 0x1EA7, 0x1EA7 },
	{ 0x1EA9, 0x1EA9 },
	{ 0x1EAB, 0x1EAB },
	{ 0x1EAD, 0x1EAD },
	{ 0x1EAF, 0x1EAF },
	{ 0x1EB1, 0x1EB1 },
	{ 0x1EB3, 0x1EB3 },
	{ 0x1EB5, 0x1EB5 },
	{ 0x1EB7, 0x1EB7 },
	{ 0x1EB9, 0x1EB9 },
	{ 0x1EBB, 0x1EBB },
	{ 0x1EBD, 0x1EBD },
	{ 0x1EBF, 0x1EBF },
	{ 0x1EC1, 0x1EC1 },
	{ 0x1EC3, 0x1EC3 },
	{ 0x1EC5, 0x1EC5 },
	{ 0x1EC7, 0x1EC7 },
	{ 0x1EC9, 0x1EC9 },
	{ 0x1ECB, 0x1ECB },
	{ 0x1ECD, 0x1ECD },
	{ 0x1ECF, 0x1ECF },
	{ 0x1ED1, 0x1ED1 },
	{ 0x1ED3, 0x1ED3 },
	{ 0x1ED5, 0x1ED5 },
	{ 0x1ED7, 0x1ED7 },
	{ 0x1ED9, 0x1ED9 },
	{ 0x1EDB, 0x1EDB },
	{ 0x1EDD, 0x1EDD },
	{ 0x1EDF, 0x1EDF },
	{ 0x1EE1, 0x1EE1 },
	{ 0x1EE3, 0x1EE3 },
	{ 0x1EE5, 0x1EE5 },
	{ 0x1EE7, 0x1EE7 },
	{ 0x1EE9, 0x1EE9 },
	{ 0x1EEB, 0x1EEB },
	{ 0x1EED, 0x1EED },
	{ 0x1EEF, 0x1EEF },
	{ 0x1EF1, 0x1EF1 },
	{ 0x1EF3, 0x1EF3 },
	{ 0x1EF5, 0x1EF5 },
	{ 0x1EF7, 0x1EF7 },
	{ 0x1EF9, 0x1EF9 },
	{ 0x1EFB, 0x1EFB },
	{ 0x1EFD, 0x1EFD },
	{ 0x1EFF, 0x1EFF },
	{ 0x1F00, 0x1F07 },
	{ 0x1F10, 0x1F15 },
	{ 0x1F20, 0x1F27 },
	{ 0x1F30, 0x1F37 },
	{ 0x1F40, 0x1F45 },
	{ 0x1F51, 0x1F51 },
	{ 0x1F53, 0x1F53 },
	{ 0x1F55, 0x1F55 },
	{ 0x1F57, 0x1F57 },
	{ 0x1F60, 0x1F67 },
	{ 0x1F70, 0x1F71 },
	{ 0x1F72, 0x1F75 },
	{ 0x1F76, 0x1F77 },
	{ 0x1F78, 0x1F79 },
	{ 0x1F7A, 0x1F7B },
	{ 0x1F7C, 0x1F7D },
	{ 0x1F80, 0x1F87 },
	{ 0x1F90, 0x1F97 },
	{ 0x1FA0, 0x1FA7 },
	{ 0x1FB0, 0x1FB1 },
	{ 0x1FB3, 0x1FB3 },
	{ 0x1FBE, 0x1FBE },
	{ 0x1FC3, 0x1FC3 },
	{ 0x1FD0, 0x1FD1 },
	{ 0x1FE0, 0x1FE1 },
	{ 0x1FE5, 0x1FE5 },
	{ 0x1FF3, 0x1FF3 },
	{ 0x214E, 0x214E },
	{ 0x2170, 0x217F },
	{ 0x2184, 0x2184 },
	{ 0x24D0, 0x24E9 },
	{ 0x2C30, 0x2C5E },
	{ 0x2C61, 0x2C61 },
	{ 0x2C65, 0x2C65 },
	{ 0x2C66, 0x2C66 },
	{ 0x2C68, 0x2C68 },
	{ 0x2C6A, 0x2C6A },
	{ 0x2C6C, 0x2C6C },
	{ 0x2C73, 0x2C73 },
	{ 0x2C76, 0x2C76 },
	{ 0x2C81, 0x2C81 },
	{ 0x2C83, 0x2C83 },
	{ 0x2C85, 0x2C85 },
	{ 0x2C87, 0x2C87 },
	{ 0x2C89, 0x2C89 },
	{ 0x2C8B, 0x2C8B },
	{ 0x2C8D, 0x2C8D },
	{ 0x2C8F, 0x2C8F },
	{ 0x2C91, 0x2C91 },
	{ 0x2C93, 0x2C93 },
	{ 0x2C95, 0x2C95 },
	{ 0x2C97, 0x2C97 },
	{ 0x2C99, 0x2C99 },
	{ 0x2C9B, 0x2C9B },
	{ 0x2C9D, 0x2C9D },
	{ 0x2C9F, 0x2C9F },
	{ 0x2CA1, 0x2CA1 },
	{ 0x2CA3, 0x2CA3 },
	{ 0x2CA5, 0x2CA5 },
	{ 0x2CA7, 0x2CA7 },
	{ 0x2CA9, 0x2CA9 },
	{ 0x2CAB, 0x2CAB },
	{ 0x2CAD, 0x2CAD },
	{ 0x2CAF, 0x2CAF },
	{ 0x2CB1, 0x2CB1 },
	{ 0x2CB3, 0x2CB3 },
	{ 0x2CB5, 0x2CB5 },
	{ 0x2CB7, 0x2CB7 },
	{ 0x2CB9, 0x2CB9 },
	{ 0x2CBB, 0x2CBB },
	{ 0x2CBD, 0x2CBD },
	{ 0x2CBF, 0x2CBF },
	{ 0x2CC1, 0x2CC1 },
	{ 0x2CC3, 0x2CC3 },
	{ 0x2CC5, 0x2CC5 },
	{ 0x2CC7, 0x2CC7 },
	{ 0x2CC9, 0x2CC9 },
	{ 0x2CCB, 0x2CCB },
	{ 0x2CCD, 0x2CCD },
	{ 0x2CCF, 0x2CCF },
	{ 0x2CD1, 0x2CD1 },
	{ 0x2CD3, 0x2CD3 },
	{ 0x2CD5, 0x2CD5 },
	{ 0x2CD7, 0x2CD7 },
	{ 0x2CD9, 0x2CD9 },
	{ 0x2CDB, 0x2CDB },
	{ 0x2CDD, 0x2CDD },
	{ 0x2CDF, 0x2CDF },
	{ 0x2CE1, 0x2CE1 },
	{ 0x2CE3, 0x2CE3 },
	{ 0x2CEC, 0x2CEC },
	{ 0x2CEE, 0x2CEE },
	{ 0x2CF3, 0x2CF3 },
	{ 0x2D00, 0x2D25 },
	{ 0x2D27, 0x2D27 },
	{ 0x2D2D, 0x2D2D },
	{ 0xA641, 0xA641 },
	{ 0xA643, 0xA643 },
	{ 0xA645, 0xA645 },
	{ 0xA647, 0xA647 },
	{ 0xA649, 0xA649 },
	{ 0xA64B, 0xA64B },
	{ 0xA64D, 0xA64D },
	{ 0xA64F, 0xA64F },
	{ 0xA651, 0xA651 },
	{ 0xA653, 0xA653 },
	{ 0xA655, 0xA655 },
	{ 0xA657, 0xA657 },
	{ 0xA659, 0xA659 },
	{ 0xA65B, 0xA65B },
	{ 0xA65D, 0xA65D },
	{ 0xA65F, 0xA65F },
	{ 0xA661, 0xA661 },
	{ 0xA663, 0xA663 },
	{ 0xA665, 0xA665 },
	{ 0xA667, 0xA667 },
	{ 0xA669, 0xA669 },
	{ 0xA66B, 0xA66B },
	{ 0xA66D, 0xA66D },
	{ 0xA681, 0xA681 },
	{ 0xA683, 0xA683 },
	{ 0xA685, 0xA685 },
	{ 0xA687, 0xA687 },
	{ 0xA689, 0xA689 },
	{ 0xA68B, 0xA68B },
	{ 0xA68D, 0xA68D },
	{ 0xA68F, 0xA68F },
	{ 0xA691, 0xA691 },
	{ 0xA693, 0xA693 },
	{ 0xA695, 0xA695 },
	{ 0xA697, 0xA697 },
	{ 0xA699, 0xA699 },
	{ 0xA69B, 0xA69B },
	{ 0xA723, 0xA723 },
	{ 0xA725, 0xA725 },
	{ 0xA727, 0xA727 },
	{ 0xA729, 0xA729 },
	{ 0xA72B, 0xA72B },
	{ 0xA72D, 0xA72D },
	{ 0xA72F, 0xA72F },
	{ 0xA733, 0xA733 },
	{ 0xA735, 0xA735 },
	{ 0xA737, 0xA737 },
	{ 0xA739, 0xA739 },
	{ 0xA73B, 0xA73B },
	{ 0xA73D, 0xA73D },
	{ 0xA73F, 0xA73F },
	{ 0xA741, 0xA741 },
	{ 0xA743, 0xA743 },
	{ 0xA745, 0xA745 },
	{ 0xA747, 0xA747 },
	{ 0xA749, 0xA749 },
	{ 0xA74B, 0xA74B },
	{ 0xA74D, 0xA74D },
	{ 0xA74F, 0xA74F },
	{ 0xA751, 0xA751 },
	{ 0xA753, 0xA753 },
	{ 0xA755, 0xA755 },
	{ 0xA757, 0xA757 },
	{ 0xA759, 0xA759 },
	{ 0xA75B, 0xA75B },
	{ 0xA75D, 0xA75D },
	{ 0xA75F, 0xA75F },
	{ 0xA761, 0xA761 },
	{ 0xA763, 0xA763 },
	{ 0xA765, 0xA765 },
	{ 0xA767, 0xA767 },
	{ 0xA769, 0xA769 },
	{ 0xA76B, 0xA76B },
	{ 0xA76D, 0xA76D },
	{ 0xA76F, 0xA76F },
	{ 0xA77A, 0xA77A },
	{ 0xA77C, 0xA77C },
	{ 0xA77F, 0xA77F },
	{ 0xA781, 0xA781 },
	{ 0xA783, 0xA783 },
	{ 0xA785, 0xA785 },
	{ 0xA787, 0xA787 },
	{ 0xA78C, 0xA78C },
	{ 0xA791, 0xA791 },
	{ 0xA793, 0xA793 },
	{ 0xA797, 0xA797 },
	{ 0xA799, 0xA799 },
	{ 0xA79B, 0xA79B },
	{ 0xA79D, 0xA79D },
	{ 0xA79F, 0xA79F },
	{ 0xA7A1, 0xA7A1 },
	{ 0xA7A3, 0xA7A3 },
	{ 0xA7A5, 0xA7A5 },
	{ 0xA7A7, 0xA7A7 },
	{ 0xA7A9, 0xA7A9 },
	{ 0xA7B5, 0xA7B5 },
	{ 0xA7B7, 0xA7B7 },
	{ 0xA7B9, 0xA7B9 },
	{ 0xAB53, 0xAB53 },
	{ 0xAB70, 0xABBF },
	{ 0xFF41, 0xFF5A },
	{ 0x10428, 0x1044F },
	{ 0x104D8, 0x104FB },
	{ 0x10CC0, 0x10CF2 },
	{ 0x118C0, 0x118DF },
	{ 0x16E60, 0x16E7F },
	{ 0x1E922, 0x1E943 }
};

static const int data_wcdelta_toupper[] = {
	32,
	-743,
	32,
	32,
	-121,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	232,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	300,
	-195,
	1,
	1,
	1,
	1,
	1,
	-97,
	1,
	-163,
	-130,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	-56,
	1,
	2,
	1,
	2,
	1,
	2,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	79,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	2,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	-10815,
	1,
	1,
	1,
	1,
	1,
	1,
	-10783,
	-10780,
	-10782,
	210,
	206,
	205,
	202,
	203,
	-42319,
	205,
	-42315,
	207,
	-42280,
	-42308,
	209,
	211,
	-42308,
	-10743,
	-42305,
	211,
	-10749,
	213,
	214,
	-10727,
	218,
	218,
	-42282,
	218,
	69,
	217,
	71,
	219,
	-42261,
	-42258,
	-84,
	1,
	1,
	1,
	-130,
	38,
	37,
	32,
	31,
	32,
	64,
	63,
	62,
	57,
	47,
	54,
	8,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	86,
	80,
	-7,
	116,
	96,
	1,
	1,
	32,
	80,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	15,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	48,
	-3008,
	-3008,
	8,
	6254,
	6253,
	6244,
	6242,
	6243,
	6236,
	6181,
	-35266,
	-35332,
	-3814,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	59,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	-8,
	-8,
	-8,
	-8,
	-8,
	-8,
	-8,
	-8,
	-8,
	-8,
	-74,
	-86,
	-100,
	-128,
	-112,
	-126,
	-8,
	-8,
	-8,
	-8,
	-9,
	7205,
	-9,
	-8,
	-8,
	-7,
	-9,
	28,
	16,
	1,
	26,
	48,
	1,
	10795,
	10792,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	7264,
	7264,
	7264,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	928,
	38864,
	32,
	40,
	40,
	64,
	32,
	32,
	34
};

int joe_towupper(struct charmap *foo, int c)
{
	size_t idx;

	if ((idx = mb_ucsbsearch(data_wcrange_toupper,
	    NELEM(data_wcrange_toupper), c)) == (size_t)-1)
		return (c);
	return (c - data_wcdelta_toupper[idx]);
}

static const struct mb_ucsrange data_wcrange_tolower[] = {
	{ 0x0041, 0x005A },
	{ 0x00C0, 0x00D6 },
	{ 0x00D8, 0x00DE },
	{ 0x0100, 0x0100 },
	{ 0x0102, 0x0102 },
	{ 0x0104, 0x0104 },
	{ 0x0106, 0x0106 },
	{ 0x0108, 0x0108 },
	{ 0x010A, 0x010A },
	{ 0x010C, 0x010C },
	{ 0x010E, 0x010E },
	{ 0x0110, 0x0110 },
	{ 0x0112, 0x0112 },
	{ 0x0114, 0x0114 },
	{ 0x0116, 0x0116 },
	{ 0x0118, 0x0118 },
	{ 0x011A, 0x011A },
	{ 0x011C, 0x011C },
	{ 0x011E, 0x011E },
	{ 0x0120, 0x0120 },
	{ 0x0122, 0x0122 },
	{ 0x0124, 0x0124 },
	{ 0x0126, 0x0126 },
	{ 0x0128, 0x0128 },
	{ 0x012A, 0x012A },
	{ 0x012C, 0x012C },
	{ 0x012E, 0x012E },
	{ 0x0130, 0x0130 },
	{ 0x0132, 0x0132 },
	{ 0x0134, 0x0134 },
	{ 0x0136, 0x0136 },
	{ 0x0139, 0x0139 },
	{ 0x013B, 0x013B },
	{ 0x013D, 0x013D },
	{ 0x013F, 0x013F },
	{ 0x0141, 0x0141 },
	{ 0x0143, 0x0143 },
	{ 0x0145, 0x0145 },
	{ 0x0147, 0x0147 },
	{ 0x014A, 0x014A },
	{ 0x014C, 0x014C },
	{ 0x014E, 0x014E },
	{ 0x0150, 0x0150 },
	{ 0x0152, 0x0152 },
	{ 0x0154, 0x0154 },
	{ 0x0156, 0x0156 },
	{ 0x0158, 0x0158 },
	{ 0x015A, 0x015A },
	{ 0x015C, 0x015C },
	{ 0x015E, 0x015E },
	{ 0x0160, 0x0160 },
	{ 0x0162, 0x0162 },
	{ 0x0164, 0x0164 },
	{ 0x0166, 0x0166 },
	{ 0x0168, 0x0168 },
	{ 0x016A, 0x016A },
	{ 0x016C, 0x016C },
	{ 0x016E, 0x016E },
	{ 0x0170, 0x0170 },
	{ 0x0172, 0x0172 },
	{ 0x0174, 0x0174 },
	{ 0x0176, 0x0176 },
	{ 0x0178, 0x0178 },
	{ 0x0179, 0x0179 },
	{ 0x017B, 0x017B },
	{ 0x017D, 0x017D },
	{ 0x0181, 0x0181 },
	{ 0x0182, 0x0182 },
	{ 0x0184, 0x0184 },
	{ 0x0186, 0x0186 },
	{ 0x0187, 0x0187 },
	{ 0x0189, 0x018A },
	{ 0x018B, 0x018B },
	{ 0x018E, 0x018E },
	{ 0x018F, 0x018F },
	{ 0x0190, 0x0190 },
	{ 0x0191, 0x0191 },
	{ 0x0193, 0x0193 },
	{ 0x0194, 0x0194 },
	{ 0x0196, 0x0196 },
	{ 0x0197, 0x0197 },
	{ 0x0198, 0x0198 },
	{ 0x019C, 0x019C },
	{ 0x019D, 0x019D },
	{ 0x019F, 0x019F },
	{ 0x01A0, 0x01A0 },
	{ 0x01A2, 0x01A2 },
	{ 0x01A4, 0x01A4 },
	{ 0x01A6, 0x01A6 },
	{ 0x01A7, 0x01A7 },
	{ 0x01A9, 0x01A9 },
	{ 0x01AC, 0x01AC },
	{ 0x01AE, 0x01AE },
	{ 0x01AF, 0x01AF },
	{ 0x01B1, 0x01B2 },
	{ 0x01B3, 0x01B3 },
	{ 0x01B5, 0x01B5 },
	{ 0x01B7, 0x01B7 },
	{ 0x01B8, 0x01B8 },
	{ 0x01BC, 0x01BC },
	{ 0x01C4, 0x01C4 },
	{ 0x01C5, 0x01C5 },
	{ 0x01C7, 0x01C7 },
	{ 0x01C8, 0x01C8 },
	{ 0x01CA, 0x01CA },
	{ 0x01CB, 0x01CB },
	{ 0x01CD, 0x01CD },
	{ 0x01CF, 0x01CF },
	{ 0x01D1, 0x01D1 },
	{ 0x01D3, 0x01D3 },
	{ 0x01D5, 0x01D5 },
	{ 0x01D7, 0x01D7 },
	{ 0x01D9, 0x01D9 },
	{ 0x01DB, 0x01DB },
	{ 0x01DE, 0x01DE },
	{ 0x01E0, 0x01E0 },
	{ 0x01E2, 0x01E2 },
	{ 0x01E4, 0x01E4 },
	{ 0x01E6, 0x01E6 },
	{ 0x01E8, 0x01E8 },
	{ 0x01EA, 0x01EA },
	{ 0x01EC, 0x01EC },
	{ 0x01EE, 0x01EE },
	{ 0x01F1, 0x01F1 },
	{ 0x01F2, 0x01F2 },
	{ 0x01F4, 0x01F4 },
	{ 0x01F6, 0x01F6 },
	{ 0x01F7, 0x01F7 },
	{ 0x01F8, 0x01F8 },
	{ 0x01FA, 0x01FA },
	{ 0x01FC, 0x01FC },
	{ 0x01FE, 0x01FE },
	{ 0x0200, 0x0200 },
	{ 0x0202, 0x0202 },
	{ 0x0204, 0x0204 },
	{ 0x0206, 0x0206 },
	{ 0x0208, 0x0208 },
	{ 0x020A, 0x020A },
	{ 0x020C, 0x020C },
	{ 0x020E, 0x020E },
	{ 0x0210, 0x0210 },
	{ 0x0212, 0x0212 },
	{ 0x0214, 0x0214 },
	{ 0x0216, 0x0216 },
	{ 0x0218, 0x0218 },
	{ 0x021A, 0x021A },
	{ 0x021C, 0x021C },
	{ 0x021E, 0x021E },
	{ 0x0220, 0x0220 },
	{ 0x0222, 0x0222 },
	{ 0x0224, 0x0224 },
	{ 0x0226, 0x0226 },
	{ 0x0228, 0x0228 },
	{ 0x022A, 0x022A },
	{ 0x022C, 0x022C },
	{ 0x022E, 0x022E },
	{ 0x0230, 0x0230 },
	{ 0x0232, 0x0232 },
	{ 0x023A, 0x023A },
	{ 0x023B, 0x023B },
	{ 0x023D, 0x023D },
	{ 0x023E, 0x023E },
	{ 0x0241, 0x0241 },
	{ 0x0243, 0x0243 },
	{ 0x0244, 0x0244 },
	{ 0x0245, 0x0245 },
	{ 0x0246, 0x0246 },
	{ 0x0248, 0x0248 },
	{ 0x024A, 0x024A },
	{ 0x024C, 0x024C },
	{ 0x024E, 0x024E },
	{ 0x0370, 0x0370 },
	{ 0x0372, 0x0372 },
	{ 0x0376, 0x0376 },
	{ 0x037F, 0x037F },
	{ 0x0386, 0x0386 },
	{ 0x0388, 0x038A },
	{ 0x038C, 0x038C },
	{ 0x038E, 0x038F },
	{ 0x0391, 0x03A1 },
	{ 0x03A3, 0x03AB },
	{ 0x03CF, 0x03CF },
	{ 0x03D8, 0x03D8 },
	{ 0x03DA, 0x03DA },
	{ 0x03DC, 0x03DC },
	{ 0x03DE, 0x03DE },
	{ 0x03E0, 0x03E0 },
	{ 0x03E2, 0x03E2 },
	{ 0x03E4, 0x03E4 },
	{ 0x03E6, 0x03E6 },
	{ 0x03E8, 0x03E8 },
	{ 0x03EA, 0x03EA },
	{ 0x03EC, 0x03EC },
	{ 0x03EE, 0x03EE },
	{ 0x03F4, 0x03F4 },
	{ 0x03F7, 0x03F7 },
	{ 0x03F9, 0x03F9 },
	{ 0x03FA, 0x03FA },
	{ 0x03FD, 0x03FF },
	{ 0x0400, 0x040F },
	{ 0x0410, 0x042F },
	{ 0x0460, 0x0460 },
	{ 0x0462, 0x0462 },
	{ 0x0464, 0x0464 },
	{ 0x0466, 0x0466 },
	{ 0x0468, 0x0468 },
	{ 0x046A, 0x046A },
	{ 0x046C, 0x046C },
	{ 0x046E, 0x046E },
	{ 0x0470, 0x0470 },
	{ 0x0472, 0x0472 },
	{ 0x0474, 0x0474 },
	{ 0x0476, 0x0476 },
	{ 0x0478, 0x0478 },
	{ 0x047A, 0x047A },
	{ 0x047C, 0x047C },
	{ 0x047E, 0x047E },
	{ 0x0480, 0x0480 },
	{ 0x048A, 0x048A },
	{ 0x048C, 0x048C },
	{ 0x048E, 0x048E },
	{ 0x0490, 0x0490 },
	{ 0x0492, 0x0492 },
	{ 0x0494, 0x0494 },
	{ 0x0496, 0x0496 },
	{ 0x0498, 0x0498 },
	{ 0x049A, 0x049A },
	{ 0x049C, 0x049C },
	{ 0x049E, 0x049E },
	{ 0x04A0, 0x04A0 },
	{ 0x04A2, 0x04A2 },
	{ 0x04A4, 0x04A4 },
	{ 0x04A6, 0x04A6 },
	{ 0x04A8, 0x04A8 },
	{ 0x04AA, 0x04AA },
	{ 0x04AC, 0x04AC },
	{ 0x04AE, 0x04AE },
	{ 0x04B0, 0x04B0 },
	{ 0x04B2, 0x04B2 },
	{ 0x04B4, 0x04B4 },
	{ 0x04B6, 0x04B6 },
	{ 0x04B8, 0x04B8 },
	{ 0x04BA, 0x04BA },
	{ 0x04BC, 0x04BC },
	{ 0x04BE, 0x04BE },
	{ 0x04C0, 0x04C0 },
	{ 0x04C1, 0x04C1 },
	{ 0x04C3, 0x04C3 },
	{ 0x04C5, 0x04C5 },
	{ 0x04C7, 0x04C7 },
	{ 0x04C9, 0x04C9 },
	{ 0x04CB, 0x04CB },
	{ 0x04CD, 0x04CD },
	{ 0x04D0, 0x04D0 },
	{ 0x04D2, 0x04D2 },
	{ 0x04D4, 0x04D4 },
	{ 0x04D6, 0x04D6 },
	{ 0x04D8, 0x04D8 },
	{ 0x04DA, 0x04DA },
	{ 0x04DC, 0x04DC },
	{ 0x04DE, 0x04DE },
	{ 0x04E0, 0x04E0 },
	{ 0x04E2, 0x04E2 },
	{ 0x04E4, 0x04E4 },
	{ 0x04E6, 0x04E6 },
	{ 0x04E8, 0x04E8 },
	{ 0x04EA, 0x04EA },
	{ 0x04EC, 0x04EC },
	{ 0x04EE, 0x04EE },
	{ 0x04F0, 0x04F0 },
	{ 0x04F2, 0x04F2 },
	{ 0x04F4, 0x04F4 },
	{ 0x04F6, 0x04F6 },
	{ 0x04F8, 0x04F8 },
	{ 0x04FA, 0x04FA },
	{ 0x04FC, 0x04FC },
	{ 0x04FE, 0x04FE },
	{ 0x0500, 0x0500 },
	{ 0x0502, 0x0502 },
	{ 0x0504, 0x0504 },
	{ 0x0506, 0x0506 },
	{ 0x0508, 0x0508 },
	{ 0x050A, 0x050A },
	{ 0x050C, 0x050C },
	{ 0x050E, 0x050E },
	{ 0x0510, 0x0510 },
	{ 0x0512, 0x0512 },
	{ 0x0514, 0x0514 },
	{ 0x0516, 0x0516 },
	{ 0x0518, 0x0518 },
	{ 0x051A, 0x051A },
	{ 0x051C, 0x051C },
	{ 0x051E, 0x051E },
	{ 0x0520, 0x0520 },
	{ 0x0522, 0x0522 },
	{ 0x0524, 0x0524 },
	{ 0x0526, 0x0526 },
	{ 0x0528, 0x0528 },
	{ 0x052A, 0x052A },
	{ 0x052C, 0x052C },
	{ 0x052E, 0x052E },
	{ 0x0531, 0x0556 },
	{ 0x10A0, 0x10C5 },
	{ 0x10C7, 0x10C7 },
	{ 0x10CD, 0x10CD },
	{ 0x13A0, 0x13EF },
	{ 0x13F0, 0x13F5 },
	{ 0x1C90, 0x1CBA },
	{ 0x1CBD, 0x1CBF },
	{ 0x1E00, 0x1E00 },
	{ 0x1E02, 0x1E02 },
	{ 0x1E04, 0x1E04 },
	{ 0x1E06, 0x1E06 },
	{ 0x1E08, 0x1E08 },
	{ 0x1E0A, 0x1E0A },
	{ 0x1E0C, 0x1E0C },
	{ 0x1E0E, 0x1E0E },
	{ 0x1E10, 0x1E10 },
	{ 0x1E12, 0x1E12 },
	{ 0x1E14, 0x1E14 },
	{ 0x1E16, 0x1E16 },
	{ 0x1E18, 0x1E18 },
	{ 0x1E1A, 0x1E1A },
	{ 0x1E1C, 0x1E1C },
	{ 0x1E1E, 0x1E1E },
	{ 0x1E20, 0x1E20 },
	{ 0x1E22, 0x1E22 },
	{ 0x1E24, 0x1E24 },
	{ 0x1E26, 0x1E26 },
	{ 0x1E28, 0x1E28 },
	{ 0x1E2A, 0x1E2A },
	{ 0x1E2C, 0x1E2C },
	{ 0x1E2E, 0x1E2E },
	{ 0x1E30, 0x1E30 },
	{ 0x1E32, 0x1E32 },
	{ 0x1E34, 0x1E34 },
	{ 0x1E36, 0x1E36 },
	{ 0x1E38, 0x1E38 },
	{ 0x1E3A, 0x1E3A },
	{ 0x1E3C, 0x1E3C },
	{ 0x1E3E, 0x1E3E },
	{ 0x1E40, 0x1E40 },
	{ 0x1E42, 0x1E42 },
	{ 0x1E44, 0x1E44 },
	{ 0x1E46, 0x1E46 },
	{ 0x1E48, 0x1E48 },
	{ 0x1E4A, 0x1E4A },
	{ 0x1E4C, 0x1E4C },
	{ 0x1E4E, 0x1E4E },
	{ 0x1E50, 0x1E50 },
	{ 0x1E52, 0x1E52 },
	{ 0x1E54, 0x1E54 },
	{ 0x1E56, 0x1E56 },
	{ 0x1E58, 0x1E58 },
	{ 0x1E5A, 0x1E5A },
	{ 0x1E5C, 0x1E5C },
	{ 0x1E5E, 0x1E5E },
	{ 0x1E60, 0x1E60 },
	{ 0x1E62, 0x1E62 },
	{ 0x1E64, 0x1E64 },
	{ 0x1E66, 0x1E66 },
	{ 0x1E68, 0x1E68 },
	{ 0x1E6A, 0x1E6A },
	{ 0x1E6C, 0x1E6C },
	{ 0x1E6E, 0x1E6E },
	{ 0x1E70, 0x1E70 },
	{ 0x1E72, 0x1E72 },
	{ 0x1E74, 0x1E74 },
	{ 0x1E76, 0x1E76 },
	{ 0x1E78, 0x1E78 },
	{ 0x1E7A, 0x1E7A },
	{ 0x1E7C, 0x1E7C },
	{ 0x1E7E, 0x1E7E },
	{ 0x1E80, 0x1E80 },
	{ 0x1E82, 0x1E82 },
	{ 0x1E84, 0x1E84 },
	{ 0x1E86, 0x1E86 },
	{ 0x1E88, 0x1E88 },
	{ 0x1E8A, 0x1E8A },
	{ 0x1E8C, 0x1E8C },
	{ 0x1E8E, 0x1E8E },
	{ 0x1E90, 0x1E90 },
	{ 0x1E92, 0x1E92 },
	{ 0x1E94, 0x1E94 },
	{ 0x1E9E, 0x1E9E },
	{ 0x1EA0, 0x1EA0 },
	{ 0x1EA2, 0x1EA2 },
	{ 0x1EA4, 0x1EA4 },
	{ 0x1EA6, 0x1EA6 },
	{ 0x1EA8, 0x1EA8 },
	{ 0x1EAA, 0x1EAA },
	{ 0x1EAC, 0x1EAC },
	{ 0x1EAE, 0x1EAE },
	{ 0x1EB0, 0x1EB0 },
	{ 0x1EB2, 0x1EB2 },
	{ 0x1EB4, 0x1EB4 },
	{ 0x1EB6, 0x1EB6 },
	{ 0x1EB8, 0x1EB8 },
	{ 0x1EBA, 0x1EBA },
	{ 0x1EBC, 0x1EBC },
	{ 0x1EBE, 0x1EBE },
	{ 0x1EC0, 0x1EC0 },
	{ 0x1EC2, 0x1EC2 },
	{ 0x1EC4, 0x1EC4 },
	{ 0x1EC6, 0x1EC6 },
	{ 0x1EC8, 0x1EC8 },
	{ 0x1ECA, 0x1ECA },
	{ 0x1ECC, 0x1ECC },
	{ 0x1ECE, 0x1ECE },
	{ 0x1ED0, 0x1ED0 },
	{ 0x1ED2, 0x1ED2 },
	{ 0x1ED4, 0x1ED4 },
	{ 0x1ED6, 0x1ED6 },
	{ 0x1ED8, 0x1ED8 },
	{ 0x1EDA, 0x1EDA },
	{ 0x1EDC, 0x1EDC },
	{ 0x1EDE, 0x1EDE },
	{ 0x1EE0, 0x1EE0 },
	{ 0x1EE2, 0x1EE2 },
	{ 0x1EE4, 0x1EE4 },
	{ 0x1EE6, 0x1EE6 },
	{ 0x1EE8, 0x1EE8 },
	{ 0x1EEA, 0x1EEA },
	{ 0x1EEC, 0x1EEC },
	{ 0x1EEE, 0x1EEE },
	{ 0x1EF0, 0x1EF0 },
	{ 0x1EF2, 0x1EF2 },
	{ 0x1EF4, 0x1EF4 },
	{ 0x1EF6, 0x1EF6 },
	{ 0x1EF8, 0x1EF8 },
	{ 0x1EFA, 0x1EFA },
	{ 0x1EFC, 0x1EFC },
	{ 0x1EFE, 0x1EFE },
	{ 0x1F08, 0x1F0F },
	{ 0x1F18, 0x1F1D },
	{ 0x1F28, 0x1F2F },
	{ 0x1F38, 0x1F3F },
	{ 0x1F48, 0x1F4D },
	{ 0x1F59, 0x1F59 },
	{ 0x1F5B, 0x1F5B },
	{ 0x1F5D, 0x1F5D },
	{ 0x1F5F, 0x1F5F },
	{ 0x1F68, 0x1F6F },
	{ 0x1F88, 0x1F8F },
	{ 0x1F98, 0x1F9F },
	{ 0x1FA8, 0x1FAF },
	{ 0x1FB8, 0x1FB9 },
	{ 0x1FBA, 0x1FBB },
	{ 0x1FBC, 0x1FBC },
	{ 0x1FC8, 0x1FCB },
	{ 0x1FCC, 0x1FCC },
	{ 0x1FD8, 0x1FD9 },
	{ 0x1FDA, 0x1FDB },
	{ 0x1FE8, 0x1FE9 },
	{ 0x1FEA, 0x1FEB },
	{ 0x1FEC, 0x1FEC },
	{ 0x1FF8, 0x1FF9 },
	{ 0x1FFA, 0x1FFB },
	{ 0x1FFC, 0x1FFC },
	{ 0x2126, 0x2126 },
	{ 0x212A, 0x212A },
	{ 0x212B, 0x212B },
	{ 0x2132, 0x2132 },
	{ 0x2160, 0x216F },
	{ 0x2183, 0x2183 },
	{ 0x24B6, 0x24CF },
	{ 0x2C00, 0x2C2E },
	{ 0x2C60, 0x2C60 },
	{ 0x2C62, 0x2C62 },
	{ 0x2C63, 0x2C63 },
	{ 0x2C64, 0x2C64 },
	{ 0x2C67, 0x2C67 },
	{ 0x2C69, 0x2C69 },
	{ 0x2C6B, 0x2C6B },
	{ 0x2C6D, 0x2C6D },
	{ 0x2C6E, 0x2C6E },
	{ 0x2C6F, 0x2C6F },
	{ 0x2C70, 0x2C70 },
	{ 0x2C72, 0x2C72 },
	{ 0x2C75, 0x2C75 },
	{ 0x2C7E, 0x2C7F },
	{ 0x2C80, 0x2C80 },
	{ 0x2C82, 0x2C82 },
	{ 0x2C84, 0x2C84 },
	{ 0x2C86, 0x2C86 },
	{ 0x2C88, 0x2C88 },
	{ 0x2C8A, 0x2C8A },
	{ 0x2C8C, 0x2C8C },
	{ 0x2C8E, 0x2C8E },
	{ 0x2C90, 0x2C90 },
	{ 0x2C92, 0x2C92 },
	{ 0x2C94, 0x2C94 },
	{ 0x2C96, 0x2C96 },
	{ 0x2C98, 0x2C98 },
	{ 0x2C9A, 0x2C9A },
	{ 0x2C9C, 0x2C9C },
	{ 0x2C9E, 0x2C9E },
	{ 0x2CA0, 0x2CA0 },
	{ 0x2CA2, 0x2CA2 },
	{ 0x2CA4, 0x2CA4 },
	{ 0x2CA6, 0x2CA6 },
	{ 0x2CA8, 0x2CA8 },
	{ 0x2CAA, 0x2CAA },
	{ 0x2CAC, 0x2CAC },
	{ 0x2CAE, 0x2CAE },
	{ 0x2CB0, 0x2CB0 },
	{ 0x2CB2, 0x2CB2 },
	{ 0x2CB4, 0x2CB4 },
	{ 0x2CB6, 0x2CB6 },
	{ 0x2CB8, 0x2CB8 },
	{ 0x2CBA, 0x2CBA },
	{ 0x2CBC, 0x2CBC },
	{ 0x2CBE, 0x2CBE },
	{ 0x2CC0, 0x2CC0 },
	{ 0x2CC2, 0x2CC2 },
	{ 0x2CC4, 0x2CC4 },
	{ 0x2CC6, 0x2CC6 },
	{ 0x2CC8, 0x2CC8 },
	{ 0x2CCA, 0x2CCA },
	{ 0x2CCC, 0x2CCC },
	{ 0x2CCE, 0x2CCE },
	{ 0x2CD0, 0x2CD0 },
	{ 0x2CD2, 0x2CD2 },
	{ 0x2CD4, 0x2CD4 },
	{ 0x2CD6, 0x2CD6 },
	{ 0x2CD8, 0x2CD8 },
	{ 0x2CDA, 0x2CDA },
	{ 0x2CDC, 0x2CDC },
	{ 0x2CDE, 0x2CDE },
	{ 0x2CE0, 0x2CE0 },
	{ 0x2CE2, 0x2CE2 },
	{ 0x2CEB, 0x2CEB },
	{ 0x2CED, 0x2CED },
	{ 0x2CF2, 0x2CF2 },
	{ 0xA640, 0xA640 },
	{ 0xA642, 0xA642 },
	{ 0xA644, 0xA644 },
	{ 0xA646, 0xA646 },
	{ 0xA648, 0xA648 },
	{ 0xA64A, 0xA64A },
	{ 0xA64C, 0xA64C },
	{ 0xA64E, 0xA64E },
	{ 0xA650, 0xA650 },
	{ 0xA652, 0xA652 },
	{ 0xA654, 0xA654 },
	{ 0xA656, 0xA656 },
	{ 0xA658, 0xA658 },
	{ 0xA65A, 0xA65A },
	{ 0xA65C, 0xA65C },
	{ 0xA65E, 0xA65E },
	{ 0xA660, 0xA660 },
	{ 0xA662, 0xA662 },
	{ 0xA664, 0xA664 },
	{ 0xA666, 0xA666 },
	{ 0xA668, 0xA668 },
	{ 0xA66A, 0xA66A },
	{ 0xA66C, 0xA66C },
	{ 0xA680, 0xA680 },
	{ 0xA682, 0xA682 },
	{ 0xA684, 0xA684 },
	{ 0xA686, 0xA686 },
	{ 0xA688, 0xA688 },
	{ 0xA68A, 0xA68A },
	{ 0xA68C, 0xA68C },
	{ 0xA68E, 0xA68E },
	{ 0xA690, 0xA690 },
	{ 0xA692, 0xA692 },
	{ 0xA694, 0xA694 },
	{ 0xA696, 0xA696 },
	{ 0xA698, 0xA698 },
	{ 0xA69A, 0xA69A },
	{ 0xA722, 0xA722 },
	{ 0xA724, 0xA724 },
	{ 0xA726, 0xA726 },
	{ 0xA728, 0xA728 },
	{ 0xA72A, 0xA72A },
	{ 0xA72C, 0xA72C },
	{ 0xA72E, 0xA72E },
	{ 0xA732, 0xA732 },
	{ 0xA734, 0xA734 },
	{ 0xA736, 0xA736 },
	{ 0xA738, 0xA738 },
	{ 0xA73A, 0xA73A },
	{ 0xA73C, 0xA73C },
	{ 0xA73E, 0xA73E },
	{ 0xA740, 0xA740 },
	{ 0xA742, 0xA742 },
	{ 0xA744, 0xA744 },
	{ 0xA746, 0xA746 },
	{ 0xA748, 0xA748 },
	{ 0xA74A, 0xA74A },
	{ 0xA74C, 0xA74C },
	{ 0xA74E, 0xA74E },
	{ 0xA750, 0xA750 },
	{ 0xA752, 0xA752 },
	{ 0xA754, 0xA754 },
	{ 0xA756, 0xA756 },
	{ 0xA758, 0xA758 },
	{ 0xA75A, 0xA75A },
	{ 0xA75C, 0xA75C },
	{ 0xA75E, 0xA75E },
	{ 0xA760, 0xA760 },
	{ 0xA762, 0xA762 },
	{ 0xA764, 0xA764 },
	{ 0xA766, 0xA766 },
	{ 0xA768, 0xA768 },
	{ 0xA76A, 0xA76A },
	{ 0xA76C, 0xA76C },
	{ 0xA76E, 0xA76E },
	{ 0xA779, 0xA779 },
	{ 0xA77B, 0xA77B },
	{ 0xA77D, 0xA77D },
	{ 0xA77E, 0xA77E },
	{ 0xA780, 0xA780 },
	{ 0xA782, 0xA782 },
	{ 0xA784, 0xA784 },
	{ 0xA786, 0xA786 },
	{ 0xA78B, 0xA78B },
	{ 0xA78D, 0xA78D },
	{ 0xA790, 0xA790 },
	{ 0xA792, 0xA792 },
	{ 0xA796, 0xA796 },
	{ 0xA798, 0xA798 },
	{ 0xA79A, 0xA79A },
	{ 0xA79C, 0xA79C },
	{ 0xA79E, 0xA79E },
	{ 0xA7A0, 0xA7A0 },
	{ 0xA7A2, 0xA7A2 },
	{ 0xA7A4, 0xA7A4 },
	{ 0xA7A6, 0xA7A6 },
	{ 0xA7A8, 0xA7A8 },
	{ 0xA7AA, 0xA7AA },
	{ 0xA7AB, 0xA7AB },
	{ 0xA7AC, 0xA7AC },
	{ 0xA7AD, 0xA7AD },
	{ 0xA7AE, 0xA7AE },
	{ 0xA7B0, 0xA7B0 },
	{ 0xA7B1, 0xA7B1 },
	{ 0xA7B2, 0xA7B2 },
	{ 0xA7B3, 0xA7B3 },
	{ 0xA7B4, 0xA7B4 },
	{ 0xA7B6, 0xA7B6 },
	{ 0xA7B8, 0xA7B8 },
	{ 0xFF21, 0xFF3A },
	{ 0x10400, 0x10427 },
	{ 0x104B0, 0x104D3 },
	{ 0x10C80, 0x10CB2 },
	{ 0x118A0, 0x118BF },
	{ 0x16E40, 0x16E5F },
	{ 0x1E900, 0x1E921 }
};

static const int data_wcdelta_tolower[] = {
	32,
	32,
	32,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	-199,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	-121,
	1,
	1,
	1,
	210,
	1,
	1,
	206,
	1,
	205,
	1,
	79,
	202,
	203,
	1,
	205,
	207,
	211,
	209,
	1,
	211,
	213,
	214,
	1,
	1,
	1,
	218,
	1,
	218,
	1,
	218,
	1,
	217,
	1,
	1,
	219,
	1,
	1,
	2,
	1,
	2,
	1,
	2,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	2,
	1,
	1,
	-97,
	-56,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	-130,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	10795,
	1,
	-163,
	10792,
	1,
	-195,
	69,
	71,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	116,
	38,
	37,
	64,
	63,
	32,
	32,
	8,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	-60,
	1,
	-7,
	1,
	-130,
	80,
	32,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	15,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	48,
	7264,
	7264,
	7264,
	38864,
	8,
	-3008,
	-3008,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	-7615,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	-8,
	-8,
	-8,
	-8,
	-8,
	-8,
	-8,
	-8,
	-8,
	-8,
	-8,
	-8,
	-8,
	-8,
	-74,
	-9,
	-86,
	-9,
	-8,
	-100,
	-8,
	-112,
	-7,
	-128,
	-126,
	-9,
	-7517,
	-8383,
	-8262,
	28,
	16,
	1,
	26,
	48,
	1,
	-10743,
	-3814,
	-10727,
	1,
	1,
	1,
	-10780,
	-10749,
	-10783,
	-10782,
	1,
	1,
	-10815,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	-35332,
	1,
	1,
	1,
	1,
	1,
	1,
	-42280,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	1,
	-42308,
	-42319,
	-42315,
	-42305,
	-42308,
	-42258,
	-42282,
	-42261,
	928,
	1,
	1,
	1,
	32,
	40,
	40,
	64,
	32,
	32,
	34
};

int joe_towlower(struct charmap *foo, int c)
{
	size_t idx;

	if ((idx = mb_ucsbsearch(data_wcrange_tolower,
	    NELEM(data_wcrange_tolower), c)) == (size_t)-1)
		return (c);
	return (c + data_wcdelta_tolower[idx]);
}

/* Test the functions */

#ifdef TEST_I18N
int
main(int argc,char *argv[])
{
	int c;
	void *vp;

	if (argc != 2)
		return (1);
	c = ustolb(argv[1], &vp, 0, 0x10FFFF, USTOL_TRIM | USTOL_EOS);
	if (!vp)
		return (1);
	printf("Properties of character %X:\n",c);
	printf("upper=%X\n",joe_iswupper(NULL,c));
	printf("lower=%X\n",joe_iswlower(NULL,c));
	printf("alpha=%X\n",joe_iswalpha(NULL,c));
	printf("digit=%X\n",joe_iswdigit(NULL,c));
	printf("cntrl=%X\n",joe_iswcntrl(NULL,c));
	printf("punct=%X\n",joe_iswpunct(NULL,c));
	printf("graph=%X\n",joe_iswgraph(NULL,c));
	printf("print=%X\n",joe_iswprint(NULL,c));
	printf("xdigit=%X\n",joe_iswxdigit(NULL,c));
	printf("blank=%X\n",joe_iswblank(NULL,c));
	printf("width=%X\n",joe_wcwidth(c));
	printf("toupper=%X\n",joe_towupper(NULL,c));
	printf("tolower=%X\n",joe_towlower(NULL,c));
	return (0);
}
#endif

#if 0
.endif

PROG=		i18n
SRCS=		compat.c i18n.c
NOMAN=		Yes
CPPFLAGS+=	-DTEST -DTEST_I18N

.include <bsd.own.mk>

.ifdef __CRAZY
COPTS+=		-Wno-unused-parameter -Wno-cast-qual
COPTS+=		-Wno-strict-prototypes
.endif

.include <bsd.prog.mk>
#endif
@


1.35
log
@fix (and harmonise!) some Unicode decoding issues during yak shaving
@
text
@d5 1
a5 1
 *	UNICODE/ISO-10646 functions for JOE
d22 1
a22 1
__RCSID("$MirOS: contrib/code/jupp/i18n.c,v 1.34 2018/06/26 21:22:32 tg Exp $");
d38 1
a38 1
 * Generated from the Unicode Character Database, Version 11.0.0, by
@


1.34
log
@Unicode 11.0.0
@
text
@d22 1
a22 1
__RCSID("$MirOS: contrib/code/jupp/i18n.c,v 1.31 2017/12/06 21:46:55 tg Exp $");
d507 2
a508 2
	/* ASCII control characters use one screen column */
	if (ucs < 32 || ucs == 0x7F)
@


1.33
log
@get rid of extra joe_wcwidth parameter by inlining its only remaining use
@
text
@d38 1
a38 1
 * Generated from the Unicode Character Database, Version 10.0.0, by
d62 1
d68 1
a68 1
	{ 0x08D4, 0x08E1 },
d81 1
d108 1
d228 1
d266 2
d279 1
a279 1
	{ 0x111CA, 0x111CC },
d287 1
a287 1
	{ 0x1133C, 0x1133C },
d294 1
d313 3
a315 2
	{ 0x11A01, 0x11A06 },
	{ 0x11A09, 0x11A0A },
d335 4
d415 1
a415 1
	{ 0x17000, 0x187EC },
d450 1
a450 1
	{ 0x1F6F4, 0x1F6F8 },
d452 7
a458 5
	{ 0x1F940, 0x1F94C },
	{ 0x1F950, 0x1F96B },
	{ 0x1F980, 0x1F997 },
	{ 0x1F9C0, 0x1F9C0 },
	{ 0x1F9D0, 0x1F9E6 },
d836 2
d1147 1
d1153 1
d1445 2
d1761 1
d1769 1
d1804 1
a1804 1
	{ 0x0561, 0x0587 },
d1806 1
a1806 1
	{ 0x05F0, 0x05F2 },
d1988 1
a1988 1
	{ 0x1820, 0x1877 },
d2010 2
d2081 1
a2081 1
	{ 0x3105, 0x312E },
d2086 1
a2086 1
	{ 0x4E00, 0x9FEA },
d2097 1
a2097 2
	{ 0xA78B, 0xA7AE },
	{ 0xA7B0, 0xA7B7 },
d2106 1
a2106 1
	{ 0xA8FD, 0xA8FD },
d2206 1
a2206 1
	{ 0x10A19, 0x10A33 },
d2218 4
d2226 1
d2260 2
a2261 1
	{ 0x11700, 0x11719 },
d2270 1
d2280 5
d2296 1
d2301 1
a2301 1
	{ 0x17000, 0x187EC },
d2462 1
d2470 1
a2470 1
	{ 0x08D4, 0x0903 },
d2484 1
a2484 1
	{ 0x09FD, 0x09FD },
d2492 1
a2492 1
	{ 0x0A75, 0x0A75 },
d2516 1
a2516 1
	{ 0x0C00, 0x0C03 },
d2524 1
a2524 1
	{ 0x0C81, 0x0C83 },
d2660 2
a2661 4
	{ 0x2B98, 0x2BB9 },
	{ 0x2BBD, 0x2BC8 },
	{ 0x2BCA, 0x2BD2 },
	{ 0x2BEC, 0x2BEF },
d2668 1
a2668 1
	{ 0x2E30, 0x2E49 },
d2708 1
a2708 1
	{ 0xA900, 0xA909 },
d2782 1
a2782 1
	{ 0x10A3F, 0x10A47 },
d2795 2
d2798 2
d2805 1
d2810 1
d2824 1
a2824 1
	{ 0x1133C, 0x1133C },
d2835 1
a2835 1
	{ 0x1145D, 0x1145D },
d2849 1
d2870 5
d2884 1
d2892 1
d2894 1
a2894 1
	{ 0x1D360, 0x1D371 },
d2917 1
d2926 1
a2926 2
	{ 0x1F110, 0x1F12E },
	{ 0x1F130, 0x1F16B },
d2935 1
a2935 1
	{ 0x1F6F0, 0x1F6F8 },
d2937 1
a2937 1
	{ 0x1F780, 0x1F7D4 },
d2945 8
a2952 5
	{ 0x1F940, 0x1F94C },
	{ 0x1F950, 0x1F96B },
	{ 0x1F980, 0x1F997 },
	{ 0x1F9C0, 0x1F9C0 },
	{ 0x1F9D0, 0x1F9E6 },
d2972 1
a2972 3
	{ 0x0559, 0x055F },
	{ 0x0561, 0x0587 },
	{ 0x0589, 0x058A },
d2976 1
a2976 1
	{ 0x05F0, 0x05F4 },
d2982 1
a2982 1
	{ 0x0800, 0x082D },
d2989 1
a2989 1
	{ 0x08D4, 0x0983 },
d3002 1
a3002 1
	{ 0x09E6, 0x09FD },
d3018 1
a3018 1
	{ 0x0A66, 0x0A75 },
d3063 1
a3063 2
	{ 0x0C00, 0x0C03 },
	{ 0x0C05, 0x0C0C },
d3074 1
a3074 2
	{ 0x0C78, 0x0C83 },
	{ 0x0C85, 0x0C8C },
d3170 1
a3170 1
	{ 0x1820, 0x1877 },
d3195 2
a3196 1
	{ 0x1CC0, 0x1CC7 },
d3226 2
a3227 4
	{ 0x2B98, 0x2BB9 },
	{ 0x2BBD, 0x2BC8 },
	{ 0x2BCA, 0x2BD2 },
	{ 0x2BEC, 0x2BEF },
d3245 1
a3245 1
	{ 0x2DE0, 0x2E49 },
d3253 1
a3253 1
	{ 0x3105, 0x312E },
d3260 1
a3260 1
	{ 0x4DC0, 0x9FEA },
d3265 1
a3265 2
	{ 0xA700, 0xA7AE },
	{ 0xA7B0, 0xA7B7 },
d3271 1
a3271 2
	{ 0xA8E0, 0xA8FD },
	{ 0xA900, 0xA953 },
d3372 1
a3372 1
	{ 0x10A19, 0x10A33 },
d3374 1
a3374 1
	{ 0x10A3F, 0x10A47 },
d3388 2
a3389 1
	{ 0x10CFA, 0x10CFF },
d3391 2
d3396 1
d3400 1
a3400 1
	{ 0x11136, 0x11143 },
d3421 1
a3421 1
	{ 0x1133C, 0x11344 },
d3431 1
a3431 1
	{ 0x1145D, 0x1145D },
d3441 1
a3441 1
	{ 0x11700, 0x11719 },
d3444 1
d3449 1
a3449 2
	{ 0x11A86, 0x11A9C },
	{ 0x11A9E, 0x11AA2 },
d3465 7
d3489 1
d3494 1
a3494 1
	{ 0x17000, 0x187EC },
d3507 1
d3509 1
a3509 1
	{ 0x1D360, 0x1D371 },
d3543 1
d3585 1
a3585 2
	{ 0x1F110, 0x1F12E },
	{ 0x1F130, 0x1F16B },
d3594 1
a3594 1
	{ 0x1F6F0, 0x1F6F8 },
d3596 1
a3596 1
	{ 0x1F780, 0x1F7D4 },
d3604 8
a3611 5
	{ 0x1F940, 0x1F94C },
	{ 0x1F950, 0x1F96B },
	{ 0x1F980, 0x1F997 },
	{ 0x1F9C0, 0x1F9C0 },
	{ 0x1F9D0, 0x1F9E6 },
d3637 1
a3637 3
	{ 0x0559, 0x055F },
	{ 0x0561, 0x0587 },
	{ 0x0589, 0x058A },
d3641 1
a3641 1
	{ 0x05F0, 0x05F4 },
d3647 1
a3647 1
	{ 0x0800, 0x082D },
d3654 1
a3654 1
	{ 0x08D4, 0x0983 },
d3667 1
a3667 1
	{ 0x09E6, 0x09FD },
d3683 1
a3683 1
	{ 0x0A66, 0x0A75 },
d3728 1
a3728 2
	{ 0x0C00, 0x0C03 },
	{ 0x0C05, 0x0C0C },
d3739 1
a3739 2
	{ 0x0C78, 0x0C83 },
	{ 0x0C85, 0x0C8C },
d3835 1
a3835 1
	{ 0x1820, 0x1877 },
d3860 2
a3861 1
	{ 0x1CC0, 0x1CC7 },
d3897 2
a3898 4
	{ 0x2B98, 0x2BB9 },
	{ 0x2BBD, 0x2BC8 },
	{ 0x2BCA, 0x2BD2 },
	{ 0x2BEC, 0x2BEF },
d3916 1
a3916 1
	{ 0x2DE0, 0x2E49 },
d3924 1
a3924 1
	{ 0x3105, 0x312E },
d3931 1
a3931 1
	{ 0x4DC0, 0x9FEA },
d3936 1
a3936 2
	{ 0xA700, 0xA7AE },
	{ 0xA7B0, 0xA7B7 },
d3942 1
a3942 2
	{ 0xA8E0, 0xA8FD },
	{ 0xA900, 0xA953 },
d4043 1
a4043 1
	{ 0x10A19, 0x10A33 },
d4045 1
a4045 1
	{ 0x10A3F, 0x10A47 },
d4059 2
a4060 1
	{ 0x10CFA, 0x10CFF },
d4062 2
d4067 1
d4071 1
a4071 1
	{ 0x11136, 0x11143 },
d4092 1
a4092 1
	{ 0x1133C, 0x11344 },
d4102 1
a4102 1
	{ 0x1145D, 0x1145D },
d4112 1
a4112 1
	{ 0x11700, 0x11719 },
d4115 1
d4120 1
a4120 2
	{ 0x11A86, 0x11A9C },
	{ 0x11A9E, 0x11AA2 },
d4136 7
d4160 1
d4165 1
a4165 1
	{ 0x17000, 0x187EC },
d4178 1
d4180 1
a4180 1
	{ 0x1D360, 0x1D371 },
d4214 1
d4256 1
a4256 2
	{ 0x1F110, 0x1F12E },
	{ 0x1F130, 0x1F16B },
d4265 1
a4265 1
	{ 0x1F6F0, 0x1F6F8 },
d4267 1
a4267 1
	{ 0x1F780, 0x1F7D4 },
d4275 8
a4282 5
	{ 0x1F940, 0x1F94C },
	{ 0x1F950, 0x1F96B },
	{ 0x1F980, 0x1F997 },
	{ 0x1F9C0, 0x1F9C0 },
	{ 0x1F9D0, 0x1F9E6 },
d4649 2
d4979 1
d4987 1
d5318 2
d5648 1
d5656 1
d5978 2
d6313 1
d6319 1
d6631 2
d6966 1
d6972 1
@


1.32
log
@unfortunately, the polymorphic problems are not yet solved
@
text
@d506 2
a507 1
int joe_wcwidth(int wide, unsigned int ucs)
d509 2
d514 1
a514 1
	if (!locale_map->type || !wide)
d6925 1
a6925 1
	printf("width=%X\n",joe_wcwidth(1,c));
@


1.31
log
@the code should now be able to cope with this

offenders will be patched away
@
text
@d22 1
a22 1
__RCSID("$MirOS: contrib/code/jupp/i18n.c,v 1.29 2017/12/03 02:36:01 tg Exp $");
d6941 1
@


1.30
log
@begin overhaul for antique/header compat:
â¢ PARAMS begone
â¢ libc4 ustat definition: resolve inline
â¢ ignore HAVE_*_H for headers mksh includes unconditionally
@
text
@d6940 1
a6940 4
COPTS+=		-Wno-old-style-definition \
		-Wno-unused-parameter -Wno-strict-prototypes \
		-Wno-cast-qual \
		-Wno-missing-prototypes -Wno-missing-declarations
@


1.29
log
@first cut at getting rid of stdio: scanf half
@
text
@a19 1
#ifdef HAVE_STDLIB_H
a20 1
#endif
d22 1
a22 1
__RCSID("$MirOS: contrib/code/jupp/i18n.c,v 1.27 2017/12/02 18:50:02 tg Exp $");
@


1.28
log
@update
@
text
@d27 1
d6906 1
d6910 3
a6912 1
	sscanf(argv[1],"%x",&c);
d6935 1
@


1.27
log
@get rid of -Wmissing-field-initialisers, as Cygwin GCC forces my hand
@
text
@d24 1
a24 1
__RCSID("$MirOS: contrib/code/jupp/i18n.c,v 1.25 2017/12/02 02:07:26 tg Exp $");
d6937 2
a6938 2
COPTS+=		-Wno-unused-parameter \
		-Wno-old-style-definition -Wno-strict-prototypes \
@


1.26
log
@some fallout of the includes changes, some more reduction
@
text
@a6937 1
		-Wno-missing-field-initializers \
@


1.25
log
@overhaul the way includes work; give jupp proper RCS IDs

(after all, empty source files are UB; win32.c is likely)
@
text
@d24 1
a24 1
__RCSID("$MirOS$");
a26 2
#include "utf8.h"
#include "i18n.h"
@


1.24
log
@refresh with up-to-date eawparse

thankfully, this is now all in glibc master, too
(thanks Mike FABIAN)
@
text
@a3 1
/* $MirOS: contrib/code/jupp/i18n.c,v 1.19 2017/07/08 15:38:52 tg Exp $ */
d24 2
@


1.23
log
@fixup by regenerating with new eawparse which matches what I submitted to
https://sourceware.org/bugzilla/show_bug.cgi?id=21750 even if only FF00
actually changed due to the algorithms in use
@
text
@d41 1
a41 1
 * MirOS: contrib/code/Snippets/eawparse,v 1.10 2017/07/12 22:47:26 tg Exp $
a51 1
	{ 0x0600, 0x0605 },
d56 1
a56 1
	{ 0x06D6, 0x06DD },
a59 1
	{ 0x070F, 0x070F },
d69 2
a70 1
	{ 0x08D4, 0x0902 },
a268 1
	{ 0x110BD, 0x110BD },
@


1.22
log
@convert only once
@
text
@d41 1
a41 1
 * MirOS: contrib/code/Snippets/eawparse,v 1.3 2014/11/16 12:16:24 tg Exp $
d395 4
a398 2
	{ 0x2E80, 0x303E },
	{ 0x3040, 0xA4CF },
d404 1
a404 1
	{ 0xFF00, 0xFF60 },
@


1.21
log
@handle overlong chars right by printing to a buffer and returning length
(XXX may explode if UINT_MAX is larger than 2Â³Â²-1)
@
text
@d493 2
@


1.20
log
@handle surrogates and chars outside of 21-bit Unicode as control chars
@
text
@d490 1
d502 2
a503 3
	/* < plus width of hex repr plus > */
	return (ucs < 0x100 ? 4 : /* ucs < 0x1000 ? 5 : */
	    ucs < 0x10000 ? 6 : ucs < 0x100000 ? 7 : 8);
@


1.19
log
@use unictrl() more intelligently
@
text
@d4 1
a4 1
/* $MirOS: contrib/code/jupp/i18n.c,v 1.17 2017/03/19 19:30:21 tg Exp $ */
d483 1
d498 1
a498 1
	    ucs) == (size_t)-1 && (ucs & 0xFFFE) != 0xFFFE)
@


1.18
log
@Unicode 10.0.0
@
text
@d9 2
a10 1
 *	Copyright Â© 2014 Thorsten Glaser
d478 1
d485 1
a485 2
	{ 0xFFF9, 0xFFFB },
	{ 0xFFFE, 0xFFFF }
d488 17
a6924 21
/* Return true if c is a control character which should not be displayed */
int unictrl(unsigned int ucs)
{
	/* C0 Control characters are one column wide in JOE */
	if (ucs < 32 || ucs == 0x7F)
		return (1);

	/* C1 control characters... */
	if (ucs >= 0x80 && ucs < 0xA0)
		return (4);

	/* More control characters... */
	if (mb_ucsbsearch(joe_ctrlchars, NELEM(joe_ctrlchars), ucs) != (size_t)-1)
		return (6);

	if ((ucs & 0xFFFE) == 0xFFFE)
		return (ucs > 0xFFFFF ? 8 : 7);

	return (0);
}

@


1.17
log
@drop unused categorisations (~15K in the binary)
@
text
@d4 1
a4 1
/* $MirOS: contrib/code/jupp/i18n.c,v 1.11 2014/06/24 19:53:20 tg Exp $ */
d28 1
a28 1
/* From: X11/xc/programs/xterm/wcwidth.c,v 1.9 */
d39 1
a39 1
 * Generated from the Unicode Character Database, Version 9.0.0, by
d96 1
d119 2
a120 1
	{ 0x0D01, 0x0D01 },
d205 1
a205 1
	{ 0x1DC0, 0x1DF5 },
d309 9
d325 5
d403 1
a403 1
	{ 0x16FE0, 0x16FE0 },
d406 2
a407 1
	{ 0x1B000, 0x1B001 },
d416 1
d439 5
a443 8
	{ 0x1F6F4, 0x1F6F6 },
	{ 0x1F910, 0x1F91E },
	{ 0x1F920, 0x1F927 },
	{ 0x1F930, 0x1F930 },
	{ 0x1F933, 0x1F93E },
	{ 0x1F940, 0x1F94B },
	{ 0x1F950, 0x1F95E },
	{ 0x1F980, 0x1F991 },
d445 1
d521 1
a521 1
/* From: contrib/hosted/tg/jupptables,v 1.1 2013/11/30 23:58:29 tg Exp $ */
a1731 1
/* plus U+005F (UNDERSCORE) */
d1783 1
d1802 1
d2035 1
a2035 1
	{ 0x3105, 0x312D },
d2040 1
a2040 1
	{ 0x4E00, 0x9FD5 },
d2130 1
a2130 1
	{ 0x10330, 0x10340 },
d2213 6
d2224 4
d2242 1
a2242 1
	{ 0x16FE0, 0x16FE0 },
d2245 2
a2246 1
	{ 0x1B000, 0x1B001 },
d2320 1
a2335 6
/*
 * plus ;WS;
 *  except U+2007 (<noBreak> FIGURE SPACE)
 * plus U+200B (ZERO WIDTH SPACE)
 * plus U+2029 (PARAGRAPH SEPARATOR)
 */
a2349 4
/*
 * plus U+2028 (LINE SEPARATOR)
 * plus U+2029 (PARAGRAPH SEPARATOR)
 */
d2425 1
d2441 1
d2473 2
a2474 1
	{ 0x0D01, 0x0D03 },
d2565 2
a2566 2
	{ 0x1CF8, 0x1CF9 },
	{ 0x1DC0, 0x1DF5 },
d2578 1
a2578 1
	{ 0x20A0, 0x20BE },
d2596 1
a2596 2
	{ 0x2190, 0x23FE },
	{ 0x2400, 0x2426 },
d2603 1
a2603 1
	{ 0x2BCA, 0x2BD1 },
d2611 1
a2611 1
	{ 0x2E30, 0x2E44 },
d2787 6
d2800 6
d2861 2
a2862 1
	{ 0x1F300, 0x1F6D2 },
d2864 1
a2864 1
	{ 0x1F6F0, 0x1F6F6 },
d2872 5
a2876 7
	{ 0x1F910, 0x1F91E },
	{ 0x1F920, 0x1F927 },
	{ 0x1F930, 0x1F930 },
	{ 0x1F933, 0x1F93E },
	{ 0x1F940, 0x1F94B },
	{ 0x1F950, 0x1F95E },
	{ 0x1F980, 0x1F991 },
d2878 1
d2914 1
d2930 1
a2930 1
	{ 0x09E6, 0x09FB },
d2960 1
a2960 1
	{ 0x0AF9, 0x0AF9 },
d3017 1
a3017 1
	{ 0x0D01, 0x0D03 },
d3020 1
a3020 2
	{ 0x0D12, 0x0D3A },
	{ 0x0D3D, 0x0D44 },
d3126 2
a3127 3
	{ 0x1CD0, 0x1CF6 },
	{ 0x1CF8, 0x1CF9 },
	{ 0x1D00, 0x1DF5 },
d3148 1
a3148 1
	{ 0x20A0, 0x20BE },
d3151 1
a3151 2
	{ 0x2190, 0x23FE },
	{ 0x2400, 0x2426 },
d3157 1
a3157 1
	{ 0x2BCA, 0x2BD1 },
d3176 1
a3176 1
	{ 0x2DE0, 0x2E44 },
d3184 1
a3184 1
	{ 0x3105, 0x312D },
d3191 1
a3191 1
	{ 0x4DC0, 0x9FD5 },
d3271 1
a3271 1
	{ 0x10330, 0x1034A },
d3375 4
d3387 7
d3414 1
a3414 1
	{ 0x16FE0, 0x16FE0 },
d3417 2
a3418 1
	{ 0x1B000, 0x1B001 },
d3511 2
a3512 1
	{ 0x1F300, 0x1F6D2 },
d3514 1
a3514 1
	{ 0x1F6F0, 0x1F6F6 },
d3522 5
a3526 7
	{ 0x1F910, 0x1F91E },
	{ 0x1F920, 0x1F927 },
	{ 0x1F930, 0x1F930 },
	{ 0x1F933, 0x1F93E },
	{ 0x1F940, 0x1F94B },
	{ 0x1F950, 0x1F95E },
	{ 0x1F980, 0x1F991 },
d3528 1
d3533 1
d3570 1
d3586 1
a3586 1
	{ 0x09E6, 0x09FB },
d3616 1
a3616 1
	{ 0x0AF9, 0x0AF9 },
d3673 1
a3673 1
	{ 0x0D01, 0x0D03 },
d3676 1
a3676 2
	{ 0x0D12, 0x0D3A },
	{ 0x0D3D, 0x0D44 },
d3782 2
a3783 3
	{ 0x1CD0, 0x1CF6 },
	{ 0x1CF8, 0x1CF9 },
	{ 0x1D00, 0x1DF5 },
d3810 1
a3810 1
	{ 0x20A0, 0x20BE },
d3813 1
a3813 2
	{ 0x2190, 0x23FE },
	{ 0x2400, 0x2426 },
d3819 1
a3819 1
	{ 0x2BCA, 0x2BD1 },
d3838 1
a3838 1
	{ 0x2DE0, 0x2E44 },
d3846 1
a3846 1
	{ 0x3105, 0x312D },
d3853 1
a3853 1
	{ 0x4DC0, 0x9FD5 },
d3933 1
a3933 1
	{ 0x10330, 0x1034A },
d4037 4
d4049 7
d4076 1
a4076 1
	{ 0x16FE0, 0x16FE0 },
d4079 2
a4080 1
	{ 0x1B000, 0x1B001 },
d4173 2
a4174 1
	{ 0x1F300, 0x1F6D2 },
d4176 1
a4176 1
	{ 0x1F6F0, 0x1F6F6 },
d4184 5
a4188 7
	{ 0x1F910, 0x1F91E },
	{ 0x1F920, 0x1F927 },
	{ 0x1F930, 0x1F930 },
	{ 0x1F933, 0x1F93E },
	{ 0x1F940, 0x1F94B },
	{ 0x1F950, 0x1F95E },
	{ 0x1F980, 0x1F991 },
d4190 1
d4195 1
a4214 7
/*
 * plus ;Zs;
 *  except U+00A0 (<noBreak> NON-BREAKING SPACE)
 *  except U+2007 (<noBreak> FIGURE SPACE)
 *  except U+202F (<noBreak> NARROW NO-BREAK SPACE)
 * plus U+200B (ZERO WIDTH SPACE)
 */
@


1.16
log
@apparently, on the Windows console, U+2022 â¢ is a non-printing characterâ¦
@
text
@d507 1
d1714 1
d2326 1
d2338 1
d2855 1
d3499 1
d4151 1
d4178 1
@


1.15
log
@Unicode 9.0.0 (code and data part; FixedMisc font tbd)
@
text
@d3751 5
d3757 1
@


1.14
log
@allow multiple -DTEST main()s
@
text
@d28 1
a28 1
/* From: X11/xc/programs/xterm/wcwidth.c,v 1.8 2014/06/24 19:53:53 tg Exp $ */
d39 2
a40 2
 * Generated by MirOS: contrib/code/Snippets/eawparse,v 1.2 2013/11/30 13:45:17 tg Exp $
 * from the Unicode Character Database, Version 7.0.0
d70 1
a70 1
	{ 0x08E4, 0x0902 },
d165 1
d204 1
a204 1
	{ 0x1DFC, 0x1DFF },
d217 1
a217 1
	{ 0xA69F, 0xA69F },
d223 1
a223 1
	{ 0xA8C4, 0xA8C4 },
d250 1
a250 1
	{ 0xFE20, 0xFE2D },
d274 1
d278 1
d281 1
a281 1
	{ 0x11301, 0x11301 },
d286 3
d296 1
d304 10
d324 11
d336 1
d344 1
d346 32
d387 3
d391 4
d396 1
a396 1
	{ 0x1F210, 0x1F23A },
d399 31
d782 1
d1089 3
a1091 2
	{ 0xA7AA, 0xA7AD },
	{ 0xA7B0, 0xA7B1 },
d1094 4
a1097 1
	{ 0x118A0, 0x118BF }
d1253 1
a1253 2
	{ 0x0268, 0x0269 },
	{ 0x026B, 0x026C },
d1262 1
a1262 1
	{ 0x029E, 0x029E },
d1388 2
d1700 4
d1706 4
a1709 1
	{ 0x118C0, 0x118DF }
d1766 2
a1767 1
	{ 0x08A0, 0x08B2 },
d1803 1
d1830 1
a1830 1
	{ 0x0C58, 0x0C59 },
d1832 1
d1847 2
a1848 1
	{ 0x0D60, 0x0D61 },
d1909 2
a1910 1
	{ 0x13A0, 0x13F4 },
d1926 2
a1927 1
	{ 0x1880, 0x18A8 },
d1934 1
a1934 1
	{ 0x19C1, 0x19C7 },
d1946 1
d2021 1
a2021 1
	{ 0x4E00, 0x9FCC },
d2032 2
a2033 3
	{ 0xA78B, 0xA78E },
	{ 0xA790, 0xA7AD },
	{ 0xA7B0, 0xA7B1 },
d2042 1
d2071 2
a2072 3
	{ 0xAB5C, 0xAB5F },
	{ 0xAB64, 0xAB65 },
	{ 0xABC0, 0xABE2 },
d2118 2
d2133 2
d2152 2
d2163 1
d2166 5
d2179 1
d2181 2
d2187 1
d2191 1
d2195 6
a2200 1
	{ 0x12000, 0x12398 },
d2202 1
d2213 3
d2252 1
d2289 1
d2306 2
a2307 2
 * this includes ;WS;
 * except U+2007 (<noBreak> FIGURE SPACE)
d2388 1
a2388 1
	{ 0x08E4, 0x0903 },
d2452 2
a2453 1
	{ 0x0D57, 0x0D57 },
d2455 1
a2455 2
	{ 0x0D66, 0x0D75 },
	{ 0x0D79, 0x0D79 },
d2506 1
a2511 2
	{ 0x19B0, 0x19C0 },
	{ 0x19C8, 0x19C9 },
d2541 1
a2541 1
	{ 0x1DFC, 0x1DFF },
d2552 1
a2552 1
	{ 0x20A0, 0x20BD },
d2569 2
a2570 2
	{ 0x2185, 0x2189 },
	{ 0x2190, 0x23FA },
d2579 1
d2586 1
a2586 1
	{ 0x2E30, 0x2E42 },
d2609 1
a2609 1
	{ 0xA69F, 0xA69F },
d2621 1
a2621 1
	{ 0xA8B4, 0xA8C4 },
d2625 1
d2661 1
a2661 2
	{ 0xFE20, 0xFE2D },
	{ 0xFE30, 0xFE52 },
d2673 1
a2673 1
	{ 0x10137, 0x1018C },
d2689 1
d2693 3
d2712 1
d2726 1
a2726 2
	{ 0x111C5, 0x111C8 },
	{ 0x111CD, 0x111CD },
d2728 2
d2731 2
a2732 1
	{ 0x1122C, 0x1123D },
d2735 1
a2735 1
	{ 0x11301, 0x11303 },
d2744 4
d2752 2
a2753 1
	{ 0x115B8, 0x115C9 },
d2756 1
d2759 2
d2762 7
d2783 1
a2783 1
	{ 0x1D129, 0x1D1DD },
d2797 8
a2804 1
	{ 0x1D7CE, 0x1D7FF },
d2806 3
d2819 1
a2819 1
	{ 0x1F170, 0x1F19A },
d2821 1
a2821 1
	{ 0x1F210, 0x1F23A },
d2824 1
a2824 10
	{ 0x1F300, 0x1F32C },
	{ 0x1F330, 0x1F37D },
	{ 0x1F380, 0x1F3CE },
	{ 0x1F3D4, 0x1F3F7 },
	{ 0x1F400, 0x1F4FE },
	{ 0x1F500, 0x1F54A },
	{ 0x1F550, 0x1F579 },
	{ 0x1F57B, 0x1F5A3 },
	{ 0x1F5A5, 0x1F642 },
	{ 0x1F645, 0x1F6CF },
d2826 1
a2826 1
	{ 0x1F6F0, 0x1F6F3 },
d2834 8
d2876 3
a2878 2
	{ 0x08A0, 0x08B2 },
	{ 0x08E4, 0x0983 },
d2921 1
d2961 1
a2961 1
	{ 0x0C58, 0x0C59 },
d2964 1
a2964 2
	{ 0x0C78, 0x0C7F },
	{ 0x0C81, 0x0C83 },
d2984 3
a2986 5
	{ 0x0D4A, 0x0D4E },
	{ 0x0D57, 0x0D57 },
	{ 0x0D60, 0x0D63 },
	{ 0x0D66, 0x0D75 },
	{ 0x0D79, 0x0D7F },
d3046 2
a3047 1
	{ 0x13A0, 0x13F4 },
d3086 1
a3086 1
	{ 0x1C4D, 0x1C7F },
d3091 1
a3091 1
	{ 0x1DFC, 0x1F15 },
d3111 1
a3111 1
	{ 0x20A0, 0x20BD },
d3113 2
a3114 2
	{ 0x2100, 0x2189 },
	{ 0x2190, 0x23FA },
d3122 1
d3140 1
a3140 1
	{ 0x2DE0, 0x2E42 },
d3155 1
a3155 1
	{ 0x4DC0, 0x9FCC },
d3159 3
a3161 5
	{ 0xA640, 0xA69D },
	{ 0xA69F, 0xA6F7 },
	{ 0xA700, 0xA78E },
	{ 0xA790, 0xA7AD },
	{ 0xA7B0, 0xA7B1 },
d3165 1
a3165 1
	{ 0xA880, 0xA8C4 },
d3167 1
a3167 1
	{ 0xA8E0, 0xA8FB },
d3183 2
a3184 3
	{ 0xAB30, 0xAB5F },
	{ 0xAB64, 0xAB65 },
	{ 0xABC0, 0xABED },
d3204 1
a3204 2
	{ 0xFE20, 0xFE2D },
	{ 0xFE30, 0xFE52 },
d3227 1
a3227 1
	{ 0x10137, 0x1018C },
d3242 2
d3258 3
a3260 1
	{ 0x10900, 0x1091B },
d3264 2
a3265 2
	{ 0x109BE, 0x109BF },
	{ 0x10A00, 0x10A03 },
d3283 3
d3295 2
a3296 3
	{ 0x11180, 0x111C8 },
	{ 0x111CD, 0x111CD },
	{ 0x111D0, 0x111DA },
d3299 6
a3304 1
	{ 0x11213, 0x1123D },
d3307 1
a3307 1
	{ 0x11301, 0x11303 },
d3317 1
d3322 3
d3328 1
a3328 1
	{ 0x115B8, 0x115C9 },
d3331 1
d3334 3
d3340 8
a3347 1
	{ 0x12000, 0x12398 },
d3350 1
d3352 1
d3367 3
d3378 1
a3378 1
	{ 0x1D129, 0x1D1DD },
d3402 8
a3409 1
	{ 0x1D7CE, 0x1D7FF },
d3412 3
d3458 1
a3458 1
	{ 0x1F170, 0x1F19A },
d3460 1
a3460 1
	{ 0x1F210, 0x1F23A },
d3463 1
a3463 10
	{ 0x1F300, 0x1F32C },
	{ 0x1F330, 0x1F37D },
	{ 0x1F380, 0x1F3CE },
	{ 0x1F3D4, 0x1F3F7 },
	{ 0x1F400, 0x1F4FE },
	{ 0x1F500, 0x1F54A },
	{ 0x1F550, 0x1F579 },
	{ 0x1F57B, 0x1F5A3 },
	{ 0x1F5A5, 0x1F642 },
	{ 0x1F645, 0x1F6CF },
d3465 1
a3465 1
	{ 0x1F6F0, 0x1F6F3 },
d3473 8
d3484 1
d3520 3
a3522 2
	{ 0x08A0, 0x08B2 },
	{ 0x08E4, 0x0983 },
d3565 1
d3605 1
a3605 1
	{ 0x0C58, 0x0C59 },
d3608 1
a3608 2
	{ 0x0C78, 0x0C7F },
	{ 0x0C81, 0x0C83 },
d3628 3
a3630 5
	{ 0x0D4A, 0x0D4E },
	{ 0x0D57, 0x0D57 },
	{ 0x0D60, 0x0D63 },
	{ 0x0D66, 0x0D75 },
	{ 0x0D79, 0x0D7F },
d3690 2
a3691 1
	{ 0x13A0, 0x13F4 },
d3730 1
a3730 1
	{ 0x1C4D, 0x1C7F },
d3735 1
a3735 1
	{ 0x1DFC, 0x1F15 },
d3755 1
a3755 1
	{ 0x20A0, 0x20BD },
d3757 2
a3758 2
	{ 0x2100, 0x2189 },
	{ 0x2190, 0x23FA },
d3766 1
d3784 1
a3784 1
	{ 0x2DE0, 0x2E42 },
d3799 1
a3799 1
	{ 0x4DC0, 0x9FCC },
d3803 3
a3805 5
	{ 0xA640, 0xA69D },
	{ 0xA69F, 0xA6F7 },
	{ 0xA700, 0xA78E },
	{ 0xA790, 0xA7AD },
	{ 0xA7B0, 0xA7B1 },
d3809 1
a3809 1
	{ 0xA880, 0xA8C4 },
d3811 1
a3811 1
	{ 0xA8E0, 0xA8FB },
d3827 2
a3828 3
	{ 0xAB30, 0xAB5F },
	{ 0xAB64, 0xAB65 },
	{ 0xABC0, 0xABED },
d3848 1
a3848 2
	{ 0xFE20, 0xFE2D },
	{ 0xFE30, 0xFE52 },
d3871 1
a3871 1
	{ 0x10137, 0x1018C },
d3886 2
d3902 3
a3904 1
	{ 0x10900, 0x1091B },
d3908 2
a3909 2
	{ 0x109BE, 0x109BF },
	{ 0x10A00, 0x10A03 },
d3927 3
d3939 2
a3940 3
	{ 0x11180, 0x111C8 },
	{ 0x111CD, 0x111CD },
	{ 0x111D0, 0x111DA },
d3943 6
a3948 1
	{ 0x11213, 0x1123D },
d3951 1
a3951 1
	{ 0x11301, 0x11303 },
d3961 1
d3966 3
d3972 1
a3972 1
	{ 0x115B8, 0x115C9 },
d3975 1
d3978 3
d3984 8
a3991 1
	{ 0x12000, 0x12398 },
d3994 1
d3996 1
d4011 3
d4022 1
a4022 1
	{ 0x1D129, 0x1D1DD },
d4046 8
a4053 1
	{ 0x1D7CE, 0x1D7FF },
d4056 3
d4102 1
a4102 1
	{ 0x1F170, 0x1F19A },
d4104 1
a4104 1
	{ 0x1F210, 0x1F23A },
d4107 1
a4107 10
	{ 0x1F300, 0x1F32C },
	{ 0x1F330, 0x1F37D },
	{ 0x1F380, 0x1F3CE },
	{ 0x1F3D4, 0x1F3F7 },
	{ 0x1F400, 0x1F4FE },
	{ 0x1F500, 0x1F54A },
	{ 0x1F550, 0x1F579 },
	{ 0x1F57B, 0x1F5A3 },
	{ 0x1F5A5, 0x1F642 },
	{ 0x1F645, 0x1F6CF },
d4109 1
a4109 1
	{ 0x1F6F0, 0x1F6F3 },
d4117 8
d4128 1
d4148 4
a4151 4
 * this includes ;Zs;
 * except U+00A0 (<noBreak> NON-BREAKING SPACE)
 * except U+2007 (<noBreak> FIGURE SPACE)
 * except U+202F (<noBreak> NARROW NO-BREAK SPACE)
d4338 1
d4354 1
d4495 9
d4821 4
d4827 4
a4830 1
	{ 0x118C0, 0x118DF }
d5003 1
d5019 1
d5160 9
d5486 4
d5492 4
a5495 1
	32
d5814 2
d6142 1
d6145 4
d6151 4
a6154 1
	{ 0x118A0, 0x118BF }
d6463 2
d6791 1
d6794 4
d6800 4
a6803 1
	32
@


1.12
log
@move NELEM out of i18n.c
@
text
@d6508 1
a6508 1
#ifdef TEST
d6561 1
a6561 1
CPPFLAGS+=	-DTEST
@


1.11
log
@Unicode 7.0.0
@
text
@d4 1
a4 1
/* $MirOS: contrib/code/jupp/i18n.c,v 1.10 2013/12/01 00:19:08 tg Exp $ */
a333 3
/* from mksh */
#define NELEM(a)	(sizeof(a) / sizeof((a)[0]))

@


1.10
log
@Finally! Convert juppâs i18n code to something better
and update the nÅn-wcwidth parts as wellâ¦ since they
wereâ¦ at best(!)â¦ Unicode 3.0.0

This also makes them const (saves more RAM, yay!) and
uses more sane algorithms for tolower/toupper (static
initialisation beats initialisation on first use, for
things can be even more .rodata then!).
@
text
@d4 1
a4 1
/* $MirOS: contrib/code/jupp/i18n.c,v 1.9 2013/11/30 23:20:05 tg Exp $ */
d9 1
d28 1
a28 1
/* From: X11/xc/programs/xterm/wcwidth.c,v 1.7 2013/11/30 23:20:03 tg Exp $ */
d40 1
a40 1
 * from the Unicode Character Database, Version 6.3.0
d51 1
a51 1
	{ 0x0600, 0x0604 },
d70 1
a70 2
	{ 0x08E4, 0x08FE },
	{ 0x0900, 0x0902 },
d106 1
d112 1
d118 1
d179 1
d189 1
a189 1
	{ 0x1BAB, 0x1BAB },
d201 2
a202 1
	{ 0x1DC0, 0x1DE6 },
d230 1
d236 1
d249 1
a249 1
	{ 0xFE20, 0xFE26 },
d253 2
d260 1
d263 1
a263 1
	{ 0x11080, 0x11081 },
d270 1
d273 20
d297 2
d300 2
d307 1
d558 1
d677 4
d930 2
d981 5
d991 2
a992 1
	{ 0xA7AA, 0xA7AA },
d994 2
a995 1
	{ 0x10400, 0x10427 }
d1147 2
a1148 2
	{ 0x025B, 0x025B },
	{ 0x0260, 0x0260 },
d1152 1
a1152 1
	{ 0x026B, 0x026B },
d1159 1
a1159 1
	{ 0x0288, 0x028C },
d1161 1
d1182 1
a1182 1
	{ 0x03EF, 0x03F2 },
d1282 4
d1537 2
d1587 5
d1598 2
a1599 1
	{ 0x10428, 0x1044F }
d1623 1
d1630 1
a1630 1
	{ 0x048A, 0x0527 },
d1656 1
a1656 2
	{ 0x08A0, 0x08A0 },
	{ 0x08A2, 0x08AC },
d1661 1
a1661 2
	{ 0x0971, 0x0977 },
	{ 0x0979, 0x097F },
d1716 1
a1716 2
	{ 0x0C2A, 0x0C33 },
	{ 0x0C35, 0x0C39 },
d1800 1
d1814 1
a1814 1
	{ 0x1900, 0x191C },
d1911 1
a1911 1
	{ 0xA67F, 0xA697 },
d1916 3
a1918 3
	{ 0xA790, 0xA793 },
	{ 0xA7A0, 0xA7AA },
	{ 0xA7F8, 0xA801 },
d1931 3
d1939 1
a1939 1
	{ 0xAA80, 0xAAAF },
d1953 3
d1994 1
a1994 1
	{ 0x10300, 0x1031E },
d1997 1
d2002 5
d2013 2
d2024 3
d2030 1
d2036 2
d2040 18
d2059 4
a2062 1
	{ 0x12000, 0x1236E },
d2065 6
d2075 4
d2109 1
d2217 1
a2217 1
	{ 0x058F, 0x058F },
d2220 1
a2220 2
	{ 0x0600, 0x0604 },
	{ 0x0606, 0x061C },
d2244 1
a2244 2
	{ 0x08E4, 0x08FE },
	{ 0x0900, 0x0903 },
d2288 1
a2288 1
	{ 0x0C01, 0x0C03 },
d2296 1
a2296 1
	{ 0x0C82, 0x0C83 },
d2304 1
a2304 1
	{ 0x0D02, 0x0D03 },
d2317 1
d2379 1
d2396 2
a2397 1
	{ 0x1DC0, 0x1DE6 },
d2409 1
a2409 1
	{ 0x20A0, 0x20BA },
d2427 1
a2427 1
	{ 0x2190, 0x23F3 },
d2431 5
a2435 3
	{ 0x24EA, 0x26FF },
	{ 0x2701, 0x2B4C },
	{ 0x2B50, 0x2B59 },
d2442 1
a2442 1
	{ 0x2E30, 0x2E3B },
d2489 2
d2497 1
a2497 1
	{ 0xAA7B, 0xAA7B },
d2506 1
d2516 1
a2516 1
	{ 0xFE20, 0xFE26 },
d2529 1
a2529 1
	{ 0x10137, 0x1018A },
d2531 1
d2533 1
d2537 1
d2541 1
d2543 2
d2555 4
d2562 2
d2568 1
a2568 1
	{ 0x11080, 0x11082 },
d2574 1
d2578 1
d2580 20
d2602 10
a2611 2
	{ 0x12400, 0x12462 },
	{ 0x12470, 0x12473 },
d2614 1
d2632 1
d2637 1
a2637 1
	{ 0x1F0B1, 0x1F0BE },
d2639 2
a2640 2
	{ 0x1F0D1, 0x1F0DF },
	{ 0x1F100, 0x1F10A },
d2648 12
a2659 17
	{ 0x1F300, 0x1F320 },
	{ 0x1F330, 0x1F335 },
	{ 0x1F337, 0x1F37C },
	{ 0x1F380, 0x1F393 },
	{ 0x1F3A0, 0x1F3C4 },
	{ 0x1F3C6, 0x1F3CA },
	{ 0x1F3E0, 0x1F3F0 },
	{ 0x1F400, 0x1F43E },
	{ 0x1F440, 0x1F440 },
	{ 0x1F442, 0x1F4F7 },
	{ 0x1F4F9, 0x1F4FC },
	{ 0x1F500, 0x1F53D },
	{ 0x1F540, 0x1F543 },
	{ 0x1F550, 0x1F567 },
	{ 0x1F5FB, 0x1F640 },
	{ 0x1F645, 0x1F64F },
	{ 0x1F680, 0x1F6C5 },
d2661 6
d2679 1
a2679 1
	{ 0x037A, 0x037E },
d2683 1
a2683 1
	{ 0x03A3, 0x0527 },
d2688 1
a2688 1
	{ 0x058F, 0x058F },
d2692 1
a2692 2
	{ 0x0600, 0x0604 },
	{ 0x0606, 0x061C },
d2701 2
a2702 6
	{ 0x08A0, 0x08A0 },
	{ 0x08A2, 0x08AC },
	{ 0x08E4, 0x08FE },
	{ 0x0900, 0x0977 },
	{ 0x0979, 0x097F },
	{ 0x0981, 0x0983 },
d2775 1
a2775 1
	{ 0x0C01, 0x0C03 },
d2779 1
a2779 2
	{ 0x0C2A, 0x0C33 },
	{ 0x0C35, 0x0C39 },
d2788 1
a2788 1
	{ 0x0C82, 0x0C83 },
d2802 1
a2802 1
	{ 0x0D02, 0x0D03 },
d2823 1
d2874 1
a2874 1
	{ 0x16A0, 0x16F0 },
d2890 1
a2890 1
	{ 0x1900, 0x191C },
d2905 1
d2914 2
a2915 1
	{ 0x1D00, 0x1DE6 },
d2936 1
a2936 1
	{ 0x20A0, 0x20BA },
d2939 1
a2939 1
	{ 0x2190, 0x23F3 },
d2942 5
a2946 3
	{ 0x2460, 0x26FF },
	{ 0x2701, 0x2B4C },
	{ 0x2B50, 0x2B59 },
d2964 1
a2964 1
	{ 0x2DE0, 0x2E3B },
d2983 1
a2983 1
	{ 0xA640, 0xA697 },
d2986 3
a2988 3
	{ 0xA790, 0xA793 },
	{ 0xA7A0, 0xA7AA },
	{ 0xA7F8, 0xA82B },
d2998 1
a2998 1
	{ 0xA9DE, 0xA9DF },
d3002 1
a3002 2
	{ 0xAA5C, 0xAA7B },
	{ 0xAA80, 0xAAC2 },
d3009 2
d3031 1
a3031 1
	{ 0xFE20, 0xFE26 },
d3055 1
a3055 1
	{ 0x10137, 0x1018A },
d3057 1
d3061 2
a3062 2
	{ 0x10300, 0x1031E },
	{ 0x10320, 0x10323 },
d3064 1
d3070 6
d3082 2
a3083 1
	{ 0x10857, 0x1085F },
d3097 3
a3099 1
	{ 0x10A60, 0x10A7F },
d3103 3
a3105 1
	{ 0x10B78, 0x10B7F },
d3110 1
a3110 1
	{ 0x11080, 0x110C1 },
d3115 1
d3117 27
a3143 1
	{ 0x111D0, 0x111D9 },
d3146 6
a3151 3
	{ 0x12000, 0x1236E },
	{ 0x12400, 0x12462 },
	{ 0x12470, 0x12473 },
d3154 10
d3168 5
d3200 2
d3239 1
a3239 1
	{ 0x1F0B1, 0x1F0BE },
d3241 2
a3242 2
	{ 0x1F0D1, 0x1F0DF },
	{ 0x1F100, 0x1F10A },
d3250 12
a3261 17
	{ 0x1F300, 0x1F320 },
	{ 0x1F330, 0x1F335 },
	{ 0x1F337, 0x1F37C },
	{ 0x1F380, 0x1F393 },
	{ 0x1F3A0, 0x1F3C4 },
	{ 0x1F3C6, 0x1F3CA },
	{ 0x1F3E0, 0x1F3F0 },
	{ 0x1F400, 0x1F43E },
	{ 0x1F440, 0x1F440 },
	{ 0x1F442, 0x1F4F7 },
	{ 0x1F4F9, 0x1F4FC },
	{ 0x1F500, 0x1F53D },
	{ 0x1F540, 0x1F543 },
	{ 0x1F550, 0x1F567 },
	{ 0x1F5FB, 0x1F640 },
	{ 0x1F645, 0x1F64F },
	{ 0x1F680, 0x1F6C5 },
d3263 6
d3285 1
a3285 1
	{ 0x037A, 0x037E },
d3289 1
a3289 1
	{ 0x03A3, 0x0527 },
d3294 1
a3294 1
	{ 0x058F, 0x058F },
d3298 1
a3298 2
	{ 0x0600, 0x0604 },
	{ 0x0606, 0x061C },
d3307 2
a3308 6
	{ 0x08A0, 0x08A0 },
	{ 0x08A2, 0x08AC },
	{ 0x08E4, 0x08FE },
	{ 0x0900, 0x0977 },
	{ 0x0979, 0x097F },
	{ 0x0981, 0x0983 },
d3381 1
a3381 1
	{ 0x0C01, 0x0C03 },
d3385 1
a3385 2
	{ 0x0C2A, 0x0C33 },
	{ 0x0C35, 0x0C39 },
d3394 1
a3394 1
	{ 0x0C82, 0x0C83 },
d3408 1
a3408 1
	{ 0x0D02, 0x0D03 },
d3429 1
d3480 1
a3480 1
	{ 0x16A0, 0x16F0 },
d3496 1
a3496 1
	{ 0x1900, 0x191C },
d3511 1
d3520 2
a3521 1
	{ 0x1D00, 0x1DE6 },
d3542 1
a3542 1
	{ 0x20A0, 0x20BA },
d3545 1
a3545 1
	{ 0x2190, 0x23F3 },
d3548 5
a3552 3
	{ 0x2460, 0x26FF },
	{ 0x2701, 0x2B4C },
	{ 0x2B50, 0x2B59 },
d3570 1
a3570 1
	{ 0x2DE0, 0x2E3B },
d3589 1
a3589 1
	{ 0xA640, 0xA697 },
d3592 3
a3594 3
	{ 0xA790, 0xA793 },
	{ 0xA7A0, 0xA7AA },
	{ 0xA7F8, 0xA82B },
d3604 1
a3604 1
	{ 0xA9DE, 0xA9DF },
d3608 1
a3608 2
	{ 0xAA5C, 0xAA7B },
	{ 0xAA80, 0xAAC2 },
d3615 2
d3637 1
a3637 1
	{ 0xFE20, 0xFE26 },
d3661 1
a3661 1
	{ 0x10137, 0x1018A },
d3663 1
d3667 2
a3668 2
	{ 0x10300, 0x1031E },
	{ 0x10320, 0x10323 },
d3670 1
d3676 6
d3688 2
a3689 1
	{ 0x10857, 0x1085F },
d3703 3
a3705 1
	{ 0x10A60, 0x10A7F },
d3709 3
a3711 1
	{ 0x10B78, 0x10B7F },
d3716 1
a3716 1
	{ 0x11080, 0x110C1 },
d3721 1
d3723 27
a3749 1
	{ 0x111D0, 0x111D9 },
d3752 6
a3757 3
	{ 0x12000, 0x1236E },
	{ 0x12400, 0x12462 },
	{ 0x12470, 0x12473 },
d3760 10
d3774 5
d3806 2
d3845 1
a3845 1
	{ 0x1F0B1, 0x1F0BE },
d3847 2
a3848 2
	{ 0x1F0D1, 0x1F0DF },
	{ 0x1F100, 0x1F10A },
d3856 12
a3867 17
	{ 0x1F300, 0x1F320 },
	{ 0x1F330, 0x1F335 },
	{ 0x1F337, 0x1F37C },
	{ 0x1F380, 0x1F393 },
	{ 0x1F3A0, 0x1F3C4 },
	{ 0x1F3C6, 0x1F3CA },
	{ 0x1F3E0, 0x1F3F0 },
	{ 0x1F400, 0x1F43E },
	{ 0x1F440, 0x1F440 },
	{ 0x1F442, 0x1F4F7 },
	{ 0x1F4F9, 0x1F4FC },
	{ 0x1F500, 0x1F53D },
	{ 0x1F540, 0x1F543 },
	{ 0x1F550, 0x1F567 },
	{ 0x1F5FB, 0x1F640 },
	{ 0x1F645, 0x1F64F },
	{ 0x1F680, 0x1F6C5 },
d3869 6
d4079 1
d4081 1
d4088 1
d4096 1
d4102 1
d4135 1
d4237 4
d4499 2
d4549 5
d4560 2
a4561 1
	{ 0x10428, 0x1044F }
d4726 1
d4728 1
d4735 1
d4743 1
d4749 1
d4782 1
d4884 4
d5199 7
d5207 2
a5208 1
	40
d5396 1
d5519 4
d5787 2
d5839 5
d5850 5
d5856 2
a5857 1
	{ 0x10400, 0x10427 }
d6035 1
d6158 4
d6466 2
d6483 5
d6489 5
d6495 2
a6496 1
	40
@


1.9
log
@Unicode 6.3.0
@
text
@d1 4
a4 1
/* $MirOS: contrib/code/jupp/i18n.c,v 1.8 2013/08/19 17:39:29 tg Exp $ */
d326 1
d331 1
a331 1
	{ 0x206A, 0x206F },
d340 1
d345 1
d372 3
a374 1
static struct mb_ucsrange data_wctype_upper[] = {
d378 65
a442 7
	{ 0x0100, 0x0136 },
	{ 0x0139, 0x0147 },
	{ 0x014A, 0x0178 },
	{ 0x0179, 0x017D },
	{ 0x0181, 0x0181 },
	{ 0x0182, 0x0186 },
	{ 0x0187, 0x0187 },
d445 1
a445 2
	{ 0x0193, 0x0193 },
	{ 0x0194, 0x0194 },
d447 5
a451 6
	{ 0x019C, 0x019C },
	{ 0x019D, 0x019D },
	{ 0x019F, 0x019F },
	{ 0x01A0, 0x01A4 },
	{ 0x01A6, 0x01A6 },
	{ 0x01A7, 0x01A7 },
d454 1
a454 2
	{ 0x01AE, 0x01AE },
	{ 0x01AF, 0x01AF },
d457 1
a457 2
	{ 0x01B7, 0x01B7 },
	{ 0x01B8, 0x01B8 },
d459 21
a479 10
	{ 0x01C4, 0x01C4 },
	{ 0x01C5, 0x01C5 },
	{ 0x01C7, 0x01C7 },
	{ 0x01C8, 0x01C8 },
	{ 0x01CA, 0x01CA },
	{ 0x01CB, 0x01CB },
	{ 0x01CD, 0x01DB },
	{ 0x01DE, 0x01EE },
	{ 0x01F1, 0x01F1 },
	{ 0x01F2, 0x01F2 },
d482 40
a521 2
	{ 0x01FA, 0x01FE },
	{ 0x0200, 0x0232 },
d525 1
a525 2
	{ 0x038E, 0x038E },
	{ 0x038F, 0x038F },
d528 13
a540 2
	{ 0x03D8, 0x03DE },
	{ 0x03E0, 0x03EE },
d542 19
a560 2
	{ 0x0400, 0x042F },
	{ 0x0460, 0x047E },
d562 54
a615 3
	{ 0x048A, 0x04BE },
	{ 0x04C1, 0x04CD },
	{ 0x04D0, 0x04F4 },
d617 23
a639 1
	{ 0x0500, 0x050E },
d641 127
a767 3
	{ 0x1E00, 0x1E7E },
	{ 0x1E80, 0x1E94 },
	{ 0x1EA0, 0x1EF8 },
d773 4
a776 1
	{ 0x1F59, 0x1F5F },
d788 1
d790 1
d792 152
d945 1
a945 1
	{ 0x00010400, 0x00010425 }
d950 1
a950 1
static struct mb_ucsrange data_wctype_lower[] = {
d953 1
a953 1
	{ 0x00DF, 0x00F6 },
d955 62
a1016 5
	{ 0x0101, 0x0137 },
	{ 0x013A, 0x0148 },
	{ 0x014B, 0x0177 },
	{ 0x017A, 0x017E },
	{ 0x017F, 0x017F },
d1023 1
a1023 1
	{ 0x0199, 0x0199 },
a1035 1
	{ 0x01C5, 0x01C5 },
a1036 1
	{ 0x01C8, 0x01C8 },
d1038 18
a1055 4
	{ 0x01CB, 0x01CB },
	{ 0x01CC, 0x01DC },
	{ 0x01DD, 0x01EF },
	{ 0x01F2, 0x01F2 },
d1058 38
a1095 7
	{ 0x01F9, 0x01FF },
	{ 0x0201, 0x021F },
	{ 0x0223, 0x0233 },
	{ 0x0253, 0x0253 },
	{ 0x0254, 0x0254 },
	{ 0x0256, 0x0256 },
	{ 0x0257, 0x0257 },
d1100 3
a1102 2
	{ 0x0268, 0x0268 },
	{ 0x0269, 0x0269 },
d1104 1
a1104 1
	{ 0x0272, 0x0272 },
d1106 1
d1109 1
a1109 3
	{ 0x0288, 0x0288 },
	{ 0x028A, 0x028A },
	{ 0x028B, 0x028B },
d1112 4
d1118 14
a1131 6
	{ 0x03D0, 0x03D0 },
	{ 0x03D1, 0x03D1 },
	{ 0x03D5, 0x03D5 },
	{ 0x03D6, 0x03D6 },
	{ 0x03D9, 0x03EF },
	{ 0x03F0, 0x03F2 },
d1133 2
d1136 16
a1151 1
	{ 0x0461, 0x047F },
d1153 54
a1206 3
	{ 0x048B, 0x04BF },
	{ 0x04C2, 0x04CE },
	{ 0x04D1, 0x04F5 },
d1208 23
a1230 1
	{ 0x0501, 0x050F },
d1232 77
a1308 1
	{ 0x1E01, 0x1E95 },
d1310 48
a1357 2
	{ 0x1EA1, 0x1EF9 },
	{ 0x1F00, 0x1F07 },
d1362 4
a1365 1
	{ 0x1F51, 0x1F57 },
d1371 1
a1371 2
	{ 0x1FB0, 0x1FB0 },
	{ 0x1FB1, 0x1FB1 },
d1375 2
a1376 4
	{ 0x1FD0, 0x1FD0 },
	{ 0x1FD1, 0x1FD1 },
	{ 0x1FE0, 0x1FE0 },
	{ 0x1FE1, 0x1FE1 },
d1379 1
d1381 1
d1383 152
d1536 1
a1536 1
	{ 0x00010428, 0x0001044D }
d1541 2
a1542 1
struct mb_ucsrange data_wctype_alpha[] = {
d1544 1
a1544 1
	{ 0x005F, 0x005F },	/* Include _ for joe */
d1551 2
a1552 9
	{ 0x00F8, 0x00FF },
	{ 0x0100, 0x017F },
	{ 0x0180, 0x0220 },
	{ 0x0222, 0x0233 },
	{ 0x0250, 0x02AD },
	{ 0x02B0, 0x02B8 },
	{ 0x02BB, 0x02C1 },
	{ 0x02D0, 0x02D0 },
	{ 0x02D1, 0x02D1 },
d1554 1
d1557 3
a1559 1
	{ 0x037A, 0x037A },
d1564 3
a1566 7
	{ 0x03A3, 0x03CE },
	{ 0x03D0, 0x03F5 },
	{ 0x0400, 0x0481 },
	{ 0x048A, 0x04CE },
	{ 0x04D0, 0x04F5 },
	{ 0x04F8, 0x04F9 },
	{ 0x0500, 0x050F },
d1572 1
a1572 3
	{ 0x0621, 0x063A },
	{ 0x0640, 0x064A },
	{ 0x0660, 0x0669 },
d1577 1
a1577 1
	{ 0x06F0, 0x06F9 },
d1579 1
d1581 2
a1582 2
	{ 0x0712, 0x072C },
	{ 0x0780, 0x07A5 },
d1584 11
a1594 1
	{ 0x0905, 0x0939 },
d1598 2
a1599 1
	{ 0x0966, 0x096F },
d1601 1
a1601 2
	{ 0x098F, 0x098F },
	{ 0x0990, 0x0990 },
d1606 3
a1608 2
	{ 0x09DC, 0x09DC },
	{ 0x09DD, 0x09DD },
a1609 1
	{ 0x09E6, 0x09EF },
d1612 1
a1612 2
	{ 0x0A0F, 0x0A0F },
	{ 0x0A10, 0x0A10 },
d1615 3
a1617 6
	{ 0x0A32, 0x0A32 },
	{ 0x0A33, 0x0A33 },
	{ 0x0A35, 0x0A35 },
	{ 0x0A36, 0x0A36 },
	{ 0x0A38, 0x0A38 },
	{ 0x0A39, 0x0A39 },
a1619 1
	{ 0x0A66, 0x0A6F },
d1621 1
a1621 2
	{ 0x0A85, 0x0A8B },
	{ 0x0A8D, 0x0A8D },
d1625 1
a1625 2
	{ 0x0AB2, 0x0AB2 },
	{ 0x0AB3, 0x0AB3 },
d1629 1
a1629 2
	{ 0x0AE0, 0x0AE0 },
	{ 0x0AE6, 0x0AEF },
d1631 1
a1631 2
	{ 0x0B0F, 0x0B0F },
	{ 0x0B10, 0x0B10 },
d1634 2
a1635 3
	{ 0x0B32, 0x0B32 },
	{ 0x0B33, 0x0B33 },
	{ 0x0B36, 0x0B39 },
d1637 1
a1637 2
	{ 0x0B5C, 0x0B5C },
	{ 0x0B5D, 0x0B5D },
d1639 1
a1639 1
	{ 0x0B66, 0x0B6F },
d1644 1
a1644 2
	{ 0x0B99, 0x0B99 },
	{ 0x0B9A, 0x0B9A },
d1646 2
a1647 4
	{ 0x0B9E, 0x0B9E },
	{ 0x0B9F, 0x0B9F },
	{ 0x0BA3, 0x0BA3 },
	{ 0x0BA4, 0x0BA4 },
d1649 2
a1650 3
	{ 0x0BAE, 0x0BB5 },
	{ 0x0BB7, 0x0BB9 },
	{ 0x0BE7, 0x0BEF },
d1656 2
a1658 1
	{ 0x0C66, 0x0C6F },
d1664 1
d1667 1
a1667 1
	{ 0x0CE6, 0x0CEF },
d1670 3
a1672 2
	{ 0x0D12, 0x0D28 },
	{ 0x0D2A, 0x0D39 },
d1674 1
a1674 1
	{ 0x0D66, 0x0D6F },
d1680 3
a1682 5
	{ 0x0E01, 0x0E2E },
	{ 0x0E30, 0x0E3A },
	{ 0x0E40, 0x0E45 },
	{ 0x0E47, 0x0E4E },
	{ 0x0E50, 0x0E59 },
d1699 1
a1699 2
	{ 0x0ED0, 0x0ED9 },
	{ 0x0EDC, 0x0EDD },
a1700 1
	{ 0x0F20, 0x0F29 },
d1702 4
a1705 7
	{ 0x0F49, 0x0F6A },
	{ 0x0F88, 0x0F8B },
	{ 0x1000, 0x1021 },
	{ 0x1023, 0x1027 },
	{ 0x1029, 0x1029 },
	{ 0x102A, 0x102A },
	{ 0x1040, 0x1049 },
d1707 6
d1714 4
a1717 7
	{ 0x10D0, 0x10F8 },
	{ 0x1100, 0x1159 },
	{ 0x115F, 0x11A2 },
	{ 0x11A8, 0x11F9 },
	{ 0x1200, 0x1206 },
	{ 0x1208, 0x1246 },
	{ 0x1248, 0x1248 },
d1722 1
a1722 2
	{ 0x1260, 0x1286 },
	{ 0x1288, 0x1288 },
d1724 1
a1724 2
	{ 0x1290, 0x12AE },
	{ 0x12B0, 0x12B0 },
d1729 2
a1730 5
	{ 0x12C8, 0x12CE },
	{ 0x12D0, 0x12D6 },
	{ 0x12D8, 0x12EE },
	{ 0x12F0, 0x130E },
	{ 0x1310, 0x1310 },
d1732 2
a1733 4
	{ 0x1318, 0x131E },
	{ 0x1320, 0x1346 },
	{ 0x1348, 0x135A },
	{ 0x1369, 0x1371 },
d1736 1
a1736 1
	{ 0x166F, 0x1676 },
a1738 1
	{ 0x16EE, 0x16F0 },
a1747 2
	{ 0x17E0, 0x17E9 },
	{ 0x1810, 0x1819 },
d1750 23
a1772 3
	{ 0x1E00, 0x1E9B },
	{ 0x1EA0, 0x1EF9 },
	{ 0x1F00, 0x1F15 },
d1793 1
d1801 4
a1804 4
	{ 0x2128, 0x212D },
	{ 0x212F, 0x2131 },
	{ 0x2133, 0x2139 },
	{ 0x213D, 0x213F },
d1806 25
a1830 4
	{ 0x2160, 0x2183 },
	{ 0x249C, 0x24E9 },
	{ 0x3005, 0x3007 },
	{ 0x3021, 0x3029 },
d1832 1
a1832 1
	{ 0x3038, 0x303C },
d1837 1
a1837 1
	{ 0x3105, 0x312C },
d1839 1
a1839 1
	{ 0x31A0, 0x31B7 },
d1842 1
a1842 1
	{ 0x4E00, 0x9FA5 },
d1844 45
d1890 4
a1893 2
	{ 0xF900, 0xFA2D },
	{ 0xFA30, 0xFA6A },
d1901 3
a1903 6
	{ 0xFB40, 0xFB40 },
	{ 0xFB41, 0xFB41 },
	{ 0xFB43, 0xFB43 },
	{ 0xFB44, 0xFB44 },
	{ 0xFB46, 0xFB4F },
	{ 0xFB50, 0xFBB1 },
a1909 1
	{ 0xFF10, 0xFF19 },
d1917 116
a2032 38
	{ 0x00010300, 0x0001031E },
	{ 0x00010330, 0x0001034A },
	{ 0x00010400, 0x00010425 },
	{ 0x00010428, 0x0001044D },
	{ 0x0001D400, 0x0001D454 },
	{ 0x0001D456, 0x0001D49C },
	{ 0x0001D49E, 0x0001D49F },
	{ 0x0001D4A2, 0x0001D4A2 },
	{ 0x0001D4A5, 0x0001D4A6 },
	{ 0x0001D4A9, 0x0001D4AC },
	{ 0x0001D4AE, 0x0001D4B9 },
	{ 0x0001D4BB, 0x0001D4BB },
	{ 0x0001D4BD, 0x0001D4C0 },
	{ 0x0001D4C2, 0x0001D4C3 },
	{ 0x0001D4C5, 0x0001D505 },
	{ 0x0001D507, 0x0001D50A },
	{ 0x0001D50D, 0x0001D514 },
	{ 0x0001D516, 0x0001D51C },
	{ 0x0001D51E, 0x0001D539 },
	{ 0x0001D53B, 0x0001D53E },
	{ 0x0001D540, 0x0001D544 },
	{ 0x0001D546, 0x0001D546 },
	{ 0x0001D54A, 0x0001D550 },
	{ 0x0001D552, 0x0001D6A3 },
	{ 0x0001D6A8, 0x0001D6C0 },
	{ 0x0001D6C2, 0x0001D6DA },
	{ 0x0001D6DC, 0x0001D6FA },
	{ 0x0001D6FC, 0x0001D714 },
	{ 0x0001D716, 0x0001D734 },
	{ 0x0001D736, 0x0001D74E },
	{ 0x0001D750, 0x0001D76E },
	{ 0x0001D770, 0x0001D788 },
	{ 0x0001D78A, 0x0001D7A8 },
	{ 0x0001D7AA, 0x0001D7C2 },
	{ 0x0001D7C4, 0x0001D7C9 },
	{ 0x0001D7CE, 0x0001D7FF },
	{ 0x00020000, 0x0002A6D6 },
	{ 0x0002F800, 0x0002FA1D }
d2037 1
a2037 1
int joe_iswalpha_(struct charmap *foo, int c)
d2039 1
a2039 1
	return ((c == 0x5F) ? 1 : joe_iswalpha(foo, c));
d2042 1
a2042 1
int joe_iswalnum_(struct charmap *foo, int c)
d2044 1
a2044 2
	return (((c >= 0x30 && c <= 0x39) || (c == 0x5F)) ?
	    1 : joe_iswalpha(foo, c));
d2047 7
a2053 7
struct mb_ucsrange data_wctype_digit[] = {
	{ 0x0030, 0x0039 }
};

MAKE_ISW(digit)

struct mb_ucsrange data_wctype_space[] = {
d2059 1
a2059 2
	{ 0x2028, 0x2028 },
	{ 0x2029, 0x2029 },
d2066 5
a2070 1
struct mb_ucsrange data_wctype_ctrl[] = {
d2073 1
a2073 2
	{ 0x2028, 0x2028 },
	{ 0x2029, 0x2029 }
d2076 1
a2076 1
MAKE_ISW(ctrl)
d2078 1
a2078 1
struct mb_ucsrange data_wctype_punct[] = {
d2089 1
a2089 2
	{ 0x02B9, 0x02BA },
	{ 0x02C2, 0x02CF },
d2091 5
a2095 5
	{ 0x02E5, 0x02ED },
	{ 0x0300, 0x0344 },
	{ 0x0346, 0x034F },
	{ 0x0360, 0x036F },
	{ 0x0374, 0x0375 },
d2100 1
a2100 2
	{ 0x0482, 0x0486 },
	{ 0x0488, 0x0489 },
d2103 2
a2104 3
	{ 0x0591, 0x05A1 },
	{ 0x05A3, 0x05B9 },
	{ 0x05BB, 0x05C4 },
d2106 4
a2109 5
	{ 0x060C, 0x060C },
	{ 0x061B, 0x061B },
	{ 0x061F, 0x061F },
	{ 0x064B, 0x0655 },
	{ 0x066A, 0x066D },
d2114 1
d2121 16
a2136 6
	{ 0x0901, 0x0903 },
	{ 0x093C, 0x093C },
	{ 0x093E, 0x094D },
	{ 0x0951, 0x0954 },
	{ 0x0962, 0x0965 },
	{ 0x0970, 0x0970 },
d2144 3
a2146 2
	{ 0x09F2, 0x09FA },
	{ 0x0A02, 0x0A02 },
d2151 3
a2153 1
	{ 0x0A70, 0x0A71 },
d2159 2
d2163 1
a2163 1
	{ 0x0B3E, 0x0B43 },
d2167 3
a2169 1
	{ 0x0B70, 0x0B70 },
d2175 1
a2175 1
	{ 0x0BF0, 0x0BF2 },
d2181 3
d2185 1
d2190 2
d2193 1
a2193 1
	{ 0x0D3E, 0x0D43 },
d2197 3
d2206 2
a2207 1
	{ 0x0E2F, 0x0E2F },
d2209 1
a2209 3
	{ 0x0E46, 0x0E46 },
	{ 0x0E4F, 0x0E4F },
	{ 0x0E5A, 0x0E5B },
d2214 2
a2215 2
	{ 0x0F01, 0x0F1F },
	{ 0x0F2A, 0x0F3F },
d2217 1
a2217 1
	{ 0x0F90, 0x0F97 },
d2220 3
a2222 4
	{ 0x0FCF, 0x0FCF },
	{ 0x102C, 0x1032 },
	{ 0x1036, 0x1039 },
	{ 0x104A, 0x104F },
d2224 6
d2231 3
a2233 2
	{ 0x1361, 0x1368 },
	{ 0x1372, 0x137C },
d2235 1
d2237 1
a2237 1
	{ 0x16EB, 0x16ED },
d2244 3
d2248 1
d2250 34
d2290 2
a2291 6
	{ 0x2007, 0x2007 },
	{ 0x200C, 0x2027 },
	{ 0x202A, 0x2052 },
	{ 0x2057, 0x2057 },
	{ 0x2060, 0x2063 },
	{ 0x206A, 0x2070 },
d2294 2
a2295 2
	{ 0x20A0, 0x20B1 },
	{ 0x20D0, 0x20EA },
d2304 1
d2306 1
a2306 2
	{ 0x2132, 0x2132 },
	{ 0x213A, 0x213A },
d2308 5
a2312 3
	{ 0x214A, 0x214B },
	{ 0x2153, 0x215F },
	{ 0x2190, 0x23CE },
d2315 11
a2325 19
	{ 0x2460, 0x249B },
	{ 0x24EA, 0x24FE },
	{ 0x2500, 0x2613 },
	{ 0x2616, 0x2617 },
	{ 0x2619, 0x267D },
	{ 0x2680, 0x2689 },
	{ 0x2701, 0x2704 },
	{ 0x2706, 0x2709 },
	{ 0x270C, 0x2727 },
	{ 0x2729, 0x274B },
	{ 0x274D, 0x274D },
	{ 0x274F, 0x2752 },
	{ 0x2756, 0x2756 },
	{ 0x2758, 0x275E },
	{ 0x2761, 0x2794 },
	{ 0x2798, 0x27AF },
	{ 0x27B1, 0x27BE },
	{ 0x27D0, 0x27EB },
	{ 0x27F0, 0x2AFF },
d2330 3
a2332 4
	{ 0x3001, 0x3004 },
	{ 0x3008, 0x3020 },
	{ 0x302A, 0x3030 },
	{ 0x3036, 0x3037 },
d2338 5
a2342 8
	{ 0x3200, 0x321C },
	{ 0x3220, 0x3243 },
	{ 0x3251, 0x327B },
	{ 0x327F, 0x32CB },
	{ 0x32D0, 0x32FE },
	{ 0x3300, 0x3376 },
	{ 0x337B, 0x33DD },
	{ 0x33E0, 0x33FE },
d2344 45
d2392 1
d2394 4
a2397 5
	{ 0xFDFC, 0xFDFC },
	{ 0xFE00, 0xFE0F },
	{ 0xFE20, 0xFE23 },
	{ 0xFE30, 0xFE44 },
	{ 0xFE49, 0xFE52 },
d2401 1
a2401 2
	{ 0xFF01, 0xFF0F },
	{ 0xFF1A, 0xFF20 },
d2407 100
a2506 18
	{ 0x00010320, 0x00010323 },
	{ 0x0001D000, 0x0001D0F5 },
	{ 0x0001D100, 0x0001D126 },
	{ 0x0001D12A, 0x0001D1DD },
	{ 0x0001D6C1, 0x0001D6C1 },
	{ 0x0001D6DB, 0x0001D6DB },
	{ 0x0001D6FB, 0x0001D6FB },
	{ 0x0001D715, 0x0001D715 },
	{ 0x0001D735, 0x0001D735 },
	{ 0x0001D74F, 0x0001D74F },
	{ 0x0001D76F, 0x0001D76F },
	{ 0x0001D789, 0x0001D789 },
	{ 0x0001D7A9, 0x0001D7A9 },
	{ 0x0001D7C3, 0x0001D7C3 },
	{ 0x000E0001, 0x000E0001 },
	{ 0x000E0020, 0x000E007F },
	{ 0x000F0000, 0x000FFFFD },
	{ 0x00100000, 0x0010FFFD }
d2511 1
a2511 1
struct mb_ucsrange data_wctype_graph[] = {
d2513 2
a2514 9
	{ 0x00A0, 0x0220 },
	{ 0x0222, 0x0233 },
	{ 0x0250, 0x02AD },
	{ 0x02B0, 0x02EE },
	{ 0x0300, 0x034F },
	{ 0x0360, 0x036F },
	{ 0x0374, 0x0375 },
	{ 0x037A, 0x037A },
	{ 0x037E, 0x037E },
d2518 1
a2518 7
	{ 0x03A3, 0x03CE },
	{ 0x03D0, 0x03F6 },
	{ 0x0400, 0x0486 },
	{ 0x0488, 0x04CE },
	{ 0x04D0, 0x04F5 },
	{ 0x04F8, 0x04F9 },
	{ 0x0500, 0x050F },
d2523 2
a2524 3
	{ 0x0591, 0x05A1 },
	{ 0x05A3, 0x05B9 },
	{ 0x05BB, 0x05C4 },
d2527 15
a2541 16
	{ 0x060C, 0x060C },
	{ 0x061B, 0x061B },
	{ 0x061F, 0x061F },
	{ 0x0621, 0x063A },
	{ 0x0640, 0x0655 },
	{ 0x0660, 0x06ED },
	{ 0x06F0, 0x06FE },
	{ 0x0700, 0x070D },
	{ 0x070F, 0x072C },
	{ 0x0730, 0x074A },
	{ 0x0780, 0x07B1 },
	{ 0x0901, 0x0903 },
	{ 0x0905, 0x0939 },
	{ 0x093C, 0x094D },
	{ 0x0950, 0x0954 },
	{ 0x0958, 0x0970 },
d2549 1
a2549 2
	{ 0x09BC, 0x09BC },
	{ 0x09BE, 0x09C4 },
d2551 1
a2551 1
	{ 0x09CB, 0x09CD },
d2555 2
a2556 2
	{ 0x09E6, 0x09FA },
	{ 0x0A02, 0x0A02 },
d2568 1
d2571 1
a2571 1
	{ 0x0A66, 0x0A74 },
d2573 1
a2573 2
	{ 0x0A85, 0x0A8B },
	{ 0x0A8D, 0x0A8D },
d2583 2
a2584 2
	{ 0x0AE0, 0x0AE0 },
	{ 0x0AE6, 0x0AEF },
d2591 2
a2592 2
	{ 0x0B36, 0x0B39 },
	{ 0x0B3C, 0x0B43 },
d2597 2
a2598 2
	{ 0x0B5F, 0x0B61 },
	{ 0x0B66, 0x0B70 },
d2608 1
a2608 2
	{ 0x0BAE, 0x0BB5 },
	{ 0x0BB7, 0x0BB9 },
d2612 1
d2614 1
a2614 1
	{ 0x0BE7, 0x0BF2 },
d2621 1
a2621 1
	{ 0x0C3E, 0x0C44 },
d2625 2
a2626 1
	{ 0x0C60, 0x0C61 },
d2628 1
d2635 1
a2635 1
	{ 0x0CBE, 0x0CC4 },
d2640 1
a2640 1
	{ 0x0CE0, 0x0CE1 },
d2642 1
d2646 2
a2647 3
	{ 0x0D12, 0x0D28 },
	{ 0x0D2A, 0x0D39 },
	{ 0x0D3E, 0x0D43 },
d2649 1
a2649 1
	{ 0x0D4A, 0x0D4D },
d2651 3
a2653 2
	{ 0x0D60, 0x0D61 },
	{ 0x0D66, 0x0D6F },
d2684 1
a2684 1
	{ 0x0EDC, 0x0EDD },
d2686 2
a2687 3
	{ 0x0F49, 0x0F6A },
	{ 0x0F71, 0x0F8B },
	{ 0x0F90, 0x0F97 },
d2690 5
a2694 16
	{ 0x0FCF, 0x0FCF },
	{ 0x1000, 0x1021 },
	{ 0x1023, 0x1027 },
	{ 0x1029, 0x102A },
	{ 0x102C, 0x1032 },
	{ 0x1036, 0x1039 },
	{ 0x1040, 0x1059 },
	{ 0x10A0, 0x10C5 },
	{ 0x10D0, 0x10F8 },
	{ 0x10FB, 0x10FB },
	{ 0x1100, 0x1159 },
	{ 0x115F, 0x11A2 },
	{ 0x11A8, 0x11F9 },
	{ 0x1200, 0x1206 },
	{ 0x1208, 0x1246 },
	{ 0x1248, 0x1248 },
d2699 1
a2699 2
	{ 0x1260, 0x1286 },
	{ 0x1288, 0x1288 },
d2701 1
a2701 2
	{ 0x1290, 0x12AE },
	{ 0x12B0, 0x12B0 },
d2706 2
a2707 5
	{ 0x12C8, 0x12CE },
	{ 0x12D0, 0x12D6 },
	{ 0x12D8, 0x12EE },
	{ 0x12F0, 0x130E },
	{ 0x1310, 0x1310 },
d2709 3
a2711 4
	{ 0x1318, 0x131E },
	{ 0x1320, 0x1346 },
	{ 0x1348, 0x135A },
	{ 0x1361, 0x137C },
d2713 1
a2713 2
	{ 0x1401, 0x1676 },
	{ 0x1681, 0x169C },
d2722 1
a2722 1
	{ 0x1780, 0x17DC },
d2724 1
d2728 27
a2754 4
	{ 0x1880, 0x18A9 },
	{ 0x1E00, 0x1E9B },
	{ 0x1EA0, 0x1EF9 },
	{ 0x1F00, 0x1F15 },
d2770 2
a2771 6
	{ 0x2007, 0x2007 },
	{ 0x200C, 0x2027 },
	{ 0x202A, 0x2052 },
	{ 0x2057, 0x2057 },
	{ 0x2060, 0x2063 },
	{ 0x206A, 0x2071 },
d2773 5
a2777 6
	{ 0x20A0, 0x20B1 },
	{ 0x20D0, 0x20EA },
	{ 0x2100, 0x213A },
	{ 0x213D, 0x214B },
	{ 0x2153, 0x2183 },
	{ 0x2190, 0x23CE },
d2780 21
a2800 18
	{ 0x2460, 0x24FE },
	{ 0x2500, 0x2613 },
	{ 0x2616, 0x2617 },
	{ 0x2619, 0x267D },
	{ 0x2680, 0x2689 },
	{ 0x2701, 0x2704 },
	{ 0x2706, 0x2709 },
	{ 0x270C, 0x2727 },
	{ 0x2729, 0x274B },
	{ 0x274D, 0x274D },
	{ 0x274F, 0x2752 },
	{ 0x2756, 0x2756 },
	{ 0x2758, 0x275E },
	{ 0x2761, 0x2794 },
	{ 0x2798, 0x27AF },
	{ 0x27B1, 0x27BE },
	{ 0x27D0, 0x27EB },
	{ 0x27F0, 0x2AFF },
d2805 1
a2805 1
	{ 0x3001, 0x303F },
d2808 1
a2808 1
	{ 0x3105, 0x312C },
d2810 6
a2815 11
	{ 0x3190, 0x31B7 },
	{ 0x31F0, 0x321C },
	{ 0x3220, 0x3243 },
	{ 0x3251, 0x327B },
	{ 0x327F, 0x32CB },
	{ 0x32D0, 0x32FE },
	{ 0x3300, 0x3376 },
	{ 0x337B, 0x33DD },
	{ 0x33E0, 0x33FE },
	{ 0x3400, 0x4DB5 },
	{ 0x4E00, 0x9FA5 },
d2818 30
d2849 4
a2852 2
	{ 0xE000, 0xFA2D },
	{ 0xFA30, 0xFA6A },
d2860 1
a2860 1
	{ 0xFB46, 0xFBB1 },
d2864 4
a2867 5
	{ 0xFDF0, 0xFDFC },
	{ 0xFE00, 0xFE0F },
	{ 0xFE20, 0xFE23 },
	{ 0xFE30, 0xFE46 },
	{ 0xFE49, 0xFE52 },
d2881 171
a3051 36
	{ 0x00010300, 0x0001031E },
	{ 0x00010320, 0x00010323 },
	{ 0x00010330, 0x0001034A },
	{ 0x00010400, 0x00010425 },
	{ 0x00010428, 0x0001044D },
	{ 0x0001D000, 0x0001D0F5 },
	{ 0x0001D100, 0x0001D126 },
	{ 0x0001D12A, 0x0001D1DD },
	{ 0x0001D400, 0x0001D454 },
	{ 0x0001D456, 0x0001D49C },
	{ 0x0001D49E, 0x0001D49F },
	{ 0x0001D4A2, 0x0001D4A2 },
	{ 0x0001D4A5, 0x0001D4A6 },
	{ 0x0001D4A9, 0x0001D4AC },
	{ 0x0001D4AE, 0x0001D4B9 },
	{ 0x0001D4BB, 0x0001D4BB },
	{ 0x0001D4BD, 0x0001D4C0 },
	{ 0x0001D4C2, 0x0001D4C3 },
	{ 0x0001D4C5, 0x0001D505 },
	{ 0x0001D507, 0x0001D50A },
	{ 0x0001D50D, 0x0001D514 },
	{ 0x0001D516, 0x0001D51C },
	{ 0x0001D51E, 0x0001D539 },
	{ 0x0001D53B, 0x0001D53E },
	{ 0x0001D540, 0x0001D544 },
	{ 0x0001D546, 0x0001D546 },
	{ 0x0001D54A, 0x0001D550 },
	{ 0x0001D552, 0x0001D6A3 },
	{ 0x0001D6A8, 0x0001D7C9 },
	{ 0x0001D7CE, 0x0001D7FF },
	{ 0x00020000, 0x0002A6D6 },
	{ 0x0002F800, 0x0002FA1D },
	{ 0x000E0001, 0x000E0001 },
	{ 0x000E0020, 0x000E007F },
	{ 0x000F0000, 0x000FFFFD },
	{ 0x00100000, 0x0010FFFD }
d3056 1
a3056 1
struct mb_ucsrange data_wctype_print[] = {
d3058 2
a3059 9
	{ 0x00A0, 0x0220 },
	{ 0x0222, 0x0233 },
	{ 0x0250, 0x02AD },
	{ 0x02B0, 0x02EE },
	{ 0x0300, 0x034F },
	{ 0x0360, 0x036F },
	{ 0x0374, 0x0375 },
	{ 0x037A, 0x037A },
	{ 0x037E, 0x037E },
d3063 1
a3063 7
	{ 0x03A3, 0x03CE },
	{ 0x03D0, 0x03F6 },
	{ 0x0400, 0x0486 },
	{ 0x0488, 0x04CE },
	{ 0x04D0, 0x04F5 },
	{ 0x04F8, 0x04F9 },
	{ 0x0500, 0x050F },
d3068 2
a3069 3
	{ 0x0591, 0x05A1 },
	{ 0x05A3, 0x05B9 },
	{ 0x05BB, 0x05C4 },
d3072 15
a3086 16
	{ 0x060C, 0x060C },
	{ 0x061B, 0x061B },
	{ 0x061F, 0x061F },
	{ 0x0621, 0x063A },
	{ 0x0640, 0x0655 },
	{ 0x0660, 0x06ED },
	{ 0x06F0, 0x06FE },
	{ 0x0700, 0x070D },
	{ 0x070F, 0x072C },
	{ 0x0730, 0x074A },
	{ 0x0780, 0x07B1 },
	{ 0x0901, 0x0903 },
	{ 0x0905, 0x0939 },
	{ 0x093C, 0x094D },
	{ 0x0950, 0x0954 },
	{ 0x0958, 0x0970 },
d3094 1
a3094 2
	{ 0x09BC, 0x09BC },
	{ 0x09BE, 0x09C4 },
d3096 1
a3096 1
	{ 0x09CB, 0x09CD },
d3100 2
a3101 2
	{ 0x09E6, 0x09FA },
	{ 0x0A02, 0x0A02 },
d3113 1
d3116 1
a3116 1
	{ 0x0A66, 0x0A74 },
d3118 1
a3118 2
	{ 0x0A85, 0x0A8B },
	{ 0x0A8D, 0x0A8D },
d3128 2
a3129 2
	{ 0x0AE0, 0x0AE0 },
	{ 0x0AE6, 0x0AEF },
d3136 2
a3137 2
	{ 0x0B36, 0x0B39 },
	{ 0x0B3C, 0x0B43 },
d3142 2
a3143 2
	{ 0x0B5F, 0x0B61 },
	{ 0x0B66, 0x0B70 },
d3153 1
a3153 2
	{ 0x0BAE, 0x0BB5 },
	{ 0x0BB7, 0x0BB9 },
d3157 1
d3159 1
a3159 1
	{ 0x0BE7, 0x0BF2 },
d3166 1
a3166 1
	{ 0x0C3E, 0x0C44 },
d3170 2
a3171 1
	{ 0x0C60, 0x0C61 },
d3173 1
d3180 1
a3180 1
	{ 0x0CBE, 0x0CC4 },
d3185 1
a3185 1
	{ 0x0CE0, 0x0CE1 },
d3187 1
d3191 2
a3192 3
	{ 0x0D12, 0x0D28 },
	{ 0x0D2A, 0x0D39 },
	{ 0x0D3E, 0x0D43 },
d3194 1
a3194 1
	{ 0x0D4A, 0x0D4D },
d3196 3
a3198 2
	{ 0x0D60, 0x0D61 },
	{ 0x0D66, 0x0D6F },
d3229 1
a3229 1
	{ 0x0EDC, 0x0EDD },
d3231 2
a3232 3
	{ 0x0F49, 0x0F6A },
	{ 0x0F71, 0x0F8B },
	{ 0x0F90, 0x0F97 },
d3235 5
a3239 16
	{ 0x0FCF, 0x0FCF },
	{ 0x1000, 0x1021 },
	{ 0x1023, 0x1027 },
	{ 0x1029, 0x102A },
	{ 0x102C, 0x1032 },
	{ 0x1036, 0x1039 },
	{ 0x1040, 0x1059 },
	{ 0x10A0, 0x10C5 },
	{ 0x10D0, 0x10F8 },
	{ 0x10FB, 0x10FB },
	{ 0x1100, 0x1159 },
	{ 0x115F, 0x11A2 },
	{ 0x11A8, 0x11F9 },
	{ 0x1200, 0x1206 },
	{ 0x1208, 0x1246 },
	{ 0x1248, 0x1248 },
d3244 1
a3244 2
	{ 0x1260, 0x1286 },
	{ 0x1288, 0x1288 },
d3246 1
a3246 2
	{ 0x1290, 0x12AE },
	{ 0x12B0, 0x12B0 },
d3251 2
a3252 5
	{ 0x12C8, 0x12CE },
	{ 0x12D0, 0x12D6 },
	{ 0x12D8, 0x12EE },
	{ 0x12F0, 0x130E },
	{ 0x1310, 0x1310 },
d3254 3
a3256 4
	{ 0x1318, 0x131E },
	{ 0x1320, 0x1346 },
	{ 0x1348, 0x135A },
	{ 0x1361, 0x137C },
d3258 1
a3258 2
	{ 0x1401, 0x1676 },
	{ 0x1680, 0x169C },
d3267 1
a3267 1
	{ 0x1780, 0x17DC },
d3269 1
d3273 27
a3299 4
	{ 0x1880, 0x18A9 },
	{ 0x1E00, 0x1E9B },
	{ 0x1EA0, 0x1EF9 },
	{ 0x1F00, 0x1F15 },
d3315 2
a3316 5
	{ 0x2000, 0x2027 },
	{ 0x202A, 0x2052 },
	{ 0x2057, 0x2057 },
	{ 0x205F, 0x2063 },
	{ 0x206A, 0x2071 },
d3318 5
a3322 6
	{ 0x20A0, 0x20B1 },
	{ 0x20D0, 0x20EA },
	{ 0x2100, 0x213A },
	{ 0x213D, 0x214B },
	{ 0x2153, 0x2183 },
	{ 0x2190, 0x23CE },
d3325 21
a3345 18
	{ 0x2460, 0x24FE },
	{ 0x2500, 0x2613 },
	{ 0x2616, 0x2617 },
	{ 0x2619, 0x267D },
	{ 0x2680, 0x2689 },
	{ 0x2701, 0x2704 },
	{ 0x2706, 0x2709 },
	{ 0x270C, 0x2727 },
	{ 0x2729, 0x274B },
	{ 0x274D, 0x274D },
	{ 0x274F, 0x2752 },
	{ 0x2756, 0x2756 },
	{ 0x2758, 0x275E },
	{ 0x2761, 0x2794 },
	{ 0x2798, 0x27AF },
	{ 0x27B1, 0x27BE },
	{ 0x27D0, 0x27EB },
	{ 0x27F0, 0x2AFF },
d3353 1
a3353 1
	{ 0x3105, 0x312C },
d3355 6
a3360 11
	{ 0x3190, 0x31B7 },
	{ 0x31F0, 0x321C },
	{ 0x3220, 0x3243 },
	{ 0x3251, 0x327B },
	{ 0x327F, 0x32CB },
	{ 0x32D0, 0x32FE },
	{ 0x3300, 0x3376 },
	{ 0x337B, 0x33DD },
	{ 0x33E0, 0x33FE },
	{ 0x3400, 0x4DB5 },
	{ 0x4E00, 0x9FA5 },
d3363 30
d3394 4
a3397 2
	{ 0xE000, 0xFA2D },
	{ 0xFA30, 0xFA6A },
d3405 1
a3405 1
	{ 0xFB46, 0xFBB1 },
d3409 4
a3412 5
	{ 0xFDF0, 0xFDFC },
	{ 0xFE00, 0xFE0F },
	{ 0xFE20, 0xFE23 },
	{ 0xFE30, 0xFE46 },
	{ 0xFE49, 0xFE52 },
d3426 171
a3596 36
	{ 0x00010300, 0x0001031E },
	{ 0x00010320, 0x00010323 },
	{ 0x00010330, 0x0001034A },
	{ 0x00010400, 0x00010425 },
	{ 0x00010428, 0x0001044D },
	{ 0x0001D000, 0x0001D0F5 },
	{ 0x0001D100, 0x0001D126 },
	{ 0x0001D12A, 0x0001D1DD },
	{ 0x0001D400, 0x0001D454 },
	{ 0x0001D456, 0x0001D49C },
	{ 0x0001D49E, 0x0001D49F },
	{ 0x0001D4A2, 0x0001D4A2 },
	{ 0x0001D4A5, 0x0001D4A6 },
	{ 0x0001D4A9, 0x0001D4AC },
	{ 0x0001D4AE, 0x0001D4B9 },
	{ 0x0001D4BB, 0x0001D4BB },
	{ 0x0001D4BD, 0x0001D4C0 },
	{ 0x0001D4C2, 0x0001D4C3 },
	{ 0x0001D4C5, 0x0001D505 },
	{ 0x0001D507, 0x0001D50A },
	{ 0x0001D50D, 0x0001D514 },
	{ 0x0001D516, 0x0001D51C },
	{ 0x0001D51E, 0x0001D539 },
	{ 0x0001D53B, 0x0001D53E },
	{ 0x0001D540, 0x0001D544 },
	{ 0x0001D546, 0x0001D546 },
	{ 0x0001D54A, 0x0001D550 },
	{ 0x0001D552, 0x0001D6A3 },
	{ 0x0001D6A8, 0x0001D7C9 },
	{ 0x0001D7CE, 0x0001D7FF },
	{ 0x00020000, 0x0002A6D6 },
	{ 0x0002F800, 0x0002FA1D },
	{ 0x000E0001, 0x000E0001 },
	{ 0x000E0020, 0x000E007F },
	{ 0x000F0000, 0x000FFFFD },
	{ 0x00100000, 0x0010FFFD }
d3601 1
a3601 1
struct mb_ucsrange data_wctype_xdigit[] = {
d3609 8
a3616 1
struct mb_ucsrange data_wctype_blank[] = {
d3630 627
a4256 760
static struct mb_ucsrange data_wctype_toupper[] = {
	{ 0x0061, 0x0041 },
	{ 0x0062, 0x0042 },
	{ 0x0063, 0x0043 },
	{ 0x0064, 0x0044 },
	{ 0x0065, 0x0045 },
	{ 0x0066, 0x0046 },
	{ 0x0067, 0x0047 },
	{ 0x0068, 0x0048 },
	{ 0x0069, 0x0049 },
	{ 0x006A, 0x004A },
	{ 0x006B, 0x004B },
	{ 0x006C, 0x004C },
	{ 0x006D, 0x004D },
	{ 0x006E, 0x004E },
	{ 0x006F, 0x004F },
	{ 0x0070, 0x0050 },
	{ 0x0071, 0x0051 },
	{ 0x0072, 0x0052 },
	{ 0x0073, 0x0053 },
	{ 0x0074, 0x0054 },
	{ 0x0075, 0x0055 },
	{ 0x0076, 0x0056 },
	{ 0x0077, 0x0057 },
	{ 0x0078, 0x0058 },
	{ 0x0079, 0x0059 },
	{ 0x007A, 0x005A },
	{ 0x00B5, 0x039C },
	{ 0x00E0, 0x00C0 },
	{ 0x00E1, 0x00C1 },
	{ 0x00E2, 0x00C2 },
	{ 0x00E3, 0x00C3 },
	{ 0x00E4, 0x00C4 },
	{ 0x00E5, 0x00C5 },
	{ 0x00E6, 0x00C6 },
	{ 0x00E7, 0x00C7 },
	{ 0x00E8, 0x00C8 },
	{ 0x00E9, 0x00C9 },
	{ 0x00EA, 0x00CA },
	{ 0x00EB, 0x00CB },
	{ 0x00EC, 0x00CC },
	{ 0x00ED, 0x00CD },
	{ 0x00EE, 0x00CE },
	{ 0x00EF, 0x00CF },
	{ 0x00F0, 0x00D0 },
	{ 0x00F1, 0x00D1 },
	{ 0x00F2, 0x00D2 },
	{ 0x00F3, 0x00D3 },
	{ 0x00F4, 0x00D4 },
	{ 0x00F5, 0x00D5 },
	{ 0x00F6, 0x00D6 },
	{ 0x00F8, 0x00D8 },
	{ 0x00F9, 0x00D9 },
	{ 0x00FA, 0x00DA },
	{ 0x00FB, 0x00DB },
	{ 0x00FC, 0x00DC },
	{ 0x00FD, 0x00DD },
	{ 0x00FE, 0x00DE },
	{ 0x00FF, 0x0178 },
	{ 0x0101, 0x0100 },
	{ 0x0103, 0x0102 },
	{ 0x0105, 0x0104 },
	{ 0x0107, 0x0106 },
	{ 0x0109, 0x0108 },
	{ 0x010B, 0x010A },
	{ 0x010D, 0x010C },
	{ 0x010F, 0x010E },
	{ 0x0111, 0x0110 },
	{ 0x0113, 0x0112 },
	{ 0x0115, 0x0114 },
	{ 0x0117, 0x0116 },
	{ 0x0119, 0x0118 },
	{ 0x011B, 0x011A },
	{ 0x011D, 0x011C },
	{ 0x011F, 0x011E },
	{ 0x0121, 0x0120 },
	{ 0x0123, 0x0122 },
	{ 0x0125, 0x0124 },
	{ 0x0127, 0x0126 },
	{ 0x0129, 0x0128 },
	{ 0x012B, 0x012A },
	{ 0x012D, 0x012C },
	{ 0x012F, 0x012E },
	{ 0x0131, 0x0049 },
	{ 0x0133, 0x0132 },
	{ 0x0135, 0x0134 },
	{ 0x0137, 0x0136 },
	{ 0x013A, 0x0139 },
	{ 0x013C, 0x013B },
	{ 0x013E, 0x013D },
	{ 0x0140, 0x013F },
	{ 0x0142, 0x0141 },
	{ 0x0144, 0x0143 },
	{ 0x0146, 0x0145 },
	{ 0x0148, 0x0147 },
	{ 0x014B, 0x014A },
	{ 0x014D, 0x014C },
	{ 0x014F, 0x014E },
	{ 0x0151, 0x0150 },
	{ 0x0153, 0x0152 },
	{ 0x0155, 0x0154 },
	{ 0x0157, 0x0156 },
	{ 0x0159, 0x0158 },
	{ 0x015B, 0x015A },
	{ 0x015D, 0x015C },
	{ 0x015F, 0x015E },
	{ 0x0161, 0x0160 },
	{ 0x0163, 0x0162 },
	{ 0x0165, 0x0164 },
	{ 0x0167, 0x0166 },
	{ 0x0169, 0x0168 },
	{ 0x016B, 0x016A },
	{ 0x016D, 0x016C },
	{ 0x016F, 0x016E },
	{ 0x0171, 0x0170 },
	{ 0x0173, 0x0172 },
	{ 0x0175, 0x0174 },
	{ 0x0177, 0x0176 },
	{ 0x017A, 0x0179 },
	{ 0x017C, 0x017B },
	{ 0x017E, 0x017D },
	{ 0x017F, 0x0053 },
	{ 0x0183, 0x0182 },
	{ 0x0185, 0x0184 },
	{ 0x0188, 0x0187 },
	{ 0x018C, 0x018B },
	{ 0x0192, 0x0191 },
	{ 0x0195, 0x01F6 },
	{ 0x0199, 0x0198 },
	{ 0x019E, 0x0220 },
	{ 0x01A1, 0x01A0 },
	{ 0x01A3, 0x01A2 },
	{ 0x01A5, 0x01A4 },
	{ 0x01A8, 0x01A7 },
	{ 0x01AD, 0x01AC },
	{ 0x01B0, 0x01AF },
	{ 0x01B4, 0x01B3 },
	{ 0x01B6, 0x01B5 },
	{ 0x01B9, 0x01B8 },
	{ 0x01BD, 0x01BC },
	{ 0x01BF, 0x01F7 },
	{ 0x01C5, 0x01C4 },
	{ 0x01C6, 0x01C4 },
	{ 0x01C8, 0x01C7 },
	{ 0x01C9, 0x01C7 },
	{ 0x01CB, 0x01CA },
	{ 0x01CC, 0x01CA },
	{ 0x01CE, 0x01CD },
	{ 0x01D0, 0x01CF },
	{ 0x01D2, 0x01D1 },
	{ 0x01D4, 0x01D3 },
	{ 0x01D6, 0x01D5 },
	{ 0x01D8, 0x01D7 },
	{ 0x01DA, 0x01D9 },
	{ 0x01DC, 0x01DB },
	{ 0x01DD, 0x018E },
	{ 0x01DF, 0x01DE },
	{ 0x01E1, 0x01E0 },
	{ 0x01E3, 0x01E2 },
	{ 0x01E5, 0x01E4 },
	{ 0x01E7, 0x01E6 },
	{ 0x01E9, 0x01E8 },
	{ 0x01EB, 0x01EA },
	{ 0x01ED, 0x01EC },
	{ 0x01EF, 0x01EE },
	{ 0x01F2, 0x01F1 },
	{ 0x01F3, 0x01F1 },
	{ 0x01F5, 0x01F4 },
	{ 0x01F9, 0x01F8 },
	{ 0x01FB, 0x01FA },
	{ 0x01FD, 0x01FC },
	{ 0x01FF, 0x01FE },
	{ 0x0201, 0x0200 },
	{ 0x0203, 0x0202 },
	{ 0x0205, 0x0204 },
	{ 0x0207, 0x0206 },
	{ 0x0209, 0x0208 },
	{ 0x020B, 0x020A },
	{ 0x020D, 0x020C },
	{ 0x020F, 0x020E },
	{ 0x0211, 0x0210 },
	{ 0x0213, 0x0212 },
	{ 0x0215, 0x0214 },
	{ 0x0217, 0x0216 },
	{ 0x0219, 0x0218 },
	{ 0x021B, 0x021A },
	{ 0x021D, 0x021C },
	{ 0x021F, 0x021E },
	{ 0x0223, 0x0222 },
	{ 0x0225, 0x0224 },
	{ 0x0227, 0x0226 },
	{ 0x0229, 0x0228 },
	{ 0x022B, 0x022A },
	{ 0x022D, 0x022C },
	{ 0x022F, 0x022E },
	{ 0x0231, 0x0230 },
	{ 0x0233, 0x0232 },
	{ 0x0253, 0x0181 },
	{ 0x0254, 0x0186 },
	{ 0x0256, 0x0189 },
	{ 0x0257, 0x018A },
	{ 0x0259, 0x018F },
	{ 0x025B, 0x0190 },
	{ 0x0260, 0x0193 },
	{ 0x0263, 0x0194 },
	{ 0x0268, 0x0197 },
	{ 0x0269, 0x0196 },
	{ 0x026F, 0x019C },
	{ 0x0272, 0x019D },
	{ 0x0275, 0x019F },
	{ 0x0280, 0x01A6 },
	{ 0x0283, 0x01A9 },
	{ 0x0288, 0x01AE },
	{ 0x028A, 0x01B1 },
	{ 0x028B, 0x01B2 },
	{ 0x0292, 0x01B7 },
	{ 0x0345, 0x0399 },
	{ 0x03AC, 0x0386 },
	{ 0x03AD, 0x0388 },
	{ 0x03AE, 0x0389 },
	{ 0x03AF, 0x038A },
	{ 0x03B1, 0x0391 },
	{ 0x03B2, 0x0392 },
	{ 0x03B3, 0x0393 },
	{ 0x03B4, 0x0394 },
	{ 0x03B5, 0x0395 },
	{ 0x03B6, 0x0396 },
	{ 0x03B7, 0x0397 },
	{ 0x03B8, 0x0398 },
	{ 0x03B9, 0x0399 },
	{ 0x03BA, 0x039A },
	{ 0x03BB, 0x039B },
	{ 0x03BC, 0x039C },
	{ 0x03BD, 0x039D },
	{ 0x03BE, 0x039E },
	{ 0x03BF, 0x039F },
	{ 0x03C0, 0x03A0 },
	{ 0x03C1, 0x03A1 },
	{ 0x03C2, 0x03A3 },
	{ 0x03C3, 0x03A3 },
	{ 0x03C4, 0x03A4 },
	{ 0x03C5, 0x03A5 },
	{ 0x03C6, 0x03A6 },
	{ 0x03C7, 0x03A7 },
	{ 0x03C8, 0x03A8 },
	{ 0x03C9, 0x03A9 },
	{ 0x03CA, 0x03AA },
	{ 0x03CB, 0x03AB },
	{ 0x03CC, 0x038C },
	{ 0x03CD, 0x038E },
	{ 0x03CE, 0x038F },
	{ 0x03D0, 0x0392 },
	{ 0x03D1, 0x0398 },
	{ 0x03D5, 0x03A6 },
	{ 0x03D6, 0x03A0 },
	{ 0x03D9, 0x03D8 },
	{ 0x03DB, 0x03DA },
	{ 0x03DD, 0x03DC },
	{ 0x03DF, 0x03DE },
	{ 0x03E1, 0x03E0 },
	{ 0x03E3, 0x03E2 },
	{ 0x03E5, 0x03E4 },
	{ 0x03E7, 0x03E6 },
	{ 0x03E9, 0x03E8 },
	{ 0x03EB, 0x03EA },
	{ 0x03ED, 0x03EC },
	{ 0x03EF, 0x03EE },
	{ 0x03F0, 0x039A },
	{ 0x03F1, 0x03A1 },
	{ 0x03F2, 0x03A3 },
	{ 0x03F5, 0x0395 },
	{ 0x0430, 0x0410 },
	{ 0x0431, 0x0411 },
	{ 0x0432, 0x0412 },
	{ 0x0433, 0x0413 },
	{ 0x0434, 0x0414 },
	{ 0x0435, 0x0415 },
	{ 0x0436, 0x0416 },
	{ 0x0437, 0x0417 },
	{ 0x0438, 0x0418 },
	{ 0x0439, 0x0419 },
	{ 0x043A, 0x041A },
	{ 0x043B, 0x041B },
	{ 0x043C, 0x041C },
	{ 0x043D, 0x041D },
	{ 0x043E, 0x041E },
	{ 0x043F, 0x041F },
	{ 0x0440, 0x0420 },
	{ 0x0441, 0x0421 },
	{ 0x0442, 0x0422 },
	{ 0x0443, 0x0423 },
	{ 0x0444, 0x0424 },
	{ 0x0445, 0x0425 },
	{ 0x0446, 0x0426 },
	{ 0x0447, 0x0427 },
	{ 0x0448, 0x0428 },
	{ 0x0449, 0x0429 },
	{ 0x044A, 0x042A },
	{ 0x044B, 0x042B },
	{ 0x044C, 0x042C },
	{ 0x044D, 0x042D },
	{ 0x044E, 0x042E },
	{ 0x044F, 0x042F },
	{ 0x0450, 0x0400 },
	{ 0x0451, 0x0401 },
	{ 0x0452, 0x0402 },
	{ 0x0453, 0x0403 },
	{ 0x0454, 0x0404 },
	{ 0x0455, 0x0405 },
	{ 0x0456, 0x0406 },
	{ 0x0457, 0x0407 },
	{ 0x0458, 0x0408 },
	{ 0x0459, 0x0409 },
	{ 0x045A, 0x040A },
	{ 0x045B, 0x040B },
	{ 0x045C, 0x040C },
	{ 0x045D, 0x040D },
	{ 0x045E, 0x040E },
	{ 0x045F, 0x040F },
	{ 0x0461, 0x0460 },
	{ 0x0463, 0x0462 },
	{ 0x0465, 0x0464 },
	{ 0x0467, 0x0466 },
	{ 0x0469, 0x0468 },
	{ 0x046B, 0x046A },
	{ 0x046D, 0x046C },
	{ 0x046F, 0x046E },
	{ 0x0471, 0x0470 },
	{ 0x0473, 0x0472 },
	{ 0x0475, 0x0474 },
	{ 0x0477, 0x0476 },
	{ 0x0479, 0x0478 },
	{ 0x047B, 0x047A },
	{ 0x047D, 0x047C },
	{ 0x047F, 0x047E },
	{ 0x0481, 0x0480 },
	{ 0x048B, 0x048A },
	{ 0x048D, 0x048C },
	{ 0x048F, 0x048E },
	{ 0x0491, 0x0490 },
	{ 0x0493, 0x0492 },
	{ 0x0495, 0x0494 },
	{ 0x0497, 0x0496 },
	{ 0x0499, 0x0498 },
	{ 0x049B, 0x049A },
	{ 0x049D, 0x049C },
	{ 0x049F, 0x049E },
	{ 0x04A1, 0x04A0 },
	{ 0x04A3, 0x04A2 },
	{ 0x04A5, 0x04A4 },
	{ 0x04A7, 0x04A6 },
	{ 0x04A9, 0x04A8 },
	{ 0x04AB, 0x04AA },
	{ 0x04AD, 0x04AC },
	{ 0x04AF, 0x04AE },
	{ 0x04B1, 0x04B0 },
	{ 0x04B3, 0x04B2 },
	{ 0x04B5, 0x04B4 },
	{ 0x04B7, 0x04B6 },
	{ 0x04B9, 0x04B8 },
	{ 0x04BB, 0x04BA },
	{ 0x04BD, 0x04BC },
	{ 0x04BF, 0x04BE },
	{ 0x04C2, 0x04C1 },
	{ 0x04C4, 0x04C3 },
	{ 0x04C6, 0x04C5 },
	{ 0x04C8, 0x04C7 },
	{ 0x04CA, 0x04C9 },
	{ 0x04CC, 0x04CB },
	{ 0x04CE, 0x04CD },
	{ 0x04D1, 0x04D0 },
	{ 0x04D3, 0x04D2 },
	{ 0x04D5, 0x04D4 },
	{ 0x04D7, 0x04D6 },
	{ 0x04D9, 0x04D8 },
	{ 0x04DB, 0x04DA },
	{ 0x04DD, 0x04DC },
	{ 0x04DF, 0x04DE },
	{ 0x04E1, 0x04E0 },
	{ 0x04E3, 0x04E2 },
	{ 0x04E5, 0x04E4 },
	{ 0x04E7, 0x04E6 },
	{ 0x04E9, 0x04E8 },
	{ 0x04EB, 0x04EA },
	{ 0x04ED, 0x04EC },
	{ 0x04EF, 0x04EE },
	{ 0x04F1, 0x04F0 },
	{ 0x04F3, 0x04F2 },
	{ 0x04F5, 0x04F4 },
	{ 0x04F9, 0x04F8 },
	{ 0x0501, 0x0500 },
	{ 0x0503, 0x0502 },
	{ 0x0505, 0x0504 },
	{ 0x0507, 0x0506 },
	{ 0x0509, 0x0508 },
	{ 0x050B, 0x050A },
	{ 0x050D, 0x050C },
	{ 0x050F, 0x050E },
	{ 0x0561, 0x0531 },
	{ 0x0562, 0x0532 },
	{ 0x0563, 0x0533 },
	{ 0x0564, 0x0534 },
	{ 0x0565, 0x0535 },
	{ 0x0566, 0x0536 },
	{ 0x0567, 0x0537 },
	{ 0x0568, 0x0538 },
	{ 0x0569, 0x0539 },
	{ 0x056A, 0x053A },
	{ 0x056B, 0x053B },
	{ 0x056C, 0x053C },
	{ 0x056D, 0x053D },
	{ 0x056E, 0x053E },
	{ 0x056F, 0x053F },
	{ 0x0570, 0x0540 },
	{ 0x0571, 0x0541 },
	{ 0x0572, 0x0542 },
	{ 0x0573, 0x0543 },
	{ 0x0574, 0x0544 },
	{ 0x0575, 0x0545 },
	{ 0x0576, 0x0546 },
	{ 0x0577, 0x0547 },
	{ 0x0578, 0x0548 },
	{ 0x0579, 0x0549 },
	{ 0x057A, 0x054A },
	{ 0x057B, 0x054B },
	{ 0x057C, 0x054C },
	{ 0x057D, 0x054D },
	{ 0x057E, 0x054E },
	{ 0x057F, 0x054F },
	{ 0x0580, 0x0550 },
	{ 0x0581, 0x0551 },
	{ 0x0582, 0x0552 },
	{ 0x0583, 0x0553 },
	{ 0x0584, 0x0554 },
	{ 0x0585, 0x0555 },
	{ 0x0586, 0x0556 },
	{ 0x1E01, 0x1E00 },
	{ 0x1E03, 0x1E02 },
	{ 0x1E05, 0x1E04 },
	{ 0x1E07, 0x1E06 },
	{ 0x1E09, 0x1E08 },
	{ 0x1E0B, 0x1E0A },
	{ 0x1E0D, 0x1E0C },
	{ 0x1E0F, 0x1E0E },
	{ 0x1E11, 0x1E10 },
	{ 0x1E13, 0x1E12 },
	{ 0x1E15, 0x1E14 },
	{ 0x1E17, 0x1E16 },
	{ 0x1E19, 0x1E18 },
	{ 0x1E1B, 0x1E1A },
	{ 0x1E1D, 0x1E1C },
	{ 0x1E1F, 0x1E1E },
	{ 0x1E21, 0x1E20 },
	{ 0x1E23, 0x1E22 },
	{ 0x1E25, 0x1E24 },
	{ 0x1E27, 0x1E26 },
	{ 0x1E29, 0x1E28 },
	{ 0x1E2B, 0x1E2A },
	{ 0x1E2D, 0x1E2C },
	{ 0x1E2F, 0x1E2E },
	{ 0x1E31, 0x1E30 },
	{ 0x1E33, 0x1E32 },
	{ 0x1E35, 0x1E34 },
	{ 0x1E37, 0x1E36 },
	{ 0x1E39, 0x1E38 },
	{ 0x1E3B, 0x1E3A },
	{ 0x1E3D, 0x1E3C },
	{ 0x1E3F, 0x1E3E },
	{ 0x1E41, 0x1E40 },
	{ 0x1E43, 0x1E42 },
	{ 0x1E45, 0x1E44 },
	{ 0x1E47, 0x1E46 },
	{ 0x1E49, 0x1E48 },
	{ 0x1E4B, 0x1E4A },
	{ 0x1E4D, 0x1E4C },
	{ 0x1E4F, 0x1E4E },
	{ 0x1E51, 0x1E50 },
	{ 0x1E53, 0x1E52 },
	{ 0x1E55, 0x1E54 },
	{ 0x1E57, 0x1E56 },
	{ 0x1E59, 0x1E58 },
	{ 0x1E5B, 0x1E5A },
	{ 0x1E5D, 0x1E5C },
	{ 0x1E5F, 0x1E5E },
	{ 0x1E61, 0x1E60 },
	{ 0x1E63, 0x1E62 },
	{ 0x1E65, 0x1E64 },
	{ 0x1E67, 0x1E66 },
	{ 0x1E69, 0x1E68 },
	{ 0x1E6B, 0x1E6A },
	{ 0x1E6D, 0x1E6C },
	{ 0x1E6F, 0x1E6E },
	{ 0x1E71, 0x1E70 },
	{ 0x1E73, 0x1E72 },
	{ 0x1E75, 0x1E74 },
	{ 0x1E77, 0x1E76 },
	{ 0x1E79, 0x1E78 },
	{ 0x1E7B, 0x1E7A },
	{ 0x1E7D, 0x1E7C },
	{ 0x1E7F, 0x1E7E },
	{ 0x1E81, 0x1E80 },
	{ 0x1E83, 0x1E82 },
	{ 0x1E85, 0x1E84 },
	{ 0x1E87, 0x1E86 },
	{ 0x1E89, 0x1E88 },
	{ 0x1E8B, 0x1E8A },
	{ 0x1E8D, 0x1E8C },
	{ 0x1E8F, 0x1E8E },
	{ 0x1E91, 0x1E90 },
	{ 0x1E93, 0x1E92 },
	{ 0x1E95, 0x1E94 },
	{ 0x1E9B, 0x1E60 },
	{ 0x1EA1, 0x1EA0 },
	{ 0x1EA3, 0x1EA2 },
	{ 0x1EA5, 0x1EA4 },
	{ 0x1EA7, 0x1EA6 },
	{ 0x1EA9, 0x1EA8 },
	{ 0x1EAB, 0x1EAA },
	{ 0x1EAD, 0x1EAC },
	{ 0x1EAF, 0x1EAE },
	{ 0x1EB1, 0x1EB0 },
	{ 0x1EB3, 0x1EB2 },
	{ 0x1EB5, 0x1EB4 },
	{ 0x1EB7, 0x1EB6 },
	{ 0x1EB9, 0x1EB8 },
	{ 0x1EBB, 0x1EBA },
	{ 0x1EBD, 0x1EBC },
	{ 0x1EBF, 0x1EBE },
	{ 0x1EC1, 0x1EC0 },
	{ 0x1EC3, 0x1EC2 },
	{ 0x1EC5, 0x1EC4 },
	{ 0x1EC7, 0x1EC6 },
	{ 0x1EC9, 0x1EC8 },
	{ 0x1ECB, 0x1ECA },
	{ 0x1ECD, 0x1ECC },
	{ 0x1ECF, 0x1ECE },
	{ 0x1ED1, 0x1ED0 },
	{ 0x1ED3, 0x1ED2 },
	{ 0x1ED5, 0x1ED4 },
	{ 0x1ED7, 0x1ED6 },
	{ 0x1ED9, 0x1ED8 },
	{ 0x1EDB, 0x1EDA },
	{ 0x1EDD, 0x1EDC },
	{ 0x1EDF, 0x1EDE },
	{ 0x1EE1, 0x1EE0 },
	{ 0x1EE3, 0x1EE2 },
	{ 0x1EE5, 0x1EE4 },
	{ 0x1EE7, 0x1EE6 },
	{ 0x1EE9, 0x1EE8 },
	{ 0x1EEB, 0x1EEA },
	{ 0x1EED, 0x1EEC },
	{ 0x1EEF, 0x1EEE },
	{ 0x1EF1, 0x1EF0 },
	{ 0x1EF3, 0x1EF2 },
	{ 0x1EF5, 0x1EF4 },
	{ 0x1EF7, 0x1EF6 },
	{ 0x1EF9, 0x1EF8 },
	{ 0x1F00, 0x1F08 },
	{ 0x1F01, 0x1F09 },
	{ 0x1F02, 0x1F0A },
	{ 0x1F03, 0x1F0B },
	{ 0x1F04, 0x1F0C },
	{ 0x1F05, 0x1F0D },
	{ 0x1F06, 0x1F0E },
	{ 0x1F07, 0x1F0F },
	{ 0x1F10, 0x1F18 },
	{ 0x1F11, 0x1F19 },
	{ 0x1F12, 0x1F1A },
	{ 0x1F13, 0x1F1B },
	{ 0x1F14, 0x1F1C },
	{ 0x1F15, 0x1F1D },
	{ 0x1F20, 0x1F28 },
	{ 0x1F21, 0x1F29 },
	{ 0x1F22, 0x1F2A },
	{ 0x1F23, 0x1F2B },
	{ 0x1F24, 0x1F2C },
	{ 0x1F25, 0x1F2D },
	{ 0x1F26, 0x1F2E },
	{ 0x1F27, 0x1F2F },
	{ 0x1F30, 0x1F38 },
	{ 0x1F31, 0x1F39 },
	{ 0x1F32, 0x1F3A },
	{ 0x1F33, 0x1F3B },
	{ 0x1F34, 0x1F3C },
	{ 0x1F35, 0x1F3D },
	{ 0x1F36, 0x1F3E },
	{ 0x1F37, 0x1F3F },
	{ 0x1F40, 0x1F48 },
	{ 0x1F41, 0x1F49 },
	{ 0x1F42, 0x1F4A },
	{ 0x1F43, 0x1F4B },
	{ 0x1F44, 0x1F4C },
	{ 0x1F45, 0x1F4D },
	{ 0x1F51, 0x1F59 },
	{ 0x1F53, 0x1F5B },
	{ 0x1F55, 0x1F5D },
	{ 0x1F57, 0x1F5F },
	{ 0x1F60, 0x1F68 },
	{ 0x1F61, 0x1F69 },
	{ 0x1F62, 0x1F6A },
	{ 0x1F63, 0x1F6B },
	{ 0x1F64, 0x1F6C },
	{ 0x1F65, 0x1F6D },
	{ 0x1F66, 0x1F6E },
	{ 0x1F67, 0x1F6F },
	{ 0x1F70, 0x1FBA },
	{ 0x1F71, 0x1FBB },
	{ 0x1F72, 0x1FC8 },
	{ 0x1F73, 0x1FC9 },
	{ 0x1F74, 0x1FCA },
	{ 0x1F75, 0x1FCB },
	{ 0x1F76, 0x1FDA },
	{ 0x1F77, 0x1FDB },
	{ 0x1F78, 0x1FF8 },
	{ 0x1F79, 0x1FF9 },
	{ 0x1F7A, 0x1FEA },
	{ 0x1F7B, 0x1FEB },
	{ 0x1F7C, 0x1FFA },
	{ 0x1F7D, 0x1FFB },
	{ 0x1F80, 0x1F88 },
	{ 0x1F81, 0x1F89 },
	{ 0x1F82, 0x1F8A },
	{ 0x1F83, 0x1F8B },
	{ 0x1F84, 0x1F8C },
	{ 0x1F85, 0x1F8D },
	{ 0x1F86, 0x1F8E },
	{ 0x1F87, 0x1F8F },
	{ 0x1F90, 0x1F98 },
	{ 0x1F91, 0x1F99 },
	{ 0x1F92, 0x1F9A },
	{ 0x1F93, 0x1F9B },
	{ 0x1F94, 0x1F9C },
	{ 0x1F95, 0x1F9D },
	{ 0x1F96, 0x1F9E },
	{ 0x1F97, 0x1F9F },
	{ 0x1FA0, 0x1FA8 },
	{ 0x1FA1, 0x1FA9 },
	{ 0x1FA2, 0x1FAA },
	{ 0x1FA3, 0x1FAB },
	{ 0x1FA4, 0x1FAC },
	{ 0x1FA5, 0x1FAD },
	{ 0x1FA6, 0x1FAE },
	{ 0x1FA7, 0x1FAF },
	{ 0x1FB0, 0x1FB8 },
	{ 0x1FB1, 0x1FB9 },
	{ 0x1FB3, 0x1FBC },
	{ 0x1FBE, 0x0399 },
	{ 0x1FC3, 0x1FCC },
	{ 0x1FD0, 0x1FD8 },
	{ 0x1FD1, 0x1FD9 },
	{ 0x1FE0, 0x1FE8 },
	{ 0x1FE1, 0x1FE9 },
	{ 0x1FE5, 0x1FEC },
	{ 0x1FF3, 0x1FFC },
	{ 0x2170, 0x2160 },
	{ 0x2171, 0x2161 },
	{ 0x2172, 0x2162 },
	{ 0x2173, 0x2163 },
	{ 0x2174, 0x2164 },
	{ 0x2175, 0x2165 },
	{ 0x2176, 0x2166 },
	{ 0x2177, 0x2167 },
	{ 0x2178, 0x2168 },
	{ 0x2179, 0x2169 },
	{ 0x217A, 0x216A },
	{ 0x217B, 0x216B },
	{ 0x217C, 0x216C },
	{ 0x217D, 0x216D },
	{ 0x217E, 0x216E },
	{ 0x217F, 0x216F },
	{ 0x24D0, 0x24B6 },
	{ 0x24D1, 0x24B7 },
	{ 0x24D2, 0x24B8 },
	{ 0x24D3, 0x24B9 },
	{ 0x24D4, 0x24BA },
	{ 0x24D5, 0x24BB },
	{ 0x24D6, 0x24BC },
	{ 0x24D7, 0x24BD },
	{ 0x24D8, 0x24BE },
	{ 0x24D9, 0x24BF },
	{ 0x24DA, 0x24C0 },
	{ 0x24DB, 0x24C1 },
	{ 0x24DC, 0x24C2 },
	{ 0x24DD, 0x24C3 },
	{ 0x24DE, 0x24C4 },
	{ 0x24DF, 0x24C5 },
	{ 0x24E0, 0x24C6 },
	{ 0x24E1, 0x24C7 },
	{ 0x24E2, 0x24C8 },
	{ 0x24E3, 0x24C9 },
	{ 0x24E4, 0x24CA },
	{ 0x24E5, 0x24CB },
	{ 0x24E6, 0x24CC },
	{ 0x24E7, 0x24CD },
	{ 0x24E8, 0x24CE },
	{ 0x24E9, 0x24CF },
	{ 0xFF41, 0xFF21 },
	{ 0xFF42, 0xFF22 },
	{ 0xFF43, 0xFF23 },
	{ 0xFF44, 0xFF24 },
	{ 0xFF45, 0xFF25 },
	{ 0xFF46, 0xFF26 },
	{ 0xFF47, 0xFF27 },
	{ 0xFF48, 0xFF28 },
	{ 0xFF49, 0xFF29 },
	{ 0xFF4A, 0xFF2A },
	{ 0xFF4B, 0xFF2B },
	{ 0xFF4C, 0xFF2C },
	{ 0xFF4D, 0xFF2D },
	{ 0xFF4E, 0xFF2E },
	{ 0xFF4F, 0xFF2F },
	{ 0xFF50, 0xFF30 },
	{ 0xFF51, 0xFF31 },
	{ 0xFF52, 0xFF32 },
	{ 0xFF53, 0xFF33 },
	{ 0xFF54, 0xFF34 },
	{ 0xFF55, 0xFF35 },
	{ 0xFF56, 0xFF36 },
	{ 0xFF57, 0xFF37 },
	{ 0xFF58, 0xFF38 },
	{ 0xFF59, 0xFF39 },
	{ 0xFF5A, 0xFF3A },
	{ 0x00010428, 0x00010400 },
	{ 0x00010429, 0x00010401 },
	{ 0x0001042A, 0x00010402 },
	{ 0x0001042B, 0x00010403 },
	{ 0x0001042C, 0x00010404 },
	{ 0x0001042D, 0x00010405 },
	{ 0x0001042E, 0x00010406 },
	{ 0x0001042F, 0x00010407 },
	{ 0x00010430, 0x00010408 },
	{ 0x00010431, 0x00010409 },
	{ 0x00010432, 0x0001040A },
	{ 0x00010433, 0x0001040B },
	{ 0x00010434, 0x0001040C },
	{ 0x00010435, 0x0001040D },
	{ 0x00010436, 0x0001040E },
	{ 0x00010437, 0x0001040F },
	{ 0x00010438, 0x00010410 },
	{ 0x00010439, 0x00010411 },
	{ 0x0001043A, 0x00010412 },
	{ 0x0001043B, 0x00010413 },
	{ 0x0001043C, 0x00010414 },
	{ 0x0001043D, 0x00010415 },
	{ 0x0001043E, 0x00010416 },
	{ 0x0001043F, 0x00010417 },
	{ 0x00010440, 0x00010418 },
	{ 0x00010441, 0x00010419 },
	{ 0x00010442, 0x0001041A },
	{ 0x00010443, 0x0001041B },
	{ 0x00010444, 0x0001041C },
	{ 0x00010445, 0x0001041D },
	{ 0x00010446, 0x0001041E },
	{ 0x00010447, 0x0001041F },
	{ 0x00010448, 0x00010420 },
	{ 0x00010449, 0x00010421 },
	{ 0x0001044A, 0x00010422 },
	{ 0x0001044B, 0x00010423 },
	{ 0x0001044C, 0x00010424 },
	{ 0x0001044D, 0x00010425 }
d4259 628
a4886 3
static struct mb_ucsrange *data_wctype_toupper_i;
static int toupper_i_size;
static int *toupper_cvt;
d4888 1
a4888 1
int joe_towupper(struct charmap *foo,int c)
d4892 4
a4895 31
	if (c>=0x61 && c<=0x7A)
		return c+0x41-0x61;

	else if(c<128)
		return c;

	if (!data_wctype_toupper_i) {
		int x;
		int y = -1;
		data_wctype_toupper_i = (struct mb_ucsrange *)malloc(sizeof(data_wctype_toupper));
		toupper_cvt = (int *)malloc(sizeof(data_wctype_toupper)/sizeof(struct mb_ucsrange)*sizeof(int));

		for (x=0;x!=sizeof(data_wctype_toupper)/sizeof(struct mb_ucsrange);++x) {
			if (y == -1 || data_wctype_toupper_i[y].beg + 1 != data_wctype_toupper[x].beg ||
			    toupper_cvt[y] != (int)(data_wctype_toupper[x].end - data_wctype_toupper[x].beg)) {
				++y;
				data_wctype_toupper_i[y].beg = data_wctype_toupper[x].beg;
				data_wctype_toupper_i[y].end = data_wctype_toupper[x].beg;
				toupper_cvt[y] = data_wctype_toupper[x].end - data_wctype_toupper[x].beg;
			} else
				++data_wctype_toupper_i[y].end;
		}
		toupper_i_size = y + 1;
	}

	idx = mb_ucsbsearch(data_wctype_toupper_i, toupper_i_size, c);

	if (idx == (size_t)-1)
		return c;
	else
		return c+toupper_cvt[idx];
d4898 619
a5516 750
static struct mb_ucsrange data_wctype_tolower[] = {
	{ 0x0041, 0x0061 },
	{ 0x0042, 0x0062 },
	{ 0x0043, 0x0063 },
	{ 0x0044, 0x0064 },
	{ 0x0045, 0x0065 },
	{ 0x0046, 0x0066 },
	{ 0x0047, 0x0067 },
	{ 0x0048, 0x0068 },
	{ 0x0049, 0x0069 },
	{ 0x004A, 0x006A },
	{ 0x004B, 0x006B },
	{ 0x004C, 0x006C },
	{ 0x004D, 0x006D },
	{ 0x004E, 0x006E },
	{ 0x004F, 0x006F },
	{ 0x0050, 0x0070 },
	{ 0x0051, 0x0071 },
	{ 0x0052, 0x0072 },
	{ 0x0053, 0x0073 },
	{ 0x0054, 0x0074 },
	{ 0x0055, 0x0075 },
	{ 0x0056, 0x0076 },
	{ 0x0057, 0x0077 },
	{ 0x0058, 0x0078 },
	{ 0x0059, 0x0079 },
	{ 0x005A, 0x007A },
	{ 0x00C0, 0x00E0 },
	{ 0x00C1, 0x00E1 },
	{ 0x00C2, 0x00E2 },
	{ 0x00C3, 0x00E3 },
	{ 0x00C4, 0x00E4 },
	{ 0x00C5, 0x00E5 },
	{ 0x00C6, 0x00E6 },
	{ 0x00C7, 0x00E7 },
	{ 0x00C8, 0x00E8 },
	{ 0x00C9, 0x00E9 },
	{ 0x00CA, 0x00EA },
	{ 0x00CB, 0x00EB },
	{ 0x00CC, 0x00EC },
	{ 0x00CD, 0x00ED },
	{ 0x00CE, 0x00EE },
	{ 0x00CF, 0x00EF },
	{ 0x00D0, 0x00F0 },
	{ 0x00D1, 0x00F1 },
	{ 0x00D2, 0x00F2 },
	{ 0x00D3, 0x00F3 },
	{ 0x00D4, 0x00F4 },
	{ 0x00D5, 0x00F5 },
	{ 0x00D6, 0x00F6 },
	{ 0x00D8, 0x00F8 },
	{ 0x00D9, 0x00F9 },
	{ 0x00DA, 0x00FA },
	{ 0x00DB, 0x00FB },
	{ 0x00DC, 0x00FC },
	{ 0x00DD, 0x00FD },
	{ 0x00DE, 0x00FE },
	{ 0x0100, 0x0101 },
	{ 0x0102, 0x0103 },
	{ 0x0104, 0x0105 },
	{ 0x0106, 0x0107 },
	{ 0x0108, 0x0109 },
	{ 0x010A, 0x010B },
	{ 0x010C, 0x010D },
	{ 0x010E, 0x010F },
	{ 0x0110, 0x0111 },
	{ 0x0112, 0x0113 },
	{ 0x0114, 0x0115 },
	{ 0x0116, 0x0117 },
	{ 0x0118, 0x0119 },
	{ 0x011A, 0x011B },
	{ 0x011C, 0x011D },
	{ 0x011E, 0x011F },
	{ 0x0120, 0x0121 },
	{ 0x0122, 0x0123 },
	{ 0x0124, 0x0125 },
	{ 0x0126, 0x0127 },
	{ 0x0128, 0x0129 },
	{ 0x012A, 0x012B },
	{ 0x012C, 0x012D },
	{ 0x012E, 0x012F },
	{ 0x0130, 0x0069 },
	{ 0x0132, 0x0133 },
	{ 0x0134, 0x0135 },
	{ 0x0136, 0x0137 },
	{ 0x0139, 0x013A },
	{ 0x013B, 0x013C },
	{ 0x013D, 0x013E },
	{ 0x013F, 0x0140 },
	{ 0x0141, 0x0142 },
	{ 0x0143, 0x0144 },
	{ 0x0145, 0x0146 },
	{ 0x0147, 0x0148 },
	{ 0x014A, 0x014B },
	{ 0x014C, 0x014D },
	{ 0x014E, 0x014F },
	{ 0x0150, 0x0151 },
	{ 0x0152, 0x0153 },
	{ 0x0154, 0x0155 },
	{ 0x0156, 0x0157 },
	{ 0x0158, 0x0159 },
	{ 0x015A, 0x015B },
	{ 0x015C, 0x015D },
	{ 0x015E, 0x015F },
	{ 0x0160, 0x0161 },
	{ 0x0162, 0x0163 },
	{ 0x0164, 0x0165 },
	{ 0x0166, 0x0167 },
	{ 0x0168, 0x0169 },
	{ 0x016A, 0x016B },
	{ 0x016C, 0x016D },
	{ 0x016E, 0x016F },
	{ 0x0170, 0x0171 },
	{ 0x0172, 0x0173 },
	{ 0x0174, 0x0175 },
	{ 0x0176, 0x0177 },
	{ 0x0178, 0x00FF },
	{ 0x0179, 0x017A },
	{ 0x017B, 0x017C },
	{ 0x017D, 0x017E },
	{ 0x0181, 0x0253 },
	{ 0x0182, 0x0183 },
	{ 0x0184, 0x0185 },
	{ 0x0186, 0x0254 },
	{ 0x0187, 0x0188 },
	{ 0x0189, 0x0256 },
	{ 0x018A, 0x0257 },
	{ 0x018B, 0x018C },
	{ 0x018E, 0x01DD },
	{ 0x018F, 0x0259 },
	{ 0x0190, 0x025B },
	{ 0x0191, 0x0192 },
	{ 0x0193, 0x0260 },
	{ 0x0194, 0x0263 },
	{ 0x0196, 0x0269 },
	{ 0x0197, 0x0268 },
	{ 0x0198, 0x0199 },
	{ 0x019C, 0x026F },
	{ 0x019D, 0x0272 },
	{ 0x019F, 0x0275 },
	{ 0x01A0, 0x01A1 },
	{ 0x01A2, 0x01A3 },
	{ 0x01A4, 0x01A5 },
	{ 0x01A6, 0x0280 },
	{ 0x01A7, 0x01A8 },
	{ 0x01A9, 0x0283 },
	{ 0x01AC, 0x01AD },
	{ 0x01AE, 0x0288 },
	{ 0x01AF, 0x01B0 },
	{ 0x01B1, 0x028A },
	{ 0x01B2, 0x028B },
	{ 0x01B3, 0x01B4 },
	{ 0x01B5, 0x01B6 },
	{ 0x01B7, 0x0292 },
	{ 0x01B8, 0x01B9 },
	{ 0x01BC, 0x01BD },
	{ 0x01C4, 0x01C6 },
	{ 0x01C5, 0x01C6 },
	{ 0x01C7, 0x01C9 },
	{ 0x01C8, 0x01C9 },
	{ 0x01CA, 0x01CC },
	{ 0x01CB, 0x01CC },
	{ 0x01CD, 0x01CE },
	{ 0x01CF, 0x01D0 },
	{ 0x01D1, 0x01D2 },
	{ 0x01D3, 0x01D4 },
	{ 0x01D5, 0x01D6 },
	{ 0x01D7, 0x01D8 },
	{ 0x01D9, 0x01DA },
	{ 0x01DB, 0x01DC },
	{ 0x01DE, 0x01DF },
	{ 0x01E0, 0x01E1 },
	{ 0x01E2, 0x01E3 },
	{ 0x01E4, 0x01E5 },
	{ 0x01E6, 0x01E7 },
	{ 0x01E8, 0x01E9 },
	{ 0x01EA, 0x01EB },
	{ 0x01EC, 0x01ED },
	{ 0x01EE, 0x01EF },
	{ 0x01F1, 0x01F3 },
	{ 0x01F2, 0x01F3 },
	{ 0x01F4, 0x01F5 },
	{ 0x01F6, 0x0195 },
	{ 0x01F7, 0x01BF },
	{ 0x01F8, 0x01F9 },
	{ 0x01FA, 0x01FB },
	{ 0x01FC, 0x01FD },
	{ 0x01FE, 0x01FF },
	{ 0x0200, 0x0201 },
	{ 0x0202, 0x0203 },
	{ 0x0204, 0x0205 },
	{ 0x0206, 0x0207 },
	{ 0x0208, 0x0209 },
	{ 0x020A, 0x020B },
	{ 0x020C, 0x020D },
	{ 0x020E, 0x020F },
	{ 0x0210, 0x0211 },
	{ 0x0212, 0x0213 },
	{ 0x0214, 0x0215 },
	{ 0x0216, 0x0217 },
	{ 0x0218, 0x0219 },
	{ 0x021A, 0x021B },
	{ 0x021C, 0x021D },
	{ 0x021E, 0x021F },
	{ 0x0220, 0x019E },
	{ 0x0222, 0x0223 },
	{ 0x0224, 0x0225 },
	{ 0x0226, 0x0227 },
	{ 0x0228, 0x0229 },
	{ 0x022A, 0x022B },
	{ 0x022C, 0x022D },
	{ 0x022E, 0x022F },
	{ 0x0230, 0x0231 },
	{ 0x0232, 0x0233 },
	{ 0x0386, 0x03AC },
	{ 0x0388, 0x03AD },
	{ 0x0389, 0x03AE },
	{ 0x038A, 0x03AF },
	{ 0x038C, 0x03CC },
	{ 0x038E, 0x03CD },
	{ 0x038F, 0x03CE },
	{ 0x0391, 0x03B1 },
	{ 0x0392, 0x03B2 },
	{ 0x0393, 0x03B3 },
	{ 0x0394, 0x03B4 },
	{ 0x0395, 0x03B5 },
	{ 0x0396, 0x03B6 },
	{ 0x0397, 0x03B7 },
	{ 0x0398, 0x03B8 },
	{ 0x0399, 0x03B9 },
	{ 0x039A, 0x03BA },
	{ 0x039B, 0x03BB },
	{ 0x039C, 0x03BC },
	{ 0x039D, 0x03BD },
	{ 0x039E, 0x03BE },
	{ 0x039F, 0x03BF },
	{ 0x03A0, 0x03C0 },
	{ 0x03A1, 0x03C1 },
	{ 0x03A3, 0x03C3 },
	{ 0x03A4, 0x03C4 },
	{ 0x03A5, 0x03C5 },
	{ 0x03A6, 0x03C6 },
	{ 0x03A7, 0x03C7 },
	{ 0x03A8, 0x03C8 },
	{ 0x03A9, 0x03C9 },
	{ 0x03AA, 0x03CA },
	{ 0x03AB, 0x03CB },
	{ 0x03D8, 0x03D9 },
	{ 0x03DA, 0x03DB },
	{ 0x03DC, 0x03DD },
	{ 0x03DE, 0x03DF },
	{ 0x03E0, 0x03E1 },
	{ 0x03E2, 0x03E3 },
	{ 0x03E4, 0x03E5 },
	{ 0x03E6, 0x03E7 },
	{ 0x03E8, 0x03E9 },
	{ 0x03EA, 0x03EB },
	{ 0x03EC, 0x03ED },
	{ 0x03EE, 0x03EF },
	{ 0x03F4, 0x03B8 },
	{ 0x0400, 0x0450 },
	{ 0x0401, 0x0451 },
	{ 0x0402, 0x0452 },
	{ 0x0403, 0x0453 },
	{ 0x0404, 0x0454 },
	{ 0x0405, 0x0455 },
	{ 0x0406, 0x0456 },
	{ 0x0407, 0x0457 },
	{ 0x0408, 0x0458 },
	{ 0x0409, 0x0459 },
	{ 0x040A, 0x045A },
	{ 0x040B, 0x045B },
	{ 0x040C, 0x045C },
	{ 0x040D, 0x045D },
	{ 0x040E, 0x045E },
	{ 0x040F, 0x045F },
	{ 0x0410, 0x0430 },
	{ 0x0411, 0x0431 },
	{ 0x0412, 0x0432 },
	{ 0x0413, 0x0433 },
	{ 0x0414, 0x0434 },
	{ 0x0415, 0x0435 },
	{ 0x0416, 0x0436 },
	{ 0x0417, 0x0437 },
	{ 0x0418, 0x0438 },
	{ 0x0419, 0x0439 },
	{ 0x041A, 0x043A },
	{ 0x041B, 0x043B },
	{ 0x041C, 0x043C },
	{ 0x041D, 0x043D },
	{ 0x041E, 0x043E },
	{ 0x041F, 0x043F },
	{ 0x0420, 0x0440 },
	{ 0x0421, 0x0441 },
	{ 0x0422, 0x0442 },
	{ 0x0423, 0x0443 },
	{ 0x0424, 0x0444 },
	{ 0x0425, 0x0445 },
	{ 0x0426, 0x0446 },
	{ 0x0427, 0x0447 },
	{ 0x0428, 0x0448 },
	{ 0x0429, 0x0449 },
	{ 0x042A, 0x044A },
	{ 0x042B, 0x044B },
	{ 0x042C, 0x044C },
	{ 0x042D, 0x044D },
	{ 0x042E, 0x044E },
	{ 0x042F, 0x044F },
	{ 0x0460, 0x0461 },
	{ 0x0462, 0x0463 },
	{ 0x0464, 0x0465 },
	{ 0x0466, 0x0467 },
	{ 0x0468, 0x0469 },
	{ 0x046A, 0x046B },
	{ 0x046C, 0x046D },
	{ 0x046E, 0x046F },
	{ 0x0470, 0x0471 },
	{ 0x0472, 0x0473 },
	{ 0x0474, 0x0475 },
	{ 0x0476, 0x0477 },
	{ 0x0478, 0x0479 },
	{ 0x047A, 0x047B },
	{ 0x047C, 0x047D },
	{ 0x047E, 0x047F },
	{ 0x0480, 0x0481 },
	{ 0x048A, 0x048B },
	{ 0x048C, 0x048D },
	{ 0x048E, 0x048F },
	{ 0x0490, 0x0491 },
	{ 0x0492, 0x0493 },
	{ 0x0494, 0x0495 },
	{ 0x0496, 0x0497 },
	{ 0x0498, 0x0499 },
	{ 0x049A, 0x049B },
	{ 0x049C, 0x049D },
	{ 0x049E, 0x049F },
	{ 0x04A0, 0x04A1 },
	{ 0x04A2, 0x04A3 },
	{ 0x04A4, 0x04A5 },
	{ 0x04A6, 0x04A7 },
	{ 0x04A8, 0x04A9 },
	{ 0x04AA, 0x04AB },
	{ 0x04AC, 0x04AD },
	{ 0x04AE, 0x04AF },
	{ 0x04B0, 0x04B1 },
	{ 0x04B2, 0x04B3 },
	{ 0x04B4, 0x04B5 },
	{ 0x04B6, 0x04B7 },
	{ 0x04B8, 0x04B9 },
	{ 0x04BA, 0x04BB },
	{ 0x04BC, 0x04BD },
	{ 0x04BE, 0x04BF },
	{ 0x04C1, 0x04C2 },
	{ 0x04C3, 0x04C4 },
	{ 0x04C5, 0x04C6 },
	{ 0x04C7, 0x04C8 },
	{ 0x04C9, 0x04CA },
	{ 0x04CB, 0x04CC },
	{ 0x04CD, 0x04CE },
	{ 0x04D0, 0x04D1 },
	{ 0x04D2, 0x04D3 },
	{ 0x04D4, 0x04D5 },
	{ 0x04D6, 0x04D7 },
	{ 0x04D8, 0x04D9 },
	{ 0x04DA, 0x04DB },
	{ 0x04DC, 0x04DD },
	{ 0x04DE, 0x04DF },
	{ 0x04E0, 0x04E1 },
	{ 0x04E2, 0x04E3 },
	{ 0x04E4, 0x04E5 },
	{ 0x04E6, 0x04E7 },
	{ 0x04E8, 0x04E9 },
	{ 0x04EA, 0x04EB },
	{ 0x04EC, 0x04ED },
	{ 0x04EE, 0x04EF },
	{ 0x04F0, 0x04F1 },
	{ 0x04F2, 0x04F3 },
	{ 0x04F4, 0x04F5 },
	{ 0x04F8, 0x04F9 },
	{ 0x0500, 0x0501 },
	{ 0x0502, 0x0503 },
	{ 0x0504, 0x0505 },
	{ 0x0506, 0x0507 },
	{ 0x0508, 0x0509 },
	{ 0x050A, 0x050B },
	{ 0x050C, 0x050D },
	{ 0x050E, 0x050F },
	{ 0x0531, 0x0561 },
	{ 0x0532, 0x0562 },
	{ 0x0533, 0x0563 },
	{ 0x0534, 0x0564 },
	{ 0x0535, 0x0565 },
	{ 0x0536, 0x0566 },
	{ 0x0537, 0x0567 },
	{ 0x0538, 0x0568 },
	{ 0x0539, 0x0569 },
	{ 0x053A, 0x056A },
	{ 0x053B, 0x056B },
	{ 0x053C, 0x056C },
	{ 0x053D, 0x056D },
	{ 0x053E, 0x056E },
	{ 0x053F, 0x056F },
	{ 0x0540, 0x0570 },
	{ 0x0541, 0x0571 },
	{ 0x0542, 0x0572 },
	{ 0x0543, 0x0573 },
	{ 0x0544, 0x0574 },
	{ 0x0545, 0x0575 },
	{ 0x0546, 0x0576 },
	{ 0x0547, 0x0577 },
	{ 0x0548, 0x0578 },
	{ 0x0549, 0x0579 },
	{ 0x054A, 0x057A },
	{ 0x054B, 0x057B },
	{ 0x054C, 0x057C },
	{ 0x054D, 0x057D },
	{ 0x054E, 0x057E },
	{ 0x054F, 0x057F },
	{ 0x0550, 0x0580 },
	{ 0x0551, 0x0581 },
	{ 0x0552, 0x0582 },
	{ 0x0553, 0x0583 },
	{ 0x0554, 0x0584 },
	{ 0x0555, 0x0585 },
	{ 0x0556, 0x0586 },
	{ 0x1E00, 0x1E01 },
	{ 0x1E02, 0x1E03 },
	{ 0x1E04, 0x1E05 },
	{ 0x1E06, 0x1E07 },
	{ 0x1E08, 0x1E09 },
	{ 0x1E0A, 0x1E0B },
	{ 0x1E0C, 0x1E0D },
	{ 0x1E0E, 0x1E0F },
	{ 0x1E10, 0x1E11 },
	{ 0x1E12, 0x1E13 },
	{ 0x1E14, 0x1E15 },
	{ 0x1E16, 0x1E17 },
	{ 0x1E18, 0x1E19 },
	{ 0x1E1A, 0x1E1B },
	{ 0x1E1C, 0x1E1D },
	{ 0x1E1E, 0x1E1F },
	{ 0x1E20, 0x1E21 },
	{ 0x1E22, 0x1E23 },
	{ 0x1E24, 0x1E25 },
	{ 0x1E26, 0x1E27 },
	{ 0x1E28, 0x1E29 },
	{ 0x1E2A, 0x1E2B },
	{ 0x1E2C, 0x1E2D },
	{ 0x1E2E, 0x1E2F },
	{ 0x1E30, 0x1E31 },
	{ 0x1E32, 0x1E33 },
	{ 0x1E34, 0x1E35 },
	{ 0x1E36, 0x1E37 },
	{ 0x1E38, 0x1E39 },
	{ 0x1E3A, 0x1E3B },
	{ 0x1E3C, 0x1E3D },
	{ 0x1E3E, 0x1E3F },
	{ 0x1E40, 0x1E41 },
	{ 0x1E42, 0x1E43 },
	{ 0x1E44, 0x1E45 },
	{ 0x1E46, 0x1E47 },
	{ 0x1E48, 0x1E49 },
	{ 0x1E4A, 0x1E4B },
	{ 0x1E4C, 0x1E4D },
	{ 0x1E4E, 0x1E4F },
	{ 0x1E50, 0x1E51 },
	{ 0x1E52, 0x1E53 },
	{ 0x1E54, 0x1E55 },
	{ 0x1E56, 0x1E57 },
	{ 0x1E58, 0x1E59 },
	{ 0x1E5A, 0x1E5B },
	{ 0x1E5C, 0x1E5D },
	{ 0x1E5E, 0x1E5F },
	{ 0x1E60, 0x1E61 },
	{ 0x1E62, 0x1E63 },
	{ 0x1E64, 0x1E65 },
	{ 0x1E66, 0x1E67 },
	{ 0x1E68, 0x1E69 },
	{ 0x1E6A, 0x1E6B },
	{ 0x1E6C, 0x1E6D },
	{ 0x1E6E, 0x1E6F },
	{ 0x1E70, 0x1E71 },
	{ 0x1E72, 0x1E73 },
	{ 0x1E74, 0x1E75 },
	{ 0x1E76, 0x1E77 },
	{ 0x1E78, 0x1E79 },
	{ 0x1E7A, 0x1E7B },
	{ 0x1E7C, 0x1E7D },
	{ 0x1E7E, 0x1E7F },
	{ 0x1E80, 0x1E81 },
	{ 0x1E82, 0x1E83 },
	{ 0x1E84, 0x1E85 },
	{ 0x1E86, 0x1E87 },
	{ 0x1E88, 0x1E89 },
	{ 0x1E8A, 0x1E8B },
	{ 0x1E8C, 0x1E8D },
	{ 0x1E8E, 0x1E8F },
	{ 0x1E90, 0x1E91 },
	{ 0x1E92, 0x1E93 },
	{ 0x1E94, 0x1E95 },
	{ 0x1EA0, 0x1EA1 },
	{ 0x1EA2, 0x1EA3 },
	{ 0x1EA4, 0x1EA5 },
	{ 0x1EA6, 0x1EA7 },
	{ 0x1EA8, 0x1EA9 },
	{ 0x1EAA, 0x1EAB },
	{ 0x1EAC, 0x1EAD },
	{ 0x1EAE, 0x1EAF },
	{ 0x1EB0, 0x1EB1 },
	{ 0x1EB2, 0x1EB3 },
	{ 0x1EB4, 0x1EB5 },
	{ 0x1EB6, 0x1EB7 },
	{ 0x1EB8, 0x1EB9 },
	{ 0x1EBA, 0x1EBB },
	{ 0x1EBC, 0x1EBD },
	{ 0x1EBE, 0x1EBF },
	{ 0x1EC0, 0x1EC1 },
	{ 0x1EC2, 0x1EC3 },
	{ 0x1EC4, 0x1EC5 },
	{ 0x1EC6, 0x1EC7 },
	{ 0x1EC8, 0x1EC9 },
	{ 0x1ECA, 0x1ECB },
	{ 0x1ECC, 0x1ECD },
	{ 0x1ECE, 0x1ECF },
	{ 0x1ED0, 0x1ED1 },
	{ 0x1ED2, 0x1ED3 },
	{ 0x1ED4, 0x1ED5 },
	{ 0x1ED6, 0x1ED7 },
	{ 0x1ED8, 0x1ED9 },
	{ 0x1EDA, 0x1EDB },
	{ 0x1EDC, 0x1EDD },
	{ 0x1EDE, 0x1EDF },
	{ 0x1EE0, 0x1EE1 },
	{ 0x1EE2, 0x1EE3 },
	{ 0x1EE4, 0x1EE5 },
	{ 0x1EE6, 0x1EE7 },
	{ 0x1EE8, 0x1EE9 },
	{ 0x1EEA, 0x1EEB },
	{ 0x1EEC, 0x1EED },
	{ 0x1EEE, 0x1EEF },
	{ 0x1EF0, 0x1EF1 },
	{ 0x1EF2, 0x1EF3 },
	{ 0x1EF4, 0x1EF5 },
	{ 0x1EF6, 0x1EF7 },
	{ 0x1EF8, 0x1EF9 },
	{ 0x1F08, 0x1F00 },
	{ 0x1F09, 0x1F01 },
	{ 0x1F0A, 0x1F02 },
	{ 0x1F0B, 0x1F03 },
	{ 0x1F0C, 0x1F04 },
	{ 0x1F0D, 0x1F05 },
	{ 0x1F0E, 0x1F06 },
	{ 0x1F0F, 0x1F07 },
	{ 0x1F18, 0x1F10 },
	{ 0x1F19, 0x1F11 },
	{ 0x1F1A, 0x1F12 },
	{ 0x1F1B, 0x1F13 },
	{ 0x1F1C, 0x1F14 },
	{ 0x1F1D, 0x1F15 },
	{ 0x1F28, 0x1F20 },
	{ 0x1F29, 0x1F21 },
	{ 0x1F2A, 0x1F22 },
	{ 0x1F2B, 0x1F23 },
	{ 0x1F2C, 0x1F24 },
	{ 0x1F2D, 0x1F25 },
	{ 0x1F2E, 0x1F26 },
	{ 0x1F2F, 0x1F27 },
	{ 0x1F38, 0x1F30 },
	{ 0x1F39, 0x1F31 },
	{ 0x1F3A, 0x1F32 },
	{ 0x1F3B, 0x1F33 },
	{ 0x1F3C, 0x1F34 },
	{ 0x1F3D, 0x1F35 },
	{ 0x1F3E, 0x1F36 },
	{ 0x1F3F, 0x1F37 },
	{ 0x1F48, 0x1F40 },
	{ 0x1F49, 0x1F41 },
	{ 0x1F4A, 0x1F42 },
	{ 0x1F4B, 0x1F43 },
	{ 0x1F4C, 0x1F44 },
	{ 0x1F4D, 0x1F45 },
	{ 0x1F59, 0x1F51 },
	{ 0x1F5B, 0x1F53 },
	{ 0x1F5D, 0x1F55 },
	{ 0x1F5F, 0x1F57 },
	{ 0x1F68, 0x1F60 },
	{ 0x1F69, 0x1F61 },
	{ 0x1F6A, 0x1F62 },
	{ 0x1F6B, 0x1F63 },
	{ 0x1F6C, 0x1F64 },
	{ 0x1F6D, 0x1F65 },
	{ 0x1F6E, 0x1F66 },
	{ 0x1F6F, 0x1F67 },
	{ 0x1F88, 0x1F80 },
	{ 0x1F89, 0x1F81 },
	{ 0x1F8A, 0x1F82 },
	{ 0x1F8B, 0x1F83 },
	{ 0x1F8C, 0x1F84 },
	{ 0x1F8D, 0x1F85 },
	{ 0x1F8E, 0x1F86 },
	{ 0x1F8F, 0x1F87 },
	{ 0x1F98, 0x1F90 },
	{ 0x1F99, 0x1F91 },
	{ 0x1F9A, 0x1F92 },
	{ 0x1F9B, 0x1F93 },
	{ 0x1F9C, 0x1F94 },
	{ 0x1F9D, 0x1F95 },
	{ 0x1F9E, 0x1F96 },
	{ 0x1F9F, 0x1F97 },
	{ 0x1FA8, 0x1FA0 },
	{ 0x1FA9, 0x1FA1 },
	{ 0x1FAA, 0x1FA2 },
	{ 0x1FAB, 0x1FA3 },
	{ 0x1FAC, 0x1FA4 },
	{ 0x1FAD, 0x1FA5 },
	{ 0x1FAE, 0x1FA6 },
	{ 0x1FAF, 0x1FA7 },
	{ 0x1FB8, 0x1FB0 },
	{ 0x1FB9, 0x1FB1 },
	{ 0x1FBA, 0x1F70 },
	{ 0x1FBB, 0x1F71 },
	{ 0x1FBC, 0x1FB3 },
	{ 0x1FC8, 0x1F72 },
	{ 0x1FC9, 0x1F73 },
	{ 0x1FCA, 0x1F74 },
	{ 0x1FCB, 0x1F75 },
	{ 0x1FCC, 0x1FC3 },
	{ 0x1FD8, 0x1FD0 },
	{ 0x1FD9, 0x1FD1 },
	{ 0x1FDA, 0x1F76 },
	{ 0x1FDB, 0x1F77 },
	{ 0x1FE8, 0x1FE0 },
	{ 0x1FE9, 0x1FE1 },
	{ 0x1FEA, 0x1F7A },
	{ 0x1FEB, 0x1F7B },
	{ 0x1FEC, 0x1FE5 },
	{ 0x1FF8, 0x1F78 },
	{ 0x1FF9, 0x1F79 },
	{ 0x1FFA, 0x1F7C },
	{ 0x1FFB, 0x1F7D },
	{ 0x1FFC, 0x1FF3 },
	{ 0x2126, 0x03C9 },
	{ 0x212A, 0x006B },
	{ 0x212B, 0x00E5 },
	{ 0x2160, 0x2170 },
	{ 0x2161, 0x2171 },
	{ 0x2162, 0x2172 },
	{ 0x2163, 0x2173 },
	{ 0x2164, 0x2174 },
	{ 0x2165, 0x2175 },
	{ 0x2166, 0x2176 },
	{ 0x2167, 0x2177 },
	{ 0x2168, 0x2178 },
	{ 0x2169, 0x2179 },
	{ 0x216A, 0x217A },
	{ 0x216B, 0x217B },
	{ 0x216C, 0x217C },
	{ 0x216D, 0x217D },
	{ 0x216E, 0x217E },
	{ 0x216F, 0x217F },
	{ 0x24B6, 0x24D0 },
	{ 0x24B7, 0x24D1 },
	{ 0x24B8, 0x24D2 },
	{ 0x24B9, 0x24D3 },
	{ 0x24BA, 0x24D4 },
	{ 0x24BB, 0x24D5 },
	{ 0x24BC, 0x24D6 },
	{ 0x24BD, 0x24D7 },
	{ 0x24BE, 0x24D8 },
	{ 0x24BF, 0x24D9 },
	{ 0x24C0, 0x24DA },
	{ 0x24C1, 0x24DB },
	{ 0x24C2, 0x24DC },
	{ 0x24C3, 0x24DD },
	{ 0x24C4, 0x24DE },
	{ 0x24C5, 0x24DF },
	{ 0x24C6, 0x24E0 },
	{ 0x24C7, 0x24E1 },
	{ 0x24C8, 0x24E2 },
	{ 0x24C9, 0x24E3 },
	{ 0x24CA, 0x24E4 },
	{ 0x24CB, 0x24E5 },
	{ 0x24CC, 0x24E6 },
	{ 0x24CD, 0x24E7 },
	{ 0x24CE, 0x24E8 },
	{ 0x24CF, 0x24E9 },
	{ 0xFF21, 0xFF41 },
	{ 0xFF22, 0xFF42 },
	{ 0xFF23, 0xFF43 },
	{ 0xFF24, 0xFF44 },
	{ 0xFF25, 0xFF45 },
	{ 0xFF26, 0xFF46 },
	{ 0xFF27, 0xFF47 },
	{ 0xFF28, 0xFF48 },
	{ 0xFF29, 0xFF49 },
	{ 0xFF2A, 0xFF4A },
	{ 0xFF2B, 0xFF4B },
	{ 0xFF2C, 0xFF4C },
	{ 0xFF2D, 0xFF4D },
	{ 0xFF2E, 0xFF4E },
	{ 0xFF2F, 0xFF4F },
	{ 0xFF30, 0xFF50 },
	{ 0xFF31, 0xFF51 },
	{ 0xFF32, 0xFF52 },
	{ 0xFF33, 0xFF53 },
	{ 0xFF34, 0xFF54 },
	{ 0xFF35, 0xFF55 },
	{ 0xFF36, 0xFF56 },
	{ 0xFF37, 0xFF57 },
	{ 0xFF38, 0xFF58 },
	{ 0xFF39, 0xFF59 },
	{ 0xFF3A, 0xFF5A },
	{ 0x00010400, 0x00010428 },
	{ 0x00010401, 0x00010429 },
	{ 0x00010402, 0x0001042A },
	{ 0x00010403, 0x0001042B },
	{ 0x00010404, 0x0001042C },
	{ 0x00010405, 0x0001042D },
	{ 0x00010406, 0x0001042E },
	{ 0x00010407, 0x0001042F },
	{ 0x00010408, 0x00010430 },
	{ 0x00010409, 0x00010431 },
	{ 0x0001040A, 0x00010432 },
	{ 0x0001040B, 0x00010433 },
	{ 0x0001040C, 0x00010434 },
	{ 0x0001040D, 0x00010435 },
	{ 0x0001040E, 0x00010436 },
	{ 0x0001040F, 0x00010437 },
	{ 0x00010410, 0x00010438 },
	{ 0x00010411, 0x00010439 },
	{ 0x00010412, 0x0001043A },
	{ 0x00010413, 0x0001043B },
	{ 0x00010414, 0x0001043C },
	{ 0x00010415, 0x0001043D },
	{ 0x00010416, 0x0001043E },
	{ 0x00010417, 0x0001043F },
	{ 0x00010418, 0x00010440 },
	{ 0x00010419, 0x00010441 },
	{ 0x0001041A, 0x00010442 },
	{ 0x0001041B, 0x00010443 },
	{ 0x0001041C, 0x00010444 },
	{ 0x0001041D, 0x00010445 },
	{ 0x0001041E, 0x00010446 },
	{ 0x0001041F, 0x00010447 },
	{ 0x00010420, 0x00010448 },
	{ 0x00010421, 0x00010449 },
	{ 0x00010422, 0x0001044A },
	{ 0x00010423, 0x0001044B },
	{ 0x00010424, 0x0001044C },
	{ 0x00010425, 0x0001044D }
d5519 620
a6138 3
static struct mb_ucsrange *data_wctype_tolower_i;
static int tolower_i_size;
static int *tolower_cvt;
d6140 1
a6140 1
int joe_towlower(struct charmap *foo,int c)
d6144 4
a6147 31
	if (c>=0x41 && c<=0x5A)
		return c + 0x61 - 0x41;

	else if(c<128)
		return c;

	if (!data_wctype_tolower_i) {
		int x;
		int y = -1;
		data_wctype_tolower_i = (struct mb_ucsrange *)malloc(sizeof(data_wctype_tolower));
		tolower_cvt = (int *)malloc(sizeof(data_wctype_tolower)/sizeof(struct mb_ucsrange)*sizeof(int));

		for (x=0;x!=sizeof(data_wctype_tolower)/sizeof(struct mb_ucsrange);++x) {
			if (y == -1 || data_wctype_tolower_i[y].end + 1 != data_wctype_tolower[x].beg ||
			    tolower_cvt[y] != (int)(data_wctype_tolower[x].end - data_wctype_tolower[x].beg)) {
				++y;
				data_wctype_tolower_i[y].beg = data_wctype_tolower[x].beg;
				data_wctype_tolower_i[y].end = data_wctype_tolower[x].beg;
				tolower_cvt[y] = data_wctype_tolower[x].end - data_wctype_tolower[x].beg;
			} else
				++data_wctype_tolower_i[y].end;
		}
		tolower_i_size = y + 1;
	}

	idx = mb_ucsbsearch(data_wctype_tolower_i, tolower_i_size, c);

	if (idx == (size_t)-1)
		return c;
	else
		return c+tolower_cvt[idx];
d6157 3
d6166 1
a6166 1
	printf("ctrl=%X\n",joe_iswctrl(NULL,c));
d6199 20
@


1.8
log
@fix some sign comparison warnings (take care to not trigger UB)
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/jupp/i18n.c,v 1.7 2013/05/31 23:27:17 tg Exp $ */
d24 1
a24 1
/* From: X11/xc/programs/xterm/wcwidth.c,v 1.6 2013/05/31 23:27:09 tg Exp $ */
a33 11
/* Macro for generating joe_iswXXX functions */

#define MAKE_ISW(x) \
	int joe_isw##x(struct charmap *foo,int c) \
	{ \
		if (mb_ucsbsearch(data_wctype_##x, NELEM(data_wctype_##x), c) != (size_t)-1) \
			return 1; \
		else \
			return 0; \
	}

d35 2
a36 2
 * Generated by MirOS: contrib/code/Snippets/eawparse,v 1.1 2013/05/31 23:27:16 tg Exp $
 * from Unicode 6.2.0
d49 1
d158 1
a158 1
	{ 0x180B, 0x180D },
d165 1
d199 1
a199 1
	{ 0x206A, 0x206F },
d354 10
d366 1
a366 2
static struct mb_ucsrange data_wctype_upper[]=
{
d458 1
a458 2
static struct mb_ucsrange data_wctype_lower[]=
{
d571 1
a571 2
struct mb_ucsrange data_wctype_alpha[]=
{
d928 1
a928 1
int joe_iswalpha_(struct charmap *foo,int c)
d930 1
a930 4
	if (c==0x5F)
		return 1;
	else
		return joe_iswalpha(foo,c);
d933 1
a933 1
int joe_iswalnum_(struct charmap *foo,int c)
d935 2
a936 4
	if ((c>=0x30 && c<=0x39) || c==0x5F)
		return 1;
	else
		return joe_iswalpha(foo,c);
d939 1
a939 2
struct mb_ucsrange data_wctype_digit[]=
{
d945 1
a945 2
struct mb_ucsrange data_wctype_space[]=
{
d959 1
a959 2
struct mb_ucsrange data_wctype_ctrl[]=
{
d968 1
a968 2
struct mb_ucsrange data_wctype_punct[]=
{
d1222 1
a1222 2
struct mb_ucsrange data_wctype_graph[]=
{
d1616 1
a1616 2
struct mb_ucsrange data_wctype_print[]=
{
d2009 1
a2009 2
struct mb_ucsrange data_wctype_xdigit[]=
{
d2017 1
a2017 2
struct mb_ucsrange data_wctype_blank[]=
{
d2031 1
a2031 2
static struct mb_ucsrange data_wctype_toupper[]=
{
d2834 1
a2834 2
static struct mb_ucsrange data_wctype_tolower[]=
{
d3629 2
a3630 1
/*
d3649 1
d3651 1
a3651 1
*/
@


1.7
log
@Replace wcwidth code by mine based on Unicode 6.2.0
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/jupp/i18n.c,v 1.6 2012/09/01 23:46:44 tg Exp $ */
d2831 1
a2831 1
			    toupper_cvt[y] != data_wctype_toupper[x].end - data_wctype_toupper[x].beg) {
d3625 1
a3625 1
			    tolower_cvt[y] != data_wctype_tolower[x].end - data_wctype_tolower[x].beg) {
@


1.6
log
@Update wcwidth data from Unicode 6.1.0
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/jupp/i18n.c,v 1.5 2010/12/11 16:05:02 tg Exp $ */
d24 1
a24 60
/*
 * This is an implementation of wcwidth() and wcswidth() (defined in
 * IEEE Std 1002.1-2001) for Unicode.
 *
 * http://www.opengroup.org/onlinepubs/007904975/functions/wcwidth.html
 * http://www.opengroup.org/onlinepubs/007904975/functions/wcswidth.html
 *
 * In fixed-width output devices, Latin characters all occupy a single
 * "cell" position of equal width, whereas ideographic CJK characters
 * occupy two such cells. Interoperability between terminal-line
 * applications and (teletype-style) character terminals using the
 * UTF-8 encoding requires agreement on which character should advance
 * the cursor by how many cell positions. No established formal
 * standards exist at present on which Unicode character shall occupy
 * how many cell positions on character terminals. These routines are
 * a first attempt of defining such behavior based on simple rules
 * applied to data provided by the Unicode Consortium.
 *
 * For some graphical characters, the Unicode standard explicitly
 * defines a character-cell width via the definition of the East Asian
 * FullWidth (F), Wide (W), Half-width (H), and Narrow (Na) classes.
 * In all these cases, there is no ambiguity about which width a
 * terminal shall use. For characters in the East Asian Ambiguous (A)
 * class, the width choice depends purely on a preference of backward
 * compatibility with either historic CJK or Western practice.
 * Choosing single-width for these characters is easy to justify as
 * the appropriate long-term solution, as the CJK practice of
 * displaying these characters as double-width comes from historic
 * implementation simplicity (8-bit encoded characters were displayed
 * single-width and 16-bit ones double-width, even for Greek,
 * Cyrillic, etc.) and not any typographic considerations.
 *
 * Much less clear is the choice of width for the Not East Asian
 * (Neutral) class. Existing practice does not dictate a width for any
 * of these characters. It would nevertheless make sense
 * typographically to allocate two character cells to characters such
 * as for instance EM SPACE or VOLUME INTEGRAL, which cannot be
 * represented adequately with a single-width glyph. The following
 * routines at present merely assign a single-cell width to all
 * neutral characters, in the interest of simplicity. This is not
 * entirely satisfactory and should be reconsidered before
 * establishing a formal standard in this area. At the moment, the
 * decision which Not East Asian (Neutral) characters should be
 * represented by double-width glyphs cannot yet be answered by
 * applying a simple rule from the Unicode database content. Setting
 * up a proper standard for the behavior of UTF-8 character terminals
 * will require a careful analysis not only of each Unicode character,
 * but also of each presentation form, something the author of these
 * routines has avoided to do so far.
 *
 * http://www.unicode.org/unicode/reports/tr11/
 *
 * Markus Kuhn -- 2007-05-26 (Unicode 5.0)
 *
 * Permission to use, copy, modify, and distribute this software
 * for any purpose and without fee is hereby granted. The author
 * disclaims all warranties with regard to this software.
 *
 * Latest version: http://www.cl.cam.ac.uk/~mgk25/ucs/wcwidth.c
 */
d26 3
a28 3
struct interval {
	int first;
	int last;
d31 2
a32 19
static int bisearch(int ucs, const struct interval *table, int max)
{
	int min = 0;
	int mid;

	if (ucs < table[0].first || ucs > table[max].last)
		return -1;
	while (max >= min) {
		mid = (min + max) / 2;
		if (ucs > table[mid].last)
			min = mid + 1;
		else if (ucs < table[mid].first)
			max = mid - 1;
		else
			return mid;
	}

	return -1;
}
d39 1
a39 1
		if (-1!=bisearch(c, data_wctype_##x, sizeof(data_wctype_##x)/sizeof(struct interval) - 1)) \
d45 3
a47 30
/* The following function defines the column width of an ISO 10646
 * character as follows:
 *
 *    - The null character (U+0000) has a column width of 0.
 *
 *    - Other C0/C1 control characters and DEL will lead to a return
 *      value of -1.
 *
 *    - Non-spacing and enclosing combining characters (general
 *      category code Mn or Me in the Unicode database) have a
 *      column width of 0.
 *
 *    - SOFT HYPHEN (U+00AD) has a column width of 1.
 *
 *    - Other format characters (general category code Cf in the Unicode
 *      database) and ZERO WIDTH SPACE (U+200B) have a column width of 0.
 *
 *    - Hangul Jamo medial vowels and final consonants (U+1160-U+11FF)
 *      have a column width of 0.
 *
 *    - Spacing characters in the East Asian Wide (W) or East Asian
 *      Full-width (F) category as defined in Unicode Technical
 *      Report #11 have a column width of 2.
 *
 *    - All remaining characters (including all printable
 *      ISO 8859-1 and WGL4 characters, Unicode control characters,
 *      etc.) have a column width of 1.
 *
 * This implementation assumes that wchar_t characters are encoded
 * in ISO 10646.
d50 256
a305 2
/* Modified for JOE: returns printed width of control and other non-printable
   characters */
d307 3
a309 1
int joe_wcwidth(int wide,int ucs)
d311 1
a311 82
	/* sorted list of non-overlapping intervals of non-spacing characters */
	/* generated by "uniset +cat=Me +cat=Mn +cat=Cf -00AD +1160-11FF +200B c" */
	static const struct interval combining[] = {
		/* Unicode 6.1.0 Full Range */
		{ 0x0300, 0x036F }, { 0x0483, 0x0489 }, { 0x0591, 0x05BD },
		{ 0x05BF, 0x05BF }, { 0x05C1, 0x05C2 }, { 0x05C4, 0x05C5 },
		{ 0x05C7, 0x05C7 }, { 0x0600, 0x0604 }, { 0x0610, 0x061A },
		{ 0x064B, 0x065F }, { 0x0670, 0x0670 }, { 0x06D6, 0x06DD },
		{ 0x06DF, 0x06E4 }, { 0x06E7, 0x06E8 }, { 0x06EA, 0x06ED },
		{ 0x070F, 0x070F }, { 0x0711, 0x0711 }, { 0x0730, 0x074A },
		{ 0x07A6, 0x07B0 }, { 0x07EB, 0x07F3 }, { 0x0816, 0x0819 },
		{ 0x081B, 0x0823 }, { 0x0825, 0x0827 }, { 0x0829, 0x082D },
		{ 0x0859, 0x085B }, { 0x08E4, 0x08FE }, { 0x0900, 0x0902 },
		{ 0x093A, 0x093A }, { 0x093C, 0x093C }, { 0x0941, 0x0948 },
		{ 0x094D, 0x094D }, { 0x0951, 0x0957 }, { 0x0962, 0x0963 },
		{ 0x0981, 0x0981 }, { 0x09BC, 0x09BC }, { 0x09C1, 0x09C4 },
		{ 0x09CD, 0x09CD }, { 0x09E2, 0x09E3 }, { 0x0A01, 0x0A02 },
		{ 0x0A3C, 0x0A3C }, { 0x0A41, 0x0A42 }, { 0x0A47, 0x0A48 },
		{ 0x0A4B, 0x0A4D }, { 0x0A51, 0x0A51 }, { 0x0A70, 0x0A71 },
		{ 0x0A75, 0x0A75 }, { 0x0A81, 0x0A82 }, { 0x0ABC, 0x0ABC },
		{ 0x0AC1, 0x0AC5 }, { 0x0AC7, 0x0AC8 }, { 0x0ACD, 0x0ACD },
		{ 0x0AE2, 0x0AE3 }, { 0x0B01, 0x0B01 }, { 0x0B3C, 0x0B3C },
		{ 0x0B3F, 0x0B3F }, { 0x0B41, 0x0B44 }, { 0x0B4D, 0x0B4D },
		{ 0x0B56, 0x0B56 }, { 0x0B62, 0x0B63 }, { 0x0B82, 0x0B82 },
		{ 0x0BC0, 0x0BC0 }, { 0x0BCD, 0x0BCD }, { 0x0C3E, 0x0C40 },
		{ 0x0C46, 0x0C48 }, { 0x0C4A, 0x0C4D }, { 0x0C55, 0x0C56 },
		{ 0x0C62, 0x0C63 }, { 0x0CBC, 0x0CBC }, { 0x0CBF, 0x0CBF },
		{ 0x0CC6, 0x0CC6 }, { 0x0CCC, 0x0CCD }, { 0x0CE2, 0x0CE3 },
		{ 0x0D41, 0x0D44 }, { 0x0D4D, 0x0D4D }, { 0x0D62, 0x0D63 },
		{ 0x0DCA, 0x0DCA }, { 0x0DD2, 0x0DD4 }, { 0x0DD6, 0x0DD6 },
		{ 0x0E31, 0x0E31 }, { 0x0E34, 0x0E3A }, { 0x0E47, 0x0E4E },
		{ 0x0EB1, 0x0EB1 }, { 0x0EB4, 0x0EB9 }, { 0x0EBB, 0x0EBC },
		{ 0x0EC8, 0x0ECD }, { 0x0F18, 0x0F19 }, { 0x0F35, 0x0F35 },
		{ 0x0F37, 0x0F37 }, { 0x0F39, 0x0F39 }, { 0x0F71, 0x0F7E },
		{ 0x0F80, 0x0F84 }, { 0x0F86, 0x0F87 }, { 0x0F8D, 0x0F97 },
		{ 0x0F99, 0x0FBC }, { 0x0FC6, 0x0FC6 }, { 0x102D, 0x1030 },
		{ 0x1032, 0x1037 }, { 0x1039, 0x103A }, { 0x103D, 0x103E },
		{ 0x1058, 0x1059 }, { 0x105E, 0x1060 }, { 0x1071, 0x1074 },
		{ 0x1082, 0x1082 }, { 0x1085, 0x1086 }, { 0x108D, 0x108D },
		{ 0x109D, 0x109D }, { 0x1160, 0x11FF }, { 0x135D, 0x135F },
		{ 0x1712, 0x1714 }, { 0x1732, 0x1734 }, { 0x1752, 0x1753 },
		{ 0x1772, 0x1773 }, { 0x17B4, 0x17B5 }, { 0x17B7, 0x17BD },
		{ 0x17C6, 0x17C6 }, { 0x17C9, 0x17D3 }, { 0x17DD, 0x17DD },
		{ 0x180B, 0x180D }, { 0x18A9, 0x18A9 }, { 0x1920, 0x1922 },
		{ 0x1927, 0x1928 }, { 0x1932, 0x1932 }, { 0x1939, 0x193B },
		{ 0x1A17, 0x1A18 }, { 0x1A56, 0x1A56 }, { 0x1A58, 0x1A5E },
		{ 0x1A60, 0x1A60 }, { 0x1A62, 0x1A62 }, { 0x1A65, 0x1A6C },
		{ 0x1A73, 0x1A7C }, { 0x1A7F, 0x1A7F }, { 0x1B00, 0x1B03 },
		{ 0x1B34, 0x1B34 }, { 0x1B36, 0x1B3A }, { 0x1B3C, 0x1B3C },
		{ 0x1B42, 0x1B42 }, { 0x1B6B, 0x1B73 }, { 0x1B80, 0x1B81 },
		{ 0x1BA2, 0x1BA5 }, { 0x1BA8, 0x1BA9 }, { 0x1BAB, 0x1BAB },
		{ 0x1BE6, 0x1BE6 }, { 0x1BE8, 0x1BE9 }, { 0x1BED, 0x1BED },
		{ 0x1BEF, 0x1BF1 }, { 0x1C2C, 0x1C33 }, { 0x1C36, 0x1C37 },
		{ 0x1CD0, 0x1CD2 }, { 0x1CD4, 0x1CE0 }, { 0x1CE2, 0x1CE8 },
		{ 0x1CED, 0x1CED }, { 0x1CF4, 0x1CF4 }, { 0x1DC0, 0x1DE6 },
		{ 0x1DFC, 0x1DFF }, { 0x200B, 0x200F }, { 0x202A, 0x202E },
		{ 0x2060, 0x2064 }, { 0x206A, 0x206F }, { 0x20D0, 0x20F0 },
		{ 0x2CEF, 0x2CF1 }, { 0x2D7F, 0x2D7F }, { 0x2DE0, 0x2DFF },
		{ 0x302A, 0x302D }, { 0x3099, 0x309A }, { 0xA66F, 0xA672 },
		{ 0xA674, 0xA67D }, { 0xA69F, 0xA69F }, { 0xA6F0, 0xA6F1 },
		{ 0xA802, 0xA802 }, { 0xA806, 0xA806 }, { 0xA80B, 0xA80B },
		{ 0xA825, 0xA826 }, { 0xA8C4, 0xA8C4 }, { 0xA8E0, 0xA8F1 },
		{ 0xA926, 0xA92D }, { 0xA947, 0xA951 }, { 0xA980, 0xA982 },
		{ 0xA9B3, 0xA9B3 }, { 0xA9B6, 0xA9B9 }, { 0xA9BC, 0xA9BC },
		{ 0xAA29, 0xAA2E }, { 0xAA31, 0xAA32 }, { 0xAA35, 0xAA36 },
		{ 0xAA43, 0xAA43 }, { 0xAA4C, 0xAA4C }, { 0xAAB0, 0xAAB0 },
		{ 0xAAB2, 0xAAB4 }, { 0xAAB7, 0xAAB8 }, { 0xAABE, 0xAABF },
		{ 0xAAC1, 0xAAC1 }, { 0xAAEC, 0xAAED }, { 0xAAF6, 0xAAF6 },
		{ 0xABE5, 0xABE5 }, { 0xABE8, 0xABE8 }, { 0xABED, 0xABED },
		{ 0xFB1E, 0xFB1E }, { 0xFE00, 0xFE0F }, { 0xFE20, 0xFE26 },
		{ 0xFEFF, 0xFEFF }, { 0xFFF9, 0xFFFB }, { 0x101FD, 0x101FD },
		{ 0x10A01, 0x10A03 }, { 0x10A05, 0x10A06 }, { 0x10A0C, 0x10A0F },
		{ 0x10A38, 0x10A3A }, { 0x10A3F, 0x10A3F }, { 0x11001, 0x11001 },
		{ 0x11038, 0x11046 }, { 0x11080, 0x11081 }, { 0x110B3, 0x110B6 },
		{ 0x110B9, 0x110BA }, { 0x110BD, 0x110BD }, { 0x11100, 0x11102 },
		{ 0x11127, 0x1112B }, { 0x1112D, 0x11134 }, { 0x11180, 0x11181 },
		{ 0x111B6, 0x111BE }, { 0x116AB, 0x116AB }, { 0x116AD, 0x116AD },
		{ 0x116B0, 0x116B5 }, { 0x116B7, 0x116B7 }, { 0x16F8F, 0x16F92 },
		{ 0x1D167, 0x1D169 }, { 0x1D173, 0x1D182 }, { 0x1D185, 0x1D18B },
		{ 0x1D1AA, 0x1D1AD }, { 0x1D242, 0x1D244 }, { 0xE0001, 0xE0001 },
		{ 0xE0020, 0xE007F }, { 0xE0100, 0xE01EF }
	};
d313 2
a314 4
	/* If terminal is not UTF-8 or file is not UTF-8: width is 1 */
	/* FIXME */
	if (!locale_map->type || !wide)
		return 1;
d316 2
a317 3
	/* Control characters are one column wide in JOE */
	if (ucs < 32 || ucs == 0x7F)
		return 1;
d319 6
a324 11
	/* More control characters... */
	if (ucs >= 0x80 && ucs < 0xA0)
		return 4;

	/* More control characters... */
	/*XXX revisit all of these -mirabilos */
	if (ucs >= 0x200B && ucs <= 0x206F) {
		if (ucs <= 0x200F) return 6;
		if (ucs >= 0x2028 && ucs <= 0x202E) return 6;
		if (ucs >= 0x2060 && ucs <= 0x2063) return 6;
		if (ucs >= 0x206A) return 6;
d326 2
d329 2
a330 3
	/* More control characters... */
	if (ucs >= 0xFDD0 && ucs <= 0xFDEF)
		return 6;
d332 10
a341 2
	if (ucs == 0xFEFF)
		return 6;
d343 6
a348 2
	if (ucs >= 0xFFF9 && ucs <= 0xFFFB)
		return 6;
d350 11
a360 23
	if (ucs >= 0xFFFE && ucs <= 0xFFFF)
		return 6;

	/* binary search in table of non-spacing characters */
	if (-1 != bisearch(ucs, combining, sizeof(combining) / sizeof(struct interval) - 1))
		return 0;

	/* if we arrive here, c is not a combining or C0/C1 control char */

	return 1 +
	  (ucs >= 0x1100 &&
	   (ucs <= 0x115F ||                    /* Hangul Jamo init. consonants */
	    ucs == 0x2329 || ucs == 0x232A ||
	    (ucs >= 0x2E80 && ucs <= 0xA4CF &&
	     ucs != 0x303F) ||                  /* CJK ... Yi */
	    (ucs >= 0xAC00 && ucs <= 0xD7A3) || /* Hangul Syllables */
	    (ucs >= 0xF900 && ucs <= 0xFAFF) || /* CJK Compatibility Ideographs */
	    (ucs >= 0xFE10 && ucs <= 0xFE19) || /* Vertical forms */
	    (ucs >= 0xFE30 && ucs <= 0xFE6F) || /* CJK Compatibility Forms */
	    (ucs >= 0xFF00 && ucs <= 0xFF60) || /* Fullwidth Forms */
	    (ucs >= 0xFFE0 && ucs <= 0xFFE6) ||
	    (ucs >= 0x20000 && ucs <= 0x2FFFD) ||
	    (ucs >= 0x30000 && ucs <= 0x3FFFD)));
d365 1
a365 1
static struct interval data_wctype_upper[]=
d458 1
a458 1
static struct interval data_wctype_lower[]=
d572 1
a572 1
struct interval data_wctype_alpha[]=
d946 1
a946 1
struct interval data_wctype_digit[]=
d953 1
a953 1
struct interval data_wctype_space[]=
d968 1
a968 1
struct interval data_wctype_ctrl[]=
d978 1
a978 1
struct interval data_wctype_punct[]=
d1233 1
a1233 1
struct interval data_wctype_graph[]=
d1628 1
a1628 1
struct interval data_wctype_print[]=
d2022 1
a2022 1
struct interval data_wctype_xdigit[]=
d2031 1
a2031 1
struct interval data_wctype_blank[]=
d2046 1
a2046 1
static struct interval data_wctype_toupper[]=
d2809 1
a2809 1
static struct interval *data_wctype_toupper_i;
d2815 1
a2815 1
	int idx;
d2826 2
a2827 2
		data_wctype_toupper_i = (struct interval *)malloc(sizeof(data_wctype_toupper));
		toupper_cvt = (int *)malloc(sizeof(data_wctype_toupper)/sizeof(struct interval)*sizeof(int));
d2829 3
a2831 3
		for (x=0;x!=sizeof(data_wctype_toupper)/sizeof(struct interval);++x) {
			if (y == -1 || data_wctype_toupper_i[y].first + 1 != data_wctype_toupper[x].first ||
			    toupper_cvt[y] != data_wctype_toupper[x].last - data_wctype_toupper[x].first) {
d2833 3
a2835 3
				data_wctype_toupper_i[y].first = data_wctype_toupper[x].first;
				data_wctype_toupper_i[y].last = data_wctype_toupper[x].first;
				toupper_cvt[y] = data_wctype_toupper[x].last - data_wctype_toupper[x].first;
d2837 1
a2837 1
				++data_wctype_toupper_i[y].last;
d2839 1
a2839 1
		toupper_i_size = y;
d2842 1
a2842 1
	idx = bisearch(c, data_wctype_toupper_i, toupper_i_size);
d2844 1
a2844 1
	if (idx==-1)
d2850 1
a2850 1
static struct interval data_wctype_tolower[]=
d3603 1
a3603 1
static struct interval *data_wctype_tolower_i;
d3609 1
a3609 1
	int idx;
d3620 2
a3621 2
		data_wctype_tolower_i = (struct interval *)malloc(sizeof(data_wctype_tolower));
		tolower_cvt = (int *)malloc(sizeof(data_wctype_tolower)/sizeof(struct interval)*sizeof(int));
d3623 3
a3625 3
		for (x=0;x!=sizeof(data_wctype_tolower)/sizeof(struct interval);++x) {
			if (y == -1 || data_wctype_tolower_i[y].last + 1 != data_wctype_tolower[x].first ||
			    tolower_cvt[y] != data_wctype_tolower[x].last - data_wctype_tolower[x].first) {
d3627 3
a3629 3
				data_wctype_tolower_i[y].first = data_wctype_tolower[x].first;
				data_wctype_tolower_i[y].last = data_wctype_tolower[x].first;
				tolower_cvt[y] = data_wctype_tolower[x].last - data_wctype_tolower[x].first;
d3631 1
a3631 1
				++data_wctype_tolower_i[y].last;
d3633 1
a3633 1
		tolower_i_size = y;
d3636 1
a3636 1
	idx = bisearch(c, data_wctype_tolower_i, tolower_i_size);
d3638 1
a3638 1
	if (idx==-1)
d3669 1
a3669 3
/* This should match mk_wcwidth() */

int unictrl(int ucs)
d3671 1
a3671 1
	/* Control characters are one column wide in JOE */
d3673 1
a3673 1
		return 1;
d3675 3
a3677 10
	if (ucs >= 0x80 && ucs <= 0x9F)
		return 4;

	/* More control characters... */
	if (ucs>=0x200b && ucs<=0x206f) {
		if (ucs<=0x200f) return 6;
		if (ucs>=0x2028 && ucs<=0x202E) return 6;
		if (ucs>=0x2060 && ucs<=0x2063) return 6;
		if (ucs>=0x206a) return 6;
	}
d3680 2
a3681 8
	if (ucs>=0xFDD0 && ucs<=0xFDEF)
		return 6;

	if (ucs==0xFEFF)
		return 6;

	if (ucs>=0xFFF9 && ucs<=0xFFFB)
		return 6;
d3683 2
a3684 2
	if (ucs>=0xFFFE && ucs<=0xFFFF)
		return 6;
d3686 1
a3686 1
	return 0;
@


1.5
log
@regenerate all wcwidth code from UCD 6.0.0 and related tables,
and mgk25âs wcwidth.c 5.0 code; add check against 2-byte wchar_t;
optimise libc wcwidth(3) implementation taken from mksh and sync these
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/jupp/i18n.c,v 1.4 2009/10/18 16:06:29 tg Exp $ */
d161 1
a161 1
		/* Unicode 6.0.0 Full Range */
d164 1
a164 1
		{ 0x05C7, 0x05C7 }, { 0x0600, 0x0603 }, { 0x0610, 0x061A },
d170 43
a212 42
		{ 0x0859, 0x085B }, { 0x0900, 0x0902 }, { 0x093A, 0x093A },
		{ 0x093C, 0x093C }, { 0x0941, 0x0948 }, { 0x094D, 0x094D },
		{ 0x0951, 0x0957 }, { 0x0962, 0x0963 }, { 0x0981, 0x0981 },
		{ 0x09BC, 0x09BC }, { 0x09C1, 0x09C4 }, { 0x09CD, 0x09CD },
		{ 0x09E2, 0x09E3 }, { 0x0A01, 0x0A02 }, { 0x0A3C, 0x0A3C },
		{ 0x0A41, 0x0A42 }, { 0x0A47, 0x0A48 }, { 0x0A4B, 0x0A4D },
		{ 0x0A51, 0x0A51 }, { 0x0A70, 0x0A71 }, { 0x0A75, 0x0A75 },
		{ 0x0A81, 0x0A82 }, { 0x0ABC, 0x0ABC }, { 0x0AC1, 0x0AC5 },
		{ 0x0AC7, 0x0AC8 }, { 0x0ACD, 0x0ACD }, { 0x0AE2, 0x0AE3 },
		{ 0x0B01, 0x0B01 }, { 0x0B3C, 0x0B3C }, { 0x0B3F, 0x0B3F },
		{ 0x0B41, 0x0B44 }, { 0x0B4D, 0x0B4D }, { 0x0B56, 0x0B56 },
		{ 0x0B62, 0x0B63 }, { 0x0B82, 0x0B82 }, { 0x0BC0, 0x0BC0 },
		{ 0x0BCD, 0x0BCD }, { 0x0C3E, 0x0C40 }, { 0x0C46, 0x0C48 },
		{ 0x0C4A, 0x0C4D }, { 0x0C55, 0x0C56 }, { 0x0C62, 0x0C63 },
		{ 0x0CBC, 0x0CBC }, { 0x0CBF, 0x0CBF }, { 0x0CC6, 0x0CC6 },
		{ 0x0CCC, 0x0CCD }, { 0x0CE2, 0x0CE3 }, { 0x0D41, 0x0D44 },
		{ 0x0D4D, 0x0D4D }, { 0x0D62, 0x0D63 }, { 0x0DCA, 0x0DCA },
		{ 0x0DD2, 0x0DD4 }, { 0x0DD6, 0x0DD6 }, { 0x0E31, 0x0E31 },
		{ 0x0E34, 0x0E3A }, { 0x0E47, 0x0E4E }, { 0x0EB1, 0x0EB1 },
		{ 0x0EB4, 0x0EB9 }, { 0x0EBB, 0x0EBC }, { 0x0EC8, 0x0ECD },
		{ 0x0F18, 0x0F19 }, { 0x0F35, 0x0F35 }, { 0x0F37, 0x0F37 },
		{ 0x0F39, 0x0F39 }, { 0x0F71, 0x0F7E }, { 0x0F80, 0x0F84 },
		{ 0x0F86, 0x0F87 }, { 0x0F8D, 0x0F97 }, { 0x0F99, 0x0FBC },
		{ 0x0FC6, 0x0FC6 }, { 0x102D, 0x1030 }, { 0x1032, 0x1037 },
		{ 0x1039, 0x103A }, { 0x103D, 0x103E }, { 0x1058, 0x1059 },
		{ 0x105E, 0x1060 }, { 0x1071, 0x1074 }, { 0x1082, 0x1082 },
		{ 0x1085, 0x1086 }, { 0x108D, 0x108D }, { 0x109D, 0x109D },
		{ 0x1160, 0x11FF }, { 0x135D, 0x135F }, { 0x1712, 0x1714 },
		{ 0x1732, 0x1734 }, { 0x1752, 0x1753 }, { 0x1772, 0x1773 },
		{ 0x17B4, 0x17B5 }, { 0x17B7, 0x17BD }, { 0x17C6, 0x17C6 },
		{ 0x17C9, 0x17D3 }, { 0x17DD, 0x17DD }, { 0x180B, 0x180D },
		{ 0x18A9, 0x18A9 }, { 0x1920, 0x1922 }, { 0x1927, 0x1928 },
		{ 0x1932, 0x1932 }, { 0x1939, 0x193B }, { 0x1A17, 0x1A18 },
		{ 0x1A56, 0x1A56 }, { 0x1A58, 0x1A5E }, { 0x1A60, 0x1A60 },
		{ 0x1A62, 0x1A62 }, { 0x1A65, 0x1A6C }, { 0x1A73, 0x1A7C },
		{ 0x1A7F, 0x1A7F }, { 0x1B00, 0x1B03 }, { 0x1B34, 0x1B34 },
		{ 0x1B36, 0x1B3A }, { 0x1B3C, 0x1B3C }, { 0x1B42, 0x1B42 },
		{ 0x1B6B, 0x1B73 }, { 0x1B80, 0x1B81 }, { 0x1BA2, 0x1BA5 },
		{ 0x1BA8, 0x1BA9 }, { 0x1BE6, 0x1BE6 }, { 0x1BE8, 0x1BE9 },
		{ 0x1BED, 0x1BED }, { 0x1BEF, 0x1BF1 }, { 0x1C2C, 0x1C33 },
		{ 0x1C36, 0x1C37 }, { 0x1CD0, 0x1CD2 }, { 0x1CD4, 0x1CE0 },
		{ 0x1CE2, 0x1CE8 }, { 0x1CED, 0x1CED }, { 0x1DC0, 0x1DE6 },
d216 10
a225 9
		{ 0x302A, 0x302F }, { 0x3099, 0x309A }, { 0xA66F, 0xA672 },
		{ 0xA67C, 0xA67D }, { 0xA6F0, 0xA6F1 }, { 0xA802, 0xA802 },
		{ 0xA806, 0xA806 }, { 0xA80B, 0xA80B }, { 0xA825, 0xA826 },
		{ 0xA8C4, 0xA8C4 }, { 0xA8E0, 0xA8F1 }, { 0xA926, 0xA92D },
		{ 0xA947, 0xA951 }, { 0xA980, 0xA982 }, { 0xA9B3, 0xA9B3 },
		{ 0xA9B6, 0xA9B9 }, { 0xA9BC, 0xA9BC }, { 0xAA29, 0xAA2E },
		{ 0xAA31, 0xAA32 }, { 0xAA35, 0xAA36 }, { 0xAA43, 0xAA43 },
		{ 0xAA4C, 0xAA4C }, { 0xAAB0, 0xAAB0 }, { 0xAAB2, 0xAAB4 },
		{ 0xAAB7, 0xAAB8 }, { 0xAABE, 0xAABF }, { 0xAAC1, 0xAAC1 },
d232 7
a238 4
		{ 0x110B9, 0x110BA }, { 0x110BD, 0x110BD }, { 0x1D167, 0x1D169 },
		{ 0x1D173, 0x1D182 }, { 0x1D185, 0x1D18B }, { 0x1D1AA, 0x1D1AD },
		{ 0x1D242, 0x1D244 }, { 0xE0001, 0xE0001 }, { 0xE0020, 0xE007F },
		{ 0xE0100, 0xE01EF }
@


1.4
log
@hex is uppercase!
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/jupp/i18n.c,v 1.3 2008/05/13 13:08:22 tg Exp $ */
d76 1
a76 1
 * Markus Kuhn -- 2003-05-20 (Unicode 4.0)
d121 1
a121 1
/* The following two functions define the column width of an ISO 10646
d161 23
a183 19
		{ 0x0300, 0x0357 }, { 0x035D, 0x036F }, { 0x0483, 0x0486 },
		{ 0x0488, 0x0489 }, { 0x0591, 0x05A1 }, { 0x05A3, 0x05B9 },
		{ 0x05BB, 0x05BD }, { 0x05BF, 0x05BF }, { 0x05C1, 0x05C2 },
		{ 0x05C4, 0x05C4 }, { 0x0600, 0x0603 }, { 0x0610, 0x0615 },
		{ 0x064B, 0x0658 }, { 0x0670, 0x0670 }, { 0x06D6, 0x06E4 },
		{ 0x06E7, 0x06E8 }, { 0x06EA, 0x06ED }, { 0x070F, 0x070F },
		{ 0x0711, 0x0711 }, { 0x0730, 0x074A }, { 0x07A6, 0x07B0 },
		{ 0x0901, 0x0902 }, { 0x093C, 0x093C }, { 0x0941, 0x0948 },
		{ 0x094D, 0x094D }, { 0x0951, 0x0954 }, { 0x0962, 0x0963 },
		{ 0x0981, 0x0981 }, { 0x09BC, 0x09BC }, { 0x09C1, 0x09C4 },
		{ 0x09CD, 0x09CD }, { 0x09E2, 0x09E3 }, { 0x0A01, 0x0A02 },
		{ 0x0A3C, 0x0A3C }, { 0x0A41, 0x0A42 }, { 0x0A47, 0x0A48 },
		{ 0x0A4B, 0x0A4D }, { 0x0A70, 0x0A71 }, { 0x0A81, 0x0A82 },
		{ 0x0ABC, 0x0ABC }, { 0x0AC1, 0x0AC5 }, { 0x0AC7, 0x0AC8 },
		{ 0x0ACD, 0x0ACD }, { 0x0AE2, 0x0AE3 }, { 0x0B01, 0x0B01 },
		{ 0x0B3C, 0x0B3C }, { 0x0B3F, 0x0B3F }, { 0x0B41, 0x0B43 },
		{ 0x0B4D, 0x0B4D }, { 0x0B56, 0x0B56 }, { 0x0B82, 0x0B82 },
		{ 0x0BC0, 0x0BC0 }, { 0x0BCD, 0x0BCD }, { 0x0C3E, 0x0C40 },
		{ 0x0C46, 0x0C48 }, { 0x0C4A, 0x0C4D }, { 0x0C55, 0x0C56 },
d185 13
a197 10
		{ 0x0CCC, 0x0CCD }, { 0x0D41, 0x0D43 }, { 0x0D4D, 0x0D4D },
		{ 0x0DCA, 0x0DCA }, { 0x0DD2, 0x0DD4 }, { 0x0DD6, 0x0DD6 },
		{ 0x0E31, 0x0E31 }, { 0x0E34, 0x0E3A }, { 0x0E47, 0x0E4E },
		{ 0x0EB1, 0x0EB1 }, { 0x0EB4, 0x0EB9 }, { 0x0EBB, 0x0EBC },
		{ 0x0EC8, 0x0ECD }, { 0x0F18, 0x0F19 }, { 0x0F35, 0x0F35 },
		{ 0x0F37, 0x0F37 }, { 0x0F39, 0x0F39 }, { 0x0F71, 0x0F7E },
		{ 0x0F80, 0x0F84 }, { 0x0F86, 0x0F87 }, { 0x0F90, 0x0F97 },
		{ 0x0F99, 0x0FBC }, { 0x0FC6, 0x0FC6 }, { 0x102D, 0x1030 },
		{ 0x1032, 0x1032 }, { 0x1036, 0x1037 }, { 0x1039, 0x1039 },
		{ 0x1058, 0x1059 }, { 0x1160, 0x11FF }, { 0x1712, 0x1714 },
d202 29
a230 5
		{ 0x1932, 0x1932 }, { 0x1939, 0x193B }, { 0x200B, 0x200F },
		{ 0x202A, 0x202E }, { 0x2060, 0x2063 }, { 0x206A, 0x206F },
		{ 0x20D0, 0x20EA }, { 0x302A, 0x302F }, { 0x3099, 0x309A },
		{ 0xFB1E, 0xFB1E }, { 0xFE00, 0xFE0F }, { 0xFE20, 0xFE23 },
		{ 0xFEFF, 0xFEFF }, { 0xFFF9, 0xFFFB }, { 0x1D167, 0x1D169 },
d232 2
a233 1
		{ 0xE0001, 0xE0001 }, { 0xE0020, 0xE007F }, { 0xE0100, 0xE01EF }
d246 1
a246 1
	if (ucs>=0x80 && ucs<=0x9F)
d250 6
a255 5
	if (ucs>=0x200b && ucs<=0x206f) {
		if (ucs<=0x200f) return 6;
		if (ucs>=0x2028 && ucs<=0x202E) return 6;
		if (ucs>=0x2060 && ucs<=0x2063) return 6;
		if (ucs>=0x206a) return 6;
d259 1
a259 1
	if (ucs>=0xFDD0 && ucs<=0xFDEF)
d262 1
a262 1
	if (ucs==0xFEFF)
d265 1
a265 1
	if (ucs>=0xFFF9 && ucs<=0xFFFB)
d268 1
a268 1
	if (ucs>=0xFFFE && ucs<=0xFFFF)
d271 2
a272 2
	/* 0 Width Combining characters */
	if (-1!=bisearch(ucs, combining, sizeof(combining) / sizeof(struct interval) - 1))
d275 16
a290 14
	/* Double-wide characters */
	return 1 + 
		(ucs >= 0x1100 &&
		(ucs <= 0x115f ||                    /* Hangul Jamo init. consonants */
		ucs == 0x2329 || ucs == 0x232a ||
		(ucs >= 0x2e80 && ucs <= 0xa4cf &&
		ucs != 0x303f) ||                  /* CJK ... Yi */
		(ucs >= 0xac00 && ucs <= 0xd7a3) || /* Hangul Syllables */
		(ucs >= 0xf900 && ucs <= 0xfaff) || /* CJK Compatibility Ideographs */
		(ucs >= 0xfe30 && ucs <= 0xfe6f) || /* CJK Compatibility Forms */
		(ucs >= 0xff00 && ucs <= 0xff60) || /* Fullwidth Forms */
		(ucs >= 0xffe0 && ucs <= 0xffe6) ||
		(ucs >= 0x20000 && ucs <= 0x2fffd) ||
		(ucs >= 0x30000 && ucs <= 0x3fffd)));
@


1.3
log
@prepare for joe-3.1jupp9:
* sync NEWS
* bump vsn in configure.ac
* tag all files with RCS ID
* sync licence template
@
text
@d1 1
a1 1
/* $MirOS$ */
d3546 14
a3559 14
	printf("Properties of character %x:\n",c);
	printf("upper=%x\n",joe_iswupper(NULL,c));
	printf("lower=%x\n",joe_iswlower(NULL,c));
	printf("alpha=%x\n",joe_iswalpha(NULL,c));
	printf("digit=%x\n",joe_iswdigit(NULL,c));
	printf("ctrl=%x\n",joe_iswctrl(NULL,c));
	printf("punct=%x\n",joe_iswpunct(NULL,c));
	printf("graph=%x\n",joe_iswgraph(NULL,c));
	printf("print=%x\n",joe_iswprint(NULL,c));
	printf("xdigit=%x\n",joe_iswxdigit(NULL,c));
	printf("blank=%x\n",joe_iswblank(NULL,c));
	printf("width=%x\n",joe_wcwidth(1,c));
	printf("toupper=%x\n",joe_towupper(NULL,c));
	printf("tolower=%x\n",joe_towlower(NULL,c));
@


1.2
log
@Update the non-generated files to joe-3.1jupp2
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d14 5
a156 2
	int x;

d834 1
a834 1
	if (c>=0x30 && c<=0x39 || c==0x5F)
@


1.1.201.1
log
@JOE's Own Editor 3.1
@
text
@@
