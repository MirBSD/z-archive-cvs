head	1.17;
access;
symbols
	joe-3_1jupp38:1.17
	joe-3_1jupp37:1.17
	joe-3_1jupp36:1.16
	joe-3_1jupp35:1.16
	joe-3_1jupp34:1.16
	joe-3_1jupp33:1.16
	joe-3_1jupp32:1.16
	joe-3_1jupp31:1.10
	joe-3_1jupp30:1.10
	joe-3_1jupp29:1.9
	joe-3_1jupp28:1.8
	joe-3_1jupp27:1.8
	joe-3_1jupp26:1.7
	joe-3_1jupp25:1.7
	joe-3_1jupp24:1.6
	joe-3_1jupp23:1.6
	joe-3_1jupp22:1.6
	joe-3_1jupp21:1.6
	joe-3_1jupp20:1.6
	joe-3_1jupp19:1.6
	joe-3_1jupp18:1.6
	joe-3_1jupp17:1.5
	joe-3_1jupp16:1.5
	joe-3_1jupp15:1.4
	joe-3_1jupp14:1.4
	joe-3_1jupp12:1.4
	joe-3_1jupp11:1.3
	joe-3_1jupp10:1.3
	joe-3_1jupp9:1.3
	joe-3_1jupp8:1.2
	joe-3_1jupp7:1.2
	joe-3_1jupp6:1.2
	joe-3_1jupp5:1.1.201.1
	joe-3_1jupp4:1.1.201.1
	joe-3_1:1.1.201.1
	tg:1.1.201;
locks; strict;
comment	@# @;


1.17
date	2018.08.10.02.53.42;	author tg;	state Exp;
branches;
next	1.16;
commitid	1005B6CFE0B5BDFE404;

1.16
date	2017.12.07.01.00.30;	author tg;	state Exp;
branches;
next	1.15;
commitid	1005A2892BB042F2F1F;

1.15
date	2017.12.06.23.17.32;	author tg;	state Exp;
branches;
next	1.14;
commitid	1005A287AA407E73F9C;

1.14
date	2017.12.06.21.48.48;	author tg;	state Exp;
branches;
next	1.13;
commitid	1005A2865DB253609E6;

1.13
date	2017.12.06.21.46.54;	author tg;	state Exp;
branches;
next	1.12;
commitid	1005A28655C5188FF08;

1.12
date	2017.12.03.01.43.49;	author tg;	state Exp;
branches;
next	1.11;
commitid	1005A2356EC4C92E058;

1.11
date	2017.12.02.18.50.01;	author tg;	state Exp;
branches;
next	1.10;
commitid	1005A22F5E2328F5222;

1.10
date	2017.01.11.22.04.31;	author tg;	state Exp;
branches;
next	1.9;
commitid	1005876ABFE790F0CC3;

1.9
date	2016.10.30.00.19.42;	author tg;	state Exp;
branches;
next	1.8;
commitid	10058153CB71FEF8D52;

1.8
date	2014.06.29.11.39.50;	author tg;	state Exp;
branches;
next	1.7;
commitid	10053AFFB1F1E30AB4D;

1.7
date	2013.08.19.22.04.14;	author tg;	state Exp;
branches;
next	1.6;
commitid	1005212965366A5886D;

1.6
date	2011.10.04.22.47.50;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004E8B8D280DB0966B;

1.5
date	2011.07.16.21.57.55;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004E2209506F4A1334;

1.4
date	2009.10.18.14.52.55;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004ADB2BD317498872;

1.3
date	2008.05.13.16.17.42;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004829BF321E5AE4B0;

1.2
date	2006.10.16.18.49.42;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004533D4475A549346;

1.1
date	2005.02.05.00.37.28;	author tg;	state Exp;
branches
	1.1.201.1;
next	;

1.1.201.1
date	2005.02.05.00.37.28;	author tg;	state Exp;
branches;
next	;


desc
@@


1.17
log
@same as in commitid 1005B6CF36E3932B560, plus assorted cleanup
@
text
@This documentation should go elsewhere, but I haven't gotten around to it
yet.

GCC
---

Disable the following warnings; the code doesn't cope with it:
-Wno-pointer-sign -Wno-unused-parameter -Wno-cast-qual
-Wno-strict-prototypes

UTF-8
-----

Do note that the joerc files must be written using the 8-bit encoding,
not in UTF-8. Syntax files, on the other hand, absolutely must be
written in UTF-8 since jupp29.

JOE now handles two classes of character sets: UTF-8 and byte coded (like
ISO-8859-1).  It can not yet handle other major classes such as UTF-16 or
GB2312. There are other restrictions: character sets must use LF (0x0A) or
CR-LF (0x0D - 0x0A) as line terminators, space must be 0x20 and tab must be
0x09. Basically, the files must be UNIX or MS-DOS compatible text files.

This means EBCDIC will not work properly (but you would need to handle fixed
record length lines anyway) and character sets which use CR terminated lines
(MACs) will not yet work.

The terminal and the file can have different encodings.  JOE will translate
between the two.  Currently, one of the two must be UTF-8 for translation to
work.

The character set for the terminal and the default character set assumed for
files is determined by the 'LC_ALL' environment variable (and if that's not
set, LC_CTYPE and LANG are also checked). 'JOECHARMAP' overrides this value.

For example, if LC_ALL is set to:

	de_DE

Then the character set will be ISO-8859-1.

If LC_ALL is set to:

	de_DE.UTF-8

The character set will UTF-8.

Hit ^T E to change the coding for the file.  Hit <tab> <tab> at this prompt
to get a list of available codings.  There are a number of built-in
character sets, plus you can install character sets in the ~/.jupp/charmaps
and /usr/local/etc/joe/charmaps directories.

Check: /usr/share/i18n/charmaps for example character set files.  Only
byte oriented character sets will work.  Also, the file should not be
gzipped (all of the charmap file in /usr/share/i18n/charmaps on my computer
were compressed).  The parser is very bad, so basically the file has to look
exactly like the example one in /usr/local/etc/joe/charmaps.

You can hit ^K <space> to see the current character set.

You can hit ` x to enter a UCS character if the file coding is UTF-8.

Programming
-----------

	Try ^K , and ^K .  These keys select the current block (based on
indentation) and shift it left or right by the -istep and -indentc.

Selecting blocks
----------------

	The "classic" way is to hit ^K B at the beginning and ^K K at the
end.  These set pointers called markb and markk.  Once these are set you
can jump to markb with ^[ b and jump to markk with ^[ k.

	New way no.1: hit Ctrl-space to start selecting, move the cursor,
then hit Ctrl-space to complete the block.  Hit Ctrl-space in the block to
cancel it.  Hit Ctrl-space outside of the block to start selecting a new
one.  This uses the "toggle_marking" function.  Also any block command will
complete the block. (joe flavour only)

	New way no.2: hit Ctrl-rtarw to start selecting rightward.  Each
time you hit Ctrl-rtarw, the block is extended one more to the right.  This
uses a simple macro: "begin_marking,rtarw,toggle_marking".  Unfortunately,
there is no standard way to get the keysequence given by the terminal
emulator when you hit Ctrl-rtarw.  Instead you have to determine this
sequence yourself and enter it directly in the joerc file.  Some examples
are given for xterm and gnome-terminal.  Hit ` rtarw to have the sequence
shown on your screen.  Note that Putty uses ^[ ^[ [ C which will not appear
with ` rtarw (also ^[ ^[ is set book mark, so you need to unbind it to do
this in Putty). (joe flavour only)

	Also you can hit Ctrl-delete to cut and Ctrl-insert to paste if the
sequence for these keys are known. (joe flavour only)

	New way No.3: press down shift, then move the cursor with the
arrow keys or, optionally with ctrl, the Home and End keys; release the
shift key when done and remember that the cursor indicator on screen is
not part of the selection. (all flavours)

	Also, you can pass "-keymap cua" on the command line to change
the key bindings for ^Z (Undo), ^X (Cut), ^C (Copy), ^V (Paste) as in
contemporary GUI editors. (joe, rjoe, jstar, jupp flavours only)

	Using Picture mode and Rectangle mode may help with that.

Hex edit mode
-------------

When this mode is selected (either put -hex on the command line, or look for
"Hex edit mode" after hitting ^T), the buffer is displayed as a hex dump,
but all of the editing commands operate the same way.  It is most useful to
select overtype mode in conjunction with hex dump (hit ^T T).  Then typing
will not insert.

- To enter the hex byte 0xF8 type ` x F 8

- You can use ^KC to copy a block as usual.  If overtype mode is selected,
  the block will overwrite the destination data without changing the size of
  the file.  Otherwise it inserts.

- Hit ESC x byte <Enter>, to jump to a particular byte offset.  Hex values
  can be entered into this prompt like this: 0x2000.

- Search, incremental search, and search & replace all operate as usual.

___________________________________________________________________
$MirOS: contrib/code/jupp/HINTS,v 1.16 2017/12/07 01:00:30 tg Exp $
@


1.16
log
@unfortunately, the polymorphic problems are not yet solved
@
text
@d61 1
a61 1
You can hit ` x to enter a Unicode character if the file coding is UTF-8.
d128 1
a128 1
$MirOS: contrib/code/jupp/HINTS,v 1.14 2017/12/06 21:48:48 tg Exp $
@


1.15
log
@whitespace at EOL annoys me
@
text
@d9 1
@


1.14
log
@update
@
text
@d119 1
a119 1
  the file.  Otherwise it inserts. 
d127 1
a127 1
$MirOS: contrib/code/jupp/HINTS,v 1.10 2017/01/11 22:04:31 tg Exp $
@


1.13
log
@the code should now be able to cope with this

offenders will be patched away
@
text
@d13 3
a15 3
Do note that the joerc files must be written using the 8-bit encoding
(probably ISO-8859-1), not UTF-8. Syntax files, on the other hand,
absolutely must be written in UTF-8 since jupp29.
d33 1
a33 1
set, LC_CTYPE and LANG are also checked).
@


1.12
log
@update
@
text
@d8 1
a8 5
-Wno-pointer-sign
-Wno-old-style-definition
-Wno-unused-parameter -Wno-strict-prototypes
-Wno-cast-qual
-Wno-missing-prototypes -Wno-missing-declarations
@


1.11
log
@get rid of -Wmissing-field-initialisers, as Cygwin GCC forces my hand
@
text
@a6 3
Using -fomit-frame-pointer may miscompile code at least in gcc 3.4.6, see
http://article.gmane.org/gmane.os.miros.cvs/11607 for details.

d9 2
a10 2
-Wno-unused-parameter
-Wno-old-style-definition -Wno-strict-prototypes
a13 3
Additionally, -Wstrict-overflow bitches around if you enable it.
This needs verification and possibly fixes.

@


1.10
log
@use ~/.jupp/ (for now) not ~/.joe/ to not conflict with joe 4.x
@
text
@a12 1
-Wno-missing-field-initializers
d137 1
a137 1
$MirOS: contrib/code/jupp/HINTS,v 1.7 2013/08/19 22:04:14 tg Exp $
@


1.9
log
@update
@
text
@d60 1
a60 1
character sets, plus you can install character sets in the ~/.joe/charmaps
d137 1
a137 1
__________________________________________________________________
@


1.8
log
@bump
@
text
@d25 2
a26 1
(probably ISO-8859-1), not UTF-8.
@


1.7
log
@fix source of data corruption (LP#1198221): JOEâ€™s VM system uses
file-backed storage that is not properly unshared when trying to
do concurrent I/O with the piped subprocesses
@
text
@d24 3
d137 1
a137 1
$MirOS: contrib/code/jupp/HINTS,v 1.6 2011/10/04 22:47:50 tg Exp $
@


1.6
log
@release this as joe 3.1jupp18
@
text
@d18 3
d134 1
a134 1
$MirOS: contrib/code/jupp/HINTS,v 1.5 2011/07/16 21:57:55 tg Exp $
@


1.5
log
@fixes from packages.debian.org/joe are merged; now do a warning cleanup
(although some are only a workaround, and the joe code gives the creeps)
@
text
@d83 1
a83 1
complete the block.
d94 1
a94 1
this in Putty).
d97 12
a108 1
sequence for these keys are known.
d131 1
a131 1
$MirOS: contrib/code/jupp/HINTS,v 1.4 2009/10/18 14:52:55 tg Exp $
@


1.4
log
@backport hex editing mode from joe 3.7 for waga as late birthday present
@
text
@d10 8
d120 1
a120 1
$MirOS: contrib/code/jupp/HINTS,v 1.3 2008/05/13 16:17:42 tg Exp $
@


1.3
log
@RCS IDs to the remaining few (non-autogen'd) files
@
text
@d91 20
d112 1
a112 1
$MirOS$
@


1.2
log
@sync a few files with upstream; bump to 3.1jupp6; mention gcc glitch
@
text
@d90 3
@


1.1
log
@Initial revision
@
text
@d4 6
@


1.1.201.1
log
@JOE's Own Editor 3.1
@
text
@@
