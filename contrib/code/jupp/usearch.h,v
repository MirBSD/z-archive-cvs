head	1.5;
access;
symbols
	joe-3_1jupp38:1.5
	joe-3_1jupp37:1.5
	joe-3_1jupp36:1.5
	joe-3_1jupp35:1.5
	joe-3_1jupp34:1.5
	joe-3_1jupp33:1.5
	joe-3_1jupp32:1.5
	joe-2_8jupp3:1.1.21.1
	joe-3_1jupp31:1.2
	joe-3_1jupp30:1.2
	joe-3_1jupp29:1.2
	joe-3_1jupp28:1.2
	joe-3_1jupp27:1.2
	joe-3_1jupp26:1.2
	joe-3_1jupp25:1.2
	joe-3_1jupp24:1.2
	joe-3_1jupp23:1.2
	joe-3_1jupp22:1.2
	joe-3_1jupp21:1.2
	joe-3_1jupp20:1.2
	joe-3_1jupp19:1.2
	joe-3_1jupp18:1.2
	joe-3_1jupp17:1.2
	joe-2_8jupp2:1.1.21.1
	joe-3_1jupp16:1.2
	joe-3_1jupp15:1.2
	joe-3_1jupp14:1.2
	joe-3_1jupp12:1.2
	joe-3_1jupp11:1.2
	joe-2_8jupp1:1.1.21.1
	joe-3_1jupp10:1.2
	joe-3_1jupp9:1.2
	joe-3_1jupp8:1.1.201.1
	joe-3_1jupp7:1.1.201.1
	joe-3_1jupp6:1.1.201.1
	joe-3_1jupp5:1.1.201.1
	joe-3_1jupp4:1.1.201.1
	joe-2_8-msdos:1.1.21.1.0.2
	joe-2_8:1.1.21.1
	joe28:1.1.21
	joe-3_1:1.1.201.1
	tg:1.1.201;
locks; strict;
comment	@ * @;


1.5
date	2017.12.06.21.17.03;	author tg;	state Exp;
branches;
next	1.4;
commitid	1005A285E5918D423C7;

1.4
date	2017.12.02.17.00.51;	author tg;	state Exp;
branches;
next	1.3;
commitid	1005A22DC570063953B;

1.3
date	2017.12.02.02.07.36;	author tg;	state Exp;
branches;
next	1.2;
commitid	1005A220AD65C90E687;

1.2
date	2008.05.13.13.08.29;	author tg;	state Exp;
branches;
next	1.1;
commitid	100482992BC01EE89A1;

1.1
date	2005.02.05.00.37.13;	author tg;	state Exp;
branches
	1.1.21.1
	1.1.201.1;
next	;

1.1.21.1
date	2005.02.12.15.40.25;	author tg;	state Exp;
branches;
next	;

1.1.201.1
date	2005.02.05.00.37.13;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@begin overhaul for antique/header compat:
• PARAMS begone
• libc4 ustat definition: resolve inline
• ignore HAVE_*_H for headers mksh includes unconditionally
@
text
@/*
 *	Search & Replace system
 *	Copyright
 *		(C) 1992 Joseph H. Allen
 *
 *	This file is part of JOE (Joe's Own Editor)
 */
#ifndef _JOE_USEARCH_H
#define _JOE_USEARCH_H 1

#ifdef EXTERN_CMD_C
__IDSTRING(rcsid_usearch_h, "$MirOS: contrib/code/jupp/usearch.h,v 1.4 2017/12/02 17:00:51 tg Exp $");
#endif

SRCH *mksrch(unsigned char *pattern, unsigned char *replacement, int ignore, int backwards, int repeat, int replace, int rest);
void rmsrch(SRCH *srch);

int dopfnext(BW *bw, SRCH *srch, int *notify);

int pffirst(BW *bw);
int pfnext(BW *bw);

int pqrepl(BW *bw);
int prfirst(BW *bw);

int ufinish(BW *bw);

#endif
@


1.4
log
@fix string name collision by prefixing the idstrings in not-.c files
@
text
@d12 1
a12 1
__IDSTRING(rcsid_usearch_h, "$MirOS: contrib/code/jupp/usearch.h,v 1.3 2017/12/02 02:07:36 tg Exp $");
d15 2
a16 2
SRCH *mksrch PARAMS((unsigned char *pattern, unsigned char *replacement, int ignore, int backwards, int repeat, int replace, int rest));
void rmsrch PARAMS((SRCH *srch));
d18 1
a18 1
int dopfnext PARAMS((BW *bw, SRCH *srch, int *notify));
d20 2
a21 2
int pffirst PARAMS((BW *bw));
int pfnext PARAMS((BW *bw));
d23 2
a24 2
int pqrepl PARAMS((BW *bw));
int prfirst PARAMS((BW *bw));
d26 1
a26 1
int ufinish PARAMS((BW *bw));
@


1.3
log
@overhaul the way includes work; give jupp proper RCS IDs

(after all, empty source files are UB; win32.c is likely)
@
text
@d12 1
a12 1
__RCSID("$MirOS$");
@


1.2
log
@prepare for joe-3.1jupp9:
* sync NEWS
* bump vsn in configure.ac
* tag all files with RCS ID
* sync licence template
@
text
@a0 1
/* $MirOS$ */
d11 3
a13 2
#include "config.h"
#include "types.h"
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.21.1
log
@Import joe-2.8 sources into vendor branch so it doesn't get lost
@
text
@d1 9
a9 2
#ifndef _Isrch
#define _Isrch 1
d12 1
a12 2
#include "queue.h"
#include "b.h"
d14 2
a15 2
typedef struct search SRCH;
typedef struct srchrec SRCHREC;
d17 1
a17 28
struct srchrec
 {
 LINK(SRCHREC) link;	/* Linked list of search & replace locations */
 int yn;		/* Did we replace? */
 long addr;		/* Where we were */
 };

struct search
 {
 char *pattern;		/* Search pattern */
 char *replacement;	/* Replacement string */
 int backwards;		/* Set if search should go backwards */
 int ignore;		/* Set if we should ignore case */
 int repeat;		/* Set with repeat count (or -1 for no repeat count) */
 int replace;		/* Set if this is search & replace */
 int rest;		/* Set to do remainder of search & replace w/o query */
 char *entire;		/* Entire matched string */
 char *pieces[26];	/* Peices of the matched string */
 int flg;		/* Set after prompted for first replace */
 SRCHREC recs;		/* Search & replace position history */
 P *markb, *markk;	/* Original marks */
 int valid;		/* Set if original marks are a valid block */
 long addr;		/* Addr of last replacement or -1 for none */
 int restrict;		/* Search restricted to marked block */
 };

SRCH *mksrch();
void rmsrch();
d19 2
a20 1
int dopfnext();
d22 2
a23 2
int pffirst();
int pfnext();
d25 1
a25 2
int pqrepl();
int prfirst();
@


1.1.201.1
log
@JOE's Own Editor 3.1
@
text
@@
