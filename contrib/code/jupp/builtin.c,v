head	1.10;
access;
symbols
	joe-3_1jupp38:1.10
	joe-3_1jupp37:1.10
	joe-3_1jupp36:1.10
	joe-3_1jupp35:1.10
	joe-3_1jupp34:1.10
	joe-3_1jupp33:1.10
	joe-3_1jupp32:1.8
	joe-3_1jupp31:1.5
	joe-3_1jupp30:1.5
	joe-3_1jupp29:1.4
	joe-3_1jupp28:1.4
	joe-3_1jupp27:1.3
	joe-3_1jupp26:1.3
	joe-3_1jupp25:1.3
	joe-3_1jupp24:1.3
	joe-3_1jupp23:1.3
	joe-3_1jupp22:1.3
	joe-3_1jupp21:1.2
	joe-3_1jupp20:1.2
	joe-3_1jupp19:1.2
	joe-3_1jupp18:1.2
	joe-3_1jupp17:1.2
	joe-3_1jupp16:1.2
	joe-3_1jupp15:1.2
	joe-3_1jupp14:1.2
	joe-3_1jupp12:1.1;
locks; strict;
comment	@ * @;


1.10
date	2018.01.08.00.48.06;	author tg;	state Exp;
branches;
next	1.9;
commitid	1005A52BFDF22C35AF8;

1.9
date	2018.01.08.00.08.18;	author tg;	state Exp;
branches;
next	1.8;
commitid	1005A52B68A553004BC;

1.8
date	2017.12.08.02.00.38;	author tg;	state Exp;
branches;
next	1.7;
commitid	1005A29F2506E789D2B;

1.7
date	2017.12.06.23.02.01;	author tg;	state Exp;
branches;
next	1.6;
commitid	1005A2876FC4FFE7EF5;

1.6
date	2017.12.02.02.07.23;	author tg;	state Exp;
branches;
next	1.5;
commitid	1005A220AD65C90E687;

1.5
date	2017.01.10.19.16.27;	author tg;	state Exp;
branches;
next	1.4;
commitid	1005875332028CA2A36;

1.4
date	2014.10.23.17.10.44;	author tg;	state Exp;
branches;
next	1.3;
commitid	1005449369348370C87;

1.3
date	2012.09.02.14.44.36;	author tg;	state Exp;
branches;
next	1.2;
commitid	100504370EC11034225;

1.2
date	2010.04.08.15.31.01;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004BBDF6C54CC9A0DB;

1.1
date	2009.10.18.14.17.34;	author tg;	state Exp;
branches;
next	;
commitid	1004ADB237E67C2F65E;


desc
@@


1.10
log
@this is ugly enough, and jfgets mirrors fgets which gets an int ipv size_t,
but clean it up at least a little
@
text
@/*
 *	Built-in config files
 *	Copyright
 *		(C) 2006 Joseph H. Allen
 *
 *	This file is part of JOE (Joe's Own Editor)
 */

#include "config.h"

__RCSID("$MirOS: contrib/code/jupp/builtin.c,v 1.8 2017/12/08 02:00:38 tg Exp $");

#include <stdlib.h>
#include <string.h>

#include "types.h"
#include "builtin.h"
#include "utils.h"

#define zcmp(a,b) strcmp((char *)(a), (char *)(b))

JFILE *
jfopen(const unsigned char *name, const char *mode)
{
	if (name[0] == '*') {
		int x;
		char *xname, *cp;

		xname = strdup((const char *)name + 1);
		cp = xname;
		while ((x = *cp++)) {
			if (x >= 'A' && x <= 'Z')
				cp[-1] = x - 'A' + 'a';
		}

		for (x = 0; builtins[x]; x += 2) {
			if (!zcmp(builtins[x], xname)) {
				JFILE *j = malloc(sizeof(JFILE));
				j->f = 0;
				j->p = builtins[x + 1];
				free(xname);
				return j;
			}
		}
		free(xname);
		return 0;
	} else {
		FILE *f = fopen((const char *)name, (const char *)mode);
		if (f) {
			JFILE *j = malloc(sizeof(JFILE));
			j->f = f;
			j->p = 0;
			return j;
		} else {
			return 0;
		}
	}
}

int jfclose(JFILE *f)
{
	int rtn = 0;
	if (f->f)
		rtn = fclose(f->f);
	free(f);
	return rtn;
}

/*XXX fails to honour len (= 1024, in practice) for builtins */
unsigned char *
jfgets(unsigned char *buf, int len, JFILE *f)
{
	if (f->f)
		return (unsigned char *)fgets((char *)buf, len, f->f);
	else {
		if (f->p[0]) {
			int x;
			for (x = 0; f->p[x] && f->p[x] != '\n'; ++x)
				buf[x] = f->p[x];
			if (f->p[x] == '\n') {
				buf[x++] = '\n';
			}
			buf[x] = 0;
			f->p += x;
			return buf;
		} else
			return 0;
	}
}
@


1.9
log
@shocking truths
@
text
@d69 1
a69 1
/*XXX fails to honour len (256 or 1024, in practice) for builtins */
@


1.8
log
@don’t box malloc/calloc/realloc/free; don’t cast malloc result; order calloc args
@
text
@d11 1
a11 1
__RCSID("$MirOS: contrib/code/jupp/builtin.c,v 1.7 2017/12/06 23:02:01 tg Exp $");
d69 3
a71 1
unsigned char *jfgets(unsigned char *buf,int len,JFILE *f)
@


1.7
log
@lots of fixes related to prototyping
@
text
@d11 1
a11 1
__RCSID("$MirOS: contrib/code/jupp/builtin.c,v 1.6 2017/12/02 02:07:23 tg Exp $");
d38 1
a38 1
				JFILE *j = (JFILE *)joe_malloc(sizeof(JFILE));
d41 1
a41 1
				joe_free(xname);
d45 1
a45 1
		joe_free(xname);
d50 1
a50 1
			JFILE *j = (JFILE *)joe_malloc(sizeof(JFILE));
d65 1
a65 1
	joe_free(f);
@


1.6
log
@overhaul the way includes work; give jupp proper RCS IDs

(after all, empty source files are UB; win32.c is likely)
@
text
@d11 1
a11 1
__RCSID("$MirOS$");
d22 2
a23 1
JFILE *jfopen(unsigned char *name, const char *mode)
d27 1
a27 1
		char *xname;
d29 3
a31 3
		xname = strdup((char *)name + 1);
		name = (void *)xname;
		while ((x = *name++)) {
d33 1
a33 1
				name[-1] = x - 'A' + 'a';
d48 1
a48 1
		FILE *f = fopen((char *)name, (char *)mode);
@


1.5
log
@these now all need <stdlib.h>
@
text
@a0 1
/* $MirOS: contrib/code/jupp/builtin.c,v 1.3 2012/09/02 14:44:36 tg Exp $ */
d11 2
a12 1
#include <stdio.h>
@


1.4
log
@move a few includes so that _FILE_OFFSET_BITS is always correctly defined,
so we actually do build with LFS on ILP32 GNU/Linux; discovered by lintian
@
text
@d13 1
@


1.3
log
@let it find *JUPP32rc on Natureshadow’s Windows® 98…
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/jupp/builtin.c,v 1.2 2010/04/08 15:31:01 tg Exp $ */
d10 2
d14 1
@


1.2
log
@Add --disable-getpwnam and clean up warnings
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/jupp/builtin.c,v 1.1 2009/10/18 14:17:34 tg Exp $ */
d22 9
d32 1
a32 1
			if (!zcmp(builtins[x], name + 1)) {
d36 1
d40 1
@


1.1
log
@add built-in (minimal) jupprc, for stand-alone things
backported from joe 3.7 (Debian)
@
text
@d1 1
a1 1
/* $MirOS$ */
d18 1
a18 1
JFILE *jfopen(unsigned char *name, char *mode)
@

