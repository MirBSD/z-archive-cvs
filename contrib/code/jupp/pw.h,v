head	1.10;
access;
symbols
	joe-3_1jupp38:1.10
	joe-3_1jupp37:1.10
	joe-3_1jupp36:1.10
	joe-3_1jupp35:1.10
	joe-3_1jupp34:1.10
	joe-3_1jupp33:1.10
	joe-3_1jupp32:1.10
	joe-2_8jupp3:1.1.21.1
	joe-3_1jupp31:1.4
	joe-3_1jupp30:1.4
	joe-3_1jupp29:1.3
	joe-3_1jupp28:1.3
	joe-3_1jupp27:1.3
	joe-3_1jupp26:1.3
	joe-3_1jupp25:1.3
	joe-3_1jupp24:1.3
	joe-3_1jupp23:1.3
	joe-3_1jupp22:1.3
	joe-3_1jupp21:1.3
	joe-3_1jupp20:1.3
	joe-3_1jupp19:1.3
	joe-3_1jupp18:1.3
	joe-3_1jupp17:1.3
	joe-2_8jupp2:1.1.21.1
	joe-3_1jupp16:1.3
	joe-3_1jupp15:1.3
	joe-3_1jupp14:1.3
	joe-3_1jupp12:1.3
	joe-3_1jupp11:1.2
	joe-2_8jupp1:1.1.21.1
	joe-3_1jupp10:1.2
	joe-3_1jupp9:1.2
	joe-3_1jupp8:1.1.201.1
	joe-3_1jupp7:1.1.201.1
	joe-3_1jupp6:1.1.201.1
	joe-3_1jupp5:1.1.201.1
	joe-3_1jupp4:1.1.201.1
	joe-2_8-msdos:1.1.21.1.0.2
	joe-2_8:1.1.21.1
	joe28:1.1.21
	joe-3_1:1.1.201.1
	tg:1.1.201;
locks; strict;
comment	@ * @;


1.10
date	2017.12.08.02.17.22;	author tg;	state Exp;
branches;
next	1.9;
commitid	1005A29F64A06DEB239;

1.9
date	2017.12.06.23.58.37;	author tg;	state Exp;
branches;
next	1.8;
commitid	1005A2884424C3F3AD8;

1.8
date	2017.12.06.23.02.04;	author tg;	state Exp;
branches;
next	1.7;
commitid	1005A2876FC4FFE7EF5;

1.7
date	2017.12.06.21.16.58;	author tg;	state Exp;
branches;
next	1.6;
commitid	1005A285E5918D423C7;

1.6
date	2017.12.02.17.00.49;	author tg;	state Exp;
branches;
next	1.5;
commitid	1005A22DC570063953B;

1.5
date	2017.12.02.02.07.30;	author tg;	state Exp;
branches;
next	1.4;
commitid	1005A220AD65C90E687;

1.4
date	2017.01.11.22.56.49;	author tg;	state Exp;
branches;
next	1.3;
commitid	1005876B84150F7CE16;

1.3
date	2009.10.18.14.52.56;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004ADB2BD317498872;

1.2
date	2008.05.13.13.08.24;	author tg;	state Exp;
branches;
next	1.1;
commitid	100482992BC01EE89A1;

1.1
date	2005.02.05.00.37.13;	author tg;	state Exp;
branches
	1.1.21.1
	1.1.201.1;
next	;

1.1.21.1
date	2005.02.12.15.40.22;	author tg;	state Exp;
branches;
next	;

1.1.201.1
date	2005.02.05.00.37.13;	author tg;	state Exp;
branches;
next	;


desc
@@


1.10
log
@more small tweaks
@
text
@/*
 *	Prompt windows
 *	Copyright
 *		(C) 1992 Joseph H. Allen
 *
 *	This file is part of JOE (Joe's Own Editor)
 */
#ifndef _JOE_PW_H
#define _JOE_PW_H 1

#ifdef EXTERN_CMD_C
__IDSTRING(rcsid_pw_h, "$MirOS: contrib/code/jupp/pw.h,v 1.7 2017/12/06 21:16:58 tg Exp $");
#endif

/* BW *wmkpw(BW *bw,char *prompt,int (*func)(),char *huh,int (*abrt)(),
	     int (*tab)(),void *object,int *notify);
 * Create a prompt window for the given window
 */
BW *wmkpw(W *w, const unsigned char *prompt, B **history, jpoly_int *func, const unsigned char *huh, jpoly_int *abrt, jpoly_int *tab, void *object, int *notify, struct charmap *map);

int ucmplt(BW *bw, int k);

/* Function for TAB completion */

unsigned char **regsub(unsigned char **z, int len, unsigned char *s);

void cmplt_ins(BW *bw,unsigned char *line);

int cmplt_abrt(BW *bw,int x, unsigned char *line);

int cmplt_rtn(MENU *m,int x,unsigned char *line);

int simple_cmplt(BW *bw,unsigned char **list);

extern WATOM watompw;

#endif
@


1.9
log
@make wmkpw const again
@
text
@d16 1
a16 1
             int (*tab)(),void *object,int *notify);
@


1.8
log
@lots of fixes related to prototyping
@
text
@d19 1
a19 1
BW *wmkpw(W *w, unsigned char *prompt, B **history, jpoly_int *func, const unsigned char *huh, jpoly_int *abrt, jpoly_int *tab, void *object, int *notify, struct charmap *map);
@


1.7
log
@begin overhaul for antique/header compat:
• PARAMS begone
• libc4 ustat definition: resolve inline
• ignore HAVE_*_H for headers mksh includes unconditionally
@
text
@d12 1
a12 1
__IDSTRING(rcsid_pw_h, "$MirOS: contrib/code/jupp/pw.h,v 1.6 2017/12/02 17:00:49 tg Exp $");
d19 1
a19 1
BW *wmkpw(W *w, unsigned char *prompt, B **history, int (*func) (), const unsigned char *huh, int (*abrt) (), int (*tab) (), void *object, int *notify, struct charmap *map);
@


1.6
log
@fix string name collision by prefixing the idstrings in not-.c files
@
text
@d12 1
a12 1
__IDSTRING(rcsid_pw_h, "$MirOS: contrib/code/jupp/pw.h,v 1.5 2017/12/02 02:07:30 tg Exp $");
d19 1
a19 1
BW *wmkpw PARAMS((W *w, unsigned char *prompt, B **history, int (*func) (), const unsigned char *huh, int (*abrt) (), int (*tab) (), void *object, int *notify, struct charmap *map));
d21 1
a21 1
int ucmplt PARAMS((BW *bw, int k));
d25 1
a25 1
unsigned char **regsub PARAMS((unsigned char **z, int len, unsigned char *s));
d27 1
a27 1
void cmplt_ins PARAMS((BW *bw,unsigned char *line));
d29 1
a29 1
int cmplt_abrt PARAMS((BW *bw,int x, unsigned char *line));
d31 1
a31 1
int cmplt_rtn PARAMS((MENU *m,int x,unsigned char *line));
d33 1
a33 1
int simple_cmplt PARAMS((BW *bw,unsigned char **list));
@


1.5
log
@overhaul the way includes work; give jupp proper RCS IDs

(after all, empty source files are UB; win32.c is likely)
@
text
@d12 1
a12 1
__RCSID("$MirOS$");
@


1.4
log
@constify “huh” (… huh‽)
@
text
@a0 1
/* $MirOS: contrib/code/jupp/pw.h,v 1.2 2008/05/13 13:08:24 tg Exp $ */
d11 3
a13 2
#include "config.h"
#include "types.h"
@


1.3
log
@backport hex editing mode from joe 3.7 for waga as late birthday present
@
text
@d19 1
a19 1
BW *wmkpw PARAMS((W *w, unsigned char *prompt, B **history, int (*func) (), unsigned char *huh, int (*abrt) (), int (*tab) (), void *object, int *notify, struct charmap *map));
@


1.2
log
@prepare for joe-3.1jupp9:
* sync NEWS
* bump vsn in configure.ac
* tag all files with RCS ID
* sync licence template
@
text
@d1 1
a1 1
/* $MirOS$ */
d35 2
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.21.1
log
@Import joe-2.8 sources into vendor branch so it doesn't get lost
@
text
@d1 9
a9 2
/* Prompt windows
   Copyright (C) 1992 Joseph H. Allen
d11 2
a12 1
This file is part of JOE (Joe's Own Editor)
d14 5
a18 12
JOE is free software; you can redistribute it and/or modify it under the 
terms of the GNU General Public License as published by the Free Software 
Foundation; either version 1, or (at your option) any later version.  

JOE is distributed in the hope that it will be useful, but WITHOUT ANY 
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS 
FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more 
details.  

You should have received a copy of the GNU General Public License along with 
JOE; see the file COPYING.  If not, write to the Free Software Foundation, 
675 Mass Ave, Cambridge, MA 02139, USA.  */ 
d20 1
a20 2
#ifndef _Ipw
#define _Ipw 1
d22 1
a22 2
#include "config.h"
#include "bw.h"
d24 1
a24 1
typedef struct pw PW;
d26 1
a26 11
struct pw
 {
 int (*pfunc)();	/* Func which gets called when RTN is hit */
 int (*abrt)();		/* Func which gets called when window is aborted */
 int (*tab)();		/* Func which gets called when TAB is hit */
 char *prompt;		/* Prompt string */
 int promptlen;		/* Width of prompt string */
 int promptofst;	/* Prompt scroll offset */
 B *hist;		/* History buffer */
 void *object;		/* Object */
 };
d28 1
a28 1
#define TYPEPW 0x200
d30 1
a30 5
/* BW *wmkpw(BW *bw,char *prompt,int (*func)(),char *huh,int (*abrt)(),
             int (*tab)(),void *object,int *notify);
 * Create a prompt window for the given window
 */
BW *wmkpw();
d32 1
a32 1
int ucmplt();
@


1.1.201.1
log
@JOE's Own Editor 3.1
@
text
@@
