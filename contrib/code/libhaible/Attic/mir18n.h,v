head	1.9;
access;
symbols;
locks; strict;
comment	@ * @;


1.9
date	2006.06.01.22.03.28;	author tg;	state dead;
branches;
next	1.8;
commitid	100447F641E589322F2;

1.8
date	2006.06.01.21.49.01;	author tg;	state Exp;
branches;
next	1.7;
commitid	100447F60D76700C2AD;

1.7
date	2006.05.30.10.22.09;	author tg;	state Exp;
branches;
next	1.6;
commitid	100447C1C4F51B591D6;

1.6
date	2006.05.30.10.02.16;	author tg;	state Exp;
branches;
next	1.5;
commitid	100447C17FC2B27DF1E;

1.5
date	2006.05.23.11.18.43;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004472EF7E11F22DA8;

1.4
date	2006.05.23.11.11.52;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004472EDF10365E06E;

1.3
date	2006.05.23.10.49.08;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004472E8A31C9D1272;

1.2
date	2006.05.23.10.25.23;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004472E31419B3570F;

1.1
date	2006.05.23.10.18.05;	author tg;	state Exp;
branches;
next	;
commitid	1004472E1706650004D;


desc
@@


1.9
log
@move UCD-generated attribute tables from libhaible to libc;
sync required definitions appropriately
@
text
@/* $MirOS: contrib/code/libhaible/mir18n.h,v 1.8 2006/06/01 21:49:01 tg Exp $ */

#ifndef _LIBC_MIR18N_H
#define _LIBC_MIR18N_H

/* highest allowed character in 'C' locale */
#define MIR18N_SB_MAX	0xFF
/* set to 0xFF to allow conversion from/to latin1 for historical reasons */
#define MIR18N_SB_CVT	0xFF
/* highest allowed character in 'UTF-8' locale */
#define MIR18N_MB_MAX	0xFFFD

#ifndef __bool_true_false_are_defined
#include <stdbool.h>
#endif

__BEGIN_DECLS
extern bool __locale_is_utf8;
__END_DECLS

#ifdef mir18n_attributes
/* from Bruno Haible's libutf8 */

/* How the 12 character attributes are encoded in 8 bits: Every attribute is
   represented by an "include bitmask" and an "exclude bitmask".
    Attribute	bit/formula		comment
     upper	bit			implies towlower(x) != x == towupper(x)
     lower	bit			implies towlower(x) == x != towupper(x)
     alpha	bit			superset of upper || lower
     digit	xdigit && !alpha	'0'..'9' and more
     xdigit	bit			'0'..'9','a'..'f','A'..'F' and more
     space	bit			' ', '\f', '\n', '\r', '\t', '\v'
     print	bit
     graph	print && !space
     blank	bit			' ', '\t'
     cntrl	bit			0x00..0x1F,0x7F
     punct	print && !(alpha || xdigit || space)
     alnum	alpha || xdigit
*/

#define iswmask(number,incl,excl)  ((incl) | ((excl) << 8) | ((number) << 16))
#define wmask_incl(mask)	(mask) & 0xFF
#define wmask_excl(mask)	((mask) >> 8) & 0xFF
#define wmask_number(mask)	((mask) >> 16)

#define upper	  1
#define lower	  2
#define alpha	  4
#define digit	  0
#define xdigit	  8
#define space	 16
#define print	 32
#define graph	  0
#define blank	 64
#define cntrl	128
#define punct	  0
#define alnum	  0

#define wctype_upper  iswmask(0, upper, 0)
#define wctype_lower  iswmask(1, lower, 0)
#define wctype_alpha  iswmask(2, alpha, 0)
#define wctype_digit  iswmask(3, xdigit, alpha)
#define wctype_xdigit iswmask(4, xdigit, 0)
#define wctype_space  iswmask(5, space, 0)
#define wctype_print  iswmask(6, print, 0)
#define wctype_graph  iswmask(7, print, space)
#define wctype_blank  iswmask(8, blank, 0)
#define wctype_cntrl  iswmask(9, cntrl, 0)
#define wctype_punct  iswmask(10, print, alpha|xdigit|space)
#define wctype_alnum  iswmask(11, alpha|xdigit, 0)

#define attribute_table mir18n_attribute_table
__BEGIN_DECLS
extern const unsigned char * const attribute_table[0x100];
__END_DECLS
#endif

#ifdef mir18n_caseconv
/* namespace definitions for the UCD tables */
#define nop_page mir18n_attribute_nop_page
#define tolower_page mir18n_caseconv_tolower
#define toupper_page mir18n_caseconv_toupper

__BEGIN_DECLS
extern const uint16_t nop_page[256];
extern const uint16_t * const tolower_table[0x100];
extern const uint16_t * const toupper_table[0x100];
__END_DECLS
#endif

#endif
@


1.8
log
@use explicit instead of implicit includes if possible
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/libhaible/mir18n.h,v 1.7 2006/05/30 10:22:09 tg Exp $ */
@


1.7
log
@add MIR18N_SB_CVT which is 0xFF as long as we want to
allow the user to convert a (char)x to a (wchar_t)x for
x e [0x80;0xff] as well.

if MIR18N_SB_MAX and MIR18N_SB_CVT are both 0xFF, the 'C'
locale is, in reality, a 'en_US.ISO-8859-1' locale; if
MIR18N_SB_MAX is set down to 0x7F, certain functions such
as isalpha() etc. will be restricted to the ISO_646.irv:1991
character set, but others (btowc and wctob, for example)
will still convert latin1 singlebyte strings (e.g. for keyboard
input, until uwscons is the only one...)
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/libhaible/mir18n.h,v 1.6 2006/05/30 10:02:16 tg Exp $ */
a12 4
#ifndef __BEGIN_DECLS
#include <sys/cdefs.h>
#endif

a78 5
/* for uint16_t */
#ifndef __BIT_TYPES_DEFINED__
#include <machine/types.h>
#endif

@


1.6
log
@* #define the respective highest allowed character for the
  'C' and 'UTF-8' locales - the 'C' one is 0xFF at the moment
  but will go down to 0x7F later, once we switch to UTF-8
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/libhaible/mir18n.h,v 1.5 2006/05/23 11:18:43 tg Exp $ */
d8 2
@


1.5
log
@* move nop_table into caseconv code
* change nop_table type to unsigned short for now (implied casts suck)
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/libhaible/mir18n.h,v 1.4 2006/05/23 11:11:52 tg Exp $ */
d6 5
@


1.4
log
@* mir18n.h: need <sys/cdefs.h> too
* wcwidth.c: NULL is <stdlib.h>
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/libhaible/mir18n.h,v 1.3 2006/05/23 10:49:08 tg Exp $ */
d76 5
d87 3
a89 3
extern const short nop_page[256];
extern const short * const tolower_table[0x100];
extern const short * const toupper_table[0x100];
@


1.3
log
@* export (namespace'd) two more tables (caseconv)
* move the namespace and extern decls into mir18n.h
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/libhaible/mir18n.h,v 1.2 2006/05/23 10:25:23 tg Exp $ */
d6 4
@


1.2
log
@add generated data for isw*() attributes and supporting
interface definitions
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/libhaible/mir18n.h,v 1.1 2006/05/23 10:18:05 tg Exp $ */
d71 13
@


1.1
log
@copy this file from libc
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libc/include/mir18n.h,v 1.1 2006/05/21 12:12:30 tg Exp $ */
d14 57
@

