head	1.49;
access;
symbols
	tg-mirmake-dev_BASE:1.25
	tg-mirmake-dev:1.25.0.2
	mirbsd:1.1.7;
locks; strict;
comment	@ * @;


1.49
date	2013.10.31.20.05.44;	author tg;	state Exp;
branches;
next	1.48;
commitid	1005272B7081B0E5655;

1.48
date	2011.01.24.21.26.19;	author tg;	state Exp;
branches;
next	1.47;
commitid	1004D3DEE92351DB51C;

1.47
date	2009.11.09.17.59.21;	author tg;	state Exp;
branches;
next	1.46;
commitid	1004AF8587043AB5C67;

1.46
date	2009.03.15.14.54.36;	author tg;	state Exp;
branches;
next	1.45;
commitid	10049BD16BC5318A841;

1.45
date	2008.12.29.22.36.19;	author tg;	state Exp;
branches;
next	1.44;
commitid	100495950F15874750F;

1.44
date	2008.12.29.20.15.11;	author tg;	state Exp;
branches;
next	1.43;
commitid	10049592FDA06C9CAD8;

1.43
date	2008.11.10.01.40.13;	author tg;	state Exp;
branches;
next	1.42;
commitid	1004917911211F38C50;

1.42
date	2008.07.05.17.00.28;	author tg;	state Exp;
branches;
next	1.41;
commitid	100486FA8B61E112145;

1.41
date	2008.06.17.22.49.39;	author tg;	state Exp;
branches;
next	1.40;
commitid	10048583F9449F7ADED;

1.40
date	2008.05.03.01.09.28;	author tg;	state Exp;
branches;
next	1.39;
commitid	100481BBB3B66CD6DBA;

1.39
date	2008.04.06.23.15.50;	author tg;	state Exp;
branches;
next	1.38;
commitid	10047F9598033ADB450;

1.38
date	2008.04.06.22.37.36;	author tg;	state Exp;
branches;
next	1.37;
commitid	10047F950B24746C7DE;

1.37
date	2008.04.06.22.35.24;	author tg;	state Exp;
branches;
next	1.36;
commitid	10047F9503D08FFB97C;

1.36
date	2008.04.06.22.20.06;	author tg;	state Exp;
branches;
next	1.35;
commitid	10047F94CA65FDFB96C;

1.35
date	2008.03.12.22.26.37;	author tg;	state Exp;
branches;
next	1.34;
commitid	10047D858B364F8DA53;

1.34
date	2008.03.12.22.11.07;	author tg;	state Exp;
branches;
next	1.33;
commitid	10047D85508179D5054;

1.33
date	2008.03.12.22.06.21;	author tg;	state Exp;
branches;
next	1.32;
commitid	10047D853F34C973C84;

1.32
date	2008.03.12.21.58.00;	author tg;	state Exp;
branches;
next	1.31;
commitid	10047D851FA4A081C4F;

1.31
date	2008.03.09.16.19.49;	author tg;	state Exp;
branches;
next	1.30;
commitid	10047D40E2B529F06C5;

1.30
date	2008.03.09.13.55.04;	author tg;	state Exp;
branches;
next	1.29;
commitid	10047D3EC4A786503AB;

1.29
date	2008.03.09.13.42.51;	author tg;	state Exp;
branches;
next	1.28;
commitid	10047D3E95307755B9E;

1.28
date	2008.02.12.20.35.23;	author bsiegert;	state Exp;
branches;
next	1.27;
commitid	10047B2032200018366;

1.27
date	2006.12.28.01.30.42;	author tg;	state Exp;
branches;
next	1.26;
commitid	10045931E4D5087BCE9;

1.26
date	2006.11.07.00.06.58;	author tg;	state Exp;
branches;
next	1.25;
commitid	100454FCE3423BA04C1;

1.25
date	2006.08.26.23.20.22;	author tg;	state Exp;
branches;
next	1.24;
commitid	10044F0D743676FD0E9;

1.24
date	2006.08.26.22.46.43;	author tg;	state Exp;
branches;
next	1.23;
commitid	10044F0CF6A4E28F290;

1.23
date	2006.08.26.16.45.26;	author tg;	state Exp;
branches;
next	1.22;
commitid	10044F07A98434B547D;

1.22
date	2006.07.30.23.33.41;	author tg;	state Exp;
branches;
next	1.21;
commitid	10044CD417F29EBB00E;

1.21
date	2006.06.25.05.39.09;	author tg;	state Exp;
branches;
next	1.20;
commitid	100449E2189528751EC;

1.20
date	2006.06.23.17.30.53;	author tg;	state Exp;
branches;
next	1.19;
commitid	100449C255865C532D8;

1.19
date	2005.12.17.05.46.09;	author tg;	state Exp;
branches;
next	1.18;
commitid	10043A3A3E65E20A413;

1.18
date	2005.11.24.11.43.53;	author tg;	state Exp;
branches;
next	1.17;
commitid	3afa4385a789b130;

1.17
date	2005.11.16.16.40.29;	author tg;	state Exp;
branches;
next	1.16;
commitid	7e74437b610bc6c8;

1.16
date	2005.11.10.12.58.08;	author tg;	state Exp;
branches;
next	1.15;
commitid	45fa437343e517a3;

1.15
date	2005.09.12.22.24.57;	author tg;	state Exp;
branches;
next	1.14;
commitid	42a743260045a8d0;

1.14
date	2005.05.21.17.04.11;	author tg;	state Exp;
branches;
next	1.13;
commitid	1ff9428f6a1fca72;

1.13
date	2005.05.21.17.03.49;	author tg;	state Exp;
branches;
next	1.12;
commitid	4755428f69a27ba8;

1.12
date	2005.05.21.15.38.50;	author tg;	state Exp;
branches;
next	1.11;
commitid	38ce428f5605ec09;

1.11
date	2005.05.21.01.04.02;	author tg;	state Exp;
branches;
next	1.10;
commitid	3e3d428e88fcc565;

1.10
date	2005.04.26.16.06.33;	author tg;	state Exp;
branches;
next	1.9;

1.9
date	2005.04.12.17.47.02;	author tg;	state Exp;
branches;
next	1.8;

1.8
date	2005.04.12.17.30.07;	author tg;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.12.17.11.55;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2005.04.12.10.11.53;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2005.04.11.16.57.55;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.11.15.41.27;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.02.28.20.09.23;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.23.21.29.43;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.02.36.15;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.02.05.02.36.15;	author tg;	state Exp;
branches;
next	;


desc
@@


1.49
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.48 2011/01/24 21:26:19 tg Exp $ */

/*-
 * Copyright (c) 2005, 2006, 2008, 2009, 2011, 2013
 *	Thorsten "mirabilos" Glaser <tg@@mirbsd.org>
 * Partially based upon some code
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.
 * This code is derived from software contributed to Berkeley by
 * Berkeley Software Design, Inc.
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 *-
 * Add here: macros not defined on every operating system, for easier
 * patching of ported apps. Same for definitions of libmirmake, these
 * are only declared if _MIRMAKE_DEFNS is defined first.
 * Suggest to use with CPPFLAGS+= -include "/path/to/mirmake.h" - but
 * take care of CPP uses with assembly source.
 */

#if !defined(_MIRMAKE_H) && !defined(_ASM_SOURCE)
#define _MIRMAKE_H

#if defined(__INTERIX)
/* stock Interix/SFU needs this, MirInterix not */
#undef _ALL_SOURCE
#define _ALL_SOURCE
#elif defined(__APPLE__)
/* some OSX versions started to require this to fight POSIX header idiocy */
#undef _DARWIN_C_SOURCE
#define _DARWIN_C_SOURCE
#elif defined(__GLIBC__)
/* similarily, allow all extensions */
#undef _GNU_SOURCE
#define _GNU_SOURCE
#endif

#include <sys/cdefs.h>
#include <sys/types.h>
#include <sys/param.h>
#if defined(__GLIBC__)
#include <endian.h>
#elif !defined(__APPLE__)
#include <sys/endian.h>
#endif

/* Undefining */

#if defined(__INTERIX) || defined(__APPLE__)
/* neither Interix nor Darwin get __dead and __pure right… */
#undef __dead
#endif

/* Redefining */

#ifndef __BEGIN_DECLS
#if defined(__cplusplus)
#define	__BEGIN_DECLS	extern "C" {
#define	__END_DECLS	}
#else
#define	__BEGIN_DECLS
#define	__END_DECLS
#endif
#endif /* ndef __BEGIN_DECLS */

#ifndef __GNUC_PREREQ__
#ifdef __GNUC__
#define __GNUC_PREREQ__(ma, mi) \
	((__GNUC__ > (ma)) || (__GNUC__ == (ma) && __GNUC_MINOR__ >= (mi)))
#else
#define __GNUC_PREREQ__(ma, mi) 0
#endif
#endif

#ifndef __P
#define	__P(protos)	protos
#endif
#ifndef __CONCAT
#define	__CONCAT(x,y)	x ## y
#endif
#ifndef __STRING
#define	__STRING(x)	#x
#endif

#define	__const		const
#define	__signed	signed
#define	__volatile	volatile
#if (defined(__cplusplus) || defined(__PCC__)) && !defined(__inline)
#define	__inline	inline		/* convert to C++/C99 keyword */
#elif !defined(__GNUC__) && !defined(lint) && !defined(__inline)
#define	__inline			/* delete GCC keyword */
#endif

#ifndef __dead
#undef __pure
#if !__GNUC_PREREQ__(2, 5)
#define	__attribute__(x)	/* delete __attribute__ if no or old gcc */
#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
#define	__dead		__volatile
#define	__pure		__const
#endif
#elif __GNUC_PREREQ__(3, 4) || !defined(__STRICT_ANSI__)
#define __dead		__attribute__((__noreturn__))
#define __pure		__attribute__((__const__))
#else
#define	__dead
#define	__pure
#endif
#endif

#ifndef __weak_extern
#ifdef __ELF__
#define __weak_extern(sym)	__asm__(".weak " #sym);
#else
#define __weak_extern(sym)	/* XXX FIXME */
#endif
#endif

#ifndef __packed
#if __GNUC__ >= 3
#define	__packed		__attribute__((__packed__))
#elif __GNUC_PREREQ__(2, 7)
#define	__packed		__attribute__((__packed__))
#elif defined(lint)
#define	__packed
#endif
#endif

#if !__GNUC_PREREQ__(2, 8) && !defined(__extension__)
#define	__extension__
#endif

#ifdef lint
#ifndef __aligned
#define __aligned(x)
#endif
#ifndef __func__
#define __func__		"__func__"
#endif
#ifndef __restrict__
#define __restrict__
#endif
#ifndef __unused
#define __unused
#endif
#elif defined(__PCC__)
#ifndef __aligned
#define __aligned(x)		_Pragma("aligned " #x)
#endif
#ifndef __restrict__
#define __restrict__		restrict
#endif
#ifndef __unused
#define __unused
#endif
#else
#ifndef __aligned
#define __aligned(x)		__attribute__((__aligned__(x)))
#endif
#ifndef __unused
#define __unused		__attribute__((__unused__))
#endif
#endif

#undef __IDSTRING
#undef __IDSTRING_CONCAT
#undef __IDSTRING_EXPAND
#undef __COPYRIGHT
#undef __KERNEL_RCSID
#undef __RCSID
#undef __SCCSID
#undef __FBSDID
#if defined(__ELF__) && defined(__GNUC__)
#define __IDSTRING(prefix, string)				\
	__asm__(".section .comment"				\
	"\n	.ascii	\"@@(\"\"#)" #prefix ": \""		\
	"\n	.asciz	\"" string "\""				\
	"\n	.previous")
#else
#define __IDSTRING_CONCAT(l,p)		__LINTED__ ## l ## _ ## p
#define __IDSTRING_EXPAND(l,p)		__IDSTRING_CONCAT(l,p)
#define __IDSTRING(prefix, string)				\
	static const char __IDSTRING_EXPAND(__LINE__,prefix) []	\
	    __attribute__((__used__)) = "@@(""#)" #prefix ": " string
#endif
#define __COPYRIGHT(x)		__IDSTRING(copyright,x)
#ifdef lint
#define	__KERNEL_RCSID(n,x)	__IDSTRING(rcsid_ ## n,x)
#else
#define	__KERNEL_RCSID(n,x)	/* nothing */
#endif
#define	__RCSID(x)		__IDSTRING(rcsid,x)
#define	__SCCSID(x)		__IDSTRING(sccsid,x)
#define	__FBSDID(x)		__IDSTRING(fbsdid,x)

#ifndef _DIAGASSERT
#define _DIAGASSERT(x)		/* nothing */
#endif

/* Additions */

#ifndef	SA_LEN
#ifdef __INTERIX
/* any system without AF_INET6 */
#define	SA_LEN(x)	(((x)->sa_family == AF_INET) ? \
			    sizeof(struct sockaddr_in) : \
			    sizeof(struct sockaddr))
#elif defined(__APPLE__)
#define	SA_LEN(x)	(((struct sockaddr *)(x))->sa_len)
#elif !defined(BSD) /* from <sys/param.h> */
#define	SA_LEN(x)	(((x)->sa_family == AF_INET6) ? \
			    sizeof(struct sockaddr_in6) : \
			    (((x)->sa_family == AF_INET) ? \
				sizeof(struct sockaddr_in) : \
				sizeof(struct sockaddr)))
#endif
#endif

#if defined(__APPLE__)
#define uint8_t u_int8_t
#define uint16_t u_int16_t
#define uint32_t u_int32_t
#define uint64_t u_int64_t
#include <libkern/OSByteOrder.h>
#elif defined(__GLIBC__)
#include <byteswap.h>
#include <stdint.h>
#elif defined(__INTERIX)
#define uint64_t u_int64_t
#endif

/* brain-dead Apple stuff */
#ifdef OSSwapLittleToHostInt16
#define letoh16(x)	OSSwapLittleToHostInt16(x)
#define letoh32(x)	OSSwapLittleToHostInt32(x)
#define letoh64(x)	OSSwapLittleToHostInt64(x)
#define betoh16(x)	OSSwapBigToHostInt16(x)
#define betoh32(x)	OSSwapBigToHostInt32(x)
#define betoh64(x)	OSSwapBigToHostInt64(x)
#define htole16(x)	OSSwapHostToLittleInt16(x)
#define htole32(x)	OSSwapHostToLittleInt32(x)
#define htole64(x)	OSSwapHostToLittleInt64(x)
#define htobe16(x)	OSSwapHostToBigInt16(x)
#define htobe32(x)	OSSwapHostToBigInt32(x)
#define htobe64(x)	OSSwapHostToBigInt64(x)
#endif

/* GNU libc */
#if !defined(htobe16) && defined(__bswap_16) && defined(_ENDIAN_H)
#if __BYTE_ORDER == __LITTLE_ENDIAN
#define letoh16(x)	(x)
#define letoh32(x)	(x)
#define letoh64(x)	(x)
#define betoh16(x)	__bswap_16(x)
#define betoh32(x)	__bswap_32(x)
#define betoh64(x)	__bswap_64(x)
#define htole16(x)	(x)
#define htole32(x)	(x)
#define htole64(x)	(x)
#define htobe16(x)	__bswap_16(x)
#define htobe32(x)	__bswap_32(x)
#define htobe64(x)	__bswap_64(x)
#elif __BYTE_ORDER == __BIG_ENDIAN
#define letoh16(x)	__bswap_16(x)
#define letoh32(x)	__bswap_32(x)
#define letoh64(x)	__bswap_64(x)
#define betoh16(x)	(x)
#define betoh32(x)	(x)
#define betoh64(x)	(x)
#define htole16(x)	__bswap_16(x)
#define htole32(x)	__bswap_32(x)
#define htole64(x)	__bswap_64(x)
#define htobe16(x)	(x)
#define htobe32(x)	(x)
#define htobe64(x)	(x)
#endif
#endif

/* apparently, MidnightBSD needs these */
#if defined(be16toh) && !defined(betoh16)
#define betoh16(x)	be16toh(x)
#define betoh32(x)	be32toh(x)
#define betoh64(x)	be64toh(x)
#define letoh16(x)	le16toh(x)
#define letoh32(x)	le32toh(x)
#define letoh64(x)	le64toh(x)
#endif

#ifdef _MIRMAKE_DEFNS
__BEGIN_DECLS

#if !defined(BSD) && !defined(__APPLE__)
#include <stdio.h>	/* for FILE - C sucks here */
#endif

#if !defined(BSD) && !defined(__APPLE__)
char *fgetln(FILE *, size_t *);
size_t strlcat(char *, const char *, size_t);
size_t strlcpy(char *, const char *, size_t);
#endif

#if defined(__INTERIX)
char	*mkdtemp(char *);
int	 mkstemps(char *, int);
/* LONGLONG */
long long
	 strtoll(const char *, char **, int);
quad_t	 strtoq(const char *, char **, int);
int	 asprintf(char **, const char *, ...)
		__attribute__((__format__(__printf__, 2, 3)))
		__attribute__((__nonnull__(2)));
int	 vasprintf(char **, const char *, __builtin_va_list)
		__attribute__((__format__(__printf__, 2, 0)))
		__attribute__((__nonnull__(2)));
#endif

#if !defined(BSD) && !defined(__INTERIX)
u_int32_t arc4random(void);
void arc4random_stir(void);
void arc4random_addrandom(unsigned char *, int)
    __attribute__((__bounded__(__string__, 1, 2)));
#endif

__END_DECLS
#endif

#endif
@


1.48
log
@define _{ALL,DARWIN_C,GNU}_SOURCE to fight strict standardicy
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.47 2009/11/09 17:59:21 tg Exp $ */
d4 1
a4 1
 * Copyright (c) 2005, 2006, 2008, 2009, 2011
d134 1
a134 1
#define	__packed		__attribute__((packed))
d171 1
a171 1
#define __aligned(x)		__attribute__((aligned (x)))
d174 1
a174 1
#define __unused		__attribute__((unused))
d197 1
a197 1
	    __attribute__((used)) = "@@(""#)" #prefix ": " string
d323 2
a324 2
		__attribute__((__format__ (printf, 2, 3)))
		__attribute__((__nonnull__ (2)));
d326 2
a327 2
		__attribute__((__format__ (printf, 2, 0)))
		__attribute__((__nonnull__ (2)));
d334 1
a334 1
    __attribute__((bounded (string, 1, 2)));
@


1.47
log
@do not provide arc4random_push{,b,k} any more, since nothing in
e.g. mirmake-20091020.cpio.gz uses it; fix tests to check for all
three potentially used functions
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.46 2009/03/15 14:54:36 tg Exp $ */
d4 1
a4 1
 * Copyright (c) 2005, 2006, 2008, 2009
d39 1
d41 8
@


1.46
log
@more bswap magic, here for glibc - thanks swishy
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.45 2008/12/29 22:36:19 tg Exp $ */
a326 15
#if !defined(__MirBSD__) || (MirBSD < 0x0880)
void arc4random_push(int);
#endif
#if !defined(__MirBSD__) || (MirBSD < 0x0982)
#ifndef arc4random_pushk
#define arc4random_pushk arc4random_pushb
#endif
uint32_t arc4random_pushb(const void *, size_t)
    __attribute__((bounded (string, 1, 2)));
#endif

#ifndef arc4random_pushk
#define arc4random_pushk(buf, len) \
	arc4random_addrandom((unsigned char *)(buf), (int)(len))
#endif
@


1.45
log
@*sigh* and another round… SA_LEN redefinition errs pcc
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.44 2008/12/29 20:15:11 tg Exp $ */
d4 1
a4 1
 * Copyright (c) 2005, 2006, 2008
d45 3
a47 1
#if !defined(__APPLE__) && !defined(__GLIBC__)
d230 1
d252 32
@


1.44
log
@and sync with the real libckern.h and <sys/cdefs.h>
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.43 2008/11/10 01:40:13 tg Exp $ */
d210 3
a212 1
#else
@


1.43
log
@improve pcc support
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.42 2008/07/05 17:00:28 tg Exp $ */
d5 1
a5 1
 *	Thorsten "mirabilos" Glaser <tg@@mirbsd.de>
d135 32
@


1.42
log
@define arc4random_pushk (alias to arc4random_addrandom) if not given,
e.g. on GNU/Linux
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.41 2008/06/17 22:49:39 tg Exp $ */
d90 3
a92 3
#if defined(__cplusplus)
#define	__inline	inline		/* convert to C++ keyword */
#elif !defined(__GNUC__) && !defined(lint)
@


1.41
log
@sync with <sys/cdefs.h>
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.40 2008/05/03 01:09:28 tg Exp $ */
d269 5
@


1.40
log
@remove advertising clause for all of contrib/ except
‣ heartbeat server/client, for now
‣ stuff in jupp that’ll be regenerated before next release anyway
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.24 2008/04/22 11:43:31 tg Rel $ */
d142 1
d164 1
@


1.39
log
@you can forward-declare a struct in C, but not a pointer.
you can't use (void *) because the type is different, ok.
but why the fuck can't you just tell it that the definition
of 'FILE' comes later and use 'FILE *' now already, since all
pointers are the same anyway? Turbo Pascal can that.
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.38 2008/04/06 22:37:36 tg Exp $ */
d5 2
a6 2
 *	Thorsten “mirabilos” Glaser <tg@@mirbsd.de>
 * Based upon some code
a17 9
 * Advertising materials mentioning features or use of this work must
 * display the following acknowledgement:
 *	This product includes material provided by Thorsten Glaser.
 * This acknowledgement does not need to be reprinted if this work is
 * linked into a bigger work whose licence does not allow such clause
 * and the author of this work is given due credit in the bigger work
 * or its accompanying documents, where such information is generally
 * kept, provided that said credits are retained.
 *
@


1.38
log
@• arc4random_pushk, the easy way for mirmake: alias to arc4random_pushb
• stdlib.h: override that (since we come past cmd line -include)
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.37 2008/04/06 22:35:24 tg Exp $ */
d235 4
@


1.37
log
@fgetln protos are needed on GNU/Linux
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.36 2008/04/06 22:20:06 tg Exp $ */
d265 3
@


1.36
log
@what did I do +here+ in r1.34? wtf?
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.35 2008/03/12 22:26:37 tg Exp $ */
d235 1
@


1.35
log
@more missing fns
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.34 2008/03/12 22:11:07 tg Exp $ */
d54 1
a54 1
#if !defined(__APPLE__)
a205 4
#if !defined(__APPLE__) && !defined(__GLIBC__)
#include <sys/endian.h>
#endif

@


1.34
log
@need <sys/endian.h> implicitly, for libmirmake on mnbsd
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.33 2008/03/12 22:06:21 tg Exp $ */
d226 9
@


1.33
log
@simpler, better
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.32 2008/03/12 21:58:00 tg Exp $ */
d54 3
d206 4
@


1.32
log
@quell a warning on mnbsd
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.31 2008/03/09 16:19:49 tg Exp $ */
d57 2
a58 3
#if defined(__INTERIX) || defined(__APPLE__) || defined(__MidnightBSD__)
/* neither Interix nor Darwin get these right… */
/* quell a warning about __pure redefined on MidnightBSD */
a59 1
#undef __pure
d103 1
@


1.31
log
@there is no longer a need to disable UNIX03 on Darwin
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.30 2008/03/09 13:55:04 tg Exp $ */
d57 1
a57 1
#if defined(__INTERIX) || defined(__APPLE__)
d59 1
@


1.30
log
@fix __dead on leopard
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.29 2008/03/09 13:42:51 tg Exp $ */
a50 6
#if defined(__APPLE__)
/* stock Mac OSX Leopard needs this, due to symbol mangling conflicts */
#undef __DARWIN_UNIX03
#define __DARWIN_UNIX03 0
#endif

@


1.29
log
@fix the Darwin problem by disabling UNIX03 symbol mangling unconditionally;
now we can use our own trusted getopt(3) function suite again

tested on anakin, 10x gecko2@@
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.28 2008/02/12 20:35:23 bsiegert Exp $ */
d46 1
a46 1
#ifdef __INTERIX
d63 2
a64 1
#ifdef __INTERIX
@


1.28
log
@Leopard fix:
Include libkern/OSByteOrder.h on __APPLE__, it contains those byteswap macros
referenced below.
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.27 2006/12/28 01:30:42 tg Exp $ */
d4 2
a5 2
 * Copyright (c) 2005, 2006
 *	Thorsten Glaser <tg@@mirbsd.de>
d51 6
@


1.27
log
@implement htole64() and friends for Apple
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.26 2006/11/07 00:06:58 tg Exp $ */
d195 1
@


1.26
log
@sync with <sys/cdefs.h>
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.25 2006/08/26 23:20:22 tg Exp $ */
d12 5
a16 6
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
d24 2
a25 1
 * or its documentation.
d27 8
a34 8
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a defect.
d201 16
@


1.25
log
@interix misse uint64_t but has the others
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.24 2006/08/26 22:46:43 tg Exp $ */
d140 9
a148 6
#ifndef __IDSTRING
#ifdef lint
#define	__IDSTRING(prefix, string)				\
	static const char __LINTED__ ## prefix [] = (string)
#elif defined(__ELF__) && defined(__GNUC__)
#define	__IDSTRING(prefix, string)				\
d150 1
a150 1
	"\n	.ascii	\"" #prefix ": \""			\
d154 5
a158 4
#define	__IDSTRING(prefix, string)				\
	static const char __ ## prefix []			\
	    __attribute__((used)) = (string)
#endif
d160 1
a160 1
#ifndef __KERNEL_RCSID
a165 2
#endif
#ifndef __RCSID
a166 2
#endif
#ifndef __SCCSID
d168 3
@


1.24
log
@modernize, rewrite
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.14 2006/08/09 19:35:23 tg Rel $ */
d194 2
@


1.23
log
@experimental:
* add arc4random(3) (all archs) and arc4random_pushb(3) (as wrapper)
  to libmirmake
* provide libmirmake as shared library (to be able to LDADD it)
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.22 2006/07/30 23:33:41 tg Exp $ */
d4 1
a4 1
 * Copyright (c) 2005
d19 2
a20 2
 * All advertising materials mentioning features or use of this soft-
 * ware must display the following acknowledgement:
d25 1
a25 3
 * or its documentation. Specifically, re-using this code in any work
 * covered by the GNU General Public License version 1 or Library Ge-
 * neral Public License (any version) is permitted.
d34 1
a34 1
 * the possibility of such damage or existence of a nontrivial bug.
d53 1
d225 3
a228 1
void arc4random_push(int);
d236 1
a236 1
#endif /* ndef _MIRMAKE_H && ndef _ASM_SOURCE */
@


1.22
log
@certain stupid operating systems need certain stupid measures
to get the ISO C99 integral types in the place we expect them

this is particularily a design issue with BSD: we chose the
right type (uint32_t not u_int32_t) but use it in system headers
so we _need_ uint32_t et al. to be defined by <sys/types.h>,
whereas other systems only provide it in <stdint.h> (which,
worse, doesn't exist on OpenBSD); now we're suffering from
providing the best idea to the standards commitee...
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.21 2006/06/25 05:39:09 tg Exp $ */
d220 12
@


1.21
log
@sync with latest adv-3rdpty-compat boilerplate
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.8 2006/06/16 23:03:39 tg Rel $ */
d188 1
a188 1
#ifdef __APPLE__
d193 2
@


1.20
log
@if apple, provide these uint32_t etc. to make an end...
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.19 2005/12/17 05:46:09 tg Exp $ */
d5 1
a5 1
 *	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
d22 6
a27 2
 * The acknowledgement needs not to be reprinted if this software was
 * only used in compiling the redistributed work.
@


1.19
log
@big fat licence update (I left some which are bsiegert@@'s alone though)
also, remove licence boilerplate from some .h files who don't deserve it
and remove and add some advertising clauses because I say so
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.18 2005/11/24 11:43:53 tg Exp $ */
d184 7
@


1.18
log
@sprinkle a few #ifndef before #define
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.17 2005/11/16 16:40:29 tg Exp $ */
d25 8
a32 7
 * Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
 * any kind, expressed or implied, to the maximum extent permitted by
 * applicable law, but with the warranty of being written without ma-
 * licious intent or gross negligence; in no event shall licensor, an
 * author or contributor be held liable for any damage, direct, indi-
 * rect or other, however caused, arising in any way out of the usage
 * of this work, even if advised of the possibility of such damage.
@


1.17
log
@add some libmirmake/Interix definitions
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.16 2005/11/10 12:58:08 tg Exp $ */
d79 1
d81 2
d84 2
d87 1
@


1.16
log
@add strlcpy(); and strlcat(); protos only if no BSD or Darwin,
like in Makefile.lib
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.15 2005/09/12 22:24:57 tg Exp $ */
d185 15
@


1.15
log
@only define protos for strlcpy and strlcat if _MIRMAKE_DEFNS
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.2 2005/03/03 19:43:30 tg Rel $ */
d179 2
d183 2
@


1.14
log
@whitespace
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.13 2005/05/21 17:03:49 tg Exp $ */
d34 2
a35 1
 * patching of ported apps.
d177 1
a177 1
#ifndef _NO_DECLS
@


1.13
log
@arc4random suffers from random pool depletion when being used
on systems with /dev/urandom with mksh (being used often)

this must be solved differently, by an arc4randomd
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.12 2005/05/21 15:38:50 tg Exp $ */
d178 2
a179 2
size_t	 strlcat(char *, const char *, size_t);
size_t	 strlcpy(char *, const char *, size_t);
@


1.12
log
@extend by arc4random() from ports/in*/pkgtools/mbcompat/bsd-arc4random.c
enhanced by arc4random_push() pseudo (which works)
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.11 2005/05/21 01:04:02 tg Exp $ */
a179 3
uint32_t arc4random(void);
void	 arc4random_push(int);
void	 arc4random_stir(void);
@


1.11
log
@don't do ANYTHING if _ASM_SOURCE
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.10 2005/04/26 16:06:33 tg Exp $ */
d180 3
@


1.10
log
@sync with <sys/cdefs.h>
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.9 2005/04/12 17:47:02 tg Exp $ */
d39 1
a39 1
#ifndef _MIRMAKE_H
d183 1
a183 1
#endif /* ndef _MIRMAKE_H */
@


1.9
log
@make __weak_extern available on non-ELF (as NOP) too

bsiegert@@, this is the time to read up on "weak darwin" @@google
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.8 2005/04/12 17:30:07 tg Exp $ */
d35 2
a36 1
 * Suggest to use with CPPFLAGS+= -include "/path/to/mirmake.h"
d132 1
a132 1
	static const char __ ## prefix [] = (string)
d136 1
d142 1
a142 1
	    __attribute__((__unused__)) = (string)
@


1.8
log
@missing #endif
also, add a GPL-compatible advertising-clause
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.2 2005/03/03 19:43:30 tg Rel $ */
d106 2
a107 1
#if defined(__ELF__) && !defined(__weak_extern)
d109 3
@


1.7
log
@some more fixes and simplifications
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.6 2005/04/12 10:11:53 tg Exp $ */
d4 1
a4 1
 * Copyright (c) 2004, 2005
d19 6
d168 1
@


1.6
log
@-imacros wouldn't work, since it believes <sys/types.h> is already in
found on Interix
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.5 2005/04/11 16:57:55 tg Exp $ */
d6 5
d43 2
d48 44
d94 22
d147 2
d150 6
a162 10
#ifndef __BEGIN_DECLS
#if defined(__cplusplus)
#define	__BEGIN_DECLS	extern "C" {
#define	__END_DECLS	}
#else
#define	__BEGIN_DECLS
#define	__END_DECLS
#endif
#endif /* ndef __BEGIN_DECLS */

@


1.5
log
@handle __dead correctly

inspired by NetBSD pkgsrc, another unrelated Interix fan
and my own tries to compile portable OpenSSH on stock Interix
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.4 2005/04/11 15:41:27 tg Exp $ */
d24 1
a24 2
 * Suggest to use with CPPFLAGS+= -imacros "/path/to/mirmake.h" (safe
 * or conservative) or CPPFLAGS+= -include "/path/to/mirmake.h"
@


1.4
log
@for Interix, add _ALL_SOURCE to the definitions
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.3 2005/02/28 20:09:23 tg Exp $ */
d36 1
d39 7
@


1.3
log
@sync __RCSID stuff with <sys/cdefs.h>
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/mirmake/dist/contrib/mirmake.h,v 1.2 2005/02/23 21:29:43 tg Exp $ */
d31 5
@


1.2
log
@modernise
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.1 2005/02/11 14:23:55 tg Rel $ */
d33 22
d56 4
a59 1
#define __RCSID(x)	static const char __rcsid[] = (x)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/**	$MirOS$ */
d4 1
a4 1
 * Copyright (c) 2004
d24 2
@


1.1.7.1
log
@All the code in the contributed section
@
text
@@
