head	1.8;
access;
symbols
	tg-mirmake-dev_BASE:1.6
	tg-mirmake-dev:1.6.0.2;
locks; strict;
comment	@# @;


1.8
date	2009.10.19.20.43.47;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004ADCCF9364982506;

1.7
date	2008.05.03.01.09.29;	author tg;	state Exp;
branches;
next	1.6;
commitid	100481BBB3B66CD6DBA;

1.6
date	2006.08.26.22.46.43;	author tg;	state Exp;
branches;
next	1.5;
commitid	10044F0CF6A4E28F290;

1.5
date	2005.12.17.05.46.09;	author tg;	state Exp;
branches;
next	1.4;
commitid	10043A3A3E65E20A413;

1.4
date	2005.11.10.12.47.10;	author tg;	state Exp;
branches;
next	1.3;
commitid	86d4373413a75e0;

1.3
date	2005.09.18.21.01.46;	author tg;	state Exp;
branches;
next	1.2;
commitid	44e0432dd5cb8123;

1.2
date	2005.06.09.21.43.42;	author tg;	state Exp;
branches;
next	1.1;
commitid	610942a8b805be7e;

1.1
date	2005.06.02.22.58.16;	author tg;	state Exp;
branches;
next	;
commitid	7b16429f8f0a160a;


desc
@@


1.8
log
@ensure we have (*) cases
@
text
@#!/bin/ksh
# $MirOS: contrib/code/mirmake/dist/contrib/mktemp.sh,v 1.7 2008/05/03 01:09:29 tg Exp $
#-
# Copyright (c) 2005, 2009
#	Thorsten Glaser <tg@@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.
#-
# *INSECURE* mktemp(1) replacement for SFU. DO NOT USE. Needs pdksh.

# Globals

set -A chars 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q r s \
    t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z

integer RAN=$$
me=${0##*/}

# Functions

function usage
{
	(( q == 1 )) || \
	    print -u2 "Syntax: $me [-dqtu] [-p directory] [template]"
	exit 1
}

function getrndc
{
	let RAN+=RANDOM
	print -n ${chars[RAN % ${#chars[*]}]}
	let RAN++
}

function getrnd
{
	integer x=$1
	while (( x > 0 )); do
		getrndc
		let --x
	done
}

# main

let d=0
let q=0
let t=0
let u=0
p=/tmp
while getopts "dp:qtu" opt; do
	case $opt {
	d)	let d=1 ;;
	p)	let t=1
		p="$OPTARG" ;;
	q)	let q=1 ;;
	t)	let t=1 ;;
	u)	let u=1 ;;
	*)	usage ;;
	}
done
shift $((OPTIND - 1))

case $# {
1)	template=$1 ;;
0)	let t=1
	template=tmp.XXXXXXXXXX ;;
*)	usage ;;
}

if (( t == 1 )); then
	if [[ $template = */* ]]; then
		(( q == 1 )) || print -u2 "$me: template must not" \
		    "contain directory separators in -t mode"
		exit 1
	fi
	[[ -n $TMPDIR ]] && p=$TMPDIR
	while [[ $p = */ ]]; do
		p=${p%/}
	done
	template=$p/$template
fi

saveumask=$(umask)
umask 077
integer numx=0
while [[ $template != ${template%X} ]]; do
	let numx++
	template=${template%X}
done

integer gotit=0
while (( gotit == 0 )); do
	n=${template}$(getrnd $numx)
	[[ -e $n ]] && continue

	if (( d == 1 )); then
		if /bin/mkdir -pm 0700 "$n" 2>&-; then
			if [[ -d $n && -O $n ]]; then
				gotit=1
				(( u == 1 )) && /bin/rmdir "$n"
			fi
		fi
	else
		if (print -n >"$n") 2>&-; then
			if [[ -f $n && -O $n ]]; then
				gotit=1
				(( u == 1 )) && /bin/rm -f "$n"
			fi
		fi
	fi
done
print -r -- "$n"
exit 0
@


1.7
log
@remove advertising clause for all of contrib/ except
‣ heartbeat server/client, for now
‣ stuff in jupp that’ll be regenerated before next release anyway
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.24 2008/04/22 11:43:31 tg Rel $
d4 2
a5 2
# Copyright (c) 2005
#	Thorsten Glaser <tg@@mirbsd.de>
d72 1
a72 1
	\?)	usage ;;
@


1.6
log
@modernize, rewrite
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.14 2006/08/09 19:35:23 tg Rel $
d7 5
a11 6
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
d13 8
a20 12
# Advertising materials mentioning features or use of this work must
# display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a defect.
@


1.5
log
@big fat licence update (I left some which are bsiegert@@'s alone though)
also, remove licence boilerplate from some .h files who don't deserve it
and remove and add some advertising clauses because I say so
@
text
@d2 1
a2 1
# $MirOS: contrib/code/mirmake/dist/contrib/mktemp.sh,v 1.4 2005/11/10 12:47:10 tg Exp $
d5 1
a5 1
#	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
d14 2
a15 2
# All advertising materials mentioning features or use of this soft-
# ware must display the following acknowledgement:
d25 1
a25 1
# the possibility of such damage or existence of a nontrivial bug.
d27 1
a27 1
# *INSECURE* mktemp(1) replacement. DO NOT USE. Needs pdksh.
d34 1
a34 1
let RAN=$$
d55 1
a55 1
	let x=$1
d104 1
a104 1
let numx=0
d110 1
a110 1
let gotit=0
d116 1
a116 1
		if /bin/mkdir -pm 0700 "$n" 2>/dev/null; then
d118 1
a118 1
				let gotit=1
d123 1
a123 1
		if (print -n >"$n") 2>/dev/null; then
d125 1
a125 1
				let gotit=1
@


1.4
log
@* hard-code /bin/ksh shebang, this is designed for Interix only
* use Korn-style functions
* change order of functions to be more logical
* apply (autoconf.info)10.5 para 1
@
text
@d2 1
a2 1
# $MirOS: contrib/code/mirmake/dist/contrib/mktemp.sh,v 1.3 2005/09/18 21:01:46 tg Exp $
d18 8
a25 7
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of this work, even if advised of the possibility of such damage.
@


1.3
log
@this actually only needs pdksh...
@
text
@d1 2
a2 2
#!/bin/sh
# $MirOS: contrib/code/mirmake/dist/contrib/mktemp.sh,v 1.2 2005/06/09 21:43:42 tg Exp $
d38 1
a38 1
usage()
d45 8
a52 1
getrnd()
a60 7
getrndc()
{
	let RAN+=RANDOM
	print -n ${chars[RAN % ${#chars[*]}]}
	let RAN++
}

d82 1
a82 1
1)	template="$1" ;;
d94 1
a94 1
	[[ -n $TMPDIR ]] && p="$TMPDIR"
d96 1
a96 1
		p="${p%/}"
d98 1
a98 1
	template="$p/$template"
d106 1
a106 1
	template="${template%X}"
d111 1
a111 1
	n="${template}$(getrnd $numx)"
@


1.2
log
@while this needs mksh, on Interix /bin/sh is either msksh (an old
pdksh version) or mksh, so it will probably work with it

document the requirement though
@
text
@d2 1
a2 1
# $MirOS: contrib/code/mirmake/dist/contrib/mktemp.sh,v 1.1 2005/06/02 22:58:16 tg Exp $
d26 1
a26 1
# *INSECURE* mktemp(1) replacement. DO NOT USE. Needs mksh.
@


1.1
log
@add mktemp (from ports/infrastructure/install/) and xinstall
only used on Interix because their base is such a shit
@
text
@d1 2
a2 2
#!/bin/mksh
# $MirOS: ports/infrastructure/install/mktemp.sh,v 1.2 2005/05/30 16:47:09 tg Exp $
d26 1
a26 1
# *INSECURE* mktemp(1) replacement. DO NOT USE.
@

