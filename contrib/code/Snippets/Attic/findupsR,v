head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2010.12.12.23.18.08;	author tg;	state dead;
branches;
next	1.1;
commitid	1004D0558152057E63F;

1.1
date	2010.12.12.21.06.42;	author tg;	state Exp;
branches;
next	;
commitid	1004D05396E677732D1;


desc
@@


1.2
log
@ok, so this didn't work: xargs calls stat several times so that %@@ for
ordering is totally unusable, findupsR also had issues with several
file clusters sharing the same size, etc.

now a shiny multi-pass application with *gasp* percentage progress report!
@
text
@#!/bin/mksh
# $MirOS: contrib/code/Snippets/findupsR,v 1.1 2010/12/12 21:06:42 tg Exp $
#-
# Copyright (c) 2010
#	Thorsten Glaser <tg@@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.
#-
# Find duplicate files occupying separate inodes and output calls to
# ln to make them hardlinks of each other. Assumes no pathnames with
# newlines are used. Links will be generated in a stable, arbitrary,
# order (the file with the smallest device and inode numbers will be
# parent to the others) preventing false positives for multiple runs
# (making findupsO ideal for the first and findupsR for a subsequent
# run or several of them).

if ! T=$(mktemp -d /tmp/findups.XXXXXXXXXX); then
	print -u2 Error: cannot create temporary directory.
	exit 255
fi

find "$@@" -type f >"$T/1"
# if this yields stderr, you have newlines in pathnames, which get skipped
tr '\n' '\0' <"$T/1" | xargs -0 stat -f '%z %d %i %N' >"$T/2"
if [[ ! -s $T/2 ]]; then
	rm -rf "$T"
	exit 0
fi

lastdev=-
lastino=-
lastsz=-
lastnm=-
lastmd=
sort -n -k1,1 -k2,2 -k3,3 <"$T/2" |&
while IFS= read -pr line; do
	sz=${line%% *}
	line=${line#* }		# cut off file size
	dev=${line%% *}
	line=${line#* }		# cut off dev_t id
	ino=${line%% *}
	nm=${line#* }		# cut off inode number

	#print -ru2 "D: comparing $dev<$lastdev $ino<$lastino $sz<$lastsz on $nm"
	# skip pre-existing hard link
	[[ $dev:$ino = "$lastdev:$lastino" ]] && continue

	md=			# only lazily cached
	# check for duplicate if same size and device only
	# (if device differs we cannot hardlink anyway)
	if [[ $dev:$sz = "$lastdev:$lastsz" ]]; then
		[[ -n $lastmd ]] || \
		    lastmd=$(cksum -a md4,sfv,oaat1s <"$lastnm")
		md=$(cksum -a md4,sfv,oaat1s <"$nm")
		#print -ru2 D: hash is $md'<'$lastmd from "$lastnm"
		if [[ $md = "$lastmd" ]]; then
			print -r -- ln -f \
			    "'${lastnm//\'/\'\\\'\'}'" \
			    "'${nm//\'/\'\\\'\'}'"
			# do NOT update cached info here, $nm target changes!
			continue
		fi
	fi

	# update cached information of last file encountered now
	lastdev=$dev
	lastino=$ino
	lastsz=$sz
	lastnm=$nm
	lastmd=$md		# if any (clearing if not)
done

rm -rf "$T"
@


1.1
log
@two different approaches at finding and resolving duplicate files
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.28 2008/11/14 15:33:44 tg Rel $
@

