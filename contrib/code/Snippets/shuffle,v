head	1.8;
access;
symbols;
locks; strict;
comment	@# @;


1.8
date	2014.02.10.00.36.12;	author tg;	state Exp;
branches;
next	1.7;
commitid	10052F81F076BAA49CD;

1.7
date	2012.10.19.18.59.39;	author tg;	state Exp;
branches;
next	1.6;
commitid	1005081A33215C2F05A;

1.6
date	2011.09.07.19.54.51;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004E67CB984963924A;

1.5
date	2010.11.06.14.59.20;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004CD56D522D6F9C2E;

1.4
date	2008.05.03.01.09.24;	author tg;	state Exp;
branches;
next	1.3;
commitid	100481BBB3B66CD6DBA;

1.3
date	2006.12.20.16.28.20;	author tg;	state Exp;
branches;
next	1.2;
commitid	100458964B56B8FF240;

1.2
date	2006.12.11.16.18.12;	author tg;	state Exp;
branches;
next	1.1;
commitid	100457D84C365C051F0;

1.1
date	2006.11.23.19.46.38;	author tg;	state Exp;
branches;
next	;
commitid	1004565FAAD519E3D66;


desc
@@


1.8
log
@never close stdout or stderr, always redirect it to /dev/null instead
@
text
@#!/usr/bin/env mksh
# $MirOS: contrib/code/Snippets/shuffle,v 1.7 2012/10/19 18:59:39 tg Exp $
#-
# Copyright © 2006, 2010, 2011, 2012, 2014
#	Thorsten “mirabilos” Glaser <tg@@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un‐
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person’s immediate fault when using the work as intended.
#-
# Provide shuffled input to mpg123, mplayer, mppdec, and other tools
# that do not properly employ arc4random(3) et al.

usage() {
	print -u2 "Syntax: $0 [-v] program [args ...] -- file ... [-- args ...]"
	print -u2 "Prepend another hyphen-minus to escape multi-dash first-args"
	exit ${1:-1}
}

[[ -z $1 || $1 = -[hH?] ]] && usage ${1:+0}

if [[ $1 = -v ]]; then
	verbose=1
	shift
else
	verbose=0
fi

set -A cmdline
set -A files
set -A postfix

integer ncmdline=0
integer nfiles=0
integer npostfix=0
integer state=0

# Read in command line arguments
for arg in "$@@"; do
	case $state {
	(0)	if [[ $arg = -- ]]; then
			let state++
		elif [[ $arg = --+(-) ]]; then
			cmdline[ncmdline++]=${arg#-}
		else
			cmdline[ncmdline++]=$arg
		fi
		;;
	(1)	if [[ $arg = -- ]]; then
			let state++
		else
			files[nfiles++]=$arg
		fi
		;;
	(2)	postfix[npostfix++]=$arg
		;;
	}
done

(( ncmdline < 1 || nfiles < 1 )) && usage


# arc4random(3) in Pure mksh™
set -A seedbuf -- $(dd if=/dev/arandom bs=257 count=1 2>/dev/null | \
    hexdump -ve '1/1 "0x%02X "')
set -A rs_S
typeset -i rs_S rs_i=-1 rs_j=0 n
while (( ++rs_i < 256 )); do
	(( rs_S[rs_i] = rs_i ))
done
rs_i=-1
while (( ++rs_i < 256 )); do
	(( n = rs_S[rs_i] ))
	(( rs_j = (rs_j + n + seedbuf[rs_i]) & 0xFF ))
	(( rs_S[rs_i] = rs_S[rs_j] ))
	(( rs_S[rs_j] = n ))
done
rs_i=0
rs_j=0
typeset -i rs_out
function arcfour_byte {
	typeset -i si sj

	(( rs_i = (rs_i + 1) & 0xFF ))
	(( si = rs_S[rs_i] ))
	(( rs_j = (rs_j + si) & 0xFF ))
	(( sj = rs_S[rs_j] ))
	(( rs_S[rs_i] = sj ))
	(( rs_S[rs_j] = si ))
	(( rs_out = rs_S[(si + sj) & 0xFF] ))
}
(( n = 256 * 12 + seedbuf[256] + (RANDOM & 0xFF) ))
while (( n-- )); do
	arcfour_byte
done
(( n = rs_out ))
while (( n-- )); do
	arcfour_byte
done

typeset -Uui16 -Z11 arc4random_rv
function arc4random {
	# apply uncertainty
	arcfour_byte
	(( rs_out & 1 )) && arcfour_byte
	# read four octets into result dword
	arcfour_byte
	(( arc4random_rv = rs_out ))
	arcfour_byte
	(( arc4random_rv |= rs_out << 8 ))
	arcfour_byte
	(( arc4random_rv |= rs_out << 16 ))
	arcfour_byte
	(( arc4random_rv |= rs_out << 24 ))
}

# arc4random_uniform(3) in Pure mksh™
function arc4random_uniform {
	# Derived from code written by Damien Miller <djm@@openbsd.org>
	# published under the ISC licence, with simplifications by
	# Jinmei Tatuya. Written in mksh by Thorsten Glaser.
	#-
	# Calculate a uniformly distributed random number less than
	# upper_bound avoiding “modulo bias”.
	# Uniformity is achieved by generating new random numbers
	# until the one returned is outside the range
	# [0, 2^32 % upper_bound[. This guarantees the selected
	# random number will be inside the range
	# [2^32 % upper_bound, 2^32[ which maps back to
	# [0, upper_bound[ after reduction modulo upper_bound.
	#-
	typeset -Ui upper_bound=$1 min

	if (( upper_bound < 2 )); then
		arc4random_rv=0
		return
	fi

	# calculate (2^32 % upper_bound) avoiding 64-bit math
	# if upper_bound > 2^31: 2^32 - upper_bound (only one
	# “value area”); otherwise (x <= 2^31) use the fact
	# that ((2^32 - x) % x) == (2^32 % x)
	((# min = upper_bound > 0x80000000 ? 1 + ~upper_bound :
	    (0xFFFFFFFF - upper_bound + 1) % upper_bound ))

	# This could theoretically loop forever but each retry has
	# p > 0.5 (worst case, usually far better) of selecting a
	# number inside the range we need, so it should rarely need
	# to re-roll (at all).
	while :; do
		arc4random
		((# arc4random_rv >= min )) && break
	done

	((# arc4random_rv %= upper_bound ))
}


# Append shuffled list of files
(( ++nfiles ))
while (( --nfiles )); do
	arc4random_uniform $nfiles
	arg=${files[arc4random_rv]}
	if [[ -e $arg ]]; then
		cmdline[ncmdline++]=$arg
	else
		print -u2 "Warning: non-existent '$arg' skipped"
	fi
	unset files[arc4random_rv]
	set -A files -- "${files[@@]}"
done

# Append post-command arguments, if any
for arg in "${postfix[@@]}"; do
	cmdline[ncmdline++]=$arg
done

# Run the command
if (( verbose )); then
	C_QUOTE=$'[]\t\n "#$&'\''()*;<=>?[\\`|]'
	for i in "${cmdline[@@]}"; do
		if [[ $i = *${C_QUOTE}* ]]; then
			print -nr " '${i//\'/\'\\\'\'}'"
		else
			print -nr " $i"
		fi
	done
	print
fi
exec "${cmdline[@@]}"
@


1.7
log
@The arc4random code in libevent suggests to look at the papers in more
detail and skip 256 * 12 bytes (plus fuzz) instead of 256 * 4 bytes
@
text
@d2 1
a2 1
# $MirOS: contrib/code/Snippets/shuffle,v 1.6 2011/09/07 19:54:51 tg Exp $
d4 1
a4 1
# Copyright © 2006, 2010, 2011, 2012
d75 1
a75 1
set -A seedbuf -- $(dd if=/dev/arandom bs=257 count=1 2>&- | \
@


1.6
log
@improve option parsing, usage; add -v option

to be done in later versions:
• make use of x+=(y) already in mksh
• the shell could support make(1)s ${foo:Q} as ${foo@@'} and ${foo@@$},
  where the latter uses $'…' style quoting (maybe only this one?)
• use read -a for entropy gathering (already in mksh)
@
text
@d2 1
a2 1
# $MirOS: contrib/code/Snippets/shuffle,v 1.5 2010/11/06 14:59:20 tg Exp $
d4 1
a4 1
# Copyright © 2006, 2010, 2011
d74 1
a74 1
# arc4random(3) and arc4random_uniform(3) in Pure mksh™
d103 1
a103 1
(( n = 1024 + seedbuf[256] + (RANDOM & 0xFF) ))
d128 1
@


1.5
log
@use arc4random(3) and arc4random_uniform(3) in Pure mksh™ here
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.28 2008/11/14 15:33:44 tg Rel $
d4 1
a4 1
# Copyright © 2006, 2010
d25 4
a28 4
function usage {
	print -u2 "Syntax: $0 program [args ...] -- file ... [ -- args ... ]"
	print -u2 "To escape '--' in first args prepend another hyphen-minus"
	exit 1
d31 8
a38 1
[[ -z $1 || $1 = -@@(h|H|?) ]] && usage
d54 2
a55 2
		elif [[ $arg = --- ]]; then
			cmdline[ncmdline++]=--
d185 1
a185 1
	cmdline[${#cmdline[*]}]=$arg
d189 11
@


1.4
log
@remove advertising clause for all of contrib/ except
‣ heartbeat server/client, for now
‣ stuff in jupp that’ll be regenerated before next release anyway
@
text
@d1 2
a2 2
#!/bin/mksh
# $MirOS: src/share/misc/licence.template,v 1.24 2008/04/22 11:43:31 tg Rel $
d4 2
a5 2
# Copyright (c) 2006
#	Thorsten "mirabilos" Glaser <tg@@mirbsd.de>
d9 1
a9 1
# is granted to deal in this work without restriction, including un-
d13 1
a13 1
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
d20 1
a20 1
# of said person's immediate fault when using the work as intended.
d25 1
a25 2
function usage
{
d27 1
d37 3
a40 1
integer nr
d48 1
a48 1
			cmdline[${#cmdline[*]}]=--
d50 1
a50 1
			cmdline[${#cmdline[*]}]=$arg
d56 1
a56 1
			files[${#files[*]}]=$arg
d59 1
a59 1
	(2)	postfix[${#postfix[*]}]=$arg
d64 1
a64 1
(( (${#cmdline[*]} < 1) || (${#files[*]} < 1) )) && usage
d66 103
a168 5
# Sort list of files
while (( ${#files[*]} > 0 )); do
	let "nr = (RANDOM << 15 | RANDOM) % ${#files[*]}"
	if [[ -e ${files[nr]} ]]; then
		cmdline[${#cmdline[*]}]=${files[nr]}
d170 1
a170 1
		print -u2 "Warning: non-existent '${files[nr]}' skipped"
d172 1
a172 1
	unset files[nr]
d177 2
a178 3
let nr=0
while (( nr < ${#postfix[*]} )); do
	cmdline[${#cmdline[*]}]=${postfix[nr++]}
@


1.3
log
@licence, utf-8
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.20 2006/12/11 21:04:56 tg Rel $
@


1.2
log
@don't break on non-existent args, allows more liberal globbing on cmdline
XXX set -o noglob inside here? have to test that.
@
text
@d2 1
a2 1
# $MirOS: contrib/code/Snippets/shuffle,v 1.1 2006/11/23 19:46:38 tg Exp $
d7 5
a11 6
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and below disclaimer are retai-
# ned in all redistributions, or reproduced in accompanying documen-
# tation or other materials provided with binary redistributions.
d13 8
a20 8
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# a licensor, author or contributor be held liable for any indirect,
# direct (unless proven consequence of a direct fault of said person
# and intended use of this work), other damage, loss, or other issu-
# es, arising in any way out of dealing with the work, even if advi-
# sed of the possibility of such damage or existence of a defect.
@


1.1
log
@add a shuffle script, e.g. for music players
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.17 2006/11/19 13:37:59 tg Exp $
d68 5
a72 1
	cmdline[${#cmdline[*]}]=${files[nr]}
@

