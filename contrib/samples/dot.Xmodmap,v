head	1.29;
access;
symbols
	grml:1.24.0.4
	gnuwin:1.24.2.1.0.2
	gnu:1.24.0.2
	mirbsd:1.1.7;
locks; strict;
comment	@# @;


1.29
date	2018.08.10.02.53.48;	author tg;	state Exp;
branches;
next	1.28;
commitid	1005B6CFE0B5BDFE404;

1.28
date	2017.07.27.12.52.02;	author tg;	state Exp;
branches;
next	1.27;
commitid	1005979E1F241E96342;

1.27
date	2017.07.23.22.32.44;	author tg;	state Exp;
branches;
next	1.26;
commitid	100597523B1127C237C;

1.26
date	2016.06.04.02.47.46;	author tg;	state Exp;
branches;
next	1.25;
commitid	10057523F785C163E39;

1.25
date	2012.08.03.17.36.32;	author tg;	state Exp;
branches;
next	1.24;
commitid	100501C0C380CE1909D;

1.24
date	2010.12.05.20.19.30;	author tg;	state Exp;
branches
	1.24.2.1
	1.24.4.1;
next	1.23;
commitid	1004CFBF3B06D956932;

1.23
date	2010.04.04.10.35.51;	author tg;	state Exp;
branches;
next	1.22;
commitid	1004BB86B963A4DEFD2;

1.22
date	2008.11.08.22.56.50;	author tg;	state Exp;
branches;
next	1.21;
commitid	1004916192804BB25AE;

1.21
date	2008.11.08.22.24.29;	author tg;	state Exp;
branches;
next	1.20;
commitid	1004916117E0B020D71;

1.20
date	2008.09.01.06.17.55;	author tg;	state Exp;
branches;
next	1.19;
commitid	10048BB89235CFF51EA;

1.19
date	2008.08.28.20.49.17;	author tg;	state Exp;
branches;
next	1.18;
commitid	10048B70E007830CD7B;

1.18
date	2008.08.26.19.15.09;	author tg;	state Exp;
branches;
next	1.17;
commitid	10048B456463B732C5F;

1.17
date	2008.08.26.19.11.20;	author tg;	state Exp;
branches;
next	1.16;
commitid	10048B4555D2CD21D41;

1.16
date	2008.05.03.01.09.31;	author tg;	state Exp;
branches;
next	1.15;
commitid	100481BBB3B66CD6DBA;

1.15
date	2008.02.26.17.44.13;	author tg;	state Exp;
branches;
next	1.14;
commitid	10047C44FF86099FB33;

1.14
date	2007.10.01.20.21.39;	author tg;	state Stab;
branches;
next	1.13;
commitid	100470156CA2818D0BC;

1.13
date	2007.07.15.20.43.41;	author tg;	state Exp;
branches;
next	1.12;
commitid	100469A871020796884;

1.12
date	2007.06.16.16.30.34;	author tg;	state WIP;
branches;
next	1.11;
commitid	100467410401E0CC394;

1.11
date	2007.06.16.15.41.06;	author tg;	state WIP;
branches;
next	1.10;
commitid	100467404A91B5D3401;

1.10
date	2007.06.15.21.38.59;	author tg;	state WIP;
branches;
next	1.9;
commitid	100467306CC49402D55;

1.9
date	2007.06.15.19.52.23;	author tg;	state WIP;
branches;
next	1.8;
commitid	1004672ED6B79F4B56A;

1.8
date	2007.06.15.19.43.24;	author tg;	state WIP;
branches;
next	1.7;
commitid	1004672EBD656326242;

1.7
date	2007.03.30.23.23.25;	author tg;	state Rel;
branches;
next	1.6;
commitid	100460D96C50C1AD9F2;

1.6
date	2007.03.04.10.20.12;	author tg;	state Exp;
branches;
next	1.5;
commitid	10045EA9D7105600A32;

1.5
date	2007.02.19.05.41.40;	author tg;	state Exp;
branches;
next	1.4;
commitid	10045D938A36C6EA2BA;

1.4
date	2007.02.19.05.19.33;	author tg;	state Exp;
branches;
next	1.3;
commitid	10045D93351276FB091;

1.3
date	2006.01.26.22.23.45;	author tg;	state dead;
branches;
next	1.2;
commitid	10043D94C0078FE5333;

1.2
date	2005.12.17.05.46.11;	author tg;	state Exp;
branches;
next	1.1;
commitid	10043A3A3E65E20A413;

1.1
date	2005.02.05.01.59.40;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.24.2.1
date	2011.06.01.11.32.30;	author tg;	state Exp;
branches
	1.24.2.1.2.1;
next	1.24.2.2;
commitid	1004DE623590A0F17DB;

1.24.2.2
date	2012.08.03.17.36.34;	author tg;	state Exp;
branches;
next	1.24.2.3;
commitid	100501C0C380CE1909D;

1.24.2.3
date	2016.06.04.02.47.47;	author tg;	state Exp;
branches;
next	;
commitid	10057523F785C163E39;

1.24.2.1.2.1
date	2012.04.24.08.12.48;	author tg;	state Exp;
branches;
next	1.24.2.1.2.2;
commitid	1004F9660751D1DEA7A;

1.24.2.1.2.2
date	2012.08.03.17.36.35;	author tg;	state Exp;
branches;
next	1.24.2.1.2.3;
commitid	100501C0C380CE1909D;

1.24.2.1.2.3
date	2016.06.04.02.47.48;	author tg;	state Exp;
branches;
next	1.24.2.1.2.4;
commitid	10057523F785C163E39;

1.24.2.1.2.4
date	2017.07.23.22.32.42;	author tg;	state Exp;
branches;
next	1.24.2.1.2.5;
commitid	100597523B1127C237C;

1.24.2.1.2.5
date	2017.07.27.12.52.01;	author tg;	state Exp;
branches;
next	1.24.2.1.2.6;
commitid	1005979E1F241E96342;

1.24.2.1.2.6
date	2018.08.10.02.53.40;	author tg;	state Exp;
branches;
next	;
commitid	1005B6CFE0B5BDFE404;

1.24.4.1
date	2012.06.08.23.09.43;	author tg;	state Exp;
branches;
next	1.24.4.2;
commitid	1004FD2864670C6B4BC;

1.24.4.2
date	2012.06.08.23.49.02;	author tg;	state Exp;
branches;
next	1.24.4.3;
commitid	1004FD28F851E96AD9E;

1.24.4.3
date	2012.06.08.23.58.00;	author tg;	state Exp;
branches;
next	1.24.4.4;
commitid	1004FD29191309FEE26;

1.24.4.4
date	2012.07.04.23.01.08;	author tg;	state Exp;
branches;
next	1.24.4.5;
commitid	1004FF4CB4C138ACE0B;

1.24.4.5
date	2012.08.03.17.36.33;	author tg;	state Exp;
branches;
next	1.24.4.6;
commitid	100501C0C380CE1909D;

1.24.4.6
date	2013.03.28.12.15.55;	author tg;	state Exp;
branches;
next	1.24.4.7;
commitid	10051543472219E337E;

1.24.4.7
date	2013.03.28.13.44.47;	author tg;	state Exp;
branches;
next	1.24.4.8;
commitid	100515449685398B9CE;

1.24.4.8
date	2016.06.04.02.47.48;	author tg;	state Exp;
branches;
next	1.24.4.9;
commitid	10057523F785C163E39;

1.24.4.9
date	2017.07.23.22.32.43;	author tg;	state Exp;
branches;
next	1.24.4.10;
commitid	100597523B1127C237C;

1.24.4.10
date	2017.07.27.12.52.00;	author tg;	state Exp;
branches;
next	1.24.4.11;
commitid	1005979E1F241E96342;

1.24.4.11
date	2018.08.10.02.53.41;	author tg;	state Exp;
branches;
next	;
commitid	1005B6CFE0B5BDFE404;

1.1.7.1
date	2005.02.05.01.59.40;	author tg;	state Exp;
branches;
next	;


desc
@@


1.29
log
@same as in commitid 1005B6CF36E3932B560, plus assorted cleanup
@
text
@! $MirOS: contrib/samples/dot.Xmodmap,v 1.28 2017/07/27 12:52:02 tg Exp $
!-
! Copyright © 2004, 2007, 2008, 2010, 2012, 2016, 2017
!	mirabilos <m@@mirbsd.org>
!
! Provided that these terms and disclaimer and all copyright notices
! are retained or reproduced in an accompanying document, permission
! is granted to deal in this work without restriction, including un-
! limited rights to use, publicly perform, distribute, sell, modify,
! merge, give away, or sublicence.
!
! This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
! the utmost extent permitted by applicable law, neither express nor
! implied; without malicious intent or gross negligence. In no event
! may a licensor, author or contributor be held liable for indirect,
! direct, other damage, loss, or other issues arising in any way out
! of dealing in the work, even if advised of the possibility of such
! damage or existence of a defect, except proven that it results out
! of said person’s immediate fault when using the work as intended.
!-
! MirKBD Revision 4.01, English (Europe) with Meta key, for XFree86®
!
! Advanced .Xmodmap file with US-based layout plus Meta and Compose,
! Meta emulated by Mode_switch, for 102-key, 104/105-key, and laptop
! keyboards. All ISO 8859-1 characters are directly typable, as well
! as some extra characters (most of which are in codepage 1252). The
! layout is documented in kbd-xf86 in this directory. dash = 「 — 」
!
! Diversions from pristine XFree86(R) and Windows(R) 2000 US layout:
! • The Win_L key generates Alt_L	(e.g. for window managers)
! • The Alt_L key generates Mode_switch	(emulates Meta for X apps)
! • The Win_R key generates Meta_R	(adds 0x80 to latin1 code)
! • The Win_M key generates Compose	(also for UCS/UTF-8)
! • The < > | key generates Compose as well, if present
! • The Backspace key, shifted and with Mode_switch, generates ‘Ÿ’
! • The CapsLock key generates Ellipsis, Euro, DE-DblQL, Trademark
! • The Tab key, with Mode_switch, generates EN-DblQL and EN-DblQR
! • The Return key, with Mode_switch, generates Bullet and en dash
! The following behavioural differences can be seen on NT platforms:
! • The “Meta” and “Mode_switch” function is done by the Alt_R key
! • The < > | (102nd) key does Ellipsis, Euro, DE-DblQL, Trademark
! • The Alt_L, Win_L, Win_R, CapsLock keys retain common behaviour
! • The Win_M key also keeps common behaviour; there is no Compose
! The following behavioural differences can be seen on X11 platform:
! • In unshifted states, Escape and U+0060 (`) have switched place
! • The ModeSwitch-F1 combination generates U+263B (☻) dark smiley
! • The ModeSwitch-F2 combination generates U+263A (☺) glad smiley
! • The ModeSwitch-F3 combination generates U+2639 (☹) down smiley
! • The ModeSwitch-F4 combination generates U+1E9E (ẞ) majuscle sz
! • The ModeSwitch-F5 combination generates U+FFFD (�) replacement
! • The ModeSwitch-F6 combination generates U+2260 (≠) <not equal>
! • The ModeSwitch-F7 combination generates U+2018 (‘) left squote
! • The ModeSwitch-F8 combination generates U+2019 (’) right squot
! • The ModeSwitch-F9 combination generates U+0332 ( ̲) comb. under
! • The ModeSwitch-F10 combination generates U+0305 ( ̅) comb. over
! • The ModeSwitch-F11 combination generates U+2023 (‣) triangular
! • The ModeSwitch-F12 combination generates U+2025 (‥) TPinterval
! • The ModeSwitch-Shift-F1 combination generates U+250C (┌) up-lf
! • The ModeSwitch-Shift-F2 combination generates U+2500 (─) horiz
! • The ModeSwitch-Shift-F3 combination generates U+2510 (┐) up-rt
! • The ModeSwitch-Shift-F4 combination generates U+2502 (│) -vert
! • The ModeSwitch-Shift-F5 combination generates U+2514 (└) lo-lf
! • The ModeSwitch-Shift-F6 combination generates U+2518 (┘) lo-rt
! • The ModeSwitch-Shift-F7 combination generates U+251C (├) dn-rt
! • The ModeSwitch-Shift-F8 combination generates U+2524 (┤) dn-lf
! • The ModeSwitch-Shift-F9 combination generates U+253C (┼) cross
! • The ModeSwitch-Shift-F10 combination generates U+252C (┬) h-dn
! • The ModeSwitch-Shift-F11 combination generates U+2534 (┴) h-up
! • The ModeSwitch-Shift-F12 combination generates U+2588 (█) fblk
! • ModeSwitch and arrow keys generates single-dashed (without) or
!   double-dashed (with shift) pictograph U+21[9D][0123] ↑←↓→ ⇑⇐⇓⇒
! • ModeSwitch + {Ins,Del}, {Home,End}, {PgUp,PgDn} generates wide
!   parenthesēs: (unshift/shift) 〈〉 《》 / 〔〕 【】 / 「」 『』
! • ModeSwitch-Shift-{Space,Esc} are wide space/creative heaven ䷀
! • ModeSwitch-HyphenMinus is U+2010 HYPHEN not U+00AD SOFT HYPHEN

keycode	0x09 =	grave		Escape			agrave		U4DC0
keycode	0x43 =	F1		XF86_Switch_VT_1	U263B		U250C
keycode	0x44 =	F2		XF86_Switch_VT_2	U263A		U2500
keycode	0x45 =	F3		XF86_Switch_VT_3	U2639		U2510
keycode	0x46 =	F4		XF86_Switch_VT_4	U1E9E		U2502
keycode	0x47 =	F5		XF86_Switch_VT_5	UFFFD		U2514
keycode	0x48 =	F6		XF86_Switch_VT_6	U2260		U2518
keycode	0x49 =	F7		XF86_Switch_VT_7	U2018		U251C
keycode	0x4A =	F8		XF86_Switch_VT_8	U2019		U2524
keycode	0x4B =	F9		XF86_Switch_VT_9	U0332		U253C
keycode	0x4C =	F10		XF86_Switch_VT_10	U0305		U252C
keycode	0x5F =	F11		XF86_Switch_VT_11	U2023		U2534
keycode	0x60 =	F12		XF86_Switch_VT_12	U2025		U2588
keycode	0x6F =	Print		Sys_Req			Print		Sys_Req
keycode	0x5C =	Print		Sys_Req			Print		Sys_Req
keycode	0x4E =	Scroll_Lock	Pointer_Accelerate	Scroll_Lock	Pointer_Accelerate
keycode	0x6E =	Pause		Break			Pause		Break
keycode	0x72 =	Pause		Break			Pause		Break

keycode	0x31 =	Escape		asciitilde		Escape		thorn
keycode	0x0A =	1		exclam			plusminus	exclamdown
keycode	0x0B =	2		at			twosuperior	Agrave
keycode	0x0C =	3		numbersign		threesuperior	sterling
keycode	0x0D =	4		dollar			acute		currency
keycode	0x0E =	5		percent			mu		yen
keycode	0x0F =	6		asciicircum		paragraph	THORN
keycode	0x10 =	7		ampersand		periodcentered	brokenbar
keycode	0x11 =	8		asterisk		cedilla		ordfeminine
keycode	0x12 =	9		parenleft		onesuperior	diaeresis
keycode	0x13 =	0		parenright		degree		copyright
keycode	0x14 =	minus		underscore		U2010		ssharp
keycode	0x15 =	equal		plus			onehalf		guillemotleft
keycode	0x16 =	BackSpace	Terminate_Server	ydiaeresis	U0178
keycode	0x6A =	Insert		Insert			U3008		U300A
keycode	0x61 =	Home		Home			U3014		U3010
keycode	0x63 =	Prior		Prior			U300C		U300E
keycode	0x4D =	Num_Lock	Pointer_EnableKeys	Num_Lock	Pointer_EnableKeys
keycode	0x70 =	KP_Divide	XF86_Ungrab		KP_Divide	XF86_Ungrab
keycode	0x3F =	KP_Multiply	XF86_ClearGrab		KP_Multiply	XF86_ClearGrab
keycode	0x52 =	KP_Subtract	XF86_Prev_VMode		KP_Subtract	XF86_Prev_VMode

keycode	0x17 =	Tab		ISO_Left_Tab		U201C		U201D
keycode	0x18 =	q		Q			ntilde		Ntilde
keycode	0x19 =	w		W			division	multiply
keycode	0x1A =	e		E			aring		Aring
keycode	0x1B =	r		R			ograve		Ograve
keycode	0x1C =	t		T			ocircumflex	Ocircumflex
keycode	0x1D =	y		Y			ugrave		Ugrave
keycode	0x1E =	u		U			otilde		Otilde
keycode	0x1F =	i		I			eacute		Eacute
keycode	0x20 =	o		O			idiaeresis	Idiaeresis
keycode	0x21 =	p		P			eth		ETH
keycode	0x22 =	bracketleft	braceleft		Ucircumflex	ucircumflex
keycode	0x23 =	bracketright	braceright		Yacute		yacute
keycode	0x24 =	Return		Return			U2022		U2013
keycode	0x6B =	KP_Delete	Delete			U3009		U300B
keycode	0x67 =	End		End			U3015		U3011
keycode	0x69 =	Next		Next			U300D		U300F
keycode	0x4F =	KP_Home		KP_7			KP_Home		KP_7
keycode	0x50 =	KP_Up		KP_8			KP_Up		KP_8
keycode	0x51 =	KP_Prior	KP_9			KP_Prior	KP_9
keycode	0x56 =	KP_Add		XF86_Next_VMode		KP_Add		XF86_Next_VMode

keycode	0x42 =	U2026		U20AC			U201E		U2122
keycode	0x26 =	a		A			aacute		Aacute
keycode	0x27 =	s		S			oacute		Oacute
keycode	0x28 =	d		D			adiaeresis	Adiaeresis
keycode	0x29 =	f		F			ae		AE
keycode	0x2A =	g		G			ccedilla	Ccedilla
keycode	0x2B =	h		H			egrave		Egrave
keycode	0x2C =	j		J			ecircumflex	Ecircumflex
keycode	0x2D =	k		K			ediaeresis	Ediaeresis
keycode	0x2E =	l		L			igrave		Igrave
keycode	0x2F =	semicolon	colon			guillemotright	masculine
keycode	0x30 =	apostrophe	quotedbl		section		cent
keycode	0x33 =	backslash	bar			Udiaeresis	udiaeresis
keycode	0x53 =	KP_Left		KP_4			KP_Left		KP_4
keycode	0x54 =	KP_Begin	KP_5			KP_Begin	KP_5
keycode	0x55 =	KP_Right	KP_6			KP_Right	KP_6

keycode	0x32 =	Shift_L		Shift_L			Shift_L		Shift_L
keycode	0x5E =	Multi_key	Multi_key		Multi_key	Multi_key
keycode	0x34 =	z		Z			uacute		Uacute
keycode	0x35 =	x		X			oslash		Oslash
keycode	0x36 =	c		C			atilde		Atilde
keycode	0x37 =	v		V			odiaeresis	Odiaeresis
keycode	0x38 =	b		B			acircumflex	Acircumflex
keycode	0x39 =	n		N			icircumflex	Icircumflex
keycode	0x3A =	m		M			iacute		Iacute
keycode	0x3B =	comma		less			notsign		onequarter
keycode	0x3C =	period		greater			registered	threequarters
keycode	0x3D =	slash		question		macron		questiondown
keycode	0x3E =	Shift_R		Shift_R			Shift_R		Shift_R
keycode	0x62 =	Up		Up			U2191		U21D1
keycode	0x57 =	KP_End		KP_1			KP_End		KP_1
keycode	0x58 =	KP_Down		KP_2			KP_Down		KP_2
keycode	0x59 =	KP_Next		KP_3			KP_Next		KP_3
keycode	0x6C =	KP_Enter	Return			KP_Enter	Return

keycode	0x25 =	Control_L	Control_L		Control_L	Control_L
keycode	0x73 =	Alt_L		Alt_L			Alt_L		Alt_L
keycode	0x40 =	Mode_switch	Mode_switch		Mode_switch	Mode_switch
keycode	0x41 =	space		space			nobreakspace	U3000
keycode	0x71 =	Alt_R		Alt_R			Alt_R		Alt_R
keycode	0x74 =	Meta_R		Meta_R			Meta_R		Meta_R
keycode	0x75 =	Multi_key	Multi_key		Multi_key	Multi_key
keycode	0x6D =	Control_R	Control_R		Control_R	Control_R
keycode	0x64 =	Left		Left			U2190		U21D0
keycode	0x68 =	Down		Down			U2193		U21D3
keycode	0x66 =	Right		Right			U2192		U21D2
keycode	0x5A =	KP_Insert	KP_0			KP_Insert	KP_0
keycode	0x5B =	KP_Delete	KP_Decimal		KP_Delete	KP_Decimal

keycode	0x5D =
keycode	0x65 =
keycode	0x7C =
keycode	0x7D =
keycode	0x7E =
keycode	0x7F =
keycode	0x80 =
keycode	0x9C =

clear	Shift
clear	Lock
clear	Control
clear	Mod1
clear	Mod2
clear	Mod3
clear	Mod4
clear	Mod5
clear	Ctrl

add	Shift	= Shift_L	Shift_R
add	Control	= Control_L	Control_R
add	Mod1	= Alt_L		Alt_R
add	Mod2	= Num_Lock
add	Mod3	= Meta_R
add	Mod4	= Scroll_Lock
add	Mod5	= Mode_switch
@


1.28
log
@• em dash is 2014 surrounded by 200A (not 2009)
• deprecation notice for mailfrom.php, replaced by hello-php-world
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.27 2017/07/23 22:32:44 tg Exp $
d33 1
a33 1
! • The Win_M key generates Compose	(also for Unicode compose)
@


1.27
log
@• MirKBD Revision 4.01:
  - change ModeSwitch-‘-’ from U+00AD ­ (SOFT HYPHEN) to U+2010 ‐ (HYPHEN)
  - fix a bug in gnuwin and MAIN branch: keycode 0x5C was overwritten
• Update keyboard description files (kbd-*)
• Merge changes between 3.x and 4.01 into Linux keymap where possible
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.26 2016/06/04 02:47:46 tg Exp $
d27 1
a27 1
! layout is documented in kbd-xf86 in this directory.
@


1.26
log
@My art and craft permit us to use Mode_switch on XFree86® with xterm now❦

This allows us to:
• completely eliminate the “gnu” branch (use CVS HEAD, or “grml”)
• make the keycodes (kbd vs. evdev) be the o̲n̲l̲y̲ difference between these two
• completely document the layout graphically (well, WTF-8ically…)

Other changes:
• Alt_L is Mode_switch, but <>| is now Compose
• stop touching the Thinkpad keys
• reduce delta to setxkbmap-provided layout, add aliases
• also, some cosmetic fixes

The “gnuwin” layout was also rebased on HEAD, but closer to the NT one:
• stop switching Escape and accent gravis
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.25 2012/08/03 17:36:32 tg Exp $
d3 1
a3 1
! Copyright © 2004, 2007, 2008, 2010, 2012, 2016
d21 1
a21 1
! MirKBD Revision 4.00, English (Europe) with Meta key, for XFree86®
d75 1
d107 1
a107 1
keycode	0x14 =	minus		underscore		hyphen		ssharp
a189 1
keycode	0x5C =
@


1.25
log
@assign U+3000 wide space (　) and U+4DC0 creative heaven (䷀) to Mode_switch-Shift-{Space,Esc} for easy font design tools to come to a jupp near you RSN
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24 2010/12/05 20:19:30 tg Exp $
d3 2
a4 2
! Copyright © 2004, 2007, 2008, 2010, 2012
!	Thorsten “mirabilos” Glaser <tg@@mirbsd.org>
d21 1
a21 1
! MirKBD Revision 3WIP, English (Europe) with Meta key, for XFree86®
d24 4
a27 6
! for 105-key PC keyboards (usable with 102-key or laptop keyboards,
! too). Emulating Meta with Mode_switch helps with X11 applications.
! All ISO-8859-1 code points are directly typable on a 101-key board
! and most directly typable code points are a part of codepage 1252.
!
! This file is m̲o̲s̲t̲l̲y̲ documented in kbd-xf86 in this directory.
a29 1
! • The Alt_L key generates Meta_L	(adds 0x80 to latin1 code)
d31 2
a32 2
! • The < > | key generates Mode_switch	(emulates Meta for X apps)
! • The Win_R key generates Meta_R
d34 1
a44 2
! • The IBM Thinkpad X40 Page_Left key is Alt_L: there’s no Winkey
! • The IBM Thinkpad X40 Page_Right key can be used as Compose key
d46 2
a47 2
! • The ModeSwitch-F1 combination generates U+263B (☻) good smiley
! • The ModeSwitch-F2 combination generates U+263A (☺) dark smiley
d73 1
a73 1
!   parentheses: (unshift/shift) 〈〉 《》 / 〔〕 【】/ 「」 『』 
d76 112
a187 110
keycode	0x09 =	grave		Escape			U00E0	U4DC0
keycode	0x43 =	F1		XF86_Switch_VT_1	U263B	U250C
keycode	0x44 =	F2		XF86_Switch_VT_2	U263A	U2500
keycode	0x45 =	F3		XF86_Switch_VT_3	U2639	U2510
keycode	0x46 =	F4		XF86_Switch_VT_4	U1E9E	U2502
keycode	0x47 =	F5		XF86_Switch_VT_5	UFFFD	U2514
keycode	0x48 =	F6		XF86_Switch_VT_6	U2260	U2518
keycode	0x49 =	F7		XF86_Switch_VT_7	U2018	U251C
keycode	0x4A =	F8		XF86_Switch_VT_8	U2019	U2524
keycode	0x4B =	F9		XF86_Switch_VT_9	U0332	U253C
keycode	0x4C =	F10		XF86_Switch_VT_10	U0305	U252C
keycode	0x5F =	F11		XF86_Switch_VT_11	U2023	U2534
keycode	0x60 =	F12		XF86_Switch_VT_12	U2025	U2588
keycode	0x6F =	Print		Sys_Req
keycode	0x4E =	Scroll_Lock	Pointer_Accelerate
keycode	0x6E =	Pause		Break

keycode	0x31 =	Escape		asciitilde	U009B		U00FE
keycode	0x0A =	1		exclam		U00B1		U00A1
keycode	0x0B =	2		at		U00B2		U00C0
keycode	0x0C =	3		numbersign	U00B3		U00A3
keycode	0x0D =	4		dollar		U00B4		U00A4
keycode	0x0E =	5		percent		U00B5		U00A5
keycode	0x0F =	6		asciicircum	U00B6		U00DE
keycode	0x10 =	7		ampersand	U00B7		U00A6
keycode	0x11 =	8		asterisk	U00B8		U00AA
keycode	0x12 =	9		parenleft	U00B9		U00A8
keycode	0x13 =	0		parenright	U00B0		U00A9
keycode	0x14 =	minus		underscore	U00AD		U00DF
keycode	0x15 =	equal		plus		U00BD		U00AB
keycode	0x16 =	BackSpace	Terminate_Server  U00FF		U0178
keycode	0x6A =	Insert		Insert		U3008		U300A
keycode	0x61 =	Home		Home		U3014		U3010
keycode	0x63 =	Prior		Prior		U300C		U300E
keycode	0x4D =	Num_Lock	Pointer_EnableKeys
keycode	0x70 =	KP_Divide	XF86_Ungrab
keycode	0x3F =	KP_Multiply	XF86_ClearGrab
keycode	0x52 =	KP_Subtract	XF86_Prev_VMode

keycode	0x17 =	Tab		ISO_Left_Tab	U201C		U201D
keycode	0x18 =	q		Q		U00F1		U00D1
keycode	0x19 =	w		W		U00F7		U00D7
keycode	0x1A =	e		E		U00E5		U00C5
keycode	0x1B =	r		R		U00F2		U00D2
keycode	0x1C =	t		T		U00F4		U00D4
keycode	0x1D =	y		Y		U00F9		U00D9
keycode	0x1E =	u		U		U00F5		U00D5
keycode	0x1F =	i		I		U00E9		U00C9
keycode	0x20 =	o		O		U00EF		U00CF
keycode	0x21 =	p		P		U00F0		U00D0
keycode	0x22 =	bracketleft	braceleft	U00DB		U00FB
keycode	0x23 =	bracketright	braceright	U00DD		U00FD
keycode	0x24 =	Return		Return		U2022		U2013
keycode	0x6B =	KP_Delete	Delete		U3009		U300B
keycode	0x67 =	End		End		U3015		U3011
keycode	0x69 =	Next		Next		U300D		U300F
keycode	0x4F =	KP_Home		KP_7
keycode	0x50 =	KP_Up		KP_8
keycode	0x51 =	KP_Prior	KP_9
keycode	0x56 =	KP_Add		XF86_Next_VMode

keycode	0x42 =	U2026		U20AC		U201E		U2122
keycode	0x26 =	a		A		U00E1		U00C1
keycode	0x27 =	s		S		U00F3		U00D3
keycode	0x28 =	d		D		U00E4		U00C4
keycode	0x29 =	f		F		U00E6		U00C6
keycode	0x2A =	g		G		U00E7		U00C7
keycode	0x2B =	h		H		U00E8		U00C8
keycode	0x2C =	j		J		U00EA		U00CA
keycode	0x2D =	k		K		U00EB		U00CB
keycode	0x2E =	l		L		U00EC		U00CC
keycode	0x2F =	semicolon	colon		U00BB		U00BA
keycode	0x30 =	apostrophe	quotedbl	U00A7		U00A2
keycode	0x33 =	backslash	bar		U00DC		U00FC
keycode	0x53 =	KP_Left		KP_4
keycode	0x54 =	KP_Begin	KP_5
keycode	0x55 =	KP_Right	KP_6

keycode	0x32 =	Shift_L		Shift_L
keycode	0x5E =	Mode_switch	Mode_switch
keycode	0x34 =	z		Z		U00FA		U00DA
keycode	0x35 =	x		X		U00F8		U00D8
keycode	0x36 =	c		C		U00E3		U00C3
keycode	0x37 =	v		V		U00F6		U00D6
keycode	0x38 =	b		B		U00E2		U00C2
keycode	0x39 =	n		N		U00EE		U00CE
keycode	0x3A =	m		M		U00ED		U00CD
keycode	0x3B =	comma		less		U00AC		U00BC
keycode	0x3C =	period		greater		U00AE		U00BE
keycode	0x3D =	slash		question	U00AF		U00BF
keycode	0x3E =	Shift_R		Shift_R
keycode	0x62 =	Up		Up		U2191		U21D1
keycode	0x57 =	KP_End		KP_1
keycode	0x58 =	KP_Down		KP_2
keycode	0x59 =	KP_Next		KP_3
keycode	0x6C =	KP_Enter	Return

keycode	0x25 =	Control_L	Control_L
keycode	0x73 =	Alt_L		Alt_L
keycode	0x40 =	Meta_L		Meta_L
keycode	0x41 =	space		space		U00A0		U3000
keycode	0x71 =	Alt_R		Alt_R
keycode	0x74 =	Meta_R		Meta_R
keycode	0x75 =	Multi_key	Multi_key
keycode	0x6D =	Control_R	Control_R
keycode	0x64 =	Left		Left		U2190		U21D0
keycode	0x68 =	Down		Down		U2193		U21D3
keycode	0x66 =	Right		Right		U2192		U21D2
keycode	0x5A =	KP_Insert	KP_0
keycode	0x5B =	KP_Delete	KP_Decimal
d191 1
a191 1
keycode	0x72 =
a198 3
keycode	0xEA =	Alt_L		Alt_L
keycode	0xE9 =	Multi_key	Multi_key

d213 1
a213 1
add	Mod3	= Meta_L	Meta_R
@


1.24
log
@add graphical (UTF-8 text with ANSI colour escapes) documentation
of dot.Xmodmap as it’s now

XXX the uni* files should be regenerated against latest Unicode
XXX also probably better to limit them to the BMP anyway…
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.23 2010/04/04 10:35:51 tg Exp $
d3 1
a3 1
! Copyright © 2004, 2007, 2008, 2010
d73 1
a73 1
! • The ModeSwitch-Shift-F12☁combination generates U+2588 (█) fblk
d76 1
a76 1
! • ModeSwitch + {Ins,Del}, {Home,End}, {PgUp,PgDn} generate☁ wide
d78 1
a78 1
! Note: ☁ = available for reassignment
d80 1
a80 1
keycode	0x09 =	grave		Escape			U00E0	U009B
d180 1
a180 1
keycode	0x41 =	space		space		U00A0		U00A0
@


1.24.4.1
log
@merge gnu branch syntax stuff
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24 2010/12/05 20:19:30 tg Exp $
d3 1
a3 1
! Copyright © 2004, 2007, 2008, 2010, 2012
d21 1
a21 1
! MirKBD Revision 3WIP, English (Europe) with Meta key, for x.org
d29 1
a29 3
! This file is m̲o̲s̲t̲l̲y̲ documented in kbd-xf86 in this directory, but
! has been modified to work on wheezy (remember X -retro): U+009B is
! not allowed.
d80 1
a80 1
keycode	0x09 =	grave		Escape			U00E0
d97 1
a97 1
keycode	0x31 =	Escape		asciitilde	Escape		U00FE
@


1.24.4.2
log
@adapt for new X.org server on Debian wheezy ☹ spotted by mika@@grml.org
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.4.1 2012/06/08 23:09:43 tg Exp $
d79 1
a79 1
!   parentheses: (unshift/shift) 〈〉 《》 / 〔〕 【】/ 「」 『』
d95 1
a95 1
keycode	0x6B =	Print		Sys_Req
d97 1
a97 1
keycode	0x7F =	Pause		Break
d113 3
a115 3
keycode	0x76 =	Insert		Insert		U3008		U300A
keycode	0x6E =	Home		Home		U3014		U3010
keycode	0x70 =	Prior		Prior		U300C		U300E
d117 1
a117 1
keycode	0x6A =	KP_Divide	XF86_Ungrab
d135 3
a137 3
keycode	0x77 =	KP_Delete	Delete		U3009		U300B
keycode	0x73 =	End		End		U3015		U3011
keycode	0x75 =	Next		Next		U300D		U300F
d173 1
a173 1
keycode	0x6F =	Up		Up		U2191		U21D1
d177 1
a177 1
keycode	0x68 =	KP_Enter	Return
d180 1
a180 1
keycode	0x85 =	Alt_L		Alt_L
d183 7
a189 7
keycode	0x6C =	Alt_R		Alt_R
keycode	0x86 =	Meta_R		Meta_R
keycode	0x87 =	Multi_key	Multi_key
keycode	0x69 =	Control_R	Control_R
keycode	0x71 =	Left		Left		U2190		U21D0
keycode	0x74 =	Down		Down		U2193		U21D3
keycode	0x72 =	Right		Right		U2192		U21D2
d193 12
a204 2
keycode	0xA6 =	Alt_L		Alt_L
keycode	0xA7 =	Multi_key	Multi_key
@


1.24.4.3
log
@Terminate_Server should n̲o̲t̲ be on Shift-Backspace ☺
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.4.2 2012/06/08 23:49:02 tg Exp $
d112 1
a112 1
keycode	0x16 =	BackSpace	BackSpace	U00FF		U0178	NoSymbol NoSymbol Terminate_Server
@


1.24.4.4
log
@Ctrl-Alt-F1, not Shift-F1, for VC switching, pleeeeease
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.4.3 2012/06/08 23:58:00 tg Exp $
d21 1
a21 1
! MirKBD Revision 3WIP, English (Europe) with Meta key, for x.org-V2
d29 3
a31 3
! This file has been modified to work on wheezy (remember X -retro);
! U+009B is not allowed, the rest is m̲o̲s̲t̲l̲y̲ documented in "kbd-xf86"
! in this directory.
d82 13
a94 13
keycode	0x09 =	grave		Escape			U00E0	NoSymbol
keycode	0x43 =	F1		F1			U263B	U250C	NoSymbol NoSymbol XF86_Switch_VT_1
keycode	0x44 =	F2		F2			U263A	U2500	NoSymbol NoSymbol XF86_Switch_VT_2
keycode	0x45 =	F3		F3			U2639	U2510	NoSymbol NoSymbol XF86_Switch_VT_3
keycode	0x46 =	F4		F4			U1E9E	U2502	NoSymbol NoSymbol XF86_Switch_VT_4
keycode	0x47 =	F5		F5			UFFFD	U2514	NoSymbol NoSymbol XF86_Switch_VT_5
keycode	0x48 =	F6		F6			U2260	U2518	NoSymbol NoSymbol XF86_Switch_VT_6
keycode	0x49 =	F7		F7			U2018	U251C	NoSymbol NoSymbol XF86_Switch_VT_7
keycode	0x4A =	F8		F8			U2019	U2524	NoSymbol NoSymbol XF86_Switch_VT_8
keycode	0x4B =	F9		F9			U0332	U253C	NoSymbol NoSymbol XF86_Switch_VT_9
keycode	0x4C =	F10		F10			U0305	U252C	NoSymbol NoSymbol XF86_Switch_VT_10
keycode	0x5F =	F11		F11			U2023	U2534	NoSymbol NoSymbol XF86_Switch_VT_11
keycode	0x60 =	F12		F12			U2025	U2588	NoSymbol NoSymbol XF86_Switch_VT_12
d117 3
a119 3
keycode	0x6A =	KP_Divide KP_Divide KP_Divide KP_Divide KP_Divide KP_Divide XF86_Ungrab
keycode	0x3F =	KP_Multiply KP_Multiply KP_Multiply KP_Multiply KP_Multiply KP_Multiply XF86_ClearGrab
keycode	0x52 =	KP_Subtract KP_Subtract KP_Subtract KP_Subtract KP_Subtract KP_Subtract XF86_Prev_VMode
d141 1
a141 1
keycode	0x56 =	KP_Add		KP_Add		KP_Add		KP_Add KP_Add KP_Add XF86_Next_VMode
@


1.24.4.5
log
@assign U+3000 wide space (　) and U+4DC0 creative heaven (䷀) to Mode_switch-Shift-{Space,Esc} for easy font design tools to come to a jupp near you RSN
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.4.4 2012/07/04 23:01:08 tg Exp $
d75 1
a75 1
! • The ModeSwitch-Shift-F12 combination generates U+2588 (█) fblk
d78 1
a78 1
! • ModeSwitch + {Ins,Del}, {Home,End}, {PgUp,PgDn} generates wide
d80 1
a80 1
! • ModeSwitch-Shift-{Space,Esc} are wide space/creative heaven ䷀
d82 1
a82 1
keycode	0x09 =	grave		Escape			U00E0	U4DC0
d182 1
a182 1
keycode	0x41 =	space		space		U00A0		U3000
@


1.24.4.6
log
@wheezy uxterm handles Mode_switch, but X apps still don’t handle Meta,
so bind Mode_switch to unshifted Alt_L for “grml” like for “gnu”
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.4.5 2012/08/03 17:36:33 tg Exp $
d3 1
a3 1
! Copyright © 2004, 2007, 2008, 2010, 2012, 2013
d31 1
a31 2
! in this directory. Additionally, uxterm works with Mode_switch now
! and doesn’t need Meta_L, so replace as the latter hinders X apps.
d181 1
a181 1
keycode	0x40 =	Mode_switch	Meta_L
@


1.24.4.7
log
@only unshifted Alt_L being Mode_switch turns out to be not so good an idea…
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.4.6 2013/03/28 12:15:55 tg Exp $
d182 1
a182 1
keycode	0x40 =	Mode_switch	Mode_switch
@


1.24.4.8
log
@My art and craft permit us to use Mode_switch on XFree86® with xterm now❦

This allows us to:
• completely eliminate the “gnu” branch (use CVS HEAD, or “grml”)
• make the keycodes (kbd vs. evdev) be the o̲n̲l̲y̲ difference between these two
• completely document the layout graphically (well, WTF-8ically…)

Other changes:
• Alt_L is Mode_switch, but <>| is now Compose
• stop touching the Thinkpad keys
• reduce delta to setxkbmap-provided layout, add aliases
• also, some cosmetic fixes

The “gnuwin” layout was also rebased on HEAD, but closer to the NT one:
• stop switching Escape and accent gravis
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.25 2012/08/03 17:36:32 tg Exp $
d3 2
a4 2
! Copyright © 2004, 2007, 2008, 2010, 2012, 2013, 2016
!	mirabilos <m@@mirbsd.org>
d21 1
a21 1
! MirKBD Revision 4.00, English (Europe) + Meta key, for X.org/evdev
d24 9
a32 4
! Meta emulated by Mode_switch, for 102-key, 104/105-key, and laptop
! keyboards. All ISO 8859-1 characters are directly typable, as well
! as some extra characters (most of which are in codepage 1252). The
! layout is documented in kbd-xf86 in this directory.
d35 1
d37 2
a38 2
! • The Alt_L key generates Mode_switch	(emulates Meta for X apps)
! • The Win_R key generates Meta_R	(adds 0x80 to latin1 code)
a39 1
! • The < > | key generates Compose as well, if present
d50 2
d53 2
a54 2
! • The ModeSwitch-F1 combination generates U+263B (☻) dark smiley
! • The ModeSwitch-F2 combination generates U+263A (☺) glad smiley
d80 1
a80 1
!   parenthesēs: (unshift/shift) 〈〉 《》 / 〔〕 【】 / 「」 『』
d83 113
a195 110
keycode	0x09 =	grave		Escape			agrave		U4DC0
keycode	0x43 =	F1		F1			U263B		U250C		F1 F1 XF86_Switch_VT_1
keycode	0x44 =	F2		F2			U263A		U2500		F2 F2 XF86_Switch_VT_2
keycode	0x45 =	F3		F3			U2639		U2510		F3 F3 XF86_Switch_VT_3
keycode	0x46 =	F4		F4			U1E9E		U2502		F4 F4 XF86_Switch_VT_4
keycode	0x47 =	F5		F5			UFFFD		U2514		F5 F5 XF86_Switch_VT_5
keycode	0x48 =	F6		F6			U2260		U2518		F6 F6 XF86_Switch_VT_6
keycode	0x49 =	F7		F7			U2018		U251C		F7 F7 XF86_Switch_VT_7
keycode	0x4A =	F8		F8			U2019		U2524		F8 F8 XF86_Switch_VT_8
keycode	0x4B =	F9		F9			U0332		U253C		F9 F9 XF86_Switch_VT_9
keycode	0x4C =	F10		F10			U0305		U252C		F10 F10 XF86_Switch_VT_10
keycode	0x5F =	F11		F11			U2023		U2534		F11 F11 XF86_Switch_VT_11
keycode	0x60 =	F12		F12			U2025		U2588		F12 F12 XF86_Switch_VT_12
keycode	0x6B =	Print		Sys_Req			Print		Sys_Req
keycode	0x4E =	Scroll_Lock	Pointer_Accelerate	Scroll_Lock	Pointer_Accelerate
keycode	0x7F =	Pause		Break			Pause		Break

keycode	0x31 =	Escape		asciitilde		Escape		thorn
keycode	0x0A =	1		exclam			plusminus	exclamdown
keycode	0x0B =	2		at			twosuperior	Agrave
keycode	0x0C =	3		numbersign		threesuperior	sterling
keycode	0x0D =	4		dollar			acute		currency
keycode	0x0E =	5		percent			mu		yen
keycode	0x0F =	6		asciicircum		paragraph	THORN
keycode	0x10 =	7		ampersand		periodcentered	brokenbar
keycode	0x11 =	8		asterisk		cedilla		ordfeminine
keycode	0x12 =	9		parenleft		onesuperior	diaeresis
keycode	0x13 =	0		parenright		degree		copyright
keycode	0x14 =	minus		underscore		hyphen		ssharp
keycode	0x15 =	equal		plus			onehalf		guillemotleft
keycode	0x16 =	BackSpace	BackSpace		ydiaeresis	U0178		NoSymbol NoSymbol Terminate_Server
keycode	0x76 =	Insert		Insert			U3008		U300A
keycode	0x6E =	Home		Home			U3014		U3010
keycode	0x70 =	Prior		Prior			U300C		U300E
keycode	0x4D =	Num_Lock	Pointer_EnableKeys	Num_Lock	Pointer_EnableKeys
keycode	0x6A =	KP_Divide	KP_Divide		KP_Divide	KP_Divide	KP_Divide KP_Divide XF86_Ungrab
keycode	0x3F =	KP_Multiply	KP_Multiply		KP_Multiply	KP_Multiply	KP_Multiply KP_Multiply XF86_ClearGrab
keycode	0x52 =	KP_Subtract	KP_Subtract		KP_Subtract	KP_Subtract	KP_Subtract KP_Subtract XF86_Prev_VMode

keycode	0x17 =	Tab		ISO_Left_Tab		U201C		U201D
keycode	0x18 =	q		Q			ntilde		Ntilde
keycode	0x19 =	w		W			division	multiply
keycode	0x1A =	e		E			aring		Aring
keycode	0x1B =	r		R			ograve		Ograve
keycode	0x1C =	t		T			ocircumflex	Ocircumflex
keycode	0x1D =	y		Y			ugrave		Ugrave
keycode	0x1E =	u		U			otilde		Otilde
keycode	0x1F =	i		I			eacute		Eacute
keycode	0x20 =	o		O			idiaeresis	Idiaeresis
keycode	0x21 =	p		P			eth		ETH
keycode	0x22 =	bracketleft	braceleft		Ucircumflex	ucircumflex
keycode	0x23 =	bracketright	braceright		Yacute		yacute
keycode	0x24 =	Return		Return			U2022		U2013
keycode	0x77 =	KP_Delete	Delete			U3009		U300B
keycode	0x73 =	End		End			U3015		U3011
keycode	0x75 =	Next		Next			U300D		U300F
keycode	0x4F =	KP_Home		KP_7			KP_Home		KP_7
keycode	0x50 =	KP_Up		KP_8			KP_Up		KP_8
keycode	0x51 =	KP_Prior	KP_9			KP_Prior	KP_9
keycode	0x56 =	KP_Add		KP_Add			KP_Add		KP_Add		KP_Add KP_Add XF86_Next_VMode

keycode	0x42 =	U2026		U20AC			U201E		U2122
keycode	0x26 =	a		A			aacute		Aacute
keycode	0x27 =	s		S			oacute		Oacute
keycode	0x28 =	d		D			adiaeresis	Adiaeresis
keycode	0x29 =	f		F			ae		AE
keycode	0x2A =	g		G			ccedilla	Ccedilla
keycode	0x2B =	h		H			egrave		Egrave
keycode	0x2C =	j		J			ecircumflex	Ecircumflex
keycode	0x2D =	k		K			ediaeresis	Ediaeresis
keycode	0x2E =	l		L			igrave		Igrave
keycode	0x2F =	semicolon	colon			guillemotright	masculine
keycode	0x30 =	apostrophe	quotedbl		section		cent
keycode	0x33 =	backslash	bar			Udiaeresis	udiaeresis
keycode	0x53 =	KP_Left		KP_4			KP_Left		KP_4
keycode	0x54 =	KP_Begin	KP_5			KP_Begin	KP_5
keycode	0x55 =	KP_Right	KP_6			KP_Right	KP_6

keycode	0x32 =	Shift_L		Shift_L			Shift_L		Shift_L
keycode	0x5E =	Multi_key	Multi_key		Multi_key	Multi_key
keycode	0x34 =	z		Z			uacute		Uacute
keycode	0x35 =	x		X			oslash		Oslash
keycode	0x36 =	c		C			atilde		Atilde
keycode	0x37 =	v		V			odiaeresis	Odiaeresis
keycode	0x38 =	b		B			acircumflex	Acircumflex
keycode	0x39 =	n		N			icircumflex	Icircumflex
keycode	0x3A =	m		M			iacute		Iacute
keycode	0x3B =	comma		less			notsign		onequarter
keycode	0x3C =	period		greater			registered	threequarters
keycode	0x3D =	slash		question		macron		questiondown
keycode	0x3E =	Shift_R		Shift_R			Shift_R		Shift_R
keycode	0x6F =	Up		Up			U2191		U21D1
keycode	0x57 =	KP_End		KP_1			KP_End		KP_1
keycode	0x58 =	KP_Down		KP_2			KP_Down		KP_2
keycode	0x59 =	KP_Next		KP_3			KP_Next		KP_3
keycode	0x68 =	KP_Enter	Return			KP_Enter	Return

keycode	0x25 =	Control_L	Control_L		Control_L	Control_L
keycode	0x85 =	Alt_L		Alt_L			Alt_L		Alt_L
keycode	0x40 =	Mode_switch	Mode_switch		Mode_switch	Mode_switch
keycode	0x41 =	space		space			nobreakspace	U3000
keycode	0x6C =	Alt_R		Alt_R			Alt_R		Alt_R
keycode	0x86 =	Meta_R		Meta_R			Meta_R		Meta_R
keycode	0x87 =	Multi_key	Multi_key		Multi_key	Multi_key
keycode	0x69 =	Control_R	Control_R		Control_R	Control_R
keycode	0x71 =	Left		Left			U2190		U21D0
keycode	0x74 =	Down		Down			U2193		U21D3
keycode	0x72 =	Right		Right			U2192		U21D2
keycode	0x5A =	KP_Insert	KP_0			KP_Insert	KP_0
keycode	0x5B =	KP_Delete	KP_Decimal		KP_Delete	KP_Decimal
d211 1
a211 1
add	Mod3	= Meta_R
@


1.24.4.9
log
@• MirKBD Revision 4.01:
  - change ModeSwitch-‘-’ from U+00AD ­ (SOFT HYPHEN) to U+2010 ‐ (HYPHEN)
  - fix a bug in gnuwin and MAIN branch: keycode 0x5C was overwritten
• Update keyboard description files (kbd-*)
• Merge changes between 3.x and 4.01 into Linux keymap where possible
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.4.8 2016/06/04 02:47:48 tg Exp $
d3 1
a3 1
! Copyright © 2004, 2007, 2008, 2010, 2012, 2013, 2016, 2017
d21 1
a21 1
! MirKBD Revision 4.01, English (Europe) + Meta key, for X.org/evdev
a74 1
! • ModeSwitch-HyphenMinus is U+2010 HYPHEN not U+00AD SOFT HYPHEN
d104 1
a104 1
keycode	0x14 =	minus		underscore		U2010		ssharp
@


1.24.4.10
log
@• em dash is 2014 surrounded by 200A (not 2009)
• deprecation notice for mailfrom.php, replaced by hello-php-world
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.4.9 2017/07/23 22:32:43 tg Exp $
d27 1
a27 1
! layout is documented in kbd-xf86 in this directory. dash = 「 — 」
@


1.24.4.11
log
@same as in commitid 1005B6CF36E3932B560, plus assorted cleanup
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.4.10 2017/07/27 12:52:00 tg Exp $
d33 1
a33 1
! • The Win_M key generates Compose	(also for UCS/UTF-8)
@


1.24.2.1
log
@commit the x.org modifications from kubuntu at work
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24 2010/12/05 20:19:30 tg Exp $
d29 1
a29 2
! This file has been modified to work on GNU: U+009B is not allowed,
! and uxterm uses Mode_switch, not Meta, there, so bind it to Alt_L.
d80 1
a80 1
keycode	0x09 =	grave		Escape			U00E0
d97 1
a97 1
keycode	0x31 =	Escape		asciitilde	Escape		U00FE
d179 1
a179 1
keycode	0x40 =	Mode_switch	Mode_switch
@


1.24.2.2
log
@assign U+3000 wide space (　) and U+4DC0 creative heaven (䷀) to Mode_switch-Shift-{Space,Esc} for easy font design tools to come to a jupp near you RSN
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.2.1 2011/06/01 11:32:30 tg Exp $
d3 1
a3 1
! Copyright © 2004, 2007, 2008, 2010, 2012
d74 1
a74 1
! • The ModeSwitch-Shift-F12 combination generates U+2588 (█) fblk
d77 1
a77 1
! • ModeSwitch + {Ins,Del}, {Home,End}, {PgUp,PgDn} generates wide
d79 1
a79 1
! • ModeSwitch-Shift-{Space,Esc} are wide space/creative heaven ䷀
d81 1
a81 1
keycode	0x09 =	grave		Escape			U00E0	U4DC0
d181 1
a181 1
keycode	0x41 =	space		space		U00A0		U3000
@


1.24.2.3
log
@My art and craft permit us to use Mode_switch on XFree86® with xterm now❦

This allows us to:
• completely eliminate the “gnu” branch (use CVS HEAD, or “grml”)
• make the keycodes (kbd vs. evdev) be the o̲n̲l̲y̲ difference between these two
• completely document the layout graphically (well, WTF-8ically…)

Other changes:
• Alt_L is Mode_switch, but <>| is now Compose
• stop touching the Thinkpad keys
• reduce delta to setxkbmap-provided layout, add aliases
• also, some cosmetic fixes

The “gnuwin” layout was also rebased on HEAD, but closer to the NT one:
• stop switching Escape and accent gravis
@
text
@d1 79
a79 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.2.2 2012/08/03 17:36:34 tg Exp $
d81 141
a221 3
The "gnu" branch is no longer used.
Use the "grml" branch for modern (Debian 7 "wheezy" or later) X.org,
and CVS HEAD for older X.org versions, xrdp mapping, etc.
@


1.24.2.1.2.1
log
@Variant of the keyboard with Mode_switch on Alt_R (AltGr), other keybindings
shuffled, to be more similar to KBDmir2U for win2k
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.2.1 2011/06/01 11:32:30 tg Exp $
a4 2
! Copyright © 2012
!	Thorsten Glaser <t.glaser@@tarent.de>
d21 1
a21 1
! MirKBD Revision 3WIP, English (Europe), Meta on AltGr, for X.org
d24 2
a25 2
! for 105-key PC keyboards (usable with 101-key or laptop keyboards,
! too).
d29 3
d33 3
a35 2
! • The Alt_R key generates Mode_switch	(emulates Meta for X apps)
! • The Win_L key generates Meta_L	(adds 0x80 to latin1 code)
d38 2
a39 2
! • The CapsLock key also is Multi_key (Compose)
! • The < > | (102nd) key does Ellipsis, Euro, DE-DblQL, Trademark
a40 1
! • The Backspace key, shifted and with Mode_switch, generates ‘Ÿ’
d42 5
d48 2
d142 1
a142 1
keycode	0x42 =	Multi_key	Multi_key
d160 1
a160 1
keycode	0x5E =	U2026		U20AC		U201E		U2122
d179 2
a180 2
keycode	0x73 =	Meta_L		Meta_L
keycode	0x40 =	Alt_L		Alt_L
d182 1
a182 1
keycode	0x71 =	Mode_switch	Mode_switch
d202 3
@


1.24.2.1.2.2
log
@assign U+3000 wide space (　) and U+4DC0 creative heaven (䷀) to Mode_switch-Shift-{Space,Esc} for easy font design tools to come to a jupp near you RSN
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.2.1.2.1 2012/04/24 08:12:48 tg Exp $
d3 1
a3 1
! Copyright © 2004, 2007, 2008, 2010, 2012
d66 1
a66 1
! • The ModeSwitch-Shift-F12 combination generates U+2588 (█) fblk
d69 1
a69 1
! • ModeSwitch + {Ins,Del}, {Home,End}, {PgUp,PgDn} generates wide
d71 1
a71 1
! • ModeSwitch-Shift-{Space,Esc} are wide space/creative heaven ䷀
d73 1
a73 1
keycode	0x09 =	grave		Escape			U00E0	U4DC0
d173 1
a173 1
keycode	0x41 =	space		space		U00A0		U3000
@


1.24.2.1.2.3
log
@My art and craft permit us to use Mode_switch on XFree86® with xterm now❦

This allows us to:
• completely eliminate the “gnu” branch (use CVS HEAD, or “grml”)
• make the keycodes (kbd vs. evdev) be the o̲n̲l̲y̲ difference between these two
• completely document the layout graphically (well, WTF-8ically…)

Other changes:
• Alt_L is Mode_switch, but <>| is now Compose
• stop touching the Thinkpad keys
• reduce delta to setxkbmap-provided layout, add aliases
• also, some cosmetic fixes

The “gnuwin” layout was also rebased on HEAD, but closer to the NT one:
• stop switching Escape and accent gravis
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.25 2012/08/03 17:36:32 tg Exp $
d3 4
a6 2
! Copyright © 2004, 2007, 2008, 2010, 2012, 2016
!	mirabilos <m@@mirbsd.org>
d23 1
a23 1
! MirKBD Revision 4.00 Meta on AltGr, English (Europe), for XFree86®
d25 5
a29 4
! Advanced .Xmodmap file with US-based layout plus Meta (emulated by
! Mode_switch), for 102/105-key and laptop keyboards. All ISO 8859-1
! characters are directly typable, as well as some extra characters,
! most of which are in codepage 1252.
d32 1
d34 1
a34 2
! • The Alt_R key generates Mode_switch	(emulates Meta for X apps)
! • The Win_R key generates Meta_R	(adds 0x80 to latin1 code)
d36 3
a38 2
! • The CapsLock key acts as Compose key
! • The <>| (102nd) key generates Ellipsis, €, DE-DblQL, Trademark
a39 1
! • The Tab key, with Mode_switch, generates EN-DblQL and EN-DblQR
a40 3
! The following behavioural differences can be seen on NT platforms:
! • The Win_L, Win_R, Win_M, CapsLock keys retain normal behaviour
! • There is no such thing as a Compose key
d42 3
a44 2
! • The ModeSwitch-F1 combination generates U+263B (☻) dark smiley
! • The ModeSwitch-F2 combination generates U+263A (☺) glad smiley
d70 1
a70 1
!   parenthesēs: (unshift/shift) 〈〉 《》 / 〔〕 【】 / 「」 『』
d73 110
a182 112
keycode	0x09 =	Escape		Escape			Escape		U4DC0
keycode	0x43 =	F1		XF86_Switch_VT_1	U263B		U250C
keycode	0x44 =	F2		XF86_Switch_VT_2	U263A		U2500
keycode	0x45 =	F3		XF86_Switch_VT_3	U2639		U2510
keycode	0x46 =	F4		XF86_Switch_VT_4	U1E9E		U2502
keycode	0x47 =	F5		XF86_Switch_VT_5	UFFFD		U2514
keycode	0x48 =	F6		XF86_Switch_VT_6	U2260		U2518
keycode	0x49 =	F7		XF86_Switch_VT_7	U2018		U251C
keycode	0x4A =	F8		XF86_Switch_VT_8	U2019		U2524
keycode	0x4B =	F9		XF86_Switch_VT_9	U0332		U253C
keycode	0x4C =	F10		XF86_Switch_VT_10	U0305		U252C
keycode	0x5F =	F11		XF86_Switch_VT_11	U2023		U2534
keycode	0x60 =	F12		XF86_Switch_VT_12	U2025		U2588
keycode	0x6F =	Print		Sys_Req			Print		Sys_Req
keycode	0x5C =	Print		Sys_Req			Print		Sys_Req
keycode	0x4E =	Scroll_Lock	Pointer_Accelerate	Scroll_Lock	Pointer_Accelerate
keycode	0x6E =	Pause		Break			Pause		Break
keycode	0x72 =	Pause		Break			Pause		Break

keycode	0x31 =	grave		asciitilde		agrave		thorn
keycode	0x0A =	1		exclam			plusminus	exclamdown
keycode	0x0B =	2		at			twosuperior	Agrave
keycode	0x0C =	3		numbersign		threesuperior	sterling
keycode	0x0D =	4		dollar			acute		currency
keycode	0x0E =	5		percent			mu		yen
keycode	0x0F =	6		asciicircum		paragraph	THORN
keycode	0x10 =	7		ampersand		periodcentered	brokenbar
keycode	0x11 =	8		asterisk		cedilla		ordfeminine
keycode	0x12 =	9		parenleft		onesuperior	diaeresis
keycode	0x13 =	0		parenright		degree		copyright
keycode	0x14 =	minus		underscore		hyphen		ssharp
keycode	0x15 =	equal		plus			onehalf		guillemotleft
keycode	0x16 =	BackSpace	Terminate_Server	ydiaeresis	U0178
keycode	0x6A =	Insert		Insert			U3008		U300A
keycode	0x61 =	Home		Home			U3014		U3010
keycode	0x63 =	Prior		Prior			U300C		U300E
keycode	0x4D =	Num_Lock	Pointer_EnableKeys	Num_Lock	Pointer_EnableKeys
keycode	0x70 =	KP_Divide	XF86_Ungrab		KP_Divide	XF86_Ungrab
keycode	0x3F =	KP_Multiply	XF86_ClearGrab		KP_Multiply	XF86_ClearGrab
keycode	0x52 =	KP_Subtract	XF86_Prev_VMode		KP_Subtract	XF86_Prev_VMode

keycode	0x17 =	Tab		ISO_Left_Tab		U201C		U201D
keycode	0x18 =	q		Q			ntilde		Ntilde
keycode	0x19 =	w		W			division	multiply
keycode	0x1A =	e		E			aring		Aring
keycode	0x1B =	r		R			ograve		Ograve
keycode	0x1C =	t		T			ocircumflex	Ocircumflex
keycode	0x1D =	y		Y			ugrave		Ugrave
keycode	0x1E =	u		U			otilde		Otilde
keycode	0x1F =	i		I			eacute		Eacute
keycode	0x20 =	o		O			idiaeresis	Idiaeresis
keycode	0x21 =	p		P			eth		ETH
keycode	0x22 =	bracketleft	braceleft		Ucircumflex	ucircumflex
keycode	0x23 =	bracketright	braceright		Yacute		yacute
keycode	0x24 =	Return		Return			U2022		U2013
keycode	0x6B =	KP_Delete	Delete			U3009		U300B
keycode	0x67 =	End		End			U3015		U3011
keycode	0x69 =	Next		Next			U300D		U300F
keycode	0x4F =	KP_Home		KP_7			KP_Home		KP_7
keycode	0x50 =	KP_Up		KP_8			KP_Up		KP_8
keycode	0x51 =	KP_Prior	KP_9			KP_Prior	KP_9
keycode	0x56 =	KP_Add		XF86_Next_VMode		KP_Add		XF86_Next_VMode

keycode	0x42 =	Multi_key	Multi_key		Multi_key	Multi_key
keycode	0x26 =	a		A			aacute		Aacute
keycode	0x27 =	s		S			oacute		Oacute
keycode	0x28 =	d		D			adiaeresis	Adiaeresis
keycode	0x29 =	f		F			ae		AE
keycode	0x2A =	g		G			ccedilla	Ccedilla
keycode	0x2B =	h		H			egrave		Egrave
keycode	0x2C =	j		J			ecircumflex	Ecircumflex
keycode	0x2D =	k		K			ediaeresis	Ediaeresis
keycode	0x2E =	l		L			igrave		Igrave
keycode	0x2F =	semicolon	colon			guillemotright	masculine
keycode	0x30 =	apostrophe	quotedbl		section		cent
keycode	0x33 =	backslash	bar			Udiaeresis	udiaeresis
keycode	0x53 =	KP_Left		KP_4			KP_Left		KP_4
keycode	0x54 =	KP_Begin	KP_5			KP_Begin	KP_5
keycode	0x55 =	KP_Right	KP_6			KP_Right	KP_6

keycode	0x32 =	Shift_L		Shift_L			Shift_L		Shift_L
keycode	0x5E =	U2026		U20AC			U201E		U2122
keycode	0x34 =	z		Z			uacute		Uacute
keycode	0x35 =	x		X			oslash		Oslash
keycode	0x36 =	c		C			atilde		Atilde
keycode	0x37 =	v		V			odiaeresis	Odiaeresis
keycode	0x38 =	b		B			acircumflex	Acircumflex
keycode	0x39 =	n		N			icircumflex	Icircumflex
keycode	0x3A =	m		M			iacute		Iacute
keycode	0x3B =	comma		less			notsign		onequarter
keycode	0x3C =	period		greater			registered	threequarters
keycode	0x3D =	slash		question		macron		questiondown
keycode	0x3E =	Shift_R		Shift_R			Shift_R		Shift_R
keycode	0x62 =	Up		Up			U2191		U21D1
keycode	0x57 =	KP_End		KP_1			KP_End		KP_1
keycode	0x58 =	KP_Down		KP_2			KP_Down		KP_2
keycode	0x59 =	KP_Next		KP_3			KP_Next		KP_3
keycode	0x6C =	KP_Enter	Return			KP_Enter	Return

keycode	0x25 =	Control_L	Control_L		Control_L	Control_L
keycode	0x73 =	Meta_L		Meta_L			Meta_L		Meta_L
keycode	0x40 =	Alt_L		Alt_L			Alt_L		Alt_L
keycode	0x41 =	space		space			nobreakspace	U3000
keycode	0x71 =	Mode_switch	Mode_switch		Mode_switch	Mode_switch
keycode	0x74 =	Meta_R		Meta_R			Meta_R		Meta_R
keycode	0x75 =	Multi_key	Multi_key		Multi_key	Multi_key
keycode	0x6D =	Control_R	Control_R		Control_R	Control_R
keycode	0x64 =	Left		Left			U2190		U21D0
keycode	0x68 =	Down		Down			U2193		U21D3
keycode	0x66 =	Right		Right			U2192		U21D2
keycode	0x5A =	KP_Insert	KP_0			KP_Insert	KP_0
keycode	0x5B =	KP_Delete	KP_Decimal		KP_Delete	KP_Decimal
d186 1
a186 1
keycode	0x65 =
@


1.24.2.1.2.4
log
@• MirKBD Revision 4.01:
  - change ModeSwitch-‘-’ from U+00AD ­ (SOFT HYPHEN) to U+2010 ‐ (HYPHEN)
  - fix a bug in gnuwin and MAIN branch: keycode 0x5C was overwritten
• Update keyboard description files (kbd-*)
• Merge changes between 3.x and 4.01 into Linux keymap where possible
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.2.1.2.3 2016/06/04 02:47:48 tg Exp $
d3 1
a3 1
! Copyright © 2004, 2007, 2008, 2010, 2012, 2016, 2017
d21 1
a21 1
! MirKBD Revision 4.01 Meta on AltGr, English (Europe), for XFree86®
a70 1
! • ModeSwitch-HyphenMinus is U+2010 HYPHEN not U+00AD SOFT HYPHEN
d102 1
a102 1
keycode	0x14 =	minus		underscore		U2010		ssharp
d185 1
@


1.24.2.1.2.5
log
@• em dash is 2014 surrounded by 200A (not 2009)
• deprecation notice for mailfrom.php, replaced by hello-php-world
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.2.1.2.4 2017/07/23 22:32:42 tg Exp $
d26 1
a26 1
! most of which are in codepage 1252. An em dash is 「 — 」.
@


1.24.2.1.2.6
log
@same as in commitid 1005B6CF36E3932B560, plus assorted cleanup
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.24.2.1.2.5 2017/07/27 12:52:01 tg Exp $
d32 1
a32 1
! • The Win_M key generates Compose	(also for UCS/UTF-8)
@


1.23
log
@too many apps (e.g. qemu) need an Alt_L
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.22 2008/11/08 22:56:50 tg Exp $
d29 2
@


1.22
log
@this should not have been committed, back out ISO Level 3 Shift experiments
even tsi@@xf86 cannot help with (probably need ISO Level 5 Shift, which does
however not exist)
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.20 2008/09/01 06:17:55 tg Exp $
d3 2
a4 2
! Copyright © 2004, 2007, 2008
!	Thorsten “mirabilos” Glaser <tg@@mirbsd.de>
d45 1
a45 1
! • The IBM Thinkpad X40 Page_Left key is an alias for Mode_switch
d199 1
a199 1
keycode	0xEA =	Mode_switch	Mode_switch
@


1.21
log
@mass conversion 66h.42h.de → mirbsd.org
@
text
@d45 1
a45 1
! • The IBM Thinkpad X40 Page_Left key generates☁ ISO_Level3_Shift
d74 1
a74 1
! • ModeSwitch+{Ins,Del},{Home,End},Pg{Up,Dn} generate☁ fullwidth
a75 2
! • ISO Level 3 shifted keys generate their fullwidth equivalents
! • The ISO_Level3_Shift-<>| combination does prime, double prime
d78 13
a90 23
clear	Shift
clear	Lock
clear	Control
clear	Mod1
clear	Mod2
clear	Mod3
clear	Mod4
clear	Mod5
clear	Ctrl

keycode	0x09 =	grave		Escape			U00E0	U009B	UFF40	Escape
keycode	0x43 =	F1		XF86_Switch_VT_1	U263B	U250C	F1	XF86_Switch_VT_1
keycode	0x44 =	F2		XF86_Switch_VT_2	U263A	U2500	F2	XF86_Switch_VT_2
keycode	0x45 =	F3		XF86_Switch_VT_3	U2639	U2510	F3	XF86_Switch_VT_3
keycode	0x46 =	F4		XF86_Switch_VT_4	U1E9E	U2502	F4	XF86_Switch_VT_4
keycode	0x47 =	F5		XF86_Switch_VT_5	UFFFD	U2514	F5	XF86_Switch_VT_5
keycode	0x48 =	F6		XF86_Switch_VT_6	U2260	U2518	F6	XF86_Switch_VT_6
keycode	0x49 =	F7		XF86_Switch_VT_7	U2018	U251C	F7	XF86_Switch_VT_7
keycode	0x4A =	F8		XF86_Switch_VT_8	U2019	U2524	F8	XF86_Switch_VT_8
keycode	0x4B =	F9		XF86_Switch_VT_9	U0332	U253C	F9	XF86_Switch_VT_9
keycode	0x4C =	F10		XF86_Switch_VT_10	U0305	U252C	F10	XF86_Switch_VT_10
keycode	0x5F =	F11		XF86_Switch_VT_11	U2023	U2534	F11	XF86_Switch_VT_11
keycode	0x60 =	F12		XF86_Switch_VT_12	U2025	U2588	F12	XF86_Switch_VT_12
d95 17
a111 17
keycode	0x31 =	Escape		asciitilde	U009B		U00FE	Escape	UFF5E
keycode	0x0A =	1		exclam		U00B1		U00A1	UFF11	UFF01
keycode	0x0B =	2		at		U00B2		U00C0	UFF12	UFF20
keycode	0x0C =	3		numbersign	U00B3		U00A3	UFF13	UFF03
keycode	0x0D =	4		dollar		U00B4		U00A4	UFF14	UFF04
keycode	0x0E =	5		percent		U00B5		U00A5	UFF15	UFF05
keycode	0x0F =	6		asciicircum	U00B6		U00DE	UFF16	UFF3E
keycode	0x10 =	7		ampersand	U00B7		U00A6	UFF17	UFF06
keycode	0x11 =	8		asterisk	U00B8		U00AA	UFF18	UFF0A
keycode	0x12 =	9		parenleft	U00B9		U00A8	UFF19	UFF08
keycode	0x13 =	0		parenright	U00B0		U00A9	UFF10	UFF09
keycode	0x14 =	minus		underscore	U00AD		U00DF	UFF0D	UFF3F
keycode	0x15 =	equal		plus		U00BD		U00AB	UFF1D	UFF0B
keycode	0x16 =	BackSpace	Terminate_Server  U00FF		U0178	BackSpace  Terminate_Server
keycode	0x6A =	Insert		Insert		U3008		U300A	Insert	Insert
keycode	0x61 =	Home		Home		U3014		U3010	Home	Home
keycode	0x63 =	Prior		Prior		U300C		U300E	Prior	Prior
d117 17
a133 17
keycode	0x17 =	Tab		ISO_Left_Tab	U201C		U201D	Tab	ISO_Left_Tab
keycode	0x18 =	q		Q		U00F1		U00D1	UFF51	UFF31
keycode	0x19 =	w		W		U00F7		U00D7	UFF57	UFF37
keycode	0x1A =	e		E		U00E5		U00C5	UFF45	UFF25
keycode	0x1B =	r		R		U00F2		U00D2	UFF52	UFF32
keycode	0x1C =	t		T		U00F4		U00D4	UFF54	UFF34
keycode	0x1D =	y		Y		U00F9		U00D9	UFF59	UFF39
keycode	0x1E =	u		U		U00F5		U00D5	UFF55	UFF35
keycode	0x1F =	i		I		U00E9		U00C9	UFF49	UFF29
keycode	0x20 =	o		O		U00EF		U00CF	UFF4F	UFF2F
keycode	0x21 =	p		P		U00F0		U00D0	UFF50	UFF30
keycode	0x22 =	bracketleft	braceleft	U00DB		U00FB	UFF3B	UFF5B
keycode	0x23 =	bracketright	braceright	U00DD		U00FD	UFF3D	UFF5D
keycode	0x24 =	Return		Return		U2022		U2013	Return	Return
keycode	0x6B =	KP_Delete	Delete		U3009		U300B	KP_Delete  Delete
keycode	0x67 =	End		End		U3015		U3011	End	End
keycode	0x69 =	Next		Next		U300D		U300F	Next	Next
d139 13
a151 13
keycode	0x42 =	U2026		U20AC		U201E		U2122	U2032	U2033
keycode	0x26 =	a		A		U00E1		U00C1	UFF41	UFF21	UFF53 UFF33
keycode	0x27 =	s		S		U00F3		U00D3	UFF53	UFF33
keycode	0x28 =	d		D		U00E4		U00C4	UFF44	UFF24
keycode	0x29 =	f		F		U00E6		U00C6	UFF46	UFF26
keycode	0x2A =	g		G		U00E7		U00C7	UFF47	UFF27
keycode	0x2B =	h		H		U00E8		U00C8	UFF48	UFF28
keycode	0x2C =	j		J		U00EA		U00CA	UFF4A	UFF2A
keycode	0x2D =	k		K		U00EB		U00CB	UFF4B	UFF2B
keycode	0x2E =	l		L		U00EC		U00CC	UFF4C	UFF2C
keycode	0x2F =	semicolon	colon		U00BB		U00BA	UFF1B	UFF1A
keycode	0x30 =	apostrophe	quotedbl	U00A7		U00A2	UFF07	UFF02
keycode	0x33 =	backslash	bar		U00DC		U00FC	UFF3C	UFF5C
d158 10
a167 10
keycode	0x34 =	z		Z		U00FA		U00DA	UFF5A	UFF3A
keycode	0x35 =	x		X		U00F8		U00D8	UFF58	UFF38
keycode	0x36 =	c		C		U00E3		U00C3	UFF43	UFF23
keycode	0x37 =	v		V		U00F6		U00D6	UFF56	UFF36
keycode	0x38 =	b		B		U00E2		U00C2	UFF42	UFF22
keycode	0x39 =	n		N		U00EE		U00CE	UFF4E	UFF2E
keycode	0x3A =	m		M		U00ED		U00CD	UFF4D	UFF2D
keycode	0x3B =	comma		less		U00AC		U00BC	UFF0C	UFF1C
keycode	0x3C =	period		greater		U00AE		U00BE	UFF0E	UFF1E
keycode	0x3D =	slash		question	U00AF		U00BF	UFF0F	UFF1F
d169 1
a169 1
keycode	0x62 =	Up		Up		U2191		U21D1	Up	Up
d178 1
a178 1
keycode	0x41 =	space		space		U00A0		U00A0	U3000	U3000
d183 3
a185 3
keycode	0x64 =	Left		Left		U2190		U21D0	Left	Left
keycode	0x68 =	Down		Down		U2193		U21D3	Down	Down
keycode	0x66 =	Right		Right		U2192		U21D2	Right	Right
d199 12
a210 2
keycode	0xEA =	ISO_Level3_Shift
keycode	0xE9 =	Multi_key
a212 1
add	Lock	= Scroll_Lock
d217 1
a217 1
add	Mod4	= ISO_Level3_Shift
@


1.20
log
@fix numeric keypad 0 and .
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.19 2008/08/28 20:49:17 tg Exp $
d45 1
a45 1
! • The IBM Thinkpad X40 Page_Left key is an alias for Mode_switch
d74 1
a74 1
! • ModeSwitch + {Ins,Del}, {Home,End}, {PgUp,PgDn} generate☁ wide
d76 2
d80 23
a102 13
keycode	0x09 =	grave		Escape			U00E0	U009B
keycode	0x43 =	F1		XF86_Switch_VT_1	U263B	U250C
keycode	0x44 =	F2		XF86_Switch_VT_2	U263A	U2500
keycode	0x45 =	F3		XF86_Switch_VT_3	U2639	U2510
keycode	0x46 =	F4		XF86_Switch_VT_4	U1E9E	U2502
keycode	0x47 =	F5		XF86_Switch_VT_5	UFFFD	U2514
keycode	0x48 =	F6		XF86_Switch_VT_6	U2260	U2518
keycode	0x49 =	F7		XF86_Switch_VT_7	U2018	U251C
keycode	0x4A =	F8		XF86_Switch_VT_8	U2019	U2524
keycode	0x4B =	F9		XF86_Switch_VT_9	U0332	U253C
keycode	0x4C =	F10		XF86_Switch_VT_10	U0305	U252C
keycode	0x5F =	F11		XF86_Switch_VT_11	U2023	U2534
keycode	0x60 =	F12		XF86_Switch_VT_12	U2025	U2588
d107 17
a123 17
keycode	0x31 =	Escape		asciitilde	U009B		U00FE
keycode	0x0A =	1		exclam		U00B1		U00A1
keycode	0x0B =	2		at		U00B2		U00C0
keycode	0x0C =	3		numbersign	U00B3		U00A3
keycode	0x0D =	4		dollar		U00B4		U00A4
keycode	0x0E =	5		percent		U00B5		U00A5
keycode	0x0F =	6		asciicircum	U00B6		U00DE
keycode	0x10 =	7		ampersand	U00B7		U00A6
keycode	0x11 =	8		asterisk	U00B8		U00AA
keycode	0x12 =	9		parenleft	U00B9		U00A8
keycode	0x13 =	0		parenright	U00B0		U00A9
keycode	0x14 =	minus		underscore	U00AD		U00DF
keycode	0x15 =	equal		plus		U00BD		U00AB
keycode	0x16 =	BackSpace	Terminate_Server  U00FF		U0178
keycode	0x6A =	Insert		Insert		U3008		U300A
keycode	0x61 =	Home		Home		U3014		U3010
keycode	0x63 =	Prior		Prior		U300C		U300E
d129 17
a145 17
keycode	0x17 =	Tab		ISO_Left_Tab	U201C		U201D
keycode	0x18 =	q		Q		U00F1		U00D1
keycode	0x19 =	w		W		U00F7		U00D7
keycode	0x1A =	e		E		U00E5		U00C5
keycode	0x1B =	r		R		U00F2		U00D2
keycode	0x1C =	t		T		U00F4		U00D4
keycode	0x1D =	y		Y		U00F9		U00D9
keycode	0x1E =	u		U		U00F5		U00D5
keycode	0x1F =	i		I		U00E9		U00C9
keycode	0x20 =	o		O		U00EF		U00CF
keycode	0x21 =	p		P		U00F0		U00D0
keycode	0x22 =	bracketleft	braceleft	U00DB		U00FB
keycode	0x23 =	bracketright	braceright	U00DD		U00FD
keycode	0x24 =	Return		Return		U2022		U2013
keycode	0x6B =	KP_Delete	Delete		U3009		U300B
keycode	0x67 =	End		End		U3015		U3011
keycode	0x69 =	Next		Next		U300D		U300F
d151 13
a163 13
keycode	0x42 =	U2026		U20AC		U201E		U2122
keycode	0x26 =	a		A		U00E1		U00C1
keycode	0x27 =	s		S		U00F3		U00D3
keycode	0x28 =	d		D		U00E4		U00C4
keycode	0x29 =	f		F		U00E6		U00C6
keycode	0x2A =	g		G		U00E7		U00C7
keycode	0x2B =	h		H		U00E8		U00C8
keycode	0x2C =	j		J		U00EA		U00CA
keycode	0x2D =	k		K		U00EB		U00CB
keycode	0x2E =	l		L		U00EC		U00CC
keycode	0x2F =	semicolon	colon		U00BB		U00BA
keycode	0x30 =	apostrophe	quotedbl	U00A7		U00A2
keycode	0x33 =	backslash	bar		U00DC		U00FC
d170 10
a179 10
keycode	0x34 =	z		Z		U00FA		U00DA
keycode	0x35 =	x		X		U00F8		U00D8
keycode	0x36 =	c		C		U00E3		U00C3
keycode	0x37 =	v		V		U00F6		U00D6
keycode	0x38 =	b		B		U00E2		U00C2
keycode	0x39 =	n		N		U00EE		U00CE
keycode	0x3A =	m		M		U00ED		U00CD
keycode	0x3B =	comma		less		U00AC		U00BC
keycode	0x3C =	period		greater		U00AE		U00BE
keycode	0x3D =	slash		question	U00AF		U00BF
d181 1
a181 1
keycode	0x62 =	Up		Up		U2191		U21D1
d190 1
a190 1
keycode	0x41 =	space		space		U00A0		U00A0
d195 3
a197 3
keycode	0x64 =	Left		Left		U2190		U21D0
keycode	0x68 =	Down		Down		U2193		U21D3
keycode	0x66 =	Right		Right		U2192		U21D2
d211 2
a212 12
keycode	0xEA =	Mode_switch	Mode_switch
keycode	0xE9 =	Multi_key	Multi_key

clear	Shift
clear	Lock
clear	Control
clear	Mod1
clear	Mod2
clear	Mod3
clear	Mod4
clear	Mod5
clear	Ctrl
d215 1
d220 1
a220 1
add	Mod4	= Scroll_Lock
@


1.19
log
@switch Escape and ` (for the unshifted states, without or with Meta, but
not for the shifted states, where ~ and þ remain on the usual key, and
keycode 0x09 shifted continues to generate an Escape keysym)
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.18 2008/08/26 19:15:09 tg Exp $
d186 2
a187 2
keycode	0x5A =	KP_Insert
keycode	0x5B =	KP_Delete
@


1.18
log
@oops, got the order wrong
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.17 2008/08/26 19:11:20 tg Exp $
d47 1
d78 1
a78 1
keycode	0x09 =	Escape		Escape
d95 1
a95 1
keycode	0x31 =	grave		asciitilde	U00E0		U00FE
@


1.17
log
@IBM Thinkpad X40 has no Windows® keys, so use its Page_{Left,Right} keys
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.16 2008/05/03 01:09:31 tg Exp $
d198 2
a199 2
keycode	0xE9 =	Mode_switch	Mode_switch
keycode	0xEA =	Multi_key	Multi_key
@


1.16
log
@remove advertising clause for all of contrib/ except
‣ heartbeat server/client, for now
‣ stuff in jupp that’ll be regenerated before next release anyway
@
text
@d1 1
a1 1
! $MirOS: src/share/misc/licence.template,v 1.24 2008/04/22 11:43:31 tg Rel $
d45 2
d198 3
@


1.15
log
@I sometimes need japanese parens for debugging
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.14 2007/10/01 20:21:39 tg Stab $
a11 4
! Advertising materials mentioning features or use of this work must
! display the following acknowledgement:
!	This product includes material provided by Thorsten Glaser.
!
d19 1
a19 1
! of said person's immediate fault when using the work as intended.
@


1.14
log
@• got a better use for them: the Pascal interval (‥) and, for now, another
  form of bullet (for e.g. lists)
• also fix textual mishaps
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.13 2007/07/15 20:43:41 tg Exp $
d3 1
a3 1
! Copyright © 2004, 2007
d75 2
d110 3
a112 3
keycode	0x6A =	Insert
keycode	0x61 =	Home
keycode	0x63 =	Prior
d132 3
a134 3
keycode	0x6B =	KP_Delete	Delete
keycode	0x67 =	End
keycode	0x69 =	Next
@


1.13
log
@was die können kann ich auch!
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.12 2007/06/16 16:30:34 tg WIP $
d31 1
a31 1
! and all directly typable code points can be represented in cp1252.
d59 2
a60 2
! • The ModeSwitch-F11☁combination generates U+0333 ( ̳) c. low dbl
! • The ModeSwitch-F12☁combination generates U+033F ( ̿) c. dblover
d88 2
a89 2
keycode	0x5F =	F11		XF86_Switch_VT_11	U0333	U2534
keycode	0x60 =	F12		XF86_Switch_VT_12	U033F	U2588
@


1.12
log
@more stuff, some just because I have no idea
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.11 2007/06/16 15:41:06 tg WIP $
d73 2
d168 1
a168 1
keycode	0x62 =	Up
d182 3
a184 3
keycode	0x64 =	Left
keycode	0x68 =	Down
keycode	0x66 =	Right
@


1.11
log
@more keys
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.10 2007/06/15 21:38:59 tg Exp $
d57 4
d67 7
d82 6
a87 6
keycode	0x49 =	F7		XF86_Switch_VT_7	U2018
keycode	0x4A =	F8		XF86_Switch_VT_8	U2019
keycode	0x4B =	F9		XF86_Switch_VT_9
keycode	0x4C =	F10		XF86_Switch_VT_10
keycode	0x5F =	F11		XF86_Switch_VT_11
keycode	0x60 =	F12		XF86_Switch_VT_12
@


1.10
log
@my laptop has bright and dark smileys on the F1 and F2 keys, move them there
F3 then becomes the sad smiley, capital eszett wanders to F4 since F5 is, on
the VT420, the break key, which takes U+FFFD, and F6 gets the not equal to.
the shift keys F1…F6 get single-thin-line border drawing AltGr""s
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.9 2007/06/15 19:52:23 tg Exp $
d55 2
d71 2
a72 2
keycode	0x49 =	F7		XF86_Switch_VT_7
keycode	0x4A =	F8		XF86_Switch_VT_8
@


1.9
log
@Unicode resolution N3254 introduced a capital form of the ſz ligature,
with a case mapping of ẞ -> ß -> SS -> ss.

While many more chars were introduced anyway, this has specific signi-
ficance for us due to the DIN, so I felt free to add it here too, even
if I think it's stupid(ly implemented).

• 6x13: this looks like an uppercase form of the sz in my VGA-style font
• 9x18: this looks more like the Libertine font
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.8 2007/06/15 19:43:24 tg Exp $
d49 12
a60 2
! • The ModeSwitch-F1 combination generates U+FFFD (�) replacement
! • The ModeSwitch-F2 combination generates U+1E9E (ẞ) majuscle sz
d63 6
a68 6
keycode	0x43 =	F1		XF86_Switch_VT_1	UFFFD
keycode	0x44 =	F2		XF86_Switch_VT_2	U1E9E
keycode	0x45 =	F3		XF86_Switch_VT_3
keycode	0x46 =	F4		XF86_Switch_VT_4
keycode	0x47 =	F5		XF86_Switch_VT_5
keycode	0x48 =	F6		XF86_Switch_VT_6
@


1.8
log
@begin MirKBD 3-WIP
first change: ModeSwitch-{,Shift-}F1…F12 will be used (F11 and F12 rarely)
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.7 2007/03/30 23:23:25 tg Exp $
d49 2
a50 1
! • The ModeSwitch-F1 combination generates U+FFFD (�)
d54 1
a54 1
keycode	0x44 =	F2		XF86_Switch_VT_2
@


1.7
log
@Today I accidentally typed an “em dash” (—) and noted that it's the same
glyph in fixed-misc as is the “horizontal bar” (―), which I had added to
KBDmir2U as a kind of “box drawing character” pun¹, but to what I looked
the semantics up then. Turns out it's just a mere dash. D'oh.

Ok, the definition of KBDmir2U prescribes a dash here – but which one to
use? Should I use the “em dash” which is more widely supported, or maybe
the “en dash” which is even more commonly used? (The “space ndash space”
combination is actually heavily used in German typography instead of the
single “mdash” without spaces around it – and in fixed-misc, this indeed
does make sense.)

I'd wanted to have asked bsiegert@@ about his opinion, but his cell phone
wasn't answered. Then I noticed, while debugging ICQ charset (centericq,
from MirPorts, is correct; ciruZ' py-tICQ wasn't), I noticed that all of
the directly typable (no Compose) codepoints except that one are suppor-
ted in the windows-1252² charset… and the en dash is, the em dash isn't.

Not that that would've been influencing me though… but I remember having
typed U+2013 manually (using the jupp ‘`’ command) quite often recently;
so the change went in. This is still KBDmir2U (revision 2 stepping B) as
the layout spec hasn't changed (even though it was my intention to place
a block drawing character there, why only one, why not more…).

Okay. What's not in ISO-8859-1? Easy³: --> …€„™“”•–Ÿ <--

I took the opportunity to clean up some of the comments – even fixed the
build instructions – and regenerate the kbd-layout sample text file (the
japanese section still talks about Attic/dot.Xmodmap.us_jp,v though, but
that isn't too bad either, I just use Kana,v at the moment). Also, in NT
the Ctrl-Tab combo now yields tab (hooray for these who use GNU screen's
split function within e.g. PuTTY and can't let loose Ctrl quickly enough
when switching between them).

Hm. I originally intended to write more here, and more detailledly. But,
being back from a week full of $ork, I guess I've deserved my beer now ☺

¹) http://blogs.msdn.com/michkap/archive/2004/12/28/333168.aspx⁴
²) http://www.microsoft.com/globaldev/reference/sbcs/1252.mspx⁵
³) I do really like my keyboard layout…
⁴) Hi Mich, I like your blog and MSKLC. Be well!
⁵) this matches src/share/i18n/csmapper/CP/{CP1252%UCS,UCS%CP1252}.src,v
⁶) I do really like my text editor… (and my shell…)

PS: Don't expect from me that the .exe (self-extracting LHarc) contents,
    although they a̲r̲e̲⁶ from that source, can be easily rebuilt ☻

Update:	XTaran's http://fsinfo.cs.uni-sb.de/~abe/typing-8bit.html page
	now links to this keymap!
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.6 2007/03/04 10:20:12 tg Exp $
d25 1
a25 1
! MirKBD Revision 2⌈b⌋, English (Europe) with Meta key, for XFree86®
d48 2
d52 1
a52 1
keycode	0x43 =	F1		XF86_Switch_VT_1
@


1.6
log
@bring out the final revision of the MirKBD Rev. 2 (light, US, Meta) for
NT 4+ and X11 simultaneously; slightly derived from the WDK version and
about the same useful in both.

Differences:
• On WDK, Meta-Tab, Meta-Return and Meta-Shift-Return often
  don't work on the first try
• On WDK, Meta is only emulated by Mode_switch
• On WDK, Alt_L is Alt, Alt_R is Meta/Mode_switch,
  on X11, Alt_L is Meta, Alt_R is Alt, '<>|' is Mode_switch
• On X11, WinMenu is Compose, which is not available on WDK
• The “OEM_Symbol” key is '<>|' on WDK, CapsLk on X11
• CapsLk works on WDK, even with Meta, when both cases are
  placed on the same key (not the case with à, for instance)
• Control keys may be OS specific
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.5 2007/02/19 05:41:40 tg Exp $
d16 1
a16 1
! This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
d25 1
a25 1
! MirKBD (Light Layout) Revision 2, US with Meta key, for XFree86(R)
d30 2
d34 14
a47 9
! * The Alt_L key generates Meta_L	(adds 0x80 to latin1 code)
! * The Win_L key generates Alt_L	(e.g. for window managers)
! * The < > | key generates Mode_switch	(emulates Meta for X apps)
! * The Win_R key generates Meta_R
! * The Win_M key generates Compose	(also for Unicode compose)
! * The Backspace key, shifted and with Mode_switch, generates ‘Ÿ’
! * The CapsLock key generates Ellipsis, Euro, DE-DblQL, Trademark
! * The Tab key, with Mode_switch, generates EN-DblQL and EN-DblQR
! * The Return key, with Mode_switch, generates Bullet and HorizLn
d101 1
a101 1
keycode	0x24 =	Return		Return		U2022		U2015
@


1.5
log
@get me a big Ÿ (be symmetric)
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.4 2007/02/19 05:19:33 tg Exp $
d3 2
a4 2
! Copyright (c) 2004, 2006, 2007
!	Thorsten "mirabilos" Glaser <tg@@mirbsd.de>
d37 1
d40 1
d94 1
a94 1
keycode	0x24 =	Return		Return
@


1.4
log
@replace dot.Xmodmap.light dot.Xmodmap.us_jp dot.Xmodmap.xapps
with a single dot.Xmodmap - draft MirKBD Revision 2 (for X11)
Windows® version will come later…
@
text
@d1 1
a1 1
! $MirOS: src/share/misc/licence.template,v 1.20 2006/12/11 21:04:56 tg Rel $
d70 1
a70 1
keycode	0x16 =	BackSpace	Terminate_Server	U00FF	U00FF
@


1.3
log
@rename dot.Xmodmap to dot.Xmodmap.us_jp
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.2 2005/12/17 05:46:11 tg Exp $
d3 2
a4 2
! Copyright (c) 2003, 2004, 2005
!	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
d6 5
a10 6
! Licensee is hereby permitted to deal in this work without restric-
! tion, including unlimited rights to use, publicly perform, modify,
! merge, distribute, sell, give away or sublicence, provided all co-
! pyright notices above, these terms and the disclaimer are retained
! in all redistributions or reproduced in accompanying documentation
! or other materials provided with binary redistributions.
d12 2
a13 2
! All advertising materials mentioning features or use of this soft-
! ware must display the following acknowledgement:
d16 8
a23 8
! Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
! express, or implied, to the maximum extent permitted by applicable
! law, without malicious intent or gross negligence; in no event may
! licensor, an author or contributor be held liable for any indirect
! or other damage, or direct damage except proven a consequence of a
! direct error of said person and intended use of this work, loss or
! other issues arising in any way out of its use, even if advised of
! the possibility of such damage or existence of a nontrivial bug.
d25 1
a25 1
! .Xmodmap file with US- and JP-like layout for 105-key PC keyboards.
d27 133
a159 129
! Diversions from US layout:		with shift
!  Alt_L	Meta_L
!  WinMenu	Compose
!  WinKey_L	Alt_L
!  CapsLock	-> Japanese		Shift_Lock
!  < > |	EuroSign		trademark
!
! Diversions from JP layout:
!  CapsLock	-> US			Shift_Lock
!  < > |	Zenkaku_Hankaku		Kanji
!  \ |		kana_RO
!  [		kana_openingbracket
!  ]		kana_closingbracket
!  `		prolongedsound
!  tab		Muhenkan
!  Print	Hiragana_Katakana	Romaji
!
! Composing does not work, not even when using dead_voiced_sound
! and dead_semivoiced_sound instead of {,semi}voicedsound. Why?
!
! Not all (kata)kana characters are included on the japanese and
! I don't know of a reason for that either. This layout is based
! upon the one from xvkbd (from ports)...

keycode 0x09 =	Escape
keycode 0x43 =	F1		XF86_Switch_VT_1
keycode 0x44 =	F2		XF86_Switch_VT_2
keycode 0x45 =	F3		XF86_Switch_VT_3
keycode 0x46 =	F4		XF86_Switch_VT_4
keycode 0x47 =	F5		XF86_Switch_VT_5
keycode 0x48 =	F6		XF86_Switch_VT_6
keycode 0x49 =	F7		XF86_Switch_VT_7
keycode 0x4A =	F8		XF86_Switch_VT_8
keycode 0x4B =	F9		XF86_Switch_VT_9
keycode 0x4C =	F10		XF86_Switch_VT_10
keycode 0x5F =	F11		XF86_Switch_VT_11
keycode 0x60 =	F12		XF86_Switch_VT_12
keycode 0x6F =	Print		Sys_Req		Hiragana_Katakana	Romaji
keycode 0x4E =	Scroll_Lock	Pointer_Accelerate
keycode 0x6E =	Pause		Break
keycode 0x31 =	grave		asciitilde	prolongedsound
keycode 0x0A =	1		exclam		kana_NU
keycode 0x0B =	2		at		kana_FU
keycode 0x0C =	3		numbersign	kana_A		kana_a
keycode 0x0D =	4		dollar		kana_U		kana_u
keycode 0x0E =	5		percent		kana_E		kana_e
keycode 0x0F =	6		asciicircum	kana_O		kana_o
keycode 0x10 =	7		ampersand	kana_YA		kana_ya
keycode 0x11 =	8		asterisk	kana_YU		kana_yu
keycode 0x12 =	9		parenleft	kana_YO		kana_yo
keycode 0x13 =	0		parenright	kana_WA		kana_WO
keycode 0x14 =	minus		underscore	kana_HO
keycode 0x15 =	equal		plus		kana_HE
keycode 0x16 =	BackSpace	Terminate_Server
keycode 0x6A =	Insert
keycode 0x61 =	Home
keycode 0x63 =	Prior
keycode 0x4D =	Num_Lock	Pointer_EnableKeys
keycode 0x70 =	KP_Divide	XF86_Ungrab
keycode 0x3F =	KP_Multiply	XF86_ClearGrab
keycode 0x52 =	KP_Subtract	XF86_Prev_VMode
keycode 0x17 =	Tab		ISO_Left_Tab	Muhenkan
keycode 0x18 =	q		Q		kana_TA
keycode 0x19 =	w		W		kana_TE
keycode 0x1A =	e		E		kana_I		kana_i
keycode 0x1B =	r		R		kana_SU
keycode 0x1C =	t		T		kana_KA
keycode 0x1D =	y		Y		kana_N
keycode 0x1E =	u		U		kana_NA
keycode 0x1F =	i		I		kana_NI
keycode 0x20 =	o		O		kana_RA
keycode 0x21 =	p		P		kana_SE
keycode 0x22 =	bracketleft	braceleft	voicedsound	kana_openingbracket
keycode 0x23 =	bracketright	braceright	semivoicedsound	kana_closingbracket
keycode 0x24 =	Return
keycode 0x6B =	KP_Delete	Delete
keycode 0x67 =	End
keycode 0x69 =	Next
keycode 0x4F =	KP_Home		KP_7
keycode 0x50 =	KP_Up		KP_8
keycode 0x51 =	KP_Prior	KP_9
keycode 0x56 =	KP_Add		XF86_Next_VMode
keycode 0x42 =	ISO_Next_Group	Shift_Lock
keycode 0x26 =	a		A		kana_CHI
keycode 0x27 =	s		S		kana_TO
keycode 0x28 =	d		D		kana_SHI
keycode 0x29 =	f		F		kana_HA
keycode 0x2A =	g		G		kana_KI
keycode 0x2B =	h		H		kana_KU
keycode 0x2C =	j		J		kana_MA
keycode 0x2D =	k		K		kana_NO
keycode 0x2E =	l		L		kana_RI
keycode 0x2F =	semicolon	colon		kana_RE
keycode 0x30 =	apostrophe	quotedbl	kana_KE
keycode 0x33 =	backslash	bar		kana_RO
keycode 0x53 =	KP_Left		KP_4
keycode 0x54 =	KP_Begin	KP_5
keycode 0x55 =	KP_Right	KP_6
keycode 0x32 =	Shift_L
keycode 0x5E =	EuroSign	trademark	Zenkaku_Hankaku	Kanji
keycode 0x34 =	z		Z		kana_TSU	kana_tsu
keycode 0x35 =	x		X		kana_SA
keycode 0x36 =	c		C		kana_SO
keycode 0x37 =	v		V		kana_HI
keycode 0x38 =	b		B		kana_KO
keycode 0x39 =	n		N		kana_MI
keycode 0x3A =	m		M		kana_MO
keycode 0x3B =	comma		less		kana_NE		kana_comma
keycode 0x3C =	period		greater		kana_RU		kana_fullstop
keycode 0x3D =	slash		question	kana_ME		kana_conjunctive
keycode 0x3E =	Shift_R
keycode 0x62 =	Up
keycode 0x57 =	KP_End		KP_1
keycode 0x58 =	KP_Down		KP_2
keycode 0x59 =	KP_Next		KP_3
keycode 0x6C =	KP_Enter	Return
keycode 0x25 =	Control_L
keycode 0x73 =	Alt_L		Alt_L
keycode 0x40 =	Meta_L		Meta_L
keycode 0x41 =	space
keycode 0x71 =	Alt_R		Alt_R
keycode 0x74 =	Meta_R		Meta_R
keycode 0x75 =	Multi_key
keycode 0x6D =	Control_R
keycode 0x64 =	Left
keycode 0x68 =	Down
keycode 0x66 =	Right
keycode 0x5A =	KP_Insert	KP_0
keycode 0x5B =	KP_Delete	KP_Decimal
d169 1
a171 1
add	Lock	= ISO_Next_Group
d175 3
a177 2
add	Mod4	= Meta_L	Meta_R
add	Mod5	= Scroll_Lock
@


1.2
log
@big fat licence update (I left some which are bsiegert@@'s alone though)
also, remove licence boilerplate from some .h files who don't deserve it
and remove and add some advertising clauses because I say so
@
text
@d1 1
a1 1
! $MirOS: contrib/samples/dot.Xmodmap,v 1.1.7.1 2005/02/05 01:59:40 tg Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
! $MirOS$
d17 8
a24 7
! Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
! any kind, expressed or implied, to the maximum extent permitted by
! applicable law, but with the warranty of being written without ma-
! licious intent or gross negligence; in no event shall licensor, an
! author or contributor be held liable for any damage, direct, indi-
! rect or other, however caused, arising in any way out of the usage
! of this work, even if advised of the possibility of such damage.
@


1.1.7.1
log
@A historically grown collection of sample and contributed files
@
text
@@
