head	1.16;
access;
symbols;
locks; strict;
comment	@# @;


1.16
date	2017.05.28.22.05.26;	author tg;	state Exp;
branches;
next	1.15;
commitid	100592B49B56AB6E888;

1.15
date	2016.12.22.23.40.05;	author tg;	state Exp;
branches;
next	1.14;
commitid	100585C64593D976741;

1.14
date	2014.11.16.12.16.26;	author tg;	state Exp;
branches;
next	1.13;
commitid	100546895A24DE6792D;

1.13
date	2013.11.30.13.45.19;	author tg;	state Exp;
branches;
next	1.12;
commitid	1005299EBBC46543D75;

1.12
date	2013.01.14.22.16.42;	author tg;	state Exp;
branches;
next	1.11;
commitid	10050F483E266E5D854;

1.11
date	2012.12.20.13.41.38;	author tg;	state Exp;
branches;
next	1.10;
commitid	10050D315AA1F38EA38;

1.10
date	2012.12.16.00.26.05;	author tg;	state Exp;
branches;
next	1.9;
commitid	10050CD15355A4EDC33;

1.9
date	2012.12.02.18.02.34;	author tg;	state Exp;
branches;
next	1.8;
commitid	10050BB97D279A5F2D0;

1.8
date	2012.11.28.20.47.58;	author tg;	state Exp;
branches;
next	1.7;
commitid	10050B6788975B9A636;

1.7
date	2012.11.25.21.13.16;	author tg;	state Exp;
branches;
next	1.6;
commitid	10050B289EC50262712;

1.6
date	2011.11.11.20.24.02;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004EBD847A2C29B8FA;

1.5
date	2011.06.25.14.28.31;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004E05F0A74466841C;

1.4
date	2011.06.23.20.23.32;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004E03A03D2811054C;

1.3
date	2011.05.25.17.40.51;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004DDD3F3B050695A9;

1.2
date	2011.04.27.17.42.35;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004DB855A23F8E4D47;

1.1
date	2011.02.18.18.52.01;	author tg;	state Exp;
branches;
next	;
commitid	1004D5EBFE153AE8568;


desc
@@


1.16
log
@colons are no longer allowed in upstream versions (Closes: #792853)
@
text
@#!/bin/mksh
rcsid='$MirOS: contrib/hosted/tg/deb/quinn-ls.sh,v 1.15 2016/12/22 23:40:05 tg Exp $'
#-
# Copyright © 2011, 2012, 2013, 2016, 2017
#	Thorsten Glaser <tg@@debian.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un‐
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person’s immediate fault when using the work as intended.

gather=cwd fromfile=
mydir=$(realpath "$0/..")
PATH="$mydir:$mydir/..:$PATH" . assockit.ksh

while getopts "L:l" ch; do
	case $ch {
	(L)	gather=installed fromfile=$OPTARG ;;
	(l)	gather=installed fromfile= ;;
	(*)	exit 1 ;;
	}
done
shift $((OPTIND - 1))

# Debian Policy 3.9.8.0, §5.6.1
function isdebpkg {
	[[ $1 = [a-z0-9]+([a-z0-9+.-]) ]]
}

# Debian Policy 4.0.0.0, §5.6.12; also, deb-version(5)
function isdebver {
	local epochglob uvglob dvglob

	# strict (must start with a digit)
	#uvglob='[0-9]*'
	# loose (should, but it's ok if not)
	uvglob='+'

	uvglob=$uvglob'([A-Za-z0-9.+~'

	# colon is no longer allowed even if we have an epoch
	if [[ $1 = +([0-9]):* ]]; then
		epochglob='+([0-9])'\':\'
	fi

	# hyphen is allowed if we have a debian revision
	if [[ $1 = *'-'+([A-Za-z0-9+.~]) ]]; then
		dvglob=\'-\''+([A-Za-z0-9+.~])'
		uvglob=$uvglob'-'
	fi

	uvglob=$uvglob'])'

	eval [[ \$1 = $epochglob$uvglob$dvglob ]]
}

# packages to never ask rmadison for
asso_setv 1 nomadison arngc
asso_setv 1 nomadison atari-bootstrap
asso_setv 1 nomadison atari-fdisk
asso_setv 1 nomadison ca-bundle
asso_setv 1 nomadison defoma
asso_setv 1 nomadison evolvis-anonsvnsh
asso_setv 1 nomadison evolvis-meta
asso_setv 1 nomadison m68k-gcc-defaults
asso_setv 1 nomadison m68k-vme-tftplilo
asso_setv 1 nomadison m68kboot
asso_setv 1 nomadison mircpio
asso_setv 1 nomadison mirhost
asso_setv 1 nomadison mirmake
asso_setv 1 nomadison mirsirc
asso_setv 1 nomadison pbuilder-satisfydepends-dummy
asso_setv 1 nomadison sbuild-build-depends-core-dummy
asso_setv 1 nomadison ssfe
asso_setv 1 nomadison vmelilo
asso_setv 1 nomadison vmelilo-installer
asso_setv 1 nomadison wtf
asso_setv 1 nomadison wtf-debian-keyring
asso_setv 1 nomadison xfree86

i=0
function do_gather {
	if ! isdebpkg "$Source"; then
		print -ru2 "skipping invalid Source '$Source', file $name"
		return 2
	fi
	if ! isdebver "$Version"; then
		print -ru2 "skipping invalid Version '$Version', file $name"
		return 2
	fi
	lver=$(asso_getv pkgs "$Source" lver)
	if [[ -z $lver ]]; then
		print -ru2 "local $Source $Version"
		asso_sets "$Version" pkgs "$Source" lver
		return 0
	fi
	lver=$(asso_getv pkgs "$Source" lver)
	for x in $lver; do
		# skip dups (from .changes = .dsc probably) silently
		[[ $x = "$Version" ]] && return 1
	done
	# put the newest local version leftmost
	set -A xa -- $lver
	if dpkg --compare-versions "$Version" gt "${xa[0]}"; then
		print -ru2 "newer $Source $Version"
		lver="$Version $lver"
	else
		print -ru2 "older $Source $Version"
		lver="$lver $Version"
	fi
	asso_sets "$lver" pkgs "$Source" lver
	return 0
}

if [[ $gather = cwd ]]; then
	find . -name \*.changes -o -name \*.dsc |&
	while IFS= read -pr name; do
		Source=
		Version=
		eval $(sed -n \
		    -e '/^\(Source\): \([^ ]*\)\( .*\)*$/s//\1='\''\2'\''/p' \
		    -e '/^\(Version\): \([^ ]*\)$/s//\1='\''\2'\''/p' \
		    "$name")
		do_gather
	done
elif [[ $gather = installed ]]; then
	if [[ -n $fromfile ]]; then
		# e.g. from running the following command:
		# chroot --userspec=65534:65534 /var/cache/pbuilder/build/cow.27937 \
		#     /usr/bin/dpkg-query -Wf '${Package} ${Version} ${Source} ${Package}\n' \
		#     >thefile
		if [[ ! -s $fromfile ]]; then
			print -u2 "Cannot read $fromfile."
			exit 1
		fi
		cat "$fromfile"
	else
		dpkg-query -Wf '${Package} ${Version} ${Source} ${Package}\n'
	fi |&
	while read -p name Version Source x rest; do
		if [[ $Source = *'('*')' ]]; then
			# this is not customary…
			rest=${Source##*'('}
			rest=${rest%')'}
			isdebver "$rest" && Version=$rest
		elif [[ $x = '('*')' ]]; then
			# Source:Version ≠ Version
			x=${x#'('}
			x=${x%')'}
			isdebver "$x" && Version=$x
		fi
		do_gather
	done
else
	exit 1
fi

print -u2 '\nrunning rmadison…'
asso_loadk pkgs
i=${#asso_y[*]}
while (( i-- )); do
	asso_isset nomadison "${asso_y[i]}" && unset asso_y[i]
done
rmadison -s sid "${asso_y[@@]}" |&
while read -pr pkg pipe vsn pipe sid pipe arches; do
	#print -u2 "D: pkg<$pkg> vsn<$vsn> sid<$sid> arches<$arches>"
	arches=${arches//,/ }
	[[ " $arches " = *' source '* ]] || continue
	if ! asso_isset pkgs "$pkg" lver; then
		print -ru2 "bogus $pkg $vsn ignored"
		continue
	fi
	x=$(asso_getv pkgs "$pkg" uver)
	if [[ -z $x ]]; then
		print -ru2 "found $pkg $vsn"
		asso_sets "$vsn" pkgs "$pkg" uver
	elif [[ $x = "$vsn" ]]; then
		print -ru2 "equal $pkg $vsn ignored"
	elif dpkg --compare-versions "$x" lt "$vsn"; then
		print -ru2 "newer $pkg $vsn (dropping $x)"
		asso_sets "$vsn" pkgs "$pkg" uver
	else
		print -ru2 "older $pkg $vsn ignored"
	fi
done

print -u2 '\nreading override files [bad bld ign]…'
# bad: mark RIGHT versions lower or equal as "bad"
# bld: mark RIGHT version equal as "building"
# ign: mark LEFT version equal as "ignored" and ignore not-in-upstream
for type in bad bld ign; do
	[[ -s $mydir/quinn-ls.$type ]] || continue
	while read pkg vsn; do
		[[ $pkg = '#'* ]] && continue
		if [[ $pkg = *_* && -z $vsn ]]; then
			# buildd syntax
			vsn=${pkg#*_}
			pkg=${pkg%%_*}
		fi
		if ! isdebpkg "$pkg"; then
			print -ru2 "skipping invalid package '$pkg'," \
			    override $type
			continue
		fi
		if ! isdebver "$vsn"; then
			print -ru2 "skipping invalid version '$vsn'," \
			     override $type
			continue
		fi
		print -ru2 "o:$type $pkg $vsn"
		asso_sets "$vsn" over "$type" "$pkg"
	done <$mydir/quinn-ls.$type
done

c0=$'\033[0m'
c1=$'\033[1;31m'
c2=$'\033[1;32m'
c3=$'\033[1;33m'
c4=$'\033[1;34m'
c5=$'\033[1;35m'
c6=$'\033[1;36m'
print -ru2 "$c0"
print -ru2

asso_loadk pkgs
for pkg in "${asso_y[@@]}"; do
	lvs=$(asso_getv pkgs "$pkg" lver)
	lv=${lvs%% *}
	uv=$(asso_getv pkgs "$pkg" uver)

	if [[ -z $uv ]]; then
		uv=0~RM
		lc=$c1
		uc=$c1
	elif [[ $lv = "$uv"?('+b'+([0-9])) ]]; then
		lc=$c2
		uc=$c2
	elif dpkg --compare-versions "$lv" lt "$uv"; then
		lc=$c1
		uc=$c3
	else
		lc=$c3
		uc=$c4
	fi

	over_bad=$(asso_getv over bad "$pkg")
	over_bld=$(asso_getv over bld "$pkg")
	over_ign=$(asso_getv over ign "$pkg")
	if [[ -n $over_ign && $lv = "$over_ign" ]]; then
		lc=$c6
		[[ $uv = '0~RM' ]] && uc=$c6
	fi
	[[ -n $over_bad ]] && dpkg --compare-versions "$uv" le "$over_bad" && \
	    uc=$c5
	[[ -n $over_bld && $uv = "$over_bld" ]] && uc=$c6

	print -r -- "$c0$pkg $lc$lv$c0 $uc$uv$c0"
	[[ $lvs = $lv ]] && continue
	for lv in ${lvs#* }; do
		[[ $lv = "$uv"?('+b'+([0-9])) ]] && continue
		lc=$c4
		[[ -n $over_ign && $lv = "$over_ign" ]] && lc=$c6
		print -r -- "$c0$pkg $lc$lv$c0 -"
	done
done | sort | column -t
@


1.15
log
@update; confirm versions, schema, loose parsing as SHOULD; easier to read
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/quinn-ls.sh,v 1.13 2013/11/30 13:45:19 tg Exp $'
d4 1
a4 1
# Copyright © 2011, 2012, 2013, 2016
d40 1
a40 1
# Debian Policy 3.9.8.0, §5.6.12; also, deb-version(5)
d51 1
a51 1
	# colon is allowed if we have an epoch
a53 1
		uvglob=$uvglob':'
@


1.14
log
@mydir=$(realpath "$0/..") # mksh is cool like that, no dirname needed
@
text
@d4 1
a4 1
# Copyright © 2011, 2012, 2013
d35 1
a35 1
# Debian Policy 3.9.2.0, §5.6.1
d40 1
a40 1
# Debian Policy 3.9.2.0, §5.6.12
d52 2
a53 2
	if [[ $1 = +([0-9])':'* ]]; then
		epochglob='+([0-9])'\'':'\'
@


1.13
log
@$(dirname "$(realpath "$0")") allows users to symlink-install scripts
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/quinn-ls.sh,v 1.12 2013/01/14 22:16:42 tg Exp $'
d23 1
a23 1
mydir=$(dirname "$(realpath "$0")")
@


1.12
log
@finally, allow buildd syntax in override files
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/quinn-ls.sh,v 1.11 2012/12/20 13:41:38 tg Exp $'
d23 1
a23 1
mydir=$(realpath "$(dirname "$0")")
@


1.11
log
@sbuild/buildd uses a different pseudo package name
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/quinn-ls.sh,v 1.10 2012/12/16 00:26:05 tg Exp $'
d4 1
a4 1
# Copyright © 2011, 2012
d206 5
@


1.10
log
@it stands to believe we won’t upload Evolvis to Debian
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/quinn-ls.sh,v 1.9 2012/12/02 18:02:34 tg Exp $'
d84 1
@


1.9
log
@also skip pbuilder-satisfydepends-dummy
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/quinn-ls.sh,v 1.8 2012/11/28 20:47:58 tg Exp $'
d74 2
@


1.8
log
@allow for remotely gathered package lists, even with a cowbuilder example
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/quinn-ls.sh,v 1.7 2012/11/25 21:13:16 tg Exp $'
d81 1
@


1.7
log
@add a list of packages we shouldn’t ask rmadison for

mostly old (xfree86, defoma), dpo-local or wtf packages
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/quinn-ls.sh,v 1.6 2011/11/11 20:24:02 tg Exp $'
d22 1
a22 1
gather=cwd
d26 1
a26 1
while getopts "l" ch; do
d28 2
a29 1
	(l)	gather=installed ;;
d134 13
a146 1
	dpkg-query -Wf '${Package} ${Version} ${Source} ${Package}\n' |&
@


1.6
log
@accept over_ign for not-latest version
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/quinn-ls.sh,v 1.5 2011/06/25 14:28:31 tg Exp $'
d4 1
a4 1
# Copyright © 2011
d67 20
d154 4
@


1.5
log
@allow comments in data files
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/quinn-ls.sh,v 1.4 2011/06/23 20:23:32 tg Exp $'
d226 3
a228 1
		print -r -- "$c0$pkg $c4$lv$c0 -"
@


1.4
log
@convert to asso-kit, wfm but BETA
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/quinn-ls.sh,v 1.3 2011/05/25 17:40:51 tg Exp $'
d164 1
@


1.3
log
@add override files (oh, how I wish for associative arrays now…)
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/quinn-ls.sh,v 1.2 2011/04/27 17:42:35 tg Exp $'
d24 1
a66 3
set -A pkgs
set -A lver
set -A uver
d77 2
a78 5
	j=-1
	while (( ++j < i )); do
		[[ ${pkgs[j]} = "$Source" ]] && break
	done
	if (( j == i )); then
d80 1
a80 2
		pkgs[i]=$Source
		lver[i++]=$Version
d83 2
a84 1
	for x in ${lver[j]}; do
d89 1
a89 1
	set -A xa -- ${lver[j]}
d92 1
a92 1
		lver[j]="$Version ${lver[j]}"
d95 1
a95 1
		lver[j]="${lver[j]} $Version"
d97 1
d133 2
a134 1
rmadison -s sid "${pkgs[@@]}" |&
d139 1
a139 5
	j=-1
	while (( ++j < i )); do
		[[ ${pkgs[j]} = "$pkg" ]] && break
	done
	if (( j == i )); then
d143 1
a143 1
	x=${uver[j]}
d146 1
a146 1
		uver[j]=$vsn
d151 1
a151 1
		uver[j]=$vsn
d175 1
a175 4
		epkg=${pkg//'+'/_p}
		epkg=${epkg//'.'/_d}
		epkg=${epkg//'-'/_u}
		eval over_${type}_${epkg}=\$vsn
d189 3
a191 4
j=-1
while (( ++j < i )); do
	pkg=${pkgs[j]}
	lvs=${lver[j]}
d193 1
a193 1
	uv=${uver[j]}
d210 3
a212 6
	epkg=${pkg//'+'/_p}
	epkg=${epkg//'.'/_d}
	epkg=${epkg//'-'/_u}
	for type in bad bld ign; do
		eval over_$type=\$over_${type}_${epkg}
	done
@


1.2
log
@we now can check not just in $PWD but also installed packages’ sources
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/quinn-ls.sh,v 1.1 2011/02/18 18:52:01 tg Exp $'
d23 1
d164 25
d194 2
d220 15
@


1.1
log
@helper script to see whether my repo is up to date
@
text
@d2 1
a2 1
rcsid='$MirOS$'
d4 1
a4 1
# Copyright (c) 2011
d9 1
a9 1
# is granted to deal in this work without restriction, including un-
d13 1
a13 1
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
d20 44
a63 1
# of said person's immediate fault when using the work as intended.
a64 1
find . -name \*.changes -o -name \*.dsc |&
d69 8
a76 10
while IFS= read -pr name; do
	Source=
	Version=
	eval $(sed -n \
	    -e '/^\(Source\): \([^ ]*\)\( .*\)*$/s//\1='\''\2'\''/p' \
	    -e '/^\(Version\): \([^ ]*\)$/s//\1='\''\2'\''/p' \
	    "$name")
	if [[ -z $Source || -z $Version ]]; then
		print -ru2 "skipping invalid file $name"
		continue
d83 1
a83 1
		print -u2 "local $Source $Version"
d86 1
a86 1
		continue
d90 1
a90 1
		[[ $x = "$Version" ]] && continue 2
d95 1
a95 1
		print -u2 "newer $Source $Version"
d98 1
a98 1
		print -u2 "older $Source $Version"
d101 33
a133 1
done
d135 1
a135 1
print -u2 '\nrunning rmadison...'
d146 1
a146 1
		print -u2 "bogus $pkg $vsn ignored"
d151 1
a151 1
		print -u2 "found $pkg $vsn"
d154 1
a154 1
		print -u2 "equal $pkg $vsn ignored"
d156 1
a156 1
		print -u2 "newer $pkg $vsn (dropping $x)"
d159 1
a159 1
		print -u2 "older $pkg $vsn ignored"
d169 1
a169 1
print -u2
@

