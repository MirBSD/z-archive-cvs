head	1.77;
access;
symbols;
locks; strict;
comment	@# @;


1.77
date	2019.05.18.18.39.07;	author tg;	state Exp;
branches;
next	1.76;
commitid	1005CE0515E3AEFC57D;

1.76
date	2017.05.06.22.26.18;	author tg;	state Exp;
branches;
next	1.75;
commitid	100590E4DA011C9FF41;

1.75
date	2017.03.08.16.57.03;	author tg;	state Exp;
branches;
next	1.74;
commitid	10058C037EF1F2433E6;

1.74
date	2016.11.05.16.45.56;	author tg;	state Exp;
branches;
next	1.73;
commitid	100581E0CD304CD24C2;

1.73
date	2016.10.08.19.08.23;	author tg;	state Exp;
branches;
next	1.72;
commitid	10057F9443F029ED836;

1.72
date	2016.01.02.20.27.23;	author tg;	state Exp;
branches;
next	1.71;
commitid	100568832BA43395D90;

1.71
date	2015.11.27.08.48.50;	author tg;	state Exp;
branches;
next	1.70;
commitid	100565818FD39FF73DD;

1.70
date	2015.04.28.08.44.58;	author tg;	state Exp;
branches;
next	1.69;
commitid	100553F488C2FB4AB04;

1.69
date	2014.12.20.14.12.15;	author tg;	state Exp;
branches;
next	1.68;
commitid	100549583B96496A8D8;

1.68
date	2014.12.15.13.11.39;	author tg;	state Exp;
branches;
next	1.67;
commitid	100548EDE176F402B86;

1.67
date	2014.12.15.13.07.34;	author tg;	state Exp;
branches;
next	1.66;
commitid	100548EDD250EF0FEE5;

1.66
date	2014.12.15.12.23.55;	author tg;	state Exp;
branches;
next	1.65;
commitid	100548ED2F13E84A4D1;

1.65
date	2014.12.15.12.20.47;	author tg;	state Exp;
branches;
next	1.64;
commitid	100548ED22954CBD1EF;

1.64
date	2014.12.15.12.01.12;	author tg;	state Exp;
branches;
next	1.63;
commitid	100548ECD8C244C3C19;

1.63
date	2014.12.14.21.08.26;	author tg;	state Exp;
branches;
next	1.62;
commitid	100548DFC5E4CEE475E;

1.62
date	2014.12.14.18.33.06;	author tg;	state Exp;
branches;
next	1.61;
commitid	100548DD75934DB579A;

1.61
date	2014.05.23.09.44.30;	author tg;	state Exp;
branches;
next	1.60;
commitid	100537F188341DFDA22;

1.60
date	2013.11.14.15.07.45;	author tg;	state Exp;
branches;
next	1.59;
commitid	1005284E74D40E4F358;

1.59
date	2013.09.10.17.55.15;	author tg;	state Exp;
branches;
next	1.58;
commitid	100522F5D17760477CD;

1.58
date	2013.03.18.16.55.37;	author tg;	state Exp;
branches;
next	1.57;
commitid	100514746EF712FEC07;

1.57
date	2013.02.16.17.27.28;	author tg;	state Exp;
branches;
next	1.56;
commitid	100511FC19472810E96;

1.56
date	2012.08.02.21.01.39;	author tg;	state Exp;
branches;
next	1.55;
commitid	100501AEABC4D09A6FF;

1.55
date	2012.07.17.13.11.50;	author tg;	state Exp;
branches;
next	1.54;
commitid	100500564AF0EFAC303;

1.54
date	2012.07.15.11.16.42;	author tg;	state Exp;
branches;
next	1.53;
commitid	1005002A6AB47B65FA0;

1.53
date	2011.12.28.00.45.47;	author tg;	state Exp;
branches;
next	1.52;
commitid	1004EFA66D221A64D2F;

1.52
date	2011.11.11.17.38.33;	author tg;	state Exp;
branches;
next	1.51;
commitid	1004EBD5DB128E462BD;

1.51
date	2011.05.13.20.53.29;	author tg;	state Exp;
branches;
next	1.50;
commitid	1004DCD9A6139F3FBC9;

1.50
date	2011.05.13.20.46.59;	author tg;	state Exp;
branches;
next	1.49;
commitid	1004DCD98C7381D5E18;

1.49
date	2011.05.13.20.41.36;	author tg;	state Exp;
branches;
next	1.48;
commitid	1004DCD97746E73A370;

1.48
date	2011.05.13.13.30.31;	author tg;	state Exp;
branches;
next	1.47;
commitid	1004DCD327F6E82CAB3;

1.47
date	2011.04.27.12.59.06;	author tg;	state Exp;
branches;
next	1.46;
commitid	1004DB812ED0FA5BB01;

1.46
date	2011.03.04.14.24.32;	author tg;	state Exp;
branches;
next	1.45;
commitid	1004D70F62F74F262B5;

1.45
date	2011.03.04.12.35.23;	author tg;	state Exp;
branches;
next	1.44;
commitid	1004D70DC9C6C09A81B;

1.44
date	2011.03.01.19.34.39;	author tg;	state Exp;
branches;
next	1.43;
commitid	1004D6D4A606D485976;

1.43
date	2010.12.04.19.35.03;	author tg;	state Exp;
branches;
next	1.42;
commitid	1004CFA97F24FEB5218;

1.42
date	2010.12.04.19.31.12;	author tg;	state Exp;
branches;
next	1.41;
commitid	1004CFA97094A3EB11F;

1.41
date	2010.12.04.19.30.21;	author tg;	state Exp;
branches;
next	1.40;
commitid	1004CFA96DA3782069E;

1.40
date	2010.11.22.23.35.47;	author tg;	state Exp;
branches;
next	1.39;
commitid	1004CEAFE6541BA9589;

1.39
date	2010.11.17.19.11.41;	author tg;	state Exp;
branches;
next	1.38;
commitid	1004CE428FE613B3EFC;

1.38
date	2010.11.17.19.08.38;	author tg;	state Exp;
branches;
next	1.37;
commitid	1004CE427F559A4A301;

1.37
date	2010.11.06.15.15.00;	author tg;	state Exp;
branches;
next	1.36;
commitid	1004CD571010BDD4558;

1.36
date	2010.10.24.00.02.09;	author tg;	state Exp;
branches;
next	1.35;
commitid	1004CC3776E726F8C34;

1.35
date	2010.04.17.18.04.11;	author tg;	state Exp;
branches;
next	1.34;
commitid	1004BC9F82507D288BE;

1.34
date	2010.04.17.13.56.19;	author tg;	state Exp;
branches;
next	1.33;
commitid	1004BC9BDE836BB80F9;

1.33
date	2010.04.13.19.41.39;	author tg;	state Exp;
branches;
next	1.32;
commitid	1004BC4C8FC573B94B4;

1.32
date	2010.04.13.08.12.17;	author tg;	state Exp;
branches;
next	1.31;
commitid	1004BC4276D47460428;

1.31
date	2010.04.10.20.38.26;	author tg;	state Exp;
branches;
next	1.30;
commitid	1004BC0E1D1752EFA0D;

1.30
date	2010.03.25.14.38.09;	author tg;	state Exp;
branches;
next	1.29;
commitid	1004BAB756224F2CABB;

1.29
date	2010.03.25.14.31.50;	author tg;	state Exp;
branches;
next	1.28;
commitid	1004BAB739E0057B92A;

1.28
date	2010.03.25.14.25.19;	author tg;	state Exp;
branches;
next	1.27;
commitid	1004BAB725F43C01185;

1.27
date	2010.03.25.13.38.20;	author tg;	state Exp;
branches;
next	1.26;
commitid	1004BAB675C531573E9;

1.26
date	2010.02.25.10.41.41;	author tg;	state Exp;
branches;
next	1.25;
commitid	1004B8653F33C2D34DF;

1.25
date	2009.10.03.18.35.57;	author tg;	state Exp;
branches;
next	1.24;
commitid	1004AC7999415503FA3;

1.24
date	2009.05.27.22.42.31;	author tg;	state Exp;
branches;
next	1.23;
commitid	1004A1DC1E51EDA41B2;

1.23
date	2009.04.30.22.41.01;	author tg;	state Exp;
branches;
next	1.22;
commitid	10049FA29137BFD398B;

1.22
date	2009.04.30.22.36.37;	author tg;	state Exp;
branches;
next	1.21;
commitid	10049FA280A576A1FB9;

1.21
date	2009.04.30.22.30.30;	author tg;	state Exp;
branches;
next	1.20;
commitid	10049FA2695632861D9;

1.20
date	2009.04.30.22.14.01;	author tg;	state Exp;
branches;
next	1.19;
commitid	10049FA22BD4B58F81A;

1.19
date	2009.04.30.22.08.39;	author tg;	state Exp;
branches;
next	1.18;
commitid	10049FA216B64F3A988;

1.18
date	2009.03.24.15.41.28;	author tg;	state Exp;
branches;
next	1.17;
commitid	10049C8FF39598036E5;

1.17
date	2009.03.24.15.40.40;	author tg;	state Exp;
branches;
next	1.16;
commitid	10049C8FF070CD381E9;

1.16
date	2009.03.24.14.41.41;	author tg;	state Exp;
branches;
next	1.15;
commitid	10049C8F1366DAD7ED7;

1.15
date	2009.03.24.08.19.49;	author tg;	state Exp;
branches;
next	1.14;
commitid	10049C897B86E1C4AE8;

1.14
date	2009.03.23.16.29.04;	author tg;	state Exp;
branches;
next	1.12;
commitid	10049C7B8DC52EC11C1;

1.12
date	2009.03.23.16.27.22;	author tg;	state Exp;
branches;
next	1.11;
commitid	10049C7B86A31A82D07;

1.11
date	2009.03.23.16.00.17;	author tg;	state Exp;
branches;
next	1.10;
commitid	10049C7B2211975FC2B;

1.10
date	2009.03.23.15.58.45;	author tg;	state Exp;
branches;
next	1.9;
commitid	10049C7B1C328E532CD;

1.9
date	2009.03.23.15.58.02;	author tg;	state Exp;
branches;
next	1.8;
commitid	10049C7B19975ACD690;

1.8
date	2009.03.23.10.06.40;	author tg;	state Exp;
branches;
next	1.7;
commitid	10049C75F3C49A48392;

1.7
date	2009.03.23.09.59.22;	author tg;	state Exp;
branches;
next	1.6;
commitid	10049C75D90547A9297;

1.6
date	2009.03.23.09.43.04;	author tg;	state Exp;
branches;
next	1.5;
commitid	10049C759AE3B196D68;

1.5
date	2009.03.23.09.23.22;	author tg;	state Exp;
branches;
next	1.4;
commitid	10049C7551A2AEE813B;

1.4
date	2009.03.20.18.48.48;	author tg;	state Exp;
branches;
next	1.3;
commitid	10049C3E52443586988;

1.3
date	2009.03.20.18.45.02;	author tg;	state Exp;
branches;
next	1.2;
commitid	10049C3E43D34DC33D3;

1.2
date	2009.03.20.18.37.09;	author tg;	state Exp;
branches;
next	1.1;
commitid	10049C3E26C77A93726;

1.1
date	2009.03.20.18.29.36;	author tg;	state Exp;
branches;
next	;
commitid	10049C3E0A07582834E;


desc
@@


1.77
log
@allow overriding Codename, not just Suite
@
text
@#!/bin/mksh
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.75 2017/03/08 16:57:03 tg Exp $'
#-
# Copyright © 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015,
#	      2016, 2017, 2019
#	mirabilos <m@@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.

unset normarchs repo_keyid gpg_remote gpg_bin repo_origin repo_label repo_title
unset -f repo_intro repo_description
me=$(dirname "$0"); [[ -s $me/mkdebidx.inc ]] && . "$me/mkdebidx.inc"
unset me

[[ -n ${normarchs+x} ]] || set -A normarchs -- i386
# either '' (locally) or 'remsign user@@host.domain.com' (remote ssh)
[[ -n ${repo_keyid+x} ]] || repo_keyid=0xAA917C6F
[[ -n ${gpg_remote+x} ]] || gpg_remote=
case ${gpg_bin:-x} {
(gpg|gpg1|gpg2|gnupg|gnupg1|gnupg2) ;;
(*)
	if [[ -n $gpg_remote ]]; then
		gpg_bin=gpg
	elif ! gpg_bin=$(whence -p gpg1); then
		gpg_bin=gpg
	fi
	;;
}
[[ -n ${repo_origin+x} ]] || repo_origin='The MirOS Project'
[[ -n ${repo_label+x} ]] || repo_label=wtf
[[ -n ${repo_title+x} ]] || repo_title='MirDebian “WTF” Repository'
typeset -f repo_intro >/dev/null || function repo_intro {
	cat <<-'EOF'
	<p>This APT repository contains packages by mirabilos (<i>wtf</i>)
	 for use with the Debian operating system and its derivates. It is
	 not affiliated with Debian. Some of the content is merely hosted
	 for people close to MirBSD or Debian; some is affiliated with The
	 MirOS Project.<br /><i>Debian</i> is a registered trademark owned
	 by Software in the Public Interest, Inc.<br />“The MirOS Project”
	 and “MirBSD” are unregistered trademarks owned by mirabilos.</p>
EOF
}
typeset -f repo_description >/dev/null || function repo_description {
	typeset suite_nick=$1

	print -nr -- "WTF ${suite_nick} Repository"
}
set -A dpkgarchs -- alpha amd64 arm arm64 armel armhf hppa hurd-i386 i386 \
    ia64 kfreebsd-amd64 kfreebsd-i386 m68k mips mips64el mipsel powerpc \
    powerpcspe ppc64 ppc64el s390 s390x sh4 sparc sparc64 x32
[[ -n "${normarchs[*]}" ]] || set -A normarchs -- "${dpkgarchs[@@]}"

set +U
export LC_ALL=C
unset LANGUAGE
typeset -Z11 -Uui16 hv

function remsign {
	target=$1; shift
	master=remsign.ctl$$
	tmpfnm=remsign.tmp$$
	ssh -fNM -o ControlPath=$tmpfnm "$target"
	ssh -o ControlPath=$tmpfnm "$target" cat \>$tmpfnm
	ssh -o ControlPath=$tmpfnm -t "$target" "$* $tmpfnm" 0<&2 1>&2
	rv=$?
	ssh -o ControlPath=$tmpfnm "$target" "cat $tmpfnm.asc; rm -f $tmpfnm $tmpfnm.asc"
	ssh -o ControlPath=$tmpfnm "$target" -O exit
	return $rv
}

function die {
	local rv=1

	if [[ $1 = +([0-9]) ]]; then
		rv=$1
		shift
	fi
	print -ru2 -- "E: $*"
	exit $rv
}

function checkedhash {
	if [[ $1 = size ]]; then
		REPLY=$(stat -c '%s' "$2")
		[[ $REPLY = +([0-9]) ]] || die "Error getting size of '$2'"
	else
		set -o noglob
		set -A REPLY -- $($1 "$2")
		set +o noglob
		[[ $REPLY = +([0-9a-f]) ]] || die "Error getting $1 of '$2'"
	fi
}

function putfile {
	tee $1 | gzip -n9 >$1.gz
}

function sortlist {
	typeset x u=$1

	if [[ $u = -u ]]; then
		shift
	else
		u=
	fi

	for x in "$@@"; do
		print -r -- "$x"
	done | sort $u
}

# escape XHTML characters (three mandatory XML ones plus double quotes,
# the latter in an XML safe fashion numerically though)
function xhtml_escape {
	if (( $# )); then
		print -nr -- "$@@"
	else
		cat
	fi | sed \
	    -e 's&\&amp;g' \
	    -e 's<\&lt;g' \
	    -e 's>\&gt;g' \
	    -e 's"\&#34;g'
}

cd "$(dirname "$0")"
rm -f dpkg_578162_workaround

IFS=:; set -o noglob
dpkgarchl=:all:"${dpkgarchs[*]}":
IFS=$' \t\n'; set +o noglob

suites=:
for suite in "$@@"; do
	suites=:dists/$suite$suites
done

allsuites=
for suite in dists/*; do
	allsuites="$allsuites${allsuites:+ }${suite##*/}"
	[[ -h $suite ]] && continue
	[[ $suites = : || $suites = *:"$suite":* ]] || continue
	archs=
	distribution=
	dcodename=
	debootstrap_compat=0
	. $suite/distinfo.sh
	suitearchs=${archs:-${normarchs[*]}}
	components=Components:
	for dist in $suite/*; do
		[[ -d $dist/. ]] || continue
		rm -rf $dist/binary-* $dist/source
		ovf= oef= osf= om=-m
		(( debootstrap_compat )) && om=
		[[ -s $dist/override.file ]] && ovf=$dist/override.file
		[[ -s $dist/override.extra ]] && oef="-e $dist/override.extra"
		[[ -s $dist/override.src ]] && osf="-s $dist/override.src"
		components="$components ${dist##*/}"
		archs=
		[[ -s $dist/distinfo.sh ]] && . $dist/distinfo.sh
		set -A distarchs -- $(sortlist -u all ${archs:-$suitearchs})
		IFS=:; set -o noglob
		distarchl=:"${distarchs[*]}":
		IFS=$' \t\n'; set +o noglob
		nmds=0
		for arch in $(sortlist -u ${distarchs[*]} ${dpkgarchs[*]}) /; do
			# put "all" last
			[[ $arch = all ]] && continue
			[[ $arch = / ]] && arch=all
			# create index
			if [[ $dpkgarchl != *:"$arch":* ]]; then
				die "Invalid arch '$arch' in $dist"
			elif [[ $distarchl != *:"$arch":* ]]; then
				print "\n===> Linking all =>" \
				    "${dist#dists/}/$arch/Packages"
				ln -s binary-all $dist/binary-$arch
			elif [[ $arch = all ]] && (( nmds == 1 )); then
				print "\n===> Linking $firstmd =>" \
				    "${dist#dists/}/all/Packages"
				ln -s binary-$firstmd $dist/binary-all
			else
				print "\n===> Creating" \
				    "${dist#dists/}/$arch/Packages\n"
				mkdir -p $dist/binary-$arch
				(dpkg-scanpackages $oef $om -a $arch \
				    $dist $ovf || \
				    echo $? >$dist/binary-$arch/failed) | \
				    putfile $dist/binary-$arch/Packages
				[[ -e $dist/binary-$arch/failed ]] && \
				    exit $(<$dist/binary-$arch/failed)
				(( nmds++ )) || firstmd=$arch
			fi
		done
		print "\n===> Creating ${dist#dists/}/Sources"
		mkdir -p $dist/source
		[[ -e dpkg_578162_workaround ]] || (dpkg-scansources $oef $osf \
		    $dist $ovf || touch dpkg_578162_workaround) | \
		    putfile $dist/source/Sources
		[[ -e dpkg_578162_workaround ]] && (dpkg-scansources $osf \
		    $dist $ovf || echo $? >$dist/source/failed) | \
		    putfile $dist/source/Sources
		[[ -e $dist/source/failed ]] && exit $(<$dist/source/failed)
		print done.
		print "\n===> Creating ${dist#dists/}/i18n/Index"
		[[ -d $dist/i18n/. ]] || mkdir -p $dist/i18n
		[[ -d $dist/i18n/. ]] || die "Cannot create $dist/i18n"
		rm -f $dist/i18n/.done
		(cd $dist/i18n
		tfiles=/
		[[ -h .hashcache || ! -f .hashcache ]] && rm -rf .hashcache
		for ent in .* *; do
			[[ $ent = . || $ent = .. || $ent = .hashcache ]] && continue
			[[ -h $ent || -e $ent ]] || continue
			if [[ ! -f $ent || $ent != Translation-* ]]; then
				rm -rf "$ent"
				continue
			fi
			ent=${ent#Translation-}
			ent=${ent%.bz2}
			[[ $tfiles = */"$ent"/* ]] || tfiles+=$ent/
		done
		[[ -e .hashcache ]] || :>.hashcache
		if [[ $tfiles = / ]]; then
			:>Translation-tlh_DE
			tfiles=/tlh_DE/
		fi
		print SHA1: >Index
		IFS=/; set -o noglob
		set -A tflist -- ${tfiles#/}
		IFS=$' \t\n'; set +o noglob
		for ent in "${tflist[@@]}"; do
			ent=Translation-$ent
			if [[ $ent -nt $ent.bz2 ]]; then
				if ! bzip2 -9 <"$ent" >"$ent.bz2"; then
					rm -f "$ent.bz2"
					die "bzip2 '$ent' died"
				fi
			elif [[ -e $ent ]]; then
				rm -f "$ent"
			fi
			hash=${|checkedhash sha1sum "$ent.bz2";} || exit 1
			hnum=0
			grep "^$hash " .hashcache |&
			while read -p hsha1 hsize hmd5 hsha2 usha1 usize umd5 usha2; do
				[[ $hsha1 = "$hash" ]] || continue
				hnum=1
				while read -p hsha1 x; do
					# flush coprocess, look for dupes
					[[ $hsha1 = "$hash" ]] && hnum=2
				done
				break
			done
			hsha1=$hash
			if (( hnum != 1 )); then
				[[ -e $ent ]] || \
				    if ! bzip2 -d <"$ent.bz2" >"$ent"; then
					rm -f "$ent"
					die "bzip2 '$ent.bz2' died"
				fi
				umd5=${|checkedhash md5sum "$ent";} || exit 1
				hmd5=${|checkedhash md5sum "$ent.bz2";} || exit 1
				usha1=${|checkedhash sha1sum "$ent";} || exit 1
				usha2=${|checkedhash sha256sum "$ent";} || exit 1
				hsha2=${|checkedhash sha256sum "$ent.bz2";} || exit 1
				usize=${|checkedhash size "$ent";} || exit 1
				hsize=${|checkedhash size "$ent.bz2";} || exit 1
				(( hnum )) || print $hsha1 $hsize $hmd5 $hsha2 $usha1 $usize $umd5 $usha2 >>.hashcache
			fi
			[[ -e $ent ]] && rm -f "$ent"
			print -u4 $hsha1 $hsize $hmd5 $hsha2 $usha1 $usize $umd5 $usha2
			print -ru5 " $hsha1 $hsize $ent.bz2"
			print -ru6 " $umd5 $usize ${dist##*/}/i18n/$ent"
			print -ru6 " $hmd5 $hsize ${dist##*/}/i18n/$ent.bz2"
			print -ru7 " $usha1 $usize ${dist##*/}/i18n/$ent"
			print -ru7 " $hsha1 $hsize ${dist##*/}/i18n/$ent.bz2"
			print -ru8 " $usha2 $usize ${dist##*/}/i18n/$ent"
			print -ru8 " $hsha2 $hsize ${dist##*/}/i18n/$ent.bz2"
		done 4>.hashcache.new 5>>Index 6>.hashcache.md5 7>.hashcache.sha1 8>.hashcache.sha2
		rm -f .hashcache
		mv -f .hashcache.new .hashcache
		:>.done)
		[[ -e $dist/i18n/.done ]] || die i18n generation unsuccessful
		rm -f $dist/i18n/.done
		print done.
	done
	print "\n===> Creating ${suite#dists/}/Release"
	rm -f $suite/Release-*
	xdone=$(realpath $suite/Release-done)
	(cat <<-EOF
		Origin: ${repo_origin}
		Label: ${repo_label}
		Suite: ${distribution:-${suite##*/}}
		Codename: ${dcodename:-${suite##*/}}
		Date: $(date -Ru)
		Architectures: all ${dpkgarchs[*]} source
		$components
		Description: $(repo_description "$nick")
		MD5Sum:
	EOF
	exec 4>$suite/Release-sha1
	exec 5>$suite/Release-sha2
	print -u4 SHA1:
	print -u5 SHA256:
	cd $suite
	set -A cache_fn
	set -A cache_md5
	set -A cache_sha1
	set -A cache_sha2
	set -A cache_size
	for n in Contents-* */{binary-*,i18n,source}/{Index,{Packag,Sourc}es*}; do
		[[ -f $n ]] || continue
		# realpath-ise $n and cache the checksum
		nn=$(realpath "$n")
		#XXX once mksh can, use associative arrays instead
		hv=16#${nn@@#}
		# simple hash collision solver by increment
		nc=${cache_fn[hv]}
		while [[ -n $nc && $nc != "$nn" ]]; do
			nc=${cache_fn[++hv]}
		done
		if [[ $nc = "$nn" ]]; then
			nm=${cache_md5[hv]}
			ns=${cache_size[hv]}
			nsha1=${cache_sha1[hv]}
			nsha2=${cache_sha2[hv]}
		else
			# GNU *sum tools are horridly inefficient
			nm=${|checkedhash md5sum "$nn";} || exit 1
			nsha1=${|checkedhash sha1sum "$nn";} || exit 1
			nsha2=${|checkedhash sha256sum "$nn";} || exit 1
			ns=${|checkedhash size "$nn";} || exit 1
			cache_md5[hv]=$nm
			cache_size[hv]=$ns
			cache_fn[hv]=$nn
			cache_sha1[hv]=$nsha1
			cache_sha2[hv]=$nsha2
		fi
		print " $nm $ns $n"
		print -u4 " $nsha1 $ns $n"
		print -u5 " $nsha2 $ns $n"
		if [[ $n = */i18n/Index ]]; then
			n=${n%Index}
			cat "${n}.hashcache.md5"
			cat >&4 "${n}.hashcache.sha1"
			cat >&5 "${n}.hashcache.sha2"
			rm -f "${n}.hashcache."*
		fi
	done
	:>"$xdone") >$suite/Release-tmp
	[[ -e $xdone ]] || die Release generation died
	cat $suite/Release-sha1 $suite/Release-sha2 >>$suite/Release-tmp

	# note: InRelease files can only be safely used by jessie and up.
	unset use_inrelease
	. $suite/distinfo.sh
	rm -f $suite/InRelease $suite/Release $suite/Release.gpg
	if [[ $use_inrelease = 1 ]]; then
		$gpg_remote $gpg_bin -u $repo_keyid --no-comment --clearsign \
		    <$suite/Release-tmp >$suite/Release-inl
		mv -f $suite/Release-inl $suite/InRelease
	else
		$gpg_remote $gpg_bin -u $repo_keyid --no-comment -sab \
		    <$suite/Release-tmp >$suite/Release-sig
		mv -f $suite/Release-tmp $suite/Release
		mv -f $suite/Release-sig $suite/Release.gpg
	fi
	rm -f $suite/Release-*
done

print "\n===> Creating debidx.htm\n"

set -A preplsrc
set -A prepldst
integer nsrc=0 nbin=0 nrpl=0
br='<br />'

# syntax:	${suitename}/${distname}/${pN}/${pp} <suite>
# example:	sid/wtf/openntpd/i386 lenny
# not here:	squeeze/wtf/xz-utils/% backport-source
# binary-only?	sid/wtf/pbuilder/= something
if [[ -s mkdebidx.lnk ]]; then
	while read pn pd; do
		[[ $pn = '#'* ]] && continue
		if [[ $pn != +([a-z0-9_])/+([a-z0-9_-])/+([!/])/@@(%|=|+([a-z0-9])) || \
		    $pd != +([a-z0-9_]) ]]; then
			print -u2 "W: Invalid lnk line '$pn' '$pd'"
			continue
		fi
		preplsrc[nrpl]=$pn
		prepldst[nrpl++]=$pd
	done <mkdebidx.lnk
fi

for suite in dists/*; do
	[[ -h $suite ]] && continue
	for dist in $suite/*; do
		[[ -d $dist/. ]] || continue
		suitename=${suite##*/}
		if [[ $suitename != +([a-z0-9_]) ]]; then
			print -u2 "W: Invalid suite name '$suitename'"
			continue 2
		fi
		distname=${dist##*/}
		if [[ $distname != +([a-z0-9_-]) ]]; then
			print -u2 "W: Invalid dist name '$distname'"
			continue
		fi

		gzip -dc $dist/source/Sources.gz |&
		pn=; pv=; pd=; pp=; Lf=
		while IFS= read -pr line; do
			case $line {
			(" "*)
				if [[ -n $Lf ]]; then
					eval x=\$$Lf
					x=$x$line
					eval $Lf=\$x
				fi
				;;
			("Package: "*)
				pn=${line##Package:*([	 ])}
				Lf=pn
				;;
			("Version: "*)
				pv=${line##Version:*([	 ])}
				Lf=pv
				;;
			("Binary: "*)
				pd=${line##Binary:*([	 ])}
				Lf=pd
				;;
			("Directory: "*)
				pp=${line##Directory:*([	 ])}
				Lf=pp
				;;
			(?*)	# anything else
				Lf=
				;;
			(*)	# empty line
				if [[ -n $pn && -n $pv && -n $pd && -n $pp ]]; then
					i=0
					while (( i < nsrc )); do
						[[ ${sp_name[i]} = "$pn" && \
						    ${sp_dist[i]} = "$distname" ]] && break
						let i++
					done
					if (( i == nsrc )); then
						let nsrc++
						pvo=
						ppo=
					else
						eval pvo=\$\{sp_ver_${suitename}[i]\}
						eval ppo=\$\{sp_dir_${suitename}[i]\}
					fi
					sp_name[i]=$pn
					sp_dist[i]=$distname
					#sp_suites[i]="${sp_suites[i]} $suitename"
					if (( nrpl )); then
						x=${suitename}/${distname}/${pn}/source
						j=0
						while (( j < nrpl )); do
							[[ ${preplsrc[j]} = "$x" ]] && break
							let j++
						done
						(( j < nrpl )) && pv="${pv}from ${prepldst[j]}"
					fi
					eval sp_ver_${suitename}[i]='${pvo:+$pvo,}$pv'
					eval sp_dir_${suitename}[i]='${ppo:+$ppo,}$pp/'
					sp_desc[i]=${sp_desc[i]},$pd
				fi
				pn=; pv=; pd=; pp=; Lf=
				;;
			}
		done

		gzip -dc $(for f in $dist/binary-*/Packages.gz; do
			[[ -e $f ]] || continue
			realpath "$f"
		done | sort -u) |&
		pn=; pv=; pd=; pp=; pN=; pf=; pABP=; Lf=
		while IFS= read -pr line; do
			case $line {
			(" "*)
				if [[ -n $Lf ]]; then
					eval x=\$$Lf
					x=$x$line
					eval $Lf=\$x
				fi
				;;
			("Package: "*)
				pN=${line##Package:*([	 ])}
				Lf=pN
				;;
			("Source: "*)
				pn=${line##Source:*([	 ])}
				pn=${pn%% *}
				Lf=pn
				;;
			("Version: "*)
				pv=${line##Version:*([	 ])}
				Lf=pv
				;;
			("Description: "*)
				pd=${line##Description:*([	 ])}
				;;
			("Architecture: "*)
				pp=${line##Architecture:*([	 ])}
				Lf=pp
				;;
			("Filename: "*)
				pf=${line##Filename:*([	 ])}
				Lf=pf
				;;
			("Auto-Built-Package: "*)
				pABP=${line##Auto-Built-Package:*([	 ])}
				Lf=pABP
				;;
			(?*)	# anything else
				Lf=
				;;
			(*)	# empty line
				[[ $pf = *:* || $pf = *'%'* ]] && \
				    die Illegal character in $dist \
				    packages $pp "'Filename: $pf'"
				[[ -n $pn ]] || pn=$pN
				if [[ $pN = *-dbgsym && $pABP = debug-symbols ]]; then
					: skip
				elif [[ -n $pn && -n $pv && -n $pd && -n $pp ]]; then
					i=0
					while (( i < nbin )); do
						[[ ${bp_disp[i]} = "$pN" && ${bp_desc[i]} = "$pd" && \
						    ${bp_dist[i]} = "$distname" ]] && break
						let i++
					done
					(( i == nbin )) && let nbin++
					bp_name[i]=$pn
					bp_disp[i]=$pN
					bp_dist[i]=$distname
					#bp_suites[i]="${bp_suites[i]} $suitename"
					if (( nrpl )); then
						x=${suitename}/${distname}/${pN}/${pp}
						j=0
						while (( j < nrpl )); do
							[[ ${preplsrc[j]} = "$x" ]] && break
							let j++
						done
						(( j < nrpl )) && pv="from ${prepldst[j]}"
					fi
					[[ -n $pf ]] && pv="<a href=\"$pf\">$pv</a>"
					pv="$pp: $pv"
					eval x=\${bp_ver_${suitename}[i]}
					[[ $br$x$br = *"$br$pv$br"* ]] || x=$x${x:+$br}$pv
					eval bp_ver_${suitename}[i]=\$x
					bp_desc[i]=$pd
				fi
				pn=; pv=; pd=; pp=; pN=; pf=; pABP=; Lf=
				;;
			}
		done
	done
done

(cat <<'EOF'
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
 "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"><head>
 <meta http-equiv="content-type" content="text/html; charset=utf-8" />
 <meta name="MSSmartTagsPreventParsing" content="TRUE" />
EOF
print -r -- " <title>${repo_title} Index</title>"
[[ -s NEWS.rss ]] && print '<link rel="alternate" type="application/rss+xml" title="RSS" href="NEWS.rss" />'
cat <<'EOF'
 <style type="text/css"><!--/*--><![CDATA[/*><!--*/
  table {
   border: 1px solid black;
   border-collapse: collapse;
   text-align: left;
   vertical-align: top;
  }
  tr {
   border: 1px solid black;
   text-align: left;
   vertical-align: top;
  }
  td {
   border: 1px solid black;
   text-align: left;
   vertical-align: top;
  }
  th {
   background-color: #000000;
   color: #FFFFFF;
  }
  .tableheadcell {
   border: 1px solid #999999;
   padding: 3px;
   white-space: nowrap;
  }
  .srcpkgline {
   background-color: #CCCCCC;
  }
  .srcpkgdist {
   background-color: #666666;
   color: #FFFFFF;
   font-weight: bold;
  }
  .binpkgdist {
   background-color: #999999;
   color: #FFFFFF;
   font-weight: bold;
  }
 /*]]>*/--></style>
</head><body>
EOF
print -r -- "<h1>${repo_title}</h1>"
repo_intro
cat <<'EOF'
<p><a href="dists/">Browse</a> the repository or read about how to amend <a
 href="sources.txt">/etc/apt/sources.list</a> in order to use it.
EOF
[[ -s 0-NOTE.txt ]] && print ' Also read my <a href="0-NOTE.txt">notes</a>.'
[[ -s NEWS.rss ]] && print ' There is an <a href="NEWS.rss">RSS newsfeed</a>.'
cat <<EOF
 This repository uses <a
  href="http://pgp.uni-mainz.de:11371/pks/lookup?search=${repo_keyid}&amp;op=vindex">${repo_keyid}</a>
 as signing key.
</p>
<h2>Suites</h2>
<ul>
EOF

allsuites=$(for suitename in $allsuites; do
	print $suitename
done | sort -u)

for suitename in $allsuites; do
	suite=dists/$suitename
	if [[ -h $suite ]]; then
		ent=$(realpath "$suite")
		n=$(realpath dists)
		[[ $ent = "$n"/+([!/]) ]] || continue
		ent=${ent#"$n"/}
		for n in $allsuites; do
			[[ $n = "$ent" ]] && break
		done
		[[ $n = "$ent" ]] && print -r \
		    " <li>$suitename: symbolic link to $ent</li>"
		continue
	fi
	. $suite/distinfo.sh
	print -n " <li>${suite##*/}: <a href=\"$suite/\">$desc</a> (dists:"
	for dist in $suite/*; do
		[[ -d $dist/. ]] || continue
		distname=${dist##*/}
		print -n " <a href=\"$suite/$distname/\">$distname</a>"
	done
	print ")</li>"
done
print "</ul>"
print "<h2>Packages</h2>"
print "<table width=\"100%\"><thead>"
print "<tr class=\"tablehead\">"
print " <th class=\"tableheadcell\">dist</th>"
print " <th class=\"tableheadcell\" rowspan=\"2\">Binary / Description</th>"
for suitename in $allsuites; do
	[[ -h dists/$suitename ]] && continue
	print " <th class=\"tableheadcell\" rowspan=\"2\">$suitename</th>"
done
print "</tr><tr class=\"tablehead\">"
print " <th class=\"tableheadcell\">package name</th>"
print "</tr></thead><tbody>"

set -A bp_sort
i=0
while (( i < nbin )); do
	print $i ${bp_disp[i++]} #${bp_suites[i]}
done | sort -k2 |&
while read -p num rest; do
	bp_sort[${#bp_sort[*]}]=$num
done

i=0
while (( i < nsrc )); do
	print $i ${sp_name[i++]}
done | sort -k2 |&
while read -p num rest; do
	print "\n<!-- sp #$num = ${sp_name[num]} -->"
	print "<tr class=\"srcpkgline\">"
	print " <td class=\"srcpkgdist\">${sp_dist[num]}</td>"
	pd=
	for x in $(tr ', ' '\n' <<<"${sp_desc[num]}" | sort -u); do
		[[ -n $x ]] && pd="$pd, $x"
	done
	print " <td rowspan=\"2\" class=\"srcpkgdesc\">${pd#, }</td>"
	for suitename in $allsuites; do
		[[ -h dists/$suitename ]] && continue
		eval pvo=\${sp_ver_${suitename}[num]}
		eval ppo=\${sp_dir_${suitename}[num]}
		IFS=,; set -o noglob
		set -A pva -- $pvo
		set -A ppa -- $ppo
		IFS=$' \t\n'; set +o noglob
		(( ${#pva[*]} )) || pva[0]=
		y=
		i=0
		while (( i < ${#pva[*]} )); do
			pv=${pva[i]}
			pp=${ppa[i]}
			if [[ $pv = *""* ]]; then
				pvdsc=${pv%%""*}
				pv=${pv##*""}
			else
				pvdsc=$pv
			fi
			if [[ -z $pv ]]; then
				pv=-
				if (( nrpl )); then
					x=${suitename}/${sp_dist[num]}/${sp_name[num]}/%
					j=0
					while (( j < nrpl )); do
						[[ ${preplsrc[j]} = "$x" ]] && break
						let j++
					done
					(( j < nrpl )) && pv=${prepldst[j]}
				fi
			elif [[ $pp != ?(/) ]]; then
				pv="<a href=\"$pp${sp_name[num]}_${pvdsc##+([0-9]):}.dsc\">$pv</a>"
			fi
			[[ $pp != ?(/) ]] && pv="<a href=\"$pp\">[dir]</a> $pv"
			y=${y:+"$y<br />"}$pv
			let i++
		done
		print " <td rowspan=\"2\" class=\"srcpkgitem\">$y</td>"
	done
	print "</tr><tr class=\"srcpkgline\">"
	print " <td class=\"srcpkgname\">${sp_name[num]}</td>"
	print "</tr>"
	k=0
	while (( k < nbin )); do
		(( (i = bp_sort[k++]) < 0 )) && continue
		[[ ${bp_name[i]} = "${sp_name[num]}" && \
		    ${bp_dist[i]} = "${sp_dist[num]}" ]] || continue
		bp_sort[k - 1]=-1
		#print "<!-- bp #$i for${bp_suites[i]} -->"
		print "<!-- bp #$i -->"
		print "<tr class=\"binpkgline\">"
		print " <td class=\"binpkgname\">${bp_disp[i]}</td>"
		print " <td class=\"binpkgdesc\">$(xhtml_escape "${bp_desc[i]}")</td>"
		for suitename in $allsuites; do
			[[ -h dists/$suitename ]] && continue
			eval pv=\${bp_ver_${suitename}[i]}
			if [[ -z $pv ]]; then
				pv=-
				if (( nrpl )); then
					x=${suitename}/${sp_dist[num]}/${sp_name[num]}/%
					j=0
					while (( j < nrpl )); do
						[[ ${preplsrc[j]} = "$x" ]] && break
						let j++
					done
					(( j < nrpl )) && pv=${prepldst[j]}
				fi
			fi
			print " <td class=\"binpkgitem\">$pv</td>"
		done
		print "</tr>"
	done
done

num=0
for i in ${bp_sort[*]}; do
	(( i < 0 )) && continue
	if (( !num )); then
		print "\n<!-- sp ENOENT -->"
		print "<tr class=\"srcpkgline\">"
		print " <td class=\"srcpkgname\">~ENOENT~</td>"
		print " <td class=\"srcpkgdesc\">binary" \
		    "packages without a matching source package</td>"
		for suitename in $allsuites; do
			[[ -h dists/$suitename ]] && continue
			print " <td class=\"srcpkgitem\">-</td>"
		done
		print "</tr>"
		num=1
	fi
	#print "<!-- bp #$i for${bp_suites[i]} -->"
	print "<!-- bp #$i -->"
	print "<tr class=\"binpkgline\">"
	print " <td class=\"binpkgdist\">${bp_dist[i]}</td>"
	print " <td rowspan=\"2\" class=\"binpkgdesc\">$(xhtml_escape "${bp_desc[i]}")</td>"
	for suitename in $allsuites; do
		[[ -h dists/$suitename ]] && continue
		eval pv=\${bp_ver_${suitename}[i]}
		if [[ -z $pv ]]; then
			pv=-
			if (( nrpl )); then
				x=${suitename}/${bp_dist[num]}/${bp_disp[num]}/=
				j=0
				while (( j < nrpl )); do
					[[ ${preplsrc[j]} = "$x" ]] && break
					let j++
				done
				(( j < nrpl )) && pv=${prepldst[j]}
			fi
		fi
		print " <td rowspan=\"2\" class=\"binpkgitem\">$pv</td>"
	done
	print "</tr><tr class=\"binpkgline\">"
	print " <td class=\"binpkgname\">${bp_disp[i]}</td>"
	print "</tr>"
done

cat <<EOF

</tbody></table>

<p>• <a href="http://validator.w3.org/check/referer">Valid XHTML/1.1!</a>
 • <small>Generated on $(date -u +'%F %T') by <tt
 style="white-space:pre;">$rcsid</tt></small> •</p>
</body></html>
EOF

:) >debidx.htm
print done.
@


1.76
log
@drop <?xml, as in cid 1004E72245D0A54A14A
@
text
@d5 1
a5 1
#	      2016, 2017
d158 1
d306 1
a306 1
		Codename: ${suite##*/}
d392 2
@


1.75
log
@update architecture list (wasn’t there an sh3 port in preparation, too?)
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.72 2016/01/02 20:27:23 tg Exp $'
a573 1
<?xml version="1.0"?>
@


1.74
log
@quell -dbgsym packages from debidx.htm
@
text
@d4 2
a5 1
# Copyright © 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016
d62 2
a63 2
    ia64 kfreebsd-amd64 kfreebsd-i386 m68k mips mipsel powerpc powerpcspe \
    ppc64 ppc64el s390 s390x sh4 sparc sparc64 x32
@


1.73
log
@prefer gpg1
@
text
@d489 1
a489 1
		pn=; pv=; pd=; pp=; pN=; pf=; Lf=
d523 4
d535 3
a537 1
				if [[ -n $pn && -n $pv && -n $pd && -n $pp ]]; then
d565 1
a565 1
				pn=; pv=; pd=; pp=; pN=; pf=; Lf=
a582 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.72 2016/01/02 20:27:23 tg Exp $" />
@


1.72
log
@properly abort in case of hitting e.g. Debian #809219
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.69 2014/12/20 14:12:15 tg Exp $'
d22 1
a22 1
unset normarchs repo_keyid gpg_remote repo_origin repo_label repo_title
d31 10
d369 1
a369 1
		$gpg_remote gpg -u $repo_keyid --no-comment --clearsign \
d373 1
a373 1
		$gpg_remote gpg -u $repo_keyid --no-comment -sab \
d577 1
a577 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.69 2014/12/20 14:12:15 tg Exp $" />
@


1.71
log
@apparently, some idiot changed the Date format a̲n̲d̲ made the old one invalid
@
text
@d4 1
a4 1
# Copyright © 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015
d186 3
a188 2
				dpkg-scanpackages $oef $om -a $arch \
				    $dist $ovf | \
d190 2
d200 2
a201 2
		[[ -e dpkg_578162_workaround ]] && dpkg-scansources $osf \
		    $dist $ovf | \
d203 1
@


1.70
log
@add support for symbolic links (suite to suite, target is dereferenced fully)
@
text
@d5 1
a5 1
#	Thorsten “mirabilos” Glaser <tg@@mirbsd.org>
d291 1
a291 1
		Date: $(date -u)
@


1.69
log
@• drop saveIFS juggling, use $' \t\n' consistently
• let mkdebidx.inc, if existent, override repo info; eliminated need to edit
• empty normarchs means use all dpkgarchs
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.68 2014/12/15 13:11:39 tg Exp $'
d4 1
a4 1
# Copyright © 2008, 2009, 2010, 2011, 2012, 2013, 2014
d143 1
d390 1
d563 1
a563 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.68 2014/12/15 13:11:39 tg Exp $" />
d629 12
d657 1
d687 1
d741 1
d771 1
d783 1
@


1.68
log
@break after flushing the coprocess (and looking for duplicates); add comment
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.61 2014/05/23 09:44:30 tg Exp $'
d22 6
a27 2
set -A normarchs -- i386
repo_keyid=0xAA917C6F
d29 6
a34 5
gpg_remote=
repo_origin='The MirOS Project'
repo_label=wtf
repo_title='MirDebian “WTF” Repository'
function repo_intro {
d45 1
a45 1
function repo_description {
a49 2


d53 6
a127 4
set +U
export LC_ALL=C
unset LANGUAGE
saveIFS=$IFS
a129 1
typeset -Z11 -Uui16 hv
d133 1
a133 1
IFS=$saveIFS; set +o noglob
d164 1
a164 1
		IFS=$saveIFS; set +o noglob
d226 1
a226 1
		IFS=$saveIFS; set +o noglob
d561 1
a561 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.61 2014/05/23 09:44:30 tg Exp $" />
d677 1
a677 1
		IFS=$saveIFS; set +o noglob
@


1.67
log
@fix Translation file entry paths in Release files
@
text
@d238 1
a238 1
				let ++hnum
d240 2
a241 1
					[[ $hsha1 = "$hash" ]] && let ++hnum
d243 1
@


1.66
log
@brown paper bag commit
@
text
@d262 6
a267 6
			print -ru6 " $umd5 $usize $dist/i18n/$ent"
			print -ru6 " $hmd5 $hsize $dist/i18n/$ent.bz2"
			print -ru7 " $usha1 $usize $dist/i18n/$ent"
			print -ru7 " $hsha1 $hsize $dist/i18n/$ent.bz2"
			print -ru8 " $usha2 $usize $dist/i18n/$ent"
			print -ru8 " $hsha2 $hsize $dist/i18n/$ent.bz2"
@


1.65
log
@turns out that an error-returning read empties out the arguments
@
text
@d236 1
a236 1
			if read -p hsha1 hsize hmd5 hsha2 usha1 usize umd5 usha2; then
@


1.64
log
@for some unknown reason, GNU stat, md5sum, sha1sum and sha256sum occasionally
return an empty string; catch that, and other errors
@
text
@d236 6
a241 2
			while read -p hsha1 hsize hmd5 hsha2 usha1 usize umd5 usha2; do
				[[ $hsha1 = "$hash" ]] && let ++hnum
d243 1
a252 1
				hsha1=$hash
@


1.63
log
@link RSS newsfeed, if exists
@
text
@d75 12
d199 1
d233 1
a233 2
			set -A x -- $(sha1sum "$ent.bz2")
			hash=${x[0]}
d245 3
a247 6
				set -A x -- $(md5sum "$ent")
				umd5=${x[0]}
				set -A x -- $(md5sum "$ent.bz2")
				hmd5=${x[0]}
				set -A x -- $(sha1sum "$ent")
				usha1=${x[0]}
d249 4
a252 6
				set -A x -- $(sha256sum "$ent")
				usha2=${x[0]}
				set -A x -- $(sha256sum "$ent.bz2")
				hsha2=${x[0]}
				usize=$(stat -c '%s' "$ent")
				hsize=$(stat -c '%s' "$ent.bz2")
d267 4
a270 1
		); print done.
d274 1
d314 4
a317 7
			set -A x -- $(md5sum "$nn")
			nm=${x[0]}
			set -A x -- $(sha1sum "$nn")
			nsha1=${x[0]}
			set -A x -- $(sha256sum "$nn")
			nsha2=${x[0]}
			ns=$(stat -c '%s' "$nn")
d334 3
a336 1
	done) >$suite/Release-tmp
@


1.62
log
@• new repo key
• add disclaimer
• add ppc64el
• new die function
• use mksh builtin hash
• use set ±o noglob around IFS+set splitting (SECURITY)
• handle dists/*/*/i18n/Translation-* files, adding an empty Klingon one if none exists
• Release.gpg vs. InRelease is now boolean toggle
  ‣ use InRelease only with jessie and up, and not in *buntu
@
text
@d539 1
d591 1
@


1.61
log
@proper CDATA escaping for CSS too
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.60 2013/11/14 15:07:45 tg Exp $'
d4 2
a5 2
# Copyright (c) 2008, 2009, 2010, 2011, 2012, 2013, 2014
#	Thorsten Glaser <tg@@mirbsd.org>
d29 11
d49 1
a49 1
    ppc64 s390 s390x sh4 sparc sparc64 x32
d64 11
a92 11
# DJB cdb hash (not via stdio, for speed)
typeset -Z11 -Uui16 Lcdbhash_result
function Lcdbhash_add {
	typeset s="$*"
	typeset -i i=0 n=${#s}

	while (( i < n )); do
		((# Lcdbhash_result = (Lcdbhash_result * 33) ^ 1#${s:(i++):1} ))
	done
}

d113 1
d115 1
a115 1
IFS=:
d117 1
a117 1
IFS=$saveIFS
d146 3
a148 1
		IFS=:; distarchl=:"${distarchs[*]}":; IFS=$saveIFS
d156 1
a156 2
				print -u2 "Invalid arch '$arch' in $dist"
				exit 1
d184 77
d285 1
a285 1
	for n in Contents-* */{binary-*,source}/{Packag,Sourc}es*; do
d290 1
a290 2
		Lcdbhash_result=5381
		Lcdbhash_add "$nn"
d292 1
a292 1
		nc=${cache_fn[Lcdbhash_result]}
d294 1
a294 1
			nc=${cache_fn[++Lcdbhash_result]}
d297 4
a300 4
			nm=${cache_md5[Lcdbhash_result]}
			ns=${cache_size[Lcdbhash_result]}
			nsha1=${cache_sha1[Lcdbhash_result]}
			nsha2=${cache_sha2[Lcdbhash_result]}
d310 5
a314 5
			cache_md5[Lcdbhash_result]=$nm
			cache_size[Lcdbhash_result]=$ns
			cache_fn[Lcdbhash_result]=$nn
			cache_sha1[Lcdbhash_result]=$nsha1
			cache_sha2[Lcdbhash_result]=$nsha2
d319 7
d329 2
a330 7
	# note: InRelease files can only be safely used by wheezy
	# onwards, and oneiric onwards; known to be insecure on
	# natty, but usable concurrent to detached files on squeeze

	unset release_sign_detached release_sign_inline
	release_sign_detached=x
	release_sign_inline=0
d332 4
a335 15
	[[ $release_sign_inline = [01] ]] || release_sign_inline=0
	[[ $release_sign_detached = [01] ]] || \
	    (( release_sign_detached = release_sign_inline ? 0 : 1 ))

	# Debian's fix for CVE-2013-1051 consists of disabling
	# support for InRelease files altogether (WTF!)
	release_sign_detached=1
	release_sign_inline=0

	(( release_sign_detached )) && $gpg_remote gpg -u $repo_keyid \
	    -sab <$suite/Release-tmp >$suite/Release-sig
	(( release_sign_inline )) && $gpg_remote gpg -u $repo_keyid \
	    --clearsign <$suite/Release-tmp >$suite/Release-inl

	if (( release_sign_inline )); then
d338 2
a339 3
		rm -f $suite/InRelease
	fi
	if (( release_sign_detached )); then
a341 2
	else
		rm -f $suite/Release*
d360 1
a360 1
			print -u2 "Invalid lnk line '$pn' '$pd'"
d373 1
a373 1
			print -u2 "Invalid suite name '$suitename'"
d378 1
a378 1
			print -u2 "Invalid dist name '$distname'"
d491 3
a493 5
				if [[ $pf = *:* || $pf = *'%'* ]]; then
					print -u2 Illegal character in $dist \
					    packages $pp "'Filename: $pf'"
					exit 1
				fi
d540 1
a540 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.60 2013/11/14 15:07:45 tg Exp $" />
d584 1
d652 1
a652 1
		IFS=,
d655 1
a655 1
		IFS=$saveIFS
@


1.60
log
@Escape XML special chars in the binary package description
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.59 2013/09/10 17:55:15 tg Exp $'
d4 1
a4 1
# Copyright (c) 2008, 2009, 2010, 2011, 2012, 2013
d465 2
a466 2
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.59 2013/09/10 17:55:15 tg Exp $" />
 <style type="text/css">
d505 1
a505 1
 </style>
@


1.59
log
@new archive key
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.58 2013/03/18 16:55:37 tg Exp $'
d82 14
d465 1
a465 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.58 2013/03/18 16:55:37 tg Exp $" />
d625 1
a625 1
		print " <td class=\"binpkgdesc\">${bp_desc[i]}</td>"
d665 1
a665 1
	print " <td rowspan=\"2\" class=\"binpkgdesc\">${bp_desc[i]}</td>"
@


1.58
log
@I was wondering why the new mksh/wtf was not installed…
APT surely did not issue helpful messages either… but:

apt (0.9.7.8) unstable; urgency=criticial

  * SECURITY UPDATE: InRelease verification bypass
    - CVE-2013-1051

… their fix is to disable InRelease altogether, what a…
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.57 2013/02/16 17:27:28 tg Exp $'
d23 1
a23 1
repo_keyid=0x405422DD
d451 1
a451 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.57 2013/02/16 17:27:28 tg Exp $" />
@


1.57
log
@• sync with dpkg: +arm64 +x32
• dead porting effort (like m32r): -avr32
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.56 2012/08/02 21:01:39 tg Exp $'
d231 5
d451 1
a451 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.56 2012/08/02 21:01:39 tg Exp $" />
@


1.56
log
@Allow debootstrap-friendly (no-multiversion) mode to be selected per suite
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.55 2012/07/17 13:11:50 tg Exp $'
d4 1
a4 1
# Copyright (c) 2008, 2009, 2010, 2011, 2012
d36 1
a36 1
set -A dpkgarchs -- alpha amd64 arm armel armhf avr32 hppa hurd-i386 i386 \
d38 1
a38 1
    ppc64 s390 s390x sh4 sparc sparc64
d446 1
a446 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.55 2012/07/17 13:11:50 tg Exp $" />
@


1.55
log
@remsign now needs to deal with *.asc ipv *.sig; sponsored by the Greater Evolvis Platform project
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.54 2012/07/15 11:16:42 tg Exp $'
d104 1
d111 2
a112 1
		ovf= oef= osf=
d142 1
a142 1
				dpkg-scanpackages $oef -m -a $arch \
d446 1
a446 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.54 2012/07/15 11:16:42 tg Exp $" />
@


1.54
log
@add support for InRelease files
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.53 2011/12/28 00:45:47 tg Exp $'
d48 1
a48 1
	ssh -o ControlPath=$tmpfnm "$target" "cat $tmpfnm.sig; rm -f $tmpfnm $tmpfnm.sig"
d444 1
a444 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.53 2011/12/28 00:45:47 tg Exp $" />
@


1.53
log
@no sense in making arch:all when we have only one arch:any, just use it for all others then to save time
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.52 2011/11/11 17:38:33 tg Exp $'
d4 1
a4 1
# Copyright (c) 2008, 2009, 2010, 2011
d156 2
a157 2
	print "\n===> Creating ${suite#dists/}/Release.gpg"
	rm -f $suite/Release*
d214 32
a245 4
	done) >$suite/Release
	cat $suite/Release-sha1 $suite/Release-sha2 >>$suite/Release
	rm $suite/Release-sha1 $suite/Release-sha2
	$gpg_remote gpg -u $repo_keyid -sb <$suite/Release >$suite/Release.gpg
d444 1
a444 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.52 2011/11/11 17:38:33 tg Exp $" />
@


1.52
log
@sanitise arch list (strip down; add hurd-i386 and sparc64)
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.51 2011/05/13 20:53:29 tg Exp $'
d119 1
d132 4
d143 1
d416 1
a416 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.51 2011/05/13 20:53:29 tg Exp $" />
@


1.51
log
@not as easy as it looked
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.50 2011/05/13 20:46:59 tg Exp $'
d36 3
a38 3
set -A dpkgarchs -- alpha amd64 arm armeb armel armhf avr32 hppa \
    i386 ia64 kfreebsd-amd64 kfreebsd-i386 lpia m32r m68k mips mipsel \
    powerpc powerpcspe ppc64 s390 s390x sh3 sh3eb sh4 sh4eb sparc
d410 1
a410 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.50 2011/05/13 20:46:59 tg Exp $" />
@


1.50
log
@generate SHA-1 and SHA-256 in the Release file for recent debootstrap ☹
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.49 2011/05/13 20:41:36 tg Exp $'
d163 4
a172 2
	print SHA1: >$suite/Release-sha1
	print SHA256: >$suite/Release-sha2
d206 5
a210 5
		print " $nsha1 $ns $n" >>$suite/Release-sha1
		print " $nsha2 $ns $n" >>$suite/Release-sha2
	done
	cat $suite/Release-sha1 $suite/Release-sha2
	rm $suite/Release-sha1 $suite/Release-sha2) >$suite/Release
d410 1
a410 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.49 2011/05/13 20:41:36 tg Exp $" />
@


1.49
log
@allow overriding the Suite in the Release file with “distribution”
(the Codename is our suite pathname and defined by it)
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.48 2011/05/13 13:30:31 tg Exp $'
d166 2
d169 2
d186 2
d189 1
d192 4
d200 2
d204 5
a208 1
	done) >$suite/Release
d408 1
a408 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.48 2011/05/13 13:30:31 tg Exp $" />
@


1.48
log
@• generate binary-all last, after binary-*
• DFN PCA is no longer, use Uni Mainz
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.47 2011/04/27 12:59:06 tg Exp $'
d103 1
d155 1
a155 1
		Suite: ${suite##*/}
d391 1
a391 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.47 2011/04/27 12:59:06 tg Exp $" />
@


1.47
log
@• fix possible use of trash value package-filename (was not cleared
  correctly like the other variables at end of package stanza)
• some fields may span multiple lines (Source:Binary for example)
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.46 2011/03/04 14:24:32 tg Exp $'
d118 5
a122 1
		for arch in $(sortlist -u ${distarchs[*]} ${dpkgarchs[*]}); do
d390 1
a390 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.46 2011/03/04 14:24:32 tg Exp $" />
d441 1
a441 1
  href="http://pgpkeys.pca.dfn.de/pks/lookup?search=${repo_keyid}&amp;op=vindex">${repo_keyid}</a>
@


1.46
log
@assorted minor fixes
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.45 2011/03/04 12:35:23 tg Exp $'
a225 2
		pn=; pv=; pd=; pp=; pN=; pf=

d227 1
d230 7
d239 1
d243 1
d247 1
d251 1
d254 1
d288 1
a288 1
				pn=; pv=; pd=; pp=
d297 1
d300 7
d309 1
d314 1
d318 1
d325 1
d329 1
d332 1
d369 1
a369 1
				pn=; pv=; pd=; pp=; pN=
d386 1
a386 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.45 2011/03/04 12:35:23 tg Exp $" />
@


1.45
log
@“proper” remote signing capabilities
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.44 2011/03/01 19:34:39 tg Exp $'
d23 2
a24 1
repo_keyid=0x405422DD		# gpg_remote='' (locally) or remsign
d361 1
a361 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.44 2011/03/01 19:34:39 tg Exp $" />
@


1.44
log
@add support for remote-signing
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.43 2010/12/04 19:35:03 tg Exp $'
d23 1
a23 1
repo_keyid=0x405422DD
d39 13
d360 1
a360 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.43 2010/12/04 19:35:03 tg Exp $" />
@


1.43
log
@smallish speed increase by caching MD5 and size of symlinked files
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.42 2010/12/04 19:31:12 tg Exp $'
d4 1
a4 1
# Copyright (c) 2008, 2009, 2010
d24 1
d173 1
a173 2
	gpg -u $repo_keyid -sb $suite/Release
	mv -f $suite/Release.sig $suite/Release.gpg
d347 1
a347 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.42 2010/12/04 19:31:12 tg Exp $" />
@


1.42
log
@tremendous speed increase: do not parse files multiple times (symlinks…)
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.41 2010/12/04 19:30:21 tg Exp $'
d56 12
d144 3
d149 22
a170 2
		set -A x -- $(md5sum $n)
		print \ ${x[0]} $(stat -c '%s %n' $n)
d347 1
a347 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.41 2010/12/04 19:30:21 tg Exp $" />
@


1.41
log
@bugfix in case binary package with epoch shows up
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.40 2010/11/22 23:35:47 tg Exp $'
d233 4
a236 1
		gzip -dc $dist/binary-*/Packages.gz |&
d312 1
a312 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.40 2010/11/22 23:35:47 tg Exp $" />
@


1.40
log
@put link for repo key
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.39 2010/11/17 19:11:41 tg Exp $'
d258 5
d309 1
a309 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.39 2010/11/17 19:11:41 tg Exp $" />
@


1.39
log
@add more architectures
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.38 2010/11/17 19:08:38 tg Exp $'
d304 1
a304 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.38 2010/11/17 19:08:38 tg Exp $" />
d353 4
a356 2
print " This repository uses ${repo_keyid} as signing key."
cat <<'EOF'
@


1.38
log
@if Contents-* files are there, include them in the Release file
(unlike debian-ports.org…)

Contents-m68k.gz files have the following format:
etc/default/auditd→     →       →       →       →       ····admin/auditd
etc/gdb/gdbinit→→       →       →       →       →       ····devel/gdb,devel/gdb-minimal
etc/init.d/auditd→      →       →       →       →       ····admin/auditd
etc/libaudit.conf→      →       →       →       →       ····libs/libaudit0
lib/libaudit.so.0→      →       →       →       →       ····libs/libaudit0

Basically: <filename><whitespace><section>/<package><newline>
where filename has no leading slash but is otherwise as in the
deb archive. (At least, this is what I gather…)
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.37 2010/11/06 15:15:00 tg Exp $'
d34 3
a36 2
set -A dpkgarchs -- alpha amd64 arm armeb armel avr32 hppa i386 ia64 lpia \
    m32r m68k mips mipsel powerpc ppc64 s390 s390x sh3 sh3eb sh4 sh4eb sparc
d304 1
a304 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.37 2010/11/06 15:15:00 tg Exp $" />
@


1.37
log
@point out notes, if existent, and key ID
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.36 2010/10/24 00:02:09 tg Exp $'
d131 1
a131 1
	for n in */{binary-*,source}/{Packag,Sourc}es*; do
d303 1
a303 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.36 2010/10/24 00:02:09 tg Exp $" />
@


1.36
log
@from man mksh:
  + o The second operand of the '!=' and '=' expressions are
        patterns (e.g. the comparison [[ foobar = f*r ]]
        succeeds). This even works indirectly:

              $ bar=foobar; baz='f*r'
              $ [[ $bar = $baz ]]; echo $?
              $ [[ $bar = "$baz" ]]; echo $?

        Perhaps surprisingly, the first comparision succeeds,
        whereas the second doesn't.
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.35 2010/04/17 18:04:11 tg Exp $'
d303 1
a303 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.35 2010/04/17 18:04:11 tg Exp $" />
d349 6
a354 1
 href="sources.txt">/etc/apt/sources.list</a> in order to use it.</p>
@


1.35
log
@work around #578162 and take into account it’ll be fixed RSN
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.34 2010/04/17 13:56:19 tg Exp $'
d73 1
a73 1
	[[ $suites = : || $suites = *:$suite:* ]] || continue
d91 1
a91 1
			if [[ $dpkgarchl != *:$arch:* ]]; then
d94 1
a94 1
			elif [[ $distarchl != *:$arch:* ]]; then
d151 1
a151 1
		[[ $pn = @@(#)* ]] && continue
d181 1
a181 1
			(@@(Package: )*)
d184 1
a184 1
			(@@(Version: )*)
d187 1
a187 1
			(@@(Binary: )*)
d190 1
a190 1
			(@@(Directory: )*)
d199 2
a200 2
						[[ ${sp_name[i]} = $pn && \
						    ${sp_dist[i]} = $distname ]] && break
d218 1
a218 1
							[[ ${preplsrc[j]} = $x ]] && break
d235 1
a235 1
			(@@(Package: )*)
d238 1
a238 1
			(@@(Source: )*)
d242 1
a242 1
			(@@(Version: )*)
d245 1
a245 1
			(@@(Description: )*)
d248 1
a248 1
			(@@(Architecture: )*)
d251 1
a251 1
			(@@(Filename: )*)
d261 2
a262 2
						[[ ${bp_disp[i]} = $pN && ${bp_desc[i]} = $pd && \
						    ${bp_dist[i]} = $distname ]] && break
d274 1
a274 1
							[[ ${preplsrc[j]} = $x ]] && break
d282 1
a282 1
					[[ $br$x$br = *@@($br$pv$br)* ]] || x=$x${x:+$br}$pv
d303 1
a303 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.34 2010/04/17 13:56:19 tg Exp $" />
d417 3
a419 3
			if [[ $pv = *@@()* ]]; then
				pvdsc=${pv%%@@()*}
				pv=${pv##*@@()}
d429 1
a429 1
						[[ ${preplsrc[j]} = $x ]] && break
d449 2
a450 2
		[[ ${bp_name[i]} = ${sp_name[num]} && \
		    ${bp_dist[i]} = ${sp_dist[num]} ]] || continue
d465 1
a465 1
						[[ ${preplsrc[j]} = $x ]] && break
d505 1
a505 1
					[[ ${preplsrc[j]} = $x ]] && break
@


1.34
log
@• add support for {,extra,source} override files
• use multiversion for Packages database to expose all .deb files

TODO: add suite-centric sight to debidx.htm in addition to package-centric
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.33 2010/04/13 19:41:39 tg Exp $'
d59 1
d109 5
a113 1
		dpkg-scansources $oef $osf $dist $ovf | \
d303 1
a303 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.33 2010/04/13 19:41:39 tg Exp $" />
@


1.33
log
@pimp the output (especially better for repos > a dozen packages)
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.32 2010/04/13 08:12:17 tg Exp $'
d80 4
d101 2
a102 1
				dpkg-scanpackages -a $arch $dist | \
d108 2
a109 1
		dpkg-scansources $dist | putfile $dist/source/Sources
d298 1
a298 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.32 2010/04/13 08:12:17 tg Exp $" />
@


1.32
log
@handle 「Source: foo (1.1)」
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.31 2010/04/10 20:38:26 tg Exp $'
d292 1
a292 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.31 2010/04/10 20:38:26 tg Exp $" />
d314 5
d322 10
d362 2
a363 3
print " <th>package name</th>"
print " <th>dist</th>"
print " <th>description</th>"
d365 1
a365 1
	print " <th>$suitename</th>"
d367 2
a386 1
	print " <td class=\"srcpkgname\">${sp_name[num]}</td>"
d392 1
a392 1
	print " <td class=\"srcpkgdesc\">Binary:${pd#,}</td>"
d430 1
a430 1
		print " <td class=\"srcpkgitem\">$y</td>"
d432 2
d445 1
a445 1
		print " <td class=\"binpkgdesc\" colspan=\"2\">${bp_desc[i]}</td>"
d473 1
a473 1
		print " <td class=\"srcpkgdesc\" colspan=\"2\">binary" \
a483 1
	print " <td class=\"binpkgname\">${bp_disp[i]}</td>"
d485 1
a485 1
	print " <td class=\"binpkgdesc\">${bp_desc[i]}</td>"
d500 1
a500 1
		print " <td class=\"binpkgitem\">$pv</td>"
d502 2
@


1.31
log
@we need an md5 entry for 0-byte files as well
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.30 2010/03/25 14:38:09 tg Exp $'
d229 1
d292 1
a292 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.30 2010/03/25 14:38:09 tg Exp $" />
@


1.30
log
@make adjusting for custom repos easier
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.29 2010/03/25 14:31:50 tg Exp $'
d121 1
a121 1
		[[ -f $n && -s $n ]] || continue
d291 1
a291 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.29 2010/03/25 14:31:50 tg Exp $" />
@


1.29
log
@• Always generate packages for “all” and “any” dpkg architecture (at the
  moment, linux only) and symlink these not explicitly listed in either
  normarchs, sitearchs, or distarchs to “all”
• Set normarchs (default set, former allarchs) to 「i386」
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.26 2010/02/25 10:41:41 tg Exp $'
d23 11
a35 1
ourkey=0x405422DD
d109 2
a110 2
		Origin: The MirOS Project
		Label: wtf
d116 1
a116 1
		Description: WTF ${nick} Repository
d125 1
a125 1
	gpg -u $ourkey -sb $suite/Release
d288 4
a291 2
 <title>MirDebian “WTF” Repository Index</title>
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.26 2010/02/25 10:41:41 tg Exp $" />
d318 3
a320 1
<h1>MirDebian “WTF” Repository</h1>
@


1.28
log
@Release doesn’t contain its own checksum, oeps…
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.27 2010/03/25 13:38:20 tg Exp $'
d22 3
a24 1
allarchs='all amd64 i386'
d31 16
a46 2
export LC_ALL=C TZ=UTC
unset LANG LANGUAGE
d50 4
d65 1
a65 2
	suitearchs=${archs:-$allarchs}
	set -A suiteallarchs
d69 1
d73 17
a89 8
		for arch in ${archs:-$suitearchs}; do
			IFS=:; st="${suiteallarchs[*]}"; IFS=$saveIFS
			[[ :$st: = *:$arch:* ]] || \
			    suiteallarchs[${#suiteallarchs[*]}]=$arch
			mkdir -p $dist/binary-$arch
			print "\n===> Creating ${dist#dists/}/$arch/Packages\n"
			dpkg-scanpackages -a $arch $dist | \
			    putfile $dist/binary-$arch/Packages
d91 1
a92 1
		print "\n===> Creating ${dist#dists/}/Sources"
d97 1
d103 2
a104 2
		Date: $(date)
		Architectures: ${suiteallarchs[*]} source
d110 2
a111 2
	find * -name Packages\* -o -name Sources\* | \
	    sort | while read n; do
d279 1
a279 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.27 2010/03/25 13:38:20 tg Exp $" />
a365 1
		saveIFS=$IFS
d479 1
a479 1
 • <small>Generated on $(date +'%F %T') by <tt
@


1.27
log
@The ability to override the per-suite archs per dist
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.26 2010/02/25 10:41:41 tg Exp $'
d80 1
a80 1
	find * -name Packages\* -o -name Sources\* -o -name Release | \
d249 1
a249 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.26 2010/02/25 10:41:41 tg Exp $" />
@


1.26
log
@be a little verbose, this helps debugging dpkg-scan* output
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.25 2009/10/03 18:35:57 tg Exp $'
d31 1
d45 2
a46 1
	: ${archs:=$allarchs}
d51 6
a56 1
		for arch in $archs; do
d74 1
a74 1
		Architectures: $archs source
d249 1
a249 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.25 2009/10/03 18:35:57 tg Exp $" />
@


1.25
log
@The ability to have more than one Source (not Binary though) per package
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.24 2009/05/27 22:42:31 tg Exp $'
d4 1
a4 1
# Copyright (c) 2008, 2009
d51 1
d56 1
d58 1
d60 1
d82 2
d242 1
a242 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.24 2009/05/27 22:42:31 tg Exp $" />
d449 1
@


1.24
log
@fix broken .dsc links for copied-from sources
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.23 2009/04/30 22:41:01 tg Exp $'
d139 8
a146 1
					(( i == nsrc )) && let nsrc++
d159 2
a160 2
					eval sp_ver_${suitename}[i]=\$pv
					eval sp_dir_${suitename}[i]=\$pp/
d236 1
a236 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.23 2009/04/30 22:41:01 tg Exp $" />
d321 32
a352 18
		eval pv=\${sp_ver_${suitename}[num]}
		eval pp=\${sp_dir_${suitename}[num]}
		if [[ $pv = *@@()* ]]; then
			pvdsc=${pv%%@@()*}
			pv=${pv##*@@()}
		else
			pvdsc=$pv
		fi
		if [[ -z $pv ]]; then
			pv=-
			if (( nrpl )); then
				x=${suitename}/${sp_dist[num]}/${sp_name[num]}/%
				j=0
				while (( j < nrpl )); do
					[[ ${preplsrc[j]} = $x ]] && break
					let j++
				done
				(( j < nrpl )) && pv=${prepldst[j]}
d354 5
a358 5
		elif [[ $pp != ?(/) ]]; then
			pv="<a href=\"$pp${sp_name[num]}_${pvdsc##+([0-9]):}.dsc\">$pv</a>"
		fi
		[[ $pp != ?(/) ]] && pv="<a href=\"$pp\">[dir]</a> $pv"
		print " <td class=\"srcpkgitem\">$pv</td>"
@


1.23
log
@more fixes
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.22 2009/04/30 22:36:37 tg Exp $'
d150 1
a150 1
						(( j < nrpl )) && pv="from ${prepldst[j]}"
d229 1
a229 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.22 2009/04/30 22:36:37 tg Exp $" />
d316 6
d334 1
a334 1
			pv="<a href=\"$pp${sp_name[num]}_${pv##+([0-9]):}.dsc\">$pv</a>"
@


1.22
log
@missed some cases
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.21 2009/04/30 22:30:30 tg Exp $'
d229 1
a229 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.21 2009/04/30 22:30:30 tg Exp $" />
a315 1
		pN=
d317 1
d325 1
a325 1
				(( j < nrpl )) && pN=${prepldst[j]}
a326 1
			pv=${pN:--}
d334 3
a336 3
	j=0
	while (( j < nbin )); do
		(( (i = bp_sort[j++]) < 0 )) && continue
d339 1
a339 1
		bp_sort[j - 1]=-1
d347 12
a358 1
			[[ -n $pv ]] || pv=${pN:--}
d389 1
d397 1
a397 1
				(( j < nrpl )) && pN=${prepldst[j]}
a398 1
			pv=${pN:--}
@


1.21
log
@+ source copies
+ isinupstream markers
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.20 2009/04/30 22:14:01 tg Exp $'
d88 1
a88 1
		if [[ $pn != +([a-z0-9_])/+([a-z0-9_-])/+([!/])/+([a-z0-9]) || \
d229 1
a229 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.20 2009/04/30 22:14:01 tg Exp $" />
d316 1
a317 1
			pv=-
d319 1
a319 1
				x=${suitename}/${sp_dist[num]}/%/${sp_name[num]}
d325 1
a325 1
				(( j < nrpl )) && pv=${prepldst[j]}
d327 1
d348 1
a348 1
			[[ -z $pv ]] && pv=-
d378 12
a389 1
		[[ -z $pv ]] && pv=-
@


1.20
log
@be more descriptive
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.19 2009/04/30 22:08:39 tg Exp $'
d143 9
d229 1
a229 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.19 2009/04/30 22:08:39 tg Exp $" />
d318 9
@


1.19
log
@allow for an mkdebidx.lnk override file listing hardlinked packages,
e.g. lenny→sid, for transitional recognisation
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.18 2009/03/24 15:41:28 tg Exp $'
d220 1
a220 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.18 2009/03/24 15:41:28 tg Exp $" />
d261 1
a261 1
	print -n " <li><a href=\"$suite/\">$desc</a> (dists:"
@


1.18
log
@$pp always ends with a / so don’t dup it
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.17 2009/03/24 15:40:40 tg Exp $'
d78 3
a80 1
integer nsrc=0 nbin=0
d83 15
d189 9
a197 1
					eval x=\${bp_ver_${suitename}[i]}
d200 1
d220 1
a220 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.17 2009/03/24 15:40:40 tg Exp $" />
@


1.17
log
@cut off the epoch off the .dsc files *grml*
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.16 2009/03/24 14:41:41 tg Exp $'
d194 1
a194 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.16 2009/03/24 14:41:41 tg Exp $" />
d284 1
a284 1
			pv="<a href=\"$pp/${sp_name[num]}_${pv##+([0-9]):}.dsc\">$pv</a>"
@


1.16
log
@link to [dir] and .dsc
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.15 2009/03/24 08:19:49 tg Exp $'
d194 1
a194 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.15 2009/03/24 08:19:49 tg Exp $" />
d284 1
a284 1
			pv="<a href=\"$pp/${sp_name[num]}_${pv}.dsc\">$pv</a>"
@


1.15
log
@numbers are, of course, okay
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.14 2009/03/23 16:29:04 tg Exp $'
d194 1
a194 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.14 2009/03/23 16:29:04 tg Exp $" />
d281 6
a286 2
		[[ -z $pv ]] && pv=-
		[[ $pp != ?(/) ]] && pv="<a href=\"$pp\">$pv</a>"
@


1.14
log
@use the .gz files, not the normal ones; Debian doesn’t provide them
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.12 2009/03/23 16:27:22 tg Exp $'
d85 1
a85 1
		if [[ $suitename != +([a-z_]) ]]; then
d90 1
a90 1
		if [[ $distname != +([a-z_-]) ]]; then
d194 1
a194 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.12 2009/03/23 16:27:22 tg Exp $" />
@


1.12
log
@ignore invalid site and dist names by continue instead of exit 1

XXX tr - into _ – but then, this needs deeper changes
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.11 2009/03/23 16:00:17 tg Exp $'
d97 2
a98 1
		while IFS= read -r line; do
d133 1
a133 1
		done <$dist/source/Sources
d135 1
a135 1
		cat $dist/binary-*/Packages |&
d194 1
a194 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.11 2009/03/23 16:00:17 tg Exp $" />
@


1.11
log
@merge by binary package name, not by source package name
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.10 2009/03/23 15:58:45 tg Exp $'
d87 1
a87 1
			exit 1
d92 1
a92 1
			exit 1
d193 1
a193 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.10 2009/03/23 15:58:45 tg Exp $" />
@


1.10
log
@ok, no - in suitename due to use of eval
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.9 2009/03/23 15:58:02 tg Exp $'
d162 1
a162 1
						[[ ${bp_name[i]} = $pn && ${bp_desc[i]} = $pd && \
d193 1
a193 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.9 2009/03/23 15:58:02 tg Exp $" />
@


1.9
log
@allow - and _ in dist and suite names
e.g. non-free
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.8 2009/03/23 10:06:40 tg Exp $'
d85 1
a85 1
		if [[ $suitename != +([a-z_-]) ]]; then
d193 1
a193 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.8 2009/03/23 10:06:40 tg Exp $" />
@


1.8
log
@link to the .deb files
XXX bites duplicate detection
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.7 2009/03/23 09:59:22 tg Exp $'
d85 1
a85 1
		if [[ $suitename != +([a-z]) ]]; then
d90 1
a90 1
		if [[ $distname != +([a-z]) ]]; then
d193 1
a193 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.7 2009/03/23 09:59:22 tg Exp $" />
@


1.7
log
@typo
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.6 2009/03/23 09:43:04 tg Exp $'
d95 1
a95 1
		pn=; pv=; pd=; pp=; pN=
d152 3
d172 1
d193 1
a193 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.6 2009/03/23 09:43:04 tg Exp $" />
@


1.6
log
@fix the -ENOENT part
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.5 2009/03/23 09:23:22 tg Exp $'
d44 1
a44 1
	: ${archs:=allarchs}
d189 1
a189 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.5 2009/03/23 09:23:22 tg Exp $" />
@


1.5
log
@improve output further
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.4 2009/03/20 18:48:48 tg Exp $'
d189 1
a189 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.4 2009/03/20 18:48:48 tg Exp $" />
d307 3
a309 3
		print " <td class=\"srcpkgname\">-ENOENT</td>"
		print " <td class=\"srcpkgdesc\">binary packages without a matching" \
		    "source package</td>"
d320 2
a321 1
	print " <td class=\"binpkgdesc\">[${bp_dist[i]}] ${bp_desc[i]}</td>"
@


1.4
log
@improve signing
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.3 2009/03/20 18:45:02 tg Exp $'
d106 1
a106 7
				pd=
				for x in $(tr ', ' '\n' \
				    <<<"${line##Binary:*([	 ])}" | \
				    sort); do
					pd="$pd, $x"
				done
				pd=Binary:${pd#,}
d117 1
a117 1
						[[ ${sp_name[i]} = $pn && ${sp_desc[i]} = $pd && \
d127 1
a127 1
					sp_desc[i]=$pd
d189 1
a189 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.3 2009/03/20 18:45:02 tg Exp $" />
d243 1
d267 6
a272 1
	print " <td class=\"srcpkgdesc\">[${sp_dist[num]}] ${sp_desc[num]}</td>"
d291 1
a291 1
		print " <td class=\"binpkgdesc\">${bp_desc[i]}</td>"
@


1.3
log
@Packages and Sources files do end with a newline \o/
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.2 2009/03/20 18:37:09 tg Exp $'
d23 1
d74 1
a74 1
	gpg -sb $suite/Release
d195 1
a195 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.2 2009/03/20 18:37:09 tg Exp $" />
@


1.2
log
@Release file improvements
@
text
@d2 1
a2 1
rcsid='$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.1 2009/03/20 18:29:36 tg Exp $'
d94 3
a96 2
		print | cat $dist/source/Sources - |&
		while IFS= read -pr line; do
d137 1
a137 1
		done
d139 1
a139 5
		pN=
		for x in $dist/binary-*/Packages; do
			cat $x
			print
		done |&
d194 1
a194 1
 <meta name="generator" content="$MirOS: contrib/hosted/tg/deb/mkdebidx.sh,v 1.1 2009/03/20 18:29:36 tg Exp $" />
@


1.1
log
@save the first cut of the index script
@
text
@d2 1
a2 1
rcsid='$MirOS$'
d22 1
a22 1
allarchs='amd64 i386'
d44 1
d47 1
d62 2
a63 2
		Architectures: $archs
		Components: main
d197 1
a197 1
 <meta name="generator" content="$MirOS$" />
@

