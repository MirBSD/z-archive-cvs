head	1.9;
access;
symbols
	arngc-20141220:1.8
	arngc-20131024:1.5
	arngc-20131023:1.4
	arngc-20130222:1.3
	arngc-20120509:1.2;
locks; strict;
comment	@# @;


1.9
date	2019.09.10.20.30.17;	author tg;	state dead;
branches;
next	1.8;
commitid	1005D7807F135496775;

1.8
date	2014.07.08.13.00.18;	author tg;	state Exp;
branches;
next	1.7;
commitid	10053BBEB67504225A6;

1.7
date	2014.07.04.22.02.05;	author tg;	state Exp;
branches;
next	1.6;
commitid	10053B724727AFA5106;

1.6
date	2014.07.04.21.40.38;	author tg;	state Exp;
branches;
next	1.5;
commitid	10053B71F6F088CAF13;

1.5
date	2013.10.24.09.32.36;	author tg;	state Exp;
branches;
next	1.4;
commitid	1005268E9432ECC15F6;

1.4
date	2013.10.23.21.26.24;	author tg;	state Exp;
branches;
next	1.3;
commitid	10052683F1479694248;

1.3
date	2013.01.20.18.18.53;	author tg;	state Exp;
branches;
next	1.2;
commitid	10050FC35254BC8D5AE;

1.2
date	2012.05.09.11.10.52;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004FAA50A32C0DB346;

1.1
date	2011.08.04.20.39.03;	author tg;	state Exp;
branches;
next	;
commitid	1004E3B037D69451D90;


desc
@@


1.9
log
@drop these repos, maintained in http://www.mirbsd.org/~tg/Debs/
@
text
@#!/bin/mksh
# $MirOS: contrib/hosted/tg/deb/arngc/arngc,v 1.8 2014/07/08 13:00:18 tg Exp $
#-
# Copyright © 2011, 2013, 2014
#	Thorsten Glaser <tg@@mirbsd.org>
# Copyright © 2012, 2014
#	Thorsten Glaser <t.glaser@@tarent.de>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un‐
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person’s immediate fault when using the work as intended.

me=$(realpath "$0")
export PATH=/bin:/sbin:/usr/bin:/usr/sbin

if (( USER_ID )); then
	if [[ -n $arngc_FOO && $arngc_FOO = $arngc_BAR ]]; then
		print -u2 Error: need superuser
		exit 2
	fi
	arngc_FOO=$RANDOM$me$RANDOM$USER_ID$(date +$s)
	arngc_BAR=$arngc_FOO
	export arngc_FOO arngc_BAR
	exec sudo mksh "$me" "$@@"
	print -u2 NOTREACHED
	exit 255
fi

case $1 {
(status)
	if ! pkill -USR1 rngd; then
		print -u2 no process running?
		exit 1
	fi
	print -u2 watch syslog for status
	exit 0
	;;
(stop)
	rv=0
	for p in arngc-slrd rngd; do
		print -nu2 killing all $p processes...
		if ! pkill $p; then
			print -u2 none found
			rv=1
		fi
		print -u2 done
	done
	exit $rv
	;;
(start)
	;;
(*)
	print -ru2 "syntax: $me (start [server:port [threshold]]|stop|status)"
	exit 2
	;;
}

if opid=$(pgrep rngd); then
	print -ru2 Error: rngd already running on pid $opid
	exit 1
fi

if [[ ! -e /proc/self/fd/0 ]]; then
	print -u2 no stdin: /proc/self/fd/0
	exit 2
fi

threshold=3072
server=

if [[ -s /etc/arngc.cfg ]]; then
	while read key value; do
		case $key {
		(threshold)
			[[ $value = +([0-9]) ]] && \
			    (( value > 0 && value <= 4096 )) && \
			    threshold=$((value))
			;;
		(server)
			[[ $value = +([0-9]).+([0-9]).+([0-9]).+([0-9]):+([0-9]) ]] && \
			    server=$value
			;;
		}
	done </etc/arngc.cfg
fi

[[ $2 = +([0-9]).+([0-9]).+([0-9]).+([0-9]):+([0-9]) ]] && server=$2
value=$3; [[ $value = +([0-9]) ]] && (( value > 0 && value <= 4096 )) && threshold=$((value))

if [[ $server != +([0-9]).+([0-9]).+([0-9]).+([0-9]):+([0-9]) ]]; then
	print -u2 You must configure a server like 6.7.8.9:12345
	print -u2 either on the command line or in /etc/arngc.cfg
	exit 2
fi

if ! T=$(mktemp -d /tmp/XXXXXXXX) || [[ ! -d $T/. ]]; then
	print -u2 cannot create temporary directory
	exit 255
fi

use4=0
for prog in stunnel4 stunnel; do
	prog=$(whence -p $prog)
	[[ -n $prog && -x $prog ]] || continue
	x=$("$prog" -version 2>&1 | grep '^stunnel [0-9]')
	[[ $x = 'stunnel '[4-9]* ]] || continue
	use4=1
	break
done
function doscript {
	print -r "server='$server' threshold='$threshold'"
	print -r "T='${T//\'/\'\\\'\'}'"
	print "function runtunnel {"
	if (( use4 )); then
		print -r "	prog='${prog//\'/\'\\\'\'}'"
		cat >"$T/control" <<-EOF
			client = yes
			connect = $server
			socket = r:SO_KEEPALIVE=1
			socket = r:TCP_KEEPCNT=4
			socket = r:TCP_KEEPIDLE=40
			socket = r:TCP_KEEPINTVL=5
		EOF
		print -r '	"$prog" "$T/control"'
	else
		print -r '	stunnel -c -r "$server"'
	fi
	cat <<-'EOF'
		}
		function runchain {
			/usr/lib/stunnel/arngc-slrd | runtunnel | \
			    rngd -f -r /proc/self/fd/0 -H 0.99 -B 2 \
			    -s 32 -W "$threshold" -t 300 -T 60
		}
		runchain </dev/urandom 2>&1 | logger -t arngc &
		sleep 60
		rm -rf "$T"
	EOF
}
doscript >"$T/arngc2"

echo $threshold >/proc/sys/kernel/random/write_wakeup_threshold
cd /
mksh -T- "$T/arngc2"
sleep 0.25
print -u2 It may take up to one minute to decide whether rngd works.
print -u2 Get statistics into syslog with: sudo pkill -USR1 rngd
exit 0
@


1.8
log
@tear down arngc-slrd too on “stop”; implement keepalives
@
text
@d2 1
a2 1
# $MirOS: contrib/hosted/tg/deb/arngc/arngc,v 1.7 2014/07/04 22:02:05 tg Exp $
@


1.7
log
@grml…
@
text
@d2 1
a2 1
# $MirOS: contrib/hosted/tg/deb/arngc/arngc,v 1.5 2013/10/24 09:32:36 tg Exp $
d6 1
a6 1
# Copyright © 2012
d50 10
a59 7
	print -nu2 killing all rngd processes...
	if ! pkill rngd; then
		print -u2 none found
		exit 1
	fi
	print -u2 done
	exit 0
d130 4
@


1.6
log
@tweak
@
text
@d114 1
a114 1
	[[ $x = 'stunnel 4'* ]] || continue
@


1.5
log
@implementing the “back direction” appears to be enough to fix this issue
@
text
@d2 1
a2 1
# $MirOS: contrib/hosted/tg/deb/arngc/arngc,v 1.3 2013/01/20 18:18:53 tg Exp $
d4 1
a4 1
# Copyright © 2011, 2013
d128 1
a128 1
		print -r '	"$prog" -fd 4 4<"$T/control"'
@


1.4
log
@work around an OpenSSL bug ☹
@
text
@a126 1
			options = DONT_INSERT_EMPTY_FRAGMENTS
d134 6
a139 4
		runtunnel </dev/null 2>/dev/null | rngd -f \
		    -r /proc/self/fd/0 -H 0.99 -B 2 -s 32 \
		    -W "$threshold" -t 300 -T 60 2>&1 | \
		    logger -t arngc &
@


1.3
log
@add a sleep, so a busy m68k buildd (slow) will not have trouble reading the config before it’s rm(1)d
@
text
@d2 1
a2 1
# $MirOS: contrib/hosted/tg/deb/arngc/arngc,v 1.2 2012/05/09 11:10:52 tg Exp $
d127 1
@


1.2
log
@develop code to drive stunnel4 directly if detected, instead of using
the stunnel wrapper to have version 3 behaviour; clean up process list;
also add a caveat to the manpage re. the errorlevel
@
text
@d2 1
a2 1
# $MirOS: contrib/hosted/tg/deb/arngc/arngc,v 1.1 2011/08/04 20:39:03 tg Exp $
d4 1
a4 1
# Copyright © 2011
d138 1
@


1.1
log
@we must do it with a package, due to the lenny+hardy version being broken, how very annoying
@
text
@d2 1
a2 1
# $MirOS: contrib/hosted/tg/arngc,v 1.4 2011/08/04 19:26:52 tg Exp $
d6 2
d104 39
d144 2
a145 3
mksh -T- -c 'stunnel -c -r '$server' </dev/null 2>/dev/null | \
    rngd -f -r /proc/self/fd/0 -H 0.99 -B 2 -s 32 -W '$threshold' -t 300 -T 60 2>&1 | \
    logger -t arngc'
@

