head	1.4;
access;
symbols
	arngc-20141220:1.2
	arngc-20131024:1.1;
locks; strict;
comment	@ * @;


1.4
date	2019.09.10.20.30.17;	author tg;	state dead;
branches;
next	1.3;
commitid	1005D7807F135496775;

1.3
date	2015.03.01.16.02.50;	author tg;	state Exp;
branches;
next	1.2;
commitid	10054F3383E4E01EF7A;

1.2
date	2014.07.08.13.00.19;	author tg;	state Exp;
branches;
next	1.1;
commitid	10053BBEB67504225A6;

1.1
date	2013.10.24.09.32.36;	author tg;	state Exp;
branches;
next	;
commitid	1005268E9432ECC15F6;


desc
@@


1.4
log
@drop these repos, maintained in http://www.mirbsd.org/~tg/Debs/
@
text
@#include <sys/types.h>
#include <stdbool.h>
#include <stdint.h>
#include <unistd.h>

static const char __rcsid[] = "$MirOS: contrib/hosted/tg/deb/arngc/arngc-slrd.c,v 1.3 2015/03/01 16:02:50 tg Exp $";

static const char errmsg[] = "arngc-slrd: I/O failed, first and only message\n";

int
main(void)
{
	size_t sz;
	unsigned int slp;
	bool messaged = false;
	uint8_t buf[16];

 mainloop:
	if (((sz = read(STDIN_FILENO, buf, sizeof(buf))) == (size_t)-1) ||
	    (sz && (size_t)write(STDOUT_FILENO, buf, sz) != sz)) {
		if (!messaged) {
			sz = write(STDERR_FILENO, errmsg, sizeof(errmsg) - 1);
			messaged = sz == sizeof(errmsg) - 1;
		}
	}
	/* three keepalives, then our request 10s before the fourth one */
	slp = 150;
	while ((slp = sleep(slp)))
		;	/* nothing */
	goto mainloop;

	/* NOTREACHED */
	return (255);
}
@


1.3
log
@KNF
@
text
@d6 1
a6 1
static const char __rcsid[] = "$MirOS: contrib/hosted/tg/deb/arngc/arngc-slrd.c,v 1.2 2014/07/08 13:00:19 tg Exp $";
@


1.2
log
@tear down arngc-slrd too on “stop”; implement keepalives
@
text
@d6 1
a6 1
static const char __rcsid[] = "$MirOS: contrib/hosted/tg/deb/arngc/arngc-slrd.c,v 1.1 2013/10/24 09:32:36 tg Exp $";
d29 1
a29 1
		/* nothing */;
@


1.1
log
@implementing the “back direction” appears to be enough to fix this issue
@
text
@d6 1
a6 1
static const char __rcsid[] = "$MirOS$";
d16 1
a16 1
	uint8_t buf[32];
d26 2
a27 1
	slp = 240;
@

