head	1.14;
access;
symbols;
locks; strict;
comment	@# @;
expand	@b@;


1.14
date	2019.08.28.15.35.51;	author tg;	state Exp;
branches;
next	1.13;
commitid	1005D669F4E472A5FBC;

1.13
date	2019.08.05.17.08.52;	author tg;	state Exp;
branches;
next	1.12;
commitid	1005D4862B270BFE7B7;

1.12
date	2018.12.05.20.21.13;	author tg;	state Exp;
branches;
next	1.11;
commitid	1005C083342544449CC;

1.11
date	2018.03.03.00.01.33;	author tg;	state Exp;
branches;
next	1.10;
commitid	1005A99E5F73E988B6A;

1.10
date	2017.11.23.19.17.05;	author tg;	state Exp;
branches;
next	1.9;
commitid	1005A171EB5536D3B0E;

1.9
date	2017.02.16.09.46.36;	author tg;	state Exp;
branches;
next	1.8;
commitid	10058A575140A1AF458;

1.8
date	2016.11.07.15.50.05;	author tg;	state Exp;
branches;
next	1.7;
commitid	1005820A2BF2846EDF7;

1.7
date	2016.09.12.12.33.11;	author tg;	state Exp;
branches;
next	1.6;
commitid	10057D6A07F3FF2A201;

1.6
date	2016.09.02.17.59.44;	author tg;	state Exp;
branches;
next	1.5;
commitid	10057C9BE215D9AAD2B;

1.5
date	2016.09.02.17.42.06;	author tg;	state Exp;
branches;
next	1.4;
commitid	10057C9B9FC5C79D0B2;

1.4
date	2016.09.02.15.33.28;	author tg;	state Exp;
branches;
next	1.3;
commitid	10057C99BD737914E60;

1.3
date	2016.07.28.14.30.56;	author tg;	state Exp;
branches;
next	1.2;
commitid	100579A17396E816139;

1.2
date	2016.07.27.15.55.53;	author tg;	state Exp;
branches;
next	1.1;
commitid	1005798D99C37346C4E;

1.1
date	2016.07.27.15.50.32;	author tg;	state Exp;
branches;
next	;
commitid	1005798D8577FDCC899;


desc
@@


1.14
log
@Danke, Tom. (NICHT!) üê¨‚É†
@
text
@[user]
	name = mirabilos
	email = m@@mirbsd.org
	signingkey = 0xE99007E0
[gc]
	auto = 0
	autopacklimit = 0
[push]
	default = simple
[alias]
	check-emptylines = "!git find -gitfiles -print0 | xargs -0r mksh -c 'pcregrep -l -M $'\\''\\n\\n\\n'\\'' \"$@@\"; test $? -eq 1' git-check-emptylines-helper"
	check-whitespace = "!git diff --check $(git hash-object -t tree /dev/null) --; git find -gitfiles | grep -Evi '\\.(png|jpe?g|gif|deb|rpm|vpp|rtf)$' | while IFS= read -r name; do test -z \"$(tail -c -1 \"$name\")\" || printf '%s: no newline at EOF\\n' \"$name\"; done"
	fetch-stash = "!r=${1:-origin}; git fetch --verbose \"$r\" +refs/stash:refs/remotes/\"$r\"/stash && echo \" ‚Ä£ git stash apply '$r/stash'\" #"
	lg = log --decorate=short --pretty='%Cred%h%Creset - %Cgreen%cd%Creset %C(bold blue)<%an>%Creset %s%C(yellow)%d%Creset' --date=format-local:'%a %F %T' --graph --color=auto
	ls = "!cd \"${GIT_PREFIX:-.}\" && git find -- \"$@@\" -ls #"
	mr = "!r=$1 mr=$2; test -n \"$mr\" || r=origin mr=$1; git fetch \"$r\" \"merge-requests/$mr/head:refs/mr/$mr\" && echo \" ‚Ä£ git log refs/mr/$mr\" #"
	pr = "!r=$1 pr=$2; test -n \"$pr\" || r=origin pr=$1; git fetch \"$r\" \"pull/$pr/head:refs/pr/$pr\" && echo \" ‚Ä£ git log refs/pr/$pr\" #"
	wdiff = diff --word-diff=color
	wdiffc = diff --word-diff=color --word-diff-regex=.
[color]
	ui = auto
[core]
	quotePath = false
[url "git@@github.com:"]
	insteadOf = https://github.com/
	insteadOf = http://github.com/
	insteadOf = git://github.com/
	insteadOf = git://git@@github.com:
	pushInsteadOf = https://github.com/
	pushInsteadOf = http://github.com/
	pushInsteadOf = git://github.com/
	pushInsteadOf = git://git@@github.com:
[url "git@@edugit.org:"]
	insteadOf = https://edugit.org/
	pushInsteadOf = https://edugit.org/
[url "git@@salsa.debian.org:"]
	insteadOf = https://salsa.debian.org/
	pushInsteadOf = https://salsa.debian.org/
@


1.13
log
@‚Äúgit mr‚Äù‚Ää‚Äî‚Ää‚Äúgit pr‚Äù equivalent for Gitlab
@
text
@d33 1
a33 1
[url "gitlab@@edugit.org:"]
@


1.12
log
@add 'git pr [origin] pullrequestnumber' for github

also, drop dead git.debian.org
@
text
@d16 1
@


1.11
log
@add fetch-stash ($1=remote) and ls aliases; add edugit and salsa insteadOf configuration
@
text
@d16 1
a22 19
[url "git://git.debian.org/d-i/"]
	insteadOf = git+ssh://git.debian.org/git/d-i/
[url "git+ssh://git.debian.org/git/"]
	insteadOf = https://anonscm.debian.org/git/
	insteadOf = http://anonscm.debian.org/git/
	insteadOf = https://anonscm.debian.org/cgit/
	insteadOf = https://alioth.debian.org/anonscm/git/
	insteadOf = http://git.debian.org/git/
	insteadOf = git://anonscm.debian.org/
	insteadOf = git://alioth.debian.org/git/
	insteadOf = git://git.debian.org/
	pushInsteadOf = https://anonscm.debian.org/git/
	pushInsteadOf = http://anonscm.debian.org/git/
	pushInsteadOf = https://anonscm.debian.org/cgit/
	pushInsteadOf = https://alioth.debian.org/anonscm/git/
	pushInsteadOf = http://git.debian.org/git/
	pushInsteadOf = git://anonscm.debian.org/
	pushInsteadOf = git://alioth.debian.org/git/
	pushInsteadOf = git://git.debian.org/
@


1.10
log
@make ‚Äúgit lg‚Äù have nicer output, also, no colour when not to a tty(4)
@
text
@d13 1
d15 1
d50 6
@


1.9
log
@missing ‚Ç¨
@
text
@d13 1
a13 1
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cd) %C(bold blue)<%an>%Creset' --abbrev-commit --date=local
@


1.8
log
@new insteadOfs
@
text
@d12 1
a12 1
	check-whitespace = "!git diff --check $(git hash-object -t tree /dev/null) --; git find -gitfiles | grep -Evi '\\.(png|jpe?g|gif|deb|rpm|vpp|rtf)' | while IFS= read -r name; do test -z \"$(tail -c -1 \"$name\")\" || printf '%s: no newline at EOF\\n' \"$name\"; done"
@


1.7
log
@cooler check-emptylines errorlevel; add *.rtf to check-whitespace exclusion list
@
text
@d23 5
d29 1
d31 5
d37 1
d41 3
d45 3
@


1.6
log
@require latest git-find to auto-exclude symlinks from being searched
@
text
@d11 2
a12 2
	check-emptylines = !git find -gitfiles -print0 | xargs -0r pcregrep -l -M $'\\n\\n\\n'
	check-whitespace = "!git diff --check $(git hash-object -t tree /dev/null) --; git find -gitfiles | grep -Evi '\\.(png|jpe?g|gif|deb|rpm|vpp)' | while IFS= read -r name; do test -z \"$(tail -c -1 \"$name\")\" || printf '%s: no newline at EOF\\n' \"$name\"; done"
@


1.5
log
@use git-find for check-emptylines now that it searches the index too
@
text
@d11 2
a12 2
	check-emptylines = !git find -print0 | xargs -0r pcregrep -l -M $'\\n\\n\\n'
	check-whitespace = "!git diff --check $(git hash-object -t tree /dev/null) --; git find | grep -Evi '\\.(png|jpe?g|gif|deb|rpm|vpp)' | while IFS= read -r name; do test -h \"$name\" && continue; test -z \"$(tail -c -1 \"$name\")\" || printf '%s: no newline at EOF\\n' \"$name\"; done"
@


1.4
log
@git check-whitespace first half now checks the current working copy
@
text
@d11 1
a11 1
	check-emptylines = !git ls-tree -r --name-only -z HEAD | env LC_ALL=C sort -z | xargs -0r pcregrep -l -M $'\\n\\n\\n'
@


1.3
log
@pasto
@
text
@d12 1
a12 1
	check-whitespace = "!git diff-tree --check $(git hash-object -t tree /dev/null) HEAD; git find | grep -Evi '\\.(png|jpe?g|gif|deb|rpm|vpp)' | while IFS= read -r name; do test -h \"$name\" && continue; test -z \"$(tail -c -1 \"$name\")\" || printf '%s: no newline at EOF\\n' \"$name\"; done"
@


1.2
log
@cease requiring https://github.com/mirabilos/git-find
@
text
@d15 1
a15 1
	wdiffc = diff --word-diff=color --word-diff-regex.
@


1.1
log
@back up my ~/.gitconfig ‚Äì also serves as example for others
@
text
@d11 1
a12 1
	check-emptylines = !git find -print0 | xargs -0r pcregrep -l -M $'\\n\\n\\n'
d23 2
a26 2
	insteadOf = git://anonscm.debian.org/
	insteadOf = git://git.debian.org/
@

