head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2011.07.18.00.35.42;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004E237FF1656D5846;

1.2
date	2011.07.06.22.22.04;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004E14E010182825E7;

1.1
date	2009.11.29.17.56.51;	author tg;	state Exp;
branches;
next	;
commitid	1004B12B53704274E9F;


desc
@@


1.3
log
@now that I got Hash.cs compiled and run, I’m amazed; make NZAAT (and NZAT!) all green with a small tweak; bit distribution and χ2 look OK as well
@
text
@/*-
 * Copyright (c) 2009, 2011
 *	Thorsten Glaser <tg@@mirbsd.org>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 *-
 * arc4random_pushb for Android (and mksh on it)
 *
 * This basically assumes we're root, have /dev/urandom and can write
 * to it, with OpenBSD/Linux semantics. When we are not root, the en-
 * tropy is *LOST*, so this is not generic!
 */

static const char __rcsid[] =
    "$MirOS: contrib/hosted/tg/arc4rootdom.c,v 1.2 2011/07/06 22:22:04 tg Exp $";

#include <sys/param.h>
#include <sys/types.h>
#include <sys/time.h>
#include <fcntl.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

uint32_t arc4random_pushb(const void *, size_t);

#ifndef MIN
#define	MIN(a,b)	(((a)<(b))?(a):(b))
#endif

#ifndef MAX
#define	MAX(a,b)	(((a)>(b))?(a):(b))
#endif

uint32_t
arc4random_pushb(const void *buf, size_t len)
{
	size_t j;
	int fd;
	union {
		uint8_t buf[256];
		struct {
			struct timeval tv;
			const void *sp, *dp;
			size_t sz;
			uint32_t vu;
		} s;
	} uu;
	struct {
		uint32_t h;
		uint16_t u;
		uint8_t k[8];
	} av;

	memcpy(uu.buf, __rcsid, MIN(sizeof(uu.buf), sizeof(__rcsid)));

	{
		register uint32_t h;
		register size_t n = 0;
		register uint8_t c;

		av.u = arc4random() & 0xFFFF;
		uu.s.sp = &uu;
		uu.s.dp = buf;
		uu.s.sz = len;
		uu.s.vu = arc4random();
		gettimeofday(&uu.s.tv, NULL);

		h = arc4random();
		j = 0;
		while (j < sizeof(uu.s)) {
			h += ((uint8_t *)&uu)[j++];
			++h;
			h += h << 10;
			h ^= h >> 6;
		}
		j = MAX(len, sizeof(uu.s));

		while (n < j) {
			c = ((const uint8_t *)buf)[n % len];
			uu.buf[n % sizeof(uu.buf)] ^= c;
			h += c;
			++h;
			h += h << 10;
			h ^= h >> 6;
			++n;
		}

		len = MIN(sizeof(uu), j);
		h += h << 10;
		h ^= h >> 6;
		h += h << 3;
		h ^= h >> 11;
		h += h << 15;
		av.h = h;
	}

	if ((fd = open("/dev/urandom", O_RDWR)) != -1) {
		av.u += write(fd, &uu, len);
		av.u += read(fd, av.k, sizeof(av.k));
		av.u += close(fd);
	}
	av.u += fd;

	arc4random_addrandom((void *)&av, sizeof(av));
	return (arc4random());
}
@


1.2
log
@replace uses of OAAT hash in all its variants by NZAT (mksh internal) or NZAAT (all others)
@
text
@d28 1
a28 1
    "$MirOS: contrib/hosted/tg/arc4rootdom.c,v 1.1 2009/11/29 17:56:51 tg Exp $";
d103 2
@


1.1
log
@add this to mkshdroid build to get arc4random_pushb(3) support (this works
on any OpenBSD or Linux with /dev/urandom writable to us, ie. it *must* be
run with superuser privs or the entropy is lost from the kernel – it’s not
a generic solution, sadly)

(. ./flags; USE_PRINTF_BUILTIN=1 mksh …/Build.sh -r -combine) 2>&1 | tee log
	is used to compile mkshdroid with:
begin 644 flags.gz
M'XL(```````"`YU338_:,!"]YU?XQH4A[99=[1YR"`D+J'RL"+272I&3.&#A
MV)'M=*&_OF-(*.T>NFVD*/;+O#=O[)DH"K*&B\*O-7,+ZPLNFR,<'Q]\JBM@@
M-.,P'-P-/OH9E[^@@79Y[T<O+\SR<)$$/XL7G9)J&2;)=C-/MYODQ^$!@@UBH+
M:DNE*^-366C%"_B$.OD>4,QOC/:YS$53,/+-(_A`G*;A>H%O-$WOT_0/8/,&
M&;^-<5"G%B[C]6H6XVH9CT?;2<^+.M>5LQ&@@C>_WEA&H;"-9<#0Y%6YG5&FA
M%(I:`F7-<Q>P;ZH,N+1,ORI]Z'*492-SRY4$P\Y?@@U@@C7[DLP-),,+<WEN8'
MJ+6R&*,T(E*!V2MM@@<FF,IW8)0F!E2.IBJ,'32L&M3KG;7E6\]P"%9P:+G<(
M<HD7QT!P9`0/PTYM=4=@@U_/F<5>S5,86@@F."47&2M')U?15]:#<H(`],]WUS
M,I95YTN_0)VB"\;KORG5(3_Z4N6J/FDF5*N(J:"1!4-KK+AEZYK:_3E1\,X.
M<7XO`N\G^+FV&=MQF;:E#12>PVR$AX"A0ZV4+50U0+/S?W`!(O_=R5_'QEG!
M:;G"_@@6^-I$+P/\#^E\5,EFD;82K;Q.N)^--NDJ"N?/CL6.-#4:BB'3#2B[=
G3]J.(.Y$R)76$:;AEW$:A<LTV<23IR><YELD<HCW$X[-GST[!```
`
end
@
text
@d2 1
a2 1
 * Copyright (c) 2009
d28 1
a28 1
    "$MirOS: src/share/misc/licence.template,v 1.28 2008/11/14 15:33:44 tg Rel $";
d82 1
a82 1
		h = arc4random() & 0xFFFFFF00;
d86 1
d96 1
@

