head	1.9;
access;
symbols
	kwalletcli-3_02:1.9
	kwalletcli-3_01:1.9
	kwalletcli-3_00:1.9
	kwalletcli-2_12:1.7
	kwalletcli-2_11:1.6
	kwalletcli-2_10:1.6
	kwalletcli-2_03:1.5
	kwalletcli-2_02:1.5
	kwalletcli-2_01:1.5
	kwalletcli-2_00:1.5
	kwalletcli-1_00:1.5;
locks; strict;
comment	@ * @;


1.9
date	2016.08.30.19.33.51;	author tg;	state Exp;
branches;
next	1.8;
commitid	10057C5DFAD32DAFE0E;

1.8
date	2016.08.30.17.37.57;	author tg;	state Exp;
branches;
next	1.7;
commitid	10057C5C48D23D151BB;

1.7
date	2013.10.31.20.05.50;	author tg;	state Exp;
branches;
next	1.6;
commitid	1005272B7081B0E5655;

1.6
date	2011.04.09.21.44.56;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004DA0D26454B148C6;

1.5
date	2009.07.24.12.21.14;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004A69A7515BFFE1FD;

1.4
date	2009.07.10.10.50.06;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004A571CEA469B7664;

1.3
date	2009.06.10.19.00.42;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004A3002ED5F368174;

1.2
date	2009.06.10.18.59.45;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004A3002A638008D9F;

1.1
date	2009.06.10.18.28.31;	author tg;	state Exp;
branches;
next	;
commitid	1004A2FFAE4021E11CE;


desc
@@


1.9
log
@several items of both KF5 and Qt 5 weirdness
@
text
@/*-
 * Copyright (c) 2009, 2011, 2013, 2016
 *	mirabilos <m@@mirbsd.org>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 */

#ifndef KWALLETCLI_H
#define KWALLETCLI_H	"$MirOS: contrib/hosted/tg/code/kwalletcli/kwalletcli.h,v 1.8 2016/08/30 17:37:57 tg Exp $"


#if defined(HAVE_ATTRIBUTE_BOUNDED) && HAVE_ATTRIBUTE_BOUNDED
#define MKSH_A_BOUNDED(x,y,z)	__attribute__((__bounded__(x, y, z)))
#else
#define MKSH_A_BOUNDED(x,y,z)	/* nothing */
#endif


#ifdef __cplusplus
extern "C" {
#endif


/* exported by kwif*.cc */

extern const char __rcsid_kwif[];

/*
 * KDE Wallet I/O function; it MUST NOT fail if stderr is closed.
 * It is called at most once per execution and may rely on that.
 */
int kw_io(const char *, const char *, const char **, const char *);


/* these are (except abort/usage and OK) the same as exit codes */
#define KWE_OK_GET	0
#define KWE_NOENTRY	1
#define KWE_ABORT	2	/* errorlevel 2 == usage */
#define KWE_NOWALLET	3
#define KWE_NOFOLDER	4
#define KWE_ERRFOLDER	5
#define KWE_ERRENTRY	6
#define KWE_OK_SET	7	/* uses errorlevel 0 */
#define KWE_ERR_SET	8


/* exported by charconv.c */

/* recode strings between UTF-8 and UCS-32 */
size_t utf_8to32(const char *, unsigned int *);
size_t utf_32to8(char *, unsigned int)
    MKSH_A_BOUNDED(__minbytes__, 1, 6);
#define UTFCONV_ERROR	((size_t)31)


#ifdef __cplusplus
}
#endif

#endif
@


1.8
log
@governance
@
text
@d2 1
a2 1
 * Copyright (c) 2009, 2011, 2013
d22 1
a22 1
#define KWALLETCLI_H	"$MirOS: contrib/hosted/tg/code/kwalletcli/kwalletcli.h,v 1.7 2013/10/31 20:05:50 tg Exp $"
d41 4
a44 1
/* this function MUST NOT fail if stderr is closed */
@


1.7
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@d3 1
a3 1
 *	Thorsten Glaser <tg@@mirbsd.org>
d22 1
a22 1
#define KWALLETCLI_H	"$MirOS: contrib/hosted/tg/code/kwalletcli/kwalletcli.h,v 1.6 2011/04/09 21:44:56 tg Exp $"
@


1.6
log
@Convert the password string the same as we do with OPTU-8/OPTU-16 in base
except we use fully standards-conformant UCS-32 and UTF-8 on the Qt side,
not OPTU-16, but use our PUA assignment for woctet mapping.

This means that the storage format stays the same for all strings prior
written that were valid (standards-conformant) UTF-8 and did not contain
any multibyte characters in the range [U+EF80‥U+EFFF] (PUA). All others
will change.

Command line or standard input passwords will pass through unmodified if
they fulfil the above condition. Invalid UTF-8 octets, surrogates (both
low and high), [U+EF80‥U+EFFF], U+FFFE and U+FFFF will lead to their
first octet (which is already in the range [0x80‥0xFF]) be stored mapped
into the OPTU-16 range, and any subsequent octet re-inspected (which may
be valid UTF-8, invalid as above, or even ASCII). The process is unique
in both directions.
@
text
@d2 1
a2 1
 * Copyright (c) 2009, 2011
d22 1
a22 1
#define KWALLETCLI_H	"$MirOS: contrib/hosted/tg/code/kwalletcli/kwalletcli.h,v 1.5 2009/07/24 12:21:14 tg Exp $"
d26 1
a26 1
#define MKSH_A_BOUNDED(x,y,z)	__attribute__((__bounded__ (x, y, z)))
@


1.5
log
@if quiet, close stderr before using kwif, so that kdeinit/DCOP error msgs
will not be shown; kwif*.cc MUST be able to cope with an unusable stderr!

also mention the newlines problem in
.Sx CAVEATS .
@
text
@d2 1
a2 1
 * Copyright (c) 2009
d22 8
a29 1
#define KWALLETCLI_H	"$MirOS: contrib/hosted/tg/code/kwalletcli/kwalletcli.h,v 1.4 2009/07/10 10:50:06 tg Exp $"
d56 10
@


1.4
log
@• rename kwif.cc to kwif3.cc (backwardsly valid)
• document entire kwif*.cc API in kwalletcli.h
@
text
@d22 1
a22 1
#define KWALLETCLI_H	"$MirOS: contrib/hosted/tg/code/kwalletcli/kwalletcli.h,v 1.3 2009/06/10 19:00:42 tg Exp $"
d34 1
@


1.3
log
@more versions \o/
@
text
@d22 1
a22 1
#define KWALLETCLI_H	"$MirOS$"
d29 5
d36 1
@


1.2
log
@switch KWE_NOENTRY and KWE_ERRENTRY
logic error noticed while WTFM
@
text
@a0 2
/* $MirOS: contrib/hosted/tg/code/kwalletcli/kwalletcli.h,v 1.1 2009/06/10 18:28:31 tg Exp $ */

d22 2
a23 1
#define KWALLETCLI_H
@


1.1
log
@First steps of a CLI to KWallet (for KDE 3, targetting KDE 3.5 on
Kubuntu Hardon Heroin) with additional programmes. Features:
• kwalletcli, CLI to KWallet (complete)
• kwalletcli_getpin, helper, CLI to pinentry (complete)
• kwalletaskpass, ssh-askpass using kwalletcli and kwalletcli_getpin
• pinentry-kwallet, wrapper around pinentry using kwalletcli on request

Part of this work is sponsored by tarent GmbH
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.28 2008/11/14 15:33:44 tg Rel $ */
d34 1
a34 1
#define KWE_ERRENTRY	1
d39 1
a39 1
#define KWE_NOENTRY	6
@

