head	1.4;
access;
symbols
	BSD__arc4random-1_50:1.4
	BSD__arc4random-1_43:1.2
	BSD__arc4random-1_42:1.2
	BSD__arc4random-1_41:1.1;
locks; strict;
comment	@# @;


1.4
date	2011.06.05.23.12.09;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004DEC0D5B7316DB01;

1.3
date	2011.06.05.22.53.39;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004DEC0902242BE321;

1.2
date	2009.09.08.16.43.02;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004AA689745682169A;

1.1
date	2009.05.17.13.01.01;	author tg;	state Exp;
branches;
next	;
commitid	1004A100A8147CADED8;


desc
@@


1.4
log
@time-limited test and more details
@
text
@# $MirOS: contrib/hosted/tg/code/BSD::arc4random/t/check.t,v 1.3 2011/06/05 22:53:39 tg Exp $
#-
# Copyright (c) 2008, 2011
#	Thorsten Glaser <tg@@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.

print "1..23\n";

use BSD::arc4random qw(:all);

my $enta = $RANDOM;
my $entb = $RANDOM;

# $RANDOM must output numerics
print "not " unless $enta =~ /^[0-9]+$/;
print "ok 1\n";

print "not " unless $entb =~ /^[0-9]+$/;
print "ok 2\n";

# $RANDOM output must be inside [0; 32767]
print "not " if (($enta < 0) || ($enta > 32767));
print "ok 3\n";

print "not " if (($entb < 0) || ($entb > 32767));
print "ok 4\n";

# $RANDOM output should differ each time
print "not " if ($enta == $entb);
print "ok 5\n";

# Check exported variables
my $v = ${BSD::arc4random::VERSION};
my $k = BSD::arc4random::have_kintf();
print "not " unless (($v =~ /^[0-9]+.[0-9]+$/) && (($k == 0) || ($k == 1)));
print "ok 6\n";
print STDERR "DIAG: BSD::arc4random $v with";
print STDERR "out" if $k == 0;
print STDERR " kernel interface\n";

# test storing to the tied variable
$RANDOM = 123;
$enta = $RANDOM;
$RANDOM = 456;
$entb = $RANDOM;
print "not " unless $enta =~ /^[0-9]+$/;
print "ok 7\n";
print "not " unless $entb =~ /^[0-9]+$/;
print "ok 8\n";
print "not " if (($enta < 0) || ($enta > 32767));
print "ok 9\n";
print "not " if (($entb < 0) || ($entb > 32767));
print "ok 10\n";
print "not " if ($enta == $entb);
print "ok 11\n";
print "not " if (($enta == 123) && ($entb == 456));
print "ok 12\n";

sub timed_out {
	die "GOT TIRED OF WAITING";
}
$SIG{ALRM} = \&timed_out;
eval {
	alarm(10);

	# test arc4random_uniform lower half
	$enta = arc4random_uniform(10000);
	$entb = arc4random_uniform(10000);
	print "not " unless $enta =~ /^[0-9]+$/;
	print "ok 13\n";
	print "not " unless $entb =~ /^[0-9]+$/;
	print "ok 14\n";
	print "not " if (($enta < 0) || ($enta > 9999));
	print "ok 15\n";
	print "not " if (($entb < 0) || ($entb > 9999));
	print "ok 16\n";
	print "not " if ($enta == $entb);
	print "ok 17\n";
	# test arc4random_uniform upper half
	$enta = arc4random_uniform(2999999901);
	$entb = arc4random_uniform(2999999901);
	print "not " unless $enta =~ /^[0-9]+$/;
	print "ok 18\n";
	print "not " unless $entb =~ /^[0-9]+$/;
	print "ok 19\n";
	print "not " if (($enta < 0) || ($enta > 2999999900));
	print "ok 20\n";
	print "not " if (($entb < 0) || ($entb > 2999999900));
	print "ok 21\n";
	print "not " if ($enta == $entb);
	print "ok 22\n";

	alarm(0);
};
if ($@@ =~ /GOT TIRED OF WAITING/) {
	print STDERR "DIAG: 10 second timeout on execution reached\n";
	print STDERR "DIAG: this is probably a bug wrt. use64bitint\n";
	print "not ok 23\n";
} else {
	print "ok 23\n";
}
@


1.3
log
@run tests on BSD::arc4random::arc4random_uniform, too
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/tg/code/BSD::arc4random/t/check.t,v 1.2 2009/09/08 16:43:02 tg Exp $
d21 1
a21 1
print "1..17\n";
d73 43
a115 13
# test arc4random_uniform
$enta = arc4random_uniform(10000);
$entb = arc4random_uniform(10000);
print "not " unless $enta =~ /^[0-9]+$/;
print "ok 13\n";
print "not " unless $entb =~ /^[0-9]+$/;
print "ok 14\n";
print "not " if (($enta < 0) || ($enta > 9999));
print "ok 15\n";
print "not " if (($entb < 0) || ($entb > 9999));
print "ok 16\n";
print "not " if ($enta == $entb);
print "ok 17\n";
@


1.2
log
@ensure all files (larger than a certain threshold) from me hold
proper copyright notices and licencing information (in general,
stuff in here is MirOS Licenced, unless specified otherwise, or
unless other things are noted or easily seen, if copyright app-
lies at all)
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/licence.template,v 1.28 2008/11/14 15:33:44 tg Rel $
d3 1
a3 1
# Copyright (c) 2008
d21 1
a21 1
print "1..12\n";
d72 14
@


1.1
log
@move mircvs://contrib/hosted/p5/BSD/arc4random/
  to mircvs://contrib/hosted/tg/code/BSD::arc4random/
and remove the entire mircvs://contrib/hosted/p5/ hierarchy
@
text
@d1 19
a19 1
# $MirOS: contrib/hosted/p5/BSD/arc4random/t/check.t,v 1.2 2008/12/11 17:37:57 tg Exp $
@

