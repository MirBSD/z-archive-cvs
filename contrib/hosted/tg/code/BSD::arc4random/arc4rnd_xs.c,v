head	1.7;
access;
symbols
	BSD__arc4random-1_50:1.5
	BSD__arc4random-1_43:1.5
	BSD__arc4random-1_42:1.5
	BSD__arc4random-1_41:1.4;
locks; strict;
comment	@ * @;


1.7
date	2013.10.31.20.05.49;	author tg;	state Exp;
branches;
next	1.6;
commitid	1005272B7081B0E5655;

1.6
date	2011.06.06.12.20.26;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004DECC5D23D551DC9;

1.5
date	2009.10.10.22.43.53;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004AD10E321C85E762;

1.4
date	2009.07.16.12.12.52;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004A5F1956135981D5;

1.3
date	2009.06.29.16.25.17;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004A48EAFD5E3916DF;

1.2
date	2009.06.22.16.29.54;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004A3FB1605721C858;

1.1
date	2009.05.17.13.01.01;	author tg;	state Exp;
branches;
next	;
commitid	1004A100A8147CADED8;


desc
@@


1.7
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@/*-
 * Copyright (c) 2008, 2009, 2011, 2013
 *	Thorsten Glaser <tg@@mirbsd.org>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 */

#include <sys/types.h>
#include <stdlib.h>

#if defined(HAVE_STDINT_H) && HAVE_STDINT_H
#include <stdint.h>
#elif defined(USE_INTTYPES)
#include <inttypes.h>
#endif

#include "EXTERN.h"
#include "perl.h"
#include "XSUB.h"

#if !defined(__attribute__) && (!defined(__GNUC__) || (__GNUC__ < 1) || (__GNUC__ == 2 && __GNUC_MINOR__ < 5))
#define __attribute__(x)		/* nothing */
#endif

#if !defined(__RCSID) || !defined(__IDSTRING)
#undef __RCSID
#undef __IDSTRING
#undef __IDSTRING_CONCAT
#undef __IDSTRING_EXPAND
#define __IDSTRING_CONCAT(l,p)		__LINTED__ ## l ## _ ## p
#define __IDSTRING_EXPAND(l,p)		__IDSTRING_CONCAT(l,p)
#define __IDSTRING(prefix, string)				\
	static const char __IDSTRING_EXPAND(__LINE__,prefix) []	\
	    __attribute__((__used__)) = "@@(""#)" #prefix ": " string
#define __RCSID(x)			__IDSTRING(rcsid,x)
#endif

__RCSID("$MirOS: contrib/hosted/tg/code/BSD::arc4random/arc4rnd_xs.c,v 1.6 2011/06/06 12:20:26 tg Exp $");

#ifdef REDEF_USCORETYPES
#define u_int32_t	uint32_t
#endif

#ifdef NEED_ARC4RANDOM_DECL
u_int32_t arc4random(void);
void arc4random_addrandom(u_char *, int);
void arc4random_stir(void);
#endif

XS(XS_BSD__arc4random_arc4random_xs);
XS(XS_BSD__arc4random_arc4random_xs)
{
	dXSARGS;
	dXSTARG;
	uint32_t rv;

	rv = arc4random();

	XSprePUSH;
	PUSHu((UV)rv);

	XSRETURN(1);
}

XS(XS_BSD__arc4random_stir_xs);
XS(XS_BSD__arc4random_stir_xs)
{
	dXSARGS;

	arc4random_stir();

	XSRETURN_EMPTY;
}

XS(XS_BSD__arc4random_arc4random_addrandom_xs);
XS(XS_BSD__arc4random_arc4random_addrandom_xs)
{
	dXSARGS;
	dXSTARG;
	SV *sv;
	char *buf;
	STRLEN len;
	uint32_t rv;

	sv = ST(0);
	buf = SvPV(sv, len);
	arc4random_addrandom((unsigned char *)buf, (int)len);
	rv = arc4random();
	XSprePUSH;
	PUSHu((UV)rv);

	XSRETURN(1);
}

#ifndef HAVE_ARC4RANDOM_PUSHB
#define HAVE_ARC4RANDOM_PUSHB	1
#endif

#if HAVE_ARC4RANDOM_PUSHB

#ifdef NEED_ARC4RANDOM_DECL
uint32_t arc4random_pushb(const void *, size_t);
#endif

XS(XS_BSD__arc4random_arc4random_pushb_xs);
XS(XS_BSD__arc4random_arc4random_pushb_xs)
{
	dXSARGS;
	dXSTARG;
	SV *sv;
	char *buf;
	STRLEN len;
	uint32_t rv;

	sv = ST(0);
	buf = SvPV(sv, len);
	rv = arc4random_pushb((void *)buf, (size_t)len);
	XSprePUSH;
	PUSHu((UV)rv);

	XSRETURN(1);
}
#elif defined(arc4random_pushk)
#define XS_BSD__arc4random_arc4random_pushb_xs \
	XS_BSD__arc4random_arc4random_pushk_xs
#else
#define XS_BSD__arc4random_arc4random_pushb_xs \
	XS_BSD__arc4random_arc4random_addrandom_xs
#endif

#if defined(arc4random_pushk)
XS(XS_BSD__arc4random_arc4random_pushk_xs);
XS(XS_BSD__arc4random_arc4random_pushk_xs)
{
	dXSARGS;
	dXSTARG;
	SV *sv;
	char *buf;
	STRLEN len;
	uint32_t rv;

	sv = ST(0);
	buf = SvPV(sv, len);
	rv = arc4random_pushk((void *)buf, (size_t)len);
	XSprePUSH;
	PUSHu((UV)rv);

	XSRETURN(1);
}
#elif HAVE_ARC4RANDOM_PUSHB
#define XS_BSD__arc4random_arc4random_pushk_xs \
	XS_BSD__arc4random_arc4random_pushb_xs
#else
#define XS_BSD__arc4random_arc4random_pushk_xs \
	XS_BSD__arc4random_arc4random_addrandom_xs
#endif

#undef HAVE_ARC4RANDOM_KINTF
#if HAVE_ARC4RANDOM_PUSHB || defined(arc4random_pushk)
#define HAVE_ARC4RANDOM_KINTF	1
#else
#define HAVE_ARC4RANDOM_KINTF	0
#endif


/*
 * These may be needed because praeprocessor commands inside a
 * macro's argument list may not work
 */

#if HAVE_ARC4RANDOM_PUSHB
#define IDT_ARC4RANDOM_PUSHB	" arc4random_pushb"
#else
#define IDT_ARC4RANDOM_PUSHB	""
#endif

#if defined(arc4random_pushk)
#define IDT_arc4random_pushk	" arc4random_pushk"
#else
#define IDT_arc4random_pushk	""
#endif

#if HAVE_ARC4RANDOM_KINTF
#define IDT_ARC4RANDOM_KINTF	" have_kintf:=1"
#else
#define IDT_ARC4RANDOM_KINTF	" have_kintf:=0"
#endif

__IDSTRING(api_text, "BSD::arc4random " XS_VERSION " with {"
    " arc4random"
    " arc4random_addrandom"
    IDT_ARC4RANDOM_PUSHB
    IDT_arc4random_pushk
    IDT_ARC4RANDOM_KINTF
    " }");


/* the Perl API is not const clean */
static char file[] = __FILE__;
static char func_a4r[] = "BSD::arc4random::arc4random_xs";
static char func_a4add[] = "BSD::arc4random::arc4random_addrandom_xs";
static char func_a4rpb[] = "BSD::arc4random::arc4random_pushb_xs";
static char func_a4rpk[] = "BSD::arc4random::arc4random_pushk_xs";
static char func_astir[] = "BSD::arc4random::arc4random_stir_xs";
static char func_kintf[] = "BSD::arc4random::have_kintf";

#ifdef __cplusplus
extern "C"
#endif
XS(boot_BSD__arc4random);
XS(boot_BSD__arc4random)
{
	dXSARGS;

	XS_VERSION_BOOTCHECK;

	newXS(func_a4r, XS_BSD__arc4random_arc4random_xs, file);
	newXS(func_a4add, XS_BSD__arc4random_arc4random_addrandom_xs, file);
	newXS(func_a4rpb, XS_BSD__arc4random_arc4random_pushb_xs, file);
	newXS(func_a4rpk, XS_BSD__arc4random_arc4random_pushk_xs, file);
	newXS(func_astir, XS_BSD__arc4random_stir_xs, file);

	newCONSTSUB(NULL, func_kintf, newSViv(HAVE_ARC4RANDOM_KINTF));

	XSRETURN_YES;
}
@


1.6
log
@• add arc4random_stir(3) prototype
• libbsd fucked up: there is no header file containing all needed
  function prototypes across all supported versions, and worse,
  their new overlay uses pkg-config which no BSD software will
  *ever* use ⇒ use our own protos in favour of libbsd includes
@
text
@d2 1
a2 1
 * Copyright (c) 2008, 2009, 2011
d47 1
a47 1
	    __attribute__((used)) = "@@(""#)" #prefix ": " string
d51 1
a51 1
__RCSID("$MirOS: contrib/hosted/tg/code/BSD::arc4random/arc4rnd_xs.c,v 1.5 2009/10/10 22:43:53 tg Exp $");
@


1.5
log
@delete __attribute__((used)) if no or old gcc, caused by reading
http://www.nntp.perl.org/group/perl.cpan.testers/2009/08/msg4861353.html
@
text
@d2 1
a2 1
 * Copyright (c) 2008, 2009
d51 1
a51 1
__RCSID("$MirOS: contrib/hosted/tg/code/BSD::arc4random/arc4rnd_xs.c,v 1.4 2009/07/16 12:12:52 tg Exp $");
d60 1
d113 5
@


1.4
log
@proper ifdefs instead of imake-style
@
text
@d34 4
d51 1
a51 1
__RCSID("$MirOS: contrib/hosted/tg/code/BSD::arc4random/arc4rnd_xs.c,v 1.3 2009/06/29 16:25:17 tg Exp $");
@


1.3
log
@prepare for future gccs' quirks
@
text
@d34 1
a34 1
#ifdef USE_LIBBSD
a35 3
#endif

#ifndef __RCSID
d47 1
a47 1
__RCSID("$MirOS: contrib/hosted/tg/code/BSD::arc4random/arc4rnd_xs.c,v 1.2 2009/06/22 16:29:54 tg Exp $");
@


1.2
log
@Part of fix for Debian #534019
pending a more deep reorganisation (now that libbsd is in stable) and
a new “upstream”+CPAN release, too… (I need to invest some work here,
anyway, because of new standards-version and other lintianits)
@
text
@d50 1
a50 1
__RCSID("$MirOS: contrib/hosted/tg/code/BSD::arc4random/arc4rnd_xs.c,v 1.1 2009/05/17 13:01:01 tg Exp $");
d171 6
a176 3
__IDSTRING(api_text, "BSD::arc4random " XS_VERSION " with {"
    " arc4random"
    " arc4random_addrandom"
d178 3
a180 1
    " arc4random_pushb"
d182 1
d184 3
a186 1
    " arc4random_pushk"
d188 1
d190 1
a190 1
    " have_kintf:=1"
d192 1
a192 1
    " have_kintf:=0"
d194 7
d203 2
@


1.1
log
@move mircvs://contrib/hosted/p5/BSD/arc4random/
  to mircvs://contrib/hosted/tg/code/BSD::arc4random/
and remove the entire mircvs://contrib/hosted/p5/ hierarchy
@
text
@d2 1
a2 1
 * Copyright (c) 2008
d34 4
d50 1
a50 1
__RCSID("$MirOS: contrib/hosted/p5/BSD/arc4random/arc4rnd_xs.c,v 1.15 2008/07/20 15:27:54 tg Exp $");
@

