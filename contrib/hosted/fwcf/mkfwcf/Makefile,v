head	1.14;
access;
symbols
	FWCF_1_06:1.14
	FWCF_1_05:1.14
	FWCF_1_04:1.14
	FWCF_1_03:1.14
	FWCF_1_01:1.14
	FWCF_1_00:1.14;
locks; strict;
comment	@# @;


1.14
date	2006.09.26.10.25.06;	author tg;	state Exp;
branches;
next	1.13;
commitid	1004518FFF55AB578D0;

1.13
date	2006.09.24.21.46.17;	author tg;	state Exp;
branches;
next	1.12;
commitid	1004516FCB12AEB461A;

1.12
date	2006.09.23.23.04.16;	author tg;	state Exp;
branches;
next	1.11;
commitid	1004515BD810059F9C6;

1.11
date	2006.09.23.22.05.26;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004515AFA04C63C9B9;

1.10
date	2006.09.23.20.20.01;	author tg;	state Exp;
branches;
next	1.9;
commitid	100451596B33F0C3FA0;

1.9
date	2006.09.16.07.35.37;	author tg;	state Exp;
branches;
next	1.8;
commitid	100450BA94D3353BC7D;

1.8
date	2006.09.16.07.09.49;	author tg;	state Exp;
branches;
next	1.7;
commitid	100450BA34B6AE3B0F3;

1.7
date	2006.09.16.06.18.58;	author tg;	state Exp;
branches;
next	1.6;
commitid	100450B975E603852FA;

1.6
date	2006.09.16.05.12.50;	author tg;	state Exp;
branches;
next	1.5;
commitid	100450B87DE48F1E172;

1.5
date	2006.09.16.04.40.25;	author tg;	state Exp;
branches;
next	1.4;
commitid	100450B800C0C9AC337;

1.4
date	2006.09.16.03.17.03;	author tg;	state Exp;
branches;
next	1.3;
commitid	100450B6CBA79B39CC1;

1.3
date	2006.09.16.01.06.32;	author tg;	state Exp;
branches;
next	1.2;
commitid	100450B4E2A0543EDC1;

1.2
date	2006.09.15.20.11.18;	author tg;	state Exp;
branches;
next	1.1;
commitid	100450B08F47CEE72D3;

1.1
date	2006.09.15.20.09.37;	author tg;	state Exp;
branches;
next	;
commitid	100450B082946BA0B6E;


desc
@@


1.14
log
@* fix missing includes
* cast a little more, for systems other than MirOS #9-current
* spelling
* build fwcf.helper correctly without libz
@
text
@# $MirOS: contrib/hosted/fwcf/mkfwcf/Makefile,v 1.13 2006/09/24 21:46:17 tg Exp $
#-
# This file is part of the FreeWRT project. FreeWRT is copyrighted
# material, please see the LICENCE file in the top-level directory
# or at http://www.freewrt.org/licence for details.

PROG=		mkfwcf
SRCS=		${PROG}.c ${COMPRESSORS} sys_bsd.c
NOMAN=		yes
DPADD+=		${LIBZ}
LDADD+=		-lz
CLEANFILES+=	${.CURDIR}/test.out ${.CURDIR}/tesz.out ${.CURDIR}/tesL.out \
		${.CURDIR}/test.nil ${.CURDIR}/tesz.nil ${.CURDIR}/tesL.nil

test: ${PROG}
	./${PROG} -o ${.CURDIR}/test.out ${.CURDIR}/CVS
	./${PROG} -C 1 -o ${.CURDIR}/tesz.out ${.CURDIR}/CVS
	./${PROG} -C 16 -o ${.CURDIR}/tesL.out ${.CURDIR}/CVS
	./${PROG} -eo ${.CURDIR}/test.nil
	./${PROG} -eC 1 -o ${.CURDIR}/tesz.nil
	./${PROG} -eC 16 -o ${.CURDIR}/tesL.nil

.include <bsd.prog.mk>
@


1.13
log
@implement LZO1X-1 compression via MiniLZO (GPL'd)
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/mkfwcf/Makefile,v 1.12 2006/09/23 23:04:16 tg Exp $
d5 1
a5 1
# or at http://www.freewrt.org/license for details.
@


1.12
log
@test fwcf.helper locally
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/mkfwcf/Makefile,v 1.11 2006/09/23 22:05:26 tg Exp $
d12 2
a13 2
CLEANFILES+=	${.CURDIR}/test.out ${.CURDIR}/tesz.out \
		${.CURDIR}/test.nil ${.CURDIR}/tesz.nil
d18 1
d21 1
@


1.11
log
@implement the ability to create empty filesystems
implement linux sysdeps for random
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/mkfwcf/Makefile,v 1.10 2006/09/23 20:20:01 tg Exp $
d18 2
a19 2
	./${PROG} -eo ${.CURDIR}/test.nil ${.CURDIR}/CVS
	./${PROG} -eC 1 -o ${.CURDIR}/tesz.nil ${.CURDIR}/CVS
@


1.10
log
@* wraps.c: properly calculate size of the flash block from the outer
  size, not from the inner size
* all: handle entropy
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/mkfwcf/Makefile,v 1.9 2006/09/16 07:35:37 tg Exp $
d12 2
a13 1
CLEANFILES+=	${.CURDIR}/test.out ${.CURDIR}/tesz.out
d18 2
@


1.9
log
@split the code into smaller units to reduce final executables' sizes
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/mkfwcf/Makefile,v 1.8 2006/09/16 07:09:49 tg Exp $
d8 1
a8 1
SRCS=		${PROG}.c ${COMPRESSORS}
@


1.8
log
@more code-sharing
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/mkfwcf/Makefile,v 1.7 2006/09/16 06:18:58 tg Exp $
d8 1
a9 10
SRCS=		mkfwcf.c
SRCS+=		fts_subs.c ft_pack.c ft_packm.c compress.c header.c wraps.c
SRCS+=		c_null.c
SRCS+=		c_zlib.c

CPPFLAGS+=	-DWRAPS_PACK

CPPFLAGS+=	-I${.CURDIR}/..
.PATH: ${.CURDIR}/..

a11 1

@


1.7
log
@code sharing and cleanup
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/mkfwcf/Makefile,v 1.6 2006/09/16 05:12:50 tg Exp $
d10 1
a10 1
SRCS+=		fts_subs.c ft_pack.c ft_packm.c compress.c header.c
d14 2
@


1.6
log
@plug deflate compression

man was that easy ;)
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/mkfwcf/Makefile,v 1.5 2006/09/16 04:40:25 tg Exp $
d20 1
a20 1
CLEANFILES+=	${.CURDIR}/test.out ${.CURDIR}/testz.out
d24 1
a24 1
	./${PROG} -C 1 -o ${.CURDIR}/testz.out ${.CURDIR}/CVS
@


1.5
log
@* fix prototype for compression functions: must use 'char *' for consistency
* add my own small adler32 implementation, after src/bin/md5/ad32-x86.S
* implement full enclosure with sanity checks
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/mkfwcf/Makefile,v 1.4 2006/09/16 03:17:03 tg Exp $
d12 1
a12 1
#SRCS+=		c_zlib.c
d20 1
a20 1
CLEANFILES+=	${.CURDIR}/test.out
d24 1
@


1.4
log
@implement "inner packing" as per the spec
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/mkfwcf/Makefile,v 1.3 2006/09/16 01:06:32 tg Exp $
d10 1
a10 1
SRCS+=		fts_subs.c ft_pack.c ft_packm.c compress.c
d17 2
a18 2
#DPADD+=	${LIBZ}
#LDADD+=	-lz
@


1.3
log
@implement the 'null' compressor
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/mkfwcf/Makefile,v 1.2 2006/09/15 20:11:18 tg Exp $
d10 1
a10 1
SRCS+=		fts_subs.c ft_pack.c compress.c
d20 5
@


1.2
log
@rapid development - skip libz/deflate compression for now
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/mkfwcf/Makefile,v 1.1 2006/09/15 20:09:37 tg Exp $
d11 1
a11 1
SRCS+=		c_none.c
@


1.1
log
@initial skeleton:

first will be two programmes, mkfwcf and unfwcf, which operate
similar to pkzip and pkunzip; code will be designed to be re-
usable by the later fwcfctl programme.

mkfwcf and unfwcf will be designed to run on MirOS (and OpenBSD);
GNU/Linux compatibility is not a design criterium.
@
text
@d1 5
a5 1
# $MirOS$
d12 1
a12 1
SRCS+=		c_zlib.c
d17 2
a18 2
DPADD+=		${LIBZ}
LDADD+=		-lz
@

