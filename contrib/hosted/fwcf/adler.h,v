head	1.10;
access;
symbols
	FWCF_1_06:1.10
	FWCF_1_05:1.10
	FWCF_1_04:1.10
	FWCF_1_03:1.8
	FWCF_1_01:1.3
	FWCF_1_00:1.2;
locks; strict;
comment	@ * @;


1.10
date	2007.05.07.16.15.56;	author tg;	state Exp;
branches;
next	1.9;
commitid	100463F507166871BCE;

1.9
date	2007.05.07.15.50.39;	author tg;	state Exp;
branches;
next	1.8;
commitid	100463F4AE56575365A;

1.8
date	2007.03.13.18.22.54;	author tg;	state Exp;
branches;
next	1.7;
commitid	10045F6EC14570C78F0;

1.7
date	2007.03.09.21.10.28;	author tg;	state Exp;
branches;
next	1.6;
commitid	10045F1CCB44F1E7E4F;

1.6
date	2007.02.28.16.09.41;	author tg;	state Exp;
branches;
next	1.5;
commitid	10045E5A951020DE68F;

1.5
date	2007.02.12.20.59.45;	author tg;	state Exp;
branches;
next	1.4;
commitid	10045D0D52B012FBB8B;

1.4
date	2006.12.11.23.54.54;	author tg;	state Exp;
branches;
next	1.3;
commitid	100457DEFC626A6A05C;

1.3
date	2006.10.07.21.36.20;	author tg;	state Exp;
branches;
next	1.2;
commitid	10045281D5D49EB8626;

1.2
date	2006.09.19.11.30.24;	author tg;	state Exp;
branches;
next	1.1;
commitid	100450FD4D30EBE772E;

1.1
date	2006.09.16.06.18.57;	author tg;	state Exp;
branches;
next	;
commitid	100450B975E603852FA;


desc
@@


1.10
log
@• make HASH API functions for ADLER32 in libc, too (size-optimised but no asm)
• cross-reference them all in the man pages
@
text
@/* $MirOS: contrib/hosted/fwcf/adler.h,v 1.9 2007/05/07 15:50:39 tg Exp $ */

/*-
 * Copyright (c) 2006, 2007
 *	Thorsten Glaser <tg@@mirbsd.de>
 * The adler32 algorithm is
 * Copyright (C) 1995 Mark Adler
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 *-
 * See also:
 *	contrib/hosted/fwcf/adler.h
 *	src/lib/libc/hash/adh32.c
 *	src/kern/z/adler32s.c
 *	src/kern/z/adler32_i386.S
 */

#ifndef ADLER_H
#define ADLER_H	"$MirOS: contrib/hosted/fwcf/adler.h,v 1.9 2007/05/07 15:50:39 tg Exp $"

/*
 * ADLER-32 implementation
 */

#define ADLER_BASE 65521 /* largest prime smaller than 65536 */
#define ADLER_NMAX 5552	 /* largest n: 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1 */

/* declare everything needed by the adler32 routine */
#define ADLER_DECL		unsigned s1 = 1, s2 = 0, n

/* calculate the adler32 crc of the data pointed to
   by the 'buffer' argument, size expected in 'len'
   which is TRASHED; stores the result in s1 and s2 */
#define ADLER_CALC(buffer)	do {					\
		const uint8_t *adler_buf = (const uint8_t *)(buffer);	\
		while (len) {						\
			len -= (n = MIN(len, ADLER_NMAX));		\
			while (n--) {					\
				s1 += *adler_buf++;			\
				s2 += s1;				\
			}						\
			s1 %= ADLER_BASE;				\
			s2 %= ADLER_BASE;				\
		}							\
	} while (0)

#endif
@


1.9
log
@add xrefs
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/adler.h,v 1.8 2007/03/13 18:22:54 tg Exp $ */
d26 1
a26 1
 *	src/bin/md5/cksum.c
d32 1
a32 1
#define ADLER_H	"$MirOS: contrib/hosted/fwcf/adler.h,v 1.8 2007/03/13 18:22:54 tg Exp $"
@


1.8
log
@fix paths in comment
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/adler.h,v 1.7 2007/03/09 21:10:28 tg Exp $ */
d26 1
d32 1
a32 1
#define ADLER_H	"$MirOS: contrib/hosted/fwcf/adler.h,v 1.7 2007/03/09 21:10:28 tg Exp $"
@


1.7
log
@as per dnehring@@ request, we'll use .tar.LZO-1X.asz as dump format,
instead of .tar.gz, to not pull in a 50+ KiB gzip binary as required
dependency – the “asz” encoding is necessary because LZO itself has
no framing information.
• document that
• document the “asz” encoding – which we already use in storing the
  dump “fwcf inner filesystem” data itself
• move routines for asz en-/decoding into a new file, minilzop.c
• prepare for adding the LZO-1X file compression helper command mode
• fix a few minor glitches
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/adler.h,v 1.6 2007/02/28 16:09:41 tg Exp $ */
d26 2
a27 2
 *	kern/z/adler32s.c
 *	kern/z/adler32_i386.S
d31 1
a31 1
#define ADLER_H	"$MirOS: contrib/hosted/fwcf/adler.h,v 1.6 2007/02/28 16:09:41 tg Exp $"
@


1.6
log
@* fix pathnames in comment
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/adler.h,v 1.5 2007/02/12 20:59:45 tg Exp $ */
d4 1
a4 1
 * Copyright (c) 2006
d31 5
a35 1
#define ADLER_H	"$MirOS: contrib/hosted/fwcf/adler.h,v 1.5 2007/02/12 20:59:45 tg Exp $"
d46 11
a56 11
#define ADLER_CALC(buffer)	do {				\
		uint8_t *adler_buf = (uint8_t *)(buffer);	\
		while (len) {					\
			len -= (n = MIN(len, ADLER_NMAX));	\
			while (n--) {				\
				s1 += *adler_buf++;		\
				s2 += s1;			\
			}					\
			s1 %= ADLER_BASE;			\
			s2 %= ADLER_BASE;			\
		}						\
@


1.5
log
@move sys/lib/libsa/adler32s.c and sys/arch/i386/stand/libz/adler32.S
to kern/z/adler32{s.c,_i386.S} in order to be able to share them; no
code changes yet (but there will be, e.g. a header file)
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/adler.h,v 1.4 2006/12/11 23:54:54 tg Exp $ */
d25 1
a25 1
 *	contrib/hosted/fwcf/adler.h,v
d31 1
a31 1
#define ADLER_H	"$MirOS: contrib/hosted/fwcf/adler.h,v 1.4 2006/12/11 23:54:54 tg Exp $"
@


1.4
log
@mostly administrative licence sync w/ current template
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/adler.h,v 1.3 2006/10/07 21:36:20 tg Exp $ */
d26 2
a27 2
 *	src/sys/arch/i386/stand/libz/adler32.S,v
 *	src/sys/lib/libsa/adler32s.c,v
d31 1
a31 1
#define ADLER_H	"$MirOS: contrib/hosted/fwcf/adler.h,v 1.3 2006/10/07 21:36:20 tg Exp $"
@


1.3
log
@add a full compliant portable C implementation of the adler32.c file
found in libc, without the adler32_combine function (unneeded in the
kernel and especially the bootloader), to the MirOS BSD kernel (note
in sys/conf/files) and the sparc bootloader (the i386 bootloader al-
ready uses the same code as assembly version, except that that comes
without the "return 1 if (buf == NULL)" functionality); sync all our
adler32 implementations and lint a little
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/adler.h,v 1.2 2006/09/19 11:30:24 tg Exp $ */
d9 5
a13 6
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
d15 8
a22 8
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a defect.
d31 1
a31 1
#define ADLER_H	"$MirOS: contrib/hosted/fwcf/adler.h,v 1.2 2006/09/19 11:30:24 tg Exp $"
@


1.2
log
@make the adler32 macros easier to use and document them
keep the speed hack of using the 'len' global though
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/adler.h,v 1.1 2006/09/16 06:18:57 tg Exp $ */
d6 2
d24 5
d32 1
a32 1
#define ADLER_H	"$MirOS: contrib/hosted/fwcf/adler.h,v 1.1 2006/09/16 06:18:57 tg Exp $"
@


1.1
log
@code sharing and cleanup
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.14 2006/08/09 19:35:23 tg Rel $ */
d25 1
a25 1
#define ADLER_H	"$MirOS$"
d30 7
a36 2
#define ADLER_START(buffer)					\
	{							\
a37 3
		unsigned s1 = 1, s2 = 0, n;

#define ADLER_RUN						\
d46 2
a47 4
		}

#define ADLER_END						\
	}
@

