head	1.6;
access;
symbols
	FWCF_1_06:1.5
	FWCF_1_05:1.5
	FWCF_1_04:1.5
	FWCF_1_03:1.5
	FWCF_1_01:1.5
	FWCF_1_00:1.5;
locks; strict;
comment	@ * @;


1.6
date	2013.10.31.20.05.47;	author tg;	state Exp;
branches;
next	1.5;
commitid	1005272B7081B0E5655;

1.5
date	2006.09.23.23.46.35;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004515C75D3D00DE3D;

1.4
date	2006.09.23.23.21.03;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004515C15D179DC563;

1.3
date	2006.09.16.05.06.22;	author tg;	state Exp;
branches;
next	1.2;
commitid	100450B865955F7315E;

1.2
date	2006.09.16.04.40.24;	author tg;	state Exp;
branches;
next	1.1;
commitid	100450B800C0C9AC337;

1.1
date	2006.09.16.01.06.32;	author tg;	state Exp;
branches;
next	;
commitid	100450B4E2A0543EDC1;


desc
@@


1.6
log
@adapt most __attribute__((â€¦)) occurrences to new KNF style(9)
@
text
@/*-
 * Copyright (c) 2006, 2013
 *	Thorsten Glaser <tg@@mirbsd.de>
 *
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
 *
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a defect.
 */

#include <sys/param.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "defs.h"
#include "compress.h"

__RCSID("$MirOS: contrib/hosted/fwcf/c_null.c,v 1.5 2006/09/23 23:46:35 tg Exp $");

static void c_null_load(void) __attribute__((__constructor__));
static int c_init(void);
static int c_compress(char **, char *, size_t)
    __attribute__((__bounded__(__string__, 2, 3)));
static int c_decompress(char *, size_t, char *, size_t)
    __attribute__((__bounded__(__string__, 1, 2)))
    __attribute__((__bounded__(__string__, 3, 4)));

static fwcf_compressor c_null = {
	c_init,			/* init */
	c_compress,		/* compress */
	c_decompress,		/* decompress */
	"null",			/* name */
	0			/* code */
};

static void
c_null_load(void)
{
	if (compress_register(&c_null))
		fputs("warning: cannot register compressor 'null'!\n", stderr);
}

static int
c_init(void)
{
	return (0);
}

static int
c_compress(char **dst, char *src, size_t len)
{
	if ((*dst = malloc(len)) == NULL)
		return (-1);
	memcpy(*dst, src, len);
	return (len);
}

static int
c_decompress(char *dst, size_t dstlen, char *src, size_t srclen)
{
	size_t len = MIN(srclen, dstlen);
	memmove(dst, src, len);
	return (len);
}
@


1.5
log
@first round of compile "fixes" (rather: würgarounds) for the target
@
text
@a0 2
/* $MirOS: contrib/hosted/fwcf/c_null.c,v 1.4 2006/09/23 23:21:03 tg Exp $ */

d2 1
a2 1
 * Copyright (c) 2006
d30 1
a30 1
__RCSID("$MirOS: contrib/hosted/fwcf/c_null.c,v 1.4 2006/09/23 23:21:03 tg Exp $");
d32 1
a32 1
static void c_null_load(void) __attribute__((constructor));
d35 1
a35 1
    __attribute__((bounded (string, 2, 3)));
d37 2
a38 2
    __attribute__((bounded (string, 1, 2)))
    __attribute__((bounded (string, 3, 4)));
@


1.4
log
@* work with GNU make
* work on target w/o __RCSID()
* work without c_null
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/c_null.c,v 1.3 2006/09/16 05:06:22 tg Exp $ */
d29 1
a30 1
#include "defs.h"
d32 1
a32 1
__RCSID("$MirOS: contrib/hosted/fwcf/c_null.c,v 1.3 2006/09/16 05:06:22 tg Exp $");
@


1.3
log
@decompressing does need a different API, after all
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/c_null.c,v 1.2 2006/09/16 04:40:24 tg Exp $ */
d30 1
d32 1
a32 1
__RCSID("$MirOS: contrib/hosted/fwcf/c_null.c,v 1.2 2006/09/16 04:40:24 tg Exp $");
@


1.2
log
@* fix prototype for compression functions: must use 'char *' for consistency
* add my own small adler32 implementation, after src/bin/md5/ad32-x86.S
* implement full enclosure with sanity checks
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/c_null.c,v 1.1 2006/09/16 01:06:32 tg Exp $ */
d31 1
a31 1
__RCSID("$MirOS: contrib/hosted/fwcf/c_null.c,v 1.1 2006/09/16 01:06:32 tg Exp $");
d37 3
d44 1
a44 1
	c_compress,		/* decompress */
a64 2
	if (dst == NULL)
		return (-1);
d70 8
@


1.1
log
@implement the 'null' compressor
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.1 2006/09/15 21:11:23 tg Exp $ */
d31 1
a31 1
__RCSID("$MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.1 2006/09/15 21:11:23 tg Exp $");
d35 1
a35 1
static int c_compress(void **, void *, size_t)
d60 1
a60 1
c_compress(void **dst, void *src, size_t len)
@

