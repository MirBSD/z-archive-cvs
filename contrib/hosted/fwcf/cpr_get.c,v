head	1.4;
access;
symbols
	FWCF_1_06:1.4
	FWCF_1_05:1.4
	FWCF_1_04:1.4
	FWCF_1_03:1.4
	FWCF_1_01:1.3
	FWCF_1_00:1.3;
locks; strict;
comment	@ * @;


1.4
date	2007.03.09.22.35.13;	author tg;	state Exp;
branches;
next	1.3;
commitid	10045F1E1277246A24A;

1.3
date	2006.09.23.23.46.35;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004515C75D3D00DE3D;

1.2
date	2006.09.23.23.21.04;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004515C15D179DC563;

1.1
date	2006.09.16.07.35.36;	author tg;	state Exp;
branches;
next	;
commitid	100450BA94D3353BC7D;


desc
@@


1.4
log
@while here‚Ä¶ allow algorithm selection by name, too
(‚ÄúI like my users‚Äù, or something.)
@
text
@/* $MirOS: contrib/hosted/fwcf/cpr_get.c,v 1.3 2006/09/23 23:46:35 tg Exp $ */

/*-
 * Copyright (c) 2006, 2007
 *	Thorsten Glaser <tg@@mirbsd.de>
 *
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
 *
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a defect.
 */

#include <sys/param.h>
#include <err.h>
#include <stdlib.h>
#include <string.h>

#include "defs.h"
#include "compress.h"

__RCSID("$MirOS: contrib/hosted/fwcf/cpr_get.c,v 1.3 2006/09/23 23:46:35 tg Exp $");

fwcf_compressor *
compressor_get(uint8_t algo)
{
	fwcf_compressor *list;

	if ((list = compress_enumerate()) == NULL)
		errx(1, "compress_enumerate");
	if (list[algo].name == NULL)
		errx(1, "compression algorithm %02Xh not loaded", algo);
	if (list[algo].init())
		errx(1, "cannot initialise %s compression", list[algo].name);

	return (&(list[algo]));
}

int
compressor_getbyname(const char *s)
{
	fwcf_compressor *cl;
	int i;

	if ((cl = compress_enumerate()) == NULL)
		errx(1, "no compression algorithms found");

	for (i = 1; i < 256; ++i)
		if (cl[i].name != NULL)
			if (!strcasecmp(cl[i].name, s))
				return (i);
	return (0);
}
@


1.3
log
@first round of compile "fixes" (rather: w¸rgarounds) for the target
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/cpr_get.c,v 1.2 2006/09/23 23:21:04 tg Exp $ */
d4 1
a4 1
 * Copyright (c) 2006
d27 1
d32 1
a32 1
__RCSID("$MirOS: contrib/hosted/fwcf/cpr_get.c,v 1.2 2006/09/23 23:21:04 tg Exp $");
d48 16
@


1.2
log
@* work with GNU make
* work on target w/o __RCSID()
* work without c_null
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/cpr_get.c,v 1.1 2006/09/16 07:35:36 tg Exp $ */
d26 1
d28 1
a29 1
#include "defs.h"
d31 1
a31 1
__RCSID("$MirOS: contrib/hosted/fwcf/cpr_get.c,v 1.1 2006/09/16 07:35:36 tg Exp $");
@


1.1
log
@split the code into smaller units to reduce final executables' sizes
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/compress.c,v 1.4 2006/09/16 07:09:49 tg Exp $ */
d28 1
d30 1
a30 1
__RCSID("$MirOS: contrib/hosted/fwcf/compress.c,v 1.4 2006/09/16 07:09:49 tg Exp $");
@

