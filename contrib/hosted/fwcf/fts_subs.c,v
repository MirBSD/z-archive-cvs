head	1.8;
access;
symbols
	FWCF_1_06:1.8
	FWCF_1_05:1.8
	FWCF_1_04:1.8
	FWCF_1_03:1.7
	FWCF_1_01:1.7
	FWCF_1_00:1.7;
locks; strict;
comment	@ * @;


1.8
date	2007.07.02.14.53.03;	author tg;	state Exp;
branches;
next	1.7;
commitid	100468911617B8DB2A2;

1.7
date	2006.09.24.00.28.32;	author tg;	state Exp;
branches;
next	1.6;
commitid	1004515D13B2354A135;

1.6
date	2006.09.23.23.21.04;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004515C15D179DC563;

1.5
date	2006.09.16.07.35.36;	author tg;	state Exp;
branches;
next	1.4;
commitid	100450BA94D3353BC7D;

1.4
date	2006.09.16.02.46.34;	author tg;	state Exp;
branches;
next	1.3;
commitid	100450B65865C735468;

1.3
date	2006.09.16.01.54.33;	author tg;	state Exp;
branches;
next	1.2;
commitid	100450B5968068065B7;

1.2
date	2006.09.16.00.08.42;	author tg;	state Exp;
branches;
next	1.1;
commitid	100450B409A1F919177;

1.1
date	2006.09.15.21.11.23;	author tg;	state Exp;
branches;
next	;
commitid	100450B16F309C2883E;


desc
@@


1.8
log
@more fts fixes
@
text
@/* $MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.7 2006/09/24 00:28:32 tg Exp $ */

/*-
 * Copyright (c) 2006
 *	Thorsten Glaser <tg@@mirbsd.de>
 *
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
 *
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a defect.
 */

#include <sys/param.h>
#include <sys/stat.h>
#include <err.h>
#include <errno.h>
#if !defined(__OpenBSD__) && !defined(__NetBSD__) && !defined(__APPLE__)
#include "fts_gnu.h"
#else
#include <fts.h>
#endif
#include <stdlib.h>
#include <string.h>

#include "defs.h"
#define FTSF_INTERNALS
#include "fts_subs.h"

__RCSID("$MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.7 2006/09/24 00:28:32 tg Exp $");

static FTS *handle;

char ftsf_prefix[PATH_MAX];
size_t ftsf_prefixlen;

void
ftsf_start(const char *root)
{
	char *paths[2];

	if (handle != NULL) {
		if (fts_close(handle))
			warn("fts_close");
		free(handle);
	}

	if (realpath(root, ftsf_prefix) == NULL)
		err(1, "determine realpath for %s", root);
	ftsf_prefixlen = strlen(ftsf_prefix) + 1;

	paths[0] = ftsf_prefix;
	paths[1] = NULL;

	handle = fts_open(paths, FTS_NOCHDIR | FTS_PHYSICAL, NULL);

	if (handle == NULL)
		err(1, "fts_open on %s for %s", ftsf_prefix, root);
}

int
ftsf_next(ftsf_entry *e)
{
	FTSENT *ent;
	char *ename;

	bzero(e, sizeof (ftsf_entry));

	if (handle == NULL) {
		warn("ftsf_next called before ftsf_open");
		return (-1);
	}

 ftsf_continue:
	if ((ent = fts_read(handle)) == NULL) {
		if (errno == 0) {
			if (fts_close(handle))
				warn("fts_close");
			handle = NULL;
			return (0);
		}
		warn("fts_read");
		if (fts_close(handle))
			warn("fts_close");
		handle = NULL;
		return (-1);
	}

	ename = ent->fts_path;
#if 0 /* debug */
	if (asprintf(&ename, "accpath<%s> path<%s> name<%s>", ent->fts_accpath,
	    ent->fts_path, ent->fts_name) == -1)
		err(1, "asprintf");
#endif
	if (strcmp(ename, ftsf_prefix)) {
		if (strlcpy(e->pathname, ename + ftsf_prefixlen,
		    sizeof (e->pathname)) >= sizeof (e->pathname))
			warn("truncating file name '%s' to '%s'", ename,
			    e->pathname);
	} else
		memcpy(e->pathname, ".", 2);

	switch (ent->fts_info) {
	case FTS_D:
		e->etype = FTSF_DIR;
		break;
	case FTS_DNR:
		warn("directory %s not readable, skipping: %s", ename,
		    strerror(ent->fts_errno));
		/* FALLTHROUGH */
	case FTS_DC:
	case FTS_DOT:
	case FTS_DP:
		goto ftsf_continue;
	case FTS_DEFAULT:
		if (S_ISDIR(ent->fts_statp->st_mode))
			e->etype = FTSF_DIR;
		else if (S_ISREG(ent->fts_statp->st_mode))
			e->etype = FTSF_FILE;
		else if (S_ISLNK(ent->fts_statp->st_mode))
			e->etype = FTSF_SYMLINK;
		else
			e->etype = FTSF_OTHER;
		break;
	case FTS_ERR:
		warn("generic error condition %s on %s, skipping",
		    strerror(ent->fts_errno), ename);
		goto ftsf_continue;
	case FTS_F:
		e->etype = FTSF_FILE;
		break;
	case FTS_NSOK:
		ent->fts_errno = 0;
		/* FALLTHROUGH */
	case FTS_NS:
		warn("skipping due to no stat(2) information on %s: %s",
		    ename, strerror(ent->fts_errno));
		goto ftsf_continue;
	case FTS_SL:
	case FTS_SLNONE:
		e->etype = FTSF_SYMLINK;
		break;
	default:
		warn("unknown fts_info field for %s: %d, skipping",
		    ename, (int)ent->fts_info);
		warn("ent->fts_errno = %d (%s)", ent->fts_errno,
		    strerror(ent->fts_errno));
		goto ftsf_continue;
	}

	e->statp = ent->fts_statp;
	return (1);
}
@


1.7
log
@kludge in an fts(3) implementation from ucLinux / glibc, fixed up with our own
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.6 2006/09/23 23:21:04 tg Exp $ */
d28 3
a30 1
#ifdef __OpenBSD__
a31 2
#else
#include "fts_gnu.h"
d40 1
a40 1
__RCSID("$MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.6 2006/09/23 23:21:04 tg Exp $");
@


1.6
log
@* work with GNU make
* work on target w/o __RCSID()
* work without c_null
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.5 2006/09/16 07:35:36 tg Exp $ */
d28 1
d30 3
d40 1
a40 1
__RCSID("$MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.5 2006/09/16 07:35:36 tg Exp $");
@


1.5
log
@split the code into smaller units to reduce final executables' sizes
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.4 2006/09/16 02:46:34 tg Exp $ */
d32 1
d36 1
a36 1
__RCSID("$MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.4 2006/09/16 02:46:34 tg Exp $");
@


1.4
log
@separate the fts prefix from the pathname within
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.3 2006/09/16 01:54:33 tg Exp $ */
a28 1
#include <stdio.h>
d35 1
a35 1
__RCSID("$MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.3 2006/09/16 01:54:33 tg Exp $");
a158 20

void
ftsf_debugent(ftsf_entry *e)
{
	fprintf(stderr,
	    "%s @@%08X %06o %2u %u %06llX %lu:%lu %s/\033[1m%s\033[0m%c\n",
	    (e->etype == FTSF_DIR ? "DIR" : e->etype == FTSF_FILE ? "REG" :
	    e->etype == FTSF_SYMLINK ? "SYM" : "OTH"),
	    (unsigned)e->statp->st_ino, (unsigned)e->statp->st_mode,
	    e->statp->st_nlink, (unsigned)e->statp->st_mtime,
	    (uint64_t)e->statp->st_size, (u_long)e->statp->st_uid,
	    (u_long)e->statp->st_gid, ftsf_prefix, e->pathname,
	    ((e->statp->st_mode & S_IFMT) == S_IFDIR ? '/' :
	    (e->statp->st_mode & S_IFMT) == S_IFIFO ? '|' :
	    (e->statp->st_mode & S_IFMT) == S_IFLNK ? '@@' :
	    (e->statp->st_mode & S_IFMT) == S_IFSOCK ? '=' :
	    (e->statp->st_mode & S_IFMT) == S_IFBLK ? '&' :
	    (e->statp->st_mode & S_IFMT) == S_IFCHR ? '%' :
	    (e->statp->st_mode & (S_IXUSR | S_IXGRP | S_IXOTH)) ? '*' : '_'));
}
@


1.3
log
@oops, missed a skip in the error case
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.2 2006/09/16 00:08:42 tg Exp $ */
d33 1
d36 1
a36 1
__RCSID("$MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.2 2006/09/16 00:08:42 tg Exp $");
d40 3
d46 1
a46 1
	char *paths[2], real_root[PATH_MAX];
d54 1
a54 1
	if (realpath(root, real_root) == NULL)
d56 1
d58 1
a58 1
	paths[0] = real_root;
d64 1
a64 1
		err(1, "fts_open on %s for %s", real_root, root);
d101 7
a107 2
	if (strlcpy(e->pathname, ename, MAXPATHLEN) >= MAXPATHLEN)
		warn("truncating file name '%s' to '%s'", ename, e->pathname);
d164 2
a165 1
	fprintf(stderr, "%s @@%08X %06o %2u %u %06llX %lu:%lu %s%c\n",
d171 1
a171 1
	    (u_long)e->statp->st_gid, e->pathname,
@


1.2
log
@make the fts traversal stuff work
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.1 2006/09/15 21:11:23 tg Exp $ */
d35 1
a35 1
__RCSID("$MirOS: contrib/hosted/fwcf/fts_subs.c,v 1.1 2006/09/15 21:11:23 tg Exp $");
d144 1
@


1.1
log
@begin operating on file tree traversal, not finished yet
mkfwcf.c will only be enhanced by the compression functions
later, it's almost finished
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.14 2006/08/09 19:35:23 tg Rel $ */
d29 1
d31 1
d35 1
a35 1
__RCSID("$MirOS$");
d66 3
d75 1
d90 78
a167 1
XXX fill in ftsf_entry *e structure
@

