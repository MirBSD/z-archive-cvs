head	1.14;
access;
symbols
	FWCF_1_06:1.14
	FWCF_1_05:1.14
	FWCF_1_04:1.14
	FWCF_1_03:1.14
	FWCF_1_01:1.14
	FWCF_1_00:1.14;
locks; strict;
comment	@# @;


1.14
date	2006.09.26.10.25.06;	author tg;	state Exp;
branches;
next	1.13;
commitid	1004518FFF55AB578D0;

1.13
date	2006.09.24.21.51.28;	author tg;	state Exp;
branches;
next	1.12;
commitid	1004516FDB62809CB5C;

1.12
date	2006.09.23.22.05.26;	author tg;	state Exp;
branches;
next	1.11;
commitid	1004515AFA04C63C9B9;

1.11
date	2006.09.23.20.20.01;	author tg;	state Exp;
branches;
next	1.10;
commitid	100451596B33F0C3FA0;

1.10
date	2006.09.23.19.47.40;	author tg;	state Exp;
branches;
next	1.9;
commitid	10045158F5D2C01880F;

1.9
date	2006.09.23.18.44.10;	author tg;	state Exp;
branches;
next	1.8;
commitid	100451580874E171604;

1.8
date	2006.09.16.07.35.37;	author tg;	state Exp;
branches;
next	1.7;
commitid	100450BA94D3353BC7D;

1.7
date	2006.09.16.07.09.50;	author tg;	state Exp;
branches;
next	1.6;
commitid	100450BA34B6AE3B0F3;

1.6
date	2006.09.16.06.47.31;	author tg;	state Exp;
branches;
next	1.5;
commitid	100450B9E13665096CF;

1.5
date	2006.09.16.06.44.26;	author tg;	state Exp;
branches;
next	1.4;
commitid	100450B9D56301DA2D4;

1.4
date	2006.09.16.06.18.58;	author tg;	state Exp;
branches;
next	1.3;
commitid	100450B975E603852FA;

1.3
date	2006.09.16.05.52.09;	author tg;	state Exp;
branches;
next	1.2;
commitid	100450B910B6234B8E8;

1.2
date	2006.09.15.20.11.18;	author tg;	state Exp;
branches;
next	1.1;
commitid	100450B08F47CEE72D3;

1.1
date	2006.09.15.20.09.37;	author tg;	state Exp;
branches;
next	;
commitid	100450B082946BA0B6E;


desc
@@


1.14
log
@* fix missing includes
* cast a little more, for systems other than MirOS #9-current
* spelling
* build fwcf.helper correctly without libz
@
text
@# $MirOS: contrib/hosted/fwcf/unfwcf/Makefile,v 1.13 2006/09/24 21:51:28 tg Exp $
#-
# This file is part of the FreeWRT project. FreeWRT is copyrighted
# material, please see the LICENCE file in the top-level directory
# or at http://www.freewrt.org/licence for details.

PROG=		unfwcf
SRCS=		${PROG}.c ${COMPRESSORS} sys_bsd.c
NOMAN=		yes
DPADD+=		${LIBZ}
LDADD+=		-lz
CLEANFILES+=	${.CURDIR}/test.out ${.CURDIR}/tesz.out \
		${.CURDIR}/test.nil ${.CURDIR}/tesz.nil

test: ${PROG}
	./${PROG} -d <${.CURDIR}/../mkfwcf/test.out >${.CURDIR}/test.out
	./${PROG} -d <${.CURDIR}/../mkfwcf/tesz.out >${.CURDIR}/tesz.out
	./${PROG} -d <${.CURDIR}/../mkfwcf/test.nil >${.CURDIR}/test.nil
	./${PROG} -d <${.CURDIR}/../mkfwcf/tesz.nil >${.CURDIR}/tesz.nil
	./${PROG} -i ${.CURDIR}/../mkfwcf/test.out out.test
	./${PROG} -i ${.CURDIR}/../mkfwcf/tesz.out out.tesz

.include <bsd.prog.mk>

clean cleandir: clean-local

clean-local:
	-rm -rf out.test out.tesz
@


1.13
log
@* switch fwcf.helper (uClibc target) to use LZO1X-1 compression
  instead of deflate compression
  On the BSD i386 host, this costs 4754 Bytes in the executable,
  but on the other hand, we can get rid of linking in libz which
  is much more heavy-weight.
* fix 'cleandir' target (BSD host)
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/unfwcf/Makefile,v 1.12 2006/09/23 22:05:26 tg Exp $
d5 1
a5 1
# or at http://www.freewrt.org/license for details.
@


1.12
log
@implement the ability to create empty filesystems
implement linux sysdeps for random
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/unfwcf/Makefile,v 1.11 2006/09/23 20:20:01 tg Exp $
d25 1
a25 1
clean: clean-local
@


1.11
log
@* wraps.c: properly calculate size of the flash block from the outer
  size, not from the inner size
* all: handle entropy
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/unfwcf/Makefile,v 1.10 2006/09/23 19:47:40 tg Exp $
d12 2
a13 1
CLEANFILES+=	${.CURDIR}/test.out ${.CURDIR}/tesz.out
d18 2
@


1.10
log
@extraction function for unfwcf, whose development
is about finished with that
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/unfwcf/Makefile,v 1.9 2006/09/23 18:44:10 tg Exp $
d8 1
a8 1
SRCS=		${PROG}.c ${COMPRESSORS}
@


1.9
log
@prepare for ft_creat addition
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/unfwcf/Makefile,v 1.8 2006/09/16 07:35:37 tg Exp $
d17 2
d21 5
@


1.8
log
@split the code into smaller units to reduce final executables' sizes
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/unfwcf/Makefile,v 1.7 2006/09/16 07:09:50 tg Exp $
d15 2
a16 2
	./${PROG} dummy <${.CURDIR}/../mkfwcf/test.out >${.CURDIR}/test.out
	./${PROG} dummy <${.CURDIR}/../mkfwcf/tesz.out >${.CURDIR}/tesz.out
@


1.7
log
@more code-sharing
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/unfwcf/Makefile,v 1.6 2006/09/16 06:47:31 tg Exp $
d8 1
a9 10
SRCS=		unfwcf.c
SRCS+=		ft_dump.c compress.c wraps.c
SRCS+=		c_null.c
SRCS+=		c_zlib.c

CPPFLAGS+=	-DWRAPS_UNPACK

CPPFLAGS+=	-I${.CURDIR}/..
.PATH: ${.CURDIR}/..

a11 1

@


1.6
log
@remove unneeded source files
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/unfwcf/Makefile,v 1.5 2006/09/16 06:44:26 tg Exp $
d10 1
a10 1
SRCS+=		ft_dump.c compress.c
d14 2
@


1.5
log
@parse the fwcf inner filesystem structure
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/unfwcf/Makefile,v 1.4 2006/09/16 06:18:58 tg Exp $
d10 1
a10 1
SRCS+=		fts_subs.c ft_dump.c compress.c header.c
@


1.4
log
@code sharing and cleanup
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/unfwcf/Makefile,v 1.3 2006/09/16 05:52:09 tg Exp $
d10 1
a10 1
SRCS+=		fts_subs.c ft_pack.c ft_packm.c compress.c header.c
@


1.3
log
@already unpacking (incl. decompressing with both algos) the inner filesystem
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/unfwcf/Makefile,v 1.2 2006/09/15 20:11:18 tg Exp $
d20 1
a20 1
CLEANFILES+=	${.CURDIR}/test.out ${.CURDIR}/testz.out
d24 1
a24 1
	./${PROG} dummy <${.CURDIR}/../mkfwcf/testz.out >${.CURDIR}/testz.out
@


1.2
log
@rapid development - skip libz/deflate compression for now
@
text
@d1 1
a1 1
# $MirOS: contrib/hosted/fwcf/unfwcf/Makefile,v 1.1 2006/09/15 20:09:37 tg Exp $
d10 3
a12 3
SRCS+=		compress.c #...
SRCS+=		c_none.c
#SRCS+=		c_zlib.c
d17 8
a24 2
#DPADD+=	${LIBZ}
#LDADD+=	-lz
@


1.1
log
@initial skeleton:

first will be two programmes, mkfwcf and unfwcf, which operate
similar to pkzip and pkunzip; code will be designed to be re-
usable by the later fwcfctl programme.

mkfwcf and unfwcf will be designed to run on MirOS (and OpenBSD);
GNU/Linux compatibility is not a design criterium.
@
text
@d1 5
a5 1
# $MirOS$
d12 1
a12 1
SRCS+=		c_zlib.c
d17 2
a18 2
DPADD+=		${LIBZ}
LDADD+=		-lz
@

