head	1.3;
access;
symbols
	FWCF_1_06:1.3
	FWCF_1_05:1.3
	FWCF_1_04:1.3
	FWCF_1_03:1.3
	FWCF_1_01:1.3
	FWCF_1_00:1.3;
locks; strict;
comment	@ * @;


1.3
date	2006.09.26.10.25.03;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004518FFF55AB578D0;

1.2
date	2006.09.23.23.21.05;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004515C15D179DC563;

1.1
date	2006.09.23.22.05.25;	author tg;	state Exp;
branches;
next	;
commitid	1004515AFA04C63C9B9;


desc
@@


1.3
log
@* fix missing includes
* cast a little more, for systems other than MirOS #9-current
* spelling
* build fwcf.helper correctly without libz
@
text
@/* $MirOS: contrib/hosted/fwcf/sys_linux.c,v 1.2 2006/09/23 23:21:05 tg Exp $ */

/*-
 * Copyright (c) 2006
 *	Thorsten Glaser <tg@@mirbsd.de>
 *
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
 *
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a defect.
 */

#include <err.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#include "defs.h"
#include "sysdeps.h"

__RCSID("$MirOS: contrib/hosted/fwcf/sys_linux.c,v 1.2 2006/09/23 23:21:05 tg Exp $");

void
pull_rndata(uint8_t *buf, size_t n)
{
	int fd;

	if ((fd = open("/dev/urandom", O_RDONLY)) < 0) {
		warn("Cannot open /dev/urandom for %sing", "read");
		return;
	}
	if ((size_t)read(fd, buf, n) != n)
		warn("Cannot read %lu bytes from /dev/urandom", (u_long)n);
	close(fd);
}

void
push_rndata(uint8_t *buf, size_t n)
{
	int fd;

	if ((fd = open("/dev/urandom", O_WRONLY)) < 0) {
		warn("Cannot open /dev/urandom for %sing", "writ");
		return;
	}
	if ((size_t)write(fd, buf, n) != n)
		warn("Cannot write %lu bytes to /dev/urandom", (u_long)n);
	close(fd);
}
@


1.2
log
@* work with GNU make
* work on target w/o __RCSID()
* work without c_null
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/sys_linux.c,v 1.1 2006/09/23 22:05:25 tg Exp $ */
d24 1
d28 1
d33 1
a33 1
__RCSID("$MirOS: contrib/hosted/fwcf/sys_linux.c,v 1.1 2006/09/23 22:05:25 tg Exp $");
d44 1
a44 1
	if (read(fd, buf, n) != n)
d58 1
a58 1
	if (write(fd, buf, n) != n)
@


1.1
log
@implement the ability to create empty filesystems
implement linux sysdeps for random
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/sys_bsd.c,v 1.1 2006/09/23 20:20:00 tg Exp $ */
d24 1
d28 1
d31 1
a31 1
__RCSID("$MirOS: contrib/hosted/fwcf/sys_bsd.c,v 1.1 2006/09/23 20:20:00 tg Exp $");
@

