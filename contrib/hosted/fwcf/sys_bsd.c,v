head	1.7;
access;
symbols
	FWCF_1_06:1.6
	FWCF_1_05:1.4
	FWCF_1_04:1.4
	FWCF_1_03:1.4
	FWCF_1_01:1.3
	FWCF_1_00:1.3;
locks; strict;
comment	@ * @;


1.7
date	2010.09.21.21.24.04;	author tg;	state Exp;
branches;
next	1.6;
commitid	1004C992261692DCA0F;

1.6
date	2008.07.06.16.26.44;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004870F24D7C03D427;

1.5
date	2008.07.06.16.25.33;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004870F1FE570A185B;

1.4
date	2007.03.13.18.14.30;	author tg;	state Exp;
branches;
next	1.3;
commitid	10045F6EA1D49AE20D1;

1.3
date	2006.09.24.20.34.59;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004516EBC4399F582B;

1.2
date	2006.09.23.23.21.04;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004515C15D179DC563;

1.1
date	2006.09.23.20.20.00;	author tg;	state Exp;
branches;
next	;
commitid	100451596B33F0C3FA0;


desc
@@


1.7
log
@use arc4random() a bit more efficiently
@
text
@/* $MirOS: contrib/hosted/fwcf/sys_bsd.c,v 1.6 2008/07/06 16:26:44 tg Exp $ */

/*-
 * Copyright (c) 2006, 2007
 *	Thorsten Glaser <tg@@mirbsd.de>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 */

#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>

#include "defs.h"
#include "sysdeps.h"

__RCSID("$MirOS: contrib/hosted/fwcf/sys_bsd.c,v 1.6 2008/07/06 16:26:44 tg Exp $");

void
pull_rndata(uint8_t *buf, size_t n)
{
#ifdef RND_DISABLE
	while (n--)
		*buf++ = 0xF6;
	*--buf = 0xFF;
#else
#ifdef RND_DEBUG
	fprintf(stderr, "writing %ld bytes of entropy\n", n);
	while (n > 4) {
#else
	while (n >= 4) {
#endif
		*(uint32_t *)buf = arc4random();
#ifdef RND_DEBUG
		*buf = 0xF6;
#endif
		buf += 4;
		n -= 4;
	}
	while (n) {
#ifdef RND_DEBUG
		*buf++ = 0xF6;
#else
		*buf++ = arc4random() & 0xFF;
#endif
		n--;
	}
#ifdef RND_DEBUG
		*--buf = 0xFF;
#endif
#endif
}

void
push_rndata(uint8_t *buf, size_t n)
{
#ifdef RND_DEBUG
	size_t i;
#endif
#if defined(arc4random_pushb_fast)
	arc4random_pushb_fast(buf, n);
#elif defined(__MirBSD__)
	arc4random_pushb(buf, n);
#else
	int fd;
	uint32_t x;

	arc4random_addrandom(buf, n);
	x = arc4random();
	if (((fd = open("/dev/arandom", O_WRONLY)) >= 0) ||
	    ((fd = open("/dev/urandom", O_WRONLY)) >= 0)) {
		write(fd, &x, 4);
		close(fd);
	} else
		warn("cannot write to /dev/arandom nor /dev/urandom");
#endif
#ifdef RND_DEBUG
	printf("reading %ld bytes of entropy\n", n);
	for (i = 0; i < n; ++i) {
		printf(" %02X", buf[i]);
		if ((i & 0xF) == 0xF)
			putchar('\n');
	}
	putchar('\n');
#endif
}
@


1.6
log
@nah, actually do not use arc4random_pushk() as it's not guaranteed to try
to feed to kernel
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/sys_bsd.c,v 1.5 2008/07/06 16:25:33 tg Exp $ */
d30 1
a30 1
__RCSID("$MirOS: contrib/hosted/fwcf/sys_bsd.c,v 1.5 2008/07/06 16:25:33 tg Exp $");
d73 3
a75 1
#ifdef __MirBSD__
@


1.5
log
@improve entropy handling portability to non-Mir BSDs
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/sys_bsd.c,v 1.4 2007/03/13 18:14:30 tg Exp $ */
d30 1
a30 1
__RCSID("$MirOS: contrib/hosted/fwcf/sys_bsd.c,v 1.4 2007/03/13 18:14:30 tg Exp $");
a74 2
#elif defined(arc4random_pushk)
	arc4random_pushk(buf, n);
@


1.4
log
@some changes required to make this build on OpenBSD
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.20 2006/12/11 21:04:56 tg Rel $ */
d30 1
a30 1
__RCSID("$MirOS: contrib/hosted/fwcf/sys_bsd.c,v 1.3 2006/09/24 20:34:59 tg Exp $");
d75 2
d83 2
a84 1
	if ((fd = open("/dev/arandom", O_WRONLY)) >= 0) {
d88 1
a88 1
		warn("cannot write to /dev/arandom");
@


1.3
log
@* join mkfwcf.c, unfwcf.c, fwcf.helper.c into a single file tool.c
  which builds a combinded mkfwcf+unfwcf for the host normally, and
  a stripped-down tool for the target #ifdef SMALL (code sharing ;)
* enhance the tool by recompress functionality

Note: mkfwcf and unfwcf are kept for now
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/sys_bsd.c,v 1.2 2006/09/23 23:21:04 tg Exp $ */
d4 1
a4 1
 * Copyright (c) 2006
d7 5
a11 6
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
d13 8
a20 8
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a defect.
d23 1
d30 1
a30 1
__RCSID("$MirOS: contrib/hosted/fwcf/sys_bsd.c,v 1.2 2006/09/23 23:21:04 tg Exp $");
@


1.2
log
@* work with GNU make
* work on target w/o __RCSID()
* work without c_null
@
text
@d1 1
a1 1
/* $MirOS: contrib/hosted/fwcf/sys_bsd.c,v 1.1 2006/09/23 20:20:00 tg Exp $ */
d30 1
a30 1
__RCSID("$MirOS: contrib/hosted/fwcf/sys_bsd.c,v 1.1 2006/09/23 20:20:00 tg Exp $");
d35 5
d64 1
@


1.1
log
@* wraps.c: properly calculate size of the flash block from the outer
  size, not from the inner size
* all: handle entropy
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.14 2006/08/09 19:35:23 tg Rel $ */
d27 1
d30 1
a30 1
__RCSID("$MirOS$");
@

