head	1.6;
access;
symbols
	libtool-1_5_21:1.1.101.6
	FSF:1.1.101;
locks; strict;
comment	@# @;


1.6
date	2005.07.25.00.01.37;	author tg;	state Exp;
branches;
next	1.5;
commitid	588c42e42be3bef1;

1.5
date	2005.02.10.21.07.45;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.10.19.51.47;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.02.10.19.31.45;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.05.02.25.03;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.01.52.01;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.02.05.01.52.01;	author tg;	state Exp;
branches;
next	1.1.101.2;

1.1.101.2
date	2005.02.05.02.16.30;	author tg;	state Exp;
branches;
next	1.1.101.3;

1.1.101.3
date	2005.02.10.19.29.25;	author tg;	state Exp;
branches;
next	1.1.101.4;

1.1.101.4
date	2005.04.26.16.14.19;	author tg;	state Exp;
branches;
next	1.1.101.5;

1.1.101.5
date	2005.05.21.13.27.36;	author tg;	state Exp;
branches;
next	1.1.101.6;
commitid	639b428f375c6c6a;

1.1.101.6
date	2005.08.20.12.40.50;	author tg;	state Exp;
branches;
next	1.1.101.7;
commitid	2bca430724da157a;

1.1.101.7
date	2008.05.03.17.56.10;	author tg;	state Exp;
branches;
next	;
commitid	100481CA74B3EE2A489;


desc
@@


1.6
log
@* we only have one MirLibtool, no -1.4 and -1.5, for long
* while here, shrink yourself healthy
@
text
@## Process this file with automake to produce Makefile.in
# $MirOS: contrib/gnu/libtool/Makefile.am,v 1.5 2005/02/10 21:07:45 tg Exp $

AUTOMAKE_OPTIONS = 1.3e gnu

aclocal_macros = libtool.m4

EXTRA_DIST = $(aclocal_macros) ltmain.in
CLEANFILES = libtool ltmain.shT
bin_SCRIPTS = libtool

libtool: $(srcdir)/ltmain.sh $(top_builddir)/configure.ac
	$(SHELL) $(top_builddir)/config.status --recheck
	chmod +x $@@

ltmain.sh: $(srcdir)/ltmain.in
	-rm -f ltmain.shT
	date=" (MirLibtool $$(date +'%Y/%m/%d %H:%M:%S'))" && \
	sed -e 's/@@''PACKAGE@@/@@PACKAGE@@/' -e 's/@@''VERSION@@/@@VERSION@@/' \
	    -e "s%@@""TIMESTAMP@@%$$date%" $(srcdir)/ltmain.in > ltmain.shT
	mv -f ltmain.shT $@@ || \
	(rm -f $@@ && cp ltmain.shT $@@ && rm -f ltmain.shT)
@


1.5
log
@get rid of libtoolize; MirPorts don't need it
@
text
@d2 1
a2 1
# $MirOS: contrib/gnu/libtool/Makefile.am,v 1.4 2005/02/10 19:51:47 tg Exp $
a5 13
BUILD_SUBDIRS = .
CONF_SUBDIRS = @@CONF_SUBDIRS@@
SUBDIRS = $(BUILD_SUBDIRS)
DIST_SUBDIRS = $(BUILD_SUBDIRS) $(CONF_SUBDIRS)

# We need to export these variables
CFLAGS = @@CFLAGS@@
CPPLAGS = @@CPPFLAGS@@
LDFLAGS = @@LDFLAGS@@
LIBS= @@LIBS@@
FFLAGS = @@FFLAGS@@
FLIBS = @@FLIBS@@

d8 3
a10 10
EXTRA_DIST = $(aclocal_macros) bootstrap ltmain.in #libtoolize.in
CLEANFILES = libtool ltmain.shT #libtoolize

# These are required by libtoolize and must be executable when installed.
# Since _SCRIPTS gets the program transform applied we make them
# executable by hand
pkgdata_DATA = config.guess config.sub install-sh ltmain.sh

# The standalone libtool script, and the libtool distributor.
bin_SCRIPTS = libtool #libtoolize
d16 1
a16 5
libtoolize: $(srcdir)/libtoolize.in $(top_builddir)/config.status
	CONFIG_FILES=$@@ CONFIG_HEADERS= $(SHELL) $(top_builddir)/config.status
	chmod +x $@@

$(srcdir)/ltmain.sh: $(srcdir)/ltmain.in $(TSDEPS)
d18 1
a18 1
	date=" (MirLibtool-1.5 $$(date '+%Y/%m/%d %H:%M:%S'))" && \
a22 8

# All our rules should depend on these demo files.
all-recursive: $(ACINCLUDE_M4_LIST)

@@ACINCLUDE_M4_LIST@@: $(srcdir)/libtool.m4
	-rm -f $@@ $@@T
	cat $(srcdir)/libtool.m4 > $@@T
	mv $@@T $@@
@


1.4
log
@update to MirOS versions
@
text
@d2 1
a2 1
# $MirOS$
d21 2
a22 2
EXTRA_DIST = $(aclocal_macros) bootstrap libtoolize.in ltmain.in
CLEANFILES = libtool libtoolize ltmain.shT
d30 1
a30 1
bin_SCRIPTS = libtool libtoolize
@


1.3
log
@update to (plain) GNU libtool 1.5.12
@
text
@d2 1
d6 1
a6 1
BUILD_SUBDIRS = . libltdl doc tests
d19 1
a19 1
aclocal_macros = libtool.m4 ltdl.m4
d21 1
a21 2
EXTRA_DIST = $(aclocal_macros) bootstrap libtoolize.in ltmain.in \
	mkstamp ChangeLog.0 ChangeLog.1
a28 3
# This macro file should be visible to Automake's aclocal.
aclocal_DATA = $(aclocal_macros)

d42 1
a42 1
	date=`$(SHELL) $(srcdir)/mkstamp < $(srcdir)/ChangeLog` && \
a46 1
	cp $@@ $(srcdir)/libltdl/
d49 1
a49 6
all-recursive: $(srcdir)/libltdl/acinclude.m4 $(ACINCLUDE_M4_LIST)

@@srcdir@@/libltdl/acinclude.m4: $(srcdir)/libtool.m4 $(srcdir)/ltdl.m4
	-rm -f $@@ $@@T
	cat $(srcdir)/libtool.m4 $(srcdir)/ltdl.m4 > $@@T
	mv $@@T $@@
a54 212

.PHONY: configure-subdirs
configure-subdirs distdir: $(DIST_MAKEFILE_LIST)
@@DIST_MAKEFILE_LIST@@:
	dir=`echo $@@ | sed 's,^[^/]*$$,.,;s,/[^/]*$$,,'`; \
	test -d $$dir || mkdir $$dir || exit 1; \
	abs_srcdir=`cd $(top_srcdir) && pwd`; \
	(cd $$dir && $$abs_srcdir/$$dir/configure) || exit 1

# Create and install libltdl
install-data-hook:
	cd libltdl && $(MAKE) local-install-files
	chmod +x $(DESTDIR)$(pkgdatadir)/config.guess
	chmod +x $(DESTDIR)$(pkgdatadir)/config.sub
	chmod +x $(DESTDIR)$(pkgdatadir)/install-sh

# Uninstall libltdl
uninstall-local:
	-rm -rf $(DESTDIR)$(pkgdatadir)/libltdl


## ---------------------------------------------------------------- ##
##  Everything past here is useful to the maintainer, but probably  ##
##  not to anybody else (inspiration from automake/Makefile.am).    ##
## ---------------------------------------------------------------- ##

TEXI2HTML = texi2html

.PHONY: cvs-release
cvs-release: version-check prev-tarball cvs-news fetch cvs-commit cvs-dist deltas web-manual
	@@tarname="$(PACKAGE)-$(VERSION).tar.gz"; \
	diffname="$(PACKAGE)-$(LASTRELEASE)-$(VERSION).diff.gz"; \
	xdeltaname="$(PACKAGE)-$(LASTRELEASE)-$(VERSION).xdelta"; \
	echo " *** Upload $$tarname, $$tarname.sig,";\
	echo " *** $$tarname.directive.asc, $$diffname,"; \
	echo " *** $$diffname.sig, $$diffname.directive.asc,"; \
	echo " *** $$xdeltaname, $$xdeltaname.sig and";\
	echo " *** $$xdeltaname.directive.asc to either"
	echo " *** /incoming/alpha or /incoming/ftp on ftp-upload.gnu.org."
	echo " *** You might need to upload manual.html to webcvs/libtool."

.PHONY: version-check
version-check:
	@@case $(VERSION) in \
	*[acegikmoqsuwy]) \
	  echo "Version \`$(VERSION)' is not a releasable version, please read:"; \
	  echo "    http://www.gnu.org/software/libtool/contribute.html"; \
	  exit 1; \
	  ;; \
	esac

.PHONY: prev-tarball
prev-tarball:
## Make sure we have the previous release tarball in the tree.
	@@if test -z "$(LASTRELEASE)"; \
		then echo "LASTRELEASE is not set"; exit 1; fi
	@@ofile="$(PACKAGE)-$(LASTRELEASE).tar.gz"; \
	if test -f $$ofile; then :; \
	else echo "Cannot make deltas without $$ofile"; exit 1; fi

# TSDEPS will be defined to TSDEPS_DIST at `make dist' time
TSDEPS =
TSDEPS_DIST = ChangeLog libtool.m4
CVS = cvs # set it to `:' to avoid CVS operations

.PHONY: timestamps update-timestamps
timestamps: update-timestamps
update-timestamps:
	@@if (cd $(srcdir) && test -d CVS && \
	    $(CVS) -n update $(TSDEPS_DIST) | grep '^M'); then \
		echo "Cannot make cvs-dist before commit"; exit 1; else :; fi


.PHONY: cvs-news
cvs-news:
## Make sure the NEWS file is up-to-date:
	@@if sed '1,2d;3q' $(srcdir)/NEWS | grep -e "$(VERSION)" >/dev/null; \
	then :; \
	else \
	  echo "NEWS not updated; not releasing" 1>&2; \
	  exit 1; \
	fi

## Program to use to fetch files.
WGET = wget
WGETSGO = $(WGET) http://savannah.gnu.org/cgi-bin/viewcvs/~checkout~

## Files that we fetch and which we compare against.
## FIXME should be a lot more here
FETCHFILES = \
./INSTALL \
./config.guess \
libltdl/config.guess \
./config.sub \
libltdl/config.sub \
./install-sh \
libltdl/install-sh \
doc/texinfo.tex

## Fetch the latest versions of files we care about.
.PHONY: fetch
fetch:
	rm -rf Fetchdir > /dev/null 2>&1
	mkdir Fetchdir
## If a get fails then that is a problem.
	(cd Fetchdir && \
	$(WGETSGO)/autoconf/autoconf/INSTALL; \
	$(WGETSGO)/automake/automake/lib/install-sh; \
	$(WGETSGO)/config/config/config.guess; \
	$(WGETSGO)/config/config/config.sub; \
	$(WGETSGO)/texinfo/texinfo/doc/texinfo.tex )
## Don't exit after test because we want to give as many errors as
## possible.
	@@stat=0; for file in $(FETCHFILES); do \
	  fetchedfile=Fetchdir/`echo $$file | sed 's,.*/,,g'`; \
	  if diff -u $(srcdir)/$$file $$fetchedfile \
	    >>Fetchdir/update.patch 2>/dev/null; then :; \
	  else \
	    stat=1; \
	    echo "Updating $(srcdir)/$$file..."; \
	    cp $$fetchedfile $(srcdir)/$$file; \
	  fi; \
	done; \
	test $$stat = 1 && \
	  echo "See Fetchdir/update.patch for a log of the changes."; \
	exit $$stat


GPG = gpg # set it to `:' to avoid gpg operations

.PHONY: cvs-commit
cvs-commit: cvs-news
	cd $(srcdir) && $(SHELL) ./commit

.PHONY: cvs-dist
cvs-dist: cvs-news timestamps
## Build the distribution:
	$(MAKE) distcheck
## Finally, if everything was successful, tag the release
	cd $(srcdir) \
	  && $(CVS) -q tag -c `echo "release-$(VERSION)" | sed 's/\./-/g'`
## Generate signatures and directives for FSF ftp-upload:
	ofile="$(PACKAGE)-$(VERSION).tar.gz"; \
	$(GPG) --detach-sign $$ofile \
	&& echo "directory: libtool" > $$ofile.directive \
	&& $(GPG) --clearsign $$ofile.directive \
	&& rm -f $$ofile.directive

.PHONY: new-tarball
new-tarball:
## Make sure we have the new release tarball in the tree.
	@@ofile="$(PACKAGE)-$(VERSION).tar.gz"; \
	if test -f $$ofile; then :; \
	else echo "Cannot make deltas without $$ofile"; exit 1; fi

.PHONY: got-xdelta
got-xdelta:
## Make sure xdelta exists;
	@@if ($(XDELTA) --version 2>&1 | grep version)>/dev/null 2>/dev/null; \
	then :;\
	else \
	  echo "Get xdelta from http://sourceforge.net/projects/xdelta."; \
	  exit 1; \
	fi

.PHONY: deltas
deltas: delta-diff delta-xdelta

DIFF = diff
DIFF_OPTIONS = -ruNp

.PHONY: delta-diff
delta-diff: prev-tarball new-tarball
## Unpack the tarballs somewhere to diff them
	rm -rf delta-diff
	mkdir delta-diff
	ofile="../$(PACKAGE)-$(LASTRELEASE)-$(VERSION).diff.gz"; \
	cd delta-diff \
	&& tar xzf "../$(PACKAGE)-$(LASTRELEASE).tar.gz" \
	&& tar xzf "../$(PACKAGE)-$(VERSION).tar.gz" \
	&& $(DIFF) $(DIFF_OPTIONS) \
		$(PACKAGE)-$(LASTRELEASE) $(PACKAGE)-$(VERSION) \
		| GZIP=$(GZIP_ENV) gzip -c > $$ofile \
	&& $(GPG) --detach-sign $$ofile \
	&& echo "directory: libtool" > $$ofile.directive \
	&& $(GPG) --clearsign $$ofile.directive \
	&& rm -f $$ofile.directive
	rm -rf delta-diff

XDELTA = xdelta
XDELTA_OPTIONS = -9

.PHONY: delta-xdelta
delta-xdelta: prev-tarball new-tarball got-xdelta
## Generate the delta file (xdelta has wierd exit statuses, so we need to
## add some shell code to keep make happy), and then generate the signatures
## for FSF ftp-upload:
	ofile="$(PACKAGE)-$(LASTRELEASE)-$(VERSION).xdelta"; \
	( test -z `$(XDELTA) delta $(XDELTA_OPTIONS) \
	    $(PACKAGE)-$(LASTRELEASE).tar.gz $(PACKAGE)-$(VERSION).tar.gz \
	    $$ofile 2>&1` \
	  && : ) \
	&& $(GPG) --detach-sign $$ofile \
	&& echo "directory: libtool" > $$ofile.directive \
	&& $(GPG) --clearsign $$ofile.directive \
	&& rm -f $$ofile.directive

.PHONY: web-manual
web-manual:
	@@$(LN_S) $(top_srcdir)/doc/libtool.texi manual.texi
	$(TEXI2HTML) -I $(top_srcdir)/doc -monolithic -number -verbose manual.texi
	@@rm -f manual.texi
@


1.2
log
@merge MirLibtool
@
text
@a1 1
# $MirOS$
d5 1
a5 1
BUILD_SUBDIRS = .
d18 1
a18 1
aclocal_macros = libtool.m4
d20 2
a21 1
EXTRA_DIST = $(aclocal_macros) bootstrap libtoolize.in ltmain.in
d27 4
a30 1
pkgdata_DATA = config.guess config.sub ltmain.sh
d45 1
a45 1
	date=" (MirLibtool-1.5 $$(date '+%Y/%m/%d %H:%M:%S'))" && \
d50 1
d53 6
a58 1
all-recursive: $(ACINCLUDE_M4_LIST)
d64 212
@


1.1
log
@Initial revision
@
text
@a0 2
# $MirBSD: contrib/gnu/libtool/Makefile.am,v 1.10 2004/08/10 01:18:01 tg Stab $

d2 1
@


1.1.101.1
log
@some GNU infrastructural files from various sources
@
text
@@


1.1.101.2
log
@GNU libtool 1.5.10
(just not everything of it)
@
text
@d1 2
d7 1
a7 1
BUILD_SUBDIRS = . libltdl doc tests
d20 1
a20 1
aclocal_macros = libtool.m4 ltdl.m4
d22 1
a22 2
EXTRA_DIST = $(aclocal_macros) bootstrap libtoolize.in ltmain.in \
	mkstamp ChangeLog.0 ChangeLog.1
a29 3
# This macro file should be visible to Automake's aclocal.
aclocal_DATA = $(aclocal_macros)

d43 1
a43 1
	date=`$(SHELL) $(srcdir)/mkstamp < $(srcdir)/ChangeLog` && \
a47 1
	cp $@@ $(srcdir)/libltdl/
d50 1
a50 6
all-recursive: $(srcdir)/libltdl/acinclude.m4 $(ACINCLUDE_M4_LIST)

@@srcdir@@/libltdl/acinclude.m4: $(srcdir)/libtool.m4 $(srcdir)/ltdl.m4
	-rm -f $@@ $@@T
	cat $(srcdir)/libtool.m4 $(srcdir)/ltdl.m4 > $@@T
	mv $@@T $@@
a55 209

.PHONY: configure-subdirs
configure-subdirs distdir: $(DIST_MAKEFILE_LIST)
@@DIST_MAKEFILE_LIST@@:
	dir=`echo $@@ | sed 's,^[^/]*$$,.,;s,/[^/]*$$,,'`; \
	test -d $$dir || mkdir $$dir || exit 1; \
	abs_srcdir=`cd $(top_srcdir) && pwd`; \
	(cd $$dir && $$abs_srcdir/$$dir/configure) || exit 1

# Create and install libltdl
install-data-hook:
	cd libltdl && $(MAKE) local-install-files
	chmod +x $(DESTDIR)$(pkgdatadir)/config.guess
	chmod +x $(DESTDIR)$(pkgdatadir)/config.sub

# Uninstall libltdl
uninstall-local:
	-rm -rf $(DESTDIR)$(pkgdatadir)/libltdl


## ---------------------------------------------------------------- ##
##  Everything past here is useful to the maintainer, but probably  ##
##  not to anybody else (inspiration from automake/Makefile.am).    ##
## ---------------------------------------------------------------- ##

TEXI2HTML = texi2html

.PHONY: cvs-release
cvs-release: version-check prev-tarball cvs-news fetch cvs-commit cvs-dist deltas web-manual
	@@tarname="$(PACKAGE)-$(VERSION).tar.gz"; \
	diffname="$(PACKAGE)-$(LASTRELEASE)-$(VERSION).diff.gz"; \
	xdeltaname="$(PACKAGE)-$(LASTRELEASE)-$(VERSION).xdelta"; \
	echo " *** Upload $$tarname, $$tarname.sig,";\
	echo " *** $$tarname.directive.asc, $$diffname,"; \
	echo " *** $$diffname.sig, $$diffname.directive.asc,"; \
	echo " *** $$xdeltaname, $$xdeltaname.sig and";\
	echo " *** $$xdeltaname.directive.asc to either"
	echo " *** /incoming/alpha or /incoming/ftp on ftp-upload.gnu.org."
	echo " *** You might need to upload manual.html to webcvs/libtool."

.PHONY: version-check
version-check:
	@@case $(VERSION) in \
	*[acegikmoqsuwy]) \
	  echo "Version \`$(VERSION)' is not a releasable version, please read:"; \
	  echo "    http://www.gnu.org/software/libtool/contribute.html"; \
	  exit 1; \
	  ;; \
	esac

.PHONY: prev-tarball
prev-tarball:
## Make sure we have the previous release tarball in the tree.
	@@if test -z "$(LASTRELEASE)"; \
		then echo "LASTRELEASE is not set"; exit 1; fi
	@@ofile="$(PACKAGE)-$(LASTRELEASE).tar.gz"; \
	if test -f $$ofile; then :; \
	else echo "Cannot make deltas without $$ofile"; exit 1; fi

# TSDEPS will be defined to TSDEPS_DIST at `make dist' time
TSDEPS =
TSDEPS_DIST = ChangeLog libtool.m4
CVS = cvs # set it to `:' to avoid CVS operations

.PHONY: timestamps update-timestamps
timestamps: update-timestamps
update-timestamps:
	@@if (cd $(srcdir) && test -d CVS && \
	    $(CVS) -n update $(TSDEPS_DIST) | grep '^M'); then \
		echo "Cannot make cvs-dist before commit"; exit 1; else :; fi


.PHONY: cvs-news
cvs-news:
## Make sure the NEWS file is up-to-date:
	@@if sed '1,2d;3q' $(srcdir)/NEWS | grep -e "$(VERSION)" >/dev/null; \
	then :; \
	else \
	  echo "NEWS not updated; not releasing" 1>&2; \
	  exit 1; \
	fi

## Program to use to fetch files.
WGET = wget
WGETSGO = $(WGET) http://savannah.gnu.org/cgi-bin/viewcvs/~checkout~

## Files that we fetch and which we compare against.
## FIXME should be a lot more here
FETCHFILES = \
./INSTALL \
./config.guess \
libltdl/config.guess \
./config.sub \
libltdl/config.sub \
doc/texinfo.tex

## Fetch the latest versions of files we care about.
.PHONY: fetch
fetch:
	rm -rf Fetchdir > /dev/null 2>&1
	mkdir Fetchdir
## If a get fails then that is a problem.
	(cd Fetchdir && \
	$(WGETSGO)/autoconf/autoconf/INSTALL; \
	$(WGETSGO)/config/config/config.guess; \
	$(WGETSGO)/config/config/config.sub; \
	$(WGETSGO)/texinfo/texinfo/doc/texinfo.tex )
## Don't exit after test because we want to give as many errors as
## possible.
	@@stat=0; for file in $(FETCHFILES); do \
	  fetchedfile=Fetchdir/`echo $$file | sed 's,.*/,,g'`; \
	  if diff -u $(srcdir)/$$file $$fetchedfile \
	    >>Fetchdir/update.patch 2>/dev/null; then :; \
	  else \
	    stat=1; \
	    echo "Updating $(srcdir)/$$file..."; \
	    cp $$fetchedfile $(srcdir)/$$file; \
	  fi; \
	done; \
	test $$stat = 1 && \
	  echo "See Fetchdir/update.patch for a log of the changes."; \
	exit $$stat


GPG = gpg # set it to `:' to avoid gpg operations

.PHONY: cvs-commit
cvs-commit: cvs-news
	cd $(srcdir) && $(SHELL) ./commit

.PHONY: cvs-dist
cvs-dist: cvs-news timestamps
## Build the distribution:
	$(MAKE) distcheck
## Finally, if everything was successful, tag the release
	cd $(srcdir) \
	  && $(CVS) -q tag -c `echo "release-$(VERSION)" | sed 's/\./-/g'`
## Generate signatures and directives for FSF ftp-upload:
	ofile="$(PACKAGE)-$(VERSION).tar.gz"; \
	$(GPG) --detach-sign $$ofile \
	&& echo "directory: libtool" > $$ofile.directive \
	&& $(GPG) --clearsign $$ofile.directive \
	&& rm -f $$ofile.directive

.PHONY: new-tarball
new-tarball:
## Make sure we have the new release tarball in the tree.
	@@ofile="$(PACKAGE)-$(VERSION).tar.gz"; \
	if test -f $$ofile; then :; \
	else echo "Cannot make deltas without $$ofile"; exit 1; fi

.PHONY: got-xdelta
got-xdelta:
## Make sure xdelta exists;
	@@if ($(XDELTA) --version 2>&1 | grep version)>/dev/null 2>/dev/null; \
	then :;\
	else \
	  echo "Get xdelta from http://sourceforge.net/projects/xdelta."; \
	  exit 1; \
	fi

.PHONY: deltas
deltas: delta-diff delta-xdelta

DIFF = diff
DIFF_OPTIONS = -ruNp

.PHONY: delta-diff
delta-diff: prev-tarball new-tarball
## Unpack the tarballs somewhere to diff them
	rm -rf delta-diff
	mkdir delta-diff
	ofile="../$(PACKAGE)-$(LASTRELEASE)-$(VERSION).diff.gz"; \
	cd delta-diff \
	&& tar xzf "../$(PACKAGE)-$(LASTRELEASE).tar.gz" \
	&& tar xzf "../$(PACKAGE)-$(VERSION).tar.gz" \
	&& $(DIFF) $(DIFF_OPTIONS) \
		$(PACKAGE)-$(LASTRELEASE) $(PACKAGE)-$(VERSION) \
		| GZIP=$(GZIP_ENV) gzip -c > $$ofile \
	&& $(GPG) --detach-sign $$ofile \
	&& echo "directory: libtool" > $$ofile.directive \
	&& $(GPG) --clearsign $$ofile.directive \
	&& rm -f $$ofile.directive
	rm -rf delta-diff

XDELTA = xdelta
XDELTA_OPTIONS = -9

.PHONY: delta-xdelta
delta-xdelta: prev-tarball new-tarball got-xdelta
## Generate the delta file (xdelta has wierd exit statuses, so we need to
## add some shell code to keep make happy), and then generate the signatures
## for FSF ftp-upload:
	ofile="$(PACKAGE)-$(LASTRELEASE)-$(VERSION).xdelta"; \
	( test -z `$(XDELTA) delta $(XDELTA_OPTIONS) \
	    $(PACKAGE)-$(LASTRELEASE).tar.gz $(PACKAGE)-$(VERSION).tar.gz \
	    $$ofile 2>&1` \
	  && : ) \
	&& $(GPG) --detach-sign $$ofile \
	&& echo "directory: libtool" > $$ofile.directive \
	&& $(GPG) --clearsign $$ofile.directive \
	&& rm -f $$ofile.directive

.PHONY: web-manual
web-manual:
	@@$(LN_S) $(top_srcdir)/doc/libtool.texi doc/manual.texi
	$(TEXI2HTML) -I doc -monolithic -number -verbose doc/manual.texi
	@@mv doc/manual.html manual.html
	@@rm -f doc/manual.texi
@


1.1.101.3
log
@Import (the necessary files of) GNU libtool 1.5.12
@
text
@d27 1
a27 1
pkgdata_DATA = config.guess config.sub install-sh ltmain.sh
a77 1
	chmod +x $(DESTDIR)$(pkgdatadir)/install-sh
a157 2
./install-sh \
libltdl/install-sh \
a167 1
	$(WGETSGO)/automake/automake/lib/install-sh; \
d269 4
a272 3
	@@$(LN_S) $(top_srcdir)/doc/libtool.texi manual.texi
	$(TEXI2HTML) -I $(top_srcdir)/doc -monolithic -number -verbose manual.texi
	@@rm -f manual.texi
@


1.1.101.4
log
@GNU Libtool 1.5.16, released yesterday
@
text
@d75 1
d90 1
a90 1
MAKEINFO = makeinfo
d273 3
a275 3
	$(MAKEINFO) -I $(top_srcdir)/doc --html --no-split -o manual.html \
	$(top_srcdir)/doc/libtool.texi

@


1.1.101.5
log
@Libtool 1.5.18
@
text
@a74 1
	cd libltdl && $(MAKE) local-install-files
@


1.1.101.6
log
@update to newer branch-1-5 snapshot
@
text
@a34 23
## These are installed as a subdirectory of pkgdatadir so that
## libtoolize --ltdl can find them later:
## Preserve order here so that generated files remain newer than
## their dependencies.
ltdldatadir = $(pkgdatadir)/libltdl
ltdldata_DATA = \
	libltdl/COPYING.LIB \
	libltdl/README \
	libltdl/configure.ac \
	libltdl/Makefile.am \
	libltdl/ltdl.c \
	libltdl/ltdl.h \
	libltdl/config.guess \
	libltdl/config.sub \
	libltdl/install-sh \
	libltdl/missing \
	libltdl/ltmain.sh \
	libltdl/acinclude.m4 \
	libltdl/aclocal.m4 \
	libltdl/Makefile.in \
	libltdl/configure \
	libltdl/config-h.in

d75 1
a78 5
	chmod +x $(DESTDIR)$(pkgdatadir)/libltdl/config.guess
	chmod +x $(DESTDIR)$(pkgdatadir)/libltdl/config.sub
	chmod +x $(DESTDIR)$(pkgdatadir)/libltdl/install-sh
	chmod +x $(DESTDIR)$(pkgdatadir)/libltdl/configure
	chmod +x $(DESTDIR)$(pkgdatadir)/libltdl/missing
@


1.1.101.7
log
@merge from libtool-Tbranch-1-5-20080503.mcz
@
text
@d176 1
a176 2
WGETSGO = $(WGET) 'http://savannah.gnu.org/cgi-bin/viewcvs/~checkout~'
WGET_GIT = $(WGET) 'http://git.savannah.gnu.org/gitweb/?a=blob_plain;hb=HEAD;p='
d197 5
a201 5
	$(WGET_GIT)'gnulib.git;f=doc/INSTALL' -O INSTALL && \
	$(WGET_GIT)'automake.git;f=lib/install-sh' -O install-sh && \
	$(WGETSGO)/config/config/config.guess -O config.guess && \
	$(WGETSGO)/config/config/config.sub -O config.sub && \
	$(WGETSGO)/texinfo/texinfo/doc/texinfo.tex -O texinfo.tex )
@


