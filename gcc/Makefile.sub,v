head	1.19;
access;
symbols
	MIRBSD_10_BASE:1.19
	MIRBSD_9_BASE:1.15
	MIRBSD_8:1.15.0.2
	MIRBSD_8_BASE:1.15;
locks; strict;
comment	@# @;


1.19
date	2007.06.12.21.40.03;	author tg;	state Exp;
branches;
next	1.18;
commitid	100466F12A43BDB861C;

1.18
date	2007.06.10.13.03.27;	author tg;	state Exp;
branches;
next	1.17;
commitid	100466BF6A53885DB3F;

1.17
date	2007.06.10.12.48.36;	author tg;	state Exp;
branches;
next	1.16;
commitid	100466BF3325AA07055;

1.16
date	2007.06.10.03.19.27;	author tg;	state Exp;
branches;
next	1.15;
commitid	100466B6DB0510D7F48;

1.15
date	2005.11.22.18.17.18;	author tg;	state Exp;
branches;
next	1.14;
commitid	2a1c438360a0196c;

1.14
date	2005.11.20.13.50.42;	author tg;	state Exp;
branches;
next	1.13;
commitid	74eb43807f36dad2;

1.13
date	2005.05.14.16.21.47;	author tg;	state Exp;
branches;
next	1.12;
commitid	51eb428625399862;

1.12
date	2005.05.01.21.54.15;	author tg;	state Exp;
branches;
next	1.11;

1.11
date	2005.05.01.02.51.33;	author tg;	state Exp;
branches;
next	1.10;

1.10
date	2005.04.27.07.12.16;	author tg;	state Exp;
branches;
next	1.9;

1.9
date	2005.04.26.22.36.52;	author tg;	state Exp;
branches;
next	1.8;

1.8
date	2005.04.26.20.07.00;	author tg;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.26.17.40.34;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2005.04.26.12.22.37;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2005.04.25.23.17.30;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.26.21.08.09;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.26.11.39.27;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.25.19.43.36;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.25.18.28.48;	author tg;	state Exp;
branches;
next	;


desc
@@


1.19
log
@don't even try to cross-build native Ada tools, not again please…
after all, we _did_ get a gnatbind, which should be enough to re-
compile gcc (or just gnattools maybe?) on the target.
@
text
@# $MirOS: gcc/Makefile.sub,v 1.17 2007/06/10 12:48:36 tg Exp $

.if defined(COMPILER_ONLY) && ${COMPILER_ONLY:L} != "no"

  SUBDIR+= gcc
.  if !make(install)
  SUBDIR+= libada
.  endif

.  include "${.CURDIR}/Makefile.inc"

.  if defined(NO_ADA) && ${NO_ADA:L} != "no"
  SKIPDIR+= libada
.  endif

.else

.  include "${.CURDIR}/Makefile.inc"

  SUBDIR+= boehm-gc
  SUBDIR+= fastjar
  SUBDIR+= gcc
  SUBDIR+= gpcdoc
  SUBDIR+= libada		# after gcc
  SUBDIR+= libffi
  SUBDIR+= libobjc		# after boehm-gc
  SUBDIR+= libstdc++-v3
  SUBDIR+= libjava		# after boehm-gc, libffi, libstdc++-v3

prereq: _SUBDIRUSE

.  if make(install)
  SKIPDIR+= boehm-gc
  SKIPDIR+= libada
  SKIPDIR+= libffi
.  endif

.  if defined(NO_ADA) && ${NO_ADA:L} != "no"
  SKIPDIR+= libada
.  endif

.  if defined(NO_CXX) && ${NO_CXX:L} != "no"
  SKIPDIR+= libstdc++-v3
.  endif

.  if defined(NO_BOEHMGC) && ${NO_BOEHMGC:L} != "no"
  SKIPDIR+= boehm-gc
.  endif

.  if defined(NO_OBJC) && ${NO_OBJC:L} != "no"
  SKIPDIR+= libobjc
.  endif

.  if defined(NO_PASCAL) && ${NO_PASCAL:L} != "no"
  SKIPDIR+= gpcdoc
.  endif

.  if defined(NO_JAVA) && ${NO_JAVA:L} != "no"
  SKIPDIR+= fastjar
  SKIPDIR+= libffi
  SKIPDIR+= libjava
.  endif

.endif

# cross-compiling a native compiler?
.if (${CROSS_MODE:L} == "yes") && !defined(_CROSSBUILD)
  SKIPDIR+= libada
.endif

.if defined(SUBONLY) && !empty(SUBONLY)
  SUBDIR:= ${SUBONLY}
  SKIPDIR:= #empty
.endif

.include <bsd.obj.mk>
.include <bsd.subdir.mk>
@


1.18
log
@make it possible to cross-build native gnattools – upstream didn't even
CONSIDER someone would ever want to do this…
@
text
@d66 5
@


1.17
log
@make it possible to cross-build a native gcc+gnat
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.16 2007/06/10 03:19:27 tg Exp $
a65 5
# cross-compiling a native compiler?
.if (${CROSS_MODE:L} == "yes") && !defined(_CROSSBUILD)
  SKIPDIR+= libada
.endif

@


1.16
log
@first step of trying to build cross-compilers and cross-build native compi-
lers with both the new framework and Ada… this isn't enough apparently tho…
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.15 2005/11/22 18:17:18 tg Exp $
a15 5
# cross-compiling a native compiler?
.  if (${CROSS_MODE:L} == "yes") && !defined(_CROSSBUILD)
  SKIPDIR+= libada
.  endif

d66 5
@


1.15
log
@boehm-gc won't work on non-native (too many files nuked and stuff hardcoded)
so build ObjC without GC in the portable case
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.14 2005/11/20 13:50:42 tg Exp $
d16 5
@


1.14
log
@add some pre-formatted GNU Pascal documentation from gpc-20051116/p/doc
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.13 2005/05/14 16:21:47 tg Exp $
d46 1
a46 2
.  if defined(NO_OBJC) && defined(NO_JAVA) \
    && ${NO_OBJC:L} != "no" && ${NO_JAVA:L} != "no"
@


1.13
log
@* merge gcc update
* re-enable boehm-gc
* build a threaded gcc

this is still broken
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.12 2005/05/01 21:54:15 tg Exp $
d23 1
d55 4
@


1.12
log
@disable boehm-gc for gcj and Objective C
cf. http://www.monkey.org/openbsd/archive/ports/0304/msg00263.html
and today's IRC log
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.11 2005/05/01 02:51:33 tg Exp $
d20 1
a20 1
# SUBDIR+= boehm-gc
@


1.11
log
@*/Makefile.in:	hand-edit: no install on all; mkinstalldirs
configure:	regen
top-level/gcc:	change from undef/def to yes/no logic
libffi:		my fix was only partially right, there is *.S sources...

tweak enough to make libjava build again
it doesn't install yet, but I do have to sleep too, you know?
and disable debugging, it isn't good for you
-rwxr-xr-x  1 tg    wsrc  40888110 May  1 02:07 /usr/obj/gcc/libjava/.libs/libgcj.so.5.0*
-r--r--r--  1 root  bin    9888484 May  1 02:35 /usr/lib/libgcj.so.5.0
sounds reasonable, but
-r--r--r--  1 root  bin   99385856 May  1 02:31 /usr/lib/libgcj.a
does not, definitively. and sparc will not have gcj... I think.

congratulations, MirOS now takes ~4 hours longer for a full
make dist-q on an Athlon XP 1200 MHz.
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.10 2005/04/27 07:12:16 tg Exp $
d20 1
a20 1
  SUBDIR+= boehm-gc
@


1.10
log
@no skipdir if subonly
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.9 2005/04/26 22:36:52 tg Exp $
d3 1
a3 1
.ifdef COMPILER_ONLY
d12 1
a12 1
.  ifdef NO_ADA
d23 1
a23 1
  SUBDIR+= libada
d25 1
a25 2
# SUBDIR+= libjava
  SUBDIR+= libobjc
d27 1
d37 1
a37 1
.  ifdef NO_ADA
d41 1
a41 1
.  ifdef NO_CXX
d45 2
a46 1
.  if defined(NO_OBJC) && defined(NO_JAVA)
d50 1
a50 1
.  ifdef NO_OBJC
d54 1
a54 2
NO_JAVA=XXX
.  ifdef NO_JAVA
@


1.9
log
@nah, don't deliver stale gcj tools with #8
(I think gcc-gcj itself doesn't hurt, but
these are easily reproduced later)
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.8 2005/04/26 20:07:00 tg Exp $
d64 1
@


1.8
log
@kludge enough together in libgcj so it starts to build
I get strange redefinition errors though
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.7 2005/04/26 17:40:34 tg Exp $
d53 1
@


1.7
log
@regen libffi; re-enable fastjar and libffi
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.6 2005/04/26 12:22:37 tg Exp $
d25 1
@


1.6
log
@sync
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.5 2005/04/25 23:17:30 tg Exp $
d21 1
a21 1
# SUBDIR+= fastjar
d24 1
a24 1
# SUBDIR+= libffi
@


1.5
log
@add libjava (not enabled yet) to skipdirs
better COMPILER_ONLY choices
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.4 2005/03/26 21:08:09 tg Exp $
d21 1
a21 1
  SUBDIR+= fastjar
d24 1
a24 1
  SUBDIR+= libffi
@


1.4
log
@enable build&install of compiler parts only
for if adding a new frontend
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.3 2005/03/26 11:39:27 tg Exp $
d10 6
d55 1
@


1.3
log
@Makefile.sub:
* +libstdc++-v3

libstdc++-v3/Makefile.bsd-wrapper:
* sync CLEANFILES

tyler@@, you owe me some belgian beer
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.2 2005/03/25 19:43:36 tg Exp $
d3 10
a12 1
.include "${.CURDIR}/Makefile.inc"
d24 1
a24 1
.if make(install)
d28 1
a28 1
.endif
d30 1
a30 1
.ifdef NO_ADA
d32 1
a32 1
.endif
d34 1
a34 1
.ifdef NO_CXX
d36 1
a36 1
.endif
d38 1
a38 1
.if defined(NO_OBJC) && defined(NO_JAVA)
d40 1
a40 1
.endif
d42 1
a42 1
.ifdef NO_OBJC
d44 1
a44 1
.endif
d46 1
a46 1
.ifdef NO_JAVA
d49 2
@


1.2
log
@proper make obj
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.sub,v 1.1 2005/03/25 18:28:48 tg Exp $
d11 1
d25 4
@


1.1
log
@copy from ncvs1; adjust slightly
@
text
@d1 3
a3 1
# $MirOS$
@

