head	1.1;
branch	1.1.101;
access;
symbols
	MIRBSD_10_BASE:1.1.101.1
	MIRBSD_9_BASE:1.1.101.1
	gcc-3_4_6:1.1.101.1
	MIRBSD_8:1.1.101.1.0.2
	MIRBSD_8_BASE:1.1.101.1
	gcc-3_4-20051206:1.1.101.1
	gcc-3_4-20051115:1.1.101.1
	gcc-3_4-20050823:1.1.101.1
	FSF:1.1.101;
locks; strict;
comment	@# @;


1.1
date	2005.03.21.12.07.00;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.03.21.12.07.00;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@# We want fine grained libraries, so use the new code to build the
# floating point emulation libraries.
FPBIT = fp-bit.c
DPBIT = dp-bit.c

dp-bit.c: $(srcdir)/config/fp-bit.c
	cat $(srcdir)/config/fp-bit.c > dp-bit.c

fp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#define FLOAT' > fp-bit.c
	cat $(srcdir)/config/fp-bit.c >> fp-bit.c

# Build the libraries for pthread and all of the 
# different processor models

MULTILIB_OPTIONS	= pthread \
			  mcpu=common/mcpu=power/mcpu=powerpc/maix64

MULTILIB_DIRNAMES	= pthread \
			  common power powerpc ppc64

MULTILIB_MATCHES	= mcpu?power=mcpu?power \
			  mcpu?power=mcpu?power2 \
			  mcpu?powerpc=mcpu?power3 \
			  mcpu?powerpc=mcpu?power4 \
			  mcpu?powerpc=mcpu?powerpc \
			  mcpu?power=mcpu?rios1 \
			  mcpu?power=mcpu?rios2 \
			  mcpu?power=mcpu?rsc \
			  mcpu?power=mcpu?rsc1 \
			  mcpu?powerpc=mcpu?rs64a \
			  mcpu?powerpc=mcpu?601 \
			  mcpu?powerpc=mcpu?602 \
			  mcpu?powerpc=mcpu?603 \
			  mcpu?powerpc=mcpu?603e \
			  mcpu?powerpc=mcpu?604 \
			  mcpu?powerpc=mcpu?604e \
			  mcpu?powerpc=mcpu?620 \
			  mcpu?powerpc=mcpu?630

LIBGCC = stmp-multilib
INSTALL_LIBGCC = install-multilib

# Build a shared libgcc library.
SHLIB_EXT = .a
SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \
	-Wl,-bE:@@shlib_map_file@@ -o @@multilib_dir@@/shr.o \
	@@multilib_flags@@ @@shlib_objs@@ -lc \
	`case @@shlib_base_name@@ in \
	*pthread*) echo -L/usr/lib/threads -lpthreads -lc_r /usr/lib/libc.a ;; \
	*) echo -lc ;; esac` ; \
	rm -f tmp-@@shlib_base_name@@.a ; \
	$(AR_CREATE_FOR_TARGET) tmp-@@shlib_base_name@@.a @@multilib_dir@@/shr.o ; \
	mv tmp-@@shlib_base_name@@.a @@shlib_base_name@@.a ; \
	rm -f @@multilib_dir@@/shr.o
# $(slibdir) double quoted to protect it from expansion while building
# libgcc.mk.  We want this delayed until actual install time.
SHLIB_INSTALL = $(INSTALL_DATA) @@shlib_base_name@@.a $$(DESTDIR)$$(slibdir)/
SHLIB_LIBS = -lc `case @@shlib_base_name@@ in *pthread*) echo -lpthread ;; esac`
SHLIB_MKMAP = $(srcdir)/mkmap-flat.awk
SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver $(srcdir)/config/rs6000/libgcc-ppc64.ver
SHLIB_NM_FLAGS = -Bpg -X32_64

# GCC 128-bit long double support routines.
LIB2FUNCS_EXTRA = $(srcdir)/config/rs6000/darwin-ldouble.c

# Either 32-bit and 64-bit objects in archives.
AR_FLAGS_FOR_TARGET = -X32_64

# Compile Ada files with minimal-toc.  The primary focus is gnatlib, so
# that the library does not use nearly the entire TOC of applications
# until gnatlib is built as a shared library on AIX.  Compiling the
# compiler with -mminimal-toc does not cause any harm.
T_ADAFLAGS = -mminimal-toc
@


1.1.101.1
log
@Import the GNU Compiler Collection 3.4-stable
from gcc-3.4-20050318.tar.bz2 after having
* all top-level non-directories (files)
  - except config.if
and these directories completely:
* INSTALL
* boehm-gc/Mac_files
* boehm-gc/cord
* boehm-gc/doc
* boehm-gc/tests
* contrib
  - except texi2pod.pl
* gcc/f
* gcc/po
* gcc/testsuite
* gcc/treelang
* include
* intl
* libf2c
* libffi/testsuite
* libiberty
* libjava/testsuite
* libstdc++-v3/docs
* libstdc++-v3/po
* libstdc++-v3/scripts
* libstdc++-v3/testsuite
* maintainer-scripts
* zlib
removed before importing.
@
text
@@
