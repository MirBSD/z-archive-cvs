head	1.1;
branch	1.1.101;
access;
symbols
	MIRBSD_10_BASE:1.1.101.1
	MIRBSD_9_BASE:1.1.101.1
	gcc-3_4_6:1.1.101.1
	MIRBSD_8:1.1.101.1.0.2
	MIRBSD_8_BASE:1.1.101.1
	gcc-3_4-20051206:1.1.101.1
	gcc-3_4-20051115:1.1.101.1
	gcc-3_4-20050823:1.1.101.1
	FSF:1.1.101;
locks; strict;
comment	@ * @;


1.1
date	2005.03.21.12.06.52;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.03.21.12.06.52;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* Generate SDB debugging info.
   Copyright (C) 2003 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2, or (at your option) any later
version.

GCC is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with GCC; see the file COPYING.  If not, write to the Free
Software Foundation, 59 Temple Place - Suite 330, Boston, MA
02111-1307, USA.  */

/* Note that no configuration uses sdb as its preferred format.  */

#define SDB_DEBUGGING_INFO 1

/* Forward references to tags are allowed.  */
#define SDB_ALLOW_FORWARD_REFERENCES

/* Unknown tags are also allowed.  */
#define SDB_ALLOW_UNKNOWN_REFERENCES

/* Block start/end next label #.  */
extern int sdb_label_count;

/* Starting line of current function.  */
extern int sdb_begin_function_line;

#define PUT_SDB_DEF(a)					\
do {							\
  fprintf (asm_out_file, "\t%s.def\t",			\
	   (TARGET_GAS) ? "" : "#");			\
  ASM_OUTPUT_LABELREF (asm_out_file, a); 		\
  fputc (';', asm_out_file);				\
} while (0)

#define PUT_SDB_PLAIN_DEF(a)				\
do {							\
  fprintf (asm_out_file, "\t%s.def\t.%s;",		\
	   (TARGET_GAS) ? "" : "#", (a));		\
} while (0)

/* For block start and end, we create labels, so that
   later we can figure out where the correct offset is.
   The normal .ent/.end serve well enough for functions,
   so those are just commented out.  */

#define PUT_SDB_BLOCK_START(LINE)			\
do {							\
  fprintf (asm_out_file,				\
	   "%sLb%d:\n\t%s.begin\t%sLb%d\t%d\n",		\
	   LOCAL_LABEL_PREFIX,				\
	   sdb_label_count,				\
	   (TARGET_GAS) ? "" : "#",			\
	   LOCAL_LABEL_PREFIX,				\
	   sdb_label_count,				\
	   (LINE));					\
  sdb_label_count++;					\
} while (0)

#define PUT_SDB_BLOCK_END(LINE)				\
do {							\
  fprintf (asm_out_file,				\
	   "%sLe%d:\n\t%s.bend\t%sLe%d\t%d\n",		\
	   LOCAL_LABEL_PREFIX,				\
	   sdb_label_count,				\
	   (TARGET_GAS) ? "" : "#",			\
	   LOCAL_LABEL_PREFIX,				\
	   sdb_label_count,				\
	   (LINE));					\
  sdb_label_count++;					\
} while (0)

#define PUT_SDB_FUNCTION_START(LINE)

#define PUT_SDB_FUNCTION_END(LINE)			\
do {							\
  ASM_OUTPUT_SOURCE_LINE (asm_out_file, LINE + sdb_begin_function_line, 0); \
} while (0)

#define PUT_SDB_EPILOGUE_END(NAME)
@


1.1.101.1
log
@Import the GNU Compiler Collection 3.4-stable
from gcc-3.4-20050318.tar.bz2 after having
* all top-level non-directories (files)
  - except config.if
and these directories completely:
* INSTALL
* boehm-gc/Mac_files
* boehm-gc/cord
* boehm-gc/doc
* boehm-gc/tests
* contrib
  - except texi2pod.pl
* gcc/f
* gcc/po
* gcc/testsuite
* gcc/treelang
* include
* intl
* libf2c
* libffi/testsuite
* libiberty
* libjava/testsuite
* libstdc++-v3/docs
* libstdc++-v3/po
* libstdc++-v3/scripts
* libstdc++-v3/testsuite
* maintainer-scripts
* zlib
removed before importing.
@
text
@@
