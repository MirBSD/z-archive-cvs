head	1.5;
access;
symbols
	MIRBSD_10_BASE:1.3
	MIRBSD_9_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2009.12.06.18.22.39;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004B1BF6717C20CC9E;

1.4
date	2008.11.08.23.03.42;	author tg;	state Exp;
branches;
next	1.3;
commitid	10049161AB22DF5DFC5;

1.3
date	2006.09.20.17.45.31;	author tg;	state Exp;
branches;
next	1.2;
commitid	10045117DFF16ABCCA0;

1.2
date	2006.06.12.21.59.36;	author tg;	state Exp;
branches;
next	1.1;
commitid	100448DE3C72E857FE8;

1.1
date	2006.06.11.00.15.13;	author tg;	state Exp;
branches;
next	;
commitid	100448B6089366B48DB;


desc
@@


1.5
log
@sync configs as well as possible with ports/lang/egcs/gcc4.4
untested
@
text
@/* $MirOS: gcc/gcc/config/i386/mirbsd.h,v 1.6 2008/11/08 23:03:42 tg Exp $ */

/* Definitions of target machine for GCC,
   for i386/ELF MirOS BSD systems.
   Copyright (C) 2001, 2002, 2005, 2006, 2009
   Free Software Foundation, Inc.
   Contributed by matthew green <mrg@@eterna.com.au>
   Hacked by Thorsten “mirabilos” Glaser <tg@@mirbsd.org>

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

GCC is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GCC; see the file COPYING.  If not, write to
the Free Software Foundation, 59 Temple Place - Suite 330,
Boston, MA 02111-1307, USA.  */

#define TARGET_OS_CPP_BUILTINS()		\
  do						\
    {						\
      MIRBSD_OS_CPP_BUILTINS();			\
      builtin_define ("__sparc");		\
      builtin_define ("__sparc__");		\
    }						\
  while (0)


/* We always use gas here, so we don't worry about ECOFF assembler
   problems.  */
#undef TARGET_GAS
#define TARGET_GAS 1

/* Default to pcc-struct-return, because this is the ELF abi and
   we don't care about compatibility with older gcc versions.  */
#undef DEFAULT_PCC_STRUCT_RETURN
#define DEFAULT_PCC_STRUCT_RETURN 1

/* This gets defined in elfos.h, and keeps us from using
   libraries compiled with the native cc, so undef it. */
#undef NO_DOLLAR_IN_LABEL


#undef TARGET_VERSION
#define TARGET_VERSION fprintf (stderr, " (MirOS BSD/sparc)");
@


1.4
log
@more mass conversions, including ancient eMail addresses
@
text
@d1 1
a1 1
/* $MirOS: gcc/gcc/config/sparc/mirbsd.h,v 1.3 2006/09/20 17:45:31 tg Exp $ */
d4 2
a5 2
   for sparc/ELF MirOS BSD systems.
   Copyright (C) 2001, 2002, 2005, 2006
d8 1
a8 1
   Hacked by Thorsten Glaser <tg@@mirbsd.org>
d47 5
@


1.3
log
@* switch ptrdiff_t and size_t to long, so that they can
  be the same (long) on LP64 and ILP32 arches -> no ABI
  change, since we only have ILP32 arches for now
* fix wchar_t from <machine/ansi.h> to agree with gcc's
  idea of how types have to be specified
* while here, nuke obsolete MirPPC config
@
text
@d1 1
a1 1
/* $MirOS: gcc/gcc/config/sparc/mirbsd.h,v 1.2 2006/06/12 21:59:36 tg Exp $ */
d8 1
a8 1
   Hacked by Thorsten Glaser <tg@@66h.42h.de>
@


1.2
log
@* sparc: I don't see a point to not use ELF+DWARF2 for #9
* i386: sync (comments, whitespace, copyright)
@
text
@d1 1
a1 1
/* $MirOS: gcc/gcc/config/sparc/mirbsd.h,v 1.1 2006/06/11 00:15:13 tg Exp $ */
a36 8
/* Make gcc agree with <machine/ansi.h> */

#undef SIZE_TYPE
#define SIZE_TYPE "unsigned int"

#undef PTRDIFF_TYPE
#define PTRDIFF_TYPE "int"

@


1.1
log
@* bring the sparc kernel in shape to maybe cross-compile it
* add machine description for mirbsd-sparc to gcc
* fix including problem
@
text
@d1 1
a1 1
/* $MirOS: gcc/gcc/config/i386/mirbsd.h,v 1.3 2005/07/22 02:09:01 tg Exp $ */
d5 2
a6 1
   Copyright (C) 2001, 2002, 2005, 2006 Free Software Foundation, Inc.
d48 1
a48 9
#define TARGET_GAS	1

/* Specific options for DBX Output.  */

/* This is BSD, so it wants DBX format.  */
#define DBX_DEBUGGING_INFO 1

/* This is the char to use for continuation */
#define DBX_CONTIN_CHAR '?'
a54 8
/* Assembler format: exception region output.  */

/* All configurations that don't use elf must be explicit about not using
   dwarf unwind information. */
#define DWARF2_UNWIND_INFO 0

#undef ASM_PREFERRED_EH_DATA_FORMAT

@

