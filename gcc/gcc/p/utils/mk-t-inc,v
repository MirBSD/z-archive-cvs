head	1.4;
access;
symbols
	MIRBSD_10_BASE:1.4
	MIRBSD_9_BASE:1.4
	gpc-20060325:1.1.111.2
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	gpc-20051116:1.1.111.1
	gpc-20050217:1.1.111.1
	gpc:1.1.111;
locks; strict;
comment	@# @;


1.4
date	2006.03.31.03.16.58;	author tg;	state Exp;
branches;
next	1.3;
commitid	100442C9F0D2D8D21E8;

1.3
date	2006.03.27.11.59.05;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004427D394409B84F7;

1.2
date	2005.03.28.00.05.06;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.27.23.24.52;	author tg;	state Exp;
branches
	1.1.111.1;
next	;

1.1.111.1
date	2005.03.27.23.24.52;	author tg;	state Exp;
branches;
next	1.1.111.2;

1.1.111.2
date	2006.03.27.11.51.08;	author tg;	state Exp;
branches;
next	;
commitid	1004427D1B80A0FD957;


desc
@@


1.4
log
@That's what I get for running an alpha version of GNU pascal...
@
text
@#!/bin/sh

# Create tree.inc, needed by GPIDump, for your GCC version.
# (Called mk-t-inc rather than make-tree-inc for "8+3" reasons.)
#
# Copyright (C) 2002-2006 Free Software Foundation, Inc.
# Author: Frank Heckenbach <frank@@pascal.gnu.de>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, version 2.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING. If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA. }

if [ $# -ne 2 ]; then
  echo "Usage: `basename $0` gcc-dir dest-filename" >&2
  exit 1
fi

GCCDIR="$1"

version="`grep version_string "$GCCDIR/version.c" | sed -e 's/[^"]*"//;s/".*//'`"
if [ x"$version" = x ]; then
  exit 1
fi

{

cat << EOF
{ Generated automatically by $0 for GCC version $version. }
{ DO NOT CHANGE THIS FILE MANUALLY! }

{\$ifndef GCC_VERSION_SET}
{\$define GCC_VERSION_SET}

{\$define GCC_VERSION '$version'}
EOF

# Use result of GPC's config-lang.in
sed -ne 's,#define\(.*\),{$define\1},p' ../../gcc-version.h

sed -ne '/Start GPI info/,/End GPI info/{s,/\*.*\*/,,g;s/0x/$/g;s/#/{$/g;s/[^\]$/&}/;s/\\$//;p;}' "$GCCDIR/p/module.c"
echo '{$endif}'
echo ""

{
  cat "$GCCDIR/tree.def"
  echo 'DEFTREECODE (LAST_AND_UNUSED_C_TREE_CODE, "unused", '"'x', 0)"
  sed -e '/#ifdef EGCS/,${/#ifdef EGCS/d;/#else/,/#endif/d;}'  "$GCCDIR/p/p-tree.def"
} | sed -ne ':loop;/\\$/{N;b loop;};/^DEFTREECODE/{s,/\*.*\*/,,;s/["'"'"']x["'"'"'].*/'"'x', 0)/;p;};/^#/p"
} > "$2" || { rm -f "$2"; false; }
@


1.3
log
@merge
@
text
@d57 2
a58 2
  sed -e '/#ifdef EGCS/,${/#ifdef EGCS/d;/#else/,/#endif/d}'  "$GCCDIR/p/p-tree.def"
} | sed -ne ':loop;/\\$/{N;b loop};/^DEFTREECODE/{s,/\*.*\*/,,;s/["'"'"']x["'"'"'].*/'"'x', 0)/;p;};/^#/p"
@


1.2
log
@usual cleanup here, too
@
text
@d6 1
a6 1
# Copyright (C) 2002-2005 Free Software Foundation, Inc.
d47 3
a49 16
# Mostly copied from GPC's config-lang.in
if echo $version | grep '^2\.9' > /dev/null || echo $version | grep '^3\.[1-9]' > /dev/null || echo $version | grep egcs > /dev/null; then
  echo '{$define EGCS}'
  if echo $version | grep '^2\.95\.[3-9]' > /dev/null || echo $version | grep '^3\.[1-9]' > /dev/null; then
    echo '{$define GCC_2_95_3}'
  fi
  if echo $version | grep '^2\.9[6-9]' > /dev/null || echo $version | grep '^3\.[1-9]' > /dev/null; then
    echo '{$define EGCS97}'
    if echo $version | grep '^3\.[3-9]' > /dev/null; then
      echo '{$define GCC_3_3}'
      if echo $version | grep '^3\.[4-9]' > /dev/null; then
        echo '{$define GCC_3_4}'
      fi
    fi
  fi
fi
d57 2
a58 3
  sed -e '/#else/,/#endif/d' "$GCCDIR/p/p-tree.def"
} | sed -ne '/^DEFTREECODE/{s,/\*.*\*/,,;s/["'"'"']x["'"'"'].*/'"'x', 0)/;p;}"

@


1.1
log
@Initial revision
@
text
@a22 17
# This script requires bash. Since bash cannot be assumed to be in
# /bin, /usr/bin or any other certain place, we cannot use it in the
# first line. So we use /bin/sh, which can be assumed to exist. Then
# we check if it's actually bash, and if not, try to re-run the
# script with bash.
if [ x"$BASH" = x ]; then
  if [ x"$RERUN_BASH_TRIED" != x ]; then
    echo "`basename "$0"`: cannot run, \`bash' is either not bash or a very old version" >&2
    exit 1
  else
    RERUN_BASH_TRIED=1; export RERUN_BASH_TRIED
    exec bash "$0" "$@@"
    echo "`basename "$0"`: cannot run bash" >&2
    exit 1
  fi
fi

@


1.1.111.1
log
@pretty much stripped down version of the current GNU Pascal Alpha
- no docs
- no GPL'd units (to keep the RTL free)
@
text
@@


1.1.111.2
log
@Update gcc/p/ to gpc-20060325
@
text
@d6 1
a6 1
# Copyright (C) 2002-2006 Free Software Foundation, Inc.
d64 16
a79 3
# Use result of GPC's config-lang.in
sed -ne 's,#define\(.*\),{$define\1},p' ../../gcc-version.h

d87 3
a89 2
  sed -e '/#ifdef EGCS/,${/#ifdef EGCS/d;/#else/,/#endif/d}'  "$GCCDIR/p/p-tree.def"
} | sed -ne ':loop;/\\$/{N;b loop};/^DEFTREECODE/{s,/\*.*\*/,,;s/["'"'"']x["'"'"'].*/'"'x', 0)/;p;};/^#/p"
@

