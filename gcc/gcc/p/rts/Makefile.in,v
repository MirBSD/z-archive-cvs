head	1.12;
access;
symbols
	MIRBSD_10_BASE:1.11
	MIRBSD_9_BASE:1.9
	gpc-20060325:1.1.111.3
	MIRBSD_8:1.7.0.2
	MIRBSD_8_BASE:1.7
	gpc-20051116:1.1.111.2
	gpc-20050217:1.1.111.1
	gpc:1.1.111;
locks; strict;
comment	@# @;


1.12
date	2017.04.03.02.37.02;	author tg;	state Exp;
branches;
next	1.11;
commitid	10058E1B5250AF477B9;

1.11
date	2007.05.19.01.18.30;	author tg;	state Exp;
branches;
next	1.10;
commitid	100464E50415A4F2B05;

1.10
date	2006.09.20.23.04.06;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004511C8F916EAB17A;

1.9
date	2006.03.31.03.16.57;	author tg;	state Exp;
branches;
next	1.8;
commitid	100442C9F0D2D8D21E8;

1.8
date	2006.03.27.11.59.04;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004427D394409B84F7;

1.7
date	2005.11.22.21.54.07;	author tg;	state Exp;
branches;
next	1.6;
commitid	f924383936ceba7;

1.6
date	2005.11.20.18.02.45;	author tg;	state Exp;
branches;
next	1.5;
commitid	65aa4380ba433855;

1.5
date	2005.11.20.12.28.14;	author tg;	state Exp;
branches;
next	1.4;
commitid	207543806be95a50;

1.4
date	2005.03.28.02.09.45;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.28.00.07.09;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.28.00.02.04;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.27.23.24.50;	author tg;	state Exp;
branches
	1.1.111.1;
next	;

1.1.111.1
date	2005.03.27.23.24.50;	author tg;	state Exp;
branches;
next	1.1.111.2;

1.1.111.2
date	2005.11.20.12.18.43;	author tg;	state Exp;
branches;
next	1.1.111.3;
commitid	3462438069a7b269;

1.1.111.3
date	2006.03.27.11.51.07;	author tg;	state Exp;
branches;
next	;
commitid	1004427D1B80A0FD957;


desc
@@


1.12
log
@break Makefiles enough to make C and Pascal compile with mirmake ipv gmake
(cross only C)
@
text
@# $MirOS: gcc/gcc/p/rts/Makefile.in,v 1.11 2007/05/19 01:18:30 tg Exp $
# Makefile for the GNU Pascal Run Time System
#
# Copyright (C) 1995-2006 Free Software Foundation, Inc.
#
# Authors: J.J. van der Heijden <j.j.vanderheijden@@student.utwente.nl>
#          Frank Heckenbach <frank@@pascal.gnu.de>
#
# This file is part of GNU Pascal.
#
# GNU Pascal is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# GNU Pascal is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU Pascal; see the file COPYING. If not, write to the
# Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA
# 02111-1307, USA.

# $(srcdir) is the RTS source directory
VPATH=@@srcdir@@
srcdir=@@srcdir@@

# gcc<3 doesn't set $(STAMP).
# gcc-3 does, but it should not matter to set it here again.
STAMP=echo timestamp >

GCC2GPC=sed 's,^\([^ ]*[/\][^/\]*\)gcc,\1gpc,;s/^gcc$$/gpc/' # $(CC) might be .../gcc-foo/.../xgcc

# Reasonable default values, toplevel Makefile overrides them.
# CC needs to be the GNU C compiler.
CC=@@CC@@
PC=`echo $(CC) | $(GCC2GPC)`
CFLAGS=-O2
PFLAGS=
AR=@@AR@@
AR_FLAGS=rc
RANLIB=@@RANLIB@@
RTSFLAGS=
DESTDIR=.
GCC_VERSION=unknown

WITH_SHARED=@@with_shared@@
WITH_SHARED_LIBGPC?=$(WITH_SHARED)
VERSION_FILENAME=$(srcdir)/rts-version
gpc_major=2
gpc_minor=1
rts_version=`cat $(VERSION_FILENAME)`
GPCSOLIBSHORTNAME=libgpc.so
GPCSOLIBNAME=$(GPCSOLIBSHORTNAME).$(gpc_major).$(gpc_minor)
GPCLIB=$(DESTDIR)/libgpc.a
GPCSOLIB=$(DESTDIR)/$(GPCSOLIBNAME)
PFLAGS1=--unit-path=$(VPATH) --automake
RTS_WARN=-W -Wall -Wmissing-prototypes -Wmissing-declarations
RTS_CFLAGS=-I. $(RTS_WARN) $(CFLAGS) $(RTSFLAGS)# -DDEBUG
RTS_PFLAGS=${RTS_CFLAGS:N-Wno-long-long} \
  -Wno-error $(PFLAGS) $(PFLAGS1) \
  -DRTS_RELEASE_STRING="'$(rts_version)'" -DGCC_VERSION="'$(GCC_VERSION)'"

PAS_SRC=rtsc.pas string1.pas error.pas heap.pas string2.pas time.pas random.pas \
 fname.pas files.pas getopt.pas sets.pas math.pas endian.pas move.pas init.pas

SRCS=rts.c $(PAS_SRC)

OBJS=rts.o rtsc.o string1.o error.o heap.o string2.o time.o random.o \
 fname.o files.o getopt.o sets.o math.o endian.o move.o init.o gpc.o $(MALLOC)

SO_OBJS=rts.lo rtsc.lo string1.lo heap.lo error.lo string2.lo time.lo random.lo \
 fname.lo files.lo getopt.lo sets.lo math.lo endian.lo move.lo init.lo gpc.lo $(MALLOC)

all: $(GPCLIB) sharedlib.$(WITH_SHARED_LIBGPC)

# @@@@ This might be a little risky, but since rts-config.h is generated by
#    configure, it should only contain C comments and C preprocessor directives.
rts-config.inc: rts-config.h
	echo '{ rts-config.inc.  Generated automatically from rts-config.h.  }' > rts-config.inc
	sed -e 's,/\*,{,g;s,\*/,},g;s,^[ \t]*#\(.*\),{$$\1},' rts-config.h >> rts-config.inc

# @@@@ `with_shared' is currently not substituted in the parent Makefile, so
#    it arrives here via the setting of $(WITH_SHARED) on the command line
DUMMY=# Don't let configure substitute `@@with_shared$(DUMMY)@@' below

.PHONY: all install check generated-files rts.update-release \
        sharedlib. sharedlib.no sharedlib.@@with_shared$(DUMMY)@@ sharedlib.yes \
        mostlyclean clean distclean extraclean maintainer-clean

install:
	@@echo "There is currently no separate installation for the GNU Pascal Compiler's" >&2
	@@echo "Run Time System, because it is usually built and installed together" >&2
	@@echo "with GPC. You can build the RTS separately from GPC (with \`make all')" >&2
	@@echo "if know what you are doing and have a current GPC version installed," >&2
	@@echo "but you will have to install the resulting file(s) (libgpc.*) manually" >&2
	@@echo "into the right directories, and create a symlink for the shared library" >&2
	@@echo "if configured \`--with-shared'." >&2

check:
	@@echo "Checks for the GPC RTS are contained in the GPC Test Suite."

rts.update-release:
	if [ -r "$(VERSION_FILENAME)" ] && [ "$(rts_version)" -ge "`date '+%Y%m%d'`" ]; then \
	  echo "RTS release version is already $(rts_version)"; \
	  exit 1; \
	fi
	date '+%Y%m%d' > $(VERSION_FILENAME)
	@@echo "New RTS release version is $(rts_version)"

.SUFFIXES: .c .pas .o .lo

.c.o:
	$(CC) -c $(RTS_CFLAGS) -Wpointer-arith -Wwrite-strings $(CPPFLAGS) "$<"

.c.lo:
	$(CC) -c $(RTS_CFLAGS) -Wpointer-arith -Wwrite-strings $(CPPFLAGS) -fPIC -o "$@@" "$<"

rtsc.o: rtsc.pas
	$(PC) -c -g $(RTS_PFLAGS) "${.ALLSRC:M*/rtsc.pas}"

rtsc.lo: rtsc.pas
	$(PC) -c -g $(RTS_PFLAGS) -fPIC -o "$@@" "${.ALLSRC:M*/rtsc.pas}"

stamp-error-gpi: error.pas rtsc.pas string1.pas rts-version
	$(PC) -c $(RTS_PFLAGS) --interface-only "${.ALLSRC:M*/error.pas}"
	$(STAMP) "$@@"

heap.o: heap.pas stamp-error-gpi
	$(PC) -c $(RTS_PFLAGS) --no-automake "${.ALLSRC:M*/heap.pas}"

heap.lo: heap.pas stamp-error-gpi
	$(PC) -c $(RTS_PFLAGS) --no-automake -fPIC -o "$@@" "${.ALLSRC:M*/heap.pas}"

error.o: error.pas heap.o
	$(PC) -c $(RTS_PFLAGS) --no-automake --implementation-only "${.ALLSRC:M*/error.pas}"

error.lo: error.pas heap.lo
	$(PC) -c $(RTS_PFLAGS) --no-automake --implementation-only "${.ALLSRC:M*/error.pas}" -fPIC -o "$@@"

.pas.o:
	$(PC) -c $(RTS_PFLAGS) "$<"

.pas.lo:
	$(PC) -c $(RTS_PFLAGS) -fPIC -o "$@@" "$<"

init.o init.lo: $(VERSION_FILENAME)

# After a change in the compiler that influences the GPI format
# or a change to the RTS's interface modify rtsc.pas (don't just
# touch it if you're going to distribute the patch), so the
# following rule will force the complete RTS to be recompiled.
$(OBJS) $(SO_OBJS): rtsc.pas constants.def rts-config.inc

$(GPCLIB): $(OBJS)
	-rm -f $(GPCLIB)
	$(AR) $(AR_FLAGS) $(GPCLIB) $(OBJS)
	-$(RANLIB) $(GPCLIB) 2> /dev/null

# That's a way to do an `if' that even a stupid make understands ...
sharedlib. sharedlib.no sharedlib.@@with_shared$(DUMMY)@@:
sharedlib.yes: $(GPCSOLIB)
$(GPCSOLIB): $(SO_OBJS)
	-rm -f $(GPCSOLIB)
	$(CC) -shared -Wl,-soname=$(GPCSOLIBNAME) -fPIC -o $(GPCSOLIB) $(SO_OBJS)

mostlyclean:
	-rm -f $(OBJS) $(SO_OBJS) *.gpi *.gpd core stamp-error-gpi

clean: mostlyclean
	-rm -f $(GPCLIB) $(GPCSOLIB)

distclean: clean
	-rm -f Makefile rts-config.h rts-config.inc config.cache config.log config.status

extraclean: distclean
	-rm -f *~* *.i *.s

maintainer-clean: extraclean
	-rm -f $(GENERATED_FILES)
@


1.11
log
@• revive Ada (but not the Lovelace one)
• make all subsystems ignore our special CFLAGS, even if they're C-only
@
text
@d1 1
a1 1
# $MirOS: gcc/gcc/p/rts/Makefile.in,v 1.10 2006/09/20 23:04:06 tg Exp $
d62 1
a62 1
RTS_PFLAGS=$(RTS_CFLAGS) \
d122 1
a122 1
	$(PC) -c -g $(RTS_PFLAGS) "$<"
d125 1
a125 1
	$(PC) -c -g $(RTS_PFLAGS) -fPIC -o "$@@" "$<"
d128 1
a128 1
	$(PC) -c $(RTS_PFLAGS) --interface-only "$<"
d132 1
a132 1
	$(PC) -c $(RTS_PFLAGS) --no-automake "$<"
d135 1
a135 1
	$(PC) -c $(RTS_PFLAGS) --no-automake -fPIC -o "$@@" "$<"
d138 1
a138 1
	$(PC) -c $(RTS_PFLAGS) --no-automake --implementation-only "$<"
d141 1
a141 1
	$(PC) -c $(RTS_PFLAGS) --no-automake --implementation-only "$<" -fPIC -o "$@@"
@


1.10
log
@-Wbounded is C only
@
text
@d1 1
a1 1
# $MirOS: gcc/gcc/p/rts/Makefile.in,v 1.9 2006/03/31 03:16:57 tg Exp $
d62 1
a62 1
RTS_PFLAGS=$(subst -std=gnu99,,$(subst -Wformat,,$(subst -Wbounded,,$(RTS_CFLAGS)))) \
@


1.9
log
@That's what I get for running an alpha version of GNU pascal...
@
text
@d1 1
a1 1
# $MirOS: gcc/gcc/p/rts/Makefile.in,v 1.8 2006/03/27 11:59:04 tg Exp $
d62 1
a62 1
RTS_PFLAGS=$(subst -std=gnu99,,$(subst -Wformat,,$(RTS_CFLAGS))) \
@


1.8
log
@merge
@
text
@d1 1
a1 1
# $MirOS: gcc/gcc/p/rts/Makefile.in,v 1.7 2005/11/22 21:54:07 tg Exp $
d62 2
a63 1
RTS_PFLAGS=$(subst -Wformat,,$(RTS_CFLAGS)) -Wno-error $(PFLAGS) $(PFLAGS1) \
@


1.7
log
@with a mgcc built with itself you can even build the pascal RTS,
but don't try to make a .so lib out of it on Darwin et al. ;)
@
text
@d1 1
a1 1
# $MirOS: gcc/gcc/p/rts/Makefile.in,v 1.6 2005/11/20 18:02:45 tg Exp $
d4 1
a4 1
# Copyright (C) 1995-2005 Free Software Foundation, Inc.
d62 2
a63 2
RTS_PFLAGS=$(subst -Wformat,,$(RTS_CFLAGS)) $(PFLAGS) $(PFLAGS1) `cat needed-options` \
  -DRTS_RELEASE_STRING="'$(rts_version)'" -DGCC_VERSION="'$(GCC_VERSION)'" -Wno-error
d154 1
a154 7
$(OBJS) $(SO_OBJS): rtsc.pas constants.def rts-config.inc needed-options

# The Pascal source is not used, but we have to provide any.
# `-x Preprocessed-Pascal /dev/null' works as well, except on mingw.
needed-options: endian.pas
	$(PC) $(subst -Wformat,,$(RTS_CFLAGS)) $(PFLAGS) $(PFLAGS1) --print-needed-options "$<" 2> "$@@" || true
	if grep '^[^-]' "$@@" > /dev/null; then echo "needed-options: `cat "$@@"`" >&2; rm -f "$@@"; false; else true; fi
d169 1
a169 1
	-rm -f $(OBJS) $(SO_OBJS) *.gpi *.gpd core needed-options stamp-error-gpi
@


1.6
log
@compile fixes (gpc related, sent upstream via gmane)
@
text
@d1 1
a1 1
# $MirOS: gcc/gcc/p/rts/Makefile.in,v 1.5 2005/11/20 12:28:14 tg Exp $
d50 1
d76 1
a76 1
all: $(GPCLIB) sharedlib.$(WITH_SHARED)
@


1.5
log
@merge gcc/p/ part of newer GNU Pascal
@
text
@d1 1
a1 1
# $MirOS: gcc/gcc/p/rts/Makefile.in,v 1.4 2005/03/28 02:09:45 tg Exp $
d62 1
a62 1
  -DRTS_RELEASE_STRING="'$(rts_version)'" -DGCC_VERSION="'$(GCC_VERSION)'"
@


1.4
log
@some ^$(^) and associated fuckup
@
text
@d1 1
a1 1
# $MirOS: gcc/gcc/p/rts/Makefile.in,v 1.3 2005/03/28 00:07:09 tg Exp $
d153 1
a153 1
$(OBJS) $(SO_OBJS): rtsc.pas constants.h rts-config.inc needed-options
@


1.3
log
@nuke some mor eunneeded
@
text
@d1 1
a1 1
# $MirOS$
d61 1
a61 1
RTS_PFLAGS=$(RTS_CFLAGS) $(PFLAGS) $(PFLAGS1) `cat needed-options` \
a74 7
GENERATED_FILES=\
 $(srcdir)/acconfig.h \
 $(srcdir)/configure \
 $(srcdir)/rts-config.in \
 $(srcdir)/rtsc.pas \
 $(srcdir)/gpc.pas

a76 21
generated-files: $(GENERATED_FILES)

$(srcdir)/acconfig.h: $(srcdir)/configure.in
	m4 $(srcdir)/make-acconfig-h.m4 "$<" > "$@@" || { rm -f "$@@"; false; }

# The touch commands in the following rules are to prevent them from
# being run next time. Though they cause the whole RTS to be rebuilt,
# sometimes unnecessarily ...
$(srcdir)/configure: $(srcdir)/configure.in $(srcdir)/acconfig.h
	cd $(srcdir) && autoconf && touch configure

# @@@@ The `rm -f "$@@"' is a workaround for a bug with `mv -f' under Cygwin.
$(srcdir)/rts-config.in: $(srcdir)/configure.in $(srcdir)/acconfig.h
	rm -f "$@@"; cd $(srcdir) && autoheader && touch rts-config.in

$(srcdir)/rtsc.pas: $(srcdir)/rts.c $(srcdir)/make-rtsc-pas
	cd $(srcdir); ./make-rtsc-pas > "$@@" || { rm -f "$@@"; false; }

$(srcdir)/gpc.pas: $(srcdir)/rtsc.pas $(PAS_SRC) $(srcdir)/make-gpc-pas $(VERSION_FILENAME)
	version=$(rts_version); cd $(srcdir); ./make-gpc-pas $$version > "$@@" || { rm -f "$@@"; false; }

d158 1
a158 1
	$(PC) $(RTS_CFLAGS) $(PFLAGS) $(PFLAGS1) --print-needed-options "$<" 2> "$@@" || true
@


1.2
log
@fix solib name here, too
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d54 1
a54 1
GPCSOLIBNAME=$(GPCSOLIBSHORTNAME).$(gpc_major).$(gpc_minor).$(rts_version)
@


1.1.111.1
log
@pretty much stripped down version of the current GNU Pascal Alpha
- no docs
- no GPL'd units (to keep the RTL free)
@
text
@@


1.1.111.2
log
@Update to gpc-20051116 with the following diffs applied:
Message-ID: <E1EcXkX-0004mi-00@@hera.math.uni.wroc.pl>
Message-ID: <E1Ed6ro-00056J-00@@hera.math.uni.wroc.pl>
@
text
@d92 1
a92 1
	cd $(srcdir) && autoconf && touch configure && rm -rf autom4te.cache
d96 1
a96 1
	rm -f "$@@"; cd $(srcdir) && autoheader && touch rts-config.in && rm -rf autom4te.cache
d180 1
a180 1
$(OBJS) $(SO_OBJS): rtsc.pas constants.def rts-config.inc needed-options
@


1.1.111.3
log
@Update gcc/p/ to gpc-20060325
@
text
@d3 1
a3 1
# Copyright (C) 1995-2006 Free Software Foundation, Inc.
d60 1
a60 1
RTS_PFLAGS=$(RTS_CFLAGS) $(PFLAGS) $(PFLAGS1) \
d180 7
a186 1
$(OBJS) $(SO_OBJS): rtsc.pas constants.def rts-config.inc
d201 1
a201 1
	-rm -f $(OBJS) $(SO_OBJS) *.gpi *.gpd core stamp-error-gpi
@


