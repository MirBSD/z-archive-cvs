head	1.6;
access;
symbols
	MIRBSD_10_BASE:1.6
	MIRBSD_9_BASE:1.6
	MIRBSD_8:1.5.0.2
	MIRBSD_8_BASE:1.5;
locks; strict;
comment	@# @;


1.6
date	2006.02.25.12.54.16;	author tg;	state Exp;
branches;
next	1.5;
commitid	100440053863331030E;

1.5
date	2005.12.17.06.04.19;	author tg;	state Exp;
branches;
next	1.4;
commitid	10043A3AA6F030C709E;

1.4
date	2005.05.01.21.49.49;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.01.02.51.34;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.05.01.01.09.37;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.26.10.18.59;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@CLEANFILES cleanup except for X11
@
text
@# $MirOS: gcc/libffi/Makefile.bsd-wrapper,v 1.5 2005/12/17 06:04:19 tg Exp $

NOMAN=		yes
CFARGS+=	--enable-static ${CF_PIC} --disable-libtool-lock
FSFMARGS+=	'libffi_la_OBJECTS=$$(libffi_la_SOURCES:T:R:=.lo)' \
		'libffi_convenience_la_OBJECTS=$$(libffi_la_SOURCES:T:R:=.lo)'
CLEANFILES+=	.libs/debug.o .libs/ffi.o .libs/java_raw_api.o \
		.libs/libffi-2.00-beta.so.0.0 .libs/libffi.a \
		.libs/libffi.la .libs/libffi.lai .libs/libffi.so.0.0 \
		.libs/libffi_convenience.a .libs/libffi_convenience.la \
		.libs/prep_cif.o .libs/raw_api.o .libs/sysv.o .libs/types.o \
		Makefile config.status debug.lo debug.o ffi.lo ffi.o \
		include/Makefile include/ffi.h include/ffitarget.h \
		java_raw_api.lo java_raw_api.o libffi.la \
		libffi_convenience.la prep_cif.lo prep_cif.o raw_api.lo \
		raw_api.o sysv.lo sysv.o types.lo types.o

.include <bsd.own.mk>
.if ${DEBUGLIBS:L} == "yes"
COPTS+=		-g
.endif

# this doesn't (need to) install.
do-install:

# the cleaning procedure is broken.
do-clean:
	-if test -e ${FSFMAKEFILE}; then \
	    cd ${FSFOBJDIR} && ${FSFMAKE} distclean-am; fi

.include <bsd.cfwrap.mk>
@


1.5
log
@-g for libraries if DEBUGLIBS
@
text
@d1 1
a1 1
# $MirOS: gcc/libffi/Makefile.bsd-wrapper,v 1.4 2005/05/01 21:49:49 tg Exp $
d7 10
a16 2
CLEANFILES+=	config.status include/Makefile include/ffi.h \
		include/ffitarget.h
@


1.4
log
@libffi:	unbreak configuration
libgcj:	use correct library versioning and list
	depend on an already-installed libgcj and libstdc++
	    in order to prevent it from relinking
	add licence (missed) marker
	don't install pkgconfig data in weird directory
	    (fixed by not installing it at all)
	don't write to build dir (XXX command line length)

works for me: compiling from source to bytecode, native;
compiling from bytecode to native; executing bytecode with jdk1.4.2

doesn't work: gij (fix follows)
@
text
@d1 1
a1 1
# $MirOS: gcc/libffi/Makefile.bsd-wrapper,v 1.3 2005/05/01 02:51:34 tg Exp $
d10 5
@


1.3
log
@*/Makefile.in:	hand-edit: no install on all; mkinstalldirs
configure:	regen
top-level/gcc:	change from undef/def to yes/no logic
libffi:		my fix was only partially right, there is *.S sources...

tweak enough to make libjava build again
it doesn't install yet, but I do have to sleep too, you know?
and disable debugging, it isn't good for you
-rwxr-xr-x  1 tg    wsrc  40888110 May  1 02:07 /usr/obj/gcc/libjava/.libs/libgcj.so.5.0*
-r--r--r--  1 root  bin    9888484 May  1 02:35 /usr/lib/libgcj.so.5.0
sounds reasonable, but
-r--r--r--  1 root  bin   99385856 May  1 02:31 /usr/lib/libgcj.a
does not, definitively. and sparc will not have gcj... I think.

congratulations, MirOS now takes ~4 hours longer for a full
make dist-q on an Athlon XP 1200 MHz.
@
text
@d1 1
a1 1
# $MirOS: gcc/libffi/Makefile.bsd-wrapper,v 1.2 2005/05/01 01:09:37 tg Exp $
d5 1
a5 1
XARGS+=		'libffi_la_OBJECTS=$$(libffi_la_SOURCES:T:R:=.lo)' \
@


1.2
log
@work around an automake deficiency
@
text
@d1 1
a1 1
# $MirOS: gcc/libffi/Makefile.bsd-wrapper,v 1.1 2005/03/26 10:18:59 tg Exp $
d5 2
a6 2
XARGS+=		'libffi_la_OBJECTS=$$(libffi_la_SOURCES:T:.c=.lo)' \
		'libffi_convenience_la_OBJECTS=$$(libffi_la_SOURCES:T:.c=.lo)'
@


1.1
log
@transfer the remnants of ncvs1 over
requiescat in pacem
@
text
@d1 1
a1 1
# $MirOS$
d5 2
@

