head	1.4;
access;
symbols
	MIRBSD_10_BASE:1.4
	MIRBSD_9_BASE:1.2
	gcc-3_4_6:1.1.101.1
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	gcc-3_4-20051206:1.1.101.1
	gcc-3_4-20051115:1.1.101.1
	gcc-3_4-20050823:1.1.101.1
	FSF:1.1.101;
locks; strict;
comment	@# @;


1.4
date	2006.07.01.14.00.03;	author tg;	state Exp;
branches;
next	1.3;
commitid	10044A67FB80DDFBDBD;

1.3
date	2006.06.30.22.50.10;	author tg;	state Exp;
branches;
next	1.2;
commitid	10044A5A72B24182FB7;

1.2
date	2005.04.26.17.40.37;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.21.12.07.27;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.03.21.12.07.27;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@regeneration spree
@
text
@/* fficonfig.h.in.  Generated from configure.in by autoheader 2.60-MirPorts-2.  */

/* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */
#undef BYTEORDER

/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c' support on those systems.
   */
#undef CRAY_STACKSEG_END

/* Define to 1 if using `alloca.c'. */
#undef C_ALLOCA

/* Define to the flags needed for the .section .eh_frame directive. */
#undef EH_FRAME_FLAGS

/* Define this if you want extra debugging. */
#undef FFI_DEBUG

/* Define this is you do not want support for the raw API. */
#undef FFI_NO_RAW_API

/* Define this is you do not want support for aggregate types. */
#undef FFI_NO_STRUCTS

/* Define to 1 if you have `alloca', as a function or macro. */
#undef HAVE_ALLOCA

/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).
   */
#undef HAVE_ALLOCA_H

/* Define if your assembler supports .register. */
#undef HAVE_AS_REGISTER_PSEUDO_OP

/* Define if your assembler and linker support unaligned PC relative relocs.
   */
#undef HAVE_AS_SPARC_UA_PCREL

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define if you have the long double type and it is bigger than a double */
#undef HAVE_LONG_DOUBLE

/* Define to 1 if you have the `memcpy' function. */
#undef HAVE_MEMCPY

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Define to 1 if you have the `mmap' function. */
#undef HAVE_MMAP

/* Define if mmap with MAP_ANON(YMOUS) works. */
#undef HAVE_MMAP_ANON

/* Define if mmap of /dev/zero works. */
#undef HAVE_MMAP_DEV_ZERO

/* Define if read-only mmap of a plain file works. */
#undef HAVE_MMAP_FILE

/* Define if .eh_frame sections should be read-only. */
#undef HAVE_RO_EH_FRAME

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/mman.h> header file. */
#undef HAVE_SYS_MMAN_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define if the host machine stores words of multi-word integers in
   big-endian order. */
#undef HOST_WORDS_BIG_ENDIAN

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* The number of bytes in type double */
#undef SIZEOF_DOUBLE

/* The number of bytes in type long double */
#undef SIZEOF_LONG_DOUBLE

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at runtime.
	STACK_DIRECTION > 0 => grows toward higher addresses
	STACK_DIRECTION < 0 => grows toward lower addresses
	STACK_DIRECTION = 0 => direction of growth unknown */
#undef STACK_DIRECTION

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Define this if you are using Purify and want to suppress spurious messages.
   */
#undef USING_PURIFY

/* whether byteorder is bigendian */
#undef WORDS_BIGENDIAN
@


1.3
log
@regenerate with new autofools and libfool
@
text
@d1 1
a1 1
/* fficonfig.h.in.  Generated from configure.in by autoheader.  */
@


1.2
log
@regen libffi; re-enable fastjar and libffi
@
text
@d121 1
a121 1
   automatically deduced at run-time.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* fficonfig.h.in.  Generated automatically from configure.in by autoheader.  */
d3 9
a11 1
/* Define if using alloca.c.  */
d14 11
a24 3
/* Define to one of _getb67, GETB67, getb67 for Cray-2 and Cray-YMP systems.
   This function is required for alloca.c support on those systems.  */
#undef CRAY_STACKSEG_END
d26 1
a26 1
/* Define if you have alloca, as a function or macro.  */
d29 2
a30 1
/* Define if you have <alloca.h> and it should be used (not on Ultrix).  */
d33 12
a44 8
/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
 STACK_DIRECTION > 0 => grows toward higher addresses
 STACK_DIRECTION < 0 => grows toward lower addresses
 STACK_DIRECTION = 0 => direction of growth unknown
 */
#undef STACK_DIRECTION
d46 2
a47 2
/* Define if you have the ANSI C header files.  */
#undef STDC_HEADERS
d49 1
a49 1
/* Define if you have the memcpy function.  */
d52 12
d67 11
a77 2
/* Define if mmap of /dev/zero works. */
#undef HAVE_MMAP_DEV_ZERO
d79 2
a80 2
/* Define if mmap with MAP_ANON(YMOUS) works. */
#undef HAVE_MMAP_ANON
d82 2
a83 2
/* The number of bytes in type double */
#undef SIZEOF_DOUBLE
d85 2
a86 2
/* The number of bytes in type long double */
#undef SIZEOF_LONG_DOUBLE
d88 2
a89 2
/* Define if you have the long double type and it is bigger than a double */
#undef HAVE_LONG_DOUBLE
d91 2
a92 2
/* whether byteorder is bigendian */
#undef WORDS_BIGENDIAN
d98 2
a99 2
/* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */
#undef BYTEORDER
d101 2
a102 2
/* Define if your assembler and linker support unaligned PC relative relocs. */
#undef HAVE_AS_SPARC_UA_PCREL
d104 2
a105 2
/* Define if your assembler supports .register. */
#undef HAVE_AS_REGISTER_PSEUDO_OP
d107 2
a108 2
/* Define if .eh_frame sections should be read-only. */
#undef HAVE_RO_EH_FRAME
d110 2
a111 2
/* Define to the flags needed for the .section .eh_frame directive. */
#undef EH_FRAME_FLAGS
d113 2
a114 2
/* Define to the flags needed for the .section .eh_frame directive. */
#undef EH_FRAME_FLAGS
d116 2
a117 2
/* Define this if you want extra debugging. */
#undef FFI_DEBUG
d119 7
a125 2
/* Define this is you do not want support for aggregate types. */
#undef FFI_NO_STRUCTS
d127 2
a128 2
/* Define this is you do not want support for the raw API. */
#undef FFI_NO_RAW_API
d130 2
a131 1
/* Define this if you are using Purify and want to suppress spurious messages. */
d134 2
@


1.1.101.1
log
@Import the GNU Compiler Collection 3.4-stable
from gcc-3.4-20050318.tar.bz2 after having
* all top-level non-directories (files)
  - except config.if
and these directories completely:
* INSTALL
* boehm-gc/Mac_files
* boehm-gc/cord
* boehm-gc/doc
* boehm-gc/tests
* contrib
  - except texi2pod.pl
* gcc/f
* gcc/po
* gcc/testsuite
* gcc/treelang
* include
* intl
* libf2c
* libffi/testsuite
* libiberty
* libjava/testsuite
* libstdc++-v3/docs
* libstdc++-v3/po
* libstdc++-v3/scripts
* libstdc++-v3/testsuite
* maintainer-scripts
* zlib
removed before importing.
@
text
@@
