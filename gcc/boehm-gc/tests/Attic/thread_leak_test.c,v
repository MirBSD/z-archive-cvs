head	1.2;
access;
symbols
	MIRBSD_8:1.1.101.1.0.2
	MIRBSD_8_BASE:1.1.101.1
	gcc-3_4-20051206:1.1.101.1
	gcc-3_4-20051115:1.1.101.1
	gcc-3_4-20050823:1.1.101.1
	FSF:1.1.101;
locks; strict;
comment	@ * @;


1.2
date	2006.03.30.19.50.24;	author tg;	state dead;
branches;
next	1.1;
commitid	100442C36917CA9AF8A;

1.1
date	2005.08.24.11.11.55;	author tg;	state Exp;
branches
	1.1.101.1;
next	;
commitid	288b430c5576ae87;

1.1.101.1
date	2005.08.24.11.11.55;	author tg;	state Exp;
branches;
next	;
commitid	288b430c5576ae87;


desc
@@


1.2
log
@fastmerge
@
text
@#define GC_LINUX_THREADS
#include "leak_detector.h"
#include <pthread.h>
#include <stdio.h>

void * test(void * arg) {
    int *p[10];
    int i;
    GC_find_leak = 1; /* for new collect versions not compiled  */
    /* with -DFIND_LEAK.                                        */
    for (i = 0; i < 10; ++i) {
        p[i] = malloc(sizeof(int)+i);
    }
    CHECK_LEAKS();
    for (i = 1; i < 10; ++i) {
        free(p[i]);
    }
}       

#define NTHREADS 5

main() {
    int i;
    pthread_t t[NTHREADS];
    int code;

    for (i = 0; i < NTHREADS; ++i) {
	if ((code = pthread_create(t + i, 0, test, 0)) != 0) {
    	    printf("Thread creation failed %d\n", code);
        }
    }
    for (i = 0; i < NTHREADS; ++i) {
	if ((code = pthread_join(t[i], 0)) != 0) {
            printf("Thread join failed %lu\n", code);
        }
    }
    CHECK_LEAKS();
    CHECK_LEAKS();
    CHECK_LEAKS();
}
@


1.1
log
@Initial revision
@
text
@@


1.1.101.1
log
@Import current gcc-3.4-stable snapshot, usual dirs/files deleted.
@
text
@@
