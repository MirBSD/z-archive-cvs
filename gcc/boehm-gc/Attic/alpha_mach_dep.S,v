head	1.2;
access;
symbols
	gcc-3_4_6:1.1.101.1
	gcc-3_4-20051206:1.1.101.1
	gcc-3_4-20051115:1.1.101.1
	gcc-3_4-20050823:1.1.101.1
	FSF:1.1.101;
locks; strict;
comment	@# @;


1.2
date	2005.03.25.20.39.17;	author tg;	state dead;
branches;
next	1.1;

1.1
date	2005.03.21.12.07.19;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.03.21.12.07.19;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@nuke junk and regen
@
text
@ # $Id: alpha_mach_dep.s,v 1.2 1993/01/18 22:54:51 dosser Exp $
	.arch ev6

        .text
        .align  4
        .globl  GC_push_regs
        .ent    GC_push_regs 2
GC_push_regs:
	ldgp    $gp, 0($27)
	lda     $sp, -16($sp)
	stq     $26, 0($sp)
        .mask   0x04000000, 0
        .frame  $sp, 16, $26, 0

 # $0		integer result
 # $1-$8	temp regs - not preserved cross calls
 # $9-$15	call saved regs
 # $16-$21	argument regs - not preserved cross calls
 # $22-$28	temp regs - not preserved cross calls
 # $29		global pointer - not preserved cross calls
 # $30		stack pointer

# define call_push(x)			\
	mov   x, $16;			\
	jsr   $26, GC_push_one;		\
	ldgp  $gp, 0($26)
	
        call_push($9)
        call_push($10)
        call_push($11)
        call_push($12)
        call_push($13)
        call_push($14)
        call_push($15)

 # $f0-$f1	floating point results
 # $f2-$f9	call saved regs
 # $f10-$f30	temp regs - not preserved cross calls

	# Use the most efficient transfer method for this hardware.
	# Bit 1 detects the FIX extension, which includes ftoit.
	amask	2, $0
	bne	$0, $use_stack

#undef call_push
#define call_push(x)			\
	ftoit	x, $16;			\
	jsr	$26, GC_push_one;	\
	ldgp	$gp, 0($26)

	call_push($f2)
	call_push($f3)
	call_push($f4)
	call_push($f5)
	call_push($f6)
	call_push($f7)
	call_push($f8)
	call_push($f9)

	ldq     $26, 0($sp)
	lda     $sp, 16($sp)
	ret     $31, ($26), 1

	.align	4
$use_stack:

#undef call_push
#define call_push(x)			\
	stt	x, 8($sp);		\
	ldq	$16, 8($sp);		\
	jsr	$26, GC_push_one;	\
	ldgp	$gp, 0($26)

	call_push($f2)
	call_push($f3)
	call_push($f4)
	call_push($f5)
	call_push($f6)
	call_push($f7)
	call_push($f8)
	call_push($f9)

	ldq     $26, 0($sp)
	lda     $sp, 16($sp)
	ret     $31, ($26), 1

	.end    GC_push_regs
@


1.1
log
@Initial revision
@
text
@@


1.1.101.1
log
@Import the GNU Compiler Collection 3.4-stable
from gcc-3.4-20050318.tar.bz2 after having
* all top-level non-directories (files)
  - except config.if
and these directories completely:
* INSTALL
* boehm-gc/Mac_files
* boehm-gc/cord
* boehm-gc/doc
* boehm-gc/tests
* contrib
  - except texi2pod.pl
* gcc/f
* gcc/po
* gcc/testsuite
* gcc/treelang
* include
* intl
* libf2c
* libffi/testsuite
* libiberty
* libjava/testsuite
* libstdc++-v3/docs
* libstdc++-v3/po
* libstdc++-v3/scripts
* libstdc++-v3/testsuite
* maintainer-scripts
* zlib
removed before importing.
@
text
@@
