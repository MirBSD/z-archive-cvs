head	1.3;
access;
symbols
	MIRBSD_10_BASE:1.2
	MIRBSD_9_BASE:1.1.101.1
	gcc-3_4_6:1.1.101.1
	MIRBSD_8:1.1.101.1.0.2
	MIRBSD_8_BASE:1.1.101.1
	gcc-3_4-20051206:1.1.101.1
	gcc-3_4-20051115:1.1.101.1
	gcc-3_4-20050823:1.1.101.1
	FSF:1.1.101;
locks; strict;
comment	@ * @;


1.3
date	2016.01.02.21.33.01;	author tg;	state Exp;
branches;
next	1.2;
commitid	10056884200442406AA;

1.2
date	2007.06.06.12.22.13;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004666A6F74A439B38;

1.1
date	2005.03.21.12.09.05;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.03.21.12.09.05;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove #ifndef __MirBSD__ before setlocale(); related changes
@
text
@// Wrapper for underlying C-language localization -*- C++ -*-

// Copyright (C) 2001, 2002, 2003, 2004 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

// As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

//
// ISO C++ 14882: 22.8  Standard locale categories.
//

// Written by Benjamin Kosnik <bkoz@@redhat.com>

#ifndef _C_LOCALE_H
#define _C_LOCALE_H 1

#pragma GCC system_header

#include <clocale>
#include <cstring>   // get std::strlen
#include <cstdio>    // get std::snprintf or std::sprintf

#define _GLIBCXX_NUM_CATEGORIES 0

namespace std
{
  typedef int*			__c_locale;

  // Convert numeric value of type _Tv to string and return length of
  // string.  If snprintf is available use it, otherwise fall back to
  // the unsafe sprintf which, in general, can be dangerous and should
  // be avoided.
  template<typename _Tv>
    int
    __convert_from_v(char* __out, 
		     const int __size __attribute__((__unused__)),
		     const char* __fmt,
		     _Tv __v, const __c_locale&, int __prec)
    {
      char* __old = std::setlocale(LC_NUMERIC, NULL);
      char* __sav = NULL;
      if (std::strcmp(__old, "C"))
	{
	  __sav = new char[std::strlen(__old) + 1];
	  std::strcpy(__sav, __old);
	  std::setlocale(LC_NUMERIC, "C");
	}

#ifdef _GLIBCXX_USE_C99
      const int __ret = std::snprintf(__out, __size, __fmt, __prec, __v);
#else
      const int __ret = std::sprintf(__out, __fmt, __prec, __v);
#endif
      
      if (__sav)
	{
	  std::setlocale(LC_NUMERIC, __sav);
	  delete [] __sav;
	}
      return __ret;
    }
}

#endif
@


1.2
log
@“fix” the issue of our "C" locale having a name of "en_US.UTF-8"
@
text
@a63 1
#ifndef __MirBSD__
a69 1
#endif
@


1.1
log
@Initial revision
@
text
@d64 1
d71 1
@


1.1.101.1
log
@Import the GNU Compiler Collection 3.4-stable
from gcc-3.4-20050318.tar.bz2 after having
* all top-level non-directories (files)
  - except config.if
and these directories completely:
* INSTALL
* boehm-gc/Mac_files
* boehm-gc/cord
* boehm-gc/doc
* boehm-gc/tests
* contrib
  - except texi2pod.pl
* gcc/f
* gcc/po
* gcc/testsuite
* gcc/treelang
* include
* intl
* libf2c
* libffi/testsuite
* libiberty
* libjava/testsuite
* libstdc++-v3/docs
* libstdc++-v3/po
* libstdc++-v3/scripts
* libstdc++-v3/testsuite
* maintainer-scripts
* zlib
removed before importing.
@
text
@@
