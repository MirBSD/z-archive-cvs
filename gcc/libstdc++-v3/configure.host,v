head	1.3;
access;
symbols
	MIRBSD_10_BASE:1.3
	MIRBSD_9_BASE:1.2
	gcc-3_4_6:1.1.101.1
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	gcc-3_4-20051206:1.1.101.1
	gcc-3_4-20051115:1.1.101.1
	gcc-3_4-20050823:1.1.101.1
	FSF:1.1.101;
locks; strict;
comment	@# @;


1.3
date	2006.11.03.01.14.04;	author tg;	state Exp;
branches;
next	1.2;
commitid	100454A979B37CBAE99;

1.2
date	2005.03.26.09.11.59;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.21.12.08.55;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.03.21.12.08.55;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@seems as if the <ctype.h> change hit us quite hard;
we can't cover as netbsd any more, and in addition
to that, the IEEE_1003.1-2001 locale is upstream broken
so we can't use it even if we probably fulfil it already,
which means two ABI changes. bump OS patchlevel here too,
but don't bump in base yet, I'll do that once HEAD is sort
of more stable againâ€¦
@
text
@# $MirOS: gcc/libstdc++-v3/configure.host,v 1.2 2005/03/26 09:11:59 tg Exp $
#
# configure.host
#
# This shell script handles all host based configuration for libstdc++.
# It sets various shell variables based on the the host and the
# configuration options.  You can modify this shell script without needing
# to rerun autoconf/aclocal/etc.  This file is "sourced" not executed.
#
# You should read docs/html/17_intro/porting.* to make sense of this file.
#
#
# It uses the following shell variables as set by config.guess:
#   host                The configuration host (full CPU-vendor-OS triplet)
#   host_cpu            The configuration host CPU
#   host_os             The configuration host OS
#
#
# It sets the following shell variables:
#
#   cpu_include_dir        CPU-specific directory, defaults to cpu/generic
#                          if cpu/host_cpu doesn't exist.  This is
#                          used to set atomicity_include_dir.
#
#   os_include_dir         OS-specific directory, defaults to os/generic.
#
#   c_model                the "C" header model, defaults to c_std.
#
#   c_compatibility        if "C" compatibility headers are necessary,
#                          defaults to no.
#
#   abi_baseline_pair      directory name for ABI compat testing,
#                          defaults to host_cpu-host_os (as per config.guess)
#
#   atomicity_dir          location of atomicity.h,
#                          defaults to cpu_include_dir
#
#   atomic_word_dir        location of atomic_word.h
#                          defaults to generic.
#
# It possibly modifies the following variables:
#
#   OPT_LDFLAGS            extra flags to pass when linking the library, of
#                          the form '-Wl,blah'
#                          (defaults to empty in acinclude.m4)
#
#   port_specific_symbol_files
#                          whitespace-seperated list of files containing
#                          additional symbols to export from the shared
#                          library, when symbol versioning is in use
#
#
# If the defaults will not work for your platform, you need only change the
# variables that won't work, i.e., you do not need to explicitly set a
# working variable to its default.  Most hosts only need to change the two
# *_include_dir variables.


# DEFAULTS
# Try to guess a default cpu_include_dir based on the name of the CPU.  We
# cannot do this for os_include_dir; there are too many portable operating
# systems out there.  :-)
c_model=c_std
c_compatibility=no
atomic_word_dir=cpu/generic

# HOST-SPECIFIC OVERRIDES
# Set any CPU-dependent bits.
# Here we override defaults and catch more general cases due to naming
# conventions (e.g., chip_name* to catch all variants).

# THIS TABLE IS SORTED.  KEEP IT THAT WAY.
case "${host_cpu}" in
  alpha*)
    try_cpu=alpha
    ;;
  i[567]86 | x86_64)
    try_cpu=i486
    ;;
  hppa*)
    try_cpu=hppa
    ;;
  mips*)
    # NB: cpu/mips/atomicity.h needs MIPS II or above.  
    # Of course, there is no sane way to test for this, no ABI macro,
    # and no consistent host_cpu name differentiation. Therefore, only
    # use it where it is known to be safe, ie it runs linux (see below).
    try_cpu=generic
    ;;
  m680[246]0)
    try_cpu=m68k
    ;;
  powerpc* | rs6000)
    try_cpu=powerpc
    ;;
  s390x)
    try_cpu=s390
    ;;
  sparc* | ultrasparc)
    try_cpu=sparc
    ;;
  *)
    if test -f ${glibcxx_srcdir}/config/cpu/${host_cpu}/atomicity.h; then
      try_cpu=${host_cpu}
    else
      try_cpu=generic
    fi
    ;;
esac

# Set specific CPU overrides for atomic_word_dir. Most can just use generic.
# THIS TABLE IS SORTED.  KEEP IT THAT WAY.
case "${host_cpu}" in
  cris*)
    atomic_word_dir=cpu/cris
    ;;
  sparc* | ultrasparc)
    atomic_word_dir=cpu/sparc
    ;;
esac

# Now look for the file(s) usually tied to a CPU model, and make
# default choices for those if they haven't been explicitly set
# already.  
cpu_include_dir="cpu/${try_cpu}"
atomicity_dir=$cpu_include_dir
abi_baseline_pair=${try_cpu}-${host_os}


# Set any OS-dependent bits.
# Set the os_include_dir.
# Set c_model, c_compatibility here.
# If atomic ops and/or numeric limits are OS-specific rather than
# CPU-specifc, set those here too.
# THIS TABLE IS SORTED.  KEEP IT THAT WAY.
case "${host_os}" in
  aix4.[3456789]* | aix[56789]*)
    # We set os_include_dir to os/aix only on AIX 4.3 and newer, but
    # os/aix/atomicity.h works on earlier versions of AIX 4.*, so we
    # explicitly duplicate the directory for 4.[<3].
    os_include_dir="os/aix"
    atomicity_dir="os/aix"
    OPT_LDFLAGS="-Wl,-G"
    ;;
  aix4.*)
    os_include_dir="os/generic"
    atomicity_dir="os/aix"
    ;;
  aix*)
    os_include_dir="os/generic"
    atomicity_dir="cpu/generic"
    ;;
  bsd*)
    # Plain BSD attempts to share FreeBSD files.
    os_include_dir="os/bsd/freebsd"
    ;;
  cygwin*)
    os_include_dir="os/newlib"
    ;;
  *djgpp*)      # leading * picks up "msdosdjgpp"
    os_include_dir="os/djgpp"
    ;;
  freebsd*)
    os_include_dir="os/bsd/freebsd"
    ;;
  gnu* | linux* | kfreebsd*-gnu | knetbsd*-gnu)
    os_include_dir="os/gnu-linux"
    ;;
  hpux*)
    os_include_dir="os/hpux"
    ;;
  irix[1-6] | irix[1-5].* | irix6.[0-4]*)
    # This is known to work on at least IRIX 5.2 and 6.3.
    os_include_dir="os/irix/irix5.2"
    atomicity_dir=os/irix
    atomic_word_dir=os/irix
    ;;
  irix6.5*)
    os_include_dir="os/irix/irix6.5"
    atomicity_dir=os/irix
    atomic_word_dir=os/irix
    ;;
  mingw32*)
    os_include_dir="os/mingw32"
    ;;
  netbsd*)
    os_include_dir="os/bsd/netbsd"
    ;;
  qnx6.[12]*)
    os_include_dir="os/qnx/qnx6.1"
    c_model=c
    ;;
  solaris2)
    # This too-vague configuration does not provide enough information
    # to select a ctype include, and thus os_include_dir is a crap shoot.
    echo "Please specify the full version of Solaris, ie. solaris2.9 " 1>&2
    exit 1;
    ;;
  solaris2.5 | solaris2.5.[0-9])
    os_include_dir="os/solaris/solaris2.5"
    ;;
  solaris2.6)
    os_include_dir="os/solaris/solaris2.6"
    ;;
  solaris2.[789] | solaris2.1[0-9])
    os_include_dir="os/solaris/solaris2.7"
    ;;
  tpf)
    os_include_dir="os/tpf"
    ;;
  vxworks)
    os_include_dir="os/vxworks"
    ;;
  windiss*)
    os_include_dir="os/windiss"
    ;;
  *)
    os_include_dir="os/generic"
    ;;
esac


# Set any OS-dependent and CPU-dependent bits.
# THIS TABLE IS SORTED.  KEEP IT THAT WAY.
case "${host}" in
  alpha*-*-freebsd5*)
    abi_baseline_pair="alpha-freebsd5"
    ;;
  arm*-*-linux*)
    abi_baseline_pair="arm-linux-gnu"
    ;;
  i*86-*-freebsd4*)
    abi_baseline_pair="i386-freebsd4"
    ;;
  i*86-*-freebsd5*)
    abi_baseline_pair="i386-freebsd5"
    ;;
  mips*-*-linux*)
    atomicity_dir="cpu/mips"
    abi_baseline_pair="mips-linux-gnu"
    cpu_include_dir="cpu/mips"
    ;;
  s390-*-linux*)
    abi_baseline_pair="s390-linux-gnu"
    ;;
  s390x-*-linux*)
    abi_baseline_pair="s390x-linux-gnu"
    ;;
  sparc*-*-freebsd5*)
    abi_baseline_pair="sparc-freebsd5"
    ;;
  x86_64-*-linux*)
    abi_baseline_pair="x86_64-linux-gnu"
    ;;
esac
@


1.2
log
@we are a NetBSD(R), I assume.
@
text
@d1 1
a1 1
# $MirOS$
a185 3
  mirbsd*)
    os_include_dir="os/bsd/netbsd"
    ;;
@


1.1
log
@Initial revision
@
text
@d1 2
d186 3
@


1.1.101.1
log
@Import the GNU Compiler Collection 3.4-stable
from gcc-3.4-20050318.tar.bz2 after having
* all top-level non-directories (files)
  - except config.if
and these directories completely:
* INSTALL
* boehm-gc/Mac_files
* boehm-gc/cord
* boehm-gc/doc
* boehm-gc/tests
* contrib
  - except texi2pod.pl
* gcc/f
* gcc/po
* gcc/testsuite
* gcc/treelang
* include
* intl
* libf2c
* libffi/testsuite
* libiberty
* libjava/testsuite
* libstdc++-v3/docs
* libstdc++-v3/po
* libstdc++-v3/scripts
* libstdc++-v3/testsuite
* maintainer-scripts
* zlib
removed before importing.
@
text
@@
