head	1.1;
branch	1.1.101;
access;
symbols
	MIRBSD_10_BASE:1.1.101.1
	MIRBSD_9_BASE:1.1.101.1
	gcc-3_4_6:1.1.101.1
	MIRBSD_8:1.1.101.1.0.2
	MIRBSD_8_BASE:1.1.101.1
	gcc-3_4-20051206:1.1.101.1
	gcc-3_4-20051115:1.1.101.1
	gcc-3_4-20050823:1.1.101.1
	FSF:1.1.101;
locks; strict;
comment	@# @;


1.1
date	2005.03.21.12.07.39;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.03.21.12.07.39;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/* Copyright (C) 2000  Free Software Foundation

   This file is part of libgcj.

This software is copyrighted work licensed under the terms of the
Libgcj License.  Please consult the file "LIBGCJ_LICENSE" for
details.  */

package gnu.gcj.xlib;

import gnu.gcj.RawData;

/**
 * A flyweight class that denotes an X11 screen.  Display and screen
 * number is the only data kept by this class.  The real screen
 * structure is stored in the display.  There may exist several
 * objects denoting the same screen.
 *
 * @@author Rolf W. Rasmussen <rolfwr@@ii.uib.no>
 */
public final class Screen
{
  static final int UNKNOWN = -1;

  Display display;
  int screenNumber = UNKNOWN;
  RawData structure;
  
  Screen(Display display, RawData screenStructure)
  {
    structure = screenStructure;
    this.display = display;
  }

  public Screen(Display display)
  {
    this(display, display.getDefaultScreenNumber());
  }

  public Screen(Display display, int screenNumber)
  {
    this.display = display;
    this.screenNumber = screenNumber;
    initStructure();
  }

  public final Display getDisplay()
  {
    return display;
  }

  public Window getRootWindow()
  {
    int rootXID = getRootWindowXID();
    return display.getWindow(rootXID);
  }

  public Visual getRootVisual()
  {
    RawData visualStructure = getRootVisualStructure();
    int depth = getRootDepth();
    return new Visual(visualStructure, this, depth);
  }

  private native RawData getRootVisualStructure();

  public native int getRootDepth();
  public native int getRootWindowXID();
  public native int getDefaultColormapXID();

  native void initStructure();

  public Colormap getDefaultColormap()
  {
    return new Colormap(this, getDefaultColormapXID());
  }
  
  public final int getScreenNumber()
  {
    if (screenNumber == UNKNOWN)
      screenNumber = findScreenNumber();
    return screenNumber;
  }

  public native int findScreenNumber();
}
@


1.1.101.1
log
@Import the GNU Compiler Collection 3.4-stable
from gcc-3.4-20050318.tar.bz2 after having
* all top-level non-directories (files)
  - except config.if
and these directories completely:
* INSTALL
* boehm-gc/Mac_files
* boehm-gc/cord
* boehm-gc/doc
* boehm-gc/tests
* contrib
  - except texi2pod.pl
* gcc/f
* gcc/po
* gcc/testsuite
* gcc/treelang
* include
* intl
* libf2c
* libffi/testsuite
* libiberty
* libjava/testsuite
* libstdc++-v3/docs
* libstdc++-v3/po
* libstdc++-v3/scripts
* libstdc++-v3/testsuite
* maintainer-scripts
* zlib
removed before importing.
@
text
@@
