head	1.11;
access;
symbols
	MIRBSD_10_BASE:1.9
	MIRBSD_9_BASE:1.9
	MIRBSD_8:1.9.0.2
	MIRBSD_8_BASE:1.9;
locks; strict;
comment	@# @;


1.11
date	2009.12.12.19.40.43;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004B23F1B9396598C0;

1.10
date	2008.12.26.16.01.20;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004954FFC469B460F4;

1.9
date	2005.12.17.06.04.19;	author tg;	state Exp;
branches;
next	1.8;
commitid	10043A3AA6F030C709E;

1.8
date	2005.11.22.18.17.20;	author tg;	state Exp;
branches;
next	1.7;
commitid	2a1c438360a0196c;

1.7
date	2005.11.22.17.55.23;	author tg;	state Exp;
branches;
next	1.6;
commitid	52b843835b5a18a8;

1.6
date	2005.07.07.20.31.07;	author tg;	state Exp;
branches;
next	1.5;
commitid	23ae42cd90ff8afe;

1.5
date	2005.07.06.22.47.27;	author tg;	state Exp;
branches;
next	1.4;
commitid	302642cc5f638fb0;

1.4
date	2005.07.06.18.48.08;	author tg;	state Exp;
branches;
next	1.3;
commitid	494942cc27676cb9;

1.3
date	2005.05.14.16.22.18;	author tg;	state Exp;
branches;
next	1.2;
commitid	51eb428625399862;

1.2
date	2005.05.01.21.54.15;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.25.21.44.40;	author tg;	state Exp;
branches;
next	;


desc
@@


1.11
log
@attempt version-specific *includes* not just *libs* as well,
so that we donâ€™t need to remove Objective-C support from base
@
text
@# $MirOS: gcc/libobjc/Makefile.bsd-wrapper,v 1.10 2008/12/26 16:01:20 tg Exp $

.include <bsd.own.mk>
.include "${GNUSYSTEM_AUX_DIR}/locations.mk"

NOMAN=		yes
VSLIBDIR=	${GCC_PREFIX}/lib/gcc/${GCCTARGET}/${GCCVERSION}
CFARGS+=	--enable-static ${CF_PIC} --disable-libtool-lock \
		--prefix=${GCC_PREFIX} ${OBJC_GC}
CFARGS+=	--enable-version-specific-runtime-libs
XARGS+=		LIBIBERTY_HDRS="${GNU_LIBIBERTY_INC}" \
		LIBOBJC_VERSION=${LIBOBJC_VER} \
		LIBOBJC_GC_VERSION=${LIBOBJC_VER}
INST_TARGET=	install-libs
INCS=		NXConstStr.h Object.h Protocol.h encoding.h hash.h \
		objc-api.h objc-list.h objc.h sarray.h thr.h typedstream.h
CLEANFILES+=	config.h libtool stamp-h

.if ${DEBUGLIBS:L} == "yes"
COPTS+=		-g
.endif

.include <bsd.cfwrap.mk>

config.status: ${FSFOBJDIR}/../gcc/Makefile

build: ${FSFOBJDIR}/../gcc/tconfig.h ${FSFOBJDIR}/../gcc/tree-check.h

${FSFOBJDIR}/../gcc/Makefile: ${FSFOBJDIR}/../gcc/config.status

${FSFOBJDIR}/../gcc/config.status: ${.CURDIR}/../gcc/Makefile.in
	cd ${.CURDIR}/../gcc && ${MAKE} -f Makefile.bsd-wrapper config.status

${FSFOBJDIR}/../gcc/tconfig.h: ${FSFOBJDIR}/../gcc/config.status
	cd ${.CURDIR}/../gcc && ${MAKE} -f Makefile.bsd-wrapper tconfig.h

${FSFOBJDIR}/../gcc/tree-check.h: ${FSFOBJDIR}/../gcc/config.status
	cd ${.CURDIR}/../gcc && ${MAKE} -f Makefile.bsd-wrapper tree-check.h

LIBFILES=	libobjc*.a libobjc*.la
.if ${NOPIC:L} == "no"
LIBFILES+=	libobjc*.so.${LIBOBJC_REV}
.endif

post-install:
	${INSTALL} -d -o ${BINOWN} -g ${BINGRP} -m ${DIRMODE} \
	    ${DESTDIR:Q}${VSLIBDIR:Q}/include/objc
	cd ${.CURDIR}/objc && ${INSTALL_DATA} ${INCS} \
	    ${DESTDIR:Q}${VSLIBDIR:Q}/include/objc/
	cd ${DESTDIR:Q}${VSLIBDIR:Q} && \
	    chown -h ${LIBOWN}:${LIBGRP} ${LIBFILES} && \
	    chmod ${LIBMODE} ${LIBFILES}
@


1.10
log
@tentatively move base-gcc to version-specific library directories, too

(the gxx includes stay, but the csu files move, so that we can use the
BSD licenced ones for pcc in /usr/lib later)
@
text
@d1 1
a1 1
# $MirOS: gcc/libobjc/Makefile.bsd-wrapper,v 1.9 2005/12/17 06:04:19 tg Exp $
d7 1
d47 6
a52 6
	    ${DESTDIR}${GCC_PREFIX}/include/objc
	cd ${.CURDIR}/objc; ${INSTALL_DATA} ${INCS} \
	    ${DESTDIR}${GCC_PREFIX}/include/objc/
	cd ${DESTDIR}${GCC_PREFIX}/lib/gcc/${GCCTARGET}/${GCCVERSION} \
	    && chown -h ${LIBOWN}:${LIBGRP} ${LIBFILES} \
	    && chmod ${LIBMODE} ${LIBFILES}
@


1.9
log
@-g for libraries if DEBUGLIBS
@
text
@d1 1
a1 1
# $MirOS: gcc/libobjc/Makefile.bsd-wrapper,v 1.8 2005/11/22 18:17:20 tg Exp $
d9 1
d39 5
d49 3
a51 1
	chmod ${LIBMODE} ${DESTDIR}${GCC_PREFIX}/lib/libobjc*.a
@


1.8
log
@boehm-gc won't work on non-native (too many files nuked and stuff hardcoded)
so build ObjC without GC in the portable case
@
text
@d1 1
a1 1
# $MirOS: gcc/libobjc/Makefile.bsd-wrapper,v 1.7 2005/11/22 17:55:23 tg Exp $
d17 4
@


1.7
log
@with quite little effort the gcc module can be made portable
Initial testing on Darwin; this only removes build failures,
testing will be done later
@
text
@d1 1
a1 1
# $MirOS: gcc/libobjc/Makefile.bsd-wrapper,v 1.6 2005/07/07 20:31:07 tg Exp $
d8 1
a8 1
		--prefix=${GCC_PREFIX} --enable-objc-gc
@


1.6
log
@regen and adapt for MirLibtool changes
@
text
@d1 1
a1 1
# $MirOS: gcc/libobjc/Makefile.bsd-wrapper,v 1.5 2005/07/06 22:47:27 tg Exp $
d8 1
a8 1
		--prefix=/usr --enable-objc-gc
d36 1
a36 1
	    ${DESTDIR}/usr/include/objc
d38 2
a39 2
	    ${DESTDIR}/usr/include/objc/
	chmod ${LIBMODE} ${DESTDIR}/usr/lib/libobjc*.a
@


1.5
log
@I'm now content with it, and it still works, even with the new
version numbers. The symlinks' permissions are fixed now, too.

I still do not like, however, the idea of symlinks in /usr/lib
at all. It is not BSDish to me. We will have to rethink this.
@
text
@d1 1
a1 1
# $MirOS: gcc/libobjc/Makefile.bsd-wrapper,v 1.4 2005/07/06 18:48:08 tg Exp $
a38 2
	chown -h ${LIBOWN}:${LIBGRP} \
	    ${DESTDIR}/usr/lib/libobjc*.so.${LIBOBJC_REV:R}
@


1.4
log
@I'll now try to compile this... permission fixing
and more version numbering stuff will follow later
@
text
@d1 1
a1 1
# $MirOS: gcc/libobjc/Makefile.bsd-wrapper,v 1.3 2005/05/14 16:22:18 tg Exp $
d39 3
@


1.3
log
@* merge gcc update
* re-enable boehm-gc
* build a threaded gcc

this is still broken
@
text
@d1 1
a1 1
# $MirOS: gcc/libobjc/Makefile.bsd-wrapper,v 1.2 2005/05/01 21:54:15 tg Exp $
a5 2
SHLIB_VERSION?=	3.1

d10 2
a11 2
		LIBOBJC_VERSION=${SHLIB_VERSION:S/./:/}:0 \
		LIBOBJC_GC_VERSION=${SHLIB_VERSION:S/./:/}:0
@


1.2
log
@disable boehm-gc for gcj and Objective C
cf. http://www.monkey.org/openbsd/archive/ports/0304/msg00263.html
and today's IRC log
@
text
@d1 1
a1 1
# $MirOS: gcc/libobjc/Makefile.bsd-wrapper,v 1.1 2005/03/25 21:44:40 tg Exp $
d10 1
a10 1
		--prefix=/usr --disable-objc-gc
@


1.1
log
@bring in Objective-C too
@
text
@d1 1
a1 1
# $MirOS$
d10 1
a10 1
		--prefix=/usr --enable-objc-gc
@

