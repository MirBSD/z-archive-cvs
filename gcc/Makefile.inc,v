head	1.27;
access;
symbols
	MIRBSD_10_BASE:1.25
	MIRBSD_9_BASE:1.23
	MIRBSD_8:1.23.0.2
	MIRBSD_8_BASE:1.23;
locks; strict;
comment	@# @;


1.27
date	2017.04.03.02.36.58;	author tg;	state Exp;
branches;
next	1.26;
commitid	10058E1B5250AF477B9;

1.26
date	2009.09.12.13.52.36;	author tg;	state Exp;
branches;
next	1.25;
commitid	1004AABA773427566D7;

1.25
date	2006.11.03.01.14.03;	author tg;	state Exp;
branches;
next	1.24;
commitid	100454A979B37CBAE99;

1.24
date	2006.09.22.04.17.32;	author tg;	state Exp;
branches;
next	1.23;
commitid	100451363DC4AF616FE;

1.23
date	2005.12.18.16.36.50;	author tg;	state Exp;
branches;
next	1.22;
commitid	10043A58BE830AFB807;

1.22
date	2005.12.06.23.11.58;	author tg;	state Exp;
branches;
next	1.21;
commitid	283743961ad31b3f;

1.21
date	2005.12.06.20.18.31;	author tg;	state Exp;
branches;
next	1.20;
commitid	28104395f2219b57;

1.20
date	2005.11.23.18.29.45;	author tg;	state Exp;
branches;
next	1.19;
commitid	753b4384b515b1ce;

1.19
date	2005.11.23.15.39.49;	author tg;	state Exp;
branches;
next	1.18;
commitid	788f43848d1d435f;

1.18
date	2005.11.22.21.54.05;	author tg;	state Exp;
branches;
next	1.17;
commitid	f924383936ceba7;

1.17
date	2005.11.22.19.38.53;	author tg;	state Exp;
branches;
next	1.16;
commitid	788d438373cd8db7;

1.16
date	2005.11.22.18.54.56;	author tg;	state Exp;
branches;
next	1.15;
commitid	76f43836988b22e;

1.15
date	2005.11.22.18.17.17;	author tg;	state Exp;
branches;
next	1.14;
commitid	2a1c438360a0196c;

1.14
date	2005.11.22.17.55.18;	author tg;	state Exp;
branches;
next	1.13;
commitid	52b843835b5a18a8;

1.13
date	2005.10.08.21.43.20;	author tg;	state Exp;
branches;
next	1.12;
commitid	cc243483d7c0880;

1.12
date	2005.07.07.20.30.51;	author tg;	state Exp;
branches;
next	1.11;
commitid	23ae42cd90ff8afe;

1.11
date	2005.07.06.22.47.25;	author tg;	state Exp;
branches;
next	1.10;
commitid	302642cc5f638fb0;

1.10
date	2005.07.06.18.48.06;	author tg;	state Exp;
branches;
next	1.9;
commitid	494942cc27676cb9;

1.9
date	2005.06.13.19.51.12;	author tg;	state Exp;
branches;
next	1.8;
commitid	332342ade39c3dcb;

1.8
date	2005.05.26.21.35.26;	author tg;	state Exp;
branches;
next	1.7;
commitid	7a234296413358ce;

1.7
date	2005.05.14.16.21.47;	author tg;	state Exp;
branches;
next	1.6;
commitid	51eb428625399862;

1.6
date	2005.05.01.02.51.33;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2005.04.26.05.53.04;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.28.15.10.14;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.25.21.57.10;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.25.21.44.39;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.25.18.28.48;	author tg;	state Exp;
branches;
next	;


desc
@@


1.27
log
@break Makefiles enough to make C and Pascal compile with mirmake ipv gmake
(cross only C)
@
text
@# $MirOS: gcc/Makefile.inc,v 1.26 2009/09/12 13:52:36 tg Exp $

.ifndef _MODGCC_MAKEFILE_INC
_MODGCC_MAKEFILE_INC=1

.include "Makefile.lang"

GCC_NATIVE?=	Yes
CPP=		${CC} -E

.if ${NO_BOEHMGC:L} != "no"
OBJC_GC=	--disable-objc-gc
.else
OBJC_GC=	--enable-objc-gc
.endif

# System defines
GCCVERSION=	3.4.6
LIBGCC_REV=	2.0
# XXX how about automatically deriving these below?
LIBGCJ_REV=	5.0
LIBOBJC_REV=	3.1
LIBOBJC_VER=	4:0:1
LIBCXX_REV=	39.0
LIBCXX_VER=	39:0:0

.if ${GCC_NATIVE:L} == "yes"
GCC_PREFIX=	/usr
GCC_INFODIR=	/usr/share/info
GCC_MANDIR=	/usr/share/man
.else
PREFIX?=	/usr/local
GCC_PREFIX?=	${PREFIX}
GCC_INFODIR?=	${GCC_PREFIX}/info
GCC_MANDIR?=	${GCC_PREFIX}/man
.endif
MANDIR=		${GCC_MANDIR}/cat

.endif
@


1.26
log
@remove *all* symbols common to libgcc/libgcc_s and libc/libmdsup from
the former pair, so that we will not ever have troubles like the ones
from UMAC-64 back then again; inspired by pvalchevâ€™s comment about me
possibly introducing problems by merely changing the linking order
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.25 2006/11/03 01:14:03 tg Exp $
a7 6
.if ${OStype} != "MirBSD"
.  if ${OStype} == "Darwin"
GMAKE?=		/usr/bin/make
.  endif
.endif

a8 1
GMAKE?=		/usr/mpkg/bin/gmake
@


1.25
log
@seems as if the <ctype.h> change hit us quite hard;
we can't cover as netbsd any more, and in addition
to that, the IEEE_1003.1-2001 locale is upstream broken
so we can't use it even if we probably fulfil it already,
which means two ABI changes. bump OS patchlevel here too,
but don't bump in base yet, I'll do that once HEAD is sort
of more stable againâ€¦
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.24 2006/09/22 04:17:32 tg Exp $
d26 1
a26 1
LIBGCC_REV=	1.1
@


1.24
log
@I guess the size_t/ptrdiff_t changes required a major bump in libstdc++,
and also, the disabling of threaded-gcc... oeps ;)
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.23 2005/12/18 16:36:50 tg Exp $
d31 2
a32 2
LIBCXX_REV=	38.0
LIBCXX_VER=	38:0:0
@


1.23
log
@Part 2 of the big commit:
* www/vbegin.php: don't output the UTF-8 BOM for now
* ports/Setup.sh: change order in which path is divined [1]
* ports/books/mirex: convert to CVS_DISTF
* ports/comms/ssfe: increase line length limit and history buffer size
* ports/infrastructure/install/setup.sh: sync path order with Setup.sh [1]
* ports/infrastructure/mk/bsd.port.mk: (_PORTPATH) sync default PATH [1]
* ports/infrastructure/mk/bsd.port.mk: (_UPGRADE_FLAGS) new, default to -a
* ports/infrastructure/mk/bsd.port.mk: (_upgrade) use it
* ports/infrastructure/mk/bsd.port.mk: (reupgrade) new target, set to -a -f
* ports/infrastructure/scripts/mkmcz: don't use $LOCALBASE, trust in PATH
* ports/infrastructure/mk/bsd.port.mk: (_CVS_FETCH) use _PORTPATH
* ports/infrastructure/pkgtools/create: treat /usr/info same as /usr/man
* ports/infrastructure/pkgtools/upgrade: fix path to temp +REQUIRED_BY
* ports/www/firesomething: break, suggest Opera-Linux/K-Meleon/Safari
* src/Makefile, src/gcc/Makefile.lang: if build GCJ, check if X11 installed
* src/Makefile, src/gnu/usr.bin/perl/Makefile.bsd-wrapper: defer h2ph
  execution to end of build
* src/distrib/lists: sync with pre-h2ph change
* src/etc/services: add openvpn, from IANA
* src/gcc/Makefile.inc, Makefile.lang: fragment out NO_*= stuff
* src/gcc/libjava/Makefile.bsd-wrapper: DEBUGPROGS is gone
* src/gnu/usr.bin/perl/Makefile.bsd-wrapper: flesh out h2ph, fix perms
* src/lib/libc/time/localtime.c: fix undefined extern
* ports/net/sirc/Makefile: automatically insert version into CTCP VERSION
* ports/net/sirc/dist/PROGRAMMING: document capab hooks
* ports/net/sirc/dist/dsircp: several hours of perl hacking with Club-Mate
  - publish $msgchannel, $talkserver [2]
  - support for CAPAB: publish $has_capab, $capab_cmd, $capab_response;
    add "capab" hook in reply
  - support for CAPAB IDENTIFY-MSG: publish $has_identifymsg; new
    $unverified, $unverified_m; enable automatically if present;
    change <...> [...] -...- to «...» [[...]] ¬...¬
  - /describe nick now looks [*] (or [[*]]) instead of *, /me now looks
    # instead of * if identified, to facilitate this conversion
  - fix abuse of U+0060
  - sort /names [2]
  - fix ^B ^_ ^V [2]
  - remove trailing whitespace on outgoing msgs [2]
  - remove trailing whitespace on incoming msgs
  - fix indentation
  - auto-split overlong lines (partially [2])
  - in NOTICE make nick bold too [2]
  - disable DCC since it crashes
  - beautify CTCP TIME replies
  - add ACCEPT command (for ratbox-ircd, e.g. Freeforge)
* ports/net/sirc/pkg/DESCR: summarise new features

[1] all for the sake of bsiegert@@ wanting to not have to souce a
    SetEnv.sh or SetEnv.csh before building in "default MirPorts"
    (i.e. LOCALBASE=/usr/mpkg SYSCONFDIR=/etc BINOWN=root SUDO=sudo)
[2] adapted from http://co.ordinate.org/sirc/
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.22 2005/12/06 23:11:58 tg Exp $
d31 2
a32 2
LIBCXX_REV=	37.0
LIBCXX_VER=	37:0:0
@


1.22
log
@merge gcc 3.4.6 snapshot
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.21 2005/12/06 20:18:31 tg Exp $
d6 3
a8 29
.if ${OStype} == "MirBSD"
.  if ${MACHINE} == "i386"
NO_ADA?=	No
NO_CXX?=	No
NO_OBJC?=	No
NO_JAVA?=	No
NO_PASCAL?=	No
NO_THREADS?=	No	# mainly needed for gcj
.  elif ${MACHINE} == "macppc"
NO_ADA?=	Yes
NO_CXX?=	Yes
NO_OBJC?=	Yes
NO_JAVA?=	Yes
NO_PASCAL?=	Yes
NO_THREADS?=	Yes
.  else
NO_ADA?=	Yes
NO_CXX?=	Yes
NO_OBJC?=	Yes
NO_JAVA=	Yes
NO_PASCAL?=	Yes
NO_THREADS=	Yes
.  endif
.else
GCC_NATIVE=	No
NO_ADA?=	Yes	# helps bootstrapping
NO_JAVA=	Yes	# never
NO_THREADS=	Yes
NO_BOEHMGC=	Yes
a13 9
.if defined(NO_CXX) && ${NO_CXX:L} != "no"
NO_JAVA=	Yes #implied
.endif

.if defined(NO_OBJC) && defined(NO_JAVA) \
    && ${NO_OBJC:L} != "no" && ${NO_JAVA:L} != "no"
NO_BOEHMGC=	Yes
.endif

a14 1
NO_BOEHMGC?=	No
@


1.21
log
@gmake defaults to be in /usr/mpkg/bin (yeah, make setup now works...)
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.20 2005/11/23 18:29:45 tg Exp $
d61 1
a61 1
GCCVERSION=	3.4.5
@


1.20
log
@for 'make bootstrap', fix build on apple, add md5.o from libmirmake.a
to libgpc.a, etc.
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.19 2005/11/23 15:39:49 tg Exp $
d51 1
a51 1
GMAKE?=		/usr/local/bin/gmake
@


1.19
log
@preliminary support for a bootstrap target which builds gcc thrice,
might support Ada, is yet untested, automatically re-builds libiberty
three times as well (but doesn't skip protoise and gcov on the first)
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.18 2005/11/22 21:54:05 tg Exp $
d80 1
@


1.18
log
@with a mgcc built with itself you can even build the pascal RTS,
but don't try to make a .so lib out of it on Darwin et al. ;)
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.17 2005/11/22 19:38:53 tg Exp $
a33 1
OBJC_GC=	--disable-objc-gc
a49 1
OBJC_GC?=	--enable-objc-gc
d54 6
@


1.17
log
@cpp(1) and GCC_NATIVE=no
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.16 2005/11/22 18:54:56 tg Exp $
a31 1
NO_PASCAL?=	Yes	# not ready for prime time yet
@


1.16
log
@sadly pascal isn't ready yet
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.15 2005/11/22 18:17:17 tg Exp $
d55 1
@


1.15
log
@boehm-gc won't work on non-native (too many files nuked and stuff hardcoded)
so build ObjC without GC in the portable case
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.14 2005/11/22 17:55:18 tg Exp $
d31 3
a33 2
NO_ADA?=	Yes
NO_JAVA=	Yes
@


1.14
log
@with quite little effort the gcc module can be made portable
Initial testing on Darwin; this only removes build failures,
testing will be done later
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.13 2005/10/08 21:43:20 tg Exp $
d34 2
d45 5
d51 2
@


1.13
log
@bump libstdc++ major - some I18N changes might propagate
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.12 2005/07/07 20:30:51 tg Exp $
d6 2
a7 1
.if ${MACHINE} == "i386"
d14 1
a14 1
.elif ${MACHINE} == "macppc"
d21 1
a21 1
.else
d28 9
d43 1
d56 11
@


1.12
log
@regen and adapt for MirLibtool changes
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.11 2005/07/06 22:47:25 tg Exp $
d42 2
a43 2
LIBCXX_REV=	36.0
LIBCXX_VER=	36:0:0
@


1.11
log
@I'm now content with it, and it still works, even with the new
version numbers. The symlinks' permissions are fixed now, too.

I still do not like, however, the idea of symlinks in /usr/lib
at all. It is not BSDish to me. We will have to rethink this.
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.10 2005/07/06 18:48:06 tg Exp $
d39 2
a40 2
LIBGCJ_REV=	5.0.0
LIBOBJC_REV=	3.1.0
d42 1
a42 1
LIBCXX_REV=	36.0.0
@


1.10
log
@I'll now try to compile this... permission fixing
and more version numbering stuff will follow later
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.9 2005/06/13 19:51:12 tg Exp $
d38 3
a40 1
LIBGCJ_REV=	5.0
d42 1
@


1.9
log
@* as part of bsiegert@@s and my master plan, install a debugging version
  of libgcj just like the others which use <bsd.lib.mk>
* install into BSDRELDIR/base too, not BSDRELDIR/gcc
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.8 2005/05/26 21:35:26 tg Exp $
d37 4
@


1.8
log
@merge gcc 3.4.5 (prerelease)
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.7 2005/05/14 16:21:47 tg Exp $
a34 2
LIBGCJ_DEBUG?=	No

@


1.7
log
@* merge gcc update
* re-enable boehm-gc
* build a threaded gcc

this is still broken
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.6 2005/05/01 02:51:33 tg Exp $
d37 3
@


1.6
log
@*/Makefile.in:	hand-edit: no install on all; mkinstalldirs
configure:	regen
top-level/gcc:	change from undef/def to yes/no logic
libffi:		my fix was only partially right, there is *.S sources...

tweak enough to make libjava build again
it doesn't install yet, but I do have to sleep too, you know?
and disable debugging, it isn't good for you
-rwxr-xr-x  1 tg    wsrc  40888110 May  1 02:07 /usr/obj/gcc/libjava/.libs/libgcj.so.5.0*
-r--r--r--  1 root  bin    9888484 May  1 02:35 /usr/lib/libgcj.so.5.0
sounds reasonable, but
-r--r--r--  1 root  bin   99385856 May  1 02:31 /usr/lib/libgcj.a
does not, definitively. and sparc will not have gcj... I think.

congratulations, MirOS now takes ~4 hours longer for a full
make dist-q on an Athlon XP 1200 MHz.
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.5 2005/04/26 05:53:04 tg Exp $
d7 6
a12 5
NO_ADA=		No
NO_CXX=		No
NO_OBJC=	No
NO_JAVA=	No
NO_PASCAL=	No
d14 6
a19 5
NO_ADA=		Yes
NO_CXX=		Yes
NO_OBJC=	Yes
NO_JAVA=	Yes
NO_PASCAL=	Yes
d21 3
a23 3
NO_ADA=		Yes
NO_CXX=		Yes
NO_OBJC=	Yes
d25 2
a26 1
NO_PASCAL=	Yes
d35 2
@


1.5
log
@enable building the j*va tools and frontend for now
maybe I'll get libgcj hacked on in time
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.4 2005/03/28 15:10:14 tg Exp $
d6 19
a24 5
#NO_ADA=	defined
#NO_CXX=	defined
#NO_OBJC=	defined
#NO_JAVA=	defined
#NO_PASCAL=	defined
d26 2
a27 2
.ifdef NO_CXX
NO_JAVA=	implied
@


1.4
log
@enable gpc; sync
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.3 2005/03/25 21:57:10 tg Exp $
d9 1
a9 1
NO_JAVA=	defined
@


1.3
log
@while here, build the c++ front-end as well;
we don't have libstdc++ yet though
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.2 2005/03/25 21:44:39 tg Exp $
d10 1
@


1.2
log
@bring in Objective-C too
@
text
@d1 1
a1 1
# $MirOS: gcc/Makefile.inc,v 1.1 2005/03/25 18:28:48 tg Exp $
d7 1
a7 1
NO_CXX=		defined
@


1.1
log
@copy from ncvs1; adjust slightly
@
text
@d1 1
a1 1
# $MirOS$
d8 1
a8 1
NO_OBJC=	defined
@

