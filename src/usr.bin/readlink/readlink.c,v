head	1.6;
access;
symbols
	MIRBSD_10:1.5.0.2
	MIRBSD_10_BASE:1.5
	MIRBSD_9_BASE:1.5
	MIRBSD_8:1.4.0.2
	MIRBSD_8_BASE:1.4
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2008.11.08.23.04.55;	author tg;	state Exp;
branches;
next	1.5;
commitid	10049161AB22DF5DFC5;

1.5
date	2006.03.18.23.26.05;	author tg;	state Exp;
branches;
next	1.4;
commitid	100441C96F56A995709;

1.4
date	2005.12.17.05.46.29;	author tg;	state Exp;
branches;
next	1.3;
commitid	10043A3A3E65E20A413;

1.3
date	2005.05.21.15.03.11;	author tg;	state Exp;
branches;
next	1.2;
commitid	ec4428f4dc1bb23;

1.2
date	2005.05.20.23.15.54;	author tg;	state Exp;
branches;
next	1.1;
commitid	50ca428e6fb4de36;

1.1
date	2005.02.05.17.29.48;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.48;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@more mass conversions, including ancient eMail addresses
@
text
@/* $MirOS: src/usr.bin/readlink/readlink.c,v 1.5 2006/03/18 23:26:05 tg Exp $ */

/*-
 * Copyright (c) 2005
 *	Thorsten "mirabilos" Glaser <tg@@MirBSD.org>
 *
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
 *
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a nontrivial bug.
 */

#include <err.h>
#include <errno.h>
#include <getopt.h>
#include <limits.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

__RCSID("$MirOS: src/usr.bin/readlink/readlink.c,v 1.5 2006/03/18 23:26:05 tg Exp $");

int main(int, char **);
__dead void usage(void);

int
main(int argc, char *argv[])
{
	char buf[PATH_MAX];
	int ch, nflag = 0, fflag = 0;
	size_t i;

	while ((ch = getopt(argc, argv, "fn")) != -1)
		switch (ch) {
		case 'f':
			fflag = 1;
			break;
		case 'n':
			nflag = 1;
			break;
		default:
			usage();
		}
	argc -= optind;
	argv += optind;

	if (argc != 1)
		usage();

	if ((i = strlen(argv[0])) > (PATH_MAX - 1))
		errx(1, "filename too long, max %d", PATH_MAX - 1);

	if (fflag) {
		if (realpath(argv[0], buf) == NULL)
			err(1, "realpath");
	} else {
		i = readlink(argv[0], buf, sizeof (buf) - 1);
		if ((ssize_t)i < 0)
			err(1, "readlink");
		buf[i] = '\0';
	}

	printf("%s%s", buf, nflag ? "" : "\n");
	return (0);
}

__dead void
usage(void)
{
	extern const char *__progname;

	fprintf(stderr, "usage: %s [-fn] pathname\n", __progname);
	exit(1);
}
@


1.5
log
@* fix 'inverse logic' bug of readlink -n (don't print trailing
  newline, which did the inverse of what it should)
* while here, fix error handling

candidate for MFC to MirOS #8-stable
candidate for preparing a new MirMake release
@
text
@d1 1
a1 1
/* $MirOS: src/usr.bin/readlink/readlink.c,v 1.4 2005/12/17 05:46:29 tg Exp $ */
d5 1
a5 1
 *	Thorsten "mirabile" Glaser <tg@@MirBSD.org>
d33 1
a33 1
__RCSID("$MirOS: src/usr.bin/readlink/readlink.c,v 1.4 2005/12/17 05:46:29 tg Exp $");
@


1.4
log
@big fat licence update (I left some which are bsiegert@@'s alone though)
also, remove licence boilerplate from some .h files who don't deserve it
and remove and add some advertising clauses because I say so
@
text
@d1 1
a1 1
/* $MirOS: src/usr.bin/readlink/readlink.c,v 1.3 2005/05/21 15:03:11 tg Exp $ */
d33 1
a33 1
__RCSID("$MirOS: src/usr.bin/readlink/readlink.c,v 1.3 2005/05/21 15:03:11 tg Exp $");
d65 4
a68 3
	if (fflag)
		realpath(argv[0], buf);
	else {
d71 1
a71 1
			return (1);
d75 1
a75 1
	printf("%s%s", buf, nflag ? "\n" : "");
@


1.3
log
@can use <getopt.h> now
@
text
@d1 1
a1 1
/* $MirOS: src/usr.bin/readlink/readlink.c,v 1.2 2005/05/20 23:15:54 tg Exp $ */
d14 8
a21 7
 * Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
 * any kind, expressed or implied, to the maximum extent permitted by
 * applicable law, but with the warranty of being written without ma-
 * licious intent or gross negligence; in no event shall licensor, an
 * author or contributor be held liable for any damage, direct, indi-
 * rect or other, however caused, arising in any way out of the usage
 * of this work, even if advised of the possibility of such damage.
d33 1
a33 1
__RCSID("$MirOS: src/usr.bin/readlink/readlink.c,v 1.2 2005/05/20 23:15:54 tg Exp $");
@


1.2
log
@rewrite with more KNF applied and working on Interix
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.2 2005/03/03 19:43:30 tg Rel $ */
d25 1
d32 1
a32 1
__RCSID("$MirOS$");
a36 2
extern int optind;

@


1.1
log
@Initial revision
@
text
@d1 5
a5 5
/*
 * $OpenBSD: readlink.c,v 1.19 2003/06/10 22:20:50 deraadt Exp $
 *
 * Copyright (c) 1997
 *	Kenneth Stailey (hereinafter referred to as the author)
d7 6
a12 10
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d14 7
a20 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d23 2
a25 1
#include <errno.h>
d31 7
d42 2
a43 2
	int n, ch, nflag = 0, fflag = 0;
	extern int optind;
d54 1
a54 3
			(void)fprintf(stderr,
			    "usage: readlink [-n] [-f] symlink\n");
			exit(1);
d59 2
a60 4
	if (argc != 1) {
		fprintf(stderr, "usage: readlink [-n] [-f] symlink\n");
		exit(1);
	}
d62 2
a63 7
	n = strlen(argv[0]);
	if (n > PATH_MAX - 1) {
		fprintf(stderr,
			"readlink: filename longer than PATH_MAX-1 (%d)\n",
			PATH_MAX - 1);
		exit(1);
	}
d68 4
a71 3
		if ((n = readlink(argv[0], buf, sizeof buf-1)) < 0)
			exit(1);
		buf[n] = '\0';
d74 11
a84 4
	printf("%s", buf);
	if (!nflag)
		putchar('\n');
	exit(0);
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
