head	1.3;
access;
symbols
	MIRBSD_10:1.2.0.2
	MIRBSD_10_BASE:1.2
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200507211800:1.1.1.2
	cvs-200504291700:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2016.01.02.21.33.07;	author tg;	state Exp;
branches;
next	1.2;
commitid	10056884200442406AA;

1.2
date	2007.07.05.23.09.37;	author tg;	state Exp;
branches;
next	1.1;
commitid	100468D7A224CDB6D5A;

1.1
date	2005.02.05.17.29.24;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.24;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.17.05.56;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove #ifndef __MirBSD__ before setlocale(); related changes
@
text
@/*	$OpenBSD: basename.c,v 1.8 2005/04/12 06:43:44 otto Exp $	*/
/*	$NetBSD: basename.c,v 1.9 1995/09/02 05:29:46 jtc Exp $	*/

/*-
 * Copyright (c) 1991, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/cdefs.h>
__COPYRIGHT("@@(#) Copyright (c) 1991, 1993, 1994\n\
	The Regents of the University of California.  All rights reserved.\n");
__SCCSID("@@(#)basename.c	8.4 (Berkeley) 5/4/95");
__RCSID("$MirOS: src/usr.bin/basename/basename.c,v 1.2 2007/07/05 23:09:37 tg Exp $");

#include <err.h>
#include <libgen.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <locale.h>
#include <unistd.h>

void usage(void);

int
main(int argc, char *argv[])
{
	int ch;
	char *p;

	setlocale(LC_ALL, "");

	while ((ch = getopt(argc, argv, "")) != -1) {
		switch (ch) {
		default:
			usage();
		}
	}
	argc -= optind;
	argv += optind;

	if (argc != 1 && argc != 2)
		usage();

	if (**argv == '\0') {
		(void)puts("");
		exit(0);
	}
	p = basename(*argv);
	if (p == NULL)
		err(1, "%s", *argv);
	/*
	 * If the suffix operand is present, is not identical to the
	 * characters remaining in string, and is identical to a suffix
	 * of the characters remaining in string, the suffix suffix
	 * shall be removed from string.
	 */
	if (*++argv) {
		size_t suffixlen, stringlen, off;

		suffixlen = strlen(*argv);
		stringlen = strlen(p);

		if (suffixlen < stringlen) {
			off = stringlen - suffixlen;
			if (!strcmp(p + off, *argv))
				p[off] = '\0';
		}
	}
	(void)puts(p);
	exit(0);
}

extern char *__progname;
void
usage(void)
{

	(void)fprintf(stderr, "usage: %s string [suffix]\n", __progname);
	exit(1);
}
@


1.2
log
@• #ifdef __MirBSD__
  do not use setlocale() and nl_langinfo(), hardcode it
  #endif
• rcs ids

should greatly reduce space usage of ramdisc
@
text
@d37 1
a37 1
__RCSID("$MirOS$");
a54 1
#ifndef __MirBSD__
a55 1
#endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD: basename.c,v 1.6 2003/06/10 22:20:44 deraadt Exp $	*/
d33 5
a37 12
#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1991, 1993, 1994\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)basename.c	8.4 (Berkeley) 5/4/95";
#endif
static char rcsid[] = "$OpenBSD: basename.c,v 1.6 2003/06/10 22:20:44 deraadt Exp $";
#endif /* not lint */
d39 2
d52 1
d55 1
d57 1
d59 4
a62 19
	if (argc != 2 && argc != 3)
		usage();
	argc--;
	argv++;

	/*
	 * (1) If string is // it is implementation defined whether steps (2)
	 *     through (5) are skipped or processed.
	 *
	 * (2) If string consists entirely of slash characters, string shall
	 *     be set to a single slash character.  In this case, skip steps
	 *     (3) through (5).
	 */
	for (p = *argv;; ++p) {
		if (!*p) {
			if (p > *argv)
				(void)putchar('/');
			(void)putchar('\n');
			exit(0);
a63 2
		if (*p != '/')
			break;
d65 2
d68 2
a69 19
	/*
	 * (3) If there are any trailing slash characters in string, they
	 *     shall be removed.
	 */
	for (; *p; ++p)
		continue;
	while (*--p == '/')
		continue;
	*++p = '\0';

	/*
	 * (4) If there are any slash characters remaining in string, the
	 *     prefix of string up to an including the last slash character
	 *     in string shall be removed.
	 */
	while (--p >= *argv)
		if (*p == '/')
			break;
	++p;
d71 7
d79 4
a82 4
	 * (5) If the suffix operand is present, is not identical to the
	 *     characters remaining in string, and is identical to a suffix
	 *     of the characters remaining in string, the suffix suffix
	 *     shall be removed from string.
d85 1
a85 1
		int suffixlen, stringlen, off;
d100 1
d105 1
a105 1
	(void)fprintf(stderr, "usage: basename string [suffix]\n");
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@improve my Frankenstein OS (*wink* you know who you are) further
sans wchar_t of course

this is the essence of reading >1200 commit messages which suck
due to not having the new format of ours...
@
text
@d1 1
a1 1
/*	$OpenBSD: basename.c,v 1.8 2005/04/12 06:43:44 otto Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: basename.c,v 1.8 2005/04/12 06:43:44 otto Exp $";
a45 2
#include <err.h>
#include <libgen.h>
a56 1
	int ch;
d61 19
a79 4
	while ((ch = getopt(argc, argv, "")) != -1) {
		switch (ch) {
		default:
			usage();
d81 2
a83 2
	argc -= optind;
	argv += optind;
d85 19
a103 2
	if (argc != 1 && argc != 2)
		usage();
a104 7
	if (**argv == '\0') {
		(void)puts("");
		exit(0);
	}
	p = basename(*argv);
	if (p == NULL)
		err(1, "%s", *argv);
d106 4
a109 4
	 * If the suffix operand is present, is not identical to the
	 * characters remaining in string, and is identical to a suffix
	 * of the characters remaining in string, the suffix suffix
	 * shall be removed from string.
d112 1
a112 1
		size_t suffixlen, stringlen, off;
a126 1
extern char *__progname;
d131 1
a131 1
	(void)fprintf(stderr, "usage: %s string [suffix]\n", __progname);
@

