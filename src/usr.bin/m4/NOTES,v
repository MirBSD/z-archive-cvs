head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200911172100:1.1.1.1
	cvs-200908101645:1.1.1.1
	cvs-200810051545:1.1.1.1
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	cvs-200504170300:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.02.05.17.29.42;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.42;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@m4 - macro processor

PD m4 is based on the macro tool distributed with the software 
tools (VOS) package, and described in the "SOFTWARE TOOLS" and 
"SOFTWARE TOOLS IN PASCAL" books. It has been expanded to include 
most of the command set of SysV m4, the standard UN*X macro processor.

Since both PD m4 and UN*X m4 are based on SOFTWARE TOOLS macro,
there may be certain implementation similarities between
the two. The PD m4 was produced without ANY references to m4
sources.

written by: Ozan S. Yigit

References:

	Software Tools distribution: macro

	Kernighan, Brian W. and P. J. Plauger, SOFTWARE
	TOOLS IN PASCAL, Addison-Wesley, Mass. 1981

	Kernighan, Brian W. and P. J. Plauger, SOFTWARE
	TOOLS, Addison-Wesley, Mass. 1976

	Kernighan, Brian W. and Dennis M. Ritchie,
	THE M4 MACRO PROCESSOR, Unix Programmer's Manual,
	Seventh Edition, Vol. 2, Bell Telephone Labs, 1979

	System V man page for M4


Implementation Notes:

[1]	PD m4 uses a different (and simpler) stack mechanism than the one 
	described in Software Tools and Software Tools in Pascal books. 
	The triple stack thing is replaced with a single stack containing 
	the call frames and the arguments. Each frame is back-linked to a 
	previous stack frame, which enables us to rewind the stack after 
	each nested call is completed. Each argument is a character pointer 
	to the beginning of the argument string within the string space.
	The only exceptions to this are (*) arg 0 and arg 1, which are
	the macro definition and macro name strings, stored dynamically
	for the hash table.

	    .					   .
	|   .	|  <-- sp			|  .  |
	+-------+				+-----+
	| arg 3 ------------------------------->| str |
	+-------+				|  .  |
	| arg 2 --------------+ 		   .
	+-------+	      |
	    *		      |			|     |
	+-------+	      | 		+-----+
	| plev	|  <-- fp     +---------------->| str |
	+-------+				|  .  |
	| type	|				   .
	+-------+
	| prcf	-----------+		plev: paren level
	+-------+  	   |		type: call type
	|   .	| 	   |		prcf: prev. call frame
	    .	   	   |
	+-------+	   |
	|	<----------+
	+-------+
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
