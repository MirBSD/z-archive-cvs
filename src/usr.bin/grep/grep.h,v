head	1.4;
access;
symbols
	MIRBSD_10:1.2.0.2
	MIRBSD_10_BASE:1.2
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	cvs-200504291700:1.1.1.1
	cvs-200504170300:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2017.03.12.02.58.23;	author tg;	state Exp;
branches;
next	1.3;
commitid	10058C4B95E351C0B77;

1.3
date	2013.08.06.16.59.33;	author tg;	state Exp;
branches;
next	1.2;
commitid	10052012B7C5B925F4D;

1.2
date	2007.03.22.03.56.49;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004601FE79777C91E6;

1.1
date	2005.02.05.17.29.34;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.34;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@add -z (NUL as line separator) option, for git-find
@
text
@/**	$MirOS: src/usr.bin/grep/grep.h,v 1.3 2013/08/06 16:59:33 tg Exp $ */
/*	$OpenBSD: grep.h,v 1.12 2004/10/03 19:23:02 otto Exp $	*/

/*-
 * Copyright (c) 1999 James Howard and Dag-Erling CoÃ¯dan SmÃ¸rgrav
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/limits.h>

#include <regex.h>
#include <stdio.h>
#include <zlib.h>

#define VER_MAJ 0
#define VER_MIN 9

#define BIN_FILE_BIN	0
#define BIN_FILE_SKIP	1
#define BIN_FILE_TEXT	2

typedef struct {
	size_t		 len;
	int		 line_no;
	off_t		 off;
	const char	*file;
	char		*dat;
} str_t;

typedef struct {
	const unsigned char *pattern;
	int		 patternLen;
	int		 qsBc[UCHAR_MAX + 1];
	/* flags */
	int		 bol;
	int		 eol;
	int		 wmatch;
	int		 reversedSearch;
} fastgrep_t;

/* Flags passed to regcomp() and regexec() */
extern int	 cflags, eflags;

/* Command line flags */
extern int	 Aflag, Bflag, Eflag, Fflag, Gflag, Hflag, Lflag, Pflag,
		 Sflag, Rflag, Zflag,
		 bflag, cflag, hflag, iflag, lflag, nflag, qflag, sflag,
		 vflag, wflag, xflag;
extern int	 binbehave;
extern int	 linesep;

extern int	 first, lead, matchall, patterns, tail;
extern char    **pattern;
extern fastgrep_t *fg_pattern;
extern regex_t	*r_pattern;

/* For regex errors  */
#define RE_ERROR_BUF 512
extern char	 re_error[RE_ERROR_BUF + 1];	/* Seems big enough */

/* util.c */
int		 procfile(const char *fn);
int		 grep_tree(char **argv);
void		*grep_malloc(size_t size);
void		*grep_realloc(void *ptr, size_t size);
void		 printline(str_t *line, int sep);
int		 fastcomp(fastgrep_t *, const char *);
int		 fgrepcomp(fastgrep_t *, const char *);

/* queue.c */
void		 initqueue(void);
void		 enqueue(str_t *x);
void		 printqueue(void);
void		 clearqueue(void);
int		 countqueue(void);

/* mmfile.c */
typedef struct mmfile {
	int	 fd;
	size_t	 len;
	char	*base, *end, *ptr;
} mmf_t;

mmf_t		*mmopen(char *fn, const char *mode);
void		 mmclose(mmf_t *mmf);
char		*mmfgetln(mmf_t *mmf, size_t *l);
long		 mmtell(mmf_t *mmf);
void		 mmrewind(mmf_t *mmf);

/* file.c */
struct file;
typedef struct file file_t;

file_t		*grep_fdopen(int fd, const char *mode);
file_t		*grep_open(const char *path, const char *mode);
int		 grep_bin_file(file_t *f);
long		 grep_tell(file_t *f);
char		*grep_fgetln(file_t *f, size_t *l);
void		 grep_close(file_t *f);

/* binary.c */
int		 bin_file(FILE * f);
int		 gzbin_file(gzFile f);
int		 mmbin_file(mmf_t *f);
@


1.3
log
@fallout from the upgrade, plus general __CRAZY=Yes cleanup
@
text
@d1 1
a1 1
/**	$MirOS$ */
d72 1
@


1.2
log
@â€¢ some __CRAZY=Yes cleanup (diff/diffreg.c and grep/util.c not yet)
â€¢ use isbinry(3) so that -a won't be needed any more, from the men-
  tioned discussion with Han Boetes
â€¢ RCS IDs
â€¢ convert source code files (comments) to UTF-8
@
text
@d1 1
d48 1
a48 1
	char		*file;
d53 1
a53 1
	unsigned char	*pattern;
d83 1
a83 1
int		 procfile(char *fn);
d105 1
a105 1
mmf_t		*mmopen(char *fn, char *mode);
d115 2
a116 2
file_t		*grep_fdopen(int fd, char *mode);
file_t		*grep_open(char *path, char *mode);
d124 1
a124 1
int		 gzbin_file(gzFile * f);
a125 1

@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
 * Copyright (c) 1999 James Howard and Dag-Erling Coïdan Smørgrav
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
