head	1.3;
access;
symbols
	MIRBSD_10:1.2.0.2
	MIRBSD_10_BASE:1.2
	MIRBSD_9_BASE:1.1.1.3
	MIRBSD_8:1.1.1.3.0.2
	MIRBSD_8_BASE:1.1.1.3
	cvs-200507211800:1.1.1.3
	cvs-200504291700:1.1.1.3
	cvs-200504170300:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2013.08.06.16.59.32;	author tg;	state Exp;
branches;
next	1.2;
commitid	10052012B7C5B925F4D;

1.2
date	2007.03.22.03.56.49;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004601FE79777C91E6;

1.1
date	2005.02.05.17.29.34;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.34;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.17.03.31.27;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.04.29.17.06.06;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@fallout from the upgrade, plus general __CRAZY=Yes cleanup
@
text
@/*	$OpenBSD: binary.c,v 1.15 2005/04/25 08:21:20 otto Exp $	*/

/*-
 * Copyright (c) 1999 James Howard and Dag-Erling Co√Ødan Sm√∏rgrav
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <ctype.h>
#include <err.h>
#include <stdio.h>
#include <zlib.h>

#include "grep.h"

__RCSID("$MirOS: src/usr.bin/grep/binary.c,v 1.2 2007/03/22 03:56:49 tg Exp $");

int
bin_file(FILE *f)
{
	char		buf[BUFSIZ];
	size_t		i, m;
	int		ret = 0;

	if (fseek(f, 0L, SEEK_SET) == -1)
		return 0;

	if ((m = fread(buf, 1, BUFSIZ, f)) == 0)
		return 0;

	for (i = 0; i < m; i++)
		if (isbinry(buf[i])) {
			ret = 1;
			break;
		}

	rewind(f);
	return ret;
}

#ifndef NOZ
int
gzbin_file(gzFile f)
{
	char		buf[BUFSIZ];
	int		i, m;
	int		ret = 0;

	if (gzseek(f, (z_off_t)0, SEEK_SET) == -1)
		return 0;

	if ((m = gzread(f, buf, BUFSIZ)) <= 0)
		return 0;

	for (i = 0; i < m; i++)
		if (isbinry(buf[i])) {
			ret = 1;
			break;
		}

	if (gzrewind(f) != 0)
		err(1, "gzbin_file");
	return ret;
}
#endif

int
mmbin_file(mmf_t *f)
{
	size_t i;

	/* XXX knows too much about mmf internals */
	for (i = 0; i < BUFSIZ && i < f->len; i++)
		if (isbinry(f->base[i]))
			return 1;
	return 0;
}
@


1.2
log
@‚Ä¢ some __CRAZY=Yes cleanup (diff/diffreg.c and grep/util.c not yet)
‚Ä¢ use isbinry(3) so that -a won't be needed any more, from the men-
  tioned discussion with Han Boetes
‚Ä¢ RCS IDs
‚Ä¢ convert source code files (comments) to UTF-8
@
text
@d36 1
a36 1
__RCSID("$MirOS$");
d63 1
a63 1
gzbin_file(gzFile *f)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.13 2004/09/15 22:35:36 deraadt Exp $	*/
d4 1
a4 1
 * Copyright (c) 1999 James Howard and Dag-Erling CoÔdan Sm¯rgrav
d30 1
d36 1
a36 1
#define	isbinary(ch)	(!isprint((ch)) && !isspace((ch)) && (ch) != '\b')
d42 1
a42 1
	int		i, m;
d45 1
a45 1
	if (isatty(fileno(f)) || fseek(f, 0L, SEEK_SET) == -1)
d48 1
a48 1
	if ((m = (int)fread(buf, 1, BUFSIZ, f)) == 0)
d52 1
a52 1
		if (isbinary(buf[i])) {
d72 1
a72 1
	if ((m = gzread(f, buf, BUFSIZ)) == 0)
d76 1
a76 1
		if (isbinary(buf[i])) {
d81 2
a82 1
	gzrewind(f);
d90 1
a90 1
	int i;
d94 1
a94 1
		if (isbinary(f->base[i]))
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@some more updates/fixes from obsd
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.14 2005/02/07 08:47:18 otto Exp $	*/
a29 1
#include <err.h>
d44 1
a44 1
	if (fseek(f, 0L, SEEK_SET) == -1)
d80 1
a80 2
	if (gzrewind(f) != 0)
		err(1, "gzbin_file");
@


1.1.1.3
log
@improve my Frankenstein OS (*wink* you know who you are) further
sans wchar_t of course

this is the essence of reading >1200 commit messages which suck
due to not having the new format of ours...
@
text
@d1 1
a1 1
/*	$OpenBSD: binary.c,v 1.15 2005/04/25 08:21:20 otto Exp $	*/
d42 1
a42 1
	size_t		i, m;
d48 1
a48 1
	if ((m = fread(buf, 1, BUFSIZ, f)) == 0)
d72 1
a72 1
	if ((m = gzread(f, buf, BUFSIZ)) <= 0)
@


