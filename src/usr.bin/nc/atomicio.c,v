head	1.4;
access;
symbols
	MIRBSD_10:1.4.0.4
	MIRBSD_10_BASE:1.4
	MIRBSD_9_BASE:1.4
	MIRBSD_8:1.4.0.2
	MIRBSD_8_BASE:1.4
	cvs-200507211800:1.1.1.3
	cvs-200504291700:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2005.11.23.18.04.10;	author tg;	state Exp;
branches;
next	1.3;
commitid	af74384af2ab463;

1.3
date	2005.04.29.18.35.09;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.13.18.33.18;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.29.45;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.45;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.17.06.06;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.07.21.21.00.01;	author tg;	state Exp;
branches;
next	;
commitid	560042e0092f571e;


desc
@@


1.4
log
@fastmerge remainder of src/usr.bin
@
text
@/* $OpenBSD: atomicio.c,v 1.7 2005/05/26 01:01:08 avsm Exp $ */

/*
 * Copyright (c) 2005 Anil Madhavapeddy.  All rights served.
 * Copyright (c) 1995,1999 Theo de Raadt.  All rights reserved.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/uio.h>
#include <errno.h>
#include <unistd.h>

#include "atomicio.h"

__RCSID("$MirOS: src/usr.bin/nc/atomicio.c,v 1.3 2005/04/29 18:35:09 tg Exp $");

/*
 * ensure all of data on socket comes through. f==read || f==vwrite
 */
size_t
atomicio(f, fd, _s, n)
	ssize_t (*f) (int, void *, size_t);
	int fd;
	void *_s;
	size_t n;
{
	char *s = _s;
	size_t pos = 0;
	ssize_t res;

	while (n > pos) {
		res = (f) (fd, s + pos, n - pos);
		switch (res) {
		case -1:
			if (errno == EINTR || errno == EAGAIN)
				continue;
			return 0;
		case 0:
			errno = EPIPE;
			return pos;
		default:
			pos += (u_int)res;
		}
	}
	return pos;
}
@


1.3
log
@(tentative) merge, more to come
@
text
@d1 2
d4 1
a30 1

d34 1
a34 1
__RCSID("$MirOS: src/usr.bin/nc/atomicio.c,v 1.2 2005/03/13 18:33:18 tg Exp $");
d36 1
a36 1
ssize_t atomicio(ssize_t (*f)(int, void *, size_t), int fd, void *_s, size_t n);
d39 1
a39 1
 * ensure all of data on socket comes through. f==read || f==write
d41 6
a46 2
ssize_t
atomicio(ssize_t (*f) (int, void *, size_t), int fd, void *_s, size_t n)
d49 2
a50 1
	ssize_t res, pos = 0;
d52 1
a52 1
	while (n > (size_t)pos) {
d58 1
d60 2
a61 1
			return (res);
d63 1
a63 1
			pos += res;
d66 1
a66 1
	return (pos);
@


1.2
log
@merge src/usr.bin
@
text
@d32 1
a32 1
__RCSID("$MirOS$");
d45 1
a45 1
	while ((ssize_t)n > pos) {
@


1.1
log
@Initial revision
@
text
@d32 2
d45 1
a45 1
	while (n > pos) {
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@improve my Frankenstein OS (*wink* you know who you are) further
sans wchar_t of course

this is the essence of reading >1200 commit messages which suck
due to not having the new format of ours...
@
text
@d43 1
a43 1
	while (n > (size_t)pos) {
@


1.1.1.3
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@a0 2
/* $OpenBSD: atomicio.c,v 1.7 2005/05/26 01:01:08 avsm Exp $ */

a1 1
 * Copyright (c) 2005 Anil Madhavapeddy.  All rights served.
d28 1
d31 2
a32 1
#include "atomicio.h"
d35 1
a35 1
 * ensure all of data on socket comes through. f==read || f==vwrite
d37 2
a38 6
size_t
atomicio(f, fd, _s, n)
	ssize_t (*f) (int, void *, size_t);
	int fd;
	void *_s;
	size_t n;
d41 1
a41 2
	size_t pos = 0;
	ssize_t res;
d43 1
a43 1
	while (n > pos) {
a48 1
			return 0;
d50 1
a50 2
			errno = EPIPE;
			return pos;
d52 1
a52 1
			pos += (u_int)res;
d55 1
a55 1
	return pos;
@


