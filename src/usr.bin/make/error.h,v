head	1.4;
access;
symbols
	MIRBSD_10:1.3.0.4
	MIRBSD_10_BASE:1.3
	cvs-200706211400:1.1.1.1
	MIRBSD_9_BASE:1.3
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2013.10.31.20.07.06;	author tg;	state Exp;
branches;
next	1.3;
commitid	1005272B7081B0E5655;

1.3
date	2005.11.24.13.20.33;	author tg;	state Exp;
branches;
next	1.2;
commitid	11f34385be32929b;

1.2
date	2005.11.24.12.37.43;	author tg;	state Exp;
branches;
next	1.1;
commitid	2fda4385b415ddd6;

1.1
date	2005.02.05.17.29.42;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.42;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@#ifndef ERROR_H
#define ERROR_H

/**	$MirOS: src/usr.bin/make/error.h,v 1.3 2005/11/24 13:20:33 tg Exp $ */
/*	$OpenBSD: error.h,v 1.7 2001/09/19 10:58:07 mpech Exp $ */

/*
 * Copyright © 2013
 *	Thorsten “mirabilos” Glaser <tg@@mirbsd.org>
 * Copyright (c) 2001 Marc Espie.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE OPENBSD PROJECT AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENBSD
 * PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*	Error			Print a tagged error message. The global
 *				MAKE variable must have been defined. This
 *				takes a format string and two optional
 *				arguments for it.
 *
 *	Fatal			Print an error message and exit. Also takes
 *				a format string and two arguments.
 *
 *	Punt			Aborts all jobs and exits with a message. Also
 *				takes a format string and two arguments.
 *
 *	Finish			Finish things up by printing the number of
 *				errors which occurred, as passed to it, and
 *				exiting.
 */

extern void Error(const char *, ...)
    __attribute__((__format__(__printf__, 1, 2)));
extern void Fatal(const char *, ...)
    __attribute__((__noreturn__))
    __attribute__((__format__(__printf__, 1, 2)));
extern void Punt(const char *, ...)
    __attribute__((__noreturn__))
    __attribute__((__format__(__printf__, 1, 2)));
extern void DieHorribly(void)
    __attribute__((__noreturn__));
extern void Finish(int)
    __attribute__((__noreturn__));

/*
 * Error levels for parsing. PARSE_FATAL means the process cannot continue
 * once the makefile has been parsed. PARSE_WARNING means it can. Passed
 * as the first argument to Parse_Error.
 */

#define PARSE_WARNING	2
#define PARSE_FATAL	1
extern void Parse_Error(int, const char *, ...)
    __attribute__((__format__(__printf__, 2, 3)));
extern int fatal_errors;

#endif
@


1.3
log
@make __CRAZY clean
@
text
@d4 1
a4 1
/**	$MirOS$ */
d8 2
d51 1
a51 1
    __attribute__((__format__ (printf, 1, 2)));
d53 2
a54 2
    __attribute__((noreturn))
    __attribute__((__format__ (printf, 1, 2)));
d56 2
a57 2
    __attribute__((noreturn))
    __attribute__((__format__ (printf, 1, 2)));
d59 1
a59 1
    __attribute__((noreturn));
d61 1
a61 1
    __attribute__((noreturn));
d72 1
a72 1
    __attribute__((__format__ (printf, 2, 3)));
@


1.2
log
@* make it easier for later makes to build it portably
* start __CRAZY cleanup, but with -Wno-cast-qual (and checking)
@
text
@d3 2
a4 1
/*	$OpenPackages$ */
d31 1
d47 1
d66 1
d72 1
@


1.1
log
@Initial revision
@
text
@d45 12
a56 5
extern void Error(char *, ...);
extern void Fatal(char *, ...);
extern void Punt(char *, ...);
extern void DieHorribly(void);
extern void Finish(int);
d65 2
a66 1
extern void Parse_Error(int, const char *, ...);
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
