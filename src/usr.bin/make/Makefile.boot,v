head	1.10;
access;
symbols
	MIRBSD_10:1.10.0.2
	MIRBSD_10_BASE:1.10
	cvs-200706211400:1.1.1.1
	MIRBSD_9_BASE:1.9
	MIRBSD_8:1.9.0.2
	MIRBSD_8_BASE:1.9
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2008.02.17.15.43.12;	author bsiegert;	state Exp;
branches;
next	1.9;
commitid	10047B8562800009972;

1.9
date	2005.11.24.13.51.53;	author tg;	state Exp;
branches;
next	1.8;
commitid	2d6a4385c58c23e7;

1.8
date	2005.11.24.13.26.56;	author tg;	state Exp;
branches;
next	1.7;
commitid	2a364385bfb152d3;

1.7
date	2005.11.24.12.49.37;	author tg;	state Exp;
branches;
next	1.6;
commitid	383d4385b6e7b63d;

1.6
date	2005.05.25.23.50.27;	author tg;	state Exp;
branches;
next	1.5;
commitid	715c42950f4ccef2;

1.5
date	2005.04.13.17.12.26;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.26.13.35.27;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.02.23.20.49.26;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.23.20.36.53;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.29.42;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.42;	author tg;	state Exp;
branches;
next	;


desc
@@


1.10
log
@getopt here too. As we cannot use .if and friends, define a variable
getopt_long_o that may be overridden on the command line
@
text
@# $MirOS: src/usr.bin/make/Makefile.boot,v 1.9 2005/11/24 13:51:53 tg Exp $
# $OpenPackages: Makefile.boot,v 1.5 2001/04/06 00:09:55 will Exp $
# $OpenBSD: Makefile.boot,v 1.8 2001/05/29 12:41:18 espie Exp $
#
# a very simple makefile...
#
# You only want to use this if you aren't running MirOS.
#
# modify MACHINE and MACHINE_ARCH as appropriate for your target architecture

#------------------------------
# System dependencies
#------------------------------

#MACHINE=sun
#MACHINE_ARCH=sparc
MACHINE=i386
MACHINE_ARCH=i386
MACHINE_OS=BSD

# set this to the true path of mirbsdksh
MKSH=		/bin/mksh

# some make(1)s don't support +=
DEFS=		-DMAKE_BOOTSTRAP #-DNEED_VSNPRINTF
#DEFS_RE=	-DNO_REGEX

# paths
LIBCDIR=	/usr/src/lib/libc
INCLDIR=	/usr/src/include

#==============================

.c.o:
	${CC} ${CFLAGS} ${CPPFLAGS} -c $< -o $@@

CFLAGS= -Iohash -I. ${DEFS} ${DEFS_RE} ${COPTS} -DMACHINE=\"${MACHINE}\" \
	-DMACHINE_ARCH=\"${MACHINE_ARCH}\" -DMACHINE_OS=\"${MACHINE_OS}\" \
	-D_PATH_MIRBSDKSH=\"${MKSH}\" -D_PATH_DEFSYSPATH=\"/usr/share/mk\" \
	-DIN_MIRMAKE
LIBS=	ohash/libohash.a

# can be overridden
getopt_long_o=getopt_long.o

OBJ=	arch.o buf.o compat.o cond.o dir.o for.o job.o main.o make.o \
	parse.o str.o suff.o targ.o var.o util.o error.o lowparse.o \
	varmodifiers.o memory.o cmd_exec.o timestamp.o parsevar.o \
	varname.o init.o strlfun.o ${getopt_long_o} fgetln.o

LIBOBJ=	lst.lib/lstAddNew.o lst.lib/lstAppend.o \
	lst.lib/lstConcat.o lst.lib/lstConcatDestroy.o lst.lib/lstDeQueue.o \
	lst.lib/lstDestroy.o lst.lib/lstDupl.o lst.lib/lstFindFrom.o \
	lst.lib/lstForEachFrom.o lst.lib/lstInsert.o \
	lst.lib/lstMember.o lst.lib/lstRemove.o lst.lib/lstReplace.o \
	lst.lib/lstSucc.o

bmake: varhashconsts.h condhashconsts.h ${OBJ} ${LIBOBJ}
#	@@echo 'make of make and make.0 started.'
	${CC} ${CFLAGS} ${OBJ} ${LIBOBJ} -o bmake ${LIBS}
	@@ls -l $@@
#	nroff -h -man make.1 >make.0
#	@@echo 'make of make and make.0 completed.'

GENOBJ= generate.o stats.o memory.o ohash/libohash.a

OHASHOBJ= ohash/ohash_create_entry.o ohash/ohash_delete.o ohash/ohash_do.o \
	ohash/ohash_entries.o ohash/ohash_enum.o ohash/ohash_init.o \
	ohash/ohash_interval.o ohash/ohash_lookup_interval.o \
	ohash/ohash_lookup_memory.o ohash/ohash_qlookup.o \
	ohash/ohash_qlookupi.o

ohash/libohash.a: ${OHASHOBJ}
	ar cq ohash/libohash.a ${OHASHOBJ}
	ranlib ohash/libohash.a

generate: ${GENOBJ}
	${CC} ${CFLAGS} ${GENOBJ} -o generate ${LIBS}

varhashconsts.h: generate
	./generate 1 82 >varhashconsts.h

condhashconsts.h: generate
	./generate 2 65 >condhashconsts.h

clean:
	rm -f ${OBJ} ${LIBOBJ} ${PORTOBJ} ${GENOBJ} ${OHASHOBJ} bmake
	rm -f varhashconsts.h condhashconsts.h generate
@


1.9
log
@but include defines.h
@
text
@d1 1
a1 1
# $MirOS: src/usr.bin/make/Makefile.boot,v 1.8 2005/11/24 13:26:56 tg Exp $
d43 3
d49 1
a49 1
	varname.o init.o strlfun.o getopt_long.o fgetln.o
@


1.8
log
@make fgetln into a file of its own
@
text
@d1 1
a1 1
# $MirOS: src/usr.bin/make/Makefile.boot,v 1.7 2005/11/24 12:49:37 tg Exp $
d39 2
a40 1
	-D_PATH_MIRBSDKSH=\"${MKSH}\" -D_PATH_DEFSYSPATH=\"/usr/share/mk\"
@


1.7
log
@* Makefile.boot: remove copy-libc, mirmake does this now
* Makefile: integrate stubs for building MirMake
@
text
@d1 1
a1 1
# $MirOS: src/usr.bin/make/Makefile.boot,v 1.6 2005/05/25 23:50:27 tg Exp $
d25 1
a25 1
DEFS=		-DMAKE_BOOTSTRAP -DNEED_FGETLN #-DNEED_VSNPRINTF
d45 1
a45 1
	varname.o init.o strlfun.o getopt_long.o
@


1.6
log
@mksh is pretty mature; switch most of contrib/ to it
@
text
@d1 1
a1 1
# $MirOS: src/usr.bin/make/Makefile.boot,v 1.5 2005/04/13 17:12:26 tg Exp $
a84 7

copy-libc:
	cp -R ${LIBCDIR}/ohash .
	cp ${INCLDIR}/ohash.h .
	cp ${LIBCDIR}/string/strlfun.c .
	cp ${LIBCDIR}/stdlib/getopt_long.c .
	cp ${INCLDIR}/getopt.h .
@


1.5
log
@need CPPFLAGS for compiling
@
text
@d1 1
a1 1
# $MirOS: src/usr.bin/make/Makefile.boot,v 1.4 2005/02/26 13:35:27 tg Exp $
d22 1
a22 1
MKSH=		/bin/ksh
@


1.4
log
@by default, include regex support in bootstrapped MirMake
(you can build mmake without, but <bsd.lib.mk> uses it)
@
text
@d1 1
a1 1
# $MirOS: src/usr.bin/make/Makefile.boot,v 1.3 2005/02/23 20:49:26 tg Exp $
d35 1
a35 1
	${CC} ${CFLAGS} -c $< -o $@@
@


1.3
log
@improve simplicity of portable mirmake
@
text
@d1 1
a1 1
# $MirOS: src/usr.bin/make/Makefile.boot,v 1.2 2005/02/23 20:36:53 tg Exp $
d26 1
d37 1
a37 1
CFLAGS= -Iohash -I. ${DEFS} ${COPTS} -DMACHINE=\"${MACHINE}\" \
@


1.2
log
@* merge make from ncvs 1
* reduce diff in the amount of whitespace to facilitate
  easier future merges of OpenBSD, in the hope they'll
  ever fix that in their CVS *sigh*
* sane MACHINE{,_ARCH,_OS} handling
@
text
@d1 1
a1 1
# $MirOS$
d25 1
a25 10
DEFS=		-DMAKE_BOOTSTRAP -DNEED_FGETLN
#DEFS_VSN=	-DNEED_VSNPRINTF
#FILES_STRL=	strlfun.o
#FILES_GETOPT=	getopt_long.o

# a stupid way to do .if/.else/.endif with make
COPY_OHASH=	copy_ohash
COPY_STRL=	copy_strl
#COPY_GETOPT=	copy_getopt
COPY_GETOPT=	copy_dummy
d36 3
a38 4
CFLAGS= -Iohash -I. -DMACHINE=\"${MACHINE}\" \
	-DMACHINE_ARCH=\"${MACHINE_ARCH}\" \
	-DMACHINE_OS=\"${MACHINE_OS}\" \
	-D_PATH_MIRBSDKSH=\"${MKSH}\" ${DEFS} ${DEFS_VSN} ${COPTS}
d44 1
a44 1
	varname.o init.o ${FILES_STRL} ${FILES_GETOPT}
d85 1
a85 5
copy-sources: ${COPY_OHASH} ${COPY_STRL} ${COPY_GETOPT}

copy_dummy:

copy_ohash:
a87 2

copy_strl:
a88 2

copy_getopt:
@


1.1
log
@Initial revision
@
text
@d1 3
a3 2
#	$OpenPackages: Makefile.boot,v 1.5 2001/04/06 00:09:55 will Exp $
#	$OpenBSD: Makefile.boot,v 1.8 2001/05/29 12:41:18 espie Exp $
d7 1
a7 1
# You only want to use this if you aren't running OpenBSD.
d10 31
a40 1
#
d45 10
a54 10
MACHINE=sun
MACHINE_ARCH=sparc
CFLAGS= -Iohash -I. -DTARGET_MACHINE=\"${MACHINE}\" -DTARGET_MACHINE_ARCH=\"${MACHINE_ARCH}\" -DMACHINE=\"${MACHINE}\" \
	-DMAKE_BOOTSTRAP -DNEED_FGETLN
LIBS= ohash/libohash.a

OBJ=arch.o buf.o compat.o cond.o dir.o for.o job.o main.o make.o \
    parse.o str.o suff.o targ.o var.o util.o error.o lowparse.o \
    varmodifiers.o memory.o cmd_exec.o timestamp.o parsevar.o \
    varname.o init.o
d59 1
a59 1
	lst.lib/lstForEachFrom.o lst.lib/lstInit.o lst.lib/lstInsert.o \
d63 1
a63 1
bmake: varhashconsts.h ${OBJ} ${LIBOBJ}
d67 1
a67 1
#	nroff -h -man make.1 > make.0
d86 4
a89 1
	./generate 1 77 > varhashconsts.h
d93 12
a104 1
	rm -f varhashconsts.h generate
d106 3
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
