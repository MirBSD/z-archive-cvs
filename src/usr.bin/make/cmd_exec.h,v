head	1.3;
access;
symbols
	MIRBSD_10:1.3.0.4
	MIRBSD_10_BASE:1.3
	cvs-200706211400:1.1.1.1
	MIRBSD_9_BASE:1.3
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2005.11.24.13.20.32;	author tg;	state Exp;
branches;
next	1.2;
commitid	11f34385be32929b;

1.2
date	2005.11.24.12.37.43;	author tg;	state Exp;
branches;
next	1.1;
commitid	2fda4385b415ddd6;

1.1
date	2005.02.05.17.29.42;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.42;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@make __CRAZY clean
@
text
@#ifndef CMD_EXEC_H
#define CMD_EXEC_H

/**	$MirOS$ */
/*	$OpenBSD: cmd_exec.h,v 1.1 2001/05/23 12:34:40 espie Exp $ */

/*
 * Copyright (c) 2001 Marc Espie.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE OPENBSD PROJECT AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENBSD
 * PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* output = Cmd_Exec(cmd, &err);
 *	execute the command in cmd, return the output of that command as
 *	a string. If an error occurs, Cmd_Exec returns an empty string,
 *	and err is filled with the reason for the command failure.
 *	The output result should always be freed by the caller.  */
extern char *Cmd_Exec(const char *, const char **);

#endif
@


1.2
log
@* make it easier for later makes to build it portably
* start __CRAZY cleanup, but with -Wno-cast-qual (and checking)
@
text
@d3 2
a4 1
/*	$OpenPackages$ */
d33 1
a33 1
 *	execute the command in cmd, return the output of that command as 
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
extern char *Cmd_Exec(const char *, char **);
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
