head	1.16;
access;
symbols
	cvs-200910041320:1.1.1.10
	cvs-200903221200:1.1.1.9
	cvs-200812162015:1.1.1.8
	cvs-200804031830:1.1.1.7
	MIRBSD_10:1.10.0.2
	MIRBSD_10_BASE:1.10
	cvs-200803022030:1.1.1.7
	cvs-200709131337:1.1.1.6
	cvs-200709021830:1.1.1.6
	cvs-200708201200:1.1.1.6
	cvs-200706161500:1.1.1.6
	cvs-200705192215:1.1.1.6
	cvs-200704292000:1.1.1.6
	cvs-200703080900:1.1.1.6
	cvs-200701251600:1.1.1.6
	cvs-200612111600:1.1.1.6
	cvs-200611090230:1.1.1.6
	OPENBSD_4_0:1.1.1.6
	MIRBSD_9_BASE:1.7
	cvs-200606162342:1.1.1.5
	cvs-200606022000:1.1.1.5
	cvs-200604191000:1.1.1.5
	cvs-200602220045:1.1.1.4
	MIRBSD_8:1.5.0.2
	MIRBSD_8_BASE:1.5
	cvs-200512201942:1.1.1.4
	cvs-200511231930:1.1.1.3
	cvs-200507211800:1.1.1.3
	cvs-200506221550:1.1.1.3
	cvs-200505050030:1.1.1.2
	cvs-200504291700:1.1.1.2
	cvs-200504261445:1.1.1.2
	cvs-200504141900:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.16
date	2016.01.14.19.23.03;	author tg;	state Exp;
branches;
next	1.15;
commitid	1005697F5AA3EA7E36D;

1.15
date	2014.03.28.22.31.57;	author tg;	state Exp;
branches;
next	1.14;
commitid	1005335F87233372394;

1.14
date	2011.01.15.21.52.40;	author tg;	state Exp;
branches;
next	1.13;
commitid	1004D32173B08BB4E36;

1.13
date	2009.10.04.14.29.06;	author tg;	state Exp;
branches;
next	1.12;
commitid	1004AC8B1276FC00211;

1.12
date	2009.03.22.15.01.19;	author tg;	state Exp;
branches;
next	1.11;
commitid	10049C652CD5CCC321F;

1.11
date	2008.12.16.20.55.25;	author tg;	state Exp;
branches;
next	1.10;
commitid	100494815C97ECEEDBF;

1.10
date	2008.03.02.21.14.20;	author tg;	state Exp;
branches;
next	1.9;
commitid	10047CB18BB506A8527;

1.9
date	2006.09.20.21.41.01;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004511B578580E7F04;

1.8
date	2006.08.12.13.57.11;	author tg;	state Exp;
branches;
next	1.7;
commitid	10044DDDE213D814E74;

1.7
date	2006.04.19.10.40.50;	author tg;	state Exp;
branches;
next	1.6;
commitid	100444613BD3A91C28B;

1.6
date	2006.02.22.02.16.47;	author tg;	state Exp;
branches;
next	1.5;
commitid	10043FBC991512A442B;

1.5
date	2005.12.20.19.57.33;	author tg;	state Exp;
branches;
next	1.4;
commitid	10043A8623F4C1F637E;

1.4
date	2005.06.22.16.11.39;	author tg;	state Exp;
branches;
next	1.3;
commitid	598b42b98dcf335f;

1.3
date	2005.04.14.19.49.34;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.13.18.33.30;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.29.52;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.52;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.14.19.33.27;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.06.22.15.56.27;	author tg;	state Exp;
branches;
next	1.1.1.4;
commitid	181342b98a38fe99;

1.1.1.4
date	2005.12.20.19.43.44;	author tg;	state Exp;
branches;
next	1.1.1.5;
commitid	10043A85EF81EF097CF;

1.1.1.5
date	2006.04.19.10.15.04;	author tg;	state Exp;
branches;
next	1.1.1.6;
commitid	10044460DB21E1F715C;

1.1.1.6
date	2006.09.20.19.06.49;	author tg;	state Exp;
branches;
next	1.1.1.7;
commitid	10045119150397FC669;

1.1.1.7
date	2008.03.02.20.40.42;	author tg;	state Exp;
branches;
next	1.1.1.8;
commitid	10047CB10DD30FAF062;

1.1.1.8
date	2008.12.16.20.15.33;	author tg;	state Exp;
branches;
next	1.1.1.9;
commitid	10049480C7A2701F5C0;

1.1.1.9
date	2009.03.22.12.03.00;	author tg;	state Exp;
branches;
next	1.1.1.10;
commitid	10049C6290649163EA3;

1.1.1.10
date	2009.10.04.13.25.45;	author tg;	state Exp;
branches;
next	;
commitid	1004AC8A2663BC008C5;


desc
@@


1.16
log
@drop roaming code completely
@
text
@/* $MirOS: src/usr.bin/ssh/readconf.h,v 1.15 2014/03/28 22:31:57 tg Exp $ */
/* $OpenBSD: readconf.h,v 1.79 2009/06/27 09:35:06 andreas Exp $ */

/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 * Functions for reading the configuration file.
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */

#ifndef READCONF_H
#define READCONF_H

/* Data structure for representing a forwarding request. */

typedef struct {
	char	 *listen_host;		/* Host (address) to listen on. */
	int	  listen_port;		/* Port to forward. */
	char	 *connect_host;		/* Host to connect. */
	int	  connect_port;		/* Port to connect on connect_host. */
}       Forward;
/* Data structure for representing option data. */

#define MAX_SEND_ENV	256

typedef struct {
	int     forward_agent;	/* Forward authentication agent. */
	int     forward_x11;	/* Forward X11 display. */
	int     forward_x11_trusted;	/* Trust Forward X11 display. */
	int     exit_on_forward_failure;	/* Exit if bind(2) fails for -L/-R */
	char   *xauth_location;	/* Location for xauth program */
	int     gateway_ports;	/* Allow remote connects to forwarded ports. */
	int     use_privileged_port;	/* Don't use privileged port if false. */
	int     rhosts_rsa_authentication;	/* Try rhosts with RSA
						 * authentication. */
	int     rsa_authentication;	/* Try RSA authentication. */
	int     pubkey_authentication;	/* Try ssh2 pubkey authentication. */
	int     hostbased_authentication;	/* ssh2's rhosts_rsa */
	int     challenge_response_authentication;
					/* Try S/Key or TIS, authentication. */
	int     password_authentication;	/* Try password
						 * authentication. */
	int     kbd_interactive_authentication; /* Try keyboard-interactive auth. */
	char	*kbd_interactive_devices; /* Keyboard-interactive auth devices. */
	int     batch_mode;	/* Batch mode: do not ask for passwords. */
	int     check_host_ip;	/* Also keep track of keys for IP address */
	int     strict_host_key_checking;	/* Strict host key checking. */
	int     compression;	/* Compress packets in both directions. */
	int     compression_level;	/* Compression level 1 (fast) to 9
					 * (best). */
	int     tcp_keep_alive;	/* Set SO_KEEPALIVE. */
	LogLevel log_level;	/* Level for logging. */

	int     port;		/* Port to connect. */
	int     address_family;
	int     connection_attempts;	/* Max attempts (seconds) before
					 * giving up */
	int     connection_timeout;	/* Max time (seconds) before
					 * aborting connection attempt */
	int     number_of_password_prompts;	/* Max number of password
						 * prompts. */
	int     cipher;		/* Cipher to use. */
	const char   *ciphers;	/* SSH2 ciphers in order of preference. */
	const char   *macs;	/* SSH2 macs in order of preference. */
	char   *hostkeyalgorithms;	/* SSH2 server key types in order of preference. */
	int	protocol;	/* Protocol in order of preference. */
	char   *hostname;	/* Real host to connect. */
	char   *host_key_alias;	/* hostname alias for .etc/ssh/known_hosts */
	char   *proxy_command;	/* Proxy command for connecting the host. */
	char   *user;		/* User to log in as. */
	int     escape_char;	/* Escape character; -2 = none */

	char   *system_hostfile;/* Path for /etc/ssh/ssh_known_hosts. */
	char   *user_hostfile;	/* Path for $HOME/.etc/ssh/known_hosts. */
	char   *system_hostfile2;
	char   *user_hostfile2;
	char   *preferred_authentications;
	char   *bind_address;	/* local socket address for connection to sshd */
	char   *smartcard_device; /* Smartcard reader device */
	int	verify_host_key_dns;	/* Verify host key using DNS */

	int     num_identity_files;	/* Number of files for RSA/DSA identities. */
	char   *identity_files[SSH_MAX_IDENTITY_FILES];
	Key    *identity_keys[SSH_MAX_IDENTITY_FILES];

	/* Local TCP/IP forward requests. */
	int     num_local_forwards;
	Forward local_forwards[SSH_MAX_FORWARDS_PER_DIRECTION];

	/* Remote TCP/IP forward requests. */
	int     num_remote_forwards;
	Forward remote_forwards[SSH_MAX_FORWARDS_PER_DIRECTION];
	int	clear_forwardings;

	int	enable_ssh_keysign;
	int64_t rekey_limit;
	int	no_host_authentication_for_localhost;
	int	identities_only;
	int	server_alive_interval;
	int	server_alive_count_max;

	int     num_send_env;
	char   *send_env[MAX_SEND_ENV];

	char	*control_path;
	int	control_master;

	int	hash_known_hosts;

	int	tun_open;	/* tun(4) */
	int     tun_local;	/* force tun device (optional) */
	int     tun_remote;	/* force tun device (optional) */

	char	*local_command;
	int	permit_local_command;
	int	visual_host_key;

}       Options;

#define SSHCTL_MASTER_NO	0
#define SSHCTL_MASTER_YES	1
#define SSHCTL_MASTER_AUTO	2
#define SSHCTL_MASTER_ASK	3
#define SSHCTL_MASTER_AUTO_ASK	4

struct passwd;	/* in case this was not imported */

void     initialize_options(Options *);
void     fill_default_options(Options *, struct passwd *);
int	 read_config_file(const char *, const char *, Options *, int);
int	 parse_forward(Forward *, const char *, int, int);

int
process_config_line(Options *, const char *, char *, const char *, int, int *);

void	 add_local_forward(Options *, const Forward *);
void	 add_remote_forward(Options *, const Forward *);

#endif				/* READCONF_H */
@


1.15
log
@replicate commit “remove experimental, never-enabled JPAKE code; ok markus@@” (djm, 2014/01/29 06:18:35) from upstream
@
text
@d1 1
a1 1
/* $MirOS: src/usr.bin/ssh/readconf.h,v 1.14 2011/01/15 21:52:40 tg Exp $ */
a123 2
	int	use_roaming;

@


1.14
log
@Introduce /etc/ssh/root:config and /etc/ssh/root:known_hosts
and /etc/ssh/root:authorised_keys for the superuser if his
HOME directory is unset, empty or, not normalised, "/" (root).
十̲CVS: ----------------------------------------------------------------------
@
text
@d1 1
a1 1
/* $MirOS: src/usr.bin/ssh/readconf.h,v 1.13 2009/10/04 14:29:06 tg Exp $ */
a50 1
	int     zero_knowledge_password_authentication;	/* Try jpake */
@


1.13
log
@• merge newer OpenSSH
• KNF in our diff – style(9)
• some const cleanliness (build with __CRAZY=Yes mostly)
@
text
@d1 1
a1 1
/* $MirOS: src/usr.bin/ssh/readconf.h,v 1.12 2009/03/22 15:01:19 tg Exp $ */
d135 2
d138 1
a138 1
void     fill_default_options(Options *);
@


1.12
log
@merge and tweak ciphers and MACs
@
text
@d1 2
a2 2
/* $MirOS: src/usr.bin/ssh/readconf.h,v 1.11 2008/12/16 20:55:25 tg Exp $ */
/* $OpenBSD: readconf.h,v 1.78 2009/02/12 03:00:56 djm Exp $ */
d125 2
@


1.11
log
@fastmerge, do not use yet!
@
text
@d1 2
a2 2
/* $MirOS: src/usr.bin/ssh/readconf.h,v 1.10 2008/03/02 21:14:20 tg Exp $ */
/* $OpenBSD: readconf.h,v 1.76 2008/11/04 08:22:13 djm Exp $ */
d24 1
a24 1
	u_short	  listen_port;		/* Port to forward. */
d26 1
a26 1
	u_short	  connect_port;		/* Port to connect on connect_host. */
d136 1
a136 1
int	 parse_forward(Forward *, const char *, int);
@


1.10
log
@merge’n’fix
@
text
@d1 2
a2 2
/* $MirOS: src/usr.bin/ssh/readconf.h,v 1.9 2006/09/20 21:41:01 tg Exp $ */
/* $OpenBSD: readconf.h,v 1.72 2008/01/19 23:09:49 djm Exp $ */
d51 1
d123 1
d136 1
a136 1
int	 parse_forward(Forward *, const char *);
@


1.9
log
@finish merging
@
text
@d1 2
a2 2
/* $MirOS: src/usr.bin/ssh/readconf.h,v 1.8 2006/08/12 13:57:11 tg Exp $ */
/* $OpenBSD: readconf.h,v 1.71 2006/08/03 03:34:42 deraadt Exp $ */
d102 1
a102 1
	int	rekey_limit;
@


1.8
log
@* readconf.h, ssh.c: move support code for 'ssh -h' into ssh.c entirely
* ssh.c: deprecate -h (big warning)
* ssh.1, ssh.c: don't document -h, -k
@
text
@d1 2
a2 2
/* $MirOS: src/usr.bin/ssh/readconf.h,v 1.7 2006/04/19 10:40:50 tg Exp $ */
/* $OpenBSD: readconf.h,v 1.69 2006/03/25 22:22:43 djm Exp $ */
a19 2
#include "key.h"

d36 1
@


1.7
log
@merge and clean up
@
text
@d1 1
a1 1
/* $MirOS$ */
a104 1
	int	no_lowdelay;
@


1.6
log
@fix a lot of and kludge a few more __CRAZY problems, sync rcs id
@
text
@d1 2
a2 2
/**	$MirOS: src/usr.bin/ssh/readconf.h,v 1.5 2005/12/20 19:57:33 tg Exp $ */
/*	$OpenBSD: readconf.h,v 1.68 2005/12/06 22:38:27 reyk Exp $	*/
@


1.5
log
@fastmerge, bump version
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.bin/ssh/readconf.h,v 1.4 2005/06/22 16:11:39 tg Exp $ */
d70 2
a71 2
	char   *ciphers;	/* SSH2 ciphers in order of preference. */
	char   *macs;		/* SSH2 macs in order of preference. */
@


1.4
log
@merge
@
text
@d1 2
a2 2
/**	$MirOS: src/usr.bin/ssh/readconf.h,v 1.3 2005/04/14 19:49:34 tg Exp $ */
/*	$OpenBSD: readconf.h,v 1.67 2005/06/08 11:25:09 djm Exp $	*/
d117 8
@


1.3
log
@merge
@
text
@d1 2
a2 2
/**	$MirOS: src/usr.bin/ssh/readconf.h,v 1.2 2005/03/13 18:33:30 tg Exp $ */
/*	$OpenBSD: readconf.h,v 1.66 2005/03/01 10:40:27 djm Exp $	*/
d119 5
@


1.2
log
@merge src/usr.bin
@
text
@d1 2
a2 2
/**	$MirOS$ */
/*	$OpenBSD: readconf.h,v 1.64 2004/07/11 17:48:47 deraadt Exp $	*/
d25 4
a28 3
	u_short	  port;		/* Port to forward. */
	char	 *host;		/* Host to connect. */
	u_short	  host_port;	/* Port to connect on host. */
d115 2
d123 1
d128 2
a129 2
void	 add_local_forward(Options *, u_short, const char *, u_short);
void	 add_remote_forward(Options *, u_short, const char *, u_short);
@


1.1
log
@Initial revision
@
text
@d1 1
a46 2
	int     gss_authentication;	/* Try GSS authentication */
	int     gss_deleg_creds;	/* Delegate GSS credentials */
d74 1
a74 1
	char   *host_key_alias;	/* hostname alias for .ssh/known_hosts */
d80 1
a80 1
	char   *user_hostfile;	/* Path for $HOME/.ssh/known_hosts. */
d104 1
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@OpenSSH-current
@
text
@d1 1
a1 1
/*	$OpenBSD: readconf.h,v 1.66 2005/03/01 10:40:27 djm Exp $	*/
d24 3
a26 4
	char	 *listen_host;		/* Host (address) to listen on. */
	u_short	  listen_port;		/* Port to forward. */
	char	 *connect_host;		/* Host to connect. */
	u_short	  connect_port;		/* Port to connect on connect_host. */
a113 2

	int	hash_known_hosts;
a119 1
int	 parse_forward(Forward *, const char *);
d124 2
a125 2
void	 add_local_forward(Options *, const Forward *);
void	 add_remote_forward(Options *, const Forward *);
@


1.1.1.3
log
@most current OpenSSH.com
@
text
@d1 1
a1 1
/*	$OpenBSD: readconf.h,v 1.67 2005/06/08 11:25:09 djm Exp $	*/
a118 5
#define SSHCTL_MASTER_NO	0
#define SSHCTL_MASTER_YES	1
#define SSHCTL_MASTER_AUTO	2
#define SSHCTL_MASTER_ASK	3
#define SSHCTL_MASTER_AUTO_ASK	4
@


1.1.1.4
log
@OpenSSH is the last missing piece to update before the release
@
text
@d1 1
a1 1
/*	$OpenBSD: readconf.h,v 1.68 2005/12/06 22:38:27 reyk Exp $	*/
a116 8

	int	tun_open;	/* tun(4) */
	int     tun_local;	/* force tun device (optional) */
	int     tun_remote;	/* force tun device (optional) */

	char	*local_command;
	int	permit_local_command;

@


1.1.1.5
log
@I decided we'd better upgrade OpenSSH before releasing to the general public
@
text
@d1 1
a1 1
/* $OpenBSD: readconf.h,v 1.69 2006/03/25 22:22:43 djm Exp $ */
@


1.1.1.6
log
@import a few security-wise relevant changes right now
@
text
@d1 1
a1 1
/* $OpenBSD: readconf.h,v 1.71 2006/08/03 03:34:42 deraadt Exp $ */
d19 2
a36 1
	int     exit_on_forward_failure;	/* Exit if bind(2) fails for -L/-R */
@


1.1.1.7
log
@newer openssh
@
text
@d1 1
a1 1
/* $OpenBSD: readconf.h,v 1.72 2008/01/19 23:09:49 djm Exp $ */
d103 1
a103 1
	int64_t rekey_limit;
@


1.1.1.8
log
@OpenSSH-current
@
text
@d1 1
a1 1
/* $OpenBSD: readconf.h,v 1.76 2008/11/04 08:22:13 djm Exp $ */
a51 1
	int     zero_knowledge_password_authentication;	/* Try jpake */
a122 1
	int	visual_host_key;
d135 1
a135 1
int	 parse_forward(Forward *, const char *, int);
@


1.1.1.9
log
@OpenSSH 5.2, or so
@
text
@d1 1
a1 1
/* $OpenBSD: readconf.h,v 1.78 2009/02/12 03:00:56 djm Exp $ */
d23 1
a23 1
	int	  listen_port;		/* Port to forward. */
d25 1
a25 1
	int	  connect_port;		/* Port to connect on connect_host. */
d137 1
a137 1
int	 parse_forward(Forward *, const char *, int, int);
@


1.1.1.10
log
@Let’s play the version number game – OpenSSH 5.3-current
@
text
@d1 1
a1 1
/* $OpenBSD: readconf.h,v 1.79 2009/06/27 09:35:06 andreas Exp $ */
a125 2
	int	use_roaming;

@


