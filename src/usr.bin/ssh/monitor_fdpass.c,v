head	1.4;
access;
symbols
	cvs-200910041320:1.1.1.7
	cvs-200903221200:1.1.1.7
	cvs-200812162015:1.1.1.7
	cvs-200804031830:1.1.1.6
	MIRBSD_10:1.1.1.5.0.2
	MIRBSD_10_BASE:1.1.1.5
	cvs-200803022030:1.1.1.5
	cvs-200709131337:1.1.1.4
	cvs-200709021830:1.1.1.3
	cvs-200708201200:1.1.1.3
	cvs-200706161500:1.1.1.3
	cvs-200705192215:1.1.1.3
	cvs-200704292000:1.1.1.3
	cvs-200703080900:1.1.1.3
	cvs-200701251600:1.1.1.3
	cvs-200612111600:1.1.1.3
	cvs-200611090230:1.1.1.3
	OPENBSD_4_0:1.1.1.3
	MIRBSD_9_BASE:1.1.1.2
	cvs-200606162342:1.1.1.2
	cvs-200606022000:1.1.1.2
	cvs-200604191000:1.1.1.2
	cvs-200602220045:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200512201942:1.1.1.1
	cvs-200511231930:1.1.1.1
	cvs-200507211800:1.1.1.1
	cvs-200506221550:1.1.1.1
	cvs-200505050030:1.1.1.1
	cvs-200504291700:1.1.1.1
	cvs-200504261445:1.1.1.1
	cvs-200504141900:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2009.10.04.16.35.25;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004AC8CEBF3796541F;

1.3
date	2008.12.16.20.55.24;	author tg;	state Exp;
branches;
next	1.2;
commitid	100494815C97ECEEDBF;

1.2
date	2008.07.13.16.03.56;	author tg;	state Exp;
branches;
next	1.1;
commitid	100487A27834BF9AB0B;

1.1
date	2005.02.05.17.29.52;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.52;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.04.19.10.15.03;	author tg;	state Exp;
branches;
next	1.1.1.3;
commitid	10044460DB21E1F715C;

1.1.1.3
date	2006.09.20.19.06.49;	author tg;	state Exp;
branches;
next	1.1.1.4;
commitid	10045119150397FC669;

1.1.1.4
date	2007.09.13.13.38.58;	author tg;	state Exp;
branches;
next	1.1.1.5;
commitid	10046E93D7724AAC1F8;

1.1.1.5
date	2008.03.02.20.40.41;	author tg;	state Exp;
branches
	1.1.1.5.2.1;
next	1.1.1.6;
commitid	10047CB10DD30FAF062;

1.1.1.6
date	2008.04.03.18.34.32;	author tg;	state Exp;
branches;
next	1.1.1.7;
commitid	10047F5234C593EA799;

1.1.1.7
date	2008.12.16.20.15.33;	author tg;	state Exp;
branches;
next	;
commitid	10049480C7A2701F5C0;

1.1.1.5.2.1
date	2008.04.05.20.12.19;	author tg;	state Exp;
branches;
next	;
commitid	10047F7DD234C13F66E;


desc
@@


1.4
log
@More often than not, I wonder why OpenSSH works *at all*… this time,
fix -Wcast-align issues (except umac.c which is very horrid code anyway)
@
text
@/* $OpenBSD: monitor_fdpass.c,v 1.18 2008/11/30 11:59:26 dtucker Exp $ */
/*
 * Copyright 2001 Niels Provos <provos@@citi.umich.edu>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/socket.h>
#include <sys/uio.h>

#include <errno.h>
#include <string.h>
#include <stdarg.h>

#include "log.h"
#include "monitor_fdpass.h"

__RCSID("$MirOS: src/usr.bin/ssh/monitor_fdpass.c,v 1.3 2008/12/16 20:55:24 tg Exp $");

int
mm_send_fd(int sock, int fd)
{
	struct msghdr msg;
	union {
		struct cmsghdr hdr;
		char buf[CMSG_SPACE(sizeof(int))];
	} cmsgbuf;
	struct cmsghdr *cmsg;
	struct iovec vec;
	char ch = '\0';
	ssize_t n;

	memset(&msg, 0, sizeof(msg));
	msg.msg_control = (caddr_t)&cmsgbuf.buf;
	msg.msg_controllen = CMSG_LEN(sizeof(int));
	cmsg = CMSG_FIRSTHDR(&msg);
	cmsg->cmsg_len = CMSG_LEN(sizeof(int));
	cmsg->cmsg_level = SOL_SOCKET;
	cmsg->cmsg_type = SCM_RIGHTS;
	memcpy(CMSG_DATA(cmsg), &fd, sizeof(fd));

	vec.iov_base = &ch;
	vec.iov_len = 1;
	msg.msg_iov = &vec;
	msg.msg_iovlen = 1;

	while ((n = sendmsg(sock, &msg, 0)) == -1 && (errno == EAGAIN ||
	    errno == EINTR))
		debug3("%s: sendmsg(%d): %s", __func__, fd, strerror(errno));
	if (n == -1) {
		error("%s: sendmsg(%d): %s", __func__, fd,
		    strerror(errno));
		return -1;
	}

	if (n != 1) {
		error("%s: sendmsg: expected sent 1 got %ld",
		    __func__, (long)n);
		return -1;
	}
	return 0;
}

int
mm_receive_fd(int sock)
{
	struct msghdr msg;
	union {
		struct cmsghdr hdr;
		char buf[CMSG_SPACE(sizeof(int))];
	} cmsgbuf;
	struct cmsghdr *cmsg;
	struct iovec vec;
	ssize_t n;
	char ch;
	int fd;

	memset(&msg, 0, sizeof(msg));
	vec.iov_base = &ch;
	vec.iov_len = 1;
	msg.msg_iov = &vec;
	msg.msg_iovlen = 1;
	msg.msg_control = &cmsgbuf.buf;
	msg.msg_controllen = CMSG_LEN(sizeof(int));

	while ((n = recvmsg(sock, &msg, 0)) == -1 && (errno == EAGAIN ||
	    errno == EINTR))
		debug3("%s: recvmsg: %s", __func__, strerror(errno));
	if (n == -1) {
		error("%s: recvmsg: %s", __func__, strerror(errno));
		return -1;
	}

	if (n != 1) {
		error("%s: recvmsg: expected received 1 got %ld",
		    __func__, (long)n);
		return -1;
	}

	cmsg = CMSG_FIRSTHDR(&msg);
	if (cmsg == NULL) {
		error("%s: no message header", __func__);
		return -1;
	}

	if (cmsg->cmsg_type != SCM_RIGHTS) {
		error("%s: expected type %d got %d", __func__,
		    SCM_RIGHTS, cmsg->cmsg_type);
		return -1;
	}
	memcpy(&fd, CMSG_DATA(cmsg), sizeof(fd));
	return fd;
}
@


1.3
log
@fastmerge, do not use yet!
@
text
@d38 1
a38 1
__RCSID("$MirOS: src/usr.bin/ssh/monitor_fdpass.c,v 1.2 2008/07/13 16:03:56 tg Exp $");
d60 1
a60 1
	*(int *)CMSG_DATA(cmsg) = fd;
d131 1
a131 1
	fd = (*(int *)CMSG_DATA(cmsg));
@


1.2
log
@Damien Miller kindly provided me with a link to a patch to be used
with OpenBSD-OpenSSH-current on OpenBSD 4.3, which, indeed, solves
my problems logging into the sparc. Thanks a lot!
@
text
@d1 1
a1 1
/* $OpenBSD: monitor_fdpass.c,v 1.17 2008/03/24 16:11:07 deraadt Exp $ */
d38 1
a38 1
__RCSID("$MirOS$");
d67 4
a70 1
	if ((n = sendmsg(sock, &msg, 0)) == -1) {
d106 4
a109 1
	if ((n = recvmsg(sock, &msg, 0)) == -1) {
@


1.1
log
@Initial revision
@
text
@d1 1
d27 3
a29 2
#include "includes.h"
RCSID("$OpenBSD: monitor_fdpass.c,v 1.6 2004/08/13 02:51:48 djm Exp $");
d31 3
a33 1
#include <sys/uio.h>
d38 3
a40 1
void
d44 4
a47 1
	char tmp[CMSG_SPACE(sizeof(int))];
d54 1
a54 1
	msg.msg_control = (caddr_t)tmp;
d67 2
a68 2
	if ((n = sendmsg(sock, &msg, 0)) == -1)
		fatal("%s: sendmsg(%d): %s", __func__, fd,
d70 5
a74 2
	if (n != 1)
		fatal("%s: sendmsg: expected sent 1 got %ld",
d76 3
d85 4
a88 1
	char tmp[CMSG_SPACE(sizeof(int))];
d100 2
a101 2
	msg.msg_control = tmp;
	msg.msg_controllen = sizeof(tmp);
d103 7
a109 4
	if ((n = recvmsg(sock, &msg, 0)) == -1)
		fatal("%s: recvmsg: %s", __func__, strerror(errno));
	if (n != 1)
		fatal("%s: recvmsg: expected received 1 got %ld",
d111 2
d115 7
a121 4
	if (cmsg == NULL)
		fatal("%s: no message header", __func__);
	if (cmsg->cmsg_type != SCM_RIGHTS)
		fatal("%s: expected type %d got %d", __func__,
d123 2
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@I decided we'd better upgrade OpenSSH before releasing to the general public
@
text
@a0 1
/* $OpenBSD: monitor_fdpass.c,v 1.8 2006/03/25 13:17:02 djm Exp $ */
d27 1
@


1.1.1.3
log
@import a few security-wise relevant changes right now
@
text
@d1 1
a1 1
/* $OpenBSD: monitor_fdpass.c,v 1.12 2006/08/03 03:34:42 deraadt Exp $ */
d27 2
a28 2
#include <sys/types.h>
#include <sys/socket.h>
a30 4
#include <errno.h>
#include <string.h>
#include <stdarg.h>

@


1.1.1.4
log
@Import latest OpenSSH upgrades
@
text
@d1 1
a1 1
/* $OpenBSD: monitor_fdpass.c,v 1.13 2007/09/04 03:21:03 djm Exp $ */
d38 1
a38 1
int
d62 2
a63 2
	if ((n = sendmsg(sock, &msg, 0)) == -1) {
		error("%s: sendmsg(%d): %s", __func__, fd,
d65 2
a66 5
		return -1;
	}

	if (n != 1) {
		error("%s: sendmsg: expected sent 1 got %ld",
a67 3
		return -1;
	}
	return 0;
d89 4
a92 7
	if ((n = recvmsg(sock, &msg, 0)) == -1) {
		error("%s: recvmsg: %s", __func__, strerror(errno));
		return -1;
	}

	if (n != 1) {
		error("%s: recvmsg: expected received 1 got %ld",
a93 2
		return -1;
	}
d96 4
a99 7
	if (cmsg == NULL) {
		error("%s: no message header", __func__);
		return -1;
	}

	if (cmsg->cmsg_type != SCM_RIGHTS) {
		error("%s: expected type %d got %d", __func__,
a100 2
		return -1;
	}
@


1.1.1.5
log
@newer openssh
@
text
@d1 1
a1 1
/* $OpenBSD: monitor_fdpass.c,v 1.14 2008/03/02 18:19:35 deraadt Exp $ */
d42 1
a42 4
	union {
		struct cmsghdr hdr;
		char tmp[CMSG_SPACE(sizeof(int))];
	} tmp;
d49 1
a49 1
	msg.msg_control = (caddr_t)&tmp;
d80 1
a80 4
	union {
		char tmp[CMSG_SPACE(sizeof(int))];
		struct cmsghdr hdr;
	} tmp;
d92 1
a92 1
	msg.msg_control = &tmp;
@


1.1.1.5.2.1
log
@MFC all OpenSSL and OpenSSH fixes (≥ 3 CVEs), requested by bsiegert@@ who will update errata10.hts himself ☻
@
text
@d1 1
a1 1
/* $OpenBSD: monitor_fdpass.c,v 1.17 2008/03/24 16:11:07 deraadt Exp $ */
d44 2
a45 2
		char buf[CMSG_SPACE(sizeof(int))];
	} cmsgbuf;
d52 2
a53 2
	msg.msg_control = (caddr_t)&cmsgbuf.buf;
	msg.msg_controllen = sizeof(cmsgbuf.buf);
d84 1
d86 1
a86 2
		char buf[CMSG_SPACE(sizeof(int))];
	} cmsgbuf;
d98 2
a99 2
	msg.msg_control = &cmsgbuf.buf;
	msg.msg_controllen = sizeof(cmsgbuf.buf);
@


1.1.1.6
log
@OpenSSH 5.0
@
text
@d1 1
a1 1
/* $OpenBSD: monitor_fdpass.c,v 1.17 2008/03/24 16:11:07 deraadt Exp $ */
d44 2
a45 2
		char buf[CMSG_SPACE(sizeof(int))];
	} cmsgbuf;
d52 2
a53 2
	msg.msg_control = (caddr_t)&cmsgbuf.buf;
	msg.msg_controllen = sizeof(cmsgbuf.buf);
d84 1
d86 1
a86 2
		char buf[CMSG_SPACE(sizeof(int))];
	} cmsgbuf;
d98 2
a99 2
	msg.msg_control = &cmsgbuf.buf;
	msg.msg_controllen = sizeof(cmsgbuf.buf);
@


1.1.1.7
log
@OpenSSH-current
@
text
@d1 1
a1 1
/* $OpenBSD: monitor_fdpass.c,v 1.18 2008/11/30 11:59:26 dtucker Exp $ */
d65 1
a65 4
	while ((n = sendmsg(sock, &msg, 0)) == -1 && (errno == EAGAIN ||
	    errno == EINTR))
		debug3("%s: sendmsg(%d): %s", __func__, fd, strerror(errno));
	if (n == -1) {
d101 1
a101 4
	while ((n = recvmsg(sock, &msg, 0)) == -1 && (errno == EAGAIN ||
	    errno == EINTR))
		debug3("%s: recvmsg: %s", __func__, strerror(errno));
	if (n == -1) {
@


