head	1.7;
access;
symbols
	cvs-200910041320:1.1.1.5
	cvs-200903221200:1.1.1.5
	cvs-200812162015:1.1.1.5
	cvs-200804031830:1.1.1.4
	MIRBSD_10:1.5.0.2
	MIRBSD_10_BASE:1.5
	cvs-200803022030:1.1.1.4
	cvs-200709131337:1.1.1.4
	cvs-200709021830:1.1.1.4
	cvs-200708201200:1.1.1.4
	cvs-200706161500:1.1.1.4
	cvs-200705192215:1.1.1.4
	cvs-200704292000:1.1.1.4
	cvs-200703080900:1.1.1.4
	cvs-200701251600:1.1.1.4
	cvs-200612111600:1.1.1.4
	cvs-200611090230:1.1.1.4
	OPENBSD_4_0:1.1.1.4
	MIRBSD_9_BASE:1.4
	cvs-200606162342:1.1.1.3
	cvs-200606022000:1.1.1.3
	cvs-200604191000:1.1.1.2
	cvs-200602220045:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200512201942:1.1.1.1
	cvs-200511231930:1.1.1.1
	cvs-200507211800:1.1.1.1
	cvs-200506221550:1.1.1.1
	cvs-200505050030:1.1.1.1
	cvs-200504291700:1.1.1.1
	cvs-200504261445:1.1.1.1
	cvs-200504141900:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2013.10.31.20.07.11;	author tg;	state Exp;
branches;
next	1.6;
commitid	1005272B7081B0E5655;

1.6
date	2008.12.16.20.55.21;	author tg;	state Exp;
branches;
next	1.5;
commitid	100494815C97ECEEDBF;

1.5
date	2006.09.20.21.40.58;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004511B578580E7F04;

1.4
date	2006.06.02.20.50.47;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004480A4952B0D84EA;

1.3
date	2006.04.19.10.40.47;	author tg;	state Exp;
branches;
next	1.2;
commitid	100444613BD3A91C28B;

1.2
date	2006.02.22.02.16.45;	author tg;	state Exp;
branches;
next	1.1;
commitid	10043FBC991512A442B;

1.1
date	2005.02.05.17.29.52;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.52;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.04.19.10.15.03;	author tg;	state Exp;
branches;
next	1.1.1.3;
commitid	10044460DB21E1F715C;

1.1.1.3
date	2006.06.02.20.31.50;	author tg;	state Exp;
branches;
next	1.1.1.4;
commitid	1004480A0422110D712;

1.1.1.4
date	2006.09.20.19.06.48;	author tg;	state Exp;
branches;
next	1.1.1.5;
commitid	10045119150397FC669;

1.1.1.5
date	2008.12.16.20.15.33;	author tg;	state Exp;
branches;
next	;
commitid	10049480C7A2701F5C0;


desc
@@


1.7
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@/* $OpenBSD: dispatch.c,v 1.22 2008/10/31 15:05:34 stevesk Exp $ */
/*
 * Copyright © 2013
 *	Thorsten “mirabilos” Glaser <tg@@mirbsd.org>
 * Copyright (c) 2000 Markus Friedl.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>

#include <signal.h>
#include <stdarg.h>

#include "ssh1.h"
#include "ssh2.h"
#include "log.h"
#include "dispatch.h"
#include "packet.h"
#include "compat.h"

__RCSID("$MirOS: src/usr.bin/ssh/dispatch.c,v 1.6 2008/12/16 20:55:21 tg Exp $");

#define DISPATCH_MAX	255

dispatch_fn *dispatch[DISPATCH_MAX];

void
dispatch_protocol_error(int type, u_int32_t seq,
    void *ctxt __attribute__((__unused__)))
{
	logit("dispatch_protocol_error: type %d seq %u", type, seq);
	if (!compat20)
		fatal("protocol error");
	packet_start(SSH2_MSG_UNIMPLEMENTED);
	packet_put_int(seq);
	packet_send();
	packet_write_wait();
}
void
dispatch_protocol_ignore(int type, u_int32_t seq,
    void *ctxt __attribute__((__unused__)))
{
	logit("dispatch_protocol_ignore: type %d seq %u", type, seq);
}
void
dispatch_init(dispatch_fn *dflt)
{
	u_int i;
	for (i = 0; i < DISPATCH_MAX; i++)
		dispatch[i] = dflt;
}
void
dispatch_range(u_int from, u_int to, dispatch_fn *fn)
{
	u_int i;

	for (i = from; i <= to; i++) {
		if (i >= DISPATCH_MAX)
			break;
		dispatch[i] = fn;
	}
}
void
dispatch_set(int type, dispatch_fn *fn)
{
	dispatch[type] = fn;
}
void
dispatch_run(int mode, volatile sig_atomic_t *done, void *ctxt)
{
	for (;;) {
		int type;
		u_int32_t seqnr;

		if (mode == DISPATCH_BLOCK) {
			type = packet_read_seqnr(&seqnr);
		} else {
			type = packet_read_poll_seqnr(&seqnr);
			if (type == SSH_MSG_NONE)
				return;
		}
		if (type > 0 && type < DISPATCH_MAX && dispatch[type] != NULL)
			(*dispatch[type])(type, seqnr, ctxt);
		else
			packet_disconnect("protocol error: rcvd type %d", type);
		if (done != NULL && *done)
			return;
	}
}
@


1.6
log
@fastmerge, do not use yet!
@
text
@d3 2
d40 1
a40 1
__RCSID("$MirOS$");
d48 1
a48 1
    void *ctxt __attribute__((unused)))
d60 1
a60 1
    void *ctxt __attribute__((unused)))
@


1.5
log
@finish merging
@
text
@d1 1
a1 1
/* $OpenBSD: dispatch.c,v 1.21 2006/08/03 03:34:42 deraadt Exp $ */
a39 1
#define DISPATCH_MIN	0
@


1.4
log
@* merge
* remove all references to GSSAPI, Kerberos and AFS
* uint*_t -> u_int*_t for consistency, like openbsd
  (note: MirOS style(9) suggests uint32_t etc. instead!)
* bump vsn
@
text
@d1 1
a1 1
/* $OpenBSD: dispatch.c,v 1.19 2006/04/20 09:27:09 djm Exp $ */
d26 4
a29 2
#include "includes.h"
__RCSID("$MirOS: src/usr.bin/ssh/dispatch.c,v 1.3 2006/04/19 10:40:47 tg Exp $");
d38 2
@


1.3
log
@merge and clean up
@
text
@d1 1
a1 1
/* $OpenBSD: dispatch.c,v 1.18 2006/03/25 13:17:01 djm Exp $ */
d27 1
a27 1
__RCSID("$MirOS: src/usr.bin/ssh/dispatch.c,v 1.2 2006/02/22 02:16:45 tg Exp $");
d83 1
a83 1
dispatch_run(int mode, int *done, void *ctxt)
@


1.2
log
@fix a lot of and kludge a few more __CRAZY problems, sync rcs id
@
text
@d1 1
d27 1
a27 1
RCSID("$MirOS: dispatch.c,v 1.16 2003/04/08 20:21:28 itojun Exp $");
@


1.1
log
@Initial revision
@
text
@d24 1
d26 1
a26 1
RCSID("$OpenBSD: dispatch.c,v 1.16 2003/04/08 20:21:28 itojun Exp $");
d41 2
a42 1
dispatch_protocol_error(int type, u_int32_t seq, void *ctxt)
d53 2
a54 1
dispatch_protocol_ignore(int type, u_int32_t seq, void *ctxt)
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@I decided we'd better upgrade OpenSSH before releasing to the general public
@
text
@a0 1
/* $OpenBSD: dispatch.c,v 1.18 2006/03/25 13:17:01 djm Exp $ */
d25 1
@


1.1.1.3
log
@if we're gonna push out another snapshot, we'd better have sshd-current
@
text
@d1 1
a1 1
/* $OpenBSD: dispatch.c,v 1.19 2006/04/20 09:27:09 djm Exp $ */
d79 1
a79 1
dispatch_run(int mode, volatile sig_atomic_t *done, void *ctxt)
@


1.1.1.4
log
@import a few security-wise relevant changes right now
@
text
@d1 1
a1 1
/* $OpenBSD: dispatch.c,v 1.21 2006/08/03 03:34:42 deraadt Exp $ */
d25 1
a25 5

#include <sys/types.h>

#include <signal.h>
#include <stdarg.h>
@


1.1.1.5
log
@OpenSSH-current
@
text
@d1 1
a1 1
/* $OpenBSD: dispatch.c,v 1.22 2008/10/31 15:05:34 stevesk Exp $ */
d38 1
@


