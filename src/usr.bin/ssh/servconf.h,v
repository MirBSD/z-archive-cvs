head	1.15;
access;
symbols
	cvs-200910041320:1.1.1.8
	cvs-200903221200:1.1.1.8
	cvs-200812162015:1.1.1.7
	cvs-200804031830:1.1.1.6
	MIRBSD_10:1.10.0.2
	MIRBSD_10_BASE:1.10
	cvs-200803022030:1.1.1.6
	cvs-200709131337:1.1.1.5
	cvs-200709021830:1.1.1.5
	cvs-200708201200:1.1.1.5
	cvs-200706161500:1.1.1.5
	cvs-200705192215:1.1.1.5
	cvs-200704292000:1.1.1.5
	cvs-200703080900:1.1.1.5
	cvs-200701251600:1.1.1.4
	cvs-200612111600:1.1.1.4
	cvs-200611090230:1.1.1.4
	OPENBSD_4_0:1.1.1.4
	MIRBSD_9_BASE:1.5
	cvs-200606162342:1.1.1.3
	cvs-200606022000:1.1.1.3
	cvs-200604191000:1.1.1.3
	cvs-200602220045:1.1.1.2
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3
	cvs-200512201942:1.1.1.2
	cvs-200511231930:1.1.1.1
	cvs-200507211800:1.1.1.1
	cvs-200506221550:1.1.1.1
	cvs-200505050030:1.1.1.1
	cvs-200504291700:1.1.1.1
	cvs-200504261445:1.1.1.1
	cvs-200504141900:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2018.05.03.01.32.46;	author tg;	state Exp;
branches;
next	1.14;
commitid	1005AEA669C604AC341;

1.14
date	2014.03.28.22.31.58;	author tg;	state Exp;
branches;
next	1.13;
commitid	1005335F87233372394;

1.13
date	2011.01.15.21.52.41;	author tg;	state Exp;
branches;
next	1.12;
commitid	1004D32173B08BB4E36;

1.12
date	2009.03.22.15.01.19;	author tg;	state Exp;
branches;
next	1.11;
commitid	10049C652CD5CCC321F;

1.11
date	2008.12.16.20.55.26;	author tg;	state Exp;
branches;
next	1.10;
commitid	100494815C97ECEEDBF;

1.10
date	2008.03.02.21.14.21;	author tg;	state Exp;
branches;
next	1.9;
commitid	10047CB18BB506A8527;

1.9
date	2007.03.08.10.09.33;	author tg;	state Exp;
branches;
next	1.8;
commitid	10045EFE0F11EDE1747;

1.8
date	2006.09.21.21.47.31;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004513087842C65EF9;

1.7
date	2006.09.20.21.41.02;	author tg;	state Exp;
branches;
next	1.6;
commitid	1004511B578580E7F04;

1.6
date	2006.07.23.14.19.27;	author tg;	state Exp;
branches;
next	1.5;
commitid	10044C3857E74BD315F;

1.5
date	2006.04.19.10.40.52;	author tg;	state Exp;
branches;
next	1.4;
commitid	100444613BD3A91C28B;

1.4
date	2006.02.22.02.16.48;	author tg;	state Exp;
branches;
next	1.3;
commitid	10043FBC991512A442B;

1.3
date	2005.12.20.19.57.34;	author tg;	state Exp;
branches;
next	1.2;
commitid	10043A8623F4C1F637E;

1.2
date	2005.03.13.18.33.30;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.29.52;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.52;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.12.20.19.43.44;	author tg;	state Exp;
branches;
next	1.1.1.3;
commitid	10043A85EF81EF097CF;

1.1.1.3
date	2006.04.19.10.15.04;	author tg;	state Exp;
branches;
next	1.1.1.4;
commitid	10044460DB21E1F715C;

1.1.1.4
date	2006.09.20.19.06.49;	author tg;	state Exp;
branches;
next	1.1.1.5;
commitid	10045119150397FC669;

1.1.1.5
date	2007.03.08.09.23.22;	author tg;	state Exp;
branches;
next	1.1.1.6;
commitid	10045EFD61903FC276A;

1.1.1.6
date	2008.03.02.20.40.42;	author tg;	state Exp;
branches;
next	1.1.1.7;
commitid	10047CB10DD30FAF062;

1.1.1.7
date	2008.12.16.20.15.33;	author tg;	state Exp;
branches;
next	1.1.1.8;
commitid	10049480C7A2701F5C0;

1.1.1.8
date	2009.03.22.12.03.00;	author tg;	state Exp;
branches;
next	;
commitid	10049C6290649163EA3;


desc
@@


1.15
log
@implement a new config directive MaskRemoteAddress

this is suitable for either hiding a̲l̲l̲ remote identities (if used globally)
or the identity of successful logins (for a Match block — e.g. for anoncvs)
@
text
@/* $MirOS: src/usr.bin/ssh/servconf.h,v 1.14 2014/03/28 22:31:58 tg Exp $ */
/* $OpenBSD: servconf.h,v 1.87 2009/01/22 10:02:34 djm Exp $ */

/*
 * Author: Tatu Ylonen <ylo@@cs.hut.fi>
 * Copyright (c) 1995 Tatu Ylonen <ylo@@cs.hut.fi>, Espoo, Finland
 *                    All rights reserved
 * Definitions for server configuration data and for the functions reading it.
 *
 * As far as I am concerned, the code I have written for this software
 * can be used freely for any purpose.  Any derived versions of this
 * software must be clearly marked as such, and if the derived work is
 * incompatible with the protocol description in the RFC file, it must be
 * called by a name other than "ssh" or "Secure Shell".
 */

#ifndef SERVCONF_H
#define SERVCONF_H

#define MAX_PORTS		256	/* Max # ports. */

#define MAX_ALLOW_USERS		256	/* Max # users on allow list. */
#define MAX_DENY_USERS		256	/* Max # users on deny list. */
#define MAX_ALLOW_GROUPS	256	/* Max # groups on allow list. */
#define MAX_DENY_GROUPS		256	/* Max # groups on deny list. */
#define MAX_SUBSYSTEMS		256	/* Max # subsystems. */
#define MAX_HOSTKEYS		256	/* Max # hostkeys. */
#define MAX_ACCEPT_ENV		256	/* Max # of env vars. */
#define MAX_MATCH_GROUPS	256	/* Max # of groups for Match. */

/* permit_root_login */
#define	PERMIT_NOT_SET		-1
#define	PERMIT_NO		0
#define	PERMIT_FORCED_ONLY	1
#define	PERMIT_NO_PASSWD	2
#define	PERMIT_YES		3

#define DEFAULT_AUTH_FAIL_MAX	6	/* Default for MaxAuthTries */
#define DEFAULT_SESSIONS_MAX	10	/* Default for MaxSessions */

/* Magic name for internal sftp-server */
#define INTERNAL_SFTP_NAME	"internal-sftp"

typedef struct {
	u_int	num_ports;
	u_int	ports_from_cmdline;
	int	ports[MAX_PORTS];	/* Port number to listen on. */
	char   *listen_addr;		/* Address on which the server listens. */
	struct addrinfo *listen_addrs;	/* Addresses on which the server listens. */
	int     address_family;		/* Address family used by the server. */
	char   *host_key_files[MAX_HOSTKEYS];	/* Files containing host keys. */
	int     num_host_key_files;     /* Number of files for host keys. */
	char   *pid_file;	/* Where to put our pid */
	int     server_key_bits;/* Size of the server key. */
	int     login_grace_time;	/* Disconnect if no auth in this time
					 * (sec). */
	int     key_regeneration_time;	/* Server key lifetime (seconds). */
	int     permit_root_login;	/* PERMIT_*, see above */
	int     ignore_rhosts;	/* Ignore .rhosts and .shosts. */
	int     ignore_user_known_hosts;	/* Ignore ~/.etc/ssh/known_hosts
						 * for RhostsRsaAuth */
	int     print_motd;	/* If true, print /etc/motd. */
	int	print_lastlog;	/* If true, print lastlog */
	int     x11_forwarding;	/* If true, permit inet (spoofing) X11 fwd. */
	int     x11_display_offset;	/* What DISPLAY number to start
					 * searching at */
	int     x11_use_localhost;	/* If true, use localhost for fake X11 server. */
	char   *xauth_location;	/* Location of xauth program */
	int     strict_modes;	/* If true, require string home dir modes. */
	int     tcp_keep_alive;	/* If true, set SO_KEEPALIVE. */
	const char   *ciphers;	/* Supported SSH2 ciphers. */
	const char   *macs;	/* Supported SSH2 macs. */
	int	protocol;	/* Supported protocol versions. */
	int     gateway_ports;	/* If true, allow remote connects to forwarded ports. */
	SyslogFacility log_facility;	/* Facility for system logging. */
	LogLevel log_level;	/* Level for system logging. */
	int     rhosts_rsa_authentication;	/* If true, permit rhosts RSA
						 * authentication. */
	int     hostbased_authentication;	/* If true, permit ssh2 hostbased auth */
	int     hostbased_uses_name_from_packet_only; /* experimental */
	int     rsa_authentication;	/* If true, permit RSA authentication. */
	int     pubkey_authentication;	/* If true, permit ssh2 pubkey authentication. */
	int     password_authentication;	/* If true, permit password
						 * authentication. */
	int     kbd_interactive_authentication;	/* If true, permit */
	int     challenge_response_authentication;
	int     permit_empty_passwd;	/* If false, do not permit empty
					 * passwords. */
	int     permit_user_env;	/* If true, read ~/.etc/ssh/environment */
	int     use_login;	/* If true, login(1) is used */
	int     compression;	/* If true, compression is allowed */
	int	allow_tcp_forwarding;
	int	allow_agent_forwarding;
	u_int num_allow_users;
	char   *allow_users[MAX_ALLOW_USERS];
	u_int num_deny_users;
	char   *deny_users[MAX_DENY_USERS];
	u_int num_allow_groups;
	char   *allow_groups[MAX_ALLOW_GROUPS];
	u_int num_deny_groups;
	char   *deny_groups[MAX_DENY_GROUPS];

	u_int num_subsystems;
	char   *subsystem_name[MAX_SUBSYSTEMS];
	char   *subsystem_command[MAX_SUBSYSTEMS];
	char   *subsystem_args[MAX_SUBSYSTEMS];

	u_int num_accept_env;
	char   *accept_env[MAX_ACCEPT_ENV];

	int	max_startups_begin;
	int	max_startups_rate;
	int	max_startups;
	int	max_authtries;
	int	max_sessions;
	char   *banner;			/* SSH-2 banner message */
	int	use_dns;
	int	client_alive_interval;	/*
					 * poke the client this often to
					 * see if it's still there
					 */
	int	client_alive_count_max;	/*
					 * If the client is unresponsive
					 * for this many intervals above,
					 * disconnect the session
					 */

	char   *authorised_keys_file1;	/* File containing public keys */
	char   *authorised_keys_file2;	/* Same; note not used for root */

	char   *adm_forced_command;

	int	permit_tun;

	int	num_permitted_opens;

	char   *chroot_directory;

	int	mask_remote;
}       ServerOptions;

void	 initialize_server_options(ServerOptions *);
void	 fill_default_server_options(ServerOptions *);
int	 process_server_config_line(ServerOptions *, char *, const char *, int,
	     int *, const char *, const char *, const char *);
void	 load_server_config(const char *, Buffer *);
void	 parse_server_config(ServerOptions *, const char *, Buffer *,
	     const char *, const char *, const char *);
void	 parse_server_match_config(ServerOptions *, const char *, const char *,
	     const char *);
void	 copy_set_server_options(ServerOptions *, ServerOptions *, int);
void	 dump_config(ServerOptions *);

void	 process_config_mask_remote(ServerOptions *);

#endif				/* SERVCONF_H */
@


1.14
log
@replicate commit “remove experimental, never-enabled JPAKE code; ok markus@@” (djm, 2014/01/29 06:18:35) from upstream
@
text
@d1 1
a1 1
/* $MirOS: src/usr.bin/ssh/servconf.h,v 1.13 2011/01/15 21:52:41 tg Exp $ */
d138 2
d154 2
@


1.13
log
@Introduce /etc/ssh/root:config and /etc/ssh/root:known_hosts
and /etc/ssh/root:authorised_keys for the superuser if his
HOME directory is unset, empty or, not normalised, "/" (root).
十̲CVS: ----------------------------------------------------------------------
@
text
@d1 1
a1 1
/* $MirOS: src/usr.bin/ssh/servconf.h,v 1.12 2009/03/22 15:01:19 tg Exp $ */
a86 2
	int     zero_knowledge_password_authentication;
					/* If true, permit jpake auth */
@


1.12
log
@merge and tweak ciphers and MACs
@
text
@d1 1
a1 1
/* $MirOS: src/usr.bin/ssh/servconf.h,v 1.11 2008/12/16 20:55:26 tg Exp $ */
d130 2
a131 2
	char   *authorised_keys_file;	/* File containing public keys */
	char   *authorised_keys_file2;
@


1.11
log
@fastmerge, do not use yet!
@
text
@d1 2
a2 2
/* $MirOS: src/usr.bin/ssh/servconf.h,v 1.10 2008/03/02 21:14:21 tg Exp $ */
/* $OpenBSD: servconf.h,v 1.86 2008/11/04 08:22:13 djm Exp $ */
d45 3
a47 3
	u_int num_ports;
	u_int ports_from_cmdline;
	u_short ports[MAX_PORTS];	/* Port number to listen on. */
@


1.10
log
@merge’n’fix
@
text
@d1 2
a2 2
/* $MirOS: src/usr.bin/ssh/servconf.h,v 1.9 2007/03/08 10:09:33 tg Exp $ */
/* $OpenBSD: servconf.h,v 1.82 2008/02/13 22:38:17 djm Exp $ */
d39 1
d87 2
d95 1
d117 1
d152 1
@


1.9
log
@merge OpenSSH 4.6, retain local changes
@
text
@d1 2
a2 2
/* $MirOS: src/usr.bin/ssh/servconf.h,v 1.8 2006/09/21 21:47:31 tg Exp $ */
/* $OpenBSD: servconf.h,v 1.80 2007/02/19 10:45:58 dtucker Exp $ */
d40 3
d133 2
@


1.8
log
@Apply openbsd-ssh-match-preauth.patch From: Darren Tucker <dtucker@@zip.com.au>
Message-ID: <20060921033637.GA8862@@gate.dtucker.net>
@
text
@d1 2
a2 2
/* $MirOS: src/usr.bin/ssh/servconf.h,v 1.7 2006/09/20 21:41:02 tg Exp $ */
/* $OpenBSD: servconf.h,v 1.79 2006/08/14 12:40:25 dtucker Exp $ */
@


1.7
log
@finish merging
@
text
@d1 1
a1 1
/* $MirOS: src/usr.bin/ssh/servconf.h,v 1.6 2006/07/23 14:19:27 tg Exp $ */
d141 1
a141 1
void	 copy_set_server_options(ServerOptions *, ServerOptions *);
@


1.6
log
@fix spelling and pubkey authentication
@
text
@d1 2
a2 2
/* $MirOS: src/usr.bin/ssh/servconf.h,v 1.5 2006/04/19 10:40:52 tg Exp $ */
/* $OpenBSD: servconf.h,v 1.73 2006/03/25 22:22:43 djm Exp $ */
a19 2
#include "buffer.h"

d29 1
d101 1
d125 2
d128 2
d134 2
a135 1
int	 process_server_config_line(ServerOptions *, char *, const char *, int);
d137 5
a141 1
void	 parse_server_config(ServerOptions *, const char *, Buffer *);
@


1.5
log
@merge and clean up
@
text
@d1 1
a1 1
/* $MirOS$ */
d122 2
a123 2
	char   *authorized_keys_file;	/* File containing public keys */
	char   *authorized_keys_file2;
@


1.4
log
@fix a lot of and kludge a few more __CRAZY problems, sync rcs id
@
text
@d1 2
a2 2
/**	$MirOS: src/usr.bin/ssh/servconf.h,v 1.3 2005/12/20 19:57:34 tg Exp $ */
/*	$OpenBSD: servconf.h,v 1.72 2005/12/06 22:38:27 reyk Exp $	*/
@


1.3
log
@fastmerge, bump version
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.bin/ssh/servconf.h,v 1.2 2005/03/13 18:33:30 tg Exp $ */
d68 2
a69 2
	char   *ciphers;	/* Supported SSH2 ciphers. */
	char   *macs;		/* Supported SSH2 macs. */
@


1.2
log
@merge src/usr.bin
@
text
@d1 2
a2 2
/**	$MirOS$ */
/*	$OpenBSD: servconf.h,v 1.71 2004/12/23 23:11:00 djm Exp $	*/
d124 2
@


1.1
log
@Initial revision
@
text
@d1 1
d57 1
a57 1
	int     ignore_user_known_hosts;	/* Ignore ~/.ssh/known_hosts
a79 13
	int     kerberos_authentication;	/* If true, permit Kerberos
						 * authentication. */
	int     kerberos_or_local_passwd;	/* If true, permit kerberos
						 * and any other password
						 * authentication mechanism,
						 * such as SecurID or
						 * /etc/passwd */
	int     kerberos_ticket_cleanup;	/* If true, destroy ticket
						 * file on logout. */
	int     kerberos_get_afs_token;		/* If true, try to get AFS token if
						 * authenticated with Kerberos. */
	int     gss_authentication;	/* If true, permit GSSAPI authentication */
	int     gss_cleanup_creds;	/* If true, destroy cred cache on logout */
d86 1
a86 1
	int     permit_user_env;	/* If true, read ~/.ssh/environment */
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@OpenSSH is the last missing piece to update before the release
@
text
@d1 1
a1 1
/*	$OpenBSD: servconf.h,v 1.72 2005/12/06 22:38:27 reyk Exp $	*/
a135 2

	int	permit_tun;
@


1.1.1.3
log
@I decided we'd better upgrade OpenSSH before releasing to the general public
@
text
@d1 1
a1 1
/* $OpenBSD: servconf.h,v 1.73 2006/03/25 22:22:43 djm Exp $ */
@


1.1.1.4
log
@import a few security-wise relevant changes right now
@
text
@d1 1
a1 1
/* $OpenBSD: servconf.h,v 1.79 2006/08/14 12:40:25 dtucker Exp $ */
d19 2
a29 1
#define MAX_MATCH_GROUPS	256	/* Max # of groups for Match. */
a113 1
	char   *subsystem_args[MAX_SUBSYSTEMS];
a136 2
	char   *adm_forced_command;

a137 2

	int	num_permitted_opens;
d142 1
a142 2
int	 process_server_config_line(ServerOptions *, char *, const char *, int,
	     int *, const char *, const char *, const char *);
d144 1
a144 5
void	 parse_server_config(ServerOptions *, const char *, Buffer *,
	     const char *, const char *, const char *);
void	 parse_server_match_config(ServerOptions *, const char *, const char *,
	     const char *);
void	 copy_set_server_options(ServerOptions *, ServerOptions *);
@


1.1.1.5
log
@Import OpenSSH 4.6
@
text
@d1 1
a1 1
/* $OpenBSD: servconf.h,v 1.80 2007/02/19 10:45:58 dtucker Exp $ */
d153 1
a153 1
void	 copy_set_server_options(ServerOptions *, ServerOptions *, int);
@


1.1.1.6
log
@newer openssh
@
text
@d1 1
a1 1
/* $OpenBSD: servconf.h,v 1.82 2008/02/13 22:38:17 djm Exp $ */
a38 3
/* Magic name for internal sftp-server */
#define INTERNAL_SFTP_NAME	"internal-sftp"

a141 2

	char   *chroot_directory;
@


1.1.1.7
log
@OpenSSH-current
@
text
@d1 1
a1 1
/* $OpenBSD: servconf.h,v 1.86 2008/11/04 08:22:13 djm Exp $ */
a37 1
#define DEFAULT_SESSIONS_MAX	10	/* Default for MaxSessions */
a97 2
	int     zero_knowledge_password_authentication;
					/* If true, permit jpake auth */
a103 1
	int	allow_agent_forwarding;
a124 1
	int	max_sessions;
a158 1
void	 dump_config(ServerOptions *);
@


1.1.1.8
log
@OpenSSH 5.2, or so
@
text
@d1 1
a1 1
/* $OpenBSD: servconf.h,v 1.87 2009/01/22 10:02:34 djm Exp $ */
d44 3
a46 3
	u_int	num_ports;
	u_int	ports_from_cmdline;
	int	ports[MAX_PORTS];	/* Port number to listen on. */
@


