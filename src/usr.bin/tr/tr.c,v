head	1.9;
access;
symbols
	MIRBSD_10:1.3.0.2
	MIRBSD_10_BASE:1.3
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200507211800:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2016.01.15.20.01.22;	author tg;	state Exp;
branches;
next	1.8;
commitid	10056995026565D4525;

1.8
date	2016.01.02.21.33.19;	author tg;	state Exp;
branches;
next	1.7;
commitid	10056884200442406AA;

1.7
date	2014.02.20.01.16.27;	author tg;	state Exp;
branches;
next	1.6;
commitid	100530557843F55FFDA;

1.6
date	2009.09.25.23.09.13;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004ABD4DA96677F4D7;

1.5
date	2009.09.25.23.02.08;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004ABD4BFD0CC912F6;

1.4
date	2008.11.22.13.51.11;	author tg;	state Exp;
branches;
next	1.3;
commitid	10049280E475B552D73;

1.3
date	2007.07.16.15.12.03;	author tg;	state Exp;
branches;
next	1.2;
commitid	100469B8ACE4686D6CE;

1.2
date	2007.07.15.19.10.32;	author tg;	state Exp;
branches;
next	1.1;
commitid	100469A711A213FBB87;

1.1
date	2005.02.05.17.30.04;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.30.04;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.21.00.57;	author tg;	state Exp;
branches;
next	;
commitid	560042e0092f571e;


desc
@@


1.9
log
@fix FTBFS: LC_ALL undeclared
@
text
@/*	$OpenBSD: tr.c,v 1.13 2004/09/15 22:12:19 deraadt Exp $	*/
/*	$NetBSD: tr.c,v 1.5 1995/08/31 22:13:48 jtc Exp $	*/

/*
 * Copyright (c) 2007, 2008, 2009, 2014, 2016
 *	mirabilos <m@@mirbsd.org>
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>

#include <unistd.h>
#include <err.h>
#include <errno.h>
#include <locale.h>
#include <stdbool.h>
#include <mbfun.h>
#include <wctype.h>

#include "extern.h"

__COPYRIGHT("@@(#) Copyright (c) 1988, 1993\n\
	The Regents of the University of California.  All rights reserved.\n");
__SCCSID("@@(#)tr.c	8.2 (Berkeley) 5/4/95");
__RCSID("$MirOS: src/usr.bin/tr/tr.c,v 1.8 2016/01/02 21:33:19 tg Exp $");

static wchar_t string1[NCHARS], string2[NCHARS];

STR s1 = {
	.which = STRING1,
	.state = NORMAL,
	.cnt = 0,
	.lastch = OOBCH,
	.equiv = { 0, OOBCH },
	.set = NULL,
	.use_wctrans = false,
	.str = NULL
};
STR s2 = {
	.which = STRING2,
	.state = NORMAL,
	.cnt = 0,
	.lastch = OOBCH,
	.equiv = { 0, OOBCH },
	.set = NULL,
	.use_wctrans = false,
	.str = NULL
};

static void setup(wchar_t *, char *, STR *, bool);
static void usage(void) __dead;

#define getwcf() __extension__({				\
	wint_t getwcf_c;					\
								\
	if ((getwcf_c = getwchar()) == WEOF && ferror(stdin) &&	\
	    errno == EILSEQ) {					\
		clearerr(stdin);				\
		getwcf_c = 0xFFFD;				\
	}							\
	(getwcf_c);						\
})

int
main(int argc, char *argv[])
{
	wint_t ch;
	wchar_t cnt, lastch, *p;
	int ich;
	bool cflag, dflag, sflag, isstring2;

	setlocale(LC_ALL, "");

	for (lastch = 0; lastch < NCHARS; ++lastch)
		string1[lastch] = lastch;

	cflag = dflag = sflag = false;
	while ((ich = getopt(argc, argv, "cds")) != -1)
		switch (ich) {
		case 'c':
			cflag = true;
			break;
		case 'd':
			dflag = true;
			break;
		case 's':
			sflag = true;
			break;
		case '?':
		default:
			usage();
		}
	argc -= optind;
	argv += optind;

	switch(argc) {
	case 0:
	default:
		usage();
		/* NOTREACHED */
	case 1:
		isstring2 = false;
		break;
	case 2:
		isstring2 = true;
		break;
	}

	/*
	 * tr -ds [-c] string1 string2
	 * Delete all characters (or complemented characters) in string1.
	 * Squeeze all characters in string2.
	 */
	if (dflag && sflag) {
		if (!isstring2)
			usage();

		setup(string1, argv[0], &s1, cflag);
		setup(string2, argv[1], &s2, false);

		for (lastch = OOBCH; (ch = getwcf()) != WEOF; )
			if (!string1[ch] && (!string2[ch] || lastch != ch)) {
				lastch = ch;
				putwchar(ch);
			}
		exit(0);
	}

	/*
	 * tr -d [-c] string1
	 * Delete all characters (or complemented characters) in string1.
	 */
	if (dflag) {
		if (isstring2)
			usage();

		setup(string1, argv[0], &s1, cflag);

		while ((ch = getwcf()) != WEOF)
			if (!string1[ch])
				putwchar(ch);
		exit(0);
	}

	/*
	 * tr -s [-c] string1
	 * Squeeze all characters (or complemented characters) in string1.
	 */
	if (sflag && !isstring2) {
		setup(string1, argv[0], &s1, cflag);

		for (lastch = OOBCH; (ch = getwcf()) != WEOF; )
			if (!string1[ch] || lastch != ch) {
				lastch = ch;
				putwchar(ch);
			}
		exit(0);
	}

	/*
	 * tr [-cs] string1 string2
	 * Replace all characters (or complemented characters) in string1 with
	 * the character in the same position in string2.  If the -s option is
	 * specified, squeeze all the characters in string2.
	 */
	if (!isstring2)
		usage();

	s1.str = ambstowcs(argv[0]);
	s2.str = ambstowcs(argv[1]);
	if ((strstr(argv[0], "[:lower:]") && strstr(argv[1], "[:upper:]")) ||
	    (strstr(argv[1], "[:lower:]") && strstr(argv[0], "[:upper:]"))) {
		s1.use_wctrans = true;
		s2.use_wctrans = true;
	}

	if (cflag)
		for (cnt = NCHARS, p = string1; cnt--;)
			*p++ = OOBCH;

	if (!next(&s2))
		errx(1, "empty string2");

	/* If string2 runs out of characters, use the last one specified. */
	ch = s2.lastch;
	if (sflag)
		while (next(&s1)) {
			string1[s1.lastch] = ch = s2.lastch;
			string2[ch] = 1;
			(void)next(&s2);
		}
	else
		while (next(&s1)) {
			string1[s1.lastch] = ch = s2.lastch;
			(void)next(&s2);
		}

	if (cflag)
		for (cnt = 0, p = string1; cnt < NCHARS; ++p, ++cnt)
			*p = *p == OOBCH ? ch : cnt;

	if (sflag)
		for (lastch = OOBCH; (ch = getwcf()) != WEOF;) {
			ch = string1[ch];
			if (!string2[ch] || lastch != ch) {
				lastch = ch;
				putwchar(ch);
			}
		}
	else
		while ((ch = getwcf()) != WEOF)
			putwchar(string1[ch]);
	exit(0);
}

static void
setup(wchar_t *string, char *arg, STR *str, bool cflag)
{
	wchar_t cnt, *p;

	str->str = ambstowcs(arg);
	bzero(string, NCHARS * sizeof (wchar_t));
	while (next(str))
		string[str->lastch] = 1;
	if (cflag)
		for (p = string, cnt = NCHARS; cnt--; ++p)
			*p = !*p;
}

static void
usage(void)
{
	fprintf(stderr, "usage:\ttr [-cs] string1 string2\n"
	    "\ttr [-c] -d string1\n"
	    "\ttr [-c] -s string1\n"
	    "\ttr [-c] -ds string1 string2\n");
	exit(1);
}
@


1.8
log
@remove #ifndef __MirBSD__ before setlocale(); related changes
@
text
@d5 2
a6 2
 * Copyright (c) 2007, 2008, 2009, 2014
 *	Thorsten Glaser <tg@@mirbsd.org>
d40 1
d50 1
a50 1
__RCSID("$MirOS: src/usr.bin/tr/tr.c,v 1.7 2014/02/20 01:16:27 tg Exp $");
@


1.7
log
@as an ambstowcs(3) user, this needs libmbfun now
@
text
@d49 1
a49 1
__RCSID("$MirOS: src/usr.bin/tr/tr.c,v 1.6 2009/09/25 23:09:13 tg Exp $");
a95 1
#ifndef __MirBSD__
a96 1
#endif
@


1.6
log
@WEOF is (portably) of type wint_t though
@
text
@d5 1
a5 1
 * Copyright (c) 2007, 2008, 2009
d41 1
d49 1
a49 1
__RCSID("$MirOS: src/usr.bin/tr/tr.c,v 1.5 2009/09/25 23:02:08 tg Exp $");
@


1.5
log
@amazing what one finds... fix off-by-one in string1 initialisation
@
text
@d5 1
a5 1
 * Copyright (c) 2007, 2008
d48 1
a48 1
__RCSID("$MirOS: src/usr.bin/tr/tr.c,v 1.4 2008/11/22 13:51:11 tg Exp $");
d84 1
a84 1
	(wchar_t)(getwcf_c);					\
d90 2
a91 1
	wchar_t ch, cnt, lastch, *p;
@


1.4
log
@when going to add local extensions to libc anyway (#if __OPENBSD_VISIBLE),
simplify the rest too; since we bump the minor today anyway, add it now…
@
text
@d48 1
a48 1
__RCSID("$MirOS: src/usr.bin/tr/tr.c,v 1.3 2007/07/16 15:12:03 tg Exp $");
d98 1
a98 1
	for (lastch = 0; lastch < (NCHARS - 1); ++lastch)
a99 1
	string1[NCHARS - 1] = 0;
@


1.3
log
@bsiegert@@ wants this to be more reusable
@
text
@d5 2
a6 2
 * Copyright (c) 2007
 *	Thorsten Glaser <tg@@mirbsd.de>
a43 1
#include "ambstowcs.h"
d48 1
a48 1
__RCSID("$MirOS: src/usr.bin/tr/tr.c,v 1.2 2007/07/15 19:10:32 tg Exp $");
@


1.2
log
@• convert to unicode (wchar_t)
• implement classes (wctype_t)
• implement case conversion (wctrans_t) – fully mine! no other BSD has it!
• cosmetics, make __CRAZY clean
@
text
@d44 1
d49 1
a49 1
__RCSID("$MirOS$");
a75 1
wchar_t *ambstowcs(const char *);
a264 27

wchar_t *
ambstowcs(const char *s)
{
	wchar_t *ws = NULL;
	size_t n = 0, p = 0, ilen, b;

	ilen = strlen(s);

 ambstowcs_loop:
	if (p >= n && (ws = realloc(ws,
	    (n = (n ? n << 1 : 32)) * sizeof (wchar_t))) == NULL)
		err(1, "out of memory allocating %zu wide chars", n);
	if (ilen == 0) {
		ws[p] = L'\0';
		return (ws);
	} else if ((b = mbtowc(ws + p, s, ilen)) == (size_t)-1) {
		ws[p] = 0xFFFD;
		++s;
		--ilen;
	} else {
		s += b;
		ilen -= b;
	}
	++p;
	goto ambstowcs_loop;
}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.12 2004/05/09 03:20:20 deraadt Exp $	*/
d5 2
a34 13
#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1988, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)tr.c	8.2 (Berkeley) 5/4/95";
#endif
static char rcsid[] = "$OpenBSD: tr.c,v 1.12 2004/05/09 03:20:20 deraadt Exp $";
#endif /* not lint */

a36 3
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
d39 3
d45 42
a86 40
static int string1[NCHARS] = {
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,		/* ASCII */
	0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
	0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f,
	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27,
	0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f,
	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,
	0x38, 0x39, 0x3a, 0x3b, 0x3c, 0x3d, 0x3e, 0x3f,
	0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,
	0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
	0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57,
	0x58, 0x59, 0x5a, 0x5b, 0x5c, 0x5d, 0x5e, 0x5f,
	0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,
	0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f,
	0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,
	0x78, 0x79, 0x7a, 0x7b, 0x7c, 0x7d, 0x7e, 0x7f,
	0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
	0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f,
	0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97,
	0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f,
	0xa0, 0xa1, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7,
	0xa8, 0xa9, 0xaa, 0xab, 0xac, 0xad, 0xae, 0xaf,
	0xb0, 0xb1, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6, 0xb7,
	0xb8, 0xb9, 0xba, 0xbb, 0xbc, 0xbd, 0xbe, 0xbf,
	0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7,
	0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,
	0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7,
	0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,
	0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7,
	0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,
	0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7,
	0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff,
}, string2[NCHARS];

STR s1 = { STRING1, NORMAL, 0, OOBCH, { 0, OOBCH }, NULL, NULL };
STR s2 = { STRING2, NORMAL, 0, OOBCH, { 0, OOBCH }, NULL, NULL };

static void setup(int *, char *, STR *, int);
static void usage(void);
d91 3
a93 2
	int ch, cnt, lastch, *p;
	int cflag, dflag, sflag, isstring2;
d95 11
a105 3
	cflag = dflag = sflag = 0;
	while ((ch = getopt(argc, argv, "cds")) != -1)
		switch((char)ch) {
d107 1
a107 1
			cflag = 1;
d110 1
a110 1
			dflag = 1;
d113 1
a113 1
			sflag = 1;
d128 1
a128 1
		isstring2 = 0;
d131 1
a131 1
		isstring2 = 1;
d145 1
a145 1
		setup(string2, argv[1], &s2, 0);
d147 1
a147 1
		for (lastch = OOBCH; (ch = getchar()) != EOF;)
d150 1
a150 1
				(void)putchar(ch);
d165 1
a165 1
		while ((ch = getchar()) != EOF)
d167 1
a167 1
				(void)putchar(ch);
d178 1
a178 1
		for (lastch = OOBCH; (ch = getchar()) != EOF;)
d181 1
a181 1
				(void)putchar(ch);
d195 7
a201 2
	s1.str = argv[0];
	s2.str = argv[1];
d229 1
a229 1
		for (lastch = OOBCH; (ch = getchar()) != EOF;) {
d233 1
a233 1
				(void)putchar(ch);
d237 3
a239 3
		while ((ch = getchar()) != EOF)
			(void)putchar(string1[ch]);
	exit (0);
d243 1
a243 1
setup(int *string, char *arg, STR *str, int cflag)
d245 1
a245 1
	int cnt, *p;
d247 2
a248 2
	str->str = arg;
	bzero(string, NCHARS * sizeof(int));
d265 27
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d1 1
a1 1
/*	$OpenBSD: tr.c,v 1.13 2004/09/15 22:12:19 deraadt Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: tr.c,v 1.13 2004/09/15 22:12:19 deraadt Exp $";
d195 2
a196 2
	s1.str = (unsigned char *)argv[0];
	s2.str = (unsigned char *)argv[1];
d242 1
a242 1
	str->str = (unsigned char *)arg;
@

