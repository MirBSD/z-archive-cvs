head	1.4;
access;
symbols
	MIRBSD_10:1.4.0.2
	MIRBSD_10_BASE:1.4
	cvs-200707151930:1.1.1.3
	OPENBSD_4_0:1.1.1.3
	MIRBSD_9_BASE:1.3
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3
	cvs-200507211800:1.1.1.2
	cvs-200504291700:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2006.10.03.19.22.17;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004522B87E42B315D1;

1.3
date	2005.04.29.18.35.08;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.15.18.44.52;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.29.34;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.34;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.17.06.04;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2006.10.03.19.10.03;	author tg;	state Exp;
branches;
next	;
commitid	1004522B592570E1901;


desc
@@


1.4
log
@merge
@
text
@/*	$OpenBSD: domacro.c,v 1.13 2006/05/16 23:43:16 ray Exp $	*/
/*	$NetBSD: domacro.c,v 1.10 1997/07/20 09:45:45 lukem Exp $	*/

/*
 * Copyright (c) 1985, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <ctype.h>
#include <signal.h>
#include <stdio.h>
#include <string.h>

#include "ftp_var.h"

__RCSID("$MirOS: src/usr.bin/ftp/domacro.c,v 1.3 2005/04/29 18:35:08 tg Exp $");

void
domacro(int argc, char *argv[])
{
	int i, j, count = 2, loopflg = 0;
	char *cp1, *cp2, line2[FTPBUFLEN];
	struct cmd *c;

	if (argc < 2 && !another(&argc, &argv, "macro name")) {
		fprintf(ttyout, "usage: %s macro_name\n", argv[0]);
		code = -1;
		return;
	}
	for (i = 0; i < macnum; ++i) {
		if (!strncmp(argv[1], macros[i].mac_name, 9)) {
			break;
		}
	}
	if (i == macnum) {
		fprintf(ttyout, "'%s' macro not found.\n", argv[1]);
		code = -1;
		return;
	}
	(void)strlcpy(line2, line, sizeof(line2));
TOP:
	cp1 = macros[i].mac_start;
	while (cp1 != macros[i].mac_end) {
		while (isspace(*cp1)) {
			cp1++;
		}
		cp2 = line;
		while (*cp1 != '\0') {
		      switch(*cp1) {
		   	    case '\\':
				 *cp2++ = *++cp1;
				 break;
			    case '$':
				 if (isdigit(*(cp1+1))) {
				    j = 0;
				    while (isdigit(*++cp1)) {
					  j = 10*j +  *cp1 - '0';
				    }
				    cp1--;
				    if (argc - 2 >= j) {
					(void)strlcpy(cp2, argv[j+1],
					    sizeof(line) - (cp2 - line));
					cp2 += strlen(argv[j+1]);
				    }
				    break;
				 }
				 if (*(cp1+1) == 'i') {
					loopflg = 1;
					cp1++;
					if (count < argc) {
					   (void)strlcpy(cp2, argv[count],
					       sizeof(line) - (cp2 - line));
					   cp2 += strlen(argv[count]);
					}
					break;
				}
				/* FALLTHROUGH */
			    default:
				*cp2++ = *cp1;
				break;
		      }
		      if (*cp1 != '\0') {
			 cp1++;
		      }
		}
		*cp2 = '\0';
		makeargv();
		c = getcmd(margv[0]);
		if (c == (struct cmd *)-1) {
			fputs("?Ambiguous command.\n", ttyout);
			code = -1;
		}
		else if (c == 0) {
			fputs("?Invalid command.\n", ttyout);
			code = -1;
		}
		else if (c->c_conn && !connected) {
			fputs("Not connected.\n", ttyout);
			code = -1;
		}
		else {
			if (verbose) {
				fputs(line, ttyout);
				fputc('\n', ttyout);
			}
			(*c->c_handler)(margc, margv);
			if (bell && c->c_bell) {
				(void)putc('\007', ttyout);
			}
			(void)strlcpy(line, line2, sizeof(line));
			makeargv();
			argc = margc;
			argv = margv;
		}
		if (cp1 != macros[i].mac_end) {
			cp1++;
		}
	}
	if (loopflg && ++count < argc) {
		goto TOP;
	}
}
@


1.3
log
@(tentative) merge, more to come
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.11 2004/07/20 03:50:25 deraadt Exp $	*/
d40 1
a40 1
__RCSID("$MirOS: src/usr.bin/ftp/domacro.c,v 1.2 2005/03/15 18:44:52 tg Exp $");
d101 1
a101 1
				/* intentional drop through */
@


1.2
log
@rather than fixing
/usr/src/usr.bin/ftp/cmds.c:63: warning: 'rcsid' defined but not used
just convert to __RCSID() macro
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.10 2003/12/16 21:46:22 deraadt Exp $	*/
d40 1
a40 1
__RCSID("$MirOS$");
d43 1
a43 3
domacro(argc, argv)
	int argc;
	char *argv[];
@


1.1
log
@Initial revision
@
text
@a32 4
#if !defined(lint) && !defined(SMALL)
static char rcsid[] = "$OpenBSD: domacro.c,v 1.10 2003/12/16 21:46:22 deraadt Exp $";
#endif /* not lint and not SMALL */

d40 2
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@improve my Frankenstein OS (*wink* you know who you are) further
sans wchar_t of course

this is the essence of reading >1200 commit messages which suck
due to not having the new format of ours...
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.11 2004/07/20 03:50:25 deraadt Exp $	*/
d34 1
a34 1
static char rcsid[] = "$OpenBSD: domacro.c,v 1.11 2004/07/20 03:50:25 deraadt Exp $";
d45 3
a47 1
domacro(int argc, char *argv[])
@


1.1.1.3
log
@Import OpenBSD 4.0's ftp(1) which downgraded to HTTP/1.0
@
text
@d1 1
a1 1
/*	$OpenBSD: domacro.c,v 1.13 2006/05/16 23:43:16 ray Exp $	*/
d34 1
a34 1
static const char rcsid[] = "$OpenBSD: domacro.c,v 1.13 2006/05/16 23:43:16 ray Exp $";
d103 1
a103 1
				/* FALLTHROUGH */
@


