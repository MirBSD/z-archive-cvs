head	1.20;
access;
symbols
	cvs-201003062040:1.1.3.3
	cvs-200810311900:1.1.3.2
	MIRBSD_10:1.4.0.2
	MIRBSD_10_BASE:1.4
	cvs-200607051500:1.1.3.1
	netbsd:1.1.3;
locks; strict;
comment	@ * @;


1.20
date	2019.01.05.16.17.36;	author tg;	state Exp;
branches;
next	1.19;
commitid	1005C30D8B210E73E9A;

1.19
date	2019.01.05.16.02.27;	author tg;	state Exp;
branches;
next	1.18;
commitid	1005C30D4FC04E81E4A;

1.18
date	2017.08.07.20.19.10;	author tg;	state Exp;
branches;
next	1.17;
commitid	1005988C69344442E37;

1.17
date	2016.06.11.14.52.49;	author tg;	state Exp;
branches;
next	1.16;
commitid	100575C25C924DD2901;

1.16
date	2013.10.31.20.07.26;	author tg;	state Exp;
branches;
next	1.15;
commitid	1005272B7081B0E5655;

1.15
date	2010.03.16.22.24.45;	author tg;	state Exp;
branches;
next	1.14;
commitid	1004BA00541725B4B28;

1.14
date	2010.03.16.21.28.25;	author tg;	state Exp;
branches;
next	1.13;
commitid	1004B9FF7E2646899BA;

1.13
date	2010.03.07.00.02.17;	author tg;	state Exp;
branches;
next	1.12;
commitid	1004B92ED1350BD9E9D;

1.12
date	2010.03.06.23.24.15;	author tg;	state Exp;
branches;
next	1.11;
commitid	1004B92E431600E22B7;

1.11
date	2010.03.06.21.29.04;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004B92C8D37339B566;

1.10
date	2009.07.23.19.32.24;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004A68BAC01D44054A;

1.9
date	2008.12.26.23.37.54;	author tg;	state Exp;
branches;
next	1.8;
commitid	10049556AAF4DD0407E;

1.8
date	2008.11.06.18.13.22;	author tg;	state Exp;
branches;
next	1.7;
commitid	100491333D962AA8CD8;

1.7
date	2008.10.31.19.45.30;	author tg;	state Exp;
branches;
next	1.6;
commitid	100490B606B662DF594;

1.6
date	2008.10.31.19.38.19;	author tg;	state Exp;
branches;
next	1.5;
commitid	100490B5EBD4D5B2D76;

1.5
date	2008.10.31.19.11.33;	author tg;	state Exp;
branches;
next	1.4;
commitid	100490B58676FCB2D2F;

1.4
date	2006.09.21.21.02.36;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004512FE03429E96A3;

1.3
date	2006.07.05.16.24.49;	author tg;	state Exp;
branches;
next	1.2;
commitid	10044ABE7E872063AC6;

1.2
date	2006.07.05.16.24.29;	author tg;	state Exp;
branches;
next	1.1;
commitid	10044ABE7D04CE728AE;

1.1
date	2006.07.05.15.08.37;	author tg;	state Exp;
branches
	1.1.3.1;
next	;
commitid	10044ABD6033365D559;

1.1.3.1
date	2006.07.05.15.08.37;	author tg;	state Exp;
branches;
next	1.1.3.2;
commitid	10044ABD6033365D559;

1.1.3.2
date	2008.10.31.19.06.04;	author tg;	state Exp;
branches;
next	1.1.3.3;
commitid	100490B57202F143953;

1.1.3.3
date	2010.03.06.20.44.40;	author tg;	state Exp;
branches;
next	;
commitid	1004B92BEC54F4CD073;


desc
@@


1.20
log
@strlcpy and strlcat prototypes for GNUPORT (we assume glibc)
@
text
@/**	$MirOS: src/usr.sbin/makefs/makefs.h,v 1.19 2019/01/05 16:02:27 tg Exp $ */
/*	$NetBSD: makefs.h,v 1.20 2008/12/28 21:51:46 christos Exp $	*/

/*
 * Copyright (c) 2009, 2010, 2013
 *	Thorsten Glaser <tg@@mirbsd.org>
 * Copyright (c) 2001 Wasabi Systems, Inc.
 * All rights reserved.
 *
 * Written by Luke Mewburn for Wasabi Systems, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed for the NetBSD Project by
 *      Wasabi Systems, Inc.
 * 4. The name of Wasabi Systems, Inc. may not be used to endorse
 *    or promote products derived from this software without specific prior
 *    written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY WASABI SYSTEMS, INC. ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL WASABI SYSTEMS, INC
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef	_MAKEFS_H
#define	_MAKEFS_H

#if HAVE_NBTOOL_CONFIG_H
#include "nbtool_config.h"
#else
#ifndef HAVE_STRUCT_STAT_ST_FLAGS
#define HAVE_STRUCT_STAT_ST_FLAGS 1
#endif
#ifndef HAVE_STRUCT_STAT_ST_GEN
#define HAVE_STRUCT_STAT_ST_GEN 1
#endif
#ifndef HAVE_STRUCT_STAT_ST_MTIMENSEC
#define HAVE_STRUCT_STAT_ST_MTIMENSEC 1
#endif
#ifndef HAVE_STRUCT_STATVFS_F_IOSIZE
#define HAVE_STRUCT_STATVFS_F_IOSIZE 1
#endif
#ifndef HAVE_STRUCT_STAT_BIRTHTIME
#define HAVE_STRUCT_STAT_BIRTHTIME 1
#endif
#ifndef HAVE_FSTATVFS
#define HAVE_FSTATVFS 1
#endif
#endif

#include <sys/types.h>
#include <sys/stat.h>
#include <err.h>

#ifdef GNUPORT
#include <stdint.h>
#undef __unused
#define __unused __attribute__((__unused__))
extern size_t strlcat(char *, const char *, size_t);
extern size_t strlcpy(char *, const char *, size_t);
#endif

/*
 * fsnode -
 *	a component of the tree; contains a filename, a pointer to
 *	fsinode, optional symlink name, and tree pointers
 *
 * fsinode - 
 *	equivalent to an inode, containing serial number (sort of virtual
 *	fs independent inode number) target filesystem inode number (file
 *	data sector in the cd9660 case), refcount (nlink), and stat buffer
 *
 * A tree of fsnodes looks like this:
 *
 *	name	"."		"bin"		"netbsd"
 *	type	S_IFDIR		S_IFDIR		S_IFREG
 *	next 	  >		  >		NULL
 *	parent	NULL		NULL		NULL
 *	child	NULL		  v
 *
 *	name			"."		"ls"
 *	type			S_IFDIR		S_IFREG
 *	next			  >		NULL
 *	parent			  ^		^ (to "bin")
 *	child			NULL		NULL
 *
 * Notes:
 *	-   first always points to first entry, at current level, which
 *	    must be "." when the tree has been built; during build it may
 *	    not be if "." hasn't yet been found by readdir(2).
 *
 *	-   serno is the same for a directory and its dot entry, but they
 *	    are not hardlinked to each other because the ffs code doesn't
 *	    like that; otherwise, they are unique and mostly sequential,
 *	    and the filesystems' code does the right thing anyway
 */

enum fi_flags {
	FI_SIZED =	1<<0,		/* inode sized */
	FI_ALLOCATED =	1<<1,		/* fsinode->ino allocated */
	FI_WRITTEN =	1<<2,		/* inode written */
};

typedef struct {
	uint32_t	 serno;		/* serial number / virtual inode no. */
	uint32_t	 ino;		/* inode number used on target fs */
	uint32_t	 nlink;		/* number of links to this entry */
	enum fi_flags	 flags;		/* flags used by fs specific code */
	struct stat	 st;		/* stat entry */
} fsinode;

typedef struct _fsnode {
	struct _fsnode	*parent;	/* parent (NULL if root) */
	struct _fsnode	*child;		/* child (if type == S_IFDIR) */
	struct _fsnode	*next;		/* next */
	struct _fsnode	*first;		/* first node of current level (".") */
	uint32_t	 type;		/* type of entry */
	fsinode		*inode;		/* actual inode data */
	char		*symlink;	/* symlink target */
	char		*name;		/* file name */
	int		flags;		/* misc flags */
} fsnode;

#define	FSNODE_F_HASSPEC	0x01	/* fsnode has a spec entry */

/*
 * fsinfo_t - contains various settings and parameters pertaining to
 * the image, including current settings, global options, and fs
 * specific options
 */
typedef struct {
		/* current settings */
	off_t	size;		/* total size */
	off_t	inodes;		/* number of inodes */
	uint32_t curinode;	/* current inode */

		/* image settings */
	int	fd;		/* file descriptor of image */
	void	*superblock;	/* superblock */
	int	onlyspec;	/* only add entries in specfile */


		/* global options */
	off_t	minsize;	/* minimum size image should be */
	off_t	maxsize;	/* maximum size image can be */
	off_t	freefiles;	/* free file entries to leave */
	int	freefilepc;	/* free file % */
	off_t	freeblocks;	/* free blocks to leave */
	int	freeblockpc;	/* free block % */
	int	needswap;	/* non-zero if byte swapping needed */
	int	sectorsize;	/* sector size */
	time_t	maxtime;	/* maximum allowed timestamp value */

	void	*fs_specific;	/* Filesystem specific additions. */
} fsinfo_t;


/*
 * option_t - contains option name, description, pointer to location to store
 * result, and range checks for the result. Used to simplify fs specific
 * option setting
 */
typedef struct {
	const char	*name;		/* option name */
	int		*value;		/* where to stuff the value */
	int		minimum;	/* minimum for value */
	int		maximum;	/* maximum for value */
	const char	*desc;		/* option description */
} option_t;


void		apply_specfile(const char *, const char *, fsnode *, int);
void		dump_fsnodes(const char *, fsnode *);
const char *	inode_type(mode_t);
int		set_option(option_t *, const char *, const char *);
fsnode *	walk_dir(const char *, fsnode *);
void		free_fsnodes(fsnode *);

void		ffs_prep_opts(fsinfo_t *);
int		ffs_parse_opts(const char *, fsinfo_t *);
void		ffs_cleanup_opts(fsinfo_t *);
void		ffs_makefs(const char *, const char *, fsnode *, fsinfo_t *);

void		cd9660_prep_opts(fsinfo_t *);
int		cd9660_parse_opts(const char *, fsinfo_t *);
void		cd9660_cleanup_opts(fsinfo_t *);
void		cd9660_makefs(const char *, const char *, fsnode *, fsinfo_t *);


extern	u_int		debug;
extern	size_t		maxpathlen;
extern	struct timespec	start_time;

/*
 * If -x is specified, we want to exclude nodes which do not appear
 * in the spec file.
 */
#define	FSNODE_EXCLUDE_P(opts, fsnode)	\
	((opts)->onlyspec != 0 && ((fsnode)->flags & FSNODE_F_HASSPEC) == 0)

#define	DEBUG_TIME			0x00000001
		/* debug bits 1..3 unused at this time */
#define	DEBUG_WALK_DIR			0x00000010
#define	DEBUG_WALK_DIR_NODE		0x00000020
#define	DEBUG_WALK_DIR_LINKCHECK	0x00000040
#define	DEBUG_DUMP_FSNODES		0x00000080
#define	DEBUG_DUMP_FSNODES_VERBOSE	0x00000100
#define	DEBUG_FS_PARSE_OPTS		0x00000200
#define	DEBUG_FS_MAKEFS			0x00000400
#define	DEBUG_FS_VALIDATE		0x00000800
#define	DEBUG_FS_CREATE_IMAGE		0x00001000
#define	DEBUG_FS_SIZE_DIR		0x00002000
#define	DEBUG_FS_SIZE_DIR_NODE		0x00004000
#define	DEBUG_FS_SIZE_DIR_ADD_DIRENT	0x00008000
#define	DEBUG_FS_POPULATE		0x00010000
#define	DEBUG_FS_POPULATE_DIRBUF	0x00020000
#define	DEBUG_FS_POPULATE_NODE		0x00040000
#define	DEBUG_FS_WRITE_FILE		0x00080000
#define	DEBUG_FS_WRITE_FILE_BLOCK	0x00100000
#define	DEBUG_FS_MAKE_DIRBUF		0x00200000
#define	DEBUG_FS_WRITE_INODE		0x00400000
#define	DEBUG_BUF_BREAD			0x00800000
#define	DEBUG_BUF_BWRITE		0x01000000
#define	DEBUG_BUF_GETBLK		0x02000000
#define	DEBUG_APPLY_SPECFILE		0x04000000
#define	DEBUG_APPLY_SPECENTRY		0x08000000
#define	DEBUG_APPLY_SPECONLY		0x10000000


#define	TIMER_START(x)				\
	if (debug & DEBUG_TIME)			\
		gettimeofday(&(x), NULL)

#define	TIMER_RESULTS(x,d)				\
	if (debug & DEBUG_TIME) {			\
		struct timeval end, td;			\
		gettimeofday(&end, NULL);		\
		timersub(&end, &(x), &td);		\
		printf("%s took %lld.%06ld seconds\n",	\
		    (d), (long long)td.tv_sec,		\
		    (long)td.tv_usec);			\
	}


#ifndef	DEFAULT_FSTYPE
#define	DEFAULT_FSTYPE	"ffs"
#endif


/*
 *	ffs specific settings
 *	---------------------
 */

#define	FFS_EI		/* for opposite endian support in ffs headers */


#endif	/* _MAKEFS_H */
@


1.19
log
@do not use libbsd, even on Debian (collapse FEDORA into GNUPORT):
it’ll RSN ship an incompatible strnvis() and strnunvis() from,
incidentally, NetBSD®… (and has fgetln/fparseln issues)
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/makefs/makefs.h,v 1.18 2017/08/07 20:19:10 tg Exp $ */
d75 2
@


1.18
log
@filesystem
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/makefs/makefs.h,v 1.17 2016/06/11 14:52:49 tg Exp $ */
d71 1
a71 1
#ifdef DEBIAN
@


1.17
log
@apply “Implement -T maximum-time argument” patch
From: Steven Chamberlain <steven@@pyro.eu.org>
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/makefs/makefs.h,v 1.16 2013/10/31 20:07:26 tg Exp $ */
d84 1
a84 1
 *	fs independent inode number) target file system inode number (file
d168 1
a168 1
	void	*fs_specific;	/* File system specific additions. */
@


1.16
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/makefs/makefs.h,v 1.15 2010/03/16 22:24:45 tg Exp $ */
d166 1
@


1.15
log
@more types
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/makefs/makefs.h,v 1.14 2010/03/16 21:28:25 tg Exp $ */
d5 1
a5 1
 * Copyright (c) 2009, 2010
d74 1
a74 1
#define __unused __attribute__((unused))
@


1.14
log
@put some better portability in here, which was overlooked since
we pull in <bsd/bsd.h> from libbsd on Debian, but Fedora didn’t
have libbsd
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/makefs/makefs.h,v 1.13 2010/03/07 00:02:17 tg Exp $ */
d67 1
@


1.13
log
@get rid of PATH_MAX and MAXPATHLEN uses (probably could use asprintf tho…)
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/makefs/makefs.h,v 1.12 2010/03/06 23:24:15 tg Exp $ */
d5 1
a5 1
 * Copyright (c) 2009
d71 1
@


1.12
log
@sync © lines
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/makefs/makefs.h,v 1.11 2010/03/06 21:29:04 tg Exp $ */
d202 1
@


1.11
log
@merge and attempt to fix
• cd9660/iso9660_rrip.c:cd9660_susp_handle_continuation_common() has
  some different code for keeping track of working and placement of
  the CE on the disc now but it looks as if it’s correct
• I am fairly positive this doesn’t regress… but, alas, no guarantee
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/makefs/makefs.h,v 1.10 2009/07/23 19:32:24 tg Exp $ */
d5 2
a6 1
 * Copyright (c) 2009 Thorsten Glaser
@


1.10
log
@apply fixes, missing includes, and Debian compatibility glue to makefs(8);
create an initial, experimental Debian source package for it for Luca Fav.
@
text
@d1 2
a2 2
/**	$MirOS: src/usr.sbin/makefs/makefs.h,v 1.9 2008/12/26 23:37:54 tg Exp $ */
/*	$NetBSD: makefs.h,v 1.19 2006/10/10 01:55:45 dbj Exp $	*/
d248 3
a250 2
		printf("%s took %ld.%06ld seconds\n",	\
		    (d), (long)td.tv_sec, td.tv_usec);	\
@


1.9
log
@now fix up serial numbers for good (a hexdump comparision between a
yesterday's edition of makefs and one after this patch yields no dif-
ferences, so the cd9660 code also DTRT regarding dirs and their dot
entries like the ffs code except not failing if the walk code links
them together already…)
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/makefs/makefs.h,v 1.8 2008/11/06 18:13:22 tg Exp $ */
d5 1
d69 5
@


1.8
log
@assign virtual inode numbers just like the hard link count stuff in pax(1),
make sure that directories are hardlinked to their dot entries as well,
and use the serial numbers for the PX records
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/makefs/makefs.h,v 1.7 2008/10/31 19:45:30 tg Exp $ */
d96 5
@


1.7
log
@now make it compile without -Wno-error
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/makefs/makefs.h,v 1.6 2008/10/31 19:38:19 tg Exp $ */
d74 3
a76 2
 *	equivalent to an inode, containing target file system inode number,
 *	refcount (nlink), and stat buffer
d105 1
@


1.6
log
@let this compile
@
text
@d1 1
a1 1
/**	$MirOS$ */
d236 1
a236 1
		    (d), td.tv_sec, td.tv_usec);	\
@


1.5
log
@bring MAIN branch into the pristine TNF state for reverse-merging
@
text
@d1 1
d45 1
d47 2
d50 2
d53 2
d56 2
d59 2
d63 1
@


1.4
log
@a few bits of lint removal
@
text
@d1 1
a1 1
/*	$NetBSD: makefs.h,v 1.17 2005/08/13 01:53:01 fvdl Exp $	*/
a43 1
#ifndef HAVE_STRUCT_STAT_ST_FLAGS
a44 2
#endif /* HAVE_STRUCT_STAT_ST_FLAGS */
#ifndef HAVE_STRUCT_STAT_ST_GEN
a45 2
#endif /* HAVE_STRUCT_STAT_ST_GEN */
#ifndef HAVE_STRUCT_STAT_ST_MTIMENSEC
a46 2
#endif /* HAVE_STRUCT_STAT_ST_MTIMENSEC */
#ifndef HAVE_STRUCT_STATVFS_F_IOSIZE
a47 2
#endif /* HAVE_STRUCT_STATVFS_F_IOSIZE */
#ifndef HAVE_STRUCT_STAT_BIRTHTIME
a48 2
#endif /* HAVE_STRUCT_STAT_BIRTHTIME */
#ifndef HAVE_FSTATVFS
a49 1
#endif /* HAVE_FSTATVFS */
d87 1
a87 1
	FI_WRITTEN =	1<<2		/* inode written */
d156 1
a156 1
void		apply_specfile(const char *, const char *, fsnode *);
d161 1
d210 1
d222 2
a223 2
		printf("%s took %lld.%06ld seconds\n",	\
		    (d), (int64_t)td.tv_sec, td.tv_usec);\
@


1.3
log
@time_t
@
text
@d99 1
a99 1
	FI_WRITTEN =	1<<2,		/* inode written */
@


1.2
log
@we get further with this
@
text
@d232 2
a233 2
		printf("%s took %ld.%06ld seconds\n",	\
		    (d), td.tv_sec, td.tv_usec);	\
@


1.1
log
@Initial revision
@
text
@d44 1
d46 2
d49 2
d52 2
d55 2
d58 2
d61 1
@


1.1.3.1
log
@Time to hack on makefs, from TNF
@
text
@@


1.1.3.2
log
@Import NetBSD®-current (just after or at the 5.0 branch) makefs(8)
and subtree required to build it in MirBSD
@
text
@d1 1
a1 1
/*	$NetBSD: makefs.h,v 1.19 2006/10/10 01:55:45 dbj Exp $	*/
d156 1
a156 1
void		apply_specfile(const char *, const char *, fsnode *, int);
a160 1
void		free_fsnodes(fsnode *);
a208 1
#define	DEBUG_APPLY_SPECONLY		0x10000000
@


1.1.3.3
log
@import newer makefs from TNF (with Acorn Archimedes support)
@
text
@d1 1
a1 1
/*	$NetBSD: makefs.h,v 1.20 2008/12/28 21:51:46 christos Exp $	*/
d222 2
a223 3
		printf("%s took %lld.%06ld seconds\n",	\
		    (d), (long long)td.tv_sec,		\
		    (long)td.tv_usec);			\
@


