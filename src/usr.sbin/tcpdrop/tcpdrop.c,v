head	1.4;
access;
symbols
	MIRBSD_10:1.3.0.4
	MIRBSD_10_BASE:1.3
	MIRBSD_9_BASE:1.3
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3
	cvs-200507211800:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2017.12.01.21.39.47;	author tg;	state Exp;
branches;
next	1.3;
commitid	1005A21CC207E2E1615;

1.3
date	2005.12.04.15.02.32;	author tg;	state Exp;
branches;
next	1.2;
commitid	3de943930506ef14;

1.2
date	2005.03.13.19.17.29;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.31.09;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.31.09;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.21.03.59;	author tg;	state Exp;
branches;
next	;
commitid	560042e0092f571e;


desc
@@


1.4
log
@handle ip:port and ip.port in addition to ip+space+port
also document netstat -v needs to be used, mostly for v6
@
text
@/* $OpenBSD: tcpdrop.c,v 1.4 2004/05/22 23:55:22 deraadt Exp $ */

/*
 * Copyright (c) 2004 Markus Friedl <markus@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/socket.h>
#include <sys/sysctl.h>

#include <netinet/in.h>
#include <netinet/tcp.h>
#include <netinet/ip_var.h>
#include <netinet/tcp_timer.h>
#include <netinet/tcp_var.h>

#include <err.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdlib.h>
#include <netdb.h>

__RCSID("$MirOS$");

extern char *__progname;

static char *splitarg(char *);

/*
 * Drop a tcp connection.
 */
int
main(int argc, char **argv)
{
	int mib[] = { CTL_NET, PF_INET, IPPROTO_TCP, TCPCTL_DROP };
	struct addrinfo hints, *ail, *aif, *laddr, *faddr;
	char fhbuf[NI_MAXHOST], fsbuf[NI_MAXSERV];
	char lhbuf[NI_MAXHOST], lsbuf[NI_MAXSERV];
	struct tcp_ident_mapping tir;
	int gaierr, rval = 0;

	if (argc == 3) {
		char *rpl[6];

		rpl[0] = argv[0];
		if ((rpl[1] = strdup(argv[1])) == NULL)
			err(1, "strdup");
		rpl[2] = splitarg(rpl[1]);
		if ((rpl[3] = strdup(argv[2])) == NULL)
			err(1, "strdup");
		rpl[4] = splitarg(rpl[3]);
		rpl[5] = NULL;

		if (rpl[2] && rpl[4]) {
			argc = 5;
			argv = rpl;
		}
	}

	if (argc != 5) {
		fprintf(stderr, "usage: %s laddr lport faddr fport\n",
		    __progname);
		exit(1);
	}

	memset(&hints, 0, sizeof(hints));
	hints.ai_family = AF_UNSPEC;
	hints.ai_socktype = SOCK_STREAM;

	if ((gaierr = getaddrinfo(argv[1], argv[2], &hints, &laddr)) != 0)
		errx(1, "%s port %s: %s", argv[1], argv[2],
		    gai_strerror(gaierr));

	if ((gaierr = getaddrinfo(argv[3], argv[4], &hints, &faddr)) != 0) {
		freeaddrinfo(laddr);
		errx(1, "%s port %s: %s", argv[3], argv[4],
		    gai_strerror(gaierr));
	}

	for (ail = laddr; ail; ail = ail->ai_next) {
		for (aif = faddr; aif; aif = aif->ai_next) {
			if (ail->ai_family != aif->ai_family)
				continue;
			memcpy(&tir.faddr, aif->ai_addr, aif->ai_addrlen);
			memcpy(&tir.laddr, ail->ai_addr, ail->ai_addrlen);

			if (getnameinfo(aif->ai_addr, aif->ai_addrlen,
			    fhbuf, sizeof(fhbuf),
			    fsbuf, sizeof(fsbuf),
			    NI_NUMERICHOST | NI_NUMERICSERV) == -1)
				err(1, "getnameinfo");
			if (getnameinfo(ail->ai_addr, ail->ai_addrlen,
			    lhbuf, sizeof(lhbuf),
			    lsbuf, sizeof(lsbuf),
			    NI_NUMERICHOST | NI_NUMERICSERV) == -1)
				err(1, "getnameinfo");

			if (sysctl(mib, sizeof (mib) / sizeof (int), NULL,
			    NULL, &tir, sizeof(tir)) == -1) {
				rval = 1;
				warn("%s %s %s %s", lhbuf, lsbuf, fhbuf, fsbuf);
			} else
				printf("%s %s %s %s: dropped\n",
				    lhbuf, lsbuf, fhbuf, fsbuf);

		}
	}
	freeaddrinfo(laddr);
	freeaddrinfo(faddr);
	exit(rval);
}

static char *
splitarg(char *s)
{
	char *cp, *sp;

	cp = strrchr(s, '.');
	sp = strrchr(s, ':');

	if (cp == NULL) {
		if (sp == NULL)
			return (NULL);
		cp = sp;
	} else if (sp != NULL && sp > cp)
		cp = sp;

	sp = cp++;
	while (*cp >= '0' && *cp <= '9')
		++cp;
	if (*cp != '\0')
		return (NULL);
	*sp++ = '\0';
	return (sp);
}
@


1.3
log
@fastmerge usr.sbin except tcpdump and httpd
@
text
@a0 1
/* $MirOS$ */
d36 2
d40 2
d55 18
d125 24
@


1.2
log
@fast merge src/usr.sbin
@
text
@d1 2
a2 2
/**	$MirOS$ */
/* $OpenBSD: tcpdrop.c,v 1.3 2004/05/09 03:22:39 deraadt Exp $ */
d34 1
@


1.1
log
@Initial revision
@
text
@d1 1
d32 1
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d1 1
a1 1
/* $OpenBSD: tcpdrop.c,v 1.4 2004/05/22 23:55:22 deraadt Exp $ */
a31 1
#include <stdlib.h>
@

