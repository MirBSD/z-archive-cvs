head	1.6;
access;
symbols
	MIRBSD_10:1.5.0.2
	MIRBSD_10_BASE:1.5
	MIRBSD_9_BASE:1.3
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2008.11.08.23.04.56;	author tg;	state Exp;
branches;
next	1.5;
commitid	10049161AB22DF5DFC5;

1.5
date	2007.08.10.23.52.24;	author tg;	state Exp;
branches;
next	1.4;
commitid	10046BCFA4E557A719B;

1.4
date	2007.05.14.22.11.44;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004648DEB711E265CB;

1.3
date	2006.05.29.23.38.32;	author tg;	state Exp;
branches;
next	1.2;
commitid	100447B85B916A0A64A;

1.2
date	2005.10.27.11.58.39;	author tg;	state Exp;
branches;
next	1.1;
commitid	77604360c0d42ca3;

1.1
date	2005.02.05.17.31.06;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.31.06;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@more mass conversions, including ancient eMail addresses
@
text
@/*	$OpenBSD: rfc868time.c,v 1.6 2004/02/16 21:25:41 jakob Exp $	*/
/*	$NetBSD: rdate.c,v 1.4 1996/03/16 12:37:45 pk Exp $	*/

/*
 * Copyright (c) 2005 Thorsten Glaser
 * Copyright (c) 1994 Christos Zoulas
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Christos Zoulas.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * rdate.c: Set the date from the specified host
 *
 *	Uses the rfc868 time protocol at socket 37 (tcp).
 *	Time is returned as the number of seconds since
 *	midnight January 1st 1900.
 */

#include <sys/param.h>
#include <sys/socket.h>
#include <sys/time.h>
#include <netinet/in.h>

#include <stdio.h>
#include <ctype.h>
#include <err.h>
#include <string.h>
#include <netdb.h>
#include <unistd.h>
#include <time.h>

#include "rdate.h"

__RCSID("$MirOS: src/usr.sbin/rdate/rfc868time.c,v 1.5 2007/08/10 23:52:24 tg Exp $");
#ifdef MirBSD
__RCSID("$NetBSD: rdate.c,v 1.3 1996/02/22 06:59:18 thorpej Exp $");
__RCSID("$OpenBSD: rfc868time.c,v 1.6 2004/02/16 21:25:41 jakob Exp $");
#endif

/* seconds from midnight Jan 1900 - 1970 */
#define DIFFERENCE 2208988800UL

void
rfc868time_client (const char *hostname, int family, struct timeval *new,
    struct timeval *adjust)
{
	struct addrinfo hints, *res0, *res;
	struct timeval old;
	u_int32_t tim;	/* RFC 868 states clearly this is an uint32 */
	int s;
	int error;

	memset(&hints, 0, sizeof(hints));
	hints.ai_family = family;
	hints.ai_socktype = SOCK_STREAM;
	/* XXX what about rfc868 UDP
	 * probably not due to the Y2038 issue  -mirabilos */
	error = getaddrinfo(hostname, "time", &hints, &res0);
	if (error) {
		errx(1, "%s: %s", hostname, gai_strerror(error));
		/*NOTREACHED*/
	}

	s = -1;
	for (res = res0; res; res = res->ai_next) {
		s = socket(res->ai_family, res->ai_socktype, res->ai_protocol);
		if (s < 0)
			continue;

		if (connect(s, res->ai_addr, res->ai_addrlen) < 0) {
			close(s);
			s = -1;
			continue;
		}

		break;
	}
	if (s < 0)
		err(1, "Could not connect socket");
	freeaddrinfo(res0);

	if (read(s, &tim, sizeof(tim)) != sizeof(tim))
		err(1, "Could not read data");

	(void) close(s);
	tim = ntohl(tim) - DIFFERENCE;

	if (gettimeofday(&old, NULL) == -1)
		err(1, "Could not get local time of day");

	adjust->tv_sec = tim - old.tv_sec;
	adjust->tv_usec = 0;

	new->tv_sec = old.tv_sec + adjust->tv_sec;
	new->tv_usec = 0;
}
@


1.5
log
@told ya it needs a .h file
@
text
@d58 1
a58 1
__RCSID("$MirOS: src/usr.sbin/rdate/rfc868time.c,v 1.4 2007/05/14 22:11:44 tg Exp $");
d81 1
a81 1
	 * probably not due to the Y2038 issue  -mirabile */
@


1.4
log
@fixes
@
text
@d56 3
a58 1
__RCSID("$MirOS$");
a66 3
void rfc868time_client (const char *, int, struct timeval *,
    struct timeval *);

@


1.3
log
@use libtz for determining whether we should correct leap
seconds, instead of relying on the user to provide -c, and
use it to know the exact amount of leap seconds to correct
for (if any)

we only lose one thing: RFC 868 leap second correction (but
then, you don't want to use that anyway, and if you use it,
you better know whether the server you're synching against
is using a POSIX or "right" timezone)
@
text
@a42 8
#ifndef lint
#if 0
from: static char rcsid[] = "$NetBSD: rdate.c,v 1.3 1996/02/22 06:59:18 thorpej Exp $";
#else
static const char rcsid[] = "$OpenBSD: rfc868time.c,v 1.6 2004/02/16 21:25:41 jakob Exp $";
#endif
#endif				/* lint */

d56 6
@


1.2
log
@* merge OpenBSD import
* rewrite tai2utc from libc:taitime.c
* please __CRAZY=yes
* reduce diff against OpenBSD
* retain some functionality
@
text
@a63 3
/* Obviously it is not just for SNTP clients... */
#include "ntpleaps.h"

d68 1
a68 1
    struct timeval *, int);
d72 1
a72 1
    struct timeval *adjust, int leapflag)
a78 1
	u_int64_t td;
d118 1
a118 5
	td = SEC_TO_TAI64(old.tv_sec);
	if (leapflag)
		ntpleaps_sub(&td);

	adjust->tv_sec = tim - TAI64_TO_SEC(td);
@


1.1
log
@Initial revision
@
text
@d5 1
d70 2
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
