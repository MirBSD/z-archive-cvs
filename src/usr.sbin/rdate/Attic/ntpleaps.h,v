head	1.6;
access;
symbols
	MIRBSD_9_BASE:1.5
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2007.05.14.22.06.52;	author tg;	state dead;
branches;
next	1.5;
commitid	1004648DD5A2275F914;

1.5
date	2006.06.09.20.58.10;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004489E0F23F902B89;

1.4
date	2006.05.29.23.38.31;	author tg;	state dead;
branches;
next	1.3;
commitid	100447B85B916A0A64A;

1.3
date	2006.05.09.09.00.00;	author tg;	state Exp;
branches;
next	1.2;
commitid	10044605A212C9F8FC5;

1.2
date	2005.03.13.19.17.21;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.31.06;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.31.06;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@• merge ntpleaps.h into ntp.c, ntpleaps.c
• update ntpleaps.c to latest licence template
• portability: don't use __dead
• portability: add ifdef for external arc4random
• add GNUmakefile to be used on e.g. Debian GNU/Linux and Debian GNU/kFreeBSD
• BSDmakefile: remove GNU stuff
@
text
@/* $MirOS: src/usr.sbin/rdate/ntpleaps.h,v 1.5 2006/06/09 20:58:10 tg Exp $ */

/*
 * Converts a time_t measured in kernel ticks into a UTC time_t
 * using leap second information stored in /etc/localtime or an
 * equivalent indicator (e.g. the TZ environment variable).
 * If the kernel time is already measured in UTC instead of TAI
 * and a POSIX conformant time zone is set, this is a no-op.
 */
time_t tick2utc(time_t);
@


1.5
log
@doesn't make sense to rename these files
@
text
@d1 1
a1 1
/* $MirOS: src/usr.sbin/rdate/leapsecs.h,v 1.1 2006/05/29 23:38:31 tg Exp $ */
@


1.4
log
@use libtz for determining whether we should correct leap
seconds, instead of relying on the user to provide -c, and
use it to know the exact amount of leap seconds to correct
for (if any)

we only lose one thing: RFC 868 leap second correction (but
then, you don't want to use that anyway, and if you use it,
you better know whether the server you're synching against
is using a POSIX or "right" timezone)
@
text
@d1 1
a1 2
/**	$MirOS: src/usr.sbin/rdate/ntpleaps.h,v 1.3 2006/05/09 09:00:00 tg Exp $ */
/*	$OpenBSD: ntpleaps.h,v 1.3 2004/05/05 20:29:54 jakob Exp $	*/
d3 6
a8 19
/*-
 * Copyright (c) 2002, 2006
 *	Thorsten Glaser <tg@@mirbsd.de>
 *
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
 *
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a nontrivial bug.
d10 1
a10 52

/* Leap second support for SNTP clients
 * This header file and its corresponding C file provide generic
 * ability for NTP or SNTP clients to correctly handle leap seconds
 * by reading them from an always existing file and subtracting the
 * leap seconds from the NTP return value before setting the posix
 * clock. This is fairly portable between operating systems and may
 * be used for patching other ntp clients, too. The tzfile used is:
 * /usr/share/zoneinfo/right/UTC which is available on any unix-like
 * platform with the Olson tz library, which is necessary to get real
 * leap second zoneinfo files and userland support anyways.
 */

#ifndef	_NTPLEAPS_H
#define	_NTPLEAPS_H

/* Offset between struct timeval.tv_sec and a tai64_t */
#define	NTPLEAPS_OFFSET	(4611686018427387914ULL)

/* Hide this ugly value from programmes */
#define	SEC_TO_TAI64(s)	(NTPLEAPS_OFFSET + (u_int64_t)(s))
#define	TAI64_TO_SEC(t)	((t) - NTPLEAPS_OFFSET)

/* Initialises the leap second table. Does not need to be called
 * before usage of the subtract funtion, but calls ntpleaps_read.
 * Returns 0 on success, -1 on error (displays a warning on stderr)
 */
int ntpleaps_init(void);

/* Re-reads the leap second table, thus consuming quite much time.
 * Ought to be called from within daemons at least once a month to
 * ensure the in-memory table is always up-to-date.
 * Returns 0 on success, -1 on error (leap seconds will not be available)
 */
int ntpleaps_read(void);

/* Subtracts leap seconds from the given value (converts NTP time
 * to posix clock tick time.
 * Returns 0 on success, -1 on error (time is unchanged), 1 on leap second
 */
int ntpleaps_sub(u_int64_t *);

/* This macro is not implemented on all operating systems */
#ifndef	SA_LEN
#define	SA_LEN(x)	(((x)->sa_family == AF_INET6) ? \
			    sizeof(struct sockaddr_in6) : \
			    (((x)->sa_family == AF_INET) ? \
				sizeof(struct sockaddr_in) : \
				sizeof(struct sockaddr)))
#endif

#endif
@


1.3
log
@fixes related to OpenNTPD patch
@
text
@d1 1
a1 1
/**	$MirOS: src/share/misc/licence.template,v 1.7 2006/04/09 22:08:49 tg Rel $ */
@


1.2
log
@fast merge src/usr.sbin
@
text
@d1 1
d4 3
a6 2
/*
 * Copyright (c) 2002 Thorsten Glaser. All rights reserved.
d8 6
a13 23
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *    - Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *    - Redistributions in binary form must reproduce the above
 *      copyright notice, this list of conditions and the following
 *      disclaimer in the documentation and/or other materials provided
 *      with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
d15 8
d47 1
a47 1
/* Initializes the leap second table. Does not need to be called
d49 1
a49 1
 * returns 0 on success, -1 on error (displays a warning on stderr)
d56 1
a56 1
 * returns 0 on success, -1 on error (leap seconds will not be available)
d62 1
a62 1
 * returns 0 on success, -1 on error (time is unchanged), 1 on leap second
@


1.1
log
@Initial revision
@
text
@d44 2
a45 2
#ifndef _NTPLEAPS_H
#define _NTPLEAPS_H
d73 9
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
