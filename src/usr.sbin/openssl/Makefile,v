head	1.13;
access;
symbols
	MIRBSD_10:1.12.0.2
	MIRBSD_10_BASE:1.12
	MIRBSD_9_BASE:1.6
	MIRBSD_8:1.5.0.2
	MIRBSD_8_BASE:1.5
	cvs-200507211800:1.1.1.2
	cvs-200504291330:1.1.1.2
	cvs-200504261445:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.13
date	2014.05.29.00.58.13;	author tg;	state Exp;
branches;
next	1.12;
commitid	10053868614194BB1E8;

1.12
date	2007.09.28.12.41.54;	author tg;	state Exp;
branches;
next	1.11;
commitid	10046FCF6683BF48EA5;

1.11
date	2007.09.28.12.12.56;	author tg;	state Exp;
branches;
next	1.10;
commitid	10046FCEFA52BF98B14;

1.10
date	2006.10.15.00.53.05;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004531867C62C7E39E;

1.9
date	2006.09.20.20.38.15;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004511A6C160F978C8;

1.8
date	2006.07.09.00.01.31;	author tg;	state Exp;
branches;
next	1.7;
commitid	10044B047650D63EEFB;

1.7
date	2006.06.30.23.18.06;	author tg;	state Exp;
branches;
next	1.6;
commitid	10044A5B12A66F53B0F;

1.6
date	2006.06.17.22.12.59;	author tg;	state Exp;
branches;
next	1.5;
commitid	10044947A600871A477;

1.5
date	2005.04.30.22.54.27;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.29.13.44.07;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.15.18.51.37;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.13.19.17.10;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.30.58;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.30.58;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.13.40.22;	author tg;	state Exp;
branches;
next	;


desc
@@


1.13
log
@make app_RAND_pushback() operate even more nicely, now that RAND_add()
(and, with that, RAND_seed() implicitly) call a userland shuffle already
@
text
@# $MirOS: src/usr.sbin/openssl/Makefile,v 1.12 2007/09/28 12:41:54 tg Exp $
# $OpenBSD: Makefile,v 1.17 2005/04/29 05:42:55 djm Exp $

PROG=		openssl
LDADD=		-lssl -lcrypto -lmbfun
DPADD=		${LIBSSL} ${LIBCRYPTO} ${LIBMBFUN}

.include <bsd.own.mk>

SSLEAYDIST=	lib/libssl/src
SSLEAY_SRC_TOP=	${BSDSRCDIR}/${SSLEAYDIST}
SSLEAY_SRC=	${SSLEAY_SRC_TOP}/apps

CPPFLAGS+=	-DMONOLITH
CPPFLAGS+=	-DMBSD_CB_ARND
CPPFLAGS+=	-I${SSLEAY_SRC_TOP} -I${SSLEAY_SRC}

.include "${SSLEAY_SRC_TOP}/../Makefile.inc"

SRCS=	verify.c asn1pars.c req.c dgst.c dh.c enc.c passwd.c gendh.c errstr.c \
	pkcs7.c crl2p7.c crl.c ca.c \
	rsa.c dsa.c dsaparam.c \
	x509.c genrsa.c gendsa.c s_server.c s_client.c speed.c \
	s_time.c apps.c s_cb.c s_socket.c version.c sess_id.c \
	app_rand.c ciphers.c nseq.c pkcs12.c pkcs8.c spkac.c smime.c \
	dhparam.c openssl.c rand.c rsautl.c engine.c ocsp.c prime.c

.PATH:	${SSLEAY_SRC}

SRCS+=		asn1octetstream.c

.include <bsd.prog.mk>
@


1.12
log
@• circumvent libc’s arc4random stuff usually, directly use KERN_ARND, since
  it has greater throughput (and entropy if the app doesn’t use it itself –
  which almost no openssl-app does)
• feed arc4random_pushb(3) results to RAND_add(3) as well
• RCS IDs
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/openssl/Makefile,v 1.11 2007/09/28 12:12:56 tg Exp $
d5 2
a6 2
LDADD=		-lssl -lcrypto
DPADD=		${LIBSSL} ${LIBCRYPTO}
@


1.11
log
@use the callback functions to push additional entropy into the OpenSSL-in-
ternal PRNG from (and, using arc4random_pushb(3), to) the BSD arcfour PRNG.
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/openssl/Makefile,v 1.10 2006/10/15 00:53:05 tg Exp $
d15 1
a15 1
CPPFLAGS+=	-DHAVE_ARC4RANDOM -DHAVE_ARC4RANDOM_PUSHB
@


1.10
log
@make it harder to not sync these
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/openssl/Makefile,v 1.9 2006/09/20 20:38:15 tg Exp $
d15 1
@


1.9
log
@try to clean up the openssl mess
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/openssl/Makefile,v 1.8 2006/07/09 00:01:31 tg Exp $
d14 1
a14 1
CPPFLAGS+=	-DMONOLITH -DTERMIOS -DANSI_SOURCE
d17 1
a17 3
.if ${MKC_USAP:L} == "yes"
CPPFLAGS+=	-DOPENSSL_NO_RC5 -DOPENSSL_NO_MDC2 -DOPENSSL_NO_IDEA
.endif
a28 1
CPPFLAGS+=	-DUSE_ASN1OCTETSTREAM
@


1.8
log
@write a new tool to complement vnconfig(8) -f option
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/openssl/Makefile,v 1.7 2006/06/30 23:18:06 tg Exp $
d14 5
a18 8
.if ${MACHINE_ARCH} == "i386"
CPPFLAGS+=	-DL_ENDIAN
.elif ${MACHINE_ARCH} == "sparc"
CPPFLAGS+=	-DB_ENDIAN
.else
.BEGIN:
	@@echo No endianness defined.
	@@exit 1
a20 3
CPPFLAGS+=	-DMONOLITH -DOPENSSL_NO_IDEA -DTERMIOS -DANSI_SOURCE
CPPFLAGS+=	-I${SSLEAY_SRC_TOP} -I${SSLEAY_SRC}

@


1.7
log
@check MACHINE_ARCH not MACHINE for same-userland stuff
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/openssl/Makefile,v 1.6 2006/06/17 22:12:59 tg Exp $
d25 1
a25 1
CPPFLAGS+=	-I${SSLEAY_SRC_TOP}
d37 3
@


1.6
log
@remove more of these AMD64 remains
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/openssl/Makefile,v 1.5 2005/04/30 22:54:27 tg Exp $
d14 1
a14 1
.if ${MACHINE} == "i386"
d16 1
a16 1
.elif ${MACHINE} == "sparc"
@


1.5
log
@commit all the Ms in my tree
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/openssl/Makefile,v 1.4 2005/04/29 13:44:07 tg Exp $
d14 1
a14 1
.if (${MACHINE} == "amd64") || (${MACHINE} == "i386")
d16 1
a16 1
.elif (${MACHINE_ARCH} == "powerpc") || (${MACHINE} == "sparc")
@


1.4
log
@merge and tweak
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/openssl/Makefile,v 1.3 2005/03/15 18:51:37 tg Exp $
d8 2
d12 1
a12 1
SSLEAY_SRC=	${SSLEAYDIST}/apps
@


1.3
log
@better, unified, endianness detection
@
text
@d1 2
a2 2
# $MirOS: src/usr.sbin/openssl/Makefile,v 1.2 2005/03/13 19:17:10 tg Exp $
# $OpenBSD: Makefile,v 1.16 2004/02/27 17:36:18 deraadt Exp $
d4 7
a10 8
PROG=	openssl
LDADD=	-lssl -lcrypto
DPADD=	${LIBSSL} ${LIBCRYPTO}

SSLEAYDIST= lib/libssl/src

SSLEAY_SRC= ${.CURDIR}/../../${SSLEAYDIST}/apps
SSLEAY_SRC_TOP= ${.CURDIR}/../../${SSLEAYDIST}
d22 2
a23 2
CPPFLAGS+= -DMONOLITH -DOPENSSL_NO_IDEA -DTERMIOS -DANSI_SOURCE
CPPFLAGS+= -I${SSLEAY_SRC_TOP}
d25 1
a25 1
SRCS=	verify.c asn1pars.c req.c dgst.c dh.c enc.c passwd.c gendh.c errstr.c\
d31 1
a31 1
	dhparam.c openssl.c rand.c rsautl.c engine.c ocsp.c
@


1.2
log
@fast merge src/usr.sbin
@
text
@d1 1
a1 1
# $MirOS$
d13 4
a16 6
.if ${MACHINE_ARCH} == "i386" || ${MACHINE_ARCH} == "vax" || \
    ${MACHINE_ARCH} == "amd64"

CPPFLAGS+= -DL_ENDIAN
.elif ${MACHINE_ARCH} == "alpha"
# no ENDIAN stuff defined for alpha
d18 3
a20 1
CPPFLAGS+= -DB_ENDIAN
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#	$OpenBSD: Makefile,v 1.16 2004/02/27 17:36:18 deraadt Exp $
d6 1
a6 1
MAN1=	openssl.1
d16 2
a17 3
CFLAGS+= -DL_ENDIAN
.else
.if ${MACHINE_ARCH} == "alpha"
d20 1
a20 2
CFLAGS+= -DB_ENDIAN
.endif
d23 2
a24 3
CFLAGS+= -DMONOLITH -DOPENSSL_NO_IDEA -DTERMIOS -DANSI_SOURCE -DOPENSSL_NO_RC5
CFLAGS+= -DOPENSSL_NO_MDC2
CFLAGS+= -I${SSLEAY_SRC_TOP}
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@sure enough they updated OpenSSL late
but thanks mates, so I need not do it myself
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2005/04/29 05:42:55 djm Exp $
d34 1
a34 1
	dhparam.c openssl.c rand.c rsautl.c engine.c ocsp.c prime.c
@

