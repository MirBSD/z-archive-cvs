head	1.29;
access;
symbols
	cvs-200803192230:1.1.1.3
	MIRBSD_10:1.8.0.2
	MIRBSD_10_BASE:1.8
	OPENBSD_4_0:1.1.1.2
	MIRBSD_9_BASE:1.4
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3
	cvs-200512032330:1.1.1.1
	cvs-200507211800:1.1.1.1
	cvs-200504170300:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.29
date	2017.09.12.16.45.00;	author tg;	state Exp;
branches;
next	1.28;
commitid	10059B80EB715CFE0D8;

1.28
date	2015.10.13.16.37.52;	author tg;	state Exp;
branches;
next	1.27;
commitid	100561D3333681BFB0C;

1.27
date	2015.07.19.01.04.07;	author tg;	state Exp;
branches;
next	1.26;
commitid	10055AAF79C33376588;

1.26
date	2015.06.03.14.40.12;	author tg;	state Exp;
branches;
next	1.25;
commitid	100556F11BB7A305911;

1.25
date	2015.05.25.15.06.43;	author tg;	state Exp;
branches;
next	1.24;
commitid	10055633A8C2719746E;

1.24
date	2014.10.16.19.50.36;	author tg;	state Exp;
branches;
next	1.23;
commitid	1005440218B4BD81049;

1.23
date	2014.04.28.20.47.56;	author tg;	state Exp;
branches;
next	1.22;
commitid	100535EBE81370E1C8D;

1.22
date	2014.03.28.23.49.11;	author tg;	state Exp;
branches;
next	1.21;
commitid	10053360A8675EC2505;

1.21
date	2013.08.01.16.37.30;	author tg;	state Exp;
branches;
next	1.20;
commitid	10051FA8E8222A27BB4;

1.20
date	2013.03.14.10.30.25;	author tg;	state Exp;
branches;
next	1.19;
commitid	1005141A6966C2BA37E;

1.19
date	2012.08.27.01.09.22;	author tg;	state Exp;
branches;
next	1.18;
commitid	100503AC8C0131675A0;

1.18
date	2012.05.07.14.05.19;	author tg;	state Exp;
branches;
next	1.17;
commitid	1004FA7D5EA7396A66A;

1.17
date	2011.11.14.21.39.47;	author tg;	state Exp;
branches;
next	1.16;
commitid	1004EC18A8F72F52376;

1.16
date	2009.10.29.00.47.46;	author tg;	state Exp;
branches;
next	1.15;
commitid	1004AE8E62C03A506A0;

1.15
date	2009.10.25.19.09.46;	author tg;	state Exp;
branches;
next	1.14;
commitid	1004AE4A27263E1C919;

1.14
date	2009.10.21.09.36.51;	author tg;	state Exp;
branches;
next	1.13;
commitid	1004ADED649192823F5;

1.13
date	2009.07.18.14.09.20;	author tg;	state Exp;
branches;
next	1.12;
commitid	1004A61D73A7953CBB8;

1.12
date	2008.12.03.11.39.19;	author tg;	state Exp;
branches;
next	1.11;
commitid	10049366FF455070253;

1.11
date	2008.12.03.11.22.50;	author tg;	state Exp;
branches;
next	1.10;
commitid	10049366BD33F60EDAA;

1.10
date	2008.07.10.14.23.53;	author tg;	state Exp;
branches;
next	1.9;
commitid	10048761B7B213D75EA;

1.9
date	2008.03.19.23.07.17;	author tg;	state Exp;
branches;
next	1.8;
commitid	10047E19CB973B77B71;

1.8
date	2007.07.03.07.10.46;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004689F683187E9C88;

1.7
date	2007.06.16.23.15.38;	author tg;	state Exp;
branches;
next	1.6;
commitid	10046746F25623367F9;

1.6
date	2007.05.07.19.32.36;	author tg;	state Exp;
branches;
next	1.5;
commitid	100463F7EDF749BD433;

1.5
date	2006.09.20.23.45.04;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004511D29325904FC9;

1.4
date	2006.02.21.17.09.32;	author tg;	state Exp;
branches;
next	1.3;
commitid	10043FB49515E9CEC35;

1.3
date	2005.06.29.13.32.40;	author tg;	state Exp;
branches;
next	1.2;
commitid	2fc542c2a2f7d94f;

1.2
date	2005.03.13.19.16.30;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.30.29;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.30.29;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.09.20.23.16.16;	author tg;	state Exp;
branches;
next	1.1.1.3;
commitid	1004511CBCF7173CE64;

1.1.1.3
date	2008.03.19.22.48.51;	author tg;	state Exp;
branches;
next	;
commitid	10047E198505DBEE7BD;


desc
@@


1.29
log
@introduce a non-PFS ciphersuite to the default SSLCipherSuite list
to allow “modern” devices such as Android 7, Safari, Win 7, Win Phone
etc. to connect at all ☹

The state of SSL is crazy.
@
text
@# $MirSecuCron$
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.27 2015/07/19 01:04:07 tg Exp $
# $OpenBSD: httpd.conf,v 1.22 2008/01/25 09:59:57 sthen Exp $
#
# Based upon the NCSA server configuration files originally by Rob McCool.
#
# This is the main httpd server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See <URL:http://www.apache.org/docs/> for detailed information about
# the directives.
#
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.
#
# After this file is processed, the server will look for and process
# /var/www/conf/srm.conf and then /var/www/conf/access.conf
# unless you have overridden these with ResourceConfig and/or
# AccessConfig directives here.
#
# The configuration directives are grouped into three basic sections:
#  1. Directives that control the operation of the httpd server process as a
#     whole (the 'global environment').
#  2. Directives that define the parameters of the 'main' or 'default' server,
#     which responds to requests that aren't handled by a virtual host.
#     These directives also provide default values for the settings
#     of all virtual hosts.
#  3. Settings for virtual hosts, which allow Web requests to be sent to
#     different IP addresses or hostnames and have them handled by the
#     same httpd server process.
#
# Configuration and logfile names: If the filenames you specify for many
# of the server's control files begin with "/" (or "drive:/" for Win32), the
# server will use that explicit path.  If the filenames do *not* begin
# with "/", the value of ServerRoot is prepended -- so "logs/foo.log"
# with ServerRoot set to "/var/www" will be interpreted by the
# server as "/var/www/logs/foo.log".
#

### Section 1: Global Environment
#
# The directives in this section affect the overall operation of httpd,
# such as the number of concurrent requests it can handle or where it
# can find its configuration files.
#

#
# ServerType is either inetd, or standalone.  Inetd mode is only supported on
# Unix platforms.
#
ServerType standalone

#
# ServerTokens is either Full, OS, Minimal, or ProductOnly.
# The values define what version information is returned in the
# Server header in HTTP responses.
#
# ServerTokens OS

#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#
# NOTE!  If you intend to place this on an NFS (or otherwise network)
# mounted filesystem then please read the LockFile documentation
# (available at <URL:http://www.apache.org/docs/mod/core.html#lockfile>);
# you will save yourself a lot of trouble.
#
# Do NOT add a slash at the end of the directory path.
#
ServerRoot "/var/www"

#
# The LockFile directive sets the path to the lockfile used when httpd
# is compiled with either USE_FCNTL_SERIALIZED_ACCEPT or
# USE_FLOCK_SERIALIZED_ACCEPT. This directive should normally be left at
# its default value. The main reason for changing it is if the logs
# directory is NFS mounted, since the lockfile MUST BE STORED ON A LOCAL
# DISK. The PID of the main server process is automatically appended to
# the filename.
#
#LockFile logs/accept.lock

#
# PidFile: The file in which the server should record its process
# identification number when it starts.
#
PidFile logs/httpd.pid

#
# ScoreBoardFile: File used to store internal server process information.
# Not all architectures require this.  But if yours does (you'll know because
# this file will be created when you run httpd) then you *must* ensure that
# no two invocations of httpd share the same scoreboard file.
#
ScoreBoardFile logs/httpd_runtime_status

#
# In the standard configuration, the server will process httpd.conf,
# srm.conf, and access.conf in that order.  The latter two files are
# now deprecated and not installed any more, as it is recommended that
# all directives be kept in a single file for simplicity.
#
#ResourceConfig conf/srm.conf
#AccessConfig conf/access.conf

#
# Timeout: The number of seconds before receives and sends time out.
#
Timeout 300

#
# KeepAlive: Whether or not to allow persistent connections (more than
# one request per connection). Set to "Off" to deactivate.
#
KeepAlive On

#
# MaxKeepAliveRequests: The maximum number of requests to allow
# during a persistent connection. Set to 0 to allow an unlimited amount.
# We recommend you leave this number high, for maximum performance.
#
MaxKeepAliveRequests 100

#
# KeepAliveTimeout: Number of seconds to wait for the next request from the
# same client on the same connection.
#
KeepAliveTimeout 15

#
# Server-pool size regulation.  Rather than making you guess how many
# server processes you need, httpd dynamically adapts to the load it
# sees --- that is, it tries to maintain enough server processes to
# handle the current load, plus a few spare servers to handle transient
# load spikes (e.g., multiple simultaneous requests from a single
# Netscape browser).
#
# It does this by periodically checking how many servers are waiting
# for a request.  If there are fewer than MinSpareServers, it creates
# a new spare.  If there are more than MaxSpareServers, some of the
# spares die off.  The default values are probably OK for most sites.
#
MinSpareServers 5
MaxSpareServers 10

#
# Number of servers to start initially --- should be a reasonable ballpark
# figure.
#
StartServers 5

#
# Limit on total number of servers running, i.e., limit on the number
# of clients who can simultaneously connect --- if this limit is ever
# reached, clients will be LOCKED OUT, so it should NOT BE SET TOO LOW.
# It is intended mainly as a brake to keep a runaway server from taking
# the system with it as it spirals down...
#
MaxClients 150

#
# MaxRequestsPerChild: the number of requests each child process is
# allowed to process before the child dies.  The child will exit so
# as to avoid problems after prolonged use when httpd (and maybe the
# libraries it uses) leak memory or other resources, or when mod_ssl
# connections time out.
#
MaxRequestsPerChild 64

#
# MaxFOOPerChild: these directives set the current and hard rlimits for
# the child processes. Attempts to exceed them will cause the the OS to
# take appropriate action. See the setrlimit(2) and signal(3).
# In contrast to RLimitFOO, these apply to httpd child processes as well,
# and not just to CGIs and the likes.
#
MaxCPUPerChild 0
MaxDATAPerChild 0
MaxNOFILEPerChild 0
MaxRSSPerChild 0
MaxSTACKPerChild 0
MaxTIMEPerChild 0

#
# Listen: Allows you to bind httpd to specific IP addresses and/or
# ports, in addition to the default. See also the <VirtualHost>
# directive.
#
#Listen 3000
#Listen 12.34.56.78:80

#
# Listen can take two arguments. This is an extension for supporting IPv6.
# Note that httpd will listen _only_ to IPv6 addresses by default, because
# the KAME BSD IPv6 stack does not implement IPv4-mapped addresses for
# security reasons, so don't comment the following two lines:
Listen :: 80
Listen 0.0.0.0 80

#
# BindAddress: You can support virtual hosts with this option. This directive
# is used to tell the server which IP address to listen to. It can either
# contain "*", an IP address, or a fully qualified Internet domain name.
# See also the <VirtualHost> and Listen directives.
#
#BindAddress *

#
# Dynamic Shared Object (DSO) Support
#
# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding 'LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Please read the file README.DSO in the MirOS httpd distribution for more
# details about the DSO mechanism and run 'httpd -l' for the list of already
# built-in (statically linked and thus always available) modules in your httpd
# binary.
#
# Note: The order is which modules are loaded is important.  Don't change
# the order below without expert advice.
#
# Example:
# LoadModule foo_module libexec/mod_foo.so

# "anonymous" user access to authenticated areas
# LoadModule anon_auth_module	/usr/libexec/httpd/modules/mod_auth_anon.so

# user authentication using Berkeley DB files
# LoadModule db_auth_module	/usr/libexec/httpd/modules/mod_auth_db.so

# user authentication using DBM files
# LoadModule dbm_auth_module	/usr/libexec/httpd/modules/mod_auth_dbm.so

# authentication using new-style MD5 Digest Authentication (experimental)
# LoadModule digest_auth_module	/usr/libexec/httpd/modules/mod_auth_digest.so

# CERN httpd metafile semantics
# LoadModule cern_meta_module	/usr/libexec/httpd/modules/mod_cern_meta.so

# configuration defines ($xxx)
# LoadModule define_module	/usr/libexec/httpd/modules/mod_define.so

# user authentication using old-style MD5 Digest Authentication
# LoadModule digest_module	/usr/libexec/httpd/modules/mod_digest.so

# generation of Expires HTTP headers according to user-specified criteria
# LoadModule expires_module	/usr/libexec/httpd/modules/mod_expires.so

# customization of HTTP response headers
# LoadModule headers_module	/usr/libexec/httpd/modules/mod_headers.so

# comprehensive overview of the server configuration
# LoadModule info_module	/usr/libexec/httpd/modules/mod_info.so

# logging of the client user agents (deprecated in favor of mod_log_config)
# LoadModule agent_log_module	/usr/libexec/httpd/modules/mod_log_agent.so

# logging of referers (deprecated in favor of mod_log_config)
# LoadModule referer_log_module	/usr/libexec/httpd/modules/mod_log_referer.so

# determining the MIME type of a file by looking at a few bytes of its contents
# LoadModule mime_magic_module	/usr/libexec/httpd/modules/mod_mime_magic.so

# mmap()ing of a statically configured list of frequently requested but
# not changed files (experimental)
# LoadModule mmap_static_module	/usr/libexec/httpd/modules/mod_mmap_static.so

# rule-based rewriting engine to rewrite requested URLs on the fly
# LoadModule rewrite_module	/usr/libexec/httpd/modules/mod_rewrite.so

# attempt to correct misspellings of URLs that users might have entered
# LoadModule speling_module	/usr/libexec/httpd/modules/mod_speling.so

# provides an environment variable with a unique identifier for each request
# LoadModule unique_id_module	/usr/libexec/httpd/modules/mod_unique_id.so

# uses cookies to provide for a clickstream log of user activity on a site
# LoadModule usertrack_module	/usr/libexec/httpd/modules/mod_usertrack.so

# dynamically configured mass virtual hosting
# LoadModule vhost_alias_module	/usr/libexec/httpd/modules/mod_vhost_alias.so

# caching proxy
# LoadModule proxy_module	/usr/libexec/httpd/modules/libproxy.so

#
# Include extra module configuration files
#
Include /var/www/conf/modules/*.conf

#
# ExtendedStatus controls whether httpd will generate "full" status
# information (ExtendedStatus On) or just basic information (ExtendedStatus
# Off) when the "server-status" handler is called. The default is Off.
#
#ExtendedStatus On

### Section 2: 'Main' server configuration
#
# The directives in this section set up the values used by the 'main'
# server, which responds to any requests that aren't handled by a
# <VirtualHost> definition.  These values also provide defaults for
# any <VirtualHost> containers you may define later in the file.
#
# All of these directives may appear inside <VirtualHost> containers,
# in which case these default settings will be overridden for the
# virtual host being defined.
#

#
# If your ServerType directive (set earlier in the 'Global Environment'
# section) is set to "inetd", the next few directives don't have any
# effect since their settings are defined by the inetd configuration.
# Skip ahead to the ServerAdmin directive.
#

#
# Port: The port to which the standalone server listens. For
# ports < 1023, you will need httpd to be run as root initially.
# NOTE: Do not use Port, use the "Listen" directive above!
#
#Port 80

##
##  SSL Support
##

# Note:	the default security parameters are set to allow a reasonably
#	large amount of devices to connect while still staying secure.
#	As some modern devices refuse to do PFS without ECC, they can
#	use a non-PFS ciphersuite (AES256-SHA) — mind implications of
#	this and reconfigure SSLCipherSuite and others if necessary ⚠

##
##  When we also provide SSL we have to listen to the
##  standard HTTP port (see above) and to the HTTPS port
##
<IfDefine SSL>
Listen :: 443
Listen 0.0.0.0 443
</IfDefine>

#
# If you wish httpd to run as a different user or group, you must run
# httpd as root initially and it will switch.
#
# User/Group: The name (or #number) of the user/group to run httpd as.
#  . On SCO (ODT 3) use "User nouser" and "Group nogroup".
#  . On HPUX you may not be able to use shared memory as nobody, and the
#    suggested workaround is to create a user www and use that user.
#  NOTE that some kernels refuse to setgid(Group) or semctl(IPC_SET)
#  when the value of (unsigned)Group is above 60000;
#  don't use Group #-1 on these systems!
#  On OpenBSD or MirOS, use user www, group www.
#
User www
Group www

#
# ServerAdmin: Your address, where problems with the server should be
# e-mailed.  This address appears on some server-generated pages, such
# as error documents.
#
ServerAdmin you@@your.address.invalid

#
# ServerName allows you to set a host name which is sent back to clients for
# your server if it's different than the one the program would get (i.e., use
# "www" instead of the host's real name).
#
# Note: You cannot just invent host names and hope they work. The name you
# define here must be a valid DNS name for your host. If you don't understand
# this, ask your network administrator.
# If your host doesn't have a registered DNS name, enter its IP address here.
# You will have to access it by its address (e.g., http://123.45.67.89/)
# anyway, and this will make redirections work in a sensible way.
#
# 127.0.0.1 is the TCP/IP local loop-back address, often named localhost. Your
# machine always knows itself by this address. If you use httpd strictly for
# local testing and development, you may use 127.0.0.1 as the server name.
#
#ServerName www.example.com

#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#
DocumentRoot "/var/www/htdocs"

#
# Each directory to which httpd has access can be configured with respect
# to which services and features are allowed and/or disabled in that
# directory (and its subdirectories).
#
# First, we configure the "default" to be a very restrictive set of
# permissions.
#
<Directory />
    Options FollowSymLinks
    AllowOverride None
</Directory>

#
# Note that from this point forward you must specifically allow
# particular features to be enabled - so if something's not working as
# you might expect, make sure that you have specifically enabled it
# below.
#

#
# This should be changed to whatever you set DocumentRoot to.
#
<Directory "/var/www/htdocs">

#
# This may also be "None", "All", or any combination of "Indexes",
# "Includes", "FollowSymLinks", "ExecCGI", or "MultiViews".
#
# Note that "MultiViews" must be named *explicitly* --- "Options All"
# doesn't give it to you.
#
    Options Indexes FollowSymLinks ExecCGI

#
# This controls which options the .htaccess files in directories can
# override. Can also be "All", or any combination of "Options", "FileInfo",
# "AuthConfig", and "Limit"
#
    AllowOverride None

#
# Controls who can get stuff from this server.
#
    Order allow,deny
    Allow from all
</Directory>

#
# UserDir: The directory which is prepended onto a users username, within
# which a users's web pages are looked for if a ~user request is received.
# Relative pathes are relative to the user's home directory.
#
# "disabled" turns this feature off.
#
# Since httpd will chroot(2) to the ServerRoot path by default,
# you should use
#	UserDir /var/www/users
# and create per user directories in /var/www/users/<username>
#
# On MirOS, suexec(8) is configured to look for user directories
# in ~user/pub/ once enabled. This won't work with chrooted
# operation, so you need to recompile your httpd in that case.
#
#UserDir pub
UserDir disabled

#
# Control access to UserDir directories.  The following is an example
# for a site where these directories are restricted to read-only and
# are located under /users/<username>
# You will need to change this to match your site's home directories.
#
#<Directory /users/*>
#<Directory /home/*/pub>
#    AllowOverride FileInfo AuthConfig Limit Options
#    Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec
#    <Limit GET POST OPTIONS PROPFIND>
#        Order allow,deny
#        Allow from all
#    </Limit>
#    <LimitExcept GET POST OPTIONS PROPFIND>
#        Order deny,allow
#        Deny from all
#    </LimitExcept>
#</Directory>

#
# DirectoryIndex: Name of the file or files to use as a pre-written HTML
# directory index.  Separate multiple entries with spaces.
#
DirectoryIndex index.cgi index.php index.htm default.htm index.html

#
# AccessFileName: The name of the file to look for in each directory
# for access control information.
#
AccessFileName .htaccess

#
# The following lines prevent .htaccess files from being viewed by
# Web clients.  Since .htaccess files often contain authorization
# information, access is disallowed for security reasons.  Comment
# these lines out if you want Web visitors to see the contents of
# .htaccess files.  If you change the AccessFileName directive above,
# be sure to make the corresponding changes here.
#
# Also, folks tend to use names such as .htpasswd for password
# files, so this will protect those as well.
#
<Files ~ "^\.ht">
    Order allow,deny
    Deny from all
    Satisfy All
</Files>

#
# CacheNegotiatedDocs: By default, httpd sends "Pragma: no-cache" with each
# document that was negotiated on the basis of content. This asks proxy
# servers not to cache the document. Uncommenting the following line disables
# this behavior, and proxies will be allowed to cache the documents.
#
#CacheNegotiatedDocs

#
# UseCanonicalName:  (new for 1.3)  With this setting turned on, whenever
# httpd needs to construct a self-referencing URL (a URL that refers back
# to the server the response is coming from) it will use ServerName and
# Port to form a "canonical" name.  With this setting off, httpd will
# use the hostname:port that the client supplied, when possible.  This
# also affects SERVER_NAME and SERVER_PORT in CGI scripts.
#
UseCanonicalName Off

#
# TypesConfig describes where the mime.types file (or equivalent) is
# to be found.
#
TypesConfig conf/mime.types

#
# DefaultType is the default MIME type the server will use for a document
# if it cannot otherwise determine one, such as from filename extensions.
# If your server contains mostly text or HTML documents, "text/plain" is
# a good value.  If most of your content is binary, such as applications
# or images, you may want to use "application/octet-stream" instead to
# keep browsers from trying to display binary files as though they are
# text.
#
#DefaultType text/plain
DefaultType application/octet-stream

#
# The mod_mime_magic module allows the server to use various hints from the
# contents of the file itself to determine its type.  The MIMEMagicFile
# directive tells the module where the hint definitions are located.
# mod_mime_magic is not part of the default server (you have to add
# it yourself with a LoadModule [see the DSO paragraph in the 'Global
# Environment' section], or recompile the server and include mod_mime_magic
# as part of the configuration), so it's enclosed in an <IfModule> container.
# This means that the MIMEMagicFile directive will only be processed if the
# module is part of the server.
#
<IfModule mod_mime_magic.c>
    MIMEMagicFile conf/magic
</IfModule>

#
# HostnameLookups: Log the names of clients or just their IP addresses
# e.g., mirbsd.de (on) or 204.62.129.132 (off).
# The default is off because it'd be overall better for the net if people
# had to knowingly turn this feature on, since enabling it means that
# each client request will result in AT LEAST one lookup request to the
# nameserver.
#
# See also combinedlookup under LogFormat
#
HostnameLookups Off

#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
# Either a filename or the text "syslog:" followed by a facility
# name may be specified here.
#
#ErrorLog syslog:daemon
ErrorLog logs/error_log

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel warn

#
# The following directives define some format nicknames for use with
# a CustomLog directive (see below).
#
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t %{SSL_PROTOCOL}x:%{SSL_CIPHER}x:%{address-family}n\"%{Host}i\" \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combinedssl
LogFormat "%h/%a %l %u %t %{SSL_PROTOCOL}x:%{SSL_CIPHER}x:%{address-family}n\"%{Host}i\" \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combinedlookup
LogFormat "%h %l %u %t \"%r\" %>s %b" common
LogFormat "%{Referer}i -> %U" referer
LogFormat "%{User-agent}i" agent

#
# The location and format of the access logfile (Common Logfile Format).
# If you do not define any access logfiles within a <VirtualHost>
# container, they will be logged here.  Contrariwise, if you *do*
# define per-<VirtualHost> access logfiles, transactions will be
# logged therein and *not* in this file.
#
#CustomLog logs/access_log common

#
# If you would like to have agent and referer logfiles, uncomment the
# following directives.
#
#CustomLog logs/referer_log referer
#CustomLog logs/agent_log agent

#
# If you prefer a single logfile with access, agent, and referer information
# (Combined Logfile Format) you can use the following directive.
#
#CustomLog logs/access_log combined
CustomLog logs/access_log combinedssl
# Use this when setting HostnameLookups On
#CustomLog logs/access_log combinedlookup

#
# Optionally add a line containing the server version and virtual host
# name to server-generated pages (error documents, FTP directory listings,
# mod_status and mod_info output etc., but not CGI generated documents).
# Set to "EMail" to also include a mailto: link to the ServerAdmin.
# Set to one of:  On | Off | EMail
#
ServerSignature EMail

#
# Aliases: Add here as many aliases as you need (with no limit). The format is
# Alias fakename realname
#
# Note that if you include a trailing / on fakename then the server will
# require it to be present in the URL.  So "/icons" isn't aliased in this
# example, only "/icons/"..
#
Alias /icons/ "/var/www/icons/"

<Directory "/var/www/icons">
    Options Indexes MultiViews
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

Alias /manual/ "/var/www/htdocs/manual/"

<Directory "/var/www/htdocs/manual">
    Options Indexes FollowSymlinks MultiViews
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

#
# ScriptAlias: This controls which directories contain server scripts.
# ScriptAliases are essentially the same as Aliases, except that
# documents in the realname directory are treated as applications and
# run by the server when requested rather than as documents sent to the client.
# The same rules about trailing "/" apply to ScriptAlias directives as to
# Alias.
#
ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"

#
# "/var/www/cgi-bin" should be changed to whatever your ScriptAliased
# CGI directory exists, if you have that configured.
#
<Directory "/var/www/cgi-bin">
    AllowOverride None
    Options None
    Order allow,deny
    Allow from all
</Directory>

#
# Redirect allows you to tell clients about documents which used to exist in
# your server's namespace, but do not anymore. This allows you to tell the
# clients where to look for the relocated document.
# Format: Redirect old-URI new-URL
#

#
# Directives controlling the display of server-generated directory listings.
#

#
# FancyIndexing is whether you want fancy directory indexing or standard
#
#IndexOptions FancyIndexing

#
# AddIcon* directives tell the server which icon to show for different
# files or filename extensions.  These are only displayed for
# FancyIndexed directories.
#
AddIconByEncoding (CMP,/icons/compressed.gif) x-compress x-gzip

AddIconByType (TXT,/icons/text.gif) text/*
AddIconByType (IMG,/icons/image2.gif) image/*
AddIconByType (SND,/icons/sound2.gif) audio/*
AddIconByType (VID,/icons/movie.gif) video/*

AddIcon /icons/binary.gif .bin .exe
AddIcon /icons/binhex.gif .hqx
AddIcon /icons/tar.gif .tar
AddIcon /icons/world2.gif .wrl .wrl.gz .vrml .vrm .iv
AddIcon /icons/compressed.gif .Z .z .tgz .gz .zip
AddIcon /icons/a.gif .ps .ai .eps
AddIcon /icons/layout.gif .html .shtml .htm .pdf
AddIcon /icons/text.gif .txt
AddIcon /icons/c.gif .c
AddIcon /icons/p.gif .pl .py
AddIcon /icons/f.gif .for
AddIcon /icons/dvi.gif .dvi
AddIcon /icons/uuencoded.gif .uu
AddIcon /icons/script.gif .conf .sh .shar .csh .ksh .tcl
AddIcon /icons/tex.gif .tex
AddIcon /icons/bomb.gif core

AddIcon /icons/back.gif ..
AddIcon /icons/hand.right.gif README
AddIcon /icons/folder.gif ^^DIRECTORY^^
AddIcon /icons/blank.gif ^^BLANKICON^^

#
# DefaultIcon is which icon to show for files which do not have an icon
# explicitly set.
#
DefaultIcon /icons/unknown.gif

#
# AddDescription allows you to place a short description after a file in
# server-generated indexes.  These are only displayed for FancyIndexed
# directories.
# Format: AddDescription "description" filename
#
#AddDescription "GZIP compressed document" .gz
#AddDescription "tar archive" .tar
#AddDescription "GZIP compressed tar archive" .tgz

#
# ReadmeName is the name of the README file the server will look for by
# default, and append to directory listings.
#
# HeaderName is the name of a file which should be prepended to
# directory indexes.
#
ReadmeName README
HeaderName HEADER

#
# IndexIgnore is a set of filenames which directory indexing should ignore
# and not include in the listing.  Shell-style wildcarding is permitted.
#
IndexIgnore .??* *~ *# HEADER* README* RCS CVS *,v *,t

#
# AddEncoding allows you to have certain browsers (Mosaic/X 2.1+) uncompress
# information on the fly. Note: Not all browsers support this.
# Despite the name similarity, the following Add* directives have nothing
# to do with the FancyIndexing customization directives above.
#
AddEncoding x-compress .Z
AddEncoding x-gzip .gz

#
# AddLanguage allows you to specify the language of a document. You can
# then use content negotiation to give a browser a file in a language
# it can understand.
#
# Note 1: The suffix does not have to be the same as the language
# keyword --- those with documents in Polish (whose net-standard
# language code is pl) may wish to use "AddLanguage pl .po" to
# avoid the ambiguity with the common suffix for perl scripts.
#
# Note 2: The example entries below illustrate that in quite
# some cases the two character 'Language' abbreviation is not
# identical to the two character 'Country' code for its country,
# E.g. 'Danmark/dk' versus 'Danish/da'.
#
# Note 3: In the case of 'ltz' we violate the RFC by using a three char
# specifier. But there is 'work in progress' to fix this and get
# the reference data for rfc1766 cleaned up.
#
# Danish (da) - Dutch (nl) - English (en) - Estonian (ee)
# French (fr) - German (de) - Greek-Modern (el)
# Italian (it) - Korean (kr) - Norwegian (no) - Norwegian Nynorsk (nn)
# Portugese (pt) - Luxembourgeois* (ltz)
# Spanish (es) - Swedish (sv) - Catalan (ca) - Czech(cs)
# Polish (pl) - Brazilian Portuguese (pt-br) - Japanese (ja)
# Russian (ru)
#
AddLanguage da	.dk
AddLanguage nl	.nl
AddLanguage en	.en
AddLanguage et	.ee
AddLanguage fr	.fr
AddLanguage de	.de
AddLanguage el	.el
AddLanguage he	.he
AddCharset ISO-8859-8	.iso8859-8
AddLanguage it	.it
AddLanguage ja	.ja
AddCharset ISO-2022-JP	.jis
AddLanguage kr	.kr
AddCharset ISO-2022-KR	.iso-kr
AddLanguage nn	.nn
AddLanguage no	.no
AddLanguage pl	.po
AddCharset ISO-8859-2	.iso-pl
AddLanguage pt	.pt
AddLanguage pt-br .pt-br
AddLanguage ltz	.lu
AddLanguage ca	.ca
AddLanguage es	.es
AddLanguage sv	.sv
AddLanguage cs	.cz .cs
AddLanguage ru	.ru
AddLanguage zh-TW .zh-tw
AddCharset Big5		.Big5	.big5
AddCharset WINDOWS-1251	.cp-1251
AddCharset CP866	.cp866
AddCharset ISO-8859-5	.iso-ru
AddCharset KOI8-R	.koi8-r
AddCharset UCS-2	.ucs2
AddCharset UCS-4	.ucs4
AddCharset UTF-8	.utf8

#
# LanguagePriority allows you to give precedence to some languages
# in case of a tie during content negotiation.
# Just list the languages in decreasing order of preference. We have
# more or less alphabetized them here. You probably want to change this.
#
LanguagePriority en de da nl et fr el it ja kr no pl pt pt-br ru ltz ca es sv tw

#
# AddType allows you to tweak mime.types without actually editing it, or to
# make certain files to be certain types.
#
# For example, the PHP module (not part of the httpd distribution)
# will typically use:
#
#AddType application/x-httpd-php .php
AddType application/x-tar .tgz
AddType application/x-cpio .cgz
AddType application/x-bittorrent .torrent
AddType application/x-x509-ca-cert .cer .crt .pem

#
# AddHandler allows you to map certain file extensions to "handlers",
# actions unrelated to filetype. These can be either built into the server
# or added with the Action command (see below)
#
# If you want to use server side includes, or CGI outside
# ScriptAliased directories, uncomment the following lines.
#
# To use CGI scripts:
#
AddHandler cgi-script .cgi

#
# To use server-parsed HTML files
#
#AddType text/html .shtml
#AddHandler server-parsed .shtml

#
# Uncomment the following line to enable httpd's send-asis HTTP file
# feature
#
#AddHandler send-as-is asis

#
# If you wish to use server-parsed imagemap files, use
#
#AddHandler imap-file map

#
# To enable type maps, you might want to use
#
#AddHandler type-map var

#
# Action lets you define media types that will execute a script whenever
# a matching file is called. This eliminates the need for repeated URL
# pathnames for oft-used CGI file processors.
# Format: Action media/type /cgi-script/location
# Format: Action handler-name /cgi-script/location
#

#
# MetaDir: specifies the name of the directory in which httpd can find
# meta information files. These files contain additional HTTP headers
# to include when sending the document
#
#MetaDir .web

#
# MetaSuffix: specifies the file name suffix for the file containing the
# meta information.
#
#MetaSuffix .meta

#
# Customizable error response (httpd style)
#  these come in three flavors
#
#    1) plain text
#ErrorDocument 500 "The server made a boo boo.
#  n.b.  the (") marks it as text, it does not get output
#
#    2) local redirects
#ErrorDocument 404 /missing.html
#  to redirect to local URL /missing.html
#ErrorDocument 404 /cgi-bin/missing_handler.pl
#  N.B.: You can redirect to a script or a document using server-side-includes.
#
#    3) external redirects
#ErrorDocument 402 http://www.example.com/subscription_info.html
#  N.B.: Many of the environment variables associated with the original
#  request will *not* be available to such a script.

#
# The following directives modify normal HTTP response behavior.
# The first directive disables keepalive for Netscape 2.x and browsers that
# spoof it. There are known problems with these browser implementations.
# The second directive is for Microsoft Internet Explorer 4.0b2
# which has a broken HTTP/1.1 implementation and does not properly
# support keepalive when it is used on 301 or 302 (redirect) responses.
#
BrowserMatch "Mozilla/2" nokeepalive
BrowserMatch "MSIE 4\.0b2;" nokeepalive downgrade-1.0 force-response-1.0

#
# The following directive disables HTTP/1.1 responses to browsers which
# are in violation of the HTTP/1.0 spec by not being able to grok a
# basic 1.1 response.
#
BrowserMatch "RealPlayer 4\.0" force-response-1.0
BrowserMatch "Java/1\.0" force-response-1.0
BrowserMatch "JDK/1\.0" force-response-1.0
#
# Some intermediate versions of /usr/bin/ftp claimed to support HTTP/1.1
# while they did not implement support for the chunked encoding; current
# versions back that out and only claim to support HTTP/1.0; future ver-
# sions that fix this bug will have to change the user agent string.
#
BrowserMatch "MirOS ftp" downgrade-1.0 force-response-1.0
BrowserMatch "OpenBSD ftp" downgrade-1.0 force-response-1.0

#
# These get the general type of the browser used, for SSL later.
#
BrowserMatch "^Mozilla"	isBrowser=nn
BrowserMatch "MSIE"	isBrowser=msie
BrowserMatch "Lynx/"	isBrowser=lynx

#
# Allow server status reports, with the URL of http://servername/server-status
# Change the ".example.com" to match your domain to enable.
#
#<Location /server-status>
#    SetHandler server-status
#    Order deny,allow
#    Deny from all
#    Allow from .example.com
#</Location>

#
# Allow remote server configuration reports, with the URL of
#  http://servername/server-info (requires that mod_info.c be loaded).
# Change the ".example.com" to match your domain to enable.
#
#<Location /server-info>
#    SetHandler server-info
#    Order deny,allow
#    Deny from all
#    Allow from .example.com
#</Location>

#
# Proxy Server directives. Uncomment the following lines to
# enable the proxy server:
#
#<IfModule mod_proxy.c>
#ProxyRequests On
#
#<Directory proxy:*>
#    Order deny,allow
#    Deny from all
#    Allow from .your_domain.com
#</Directory>

#
# Enable/disable the handling of HTTP/1.1 "Via:" headers.
# ("Full" adds the server version; "Block" removes all outgoing Via: headers)
# Set to one of: Off | On | Full | Block
#
#ProxyVia On

#
# To enable the cache as well, edit and uncomment the following lines:
# (no cacheing without CacheRoot)
#
#CacheRoot "/var/www/proxy"
#CacheSize 5
#CacheGcInterval 4
#CacheMaxExpire 24
#CacheLastModifiedFactor 0.1
#CacheDefaultExpire 1
#NoCache a_domain.com another_domain.edu joes.garage_sale.com

#</IfModule>
# End of proxy directives.

### Section 3: Virtual Hosts
#
# VirtualHost: If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them.
# Please see the documentation at <URL:http://www.apache.org/docs/vhosts/>
# for further details before you try to setup virtual hosts.
# You may use the command line option '-S' to verify your virtual host
# configuration.

# ATTENTION: Since httpd supports IPv6 operation, configuration of
# virtual hosts heavily deviates from other similar webservers and
# is not exactly straight-forward. Wildcards usually don't work.

#
# If you want to use name-based virtual hosts you need to define at
# least one IP address (and port number) for them.
#
#NameVirtualHost 12.34.56.78:80
#NameVirtualHost 12.34.56.78

#
# VirtualHost example:
# Almost any httpd directive may go into a VirtualHost container.
#
#<VirtualHost ip.address.of.host.example.com>
#    ServerAdmin webmaster@@host.example.com
#    DocumentRoot /www/docs/host.example.com
#    ServerName host.example.com
#    ErrorLog logs/host.example.com-error_log
#    CustomLog logs/host.example.com-access_log common
#</VirtualHost>

#<VirtualHost _default_:*>
#</VirtualHost>


##
##  SSL Global Context
##
##  All SSL configuration in this context applies both to
##  the main server and all SSL-enabled virtual hosts.
##

#
#   Some MIME-types for downloading Certificates and CRLs
#
<IfDefine SSL>
AddType application/x-x509-ca-cert .cer
AddType application/x-pkcs7-crl    .crl
</IfDefine>

<IfModule mod_ssl.c>

#   Pass Phrase Dialog:
#   Configure the pass phrase gathering process.
#   The filtering dialog program ('builtin' is a internal
#   terminal dialog) has to provide the pass phrase on stdout.
SSLPassPhraseDialog  builtin

#   Inter-Process Session Cache:
#   Configure the SSL Session Cache: First either 'none'
#   or 'dbm:/path/to/file' for the mechanism to use and
#   second the expiring timeout (in seconds).
SSLSessionCache         dbm:logs/ssl_scache
SSLSessionCacheTimeout  300

#   Semaphore:
#   Configure the path to the mutual exclusion semaphore the
#   SSL engine uses internally for inter-process synchronization.
SSLMutex  sem

#   Pseudo Random Number Generator (PRNG):
#   Configure one or more sources to seed the PRNG of the
#   SSL library. The seed data should be of good random quality.
#SSLRandomSeed startup builtin
#SSLRandomSeed connect builtin
#SSLRandomSeed startup file:/dev/urandom 32
#SSLRandomSeed connect file:/dev/urandom 32

#   Logging:
#   The home of the dedicated SSL protocol logfile. Errors are
#   additionally duplicated in the general error log file.  Put
#   this somewhere where it cannot be used for symlink attacks on
#   a real server (i.e. somewhere where only root can write).
#   Log levels are (ascending order: higher ones include lower ones):
#   none, error, warn, info, trace, debug.
SSLLog      logs/ssl_engine_log
SSLLogLevel info

</IfModule>

<IfDefine SSL>

##
## SSL Virtual Host Context
##

<VirtualHost _default_:443>
# ATTENTION: this uses the sendmail(8) certs by default!

#  General setup for the virtual host
DocumentRoot /var/www/htdocs
#ServerName new.host.name
#ServerAdmin you@@your.address
ErrorLog logs/error_log
#TransferLog logs/access_log
CustomLog logs/access_log combinedssl
# Use this when setting HostnameLookups On
#CustomLog logs/access_log combinedlookup

#   SSL Engine Switch:
#   Enable/Disable SSL for this virtual host.
SSLEngine on

#   SSL Protocol Selection:
#   Configure usable SSL protocol flavours.
SSLProtocol All -SSLv2 -SSLv3

#   SSL Cipher Suite:
#   List the ciphers that the client is permitted to negotiate.
#   See the mod_ssl documentation for a complete list.
# WARNING: the default ciphersuites below add a non-PFS ciphersuite
#	   to regain compatibility to Android 7, Chrome 49/XP SP3,
#	   Chrome 57/Win 7, IE 7-10/Vista, Win Phone, Safari 9-10
#	   on both iOS 9/10, OSX 10.11/10.12
SSLCipherSuite kEECDH+aRSA:kEDH+aRSA:!COMPLEMENTOFDEFAULT:!ADH:!AECDH:-MEDIUM:!LOW:!EXPORT:!aNULL:!eNULL:!PSK:!aECDH:!aDSS:!DES:!MD5:AES256-SHA

#   HTTPS SERVER CERTIFICATE/KEY/CA

#   Server Certificate:
#   Point SSLCertificateFile at a PEM encoded certificate.  If
#   the certificate is encrypted, then you will be prompted for a
#   pass phrase.  Note that a kill -HUP will prompt again.
SSLCertificateFile	/etc/ssl/default.cer

#   Server Private Key:
#   If the key is not combined with the certificate, use this
#   directive to point at the key file.
SSLCertificateKeyFile	/etc/ssl/private/default.key

#   Server Certificate Chain:
#   Point SSLCertificateChainFile at a file containing the
#   concatenation of PEM encoded CA certificates which form the
#   certificate chain for the server certificate. Alternatively
#   the referenced file can be the same as SSLCertificateFile
#   when the CA certificates are directly appended to the server
#   certificate for convenience.
#   Since these are sent to the client, it MUST NOT be the same
#   as SSLCACertificateFile or a concatenation of all files from
#   the SSLCACertificatePath but ONLY the chain of Root CA and
#   intermediate certs required to validate SSLCertificateFile.
SSLCertificateChainFile	/etc/ssl/deflt-ca.cer

#   HTTPS CLIENT CERTIFICATE/CA/CRL

#   Certificate Authority (CA):
#   Set the CA certificate verification path where to find CA
#   certificates for client authentication or alternatively one
#   huge file containing all of them (file must be PEM encoded).
#   These probably will not be used in constructing a CA chain
#   should SSLCertificateChainFile be absent, even though the
#   mod_ssl documentation indicates this!
#   Note: Inside SSLCACertificatePath you need hash symlinks
#         to point to the certificate files. Use the provided
#         Makefile to update the hash symlinks after changes.
SSLCACertificatePath	/etc/ssl/certs
#SSLCACertificateFile	/etc/ssl/all-ca.pem

# Certificate Revocation Lists (CRL):
# Set the CA revocation path where to find CA CRLs for client
# authentication or alternatively one huge file containing all
# of them (file must be PEM encoded)
# Note: Inside SSLCARevocationPath you need hash symlinks
#       to point to the certificate files.
#SSLCARevocationPath	/etc/ssl/crls
#SSLCARevocationFile	/etc/ssl/all-crl.pem

#   Client Authentication (Type):
#   Client certificate verification type and depth.  Types are
#   none, optional, require and optional_no_ca.  Depth is a
#   number which specifies how deeply to verify the certificate
#   issuer chain before deciding the certificate is not valid.
#SSLVerifyClient require
#SSLVerifyDepth  10

#   Access Control:
#   With SSLRequire you can do per-directory access control based
#   on arbitrary complex boolean expressions containing server
#   variable checks and other lookup directives.  The syntax is a
#   mixture between C and Perl.  See the mod_ssl documentation
#   for more details.
#<Location />
#SSLRequire (    %{SSL_CIPHER} !~ m/^(EXP|NULL)-/ \
#            and %{SSL_CLIENT_S_DN_O} eq "Snake Oil, Ltd." \
#            and %{SSL_CLIENT_S_DN_OU} in {"Staff", "CA", "Dev"} \
#            and %{TIME_WDAY} >= 1 and %{TIME_WDAY} <= 5 \
#            and %{TIME_HOUR} >= 8 and %{TIME_HOUR} <= 20       ) \
#           or %{REMOTE_ADDR} =~ m/^192\.76\.162\.[0-9]+$/
#</Location>

#   SSL Engine Options:
#   Set various options for the SSL engine.
# o FakeBasicAuth:
#     Translate the client X.509 into a Basic Authorisation.  This means that
#     the standard Auth/DBMAuth methods can be used for access control.  The
#     user name is the 'one line' version of the client's X.509 certificate.
#     Note that no password is obtained from the user. Every entry in the user
#     file needs this password: 'xxj31ZMTZzkVA'.
# o ExportCertData:
#     This exports two additional environment variables: SSL_CLIENT_CERT and
#     SSL_SERVER_CERT. These contain the PEM-encoded certificates of the
#     server (always existing) and the client (only existing when client
#     authentication is used). This can be used to import the certificates
#     into CGI scripts.
# o StdEnvVars:
#     This exports the standard SSL/TLS related 'SSL_*' environment variables.
#     Per default this exportation is switched off for performance reasons,
#     because the extraction step is an expensive operation and is usually
#     useless for serving static content. So one usually enables the
#     exportation for CGI and SSI requests only.
# o CompatEnvVars:
#     This exports obsolete environment variables for backward compatibility
#     to Apache(TM)-SSL 1.x, mod_ssl 2.0.x, Sioux 1.0 and Stronghold 2.x.
#     Use this to provide compatibility to existing CGI scripts.
# o StrictRequire:
#     This denies access when "SSLRequireSSL" or "SSLRequire" applied even
#     under a "Satisfy any" situation, i.e. when it applies access is denied
#     and no other module can change it.
# o OptRenegotiate:
#     This enables optimized SSL connection renegotiation handling when SSL
#     directives are used in per-directory context.
SSLOptions +FakeBasicAuth +ExportCertData
#SSLOptions +StdEnvVars +CompatEnvVars +StrictRequire +OptRenegotiate

<Files ~ "\.(cgi|shtml|phtml|pl|sh|php|php3|php?)$">
    SSLOptions +StdEnvVars
</Files>
<Directory "/var/www/cgi-bin">
    SSLOptions +StdEnvVars
</Directory>

#   SSL Protocol Adjustments:
#   The safe and default but still SSL/TLS standard compliant shutdown
#   approach is that mod_ssl sends the close notify alert but doesn't wait for
#   the close notify alert from client. When you need a different shutdown
#   approach you can use one of the following variables:
# o ssl-unclean-shutdown:
#     This forces an unclean shutdown when the connection is closed, i.e. no
#     SSL close notify alert is send or allowed to received.  This violates
#     the SSL/TLS standard but is needed for some brain-dead browsers. Use
#     this when you receive I/O errors because of the standard approach where
#     mod_ssl sends the close notify alert.
# o ssl-accurate-shutdown:
#     This forces an accurate shutdown when the connection is closed, i.e. a
#     SSL close notify alert is send and mod_ssl waits for the close notify
#     alert of the client. This is 100% SSL/TLS standard compliant, but in
#     practice often causes hanging connections with brain-dead browsers. Use
#     this only for browsers where you know that their SSL implementation
#     works correctly.
#   Note: Most problems of broken clients are also related to the HTTP
#   keep-alive facility, so you usually additionally want to disable
#   these too (see the BrowserMatch section above).
SetEnvIf isBrowser msie ssl-unclean-shutdown

</VirtualHost>

</IfDefine>
@


1.28
log
@cycle through worker processes faster, we need it as the death request
from timeout signal handler isn’t honoured
@
text
@d328 8
d1145 5
a1149 1
SSLCipherSuite kEECDH+aRSA:kEDH+aRSA:!COMPLEMENTOFDEFAULT:!ADH:!AECDH:-MEDIUM:!LOW:!EXPORT:!aNULL:!eNULL:!PSK:!aECDH:!aDSS:!DES:!MD5
@


1.27
log
@RC4 NOMORE
@
text
@d2 1
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.26 2015/06/03 14:40:12 tg Exp $
d166 2
a167 3
# libraries it uses) leak memory or other resources.  On most systems, this
# isn't really needed, but a few (such as Solaris) do have notable leaks
# in the libraries.
d169 1
a169 1
MaxRequestsPerChild 1024
@


1.26
log
@drop aDSS, both from EvolvisForge and by Apache httpd/mod_ssl suggestion;
add comment about RC4 removal forcing PFS and, unless that’s the goal, it
isn’t necessary for sendmail(8) – currently not 100% true, patches coming
@
text
@d2 1
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.25 2015/05/25 15:06:43 tg Exp $
d1138 1
a1138 4
# Remove :ECDHE-RSA-RC4-SHA:RC4-SHA if MSIE compatibility is not required.
# That will also force Perfect Forward Secrecy. Note this is not necessary
# in sendmail(8), unless forcing PFS for SMTP STARTTLS is the goal.
SSLCipherSuite kEECDH+aRSA:kEDH+aRSA:!COMPLEMENTOFDEFAULT:!ADH:!AECDH:-MEDIUM:!LOW:!EXPORT:!aNULL:!eNULL:!PSK:!aECDH:!aDSS:!DES:!MD5:ECDHE-RSA-RC4-SHA:RC4-SHA
@


1.25
log
@add a few more !foo here, no change in current openssl but good practice
@
text
@d2 1
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.24 2014/10/16 19:50:36 tg Exp $
d1139 3
a1141 1
SSLCipherSuite kEECDH+aRSA:kEDH+aRSA:!COMPLEMENTOFDEFAULT:!ADH:!AECDH:-MEDIUM:!LOW:!EXPORT:!aNULL:!eNULL:!PSK:!aECDH:!DES:!MD5:EDH-DSS-DES-CBC3-SHA:ECDHE-RSA-RC4-SHA:RC4-SHA
@


1.24
log
@POODLE: Disable SSLv3 just like SSLv2, entirely.
See http://blog.fefe.de/?ts=aac0f99d for details.
14:47⎜«Tonnerre:#nosec» It is a good day to turn off SSLv3 ;)
15:10⎜«Tonnerre:#nosec» https://cryptanalysis.eu/blog/2014/10/15/sslv3-considered-to-be-insucure-how-the-poodle-attack-works-in-detail/
@
text
@d2 1
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.23 2014/04/28 20:47:56 tg Exp $
d1139 1
a1139 1
SSLCipherSuite kEECDH+aRSA:kEDH+aRSA:!COMPLEMENTOFDEFAULT:!ADH:!AECDH:-MEDIUM:!LOW:!EXPORT:!aNULL:!eNULL:EDH-DSS-DES-CBC3-SHA:ECDHE-RSA-RC4-SHA:RC4-SHA
@


1.23
log
@new combinedlookup which is like combinedssl but for use with HostnameLookups On
it also shows the unresolved host together with the resolved one
@
text
@d2 1
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.22 2014/03/28 23:49:11 tg Exp $
d1133 1
a1133 2
SSLProtocol All -SSLv2
#SSLProtocol TLSv1
@


1.22
log
@disable SSLRandomSeed by default (we target MirBSD here…)
@
text
@d2 1
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.21 2013/08/01 16:37:30 tg Exp $
d560 2
d589 1
d616 2
d1124 2
@


1.21
log
@use better default cipher suite

note that we can now insert empty fragments (or do 1/n-1 split, better
for the larger-than-64bit-block ciphers) for CBC since all CBC algos
are in the DHE/PFS group which MSIE doesn’t want to do, for which we
sadly use RC4 still
@
text
@d2 1
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.20 2013/03/14 10:30:25 tg Exp $
d1086 4
a1089 7
SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
#SSLRandomSeed startup file:/dev/random  512
#SSLRandomSeed startup file:/dev/urandom 512
#SSLRandomSeed connect file:/dev/random  512
#SSLRandomSeed connect file:/dev/urandom 512
SSLRandomSeed startup file:/dev/arandom  512
@


1.20
log
@bring back CVE-2011-3389 (low impact) because RC4 for HTTPS (and possibly
many other TLS applications, less so SSH, and definitely not arc4random(9))
is broken: http://blog.fefe.de/?ts=afbe8903
@
text
@d2 1
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.19 2012/08/27 01:09:22 tg Exp $
d1135 2
a1136 6
#SSLCipherSuite ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:-IDEA
# note that there is no priorisation of !kEDH for clients
SSLCipherSuite HIGH:!kEDH:-IDEA:-RC4-SHA
# but for servers, as some have issues with !SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS
# note: lowers security unless SSL_OP_ALL & ~SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS
#SSLCipherSuite AES256-SHA:AES128-SHA:HIGH:!aNULL:!MD5:-IDEA:-RC4-SHA
@


1.19
log
@re-enable SSLv3: MSIE 5.00 (with ie5dom.exe applied) on Windows® 98,
as installed by Natureshadow tonight (*sigh*), doesn’t do TLSv1
@
text
@d2 1
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.18 2012/05/07 14:05:19 tg Exp $
d1137 1
a1137 1
#SSLCipherSuite RC4-SHA:HIGH:!kEDH:-IDEA
d1140 1
a1140 4
#SSLCipherSuite RC4-SHA:AES256-SHA:AES128-SHA:HIGH:!aNULL:!MD5:-IDEA
# or disallow CBC entirely, to fight BEAST (CVE-2011-3389)
# note: lowers cipher strength, so this better be short-term, tho not dangerous
SSLCipherSuite RC4-SHA
@


1.18
log
@CVE-2011-3389: disallow CBC ciphersuites for SSL entirely (short-term)

also add another ciphersuite re-enabling eDH, which should be combined
with unmasking the CBC fix from SSL_OP_ALL in mod_ssl (via an httpd.conf
option); possibly (?) with adding SSLHonorCipherOrder, although this
may let current-time clients drop PFS, so (considering that even MSIE 5.0
negotiates “TLS 1.0, RC4 with 128 bit encryption (High); RSA with 4096 bit
exchange” just fine it is a non-issue, so no SSLHonorCipherOrder I guess
(which also proves we don’t need SSLv3; TLSv1 works in IE5)
@
text
@d2 1
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.17 2011/11/14 21:39:47 tg Exp $
d1129 2
a1130 2
#SSLProtocol All -SSLv2
SSLProtocol TLSv1
@


1.17
log
@default to TLSv1 and secure, low-cpu ciphers; found on Plänet Debian:
http://feeding.cloud.geek.nz/2011/11/ideal-openssl-configuration-for-apache.html
still disable IDEA by default, though (possible patents)
@
text
@d2 1
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.16 2009/10/29 00:47:46 tg Exp $
d1136 8
a1143 1
SSLCipherSuite RC4-SHA:HIGH:!kEDH:-IDEA
@


1.16
log
@SIGUSR1 restarts of httpd just don't work with chroot, period.
(and I don't know why, but since I'm building a release, revert.)
@
text
@d2 1
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.15 2009/10/25 19:09:46 tg Exp $
d1127 5
d1136 1
@


1.15
log
@This is not fun (newsyslog):

[Sun Oct 25 04:00:37 2009] [notice] SIGUSR1 received.  Doing graceful restart
Syntax error on line 1202 of /conf/httpd.conf:
SSLCACertificatePath: directory '/etc/ssl/certs' not exists

Fix:
drwxr-xr-x  2 root  daemon  4608 Oct 25 19:07 /var/www/etc/ssl/certs/
@
text
@d2 1
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.14 2009/10/21 09:36:51 tg Exp $
a1169 1
#   WARNING: This directory MUST (also?) exist inside the chroot!
@


1.14
log
@+SSLCertificateChainFile
@
text
@d2 1
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.13 2009/07/18 14:09:20 tg Exp $
d1170 1
@


1.13
log
@prevent data corruption from /etc/security’s automated backup cronjob
by using “MirSecuCron” as RCS ID for these and preventing it from ex-
panding any of the default keywords

also, add RCS IDs to almost all configuration files and enhance the
default changelist file
@
text
@d2 1
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.12 2008/12/03 11:39:19 tg Exp $
d1132 2
d1145 15
d1163 4
a1166 1
#   huge file containing all of them (file must be PEM encoded)
@


1.12
log
@add another AddType for .cer .crt .pem
@
text
@d1 2
a2 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.11 2008/12/03 11:22:50 tg Exp $
@


1.11
log
@* bring back MaxFOOPerChild docs; seems as if this was lost during
  the OpenBSD 4.0 merge over here (when I accidentally lost 10 hrs
  of work, presumably)
* add MaxTIMEPerChild; improve RLimitTIME (not RLimitTime) docs

XXX need to go over diff relative to OpenBSD some time, again...
XXX best time would be during the 4.4 merge, so no need to hurry
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.10 2008/07/10 14:23:53 tg Exp $
d842 1
@


1.10
log
@add the address family of the request (IPv4 vs IPv6) to the logs too,
just together with the vhost selected
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.9 2008/03/19 23:07:17 tg Exp $
d175 2
d183 1
@


1.9
log
@merge
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.8 2007/07/03 07:10:46 tg Exp $
d582 1
a582 1
LogFormat "%h %l %u %t %{SSL_PROTOCOL}x:%{SSL_CIPHER}x:\"%{Host}i\" \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combinedssl
@


1.8
log
@really give bsd ftp(1) HTTP/1.0 responses
@
text
@d1 2
a2 2
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.7 2007/06/16 23:15:38 tg Exp $
# $OpenBSD: httpd.conf,v 1.19 2006/02/22 15:07:12 henning Exp $
d53 7
d285 5
d564 2
d567 1
@


1.7
log
@downgrade broken clients like e.g. MirOS #9 /usr/bin/ftp to HTTP/1.0
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.6 2007/05/07 19:32:36 tg Exp $
d924 2
a925 2
BrowserMatch "MirOS ftp" force-response-1.0
BrowserMatch "OpenBSD ftp" force-response-1.0
@


1.6
log
@add the "Host" request header to the request extension field
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.5 2006/09/20 23:45:04 tg Exp $
d918 8
@


1.5
log
@merge
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.4 2006/02/21 17:09:32 tg Exp $
d567 1
a567 1
LogFormat "%h %l %u %t %{SSL_PROTOCOL}x:%{SSL_CIPHER}x \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combinedssl
@


1.4
log
@* use combinedssl log format by default
* fix default eMail address
* use upper boundary in case of leaks
@
text
@d1 2
a2 2
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.3 2005/06/29 13:32:40 tg Exp $
# $OpenBSD: httpd.conf,v 1.18 2004/09/10 03:19:03 david Exp $
d165 11
d1102 1
a1102 1
#SSLCipherSuite ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP
@


1.3
log
@default to application/octet-stream for unknown MIME types
saves me some... newbie strain when using lynx for a downloader
@
text
@d1 1
a1 1
# $MirOS: src/usr.sbin/httpd/conf/httpd.conf,v 1.2 2005/03/13 19:16:30 tg Exp $
d162 1
a162 1
MaxRequestsPerChild 0
d331 1
a331 1
ServerAdmin you@@your.address
d556 1
d581 2
a582 1
CustomLog logs/access_log combined
d1081 2
a1082 1
TransferLog logs/access_log
a1209 6
#   Per-Server Logging:
#   The home of a custom SSL log file. Use this when you want a
#   compact non-error SSL logfile on a virtual host basis.
#CustomLog logs/ssl_request_log \
#          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

@


1.2
log
@fast merge src/usr.sbin
@
text
@d1 1
a1 1
# $MirOS$
d507 2
a508 2
DefaultType text/plain
#DefaultType application/octet-stream
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#	$OpenBSD: httpd.conf,v 1.18 2004/09/10 03:19:03 david Exp $
d6 1
a6 1
# This is the main Apache server configuration file.  It contains the
d13 1
a13 1
# consult the online docs. You have been warned.  
d21 1
a21 1
#  1. Directives that control the operation of the Apache server process as a
d29 1
a29 1
#     same Apache server process.
d35 2
a36 2
# with ServerRoot set to "/usr/local/apache" will be interpreted by the
# server as "/usr/local/apache/logs/foo.log".
d41 1
a41 1
# The directives in this section affect the overall operation of Apache,
d66 1
a66 1
# The LockFile directive sets the path to the lockfile used when Apache
d72 1
a72 1
# the filename. 
d81 1
d85 2
a86 2
# this file will be  created when you run Apache) then you *must* ensure that
# no two invocations of Apache share the same scoreboard file.
d88 1
a88 1
ScoreBoardFile logs/apache_runtime_status
d93 2
a94 2
# now deprecated and not installed any more, as it is recommended that 
# all directives be kept in a single file for simplicity.  
d125 1
a125 1
# server processes you need, Apache dynamically adapts to the load it
d134 1
a134 2
# spares die off.  The default values in httpd.conf-dist are probably OK
# for most sites.
d157 1
a157 1
# as to avoid problems after prolonged use when Apache (and maybe the
d165 1
a165 1
# Listen: Allows you to bind Apache to specific IP addresses and/or
d173 8
d192 1
a192 1
# have to place corresponding `LoadModule' lines at this location so the
d194 2
a195 2
# Please read the file README.DSO in the Apache 1.3 distribution for more
# details about the DSO mechanism and run `httpd -l' for the list of already
d206 1
a206 1
# LoadModule anon_auth_module	/usr/lib/apache/modules/mod_auth_anon.so
d209 1
a209 1
# LoadModule db_auth_module	/usr/lib/apache/modules/mod_auth_db.so
d212 1
a212 1
# LoadModule dbm_auth_module	/usr/lib/apache/modules/mod_auth_dbm.so
d215 1
a215 1
# LoadModule digest_auth_module	/usr/lib/apache/modules/mod_auth_digest.so
d218 1
a218 1
# LoadModule cern_meta_module	/usr/lib/apache/modules/mod_cern_meta.so
d221 1
a221 1
# LoadModule define_module	/usr/lib/apache/modules/mod_define.so
d224 1
a224 1
# LoadModule digest_module	/usr/lib/apache/modules/mod_digest.so
d227 1
a227 1
# LoadModule expires_module	/usr/lib/apache/modules/mod_expires.so
d230 1
a230 1
# LoadModule headers_module	/usr/lib/apache/modules/mod_headers.so
d233 1
a233 1
# LoadModule info_module		/usr/lib/apache/modules/mod_info.so
d236 1
a236 1
# LoadModule agent_log_module	/usr/lib/apache/modules/mod_log_agent.so
d239 1
a239 1
# LoadModule referer_log_module	/usr/lib/apache/modules/mod_log_referer.so
d242 1
a242 1
# LoadModule mime_magic_module	/usr/lib/apache/modules/mod_mime_magic.so
d244 1
a244 1
# mmap()ing of a statically configured list of frequently requested but 
d246 1
a246 1
# LoadModule mmap_static_module	/usr/lib/apache/modules/mod_mmap_static.so
d249 1
a249 1
# LoadModule rewrite_module	/usr/lib/apache/modules/mod_rewrite.so
d252 1
a252 1
# LoadModule speling_module	/usr/lib/apache/modules/mod_speling.so
d255 1
a255 1
# LoadModule unique_id_module	/usr/lib/apache/modules/mod_unique_id.so
d258 1
a258 1
# LoadModule usertrack_module	/usr/lib/apache/modules/mod_usertrack.so
d261 1
a261 1
# LoadModule vhost_alias_module	/usr/lib/apache/modules/mod_vhost_alias.so
d264 1
a264 1
# LoadModule proxy_module	/usr/lib/apache/modules/libproxy.so
d267 1
a267 1
# ExtendedStatus controls whether Apache will generate "full" status
d295 1
d297 1
a297 1
Port 80
d302 1
a302 1
##  When we also provide SSL we have to listen to the 
d306 2
a307 2
Listen 80
Listen 443
d312 1
a312 1
# httpd as root initially and it will switch.  
d319 1
a319 1
#  when the value of (unsigned)Group is above 60000; 
d321 1
a321 1
#  On OpenBSD, use user www, group www.
d338 1
a338 1
# Note: You cannot just invent host names and hope they work. The name you 
d345 5
a349 1
#ServerName new.host.name
d359 1
a359 1
# Each directory to which Apache has access, can be configured with respect
d361 1
a361 1
# directory (and its subdirectories). 
d363 2
a364 2
# First, we configure the "default" to be a very restrictive set of 
# permissions.  
d390 1
a390 1
    Options Indexes FollowSymLinks
d394 1
a394 1
# override. Can also be "All", or any combination of "Options", "FileInfo", 
d407 2
a408 2
# UserDir: The directory which is prepended onto a users username, within 
# which a users's web pages are looked for if a ~user request is received. 
d418 5
a422 1

d432 2
a433 1
#    AllowOverride FileInfo AuthConfig Limit
d439 1
a439 1
#    <Limit PUT DELETE PATCH PROPPATCH MKCOL COPY MOVE LOCK UNLOCK>
d442 1
a442 1
#    </Limit>
d449 1
a449 1
DirectoryIndex index.html
d465 4
a468 1
<Files .htaccess>
d471 1
d475 1
a475 1
# CacheNegotiatedDocs: By default, Apache sends "Pragma: no-cache" with each
d484 1
a484 1
# Apache needs to construct a self-referencing URL (a URL that refers back
d486 1
a486 1
# Port to form a "canonical" name.  With this setting off, Apache will
d490 1
a490 1
UseCanonicalName On
d508 1
d527 1
a527 1
# e.g., www.apache.org (on) or 204.62.129.132 (off).
d567 1
a567 1
CustomLog logs/access_log common
d580 1
a580 1
#CustomLog logs/access_log combined
d589 1
a589 1
ServerSignature On
d592 1
a592 1
# Aliases: Add here as many aliases as you need (with no limit). The format is 
d608 2
d611 1
a611 1
    Options MultiViews
d652 1
a652 1
IndexOptions FancyIndexing
d709 1
a709 5
# directory indexes. 
#
# The server will first look for name.html and include it if found.
# If name.html doesn't exist, the server will then look for name.txt
# and include it as plaintext if found.
d726 2
a727 2
AddEncoding x-compress Z
AddEncoding x-gzip gz
d732 59
a790 11
# it can understand.  Note that the suffix does not have to be the same
# as the language keyword --- those with documents in Polish (whose
# net-standard language code is pl) may wish to use "AddLanguage pl .po" 
# to avoid the ambiguity with the common suffix for perl scripts.
#
AddLanguage en .en
AddLanguage fr .fr
AddLanguage de .de
AddLanguage da .da
AddLanguage el .el
AddLanguage it .it
d795 2
a796 1
# Just list the languages in decreasing order of preference.
d798 1
a798 1
LanguagePriority en fr de
d804 1
a804 1
# For example, the PHP module (not part of the Apache distribution)
d808 3
d822 1
a822 1
#AddHandler cgi-script .cgi
d831 1
a831 1
# Uncomment the following line to enable Apache's send-asis HTTP file
d855 1
a855 1
# MetaDir: specifies the name of the directory in which Apache can find
d868 1
a868 1
# Customizable error response (Apache style)
d882 1
a882 1
#ErrorDocument 402 http://some.other_server.com/subscription_info.html
d907 7
d915 1
a915 1
# Change the ".your_domain.com" to match your domain to enable.
d921 1
a921 1
#    Allow from .your_domain.com
d927 1
a927 1
# Change the ".your_domain.com" to match your domain to enable.
d933 1
a933 13
#    Allow from .your_domain.com
#</Location>

#
# There have been reports of people trying to abuse an old bug from pre-1.1
# days.  This bug involved a CGI script distributed as a part of Apache.
# By uncommenting these lines you can redirect these attacks to a logging 
# script on phf.apache.org.  Or, you can record them yourself, using the script
# support/phf_abuse_log.cgi.
#
#<Location /cgi-bin/phf*>
#    Deny from all
#    ErrorDocument 403 http://phf.apache.org/phf_abuse_log.cgi
d980 4
d993 1
a993 1
# Almost any Apache directive may go into a VirtualHost container.
d995 6
a1000 6
#<VirtualHost ip.address.of.host.some_domain.com>
#    ServerAdmin webmaster@@host.some_domain.com
#    DocumentRoot /www/docs/host.some_domain.com
#    ServerName host.some_domain.com
#    ErrorLog logs/host.some_domain.com-error_log
#    CustomLog logs/host.some_domain.com-access_log common
d1018 1
a1018 1
AddType application/x-x509-ca-cert .crt
d1026 1
a1026 1
#   The filtering dialog program (`builtin' is a internal
d1031 2
a1032 2
#   Configure the SSL Session Cache: First either `none'
#   or `dbm:/path/to/file' for the mechanism to use and
d1039 1
a1039 1
#   SSL engine uses internally for inter-process synchronization. 
d1043 1
a1043 1
#   Configure one or more sources to seed the PRNG of the 
d1072 1
d1076 2
a1077 2
ServerName new.host.name
ServerAdmin you@@your.address
d1093 2
a1094 4
#   pass phrase.  Note that a kill -HUP will prompt again. A test
#   certificate can be generated with `make certificate' under
#   built time.
SSLCertificateFile    /etc/ssl/server.crt
d1099 1
a1099 1
SSLCertificateKeyFile /etc/ssl/private/server.key
d1108 11
a1118 2
#SSLCACertificatePath    /var/www/conf/ssl.crt
#SSLCACertificateFile    /var/www/conf/ssl.crt/ca-bundle.crt
d1145 1
a1145 1
#   FakeBasicAuth:
d1148 1
a1148 1
#     user name is the `one line' version of the client's X.509 certificate.
d1150 2
a1151 2
#     file needs this password: `xxj31ZMTZzkVA'.
#   ExportCertData:
d1157 7
a1163 1
#   CompatEnvVars:
d1165 41
a1205 3
#     to Apache-SSL 1.x, mod_ssl 2.0.x, Sioux 1.0 and Stronghold 2.x. Use this
#     to provide compatibility to existing CGI scripts.
#SSLOptions +FakeBasicAuth +ExportCertData +CompatEnvVars
d1210 2
a1211 2
CustomLog logs/ssl_request_log \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
d1213 1
a1213 1
</VirtualHost>                                  
a1215 1

@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@more httpd cleanup by the other bsd
@
text
@d1 1
a1 1
#	$OpenBSD: httpd.conf,v 1.19 2006/02/22 15:07:12 henning Exp $
a163 11
# MaxFOOPerChild: these directives set the current and hard rlimits for
# the child processes. Attempts to exceed them will cause the the OS to
# take appropriate action. See the setrlimit(2) and signal(3).
#
MaxCPUPerChild 0
MaxDATAPerChild 0
MaxNOFILEPerChild 0
MaxRSSPerChild 0
MaxSTACKPerChild 0

#
@


1.1.1.3
log
@Import security fixes from OpenBSD httpd:

Fix mod_status XSS CVE-2007-6388:
A flaw was found in the mod_status module. On sites where mod_status
is enabled and the status pages were publicly accessible, a cross-site
scripting attack is possible. Note that the server-status page is
not enabled by default and it is best practice to not make this
publicly available.

Fix mod_imap XSS CVE-2007-5000:
A flaw was found in the mod_imap module. On sites where mod_imap
is enabled and an imagemap file is publicly available, a cross-site
scripting attack is possible.

ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: httpd.conf,v 1.22 2008/01/25 09:59:57 sthen Exp $
a51 7
# ServerTokens is either Full, OS, Minimal, or ProductOnly.
# The values define what version information is returned in the
# Server header in HTTP responses.
#
# ServerTokens ProductOnly

#
a268 5
# Include extra module configuration files
#
Include /var/www/conf/modules/*.conf

#
a527 2
# Either a filename or the text "syslog:" followed by a facility
# name may be specified here.
a528 1
#ErrorLog syslog:daemon
d576 1
a576 1
# ServerSignature Off
d1102 1
@


