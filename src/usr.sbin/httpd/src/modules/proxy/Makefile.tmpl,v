head	1.3;
access;
symbols
	cvs-200803192230:1.1.1.2
	MIRBSD_10:1.3.0.2
	MIRBSD_10_BASE:1.3
	OPENBSD_4_0:1.1.1.2
	MIRBSD_9_BASE:1.2
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200512032330:1.1.1.1
	cvs-200507211800:1.1.1.1
	cvs-200504170300:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2007.02.08.20.32.40;	author tg;	state Exp;
branches;
next	1.2;
commitid	10045CB88F700758C7E;

1.2
date	2006.04.03.20.54.44;	author tg;	state Exp;
branches;
next	1.1;
commitid	10044318B8807B153A4;

1.1
date	2005.02.05.17.30.47;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.30.47;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.09.20.23.16.24;	author tg;	state Exp;
branches;
next	;
commitid	1004511CBCF7173CE64;


desc
@@


1.3
log
@missing recursion depth & targets
@
text
@
LIB=libproxy.$(LIBEXT)

OBJS=\
     mod_proxy.o \
     proxy_cache.o proxy_connect.o proxy_ftp.o proxy_http.o proxy_util.o
OBJS_PIC=\
     mod_proxy.lo \
     proxy_cache.lo proxy_connect.lo proxy_ftp.lo proxy_http.lo proxy_util.lo

all: lib

lib: $(LIB)

libproxy.a dummy: $(OBJS)
	rm -f $@@
	ar cr $@@ $(OBJS)
	$(RANLIB) $@@

libproxy.so: $(OBJS_PIC)
	rm -f $@@
	$(LD_SHLIB) $(LDFLAGS_SHLIB) -o $@@ $(OBJS_PIC) $(LIBS_SHLIB)

libproxy.dll: $(OBJS_PIC) mod_proxy.def 
	if [ "x$(OS)" = "xCygwin" ]; then \
	    rm -f $@@; \
	    if [ -f "$(SRCDIR)/$(SHCORE_IMPLIB)" ]; then \
	    $(LD_SHLIB) $(LDFLAGS_SHLIB) -o $*.dll $(OBJS_PIC) $(LIBS_SHLIB) \
	    $(SRCDIR)/$(SHCORE_IMPLIB) $(LIBS1); \
	    fi \
	else \
	    $(LD_SHLIB) $(LDFLAGS_SHLIB) -o $* $(OBJS_PIC) $(LIBS_SHLIB); \
	    emxbind -b -q -s -h0 -dmod_proxy.def $* && \
	    rm $*; \
	fi

.SUFFIXES: .o .lo .dll

.c.o:
	$(CC) -c $(INCLUDES) $(CFLAGS) $<

.c.lo:
	$(CC) -c $(INCLUDES) $(CFLAGS) $(CFLAGS_SHLIB) $< && mv $*.o $*.lo

clean:
	rm -f $(OBJS) $(OBJS_PIC) $(LIB)

distclean: clean
	-rm -f Makefile

# We really don't expect end users to use this rule.  It works only with
# gcc, and rebuilds Makefile.tmpl.  You have to re-run Configure after
# using it.
depend:
	cp Makefile.tmpl Makefile.tmpl.bak \
	    && sed -ne '1,/^# DO NOT REMOVE/p' Makefile.tmpl > Makefile.new \
	    && gcc -MM $(INCLUDES) $(CFLAGS) *.c >> Makefile.new \
	    && sed -e '1,$$s: $(INCDIR)/: $$(INCDIR)/:g' \
	           -e '1,$$s: $(OSDIR)/: $$(OSDIR)/:g' Makefile.new \
		> Makefile.tmpl \
	    && rm Makefile.new

#Dependencies

$(OBJS) $(OBJS_PIC): Makefile

# DO NOT REMOVE
mod_proxy.o: mod_proxy.c mod_proxy.h $(INCDIR)/httpd.h \
 $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
 $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
 $(INCDIR)/ap_ctype.h \
 $(INCDIR)/ap_alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
 $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
 $(INCDIR)/http_protocol.h $(INCDIR)/explain.h \
 $(INCDIR)/http_log.h $(INCDIR)/http_vhost.h \
 $(INCDIR)/http_request.h
proxy_cache.o: proxy_cache.c mod_proxy.h $(INCDIR)/httpd.h \
 $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
 $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
 $(INCDIR)/ap_ctype.h \
 $(INCDIR)/ap_alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
 $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
 $(INCDIR)/http_protocol.h $(INCDIR)/explain.h \
 $(INCDIR)/http_log.h $(INCDIR)/http_main.h \
 $(INCDIR)/util_date.h $(INCDIR)/multithread.h \
 $(INCDIR)/ap_md5.h
proxy_connect.o: proxy_connect.c mod_proxy.h $(INCDIR)/httpd.h \
 $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
 $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
 $(INCDIR)/ap_ctype.h \
 $(INCDIR)/ap_alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
 $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
 $(INCDIR)/http_protocol.h $(INCDIR)/explain.h \
 $(INCDIR)/http_log.h $(INCDIR)/http_main.h
proxy_ftp.o: proxy_ftp.c mod_proxy.h $(INCDIR)/httpd.h \
 $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
 $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
 $(INCDIR)/ap_ctype.h \
 $(INCDIR)/ap_alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
 $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
 $(INCDIR)/http_protocol.h $(INCDIR)/explain.h \
 $(INCDIR)/http_main.h $(INCDIR)/http_log.h
proxy_http.o: proxy_http.c mod_proxy.h $(INCDIR)/httpd.h \
 $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
 $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
 $(INCDIR)/ap_ctype.h \
 $(INCDIR)/ap_alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
 $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
 $(INCDIR)/http_protocol.h $(INCDIR)/explain.h \
 $(INCDIR)/http_log.h $(INCDIR)/http_main.h \
 $(INCDIR)/http_core.h $(INCDIR)/util_date.h
proxy_util.o: proxy_util.c mod_proxy.h $(INCDIR)/httpd.h \
 $(INCDIR)/ap_config.h $(INCDIR)/ap_mmn.h \
 $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h \
 $(INCDIR)/ap_ctype.h \
 $(INCDIR)/ap_alloc.h $(INCDIR)/buff.h $(INCDIR)/ap.h \
 $(INCDIR)/util_uri.h $(INCDIR)/http_config.h \
 $(INCDIR)/http_protocol.h $(INCDIR)/explain.h \
 $(INCDIR)/http_main.h $(INCDIR)/ap_md5.h \
 $(INCDIR)/multithread.h $(INCDIR)/http_log.h \
 $(INCDIR)/util_date.h
@


1.2
log
@large source cleanup from Daniel Ouellet, thanks a bunch!

md4 on binaries except apaci and *.a (ar(1) times, probably) unchanged
@
text
@d15 1
a15 1
libproxy.a: $(OBJS)
@


1.1
log
@Initial revision
@
text
@d71 1
a71 1
 $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
d80 1
a80 1
 $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
d90 1
a90 1
 $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
d98 1
a98 1
 $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
d106 1
a106 1
 $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
d115 1
a115 1
 $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h \
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@more httpd cleanup by the other bsd
@
text
@d71 1
a71 1
 $(INCDIR)/ap_ctype.h \
d80 1
a80 1
 $(INCDIR)/ap_ctype.h \
d90 1
a90 1
 $(INCDIR)/ap_ctype.h \
d98 1
a98 1
 $(INCDIR)/ap_ctype.h \
d106 1
a106 1
 $(INCDIR)/ap_ctype.h \
d115 1
a115 1
 $(INCDIR)/ap_ctype.h \
@

