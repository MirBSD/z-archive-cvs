head	1.7;
access;
symbols
	tg-ntpd-sigusr1-branch:1.5.0.4
	MIRBSD_10:1.5.0.2
	MIRBSD_10_BASE:1.5
	MIRBSD_9_BASE:1.2
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	cvs-200512032330:1.1.1.2
	cvs-200510270930:1.1.1.2
	cvs-200507211800:1.1.1.2
	cvs-200504291700:1.1.1.2
	cvs-200504141900:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2013.10.31.20.07.28;	author tg;	state Exp;
branches;
next	1.6;
commitid	1005272B7081B0E5655;

1.6
date	2010.07.03.18.33.56;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004C2F828601C66EBF;

1.5
date	2007.08.10.22.35.01;	author tg;	state Exp;
branches;
next	1.4;
commitid	10046BCE80C566B92F8;

1.4
date	2007.08.10.22.22.03;	author tg;	state Exp;
branches;
next	1.3;
commitid	10046BCE5054BBA756D;

1.3
date	2006.08.12.23.53.35;	author tg;	state Exp;
branches;
next	1.2;
commitid	10044DE6A0737B2F23F;

1.2
date	2005.07.26.12.40.45;	author tg;	state Exp;
branches;
next	1.1;
commitid	95b42e62f3df8e2;

1.1
date	2005.02.05.17.30.58;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.30.58;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.14.21.05.29;	author tg;	state Exp;
branches;
next	;


desc
@@


1.7
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@/*	$OpenBSD: log.c,v 1.7 2005/03/31 12:14:01 henning Exp $ */

/*
 * Copyright (c) 2007, 2013 Thorsten Glaser <tg@@mirbsd.de>
 * Copyright (c) 2003, 2004 Henning Brauer <henning@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER
 * IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <errno.h>
#include <stdarg.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <syslog.h>
#include <time.h>

#include "ntpd.h"

__RCSID("$MirOS: src/usr.sbin/ntpd/log.c,v 1.6 2010/07/03 18:33:56 tg Exp $");

int	 debug;

void	 logit(int, const char *, ...)
    __attribute__((__format__(__syslog__, 2, 3)))
    __attribute__((__format__(__printf__, 2, 3)))
    __attribute__((__nonnull__(2)));

void
log_init(int n_debug)
{
	extern char	*__progname;

	debug = n_debug;

	if (!debug)
		openlog(__progname, LOG_PID | LOG_NDELAY, LOG_DAEMON);

	tzset();
}

void
logit(int pri, const char *fmt, ...)
{
	va_list	ap;

	va_start(ap, fmt);
	vlog(pri, fmt, ap);
	va_end(ap);
}

void
vlog(int pri, const char *fmt, va_list ap)
{
	char	*nfmt;

	if (debug) {
		/* best effort in out of mem situations */
		if (asprintf(&nfmt, "%s\n", fmt) == -1) {
			vfprintf(stderr, fmt, ap);
			fprintf(stderr, "\n");
		} else {
			vfprintf(stderr, nfmt, ap);
			free(nfmt);
		}
		fflush(stderr);
	} else
		vsyslog(pri, fmt, ap);
}


void
log_warn(const char *emsg, ...)
{
	char	*nfmt;
	va_list	 ap;

	/* best effort to even work in out of memory situations */
	if (emsg == NULL)
		logit(LOG_CRIT, "%s", strerror(errno));
	else {
		va_start(ap, emsg);

		if (asprintf(&nfmt, "%s: %s", emsg, strerror(errno)) == -1) {
			/* we tried it... */
			vlog(LOG_CRIT, emsg, ap);
			logit(LOG_CRIT, "%s", strerror(errno));
		} else {
			vlog(LOG_CRIT, nfmt, ap);
			free(nfmt);
		}
		va_end(ap);
	}
}

void
log_warnx(const char *emsg, ...)
{
	va_list	 ap;

	va_start(ap, emsg);
	vlog(LOG_CRIT, emsg, ap);
	va_end(ap);
}

void
log_info(const char *emsg, ...)
{
	va_list	 ap;

	va_start(ap, emsg);
	vlog(LOG_INFO, emsg, ap);
	va_end(ap);
}

void
log_debug(const char *emsg, ...)
{
	va_list	 ap;

	if (debug) {
		va_start(ap, emsg);
		vlog(LOG_DEBUG, emsg, ap);
		va_end(ap);
	}
}

void
fatal(const char *emsg)
{
	if (emsg == NULL)
		logit(LOG_CRIT, "fatal: %s", strerror(errno));
	else
		if (errno)
			logit(LOG_CRIT, "fatal: %s: %s",
			    emsg, strerror(errno));
		else
			logit(LOG_CRIT, "fatal: %s", emsg);

	exit(1);
}

void
fatalx(const char *emsg)
{
	errno = 0;
	fatal(emsg);
}
@


1.6
log
@• put log_sockaddr() into a shared file (XXX share more rdate⇐⇒ntpd)
• make rdate -d output the destination IP sending packets to
@
text
@a0 1
/**	$MirOS: src/usr.sbin/ntpd/log.c,v 1.5 2007/08/10 22:35:01 tg Exp $ */
d4 1
a4 1
 * Copyright (c) 2007 Thorsten Glaser <tg@@mirbsd.de>
d30 1
a30 1
__RCSID("$MirOS: src/usr.sbin/ntpd/log.c,v 1.5 2007/08/10 22:35:01 tg Exp $");
d35 3
a37 3
    __attribute__((format (syslog, 2, 3)))
    __attribute__((format (printf, 2, 3)))
    __attribute__((nonnull (2)));
@


1.5
log
@• cast increases required alignment of target type
both in my code and henning's code ☺
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/ntpd/log.c,v 1.4 2007/08/10 22:22:03 tg Exp $ */
d31 1
a31 1
__RCSID("$MirOS: src/usr.sbin/ntpd/log.c,v 1.4 2007/08/10 22:22:03 tg Exp $");
a159 20

const char *
log_sockaddr(struct sockaddr *sa)
{
	static char	buf[NI_MAXHOST + 8];
	struct sockinet {
		u_char	si_len;
		u_char	si_family;
		u_char	si_port[2];
	} *si = (struct sockinet *)sa;
	u_short s_port;

	if (getnameinfo(sa, SA_LEN(sa), buf, MAXHOSTNAMELEN, NULL, 0,
	    NI_NUMERICHOST))
		return ("(unknown)");
	memcpy(&s_port, &si->si_port, sizeof (u_short));
	if (s_port && ntohs(s_port) != 123)
		snprintf(buf + strlen(buf), 8, "*%hu", ntohs(s_port));
	return (buf);
}
@


1.4
log
@new feature: use other UDP ports than 123 for peers or listening
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/ntpd/log.c,v 1.3 2006/08/12 23:53:35 tg Exp $ */
d31 1
a31 1
__RCSID("$MirOS: src/usr.sbin/ntpd/log.c,v 1.3 2006/08/12 23:53:35 tg Exp $");
d168 1
a168 1
		u_short	si_port;
d170 1
d175 3
a177 2
	if (si->si_port && ntohs(si->si_port) != 123)
		snprintf(buf + strlen(buf), 8, "*%hu", ntohs(si->si_port));
@


1.3
log
@__CRAZY=Yes cleanliness. Really crazy in this case. Use subset, gcc!
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/ntpd/log.c,v 1.2 2005/07/26 12:40:45 tg Exp $ */
d5 1
d31 1
a31 1
__RCSID("$MirOS: src/usr.sbin/ntpd/log.c,v 1.2 2005/07/26 12:40:45 tg Exp $");
d164 6
a169 1
	static char	buf[NI_MAXHOST];
d171 1
a171 1
	if (getnameinfo(sa, SA_LEN(sa), buf, sizeof(buf), NULL, 0,
d174 3
a176 2
	else
		return (buf);
@


1.2
log
@* merge OpenBSD
* clean up
* bring back not logging of minimal adjustments unless debug
* format spring cleanup
* passes __CRAZY build now
@
text
@d1 1
a1 1
/**	$MirOS$ */
d30 1
a30 1
__RCSID("$MirOS$");
d35 3
a37 1
    __attribute__((format (printf, 2, 3))) __attribute__((nonnull (2)));
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$OpenBSD: log.c,v 1.6 2004/07/12 09:22:38 dtucker Exp $ */
a19 5
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

a26 1
#include <unistd.h>
d30 3
a32 1
int	debug;
d34 2
a35 1
void	 logit(int, const char *, ...);
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@we like OpenNTPD so much we want to have current one
@
text
@d1 1
a1 1
/*	$OpenBSD: log.c,v 1.7 2005/03/31 12:14:01 henning Exp $ */
d19 5
d31 1
d35 1
a35 1
int	 debug;
@

