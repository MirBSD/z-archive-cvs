head	1.5;
access;
symbols
	tg-ntpd-sigusr1-branch:1.3.0.6
	MIRBSD_10:1.3.0.4
	MIRBSD_10_BASE:1.3
	MIRBSD_9_BASE:1.3
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3
	cvs-200512032330:1.1.1.2
	cvs-200510270930:1.1.1.2
	cvs-200507211800:1.1.1.1
	cvs-200504291700:1.1.1.1
	cvs-200504141900:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2013.10.31.20.07.28;	author tg;	state Exp;
branches;
next	1.4;
commitid	1005272B7081B0E5655;

1.4
date	2009.05.16.11.52.31;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004A0EA9117F520CB0;

1.3
date	2005.10.27.09.35.29;	author tg;	state Exp;
branches;
next	1.2;
commitid	30b343609f776f28;

1.2
date	2005.03.13.19.17.09;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.30.58;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.30.58;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.10.27.09.33.16;	author tg;	state Exp;
branches;
next	;
commitid	734143609eed10f3;


desc
@@


1.5
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@/*	$OpenBSD: ntp_msg.c,v 1.15 2005/09/24 00:32:03 dtucker Exp $ */

/*
 * Copyright © 2013
 *	Thorsten “mirabilos” Glaser <tg@@mirbsd.org>
 * Copyright (c) 2003, 2004 Henning Brauer <henning@@openbsd.org>
 * Copyright (c) 2004 Alexander Guy <alexander.guy@@andern.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER
 * IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <errno.h>

#include "ntpd.h"
#include "ntp.h"

__RCSID("$MirOS: src/usr.sbin/ntpd/ntp_msg.c,v 1.4 2009/05/16 11:52:31 tg Exp $");

int
ntp_getmsg(struct sockaddr *sa, char *p, ssize_t len, struct ntp_msg *msg)
{
	if (len != NTP_MSGSIZE_NOAUTH && len != NTP_MSGSIZE) {
		log_warnx("malformed packet received from %s",
		    log_sockaddr(sa));
		return (-1);
	}

#define	copyin(f,p)	memcpy(&(f), (p), sizeof(f)); (p) += sizeof(f)

	copyin(msg->status, p);
	copyin(msg->stratum, p);
	copyin(msg->ppoll, p);
	copyin(msg->precision, p);
	copyin(msg->rootdelay.int_parts, p);
	copyin(msg->rootdelay.fractions, p);
	copyin(msg->dispersion.int_parts, p);
	copyin(msg->dispersion.fractions, p);
	copyin(msg->refid, p);
	copyin(msg->reftime.int_partl, p);
	copyin(msg->reftime.fractionl, p);
	copyin(msg->orgtime.int_partl, p);
	copyin(msg->orgtime.fractionl, p);
	copyin(msg->rectime.int_partl, p);
	copyin(msg->rectime.fractionl, p);
	copyin(msg->xmttime.int_partl, p);
	copyin(msg->xmttime.fractionl, p);

	return (0);
}

int
ntp_sendmsg(int fd, struct sockaddr *sa, struct ntp_msg *msg, ssize_t len,
    int auth __attribute__((__unused__)))
{
	char		 buf[NTP_MSGSIZE];
	char		*p = buf;
	socklen_t	sa_len;

#define	copyout(p,f)	memcpy((p), &(f), sizeof(f)); p += sizeof(f)

	copyout(p, msg->status);
	copyout(p, msg->stratum);
	copyout(p, msg->ppoll);
	copyout(p, msg->precision);
	copyout(p, msg->rootdelay.int_parts);
	copyout(p, msg->rootdelay.fractions);
	copyout(p, msg->dispersion.int_parts);
	copyout(p, msg->dispersion.fractions);
	copyout(p, msg->refid);
	copyout(p, msg->reftime.int_partl);
	copyout(p, msg->reftime.fractionl);
	copyout(p, msg->orgtime.int_partl);
	copyout(p, msg->orgtime.fractionl);
	copyout(p, msg->rectime.int_partl);
	copyout(p, msg->rectime.fractionl);
	copyout(p, msg->xmttime.int_partl);
	copyout(p, msg->xmttime.fractionl);

	if (sa != NULL)
		sa_len = SA_LEN(sa);
	else
		sa_len = 0;

	if (sendto(fd, &buf, len, 0, sa, sa_len) != len) {
		if (errno == ENOBUFS || errno == EHOSTUNREACH ||
		    errno == ENETDOWN || errno == EHOSTDOWN) {
			/* logging is futile */
			return (-1);
		}
		log_warn("sendto");
		if (errno == EINVAL)
			return (-2);
		return (-1);
	}

	return (0);
}
@


1.4
log
@02-reconnect.dpatch by Kurt Roeckx <kurt@@roeckx.be>

DP: Reconnect after an EINVAL to make it work with dynamic IP addresses.
DP: (Closes: #392250)
@
text
@a0 1
/**	$MirOS: src/usr.sbin/ntpd/ntp_msg.c,v 1.3 2005/10/27 09:35:29 tg Exp $ */
d4 2
d31 1
a31 1
__RCSID("$MirOS: src/usr.sbin/ntpd/ntp_msg.c,v 1.3 2005/10/27 09:35:29 tg Exp $");
d67 1
a67 1
    int auth __attribute__((unused)))
@


1.3
log
@merge
@
text
@d1 1
a1 1
/**	$MirOS: src/usr.sbin/ntpd/ntp_msg.c,v 1.2 2005/03/13 19:17:09 tg Exp $ */
d30 1
a30 1
__RCSID("$MirOS: src/usr.sbin/ntpd/ntp_msg.c,v 1.2 2005/03/13 19:17:09 tg Exp $");
d104 2
@


1.2
log
@fast merge src/usr.sbin
@
text
@d1 2
a2 2
/**	$MirOS$ */
/*	$OpenBSD: ntp_msg.c,v 1.14 2004/12/14 06:27:13 dtucker Exp $ */
d30 1
a30 1
__RCSID("$MirOS$");
d33 1
a33 1
ntp_getmsg(char *p, ssize_t len, struct ntp_msg *msg)
d36 2
a37 1
		log_warnx("malformed packet received");
@


1.1
log
@Initial revision
@
text
@d1 1
d30 2
d65 1
a65 1
    int auth)
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@current OpenNTPD
@
text
@d1 1
a1 1
/*	$OpenBSD: ntp_msg.c,v 1.15 2005/09/24 00:32:03 dtucker Exp $ */
d30 1
a30 1
ntp_getmsg(struct sockaddr *sa, char *p, ssize_t len, struct ntp_msg *msg)
d33 1
a33 2
		log_warnx("malformed packet received from %s",
		    log_sockaddr(sa));
@

