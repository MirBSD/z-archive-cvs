head	1.10;
access;
symbols
	MIRBSD_10:1.6.0.2
	MIRBSD_10_BASE:1.6
	MIRBSD_9_BASE:1.4
	MIRBSD_8:1.4.0.2
	MIRBSD_8_BASE:1.4
	cvs-200507211800:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2009.07.18.14.09.06;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004A61D73A7953CBB8;

1.9
date	2008.12.10.18.06.07;	author tg;	state Exp;
branches;
next	1.8;
commitid	100494005235071EEB4;

1.8
date	2008.05.23.13.43.06;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004836C9FC3A7E257E;

1.7
date	2008.03.23.15.32.28;	author tg;	state Exp;
branches;
next	1.6;
commitid	10047E6776205F08437;

1.6
date	2007.01.18.23.55.01;	author tg;	state Exp;
branches;
next	1.5;
commitid	10045B008DE7D7A0132;

1.5
date	2006.08.09.14.32.30;	author tg;	state Exp;
branches;
next	1.4;
commitid	10044D9F20918A35032;

1.4
date	2005.09.23.09.26.09;	author tg;	state Exp;
branches;
next	1.3;
commitid	15f4333ca27b342;

1.3
date	2005.07.24.16.34.33;	author tg;	state Exp;
branches;
next	1.2;
commitid	738042e3c32f68ae;

1.2
date	2005.03.06.19.05.54;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.22.11;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.22.11;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.20.45.37;	author tg;	state Exp;
branches;
next	;
commitid	560042e0092f571e;


desc
@@


1.10
log
@prevent data corruption from /etc/security’s automated backup cronjob
by using “MirSecuCron” as RCS ID for these and preventing it from ex-
panding any of the default keywords

also, add RCS IDs to almost all configuration files and enhance the
default changelist file
@
text
@# $MirSecuCron$
# $MirOS: src/etc/rc.local,v 1.9 2008/12/10 18:06:07 tg Exp $
# $OpenBSD: rc.local,v 1.38 2005/03/29 21:41:59 uwe Exp $

# site-specific startup actions, daemons, and other things which
# can be done AFTER your system goes into securemode.  For actions
# which should be done BEFORE your system has gone into securemode
# please see /etc/rc.securelevel

# site-specific startup actions, daemons which can be run
# Add your local startup actions to this file

echo -n 'starting local daemons:'

if [[ -x /usr/mpkg/sbin/cfsd ]]; then
	if ps auxc | grep -q '^ *root .* mountd$'; then
		echo -n ' cfsd';	/usr/mpkg/sbin/cfsd >/dev/null 2>&1
		mount -o port=3049,nfsv2,intr localhost:/null /crypt
	else
		echo -n ' cfsd (failed, no mountd running)'
	fi
fi

#if [ -x /usr/mpkg/sbin/snmpd ]; then
#	echo -n ' snmpd';	/usr/mpkg/sbin/snmpd
#fi

if [[ -x /usr/mpkg/bin/svscanboot ]]; then
	echo -n ' daemontools'
	mksh -T- /usr/mpkg/bin/svscanboot
fi

echo '.'
@


1.9
log
@use relative paths to mksh
@
text
@d1 2
a2 2
# $Id$
# $MirOS: src/etc/rc.local,v 1.8 2008/05/23 13:43:06 tg Exp $
@


1.8
log
@use mksh -T- ipv pgrphack
@
text
@d2 1
a2 1
# $MirOS: src/etc/rc.local,v 1.7 2008/03/23 15:32:28 tg Exp $
d30 1
a30 1
	/bin/mksh -T- /usr/mpkg/bin/svscanboot
@


1.7
log
@help dis-associating DJB dæmontools from the controlling tty (console):
the installation instructions use the C shell, which we don’t have; I had
used a double-fork but that’s not enough; mksh doesn’t do setsid() except
when using the ‘-T’ option, but that only works with TIOCSCTTY-able devi-
ces, which /dev/null is not (XXX this may be changed in mksh); pgrphack
does the setsid(2) but neither the fork nor the fd close or chdir("/"),
but that doesn’t matter as we run in / anyway, svscanboot closes its fds,
and we can just fork for pgrphack once (twice isn’t needed in mbsd).

XXX ① allow mksh -T /dev/null -c foo
XXX ② this is an MFC candidate
@
text
@d2 1
a2 1
# $MirOS: src/etc/rc.local,v 1.6 2007/01/18 23:55:01 tg Exp $
d30 1
a30 1
	/usr/mpkg/bin/pgrphack /usr/mpkg/bin/svscanboot &
@


1.6
log
@revert most of the >&- stuff, some apps don't work correctly then
@
text
@d2 1
a2 1
# $MirOS: src/etc/rc.local,v 1.5 2006/08/09 14:32:30 tg Exp $
d30 1
a30 1
	( /usr/mpkg/bin/svscanboot & )
@


1.5
log
@a little "shell KNF", >/dev/null -> >&-, etc.
@
text
@d2 1
a2 1
# $MirOS: src/etc/rc.local,v 1.4 2005/09/23 09:26:09 tg Exp $
d17 1
a17 1
		echo -n ' cfsd';	/usr/mpkg/sbin/cfsd >&- 2>&-
@


1.4
log
@occurences of /usr/local without /usr/mpkg
which were not yet noticed by bsiegert@@
but need to be changed for new MirPorts default
@
text
@d2 1
a2 1
# $MirOS: src/etc/rc.local,v 1.3 2005/07/24 16:34:33 tg Exp $
d17 1
a17 1
		echo -n ' cfsd';	/usr/mpkg/sbin/cfsd >/dev/null 2>&1
d19 1
a19 1
	  else
@


1.3
log
@merge
@
text
@d2 1
a2 1
# $MirOS: src/etc/rc.local,v 1.2 2005/03/06 19:05:54 tg Exp $
d15 1
a15 1
if [[ -x /usr/local/sbin/cfsd ]]; then
d17 1
a17 1
		echo -n ' cfsd';	/usr/local/sbin/cfsd >/dev/null 2>&1
d24 2
a25 2
#if [ -x /usr/local/sbin/snmpd ]; then
#	echo -n ' snmpd';	/usr/local/sbin/snmpd
d28 1
a28 1
if [[ -x /usr/local/bin/svscanboot ]]; then
d30 1
a30 1
	( /usr/local/bin/svscanboot & )
@


1.2
log
@merge src/etc minus generated files
@
text
@d1 3
a3 3
#	$Id$
#	$MirOS$
#	$OpenBSD: rc.local,v 1.35 2004/04/07 19:23:39 david Exp $
d11 1
a11 1
# Add your local changes additions to this file
d17 1
a17 1
		echo -n ' cfsd';        /usr/local/sbin/cfsd >/dev/null 2>&1
@


1.1
log
@Initial revision
@
text
@d1 2
d15 1
a15 17
# run ntpdate prior to ntpd
if [ $securelevel -le 1 -a X"${ntpdate_flags}" != X"NO" \
    -a -x /usr/local/sbin/ntpdate ]; then
	echo -n ' ntpdate'
	/usr/local/sbin/ntpdate -b ${ntpdate_flags} >/dev/null
fi

if [ X"${ntpd}" == X"YES" -a -x /usr/local/sbin/ntpd \
    -a -e /etc/ntp.conf ]; then
	ntpd_flags="-p /var/run/ntpd.pid"
	if [ $securelevel -ge 1 ]; then
		ntpd_flags="${ntpd_flags} -x"
	fi
	echo -n ' ntpd';       /usr/local/sbin/ntpd ${ntpd_flags}
fi

if [ -x /usr/local/sbin/cfsd ]; then
d19 1
a19 1
	else
d28 5
a33 6

# Netatalk stuff
#if [ -f /etc/netatalk/rc.atalk ]; then
#	. /etc/netatalk/rc.atalk
#fi

@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d1 1
a1 1
#	$OpenBSD: rc.local,v 1.38 2005/03/29 21:41:59 uwe Exp $
d9 1
a9 1
# Add your local startup actions to this file
d13 16
d31 1
a31 1
		echo -n ' cfsd';	/usr/local/sbin/cfsd >/dev/null 2>&1
@

