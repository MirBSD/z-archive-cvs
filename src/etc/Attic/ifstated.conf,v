head	1.2;
access;
symbols
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200507211800:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2006.11.17.13.58.12;	author tg;	state dead;
branches;
next	1.1;
commitid	100455DC0064647DDB1;

1.1
date	2005.02.05.17.22.11;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.22.11;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.20.45.34;	author tg;	state Exp;
branches;
next	;
commitid	560042e0092f571e;


desc
@@


1.2
log
@ifstated is obsolete
@
text
@# $OpenBSD: ifstated.conf,v 1.4 2004/04/28 01:01:27 deraadt Exp $
# This is a sample config for a pair of firewalls with two interfaces
#
# carp0 and carp1 have ip addresses on 192.168.3.0/24 and 192.168.6.0/24
# respectively.

# net.inet.carp.preempt must be enabled (set to 1) for this to work correctly.

# Uncomment one of the following lines to force primary/backup status.
# init-state primary
# init-state backup

carp_up = "((carp0 link up) and (carp1 link up))"
carp_down = "((! carp0 link up) and (! carp1 link up))"
carp_sync = "((carp0 link up and carp1 link up) or \
    ((!carp0 link up) and (!carp1 link up)))"

# The "net" addresses are other addresses which can be used to determine
# whether we have connectivity. Make sure the hosts are always up, or
# test multiple ip's, 'or'-ing the tests.
net = '( "ping -q -c 1 -w 1 192.168.6.8 > /dev/null" every 10 and \
    "ping -q -c 1 -w 1 192.168.3.8 > /dev/null" every 10)'

# The peer addresses below are the real ip addresses of the OTHER firewall
peer = '( "ping -q -c 1 -w 1 192.168.6.7 > /dev/null" every 10 and \
    "ping -q -c 1 -w 1 192.168.3.7 > /dev/null" every 10)'

state auto {
	if $carp_up {
		set-state primary
	}
	if $carp_down {
		set-state backup
	}
}

state primary {
	init {
		run "ifconfig carp0 advskew 10"
		run "ifconfig carp1 advskew 10"
	}
        if ! $net {
                set-state demoted
        }
}

state demoted {
	init {
		run "ifconfig carp0 advskew 254"
		run "ifconfig carp1 advskew 254"
	}
        if $net {
                set-state primary
        }
}

state promoted {
	init {
		run "ifconfig carp0 advskew 0"
		run "ifconfig carp1 advskew 0"
	}
	if $peer or ! $net {
		set-state backup
	}
}

state backup {
	init {
		run "ifconfig carp0 advskew 100"
		run "ifconfig carp1 advskew 100"
	}
	# The "sleep 5" below is a hack to dampen the $carp_sync when we come
        # out of promoted state. Thinking about the correct fix...
	if ! $carp_sync and $net and "sleep 5" every 10 {
		if (! $carp_sync) and $net {
			set-state promoted
		}
	}
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d1 1
a1 1
# $OpenBSD: ifstated.conf,v 1.6 2005/02/07 06:08:10 david Exp $
d13 4
a16 4
carp_up = "carp0.link.up && carp1.link.up"
carp_down = "!carp0.link.up && !carp1.link.up"
carp_sync = "carp0.link.up && carp1.link.up || \
    !carp0.link.up && !carp1.link.up"
d21 1
a21 1
net = '( "ping -q -c 1 -w 1 192.168.6.8 > /dev/null" every 10 && \
d25 1
a25 1
peer = '( "ping -q -c 1 -w 1 192.168.6.7 > /dev/null" every 10 && \
d29 1
a29 1
	if $carp_up
d31 2
a32 1
	if $carp_down
d34 1
d42 3
a44 2
	if ! $net
		set-state demoted
d52 3
a54 2
	if $net
		set-state primary
d62 1
a62 1
	if $peer || ! $net
d64 1
d73 3
a75 3
	# out of promoted state. Thinking about the correct fix...
	if ! $carp_sync && $net && "sleep 5" every 10
		if ! $carp_sync && $net
d77 2
@

