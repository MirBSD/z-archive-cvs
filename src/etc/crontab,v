head	1.33;
access;
symbols
	MIRBSD_10:1.25.0.2
	MIRBSD_10_BASE:1.25
	MIRBSD_9_BASE:1.8
	MIRBSD_8:1.5.0.2
	MIRBSD_8_BASE:1.5
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.33
date	2015.10.06.15.05.43;	author tg;	state Exp;
branches;
next	1.32;
commitid	1005613E34754F9CB63;

1.32
date	2009.11.28.13.01.34;	author tg;	state Exp;
branches;
next	1.31;
commitid	1004B111F2052C06DA3;

1.31
date	2009.08.16.13.36.18;	author tg;	state Exp;
branches;
next	1.30;
commitid	1004A880B06761D7EFE;

1.30
date	2009.08.13.19.43.28;	author tg;	state Exp;
branches;
next	1.29;
commitid	1004A846CEF07CEAD3E;

1.29
date	2009.07.18.14.09.00;	author tg;	state Exp;
branches;
next	1.28;
commitid	1004A61D73A7953CBB8;

1.28
date	2009.03.29.13.04.15;	author tg;	state Exp;
branches;
next	1.27;
commitid	10049CF71B654F9EF54;

1.27
date	2008.12.10.18.06.05;	author tg;	state Exp;
branches;
next	1.26;
commitid	100494005235071EEB4;

1.26
date	2008.03.27.13.48.26;	author tg;	state Exp;
branches;
next	1.25;
commitid	10047EBA5A25F1AA7E1;

1.25
date	2007.09.28.20.46.54;	author tg;	state Exp;
branches;
next	1.24;
commitid	10046FD684B204757B3;

1.24
date	2007.08.19.12.26.54;	author tg;	state Exp;
branches;
next	1.23;
commitid	10046C837257C4596A9;

1.23
date	2007.08.03.20.14.01;	author tg;	state Exp;
branches;
next	1.22;
commitid	10046B38C625BD1C0B3;

1.22
date	2007.06.16.22.57.29;	author tg;	state Exp;
branches;
next	1.21;
commitid	10046746ABA340A1476;

1.21
date	2007.06.16.22.36.48;	author tg;	state Exp;
branches;
next	1.20;
commitid	10046746581272CFCA8;

1.20
date	2007.04.26.01.48.59;	author tg;	state Exp;
branches;
next	1.19;
commitid	1004630050E48228756;

1.19
date	2007.04.17.22.32.42;	author tg;	state Exp;
branches;
next	1.18;
commitid	10046254B016F1B38C7;

1.18
date	2007.03.09.13.05.10;	author tg;	state Exp;
branches;
next	1.17;
commitid	10045F15B4849447B32;

1.17
date	2007.03.01.22.59.47;	author tg;	state Exp;
branches;
next	1.16;
commitid	10045E75ADF486D44ED;

1.16
date	2007.02.17.02.43.17;	author tg;	state Exp;
branches;
next	1.15;
commitid	10045D66B9365BB4A7A;

1.15
date	2007.02.02.16.45.10;	author tg;	state Exp;
branches;
next	1.14;
commitid	10045C36A7B5DB2058E;

1.14
date	2006.11.25.01.45.29;	author tg;	state Exp;
branches;
next	1.13;
commitid	1004567A041552EBC32;

1.13
date	2006.11.24.03.03.50;	author tg;	state Exp;
branches;
next	1.12;
commitid	1004566611907BFA656;

1.12
date	2006.10.24.10.09.49;	author tg;	state Exp;
branches;
next	1.11;
commitid	100453DE6676AE0A263;

1.11
date	2006.10.04.01.55.30;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004523148B1A81E119;

1.10
date	2006.08.16.18.46.14;	author tg;	state Exp;
branches;
next	1.9;
commitid	10044E367FF357E2D31;

1.9
date	2006.06.27.18.04.43;	author tg;	state Exp;
branches;
next	1.8;
commitid	10044A17343068F49C7;

1.8
date	2006.04.08.23.41.33;	author tg;	state Exp;
branches;
next	1.7;
commitid	10044384A0305B997E5;

1.7
date	2006.01.11.21.06.20;	author tg;	state Exp;
branches;
next	1.6;
commitid	10043C5735166485B15;

1.6
date	2006.01.11.21.04.28;	author tg;	state Exp;
branches;
next	1.5;
commitid	10043C572EE7190F4C3;

1.5
date	2005.08.14.13.21.32;	author tg;	state Exp;
branches;
next	1.4;
commitid	708f42ff4553ff8f;

1.4
date	2005.08.05.19.28.03;	author tg;	state Exp;
branches;
next	1.3;
commitid	4642f3bdc50f8c;

1.3
date	2005.07.07.13.39.22;	author tg;	state Exp;
branches;
next	1.2;
commitid	331742cd306446f9;

1.2
date	2005.03.06.19.05.53;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.22.11;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.22.11;	author tg;	state Exp;
branches;
next	;


desc
@@


1.33
log
@pre-fill MirSecuCron in correct width, at least for all that could be
affected during a run (I think I got them all)
@
text
@#
#
#
# $MirSecuCron: var_cron_tabs_root 0.0 0000/00/00 00:00:00 root Backup $
# $MirOS: src/etc/crontab,v 1.32 2009/11/28 13:01:34 tg Exp $
# $OpenBSD: crontab,v 1.15 2007/02/27 16:04:16 beck Exp $
#
# /var/cron/tabs/root - root's crontab
#
SHELL=/bin/mksh
PATH=/bin:/sbin:/usr/bin:/usr/sbin
HOME=/var/log
#
#minute	hour	mday	month	wday	command
#
# sendmail clientmqueue runner
35	*/3	*	*	*	/usr/bin/nice /usr/sbin/sendmail -L sm-msp-queue -Ac -q
#
# rotate log files every hour, if necessary
0	*	*	*	*	/usr/bin/nice -n 5 /usr/bin/newsyslog
# send log file notifications, if necessary
#1-59	*	*	*	*	/usr/bin/newsyslog -m
#
# do daily/weekly/monthly maintenance
@@reboot					/usr/bin/nice -n 15 /bin/mksh /etc/cronrun -l anacron
30	1	*	*	*	/bin/mksh /etc/cronrun -t20 daily
30	3	*	*	6	/bin/mksh /etc/cronrun -t60 weekly
30	5	1	*	*	/bin/mksh /etc/cronrun -t90 monthly
#0	*	*	*	*	/usr/libexec/spamd-setup
#
# store random seed to disc every three hours
# add hardware sensors etc. to pool twice an hour
57	*/3	*	*	*	/usr/bin/nice -n -19 /usr/libexec/randshuffle
14,44	*	*	*	*	(/bin/dd if=/dev/prandom bs=1 count=1; /bin/sleep $(/usr/bin/jot -r 1 30 90); /bin/dd if=/dev/arandom bs=1 count=1; /sbin/sysctl -a; /bin/ps -akwwx -o "$(/bin/ps -L)"; /bin/ps -aexwwo pid,args; /bin/ps -axwwo pid,args) 2>&1 | /bin/cksum -ba cksum -a md4 -a rmd160 -a sfv -a sha384 -a tiger -a adler32 -a sum >/dev/wrandom
#
# pull random bytes from the 'net (useful for headless servers, but insecure)
#11	0,12	*	*	*	(/bin/sleep $(/usr/bin/jot -r 1 60 900); /usr/bin/time -l /usr/bin/ftp -Vo - http://www.randomnumbers.info/cgibin/wqrng.cgi?amount=80\&limit=1024) 2>&1 | /bin/cksum -ba sha512 -a sfv -a cdb -a suma -a rmd160 >/dev/wrandom
#31	4,16	*	*	*	(/bin/sleep $(/usr/bin/jot -r 1 60 900); /usr/bin/time -l /usr/bin/ftp -mvo /dev/urandom https://www.fourmilab.ch/cgi-bin/Hotbits?nbytes=64\&fmt=bin) 2>&1 | /bin/cksum -ba suma >/dev/wrandom
#51	8,20	*	*	*	(/bin/sleep $(/usr/bin/jot -r 1 60 900); /usr/bin/time -l /usr/bin/ftp -mvo /dev/urandom https://www.random.org/cgi-bin/randbyte?nbytes=64\&format=f) 2>&1 | /bin/cksum -ba suma >/dev/wrandom
@


1.32
log
@run anacron nice’d to 15 since daily/weekly/monthly normally run at times
when people don’t use the system, as to not disturb regular use
@
text
@d4 2
a5 2
# $MirSecuCron$
# $MirOS: src/etc/crontab,v 1.31 2009/08/16 13:36:18 tg Exp $
@


1.31
log
@• random.org has https now (yes, randbyte API is deprecated, but new API
  doesn’t offer an octet stream)
• tweak randomnumbers.info input and output post-processing bit count
@
text
@d5 1
a5 1
# $MirOS: src/etc/crontab,v 1.30 2009/08/13 19:43:28 tg Exp $
d25 1
a25 1
@@reboot					/bin/mksh /etc/cronrun -l anacron
@


1.30
log
@the first three lines are overwritten by crontab(8)
@
text
@d5 1
a5 1
# $MirOS: src/etc/crontab,v 1.29 2009/07/18 14:09:00 tg Exp $
d37 1
a37 1
#11	0,12	*	*	*	(/bin/sleep $(/usr/bin/jot -r 1 60 900); /usr/bin/time -l /usr/bin/ftp -Vo - http://www.randomnumbers.info/cgibin/wqrng.cgi?amount=56\&limit=999) 2>&1 | /bin/cksum -ba sha512 -a sfv >/dev/wrandom
d39 1
a39 1
#51	8,20	*	*	*	(/bin/sleep $(/usr/bin/jot -r 1 60 900); /usr/bin/time -l /usr/bin/ftp -mvo /dev/urandom http://www.random.org/cgi-bin/randbyte?nbytes=64\&format=f) 2>&1 | /bin/cksum -ba suma >/dev/wrandom
@


1.29
log
@prevent data corruption from /etc/security’s automated backup cronjob
by using “MirSecuCron” as RCS ID for these and preventing it from ex-
panding any of the default keywords

also, add RCS IDs to almost all configuration files and enhance the
default changelist file
@
text
@d1 3
d5 1
a5 1
# $MirOS: src/etc/crontab,v 1.28 2009/03/29 13:04:15 tg Exp $
@


1.28
log
@• take care of dbins
• #!/bin/mksh shebang, in most places
• rcsid while here
@
text
@d1 2
a2 1
# $MirOS: src/etc/crontab,v 1.27 2008/12/10 18:06:05 tg Exp $
@


1.27
log
@use relative paths to mksh
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.26 2008/03/27 13:48:26 tg Exp $
d7 1
a7 1
PATH=/usr/dbin:/bin:/usr/dsbin:/sbin:/usr/bin:/usr/sbin
d21 4
a24 4
@@reboot					/usr/bin/env mksh /etc/cronrun -l anacron
30	1	*	*	*	/usr/bin/env mksh /etc/cronrun -t20 daily
30	3	*	*	6	/usr/bin/env mksh /etc/cronrun -t60 weekly
30	5	1	*	*	/usr/bin/env mksh /etc/cronrun -t90 monthly
@


1.26
log
@add /usr/dbin, /usr/dsbin to the path: usually before /bin and /sbin except
in the root+single user case (etc/root.profile, etc/profile + SINGLE)
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.25 2007/09/28 20:46:54 tg Exp $
d21 4
a24 4
@@reboot					/bin/mksh /etc/cronrun -l anacron
30	1	*	*	*	/bin/mksh /etc/cronrun -t20 daily
30	3	*	*	6	/bin/mksh /etc/cronrun -t60 weekly
30	5	1	*	*	/bin/mksh /etc/cronrun -t90 monthly
@


1.25
log
@reduce writes to /dev/arandom, do them where necessary only
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.24 2007/08/19 12:26:54 tg Exp $
d7 1
a7 1
PATH=/bin:/sbin:/usr/bin:/usr/sbin
@


1.24
log
@improve the variance of the hashes’ outputs
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.23 2007/08/03 20:14:01 tg Exp $
d34 2
a35 2
#31	4,16	*	*	*	(/bin/sleep $(/usr/bin/jot -r 1 60 900); /usr/bin/time -l /usr/bin/ftp -mvo /dev/arandom https://www.fourmilab.ch/cgi-bin/Hotbits?nbytes=64\&fmt=bin) 2>&1 | /bin/cksum -ba suma >/dev/wrandom
#51	8,20	*	*	*	(/bin/sleep $(/usr/bin/jot -r 1 60 900); /usr/bin/time -l /usr/bin/ftp -mvo /dev/arandom http://www.random.org/cgi-bin/randbyte?nbytes=64\&format=f) 2>&1 | /bin/cksum -ba suma >/dev/wrandom
@


1.23
log
@• cronrun: new option -t<hrs> to make the job run at most after <hrs> hours
• crontab: use cronrun -t for daily/weekly/monthly, to prevent at least the
  daily cronjob to be run twice on the same day (one anacron, one normally)
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.22 2007/06/16 22:57:29 tg Exp $
d30 1
a30 1
14,44	*	*	*	*	(/bin/sleep $(/usr/bin/jot -r 1 30 90); /sbin/sysctl -a; /bin/ps -akwwx -o "$(/bin/ps -L)"; /bin/ps -aexwwo pid,args; /bin/ps -axwwo pid,args) 2>&1 | /bin/cksum -ba cksum -a md4 -a rmd160 -a sfv -a sha384 -a tiger -a adler32 -a sum >/dev/wrandom
@


1.22
log
@add a script that runs daily/weekly/monthly on reboot + {15,30,45} minutes
if they haven't been run for 3 days over time

cronrun -l is for logging to syslog instead of mails, don't use ☺
cronrun -n is for recursive runs, don't use ☻
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.21 2007/06/16 22:36:48 tg Exp $
d22 3
a24 3
30	1	*	*	*	/bin/mksh /etc/cronrun daily
30	3	*	*	6	/bin/mksh /etc/cronrun weekly
30	5	1	*	*	/bin/mksh /etc/cronrun monthly
@


1.21
log
@• rc: run post-install script earlier
• rc, post-install script, installer: run the script in the foreground,
  move the “newaliases” call into it and let the script fork its own
  background processes off
• cronrun: new, to be used to run daily/weekly/monthly with locking
• post-install, crontab: use cronrun
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.20 2007/04/26 01:48:59 tg Exp $
d21 1
@


1.20
log
@put the sleeps into the subshell, so that its “Terminated.” output isn't seen
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.19 2007/04/17 22:32:42 tg Exp $
d21 3
a23 3
30	1	*	*	*	umask 077; /usr/bin/nice /bin/mksh /etc/daily 2>&1 | tee /var/log/daily.out | mail -s "$(/bin/hostname) daily output" root; /usr/bin/gzip -n9 /var/log/daily.out
30	3	*	*	6	umask 077; /usr/bin/nice /bin/mksh /etc/weekly 2>&1 | tee /var/log/weekly.out | mail -s "$(/bin/hostname) weekly output" root; /usr/bin/gzip -n9 /var/log/weekly.out
30	5	1	*	*	umask 077; /usr/bin/nice /bin/mksh /etc/monthly 2>&1 | tee /var/log/monthly.out | mail -s "$(/bin/hostname) monthly output" root; /usr/bin/gzip -n9 /var/log/monthly.out
@


1.19
log
@compress log files again, gzip(1) now (#10n14) uses arc4random_push(3) too
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.18 2007/03/09 13:05:10 tg Exp $
d29 1
a29 1
14,44	*	*	*	*	/bin/sleep $(/usr/bin/jot -r 1 30 90); (/sbin/sysctl -a; /bin/ps -akwwx -o "$(/bin/ps -L)"; /bin/ps -aexwwo pid,args; /bin/ps -axwwo pid,args) 2>&1 | /bin/cksum -ba cksum -a md4 -a rmd160 -a sfv -a sha384 -a tiger -a adler32 -a sum >/dev/wrandom
d32 3
a34 3
#11	0,12	*	*	*	/bin/sleep $(/usr/bin/jot -r 1 60 900); /usr/bin/time -l /usr/bin/ftp -Vo - http://www.randomnumbers.info/cgibin/wqrng.cgi?amount=56\&limit=999 2>&1 | /bin/cksum -ba sha512 -a sfv >/dev/wrandom
#31	4,16	*	*	*	/bin/sleep $(/usr/bin/jot -r 1 60 900); /usr/bin/time -l /usr/bin/ftp -mvo /dev/arandom https://www.fourmilab.ch/cgi-bin/Hotbits?nbytes=64\&fmt=bin 2>&1 | /bin/cksum -ba suma >/dev/wrandom
#51	8,20	*	*	*	/bin/sleep $(/usr/bin/jot -r 1 60 900); /usr/bin/time -l /usr/bin/ftp -mvo /dev/arandom http://www.random.org/cgi-bin/randbyte?nbytes=64\&format=f 2>&1 | /bin/cksum -ba suma >/dev/wrandom
@


1.18
log
@sync spamd upgrades and libpcap, and some /etc stuff; read
• http://undeadly.org/cgi?action=article&sid=20070304035922&mode=expanded
• http://www.openbsd.org/faq/current.html#20070226
for details. In short:
• change rc.conf[.local]
• spamd.conf now lies in /etc/mail/
• greylisting is on by default
• the database has a new format
• there's some database sync stuff
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.17 2007/03/01 22:59:47 tg Exp $
d21 3
a23 3
30	1	*	*	*	umask 077; /usr/bin/nice /bin/mksh /etc/daily 2>&1 | tee /var/log/daily.out | mail -s "$(/bin/hostname) daily output" root
30	3	*	*	6	umask 077; /usr/bin/nice /bin/mksh /etc/weekly 2>&1 | tee /var/log/weekly.out | mail -s "$(/bin/hostname) weekly output" root
30	5	1	*	*	umask 077; /usr/bin/nice /bin/mksh /etc/monthly 2>&1 | tee /var/log/monthly.out | mail -s "$(/bin/hostname) monthly output" root
@


1.17
log
@add process information to the sysctl information added to the pool
@
text
@d1 2
a2 2
# $MirOS: src/etc/crontab,v 1.16 2007/02/17 02:43:17 tg Exp $
# $OpenBSD: crontab,v 1.12 2003/03/10 01:05:28 deraadt Exp $
d21 3
a23 3
30	1	*	*	*	/usr/bin/nice /bin/mksh /etc/daily 2>&1 | tee /var/log/daily.out | mail -s "$(/bin/hostname) daily output" root
30	3	*	*	6	/usr/bin/nice /bin/mksh /etc/weekly 2>&1 | tee /var/log/weekly.out | mail -s "$(/bin/hostname) weekly output" root
30	5	1	*	*	/usr/bin/nice /bin/mksh /etc/monthly 2>&1 | tee /var/log/monthly.out | mail -s "$(/bin/hostname) monthly output" root
@


1.16
log
@* new entropy source www.random.org
* fourmilab now does https
* approximate entropy quality of randomnumbers.info better
* don't ask ftp(1) to retry
* distribute the calls equally over the day
* provide detailed measuring of download times to pushpool
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.15 2007/02/02 16:45:10 tg Exp $
d26 2
a27 1
# update random seed every three hours to disc; add hardware sensors to pool
d29 1
a29 1
14,44	*	*	*	*	/bin/sleep $(/usr/bin/jot -r 1 30 90); /sbin/sysctl -a 2>&1 | /bin/cksum -ba rmd160 -a md4 >/dev/wrandom
@


1.15
log
@make /dev/wrandom as alias for /dev/prandom but allow it to
be written to - I plan to emulate our entropy suite on other
OSes where /dev/prandom may be read-only emulated by pipes
or similar means
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.14 2006/11/25 01:45:29 tg Exp $
d31 3
a33 2
#9	*/5	*	*	*	/bin/sleep $(/usr/bin/jot -r 1 60 900); /usr/bin/ftp -r 120 -Vo - http://www.randomnumbers.info/cgibin/wqrng.cgi?amount=42\&limit=999 2>&1 | /bin/cksum -ba sha512 >/dev/wrandom
#31	*/7	*	*	*	/bin/sleep $(/usr/bin/jot -r 1 60 900); /usr/bin/ftp -r 120 -mvo /dev/arandom http://fourmilab.ch/cgi-bin/uncgi/Hotbits?nbytes=64\&fmt=bin 2>&1 | /bin/cksum -ba suma >/dev/wrandom
@


1.14
log
@remove $Id$, it makes no sense because first paragraph is stripped
by crontab -e anyway
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.13 2006/11/24 03:03:50 tg Exp $
d28 1
a28 1
14,44	*	*	*	*	/bin/sleep $(/usr/bin/jot -r 1 30 90); /sbin/sysctl -a 2>&1 | /bin/cksum -ba rmd160 -a md4 >/dev/prandom
d31 2
a32 2
#9	*/5	*	*	*	/bin/sleep $(/usr/bin/jot -r 1 60 900); /usr/bin/ftp -r 120 -Vo - http://www.randomnumbers.info/cgibin/wqrng.cgi?amount=42\&limit=999 2>&1 | /bin/cksum -ba sha512 >/dev/prandom
#31	*/7	*	*	*	/bin/sleep $(/usr/bin/jot -r 1 60 900); /usr/bin/ftp -r 120 -mvo /dev/arandom http://fourmilab.ch/cgi-bin/uncgi/Hotbits?nbytes=64\&fmt=bin 2>&1 | /bin/cksum -ba suma >/dev/prandom
@


1.13
log
@why only feed sysctl hw.* when we can use sysctl -a? :)
gives us kern stats, vm stats, etc.
@
text
@d1 1
a1 2
# $Id$
# $MirOS: src/etc/crontab,v 1.12 2006/10/24 10:09:49 tg Exp $
@


1.12
log
@add output from sysctl hw.eensors (and other stuff) hashed into prandom pool
every once in a while - done in userland as it's much more simple here
@
text
@d2 1
a2 1
# $MirOS: src/etc/crontab,v 1.11 2006/10/04 01:55:30 tg Exp $
d29 1
a29 1
14,44	*	*	*	*	/bin/sleep $(/usr/bin/jot -r 1 30 90); /sbin/sysctl hw | /bin/cksum -ba rmd160 >/dev/prandom
@


1.11
log
@add a random sleep delay before doing network connections via crontab
(affects commented-out sample only)
@
text
@d2 1
a2 1
# $MirOS: src/etc/crontab,v 1.10 2006/08/16 18:46:14 tg Exp $
d27 1
a27 1
# update random seed every three hours
d29 1
@


1.10
log
@prefer arc4random and don't htonl() its return value
@
text
@d2 1
a2 1
# $MirOS: src/etc/crontab,v 1.9 2006/06/27 18:04:43 tg Exp $
d31 2
a32 2
#9	*/5	*	*	*	/usr/bin/ftp -r 120 -Vo - http://www.randomnumbers.info/cgibin/wqrng.cgi?amount=42\&limit=999 2>&1 | /bin/cksum -ba sha512 >/dev/prandom
#31	*/7	*	*	*	/usr/bin/ftp -r 120 -mvo /dev/arandom http://fourmilab.ch/cgi-bin/uncgi/Hotbits?nbytes=64\&fmt=bin 2>&1 | /bin/cksum -ba suma >/dev/prandom
@


1.9
log
@now we have MI cksum -a suma, use it (better quality entropy here)
@
text
@d1 2
a2 1
# $MirOS: src/etc/crontab,v 1.8 2006/04/08 23:41:33 tg Exp $
d32 1
a32 1
#31	*/7	*	*	*	/usr/bin/ftp -r 120 -mvo /dev/urandom http://fourmilab.ch/cgi-bin/uncgi/Hotbits?nbytes=64\&fmt=bin 2>&1 | /bin/cksum -ba suma >/dev/prandom
@


1.8
log
@in the (commented out by default) examples for fetching "real random bits"
via http from the 'net, reduce amount of noise added to the pool
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.7 2006/01/11 21:06:20 tg Exp $
d31 1
a31 1
#31	*/7	*	*	*	/usr/bin/ftp -r 120 -mvo /dev/urandom http://fourmilab.ch/cgi-bin/uncgi/Hotbits?nbytes=64\&fmt=bin 2>&1 | /bin/cksum -ba rmd160 >/dev/prandom
@


1.7
log
@in (commented out) random number example, do right with the ftp(1) options
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.6 2006/01/11 21:04:28 tg Exp $
d30 2
a31 2
#9	*/5	*	*	*	/usr/bin/ftp -r 120 -Vo - http://www.randomnumbers.info/cgibin/wqrng.cgi?amount=42\&limit=999 >/dev/prandom 2>&1
#31	*/7	*	*	*	/usr/bin/ftp -r 120 -mvo /dev/urandom http://fourmilab.ch/cgi-bin/uncgi/Hotbits?nbytes=64\&fmt=bin 2>&1 | /bin/cksum -a sha384 >/dev/prandom
@


1.6
log
@unige.ch -> randomnumbers.info
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.5 2005/08/14 13:21:32 tg Exp $
d31 1
a31 1
#31	*/7	*	*	*	/usr/bin/ftp -r 120 -Vo /dev/urandom http://fourmilab.ch/cgi-bin/uncgi/Hotbits?nbytes=64\&fmt=bin 2>&1 | /bin/cksum -a sha384 >/dev/prandom
@


1.5
log
@pull fewer random bytes from the 'net if enabled
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.4 2005/08/05 19:28:03 tg Exp $
d30 1
a30 1
#9	*/5	*	*	*	/usr/bin/ftp -r 120 -Vo - http://qrng.unige.ch/examples/servlet/webqrng?nbRnd=42\&upLimit=999 2>&1 | /bin/cksum -a sha512 >/dev/prandom
@


1.4
log
@* call randshuffle without explicit shell, it's chmod +x anyway
* remove rdate stub; people, use ntpd
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.3 2005/07/07 13:39:22 tg Exp $
d30 2
a31 2
#9	*/5	*	*	*	/usr/bin/ftp -r 120 -Vo - http://qrng.unige.ch/examples/servlet/webqrng?nbRnd=120\&upLimit=999 2>&1 | /bin/cksum -a sha512 >/dev/prandom
#31	*/7	*	*	*	/usr/bin/ftp -r 120 -Vo /dev/urandom http://fourmilab.ch/cgi-bin/uncgi/Hotbits?nbytes=512\&fmt=bin 2>&1 | /bin/cksum -a sha384 >/dev/prandom
@


1.3
log
@/bin/sh and /bin/ksh -> /bin/mksh

This should cover most uses.
@
text
@d1 1
a1 1
# $MirOS: src/etc/crontab,v 1.2 2005/03/06 19:05:53 tg Exp $
a25 3
# sync time with an ntp server regularily
#53	*/3	*	*	*	/usr/bin/nice -n -20 /usr/sbin/rdate -ncav ptbtime2.ptb.de 2>&1 | /usr/bin/logger -t 'SNTP'
#
d27 1
a27 1
57	*/3	*	*	*	/usr/bin/nice -n -19 /bin/mksh /usr/libexec/randshuffle
@


1.2
log
@merge src/etc minus generated files
@
text
@d1 2
a2 2
#	$MirOS$
#	$OpenBSD: crontab,v 1.12 2003/03/10 01:05:28 deraadt Exp $
d6 1
a6 1
SHELL=/bin/ksh
d21 3
a23 3
30	1	*	*	*	/usr/bin/nice /bin/ksh /etc/daily 2>&1 | tee /var/log/daily.out | mail -s "$(/bin/hostname) daily output" root
30	3	*	*	6	/usr/bin/nice /bin/ksh /etc/weekly 2>&1 | tee /var/log/weekly.out | mail -s "$(/bin/hostname) weekly output" root
30	5	1	*	*	/usr/bin/nice /bin/ksh /etc/monthly 2>&1 | tee /var/log/monthly.out | mail -s "$(/bin/hostname) monthly output" root
d30 1
a30 1
57	*/3	*	*	*	/usr/bin/nice -n -19 /bin/ksh /usr/libexec/randshuffle
@


1.1
log
@Initial revision
@
text
@d1 1
d6 1
a6 1
SHELL=/bin/sh
d13 1
a13 1
*/30	*	*	*	*	/usr/sbin/sendmail -L sm-msp-queue -Ac -q
d16 1
a16 1
0	*	*	*	*	/usr/bin/newsyslog
d21 3
a23 3
30	1	*	*	*	/bin/sh /etc/daily 2>&1 | tee /var/log/daily.out | mail -s "`/bin/hostname` daily output" root
30	3	*	*	6	/bin/sh /etc/weekly 2>&1 | tee /var/log/weekly.out | mail -s "`/bin/hostname` weekly output" root
30	5	1	*	*	/bin/sh /etc/monthly 2>&1 | tee /var/log/monthly.out | mail -s "`/bin/hostname` monthly output" root
d25 10
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
