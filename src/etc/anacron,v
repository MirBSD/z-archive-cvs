head	1.10;
access;
symbols
	MIRBSD_10:1.4.0.2
	MIRBSD_10_BASE:1.4;
locks; strict;
comment	@# @;


1.10
date	2016.03.25.19.49.14;	author tg;	state Exp;
branches;
next	1.9;
commitid	10056F596401CDD6854;

1.9
date	2015.10.06.15.05.42;	author tg;	state Exp;
branches;
next	1.8;
commitid	1005613E34754F9CB63;

1.8
date	2009.07.18.14.08.59;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004A61D73A7953CBB8;

1.7
date	2009.03.29.13.04.15;	author tg;	state Exp;
branches;
next	1.6;
commitid	10049CF71B654F9EF54;

1.6
date	2008.12.10.18.06.05;	author tg;	state Exp;
branches;
next	1.5;
commitid	100494005235071EEB4;

1.5
date	2008.03.27.13.48.28;	author tg;	state Exp;
branches;
next	1.4;
commitid	10047EBA5A25F1AA7E1;

1.4
date	2008.03.03.20.00.14;	author tg;	state Exp;
branches;
next	1.3;
commitid	10047CC58E556C76AA1;

1.3
date	2007.07.11.09.07.31;	author tg;	state Exp;
branches;
next	1.2;
commitid	10046949DDC7E339954;

1.2
date	2007.06.26.23.20.59;	author tg;	state Exp;
branches;
next	1.1;
commitid	10046819F4B580DEB7A;

1.1
date	2007.06.16.22.57.29;	author tg;	state Exp;
branches;
next	;
commitid	10046746ABA340A1476;


desc
@@


1.10
log
@prepare most scripts for locale tracking; drop some TZ=UTC; use modern mksh
@
text
@#!/bin/mksh
# $MirSecuCron: etc_anacron 0.0 0000/00/00 00:00:00 root Backup $
# $MirOS: src/etc/anacron,v 1.9 2015/10/06 15:05:42 tg Exp $
#-
# Copyright (c) 2007, 2016
#	mirabilos <m@@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.
#-
# schedule daily/weekly/monthly cronjobs to run if we're 3 days over

export LC_ALL=C PATH=/bin:/usr/bin:/sbin:/usr/sbin
cd /
umask 077
typeset -i minutes=15

function schedule {
	typeset what=$1

	print scheduling job $what to run in $minutes minutes
	(
		sleep $((minutes * 60))
		print running scheduled $what cronjob
		mksh /etc/cronrun -n $what
		print job $what finished with return code $?
	) &
	let minutes+=15
}

function tryjob {
	typeset job=$1
	typeset -i days=$2

	if [[ -s /var/log/$job.out ]]; then
		rm -f /var/log/$job.out.gz
		gzip -n9 /var/log/$job.out
	fi
	if [[ -s /var/log/$job.out.gz ]]; then
		chown 0:0 /var/log/$job.out.gz
		chmod 0640 /var/log/$job.out.gz
		line=$(gzip -dc /var/log/$job.out.gz | head -n 1)
		if [[ $line = @@(RUNTIME=)+([0-9]).+([0-9]) ]]; then
			time=$(date +%J)
			line=${line##RUNTIME=}
			line=${line%%.*}
			time=${time%%.*}
			(( (line + days) > time )) || schedule $job
		else
			print no run-time found for job $job
			schedule $job
		fi
	else
		print no log file found for job $job
		schedule $job
	fi
}

tryjob daily 3
tryjob weekly 10
tryjob monthly 34
if (( minutes != 15 )); then
	wait
	print all jobs finished
fi
exit 0
@


1.9
log
@pre-fill MirSecuCron in correct width, at least for all that could be
affected during a run (I think I got them all)
@
text
@d3 1
a3 1
# $MirOS: src/etc/anacron,v 1.8 2009/07/18 14:08:59 tg Exp $
d5 2
a6 2
# Copyright (c) 2007
#	Thorsten Glaser <tg@@mirbsd.de>
d25 1
a25 1
export PATH=/bin:/usr/bin:/sbin:/usr/sbin
@


1.8
log
@prevent data corruption from /etc/security’s automated backup cronjob
by using “MirSecuCron” as RCS ID for these and preventing it from ex-
panding any of the default keywords

also, add RCS IDs to almost all configuration files and enhance the
default changelist file
@
text
@d2 2
a3 2
# $MirSecuCron$
# $MirOS: src/etc/anacron,v 1.7 2009/03/29 13:04:15 tg Exp $
@


1.7
log
@• take care of dbins
• #!/bin/mksh shebang, in most places
• rcsid while here
@
text
@d2 2
a3 2
# $Id$
# $MirOS: src/etc/anacron,v 1.6 2008/12/10 18:06:05 tg Exp $
@


1.6
log
@use relative paths to mksh
@
text
@d1 3
a3 2
#!/usr/bin/env mksh
# $MirOS: src/etc/anacron,v 1.5 2008/03/27 13:48:28 tg Exp $
d25 1
a25 1
export PATH=/usr/dbin:/bin:/usr/bin:/usr/dsbin:/sbin:/usr/sbin
@


1.5
log
@add /usr/dbin, /usr/dsbin to the path: usually before /bin and /sbin except
in the root+single user case (etc/root.profile, etc/profile + SINGLE)
@
text
@d1 2
a2 2
#!/bin/mksh
# $MirOS: src/etc/anacron,v 1.4 2008/03/03 20:00:14 tg Exp $
@


1.4
log
@fix perms of logfiles
@
text
@d2 1
a2 1
# $MirOS: src/etc/anacron,v 1.3 2007/07/11 09:07:31 tg Exp $
d24 1
a24 1
export PATH=/bin:/usr/bin:/sbin:/usr/sbin
@


1.3
log
@gzip(1) doesn't overwrite existing files, so• do it ourselves.
@
text
@d2 1
a2 1
# $MirOS: src/etc/anacron,v 1.2 2007/06/26 23:20:59 tg Exp $
d51 2
@


1.2
log
@schedule the jobs to run (somewhat – with a time slice like anacron) in
parallel; announce at startup which jobs run when; wait for them and say
we're finished once it's done
@
text
@d2 1
a2 1
# $MirOS: src/etc/anacron,v 1.1 2007/06/16 22:57:29 tg Exp $
d46 4
a49 1
	[[ -s /var/log/$job.out ]] && gzip -n9 /var/log/$job.out
@


1.1
log
@add a script that runs daily/weekly/monthly on reboot + {15,30,45} minutes
if they haven't been run for 3 days over time

cronrun -l is for logging to syslog instead of mails, don't use ☺
cronrun -n is for recursive runs, don't use ☻
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.20 2006/12/11 21:04:56 tg Rel $
d27 1
d32 8
a39 4
	print scheduling job $what to run in 15 minutes
	sleep $((15 * 60))
	mksh /etc/cronrun -n $what
	print job $what finished with return code $?
d57 1
d61 1
d68 4
@

