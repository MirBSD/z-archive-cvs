head	1.27;
access;
symbols
	MIRBSD_10:1.17.0.2
	MIRBSD_10_BASE:1.17
	MIRBSD_9_BASE:1.9
	MIRBSD_8:1.8.0.2
	MIRBSD_8_BASE:1.8
	cvs-200507211800:1.1.1.2
	cvs-200504291700:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.27
date	2018.02.15.02.47.07;	author tg;	state Exp;
branches;
next	1.26;
commitid	1005A84F4B80B7A72AC;

1.26
date	2016.03.25.19.49.14;	author tg;	state Exp;
branches;
next	1.25;
commitid	10056F596401CDD6854;

1.25
date	2015.10.06.15.05.43;	author tg;	state Exp;
branches;
next	1.24;
commitid	1005613E34754F9CB63;

1.24
date	2009.07.18.14.09.00;	author tg;	state Exp;
branches;
next	1.23;
commitid	1004A61D73A7953CBB8;

1.23
date	2009.03.29.13.04.15;	author tg;	state Exp;
branches;
next	1.22;
commitid	10049CF71B654F9EF54;

1.22
date	2008.12.10.18.15.11;	author tg;	state Exp;
branches;
next	1.21;
commitid	1004940073048C627B3;

1.21
date	2008.12.10.18.06.05;	author tg;	state Exp;
branches;
next	1.20;
commitid	100494005235071EEB4;

1.20
date	2008.07.09.23.32.02;	author tg;	state Exp;
branches;
next	1.19;
commitid	10048754A823D6E24B9;

1.19
date	2008.06.02.07.26.51;	author tg;	state Exp;
branches;
next	1.18;
commitid	1004843A0B01990F0B3;

1.18
date	2008.03.27.13.48.26;	author tg;	state Exp;
branches;
next	1.17;
commitid	10047EBA5A25F1AA7E1;

1.17
date	2007.06.18.01.58.17;	author tg;	state Exp;
branches
	1.17.2.1;
next	1.16;
commitid	1004675E6CD6D63F205;

1.16
date	2007.06.16.22.08.07;	author tg;	state Exp;
branches;
next	1.15;
commitid	10046745F5032CAC367;

1.15
date	2007.06.15.23.43.46;	author tg;	state Exp;
branches;
next	1.14;
commitid	1004673243117F9CB1F;

1.14
date	2006.10.07.22.21.40;	author tg;	state Exp;
branches;
next	1.13;
commitid	1004528287F5F4666B3;

1.13
date	2006.10.07.22.20.48;	author tg;	state Exp;
branches;
next	1.12;
commitid	1004528255103CE70A8;

1.12
date	2006.10.07.21.55.40;	author tg;	state Exp;
branches;
next	1.11;
commitid	100452822615699954B;

1.11
date	2006.09.19.03.21.23;	author tg;	state Exp;
branches;
next	1.10;
commitid	100450F62442D30085F;

1.10
date	2006.09.13.01.08.20;	author tg;	state Exp;
branches;
next	1.9;
commitid	100450759BA548292F2;

1.9
date	2006.05.15.12.13.56;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004468709107E8B3FD;

1.8
date	2005.11.18.21.21.23;	author tg;	state Exp;
branches;
next	1.7;
commitid	134c437e45e6b284;

1.7
date	2005.09.23.09.26.09;	author tg;	state Exp;
branches;
next	1.6;
commitid	15f4333ca27b342;

1.6
date	2005.07.07.13.39.22;	author tg;	state Exp;
branches;
next	1.5;
commitid	331742cd306446f9;

1.5
date	2005.04.29.18.58.14;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.29.18.34.47;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.10.22.50.34;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.06.19.05.54;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.22.11;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.17.2.1
date	2008.07.14.12.43.22;	author tg;	state Exp;
branches;
next	;
commitid	100487B49F66A33F1A5;

1.1.1.1
date	2005.02.05.17.22.11;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.17.05.17;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2007.06.16.22.05.23;	author tg;	state Exp;
branches;
next	;
commitid	10046745EB957F10B25;


desc
@@


1.27
log
@avoid cleaning lynx(1)’ temporary files, it might misbehave
@
text
@#!/bin/mksh
# $MirSecuCron: etc_daily 0.0 0000/00/00 00:00:00 root Backup $
# $MirOS: src/etc/daily,v 1.25 2015/10/06 15:05:43 tg Exp $
# $OpenBSD: daily,v 1.50 2005/03/17 18:16:52 millert Exp $
# From: @@(#)daily	8.2 (Berkeley) 1/25/94

umask 022
export LC_ALL=C PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/mpkg/bin
bak=/var/backups
cd /

if [[ -e /var/backups/_daily ]]; then
	if [[ $DAILYSUM = delete ]]; then
		rm -f /var/backups/_daily
	elif [[ $DAILYSUM != $(rmd160 </etc/daily) || \
	    $DAILYSUM != $(rmd160 </var/backups/_daily) ]]; then
		exec env DAILYSUM=delete mksh /etc/daily
	fi
fi
if [[ ! -e /var/backups/_daily ]]; then
	cp /etc/daily /var/backups/_daily
	exec env DAILYSUM=$(rmd160 </etc/daily) mksh /var/backups/_daily
fi
rm -f /var/backups/_security
cp /etc/security /var/backups/_security

print RUNTIME=$(date +%J)

print
sysctl -n kern.version
uptime

if [ -f /etc/daily.local ]; then
	echo ""
	echo "Running daily.local:"
	. /etc/daily.local
fi

TMP=$(mktemp /tmp/_daily.XXXXXXXXXX) || exit 1
OUT=$(mktemp /tmp/_security.XXXXXXXXXX) || {
	rm -f ${TMP}
	exit 1
}

trap 'rm -f $TMP $OUT; exit 1' 0 1 15

echo ""
echo "Removing scratch and junk files:"
if [ -d /tmp -a ! -L /tmp ]; then
	cd /tmp && {
	find -x . \
	    \( -path './ssh-*' -o -path ./.X11-unix -o -path ./.ICE-unix -o -path './lynx*' \) \
	    -prune -o -type f -atime +3 -execdir rm -f -- {} \;
	find -x . -type d -mtime +1 ! -path ./vi.recover ! -path ./.X11-unix \
	    ! -path ./.ICE-unix ! -path './lynx*' \
	    ! -name . -execdir rmdir -- {} \; >/dev/null 2>&1; }
fi

if [ -d /var/tmp -a ! -L /var/tmp ]; then
	cd /var/tmp && {
	find -x . \
	    \( -path './ssh-*' -o -path ./.X11-unix -o -path ./.ICE-unix \) \
	    -prune -o ! -type d -atime +7 -execdir rm -f -- {} \;
	find -x . -type d -mtime +1 ! -path ./vi.recover ! -path ./.X11-unix \
	    ! -path ./.ICE-unix ! -name . -execdir rmdir -- {} \; >/dev/null 2>&1; }
fi

# Additional junk directory cleanup would go like this:
#if [ -d /scratch -a ! -L /scratch ]; then
#	cd /scratch && {
#	find . ! -name . -atime +1 -execdir rm -f -- {} \;
#	find . ! -name . -type d -mtime +1 -execdir rmdir -- {} \; \
#	    >/dev/null 2>&1; }
#fi

if [ -d /var/rwho -a ! -L /var/rwho ] ; then
	cd /var/rwho && {
	find . ! -name . -mtime +7 -execdir rm -f -- {} \; ; }
fi

#find / \( ! -fstype local -o -fstype rdonly \
#		-o -fstype procfs \) -a -prune -o \
#	-name 'lost+found' -a -prune -o \
#	-name '*.core' -a -print -o \
#	\( -name '[#,]*' -o -name '.#*' -o -name a.out \
#	   -o -name '*.CKP' -o -name '.emacs_[0-9]*' \) \
#		-a -atime +3 -a -execdir rm -f -- {} \; -a -print >$TMP

if egrep -q '\.core$' $TMP; then
	echo ""
	echo "Possible core dumps:"
	egrep '\.core$' $TMP
fi

if egrep -qv '\.core$' $TMP; then
	echo ""
	echo "Deleted files:"
	egrep -v '\.core$' $TMP
fi

if [ -d /var/msgs -a ! -L /var/msgs ]; then
	msgs -c
fi

if [ -f /var/account/acct ]; then
	echo ""
	echo "Purging accounting records:"
	mv -f /var/account/acct.2 /var/account/acct.3
	mv -f /var/account/acct.1 /var/account/acct.2
	mv -f /var/account/acct.0 /var/account/acct.1
	cp -f /var/account/acct /var/account/acct.0
	sa -sq
fi

# If ROOTBACKUP is set to 1 in the environment, and
# if filesystem named /altroot is type ffs, on /dev/* and mounted "xx",
# use it as a backup root filesystem to be updated daily.
[[ $ROOTBACKUP = 1 ]] && {
	rootdev=`df -n / | awk '/^\/dev\// { print substr($1, 6) }'`
	rootbak=`awk '$2 == "/altroot" && $1 ~ /^\/dev\// && $3 == "ffs" && \
	    $4 ~ /xx/ \
		{ print substr($1, 6) }' < /etc/fstab`
	[[ -n $rootdev && -n $rootbak && $rootdev != $rootbak ]] && {
		sync
		echo ""
		echo "Backing up root filesystem:"
		echo "copying /dev/r$rootdev to /dev/r$rootbak"
		dd if=/dev/r$rootdev of=/dev/r$rootbak bs=16b seek=1 skip=1 \
			conv=noerror
		fsck -y /dev/r$rootbak
	}
}

echo ""
echo "Current contents of persistent temporary directory:"
echo ""
ls -lao /var/tmp/

# Rotation of mail log now handled automatically by cron and 'newsyslog'

echo ""
echo "Checking subsystem status:"

whence -p svstat >/dev/null && for f in /service/*; do
	[[ -d $f || -h $f ]] || break
	echo ""
	echo "supervise:"
	svstat /service/*
	break
done

echo ""
echo "disks:"
df -kli
echo ""
dump W
echo ""

mailq >$TMP
if ! grep -q "^/var/spool/mqueue is empty$" $TMP; then
	echo ""
	echo "mail:"
	cat $TMP
fi

echo ""
echo "network:"
netstat -ivn
echo ""

t=/var/rwho/*
if [[ $t != /var/rwho/\* ]]; then
	echo ""
	ruptime
fi

echo ""
if [[ -d /var/yp/binding && ! -d /var/yp/$(domainname) || $CALENDAR = 0 ]]
then
	if [[ $CALENDAR = 0 ]]; then
		echo "Not running calendar, (disabled)."
	else
		echo "Not running calendar, (yp client)."
	fi
else
	echo "Running calendar in the background."
	calendar -a &
fi

# If CHECKFILESYSTEMS is set to 1 in the environment, run fsck
# with the no-write flag.
[[ $CHECKFILESYSTEMS = 1 ]] && {
	echo ""
	echo "Checking filesystems:"
	fsck -n | grep -v '^\*\* Phase'
}

mksh /var/backups/_security >$OUT 2>&1
[[ -s $OUT ]] && mail -s "$(hostname) daily insecurity output" root <$OUT

(sleep 5; rm -f /var/backups/_{daily,security}) &
exit 0
@


1.26
log
@prepare most scripts for locale tracking; drop some TZ=UTC; use modern mksh
@
text
@d52 1
a52 1
	    \( -path './ssh-*' -o -path ./.X11-unix -o -path ./.ICE-unix \) \
d55 2
a56 1
	    ! -path ./.ICE-unix ! -name . -execdir rmdir -- {} \; >/dev/null 2>&1; }
@


1.25
log
@pre-fill MirSecuCron in correct width, at least for all that could be
affected during a run (I think I got them all)
@
text
@d3 1
a3 1
# $MirOS: src/etc/daily,v 1.24 2009/07/18 14:09:00 tg Exp $
d8 1
a8 1
export TZ=UTC PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/mpkg/bin
@


1.24
log
@prevent data corruption from /etc/security’s automated backup cronjob
by using “MirSecuCron” as RCS ID for these and preventing it from ex-
panding any of the default keywords

also, add RCS IDs to almost all configuration files and enhance the
default changelist file
@
text
@d2 2
a3 2
# $MirSecuCron$
# $MirOS: src/etc/daily,v 1.23 2009/03/29 13:04:15 tg Exp $
@


1.23
log
@• take care of dbins
• #!/bin/mksh shebang, in most places
• rcsid while here
@
text
@d2 2
a3 2
# $Id$
# $MirOS: src/etc/daily,v 1.22 2008/12/10 18:15:11 tg Exp $
@


1.22
log
@/etc/security doesn’t like to be replaced in-place by itself while
still running, so copy stuff to /var/backup and run from there
@
text
@d1 1
a1 1
#!/usr/bin/env mksh
d3 1
a3 1
# $MirOS: src/etc/daily,v 1.21 2008/12/10 18:06:05 tg Exp $
d8 1
a8 1
export TZ=UTC PATH=/usr/dbin:/bin:/usr/bin:/usr/dsbin:/sbin:/usr/sbin:/usr/local/bin:/usr/mpkg/bin
@


1.21
log
@use relative paths to mksh
@
text
@d2 2
a3 1
# $MirOS: src/etc/daily,v 1.20 2008/07/09 23:32:02 tg Exp $
d12 15
d197 5
a201 4
mksh /etc/security >$OUT 2>&1
if [[ -s $OUT ]]; then
    mail -s "$(hostname) daily insecurity output" root <$OUT
fi
@


1.20
log
@nuke bsdstats and explain why
@
text
@d1 2
a2 2
#!/bin/mksh
# $MirOS: src/etc/daily,v 1.19 2008/06/02 07:26:51 tg Exp $
d181 1
a181 1
/bin/mksh /etc/security >$OUT 2>&1
@


1.19
log
@don't svstat if there's nothing in /service/*
@
text
@d2 1
a2 1
# $MirOS: src/etc/daily,v 1.18 2008/03/27 13:48:26 tg Exp $
a184 10

# bsdstats.org stuff
bsdstats_flags=$(. /etc/rc.conf; echo "$bsdstats_flags")
if [[ $bsdstats_flags != NO && -s /usr/share/misc/bsdstats ]]; then
	typeset -i 'jitter=RANDOM % 600 + 100'
	print
	print "BSDstats - initial delay of ${jitter}s ($(date))"
	sleep $jitter
	stats_sysadd= mksh /usr/share/misc/bsdstats
fi
@


1.18
log
@add /usr/dbin, /usr/dsbin to the path: usually before /bin and /sbin except
in the root+single user case (etc/root.profile, etc/profile + SINGLE)
@
text
@d2 1
a2 1
# $MirOS: src/etc/daily,v 1.17 2007/06/18 01:58:17 tg Exp $
d127 2
a128 1
if [ -d /service -a -x /usr/mpkg/bin/svstat ]; then
d132 2
a133 1
fi
@


1.17
log
@look better
@
text
@d2 1
a2 1
# $MirOS: src/etc/daily,v 1.16 2007/06/16 22:08:07 tg Exp $
d7 1
a7 1
export TZ=UTC PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/mpkg/bin
@


1.17.2.1
log
@MFC: bsdstats removal
@
text
@d2 1
a2 1
# $MirOS: src/etc/daily,v 1.17 2007/06/18 01:58:17 tg Exp $
d183 10
@


1.16
log
@• merge OpenBSD
• log (julian) time we're run
@
text
@d2 1
a2 1
# $MirOS: src/etc/daily,v 1.15 2007/06/15 23:43:46 tg Exp $
d13 1
@


1.15
log
@fixup for integer, typeset, local
(not regenerating MAKEDEVs because they use #!/bin/mksh but still, for style)
@
text
@d2 1
a2 1
# $MirOS: src/etc/daily,v 1.14 2006/10/07 22:21:40 tg Exp $
d6 1
d11 2
d14 1
d28 1
a28 1
trap 'rm -f $TMP $OUT' 0 1 15
d63 2
a64 2
#find / \( ! -fstype local -o -fstype rdonly -o -fstype fdesc \
#		-o -fstype kernfs -o -fstype procfs \) -a -prune -o \
@


1.14
log
@daily: we don't have rdist(1) any more
weekly, monthly: sync PATH with daily
@
text
@d2 1
a2 1
# $MirOS: src/etc/daily,v 1.13 2006/10/07 22:20:48 tg Exp $
d182 1
a182 1
	integer 'jitter=RANDOM % 600 + 100'
@


1.13
log
@Requested by bsiegert@@ via eMail and <homsn> via IRC:
During installation, ask the user whether he wants to send information
about the hardware used to bsdstats.org and can disable that, in which
case rc.conf.local will be amended with bsdstats_flags="" (empty), the
default value is "YES". To entirely disable sending ANY information to
bsdstats.org, the admin has to set it to "NO" in /etc/rc.conf.local. A
deletion of /usr/share/misc/bsdstats has already resulted in disabling
the code, and continues to do so.

bsiegert@@ disagrees with this practice and wants the installation-time
question to be able to deactivate sending any information. I heard and
noticed the complaint and hereby acknowledge it, but decided to never-
theless go by with this method. I have discussed it through with Desk-
topBSD's Daniel Seuffert in Essen (on a conference), and Marc G. Four-
nier (the bsdstats.org man) has agreed to our proposal.

Please note that the information sent is *only*:
* one of your public IPv4 (or IPv6) addresses
* during the first run, 32 bytes of data from /dev/arandom used to ob-
  tain a "token"
* during all runs, the "key" from above and the "token" returned (this
  is a measure to estimate the number of MirOS installations)
* during all runs, the version of the operating system, i.e.
  - MirOS #9{semel,bis,ter,quater,...}
  - MirOS #9-stable
  - MirOS #9-current
  - MirOS #9-livecd
* unless deactivated, the output of "sysctl hw.model"
* unless deactivated, in the future (not yet specified) PCI device in-
  formation (most likely: PCIID (8 hexadecimal digits that are the sa-
  me for all exemplars/specimen of a type of hardware device), name of
  the device driver (e.g. vga for any vga(4) device), nothing else).
  This is, however, not yet implemented.

The MirOS Project does not have access to the raw data. We do not have
access to data the general public has access to. Only output of stati-
stics is ever published, no keys, tokens or IP addresses. See the web-
site of BSDstats for details. We try hard to not invade privacy.
@
text
@d2 1
a2 1
# $MirOS: src/etc/daily,v 1.12 2006/10/07 21:55:40 tg Exp $
a173 11
if [ -f /etc/Distfile ]; then
	echo ""
	echo "Running rdist:"
	if [ -d /var/log/rdist ]; then
		logf=$(date +%Y.%b.%e)
		rdist -f /etc/Distfile 2>&1 | tee /var/log/rdist/$logf
	else
		rdist -f /etc/Distfile
	fi
fi

@


1.12
log
@sync with bsdstats.org code; export PATH; use TXT record if bsdstats.org
@
text
@d2 1
a2 1
# $MirOS: src/etc/daily,v 1.11 2006/09/19 03:21:23 tg Exp $
d191 2
a192 1
if [[ -s /usr/share/misc/bsdstats ]]; then
@


1.11
log
@cosmetics
@
text
@d2 1
a2 1
# $MirOS: src/etc/daily,v 1.10 2006/09/13 01:08:20 tg Exp $
d6 1
a6 2
export TZ=UTC
PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/mpkg/bin
@


1.10
log
@rewritten-from-scratch bsdstats.org code, including live cd stuff
believe me, the 900s (plus safety zone) delay _is_ needed...

awaiting testing
@
text
@d2 1
a2 1
# $MirOS: src/etc/daily,v 1.9 2006/05/15 12:13:56 tg Exp $
d193 1
a193 1
	integer 'jitter=RANDOM % 600'
d195 1
a195 1
	print Running BSDstats.org code... initial delay of $jitter
@


1.9
log
@avoid "cannot determine cwd" if invoked manually
@
text
@d2 1
a2 1
# $MirOS: src/etc/daily,v 1.8 2005/11/18 21:21:23 tg Exp $
d190 9
@


1.8
log
@From: Jason Crawford <jasonrcrawford@@gmail.com>
Message-ID: <5d6838280511181246h6d48406fk63583f05962d66ba@@mail.gmail.com>
@
text
@d2 1
a2 1
# $MirOS: src/etc/daily,v 1.7 2005/09/23 09:26:09 tg Exp $
d9 1
@


1.7
log
@occurences of /usr/local without /usr/mpkg
which were not yet noticed by bsiegert@@
but need to be changed for new MirPorts default
@
text
@d2 1
a2 1
# $MirOS: src/etc/daily,v 1.6 2005/07/07 13:39:22 tg Exp $
d130 1
a130 1
df -kl
@


1.6
log
@/bin/sh and /bin/ksh -> /bin/mksh

This should cover most uses.
@
text
@d2 1
a2 1
# $MirOS: src/etc/daily,v 1.5 2005/04/29 18:58:14 tg Exp $
d7 1
a7 1
PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin
d122 1
a122 1
if [ -d /service -a -x /usr/local/bin/svstat ]; then
@


1.5
log
@run cron'd scripts with TZ=UTC
idea from reading Message-ID: <20050429190347.3dd0f7b4.biorn@@dce.chalmers.se>
@
text
@d1 4
a4 4
#!/bin/ksh
#	$MirOS: src/etc/daily,v 1.4 2005/04/29 18:34:47 tg Exp $
#	$OpenBSD: daily,v 1.50 2005/03/17 18:16:52 millert Exp $
#	From: @@(#)daily	8.2 (Berkeley) 1/25/94
d185 1
a185 1
ksh /etc/security 2>&1 >$OUT
@


1.4
log
@(tentative) merge, more to come
@
text
@d2 1
a2 2
#	$Id$
#	$MirOS: src/etc/daily,v 1.3 2005/03/10 22:50:34 tg Exp $
d5 2
a6 1
#
@


1.3
log
@(experimental) don't nuke /var/tmp/vi.recover during /etc/daily runs

untested
@
text
@d3 2
a4 2
#	$MirOS: src/etc/daily,v 1.2 2005/03/06 19:05:54 tg Exp $
#	$OpenBSD: daily,v 1.46 2003/07/28 20:58:48 jmc Exp $
d10 2
d30 5
a34 4
	find -x . \( -path './ssh-*' -o -path './.X11-unix' \) -prune -o \
	    -type f -atime +3 -execdir rm -f -- {} \;
	find -x . ! -name . -type d -mtime +1 -execdir rmdir -- {} \; \
	    >/dev/null 2>&1; }
d39 5
a43 5
	find -x . \( -path './ssh-*' -o -path './.X11-unix' \) -prune -o \
	    ! -type d -atime +7 -execdir rm -f -- {} \;
	find -x . ! -name . ! -name vi.recover \
	    -type d -mtime +1 -execdir rmdir -- {} \; \
	    >/dev/null 2>&1; }
d97 2
a98 4
	rootdev=$(awk '$2 == "/" && $1 ~ /^\/dev\// && $3 == "ffs" && \
	    $4 ~ /rw/ \
		 { print substr($1, 6) }' </etc/fstab)
	rootbak=$(awk '$2 == "/altroot" && $1 ~ /^\/dev\// && $3 == "ffs" && \
d100 2
a101 2
		{ print substr($1, 6) }' </etc/fstab)
	[[ $rootdev != "" && $rootbak != "" ]] && {
@


1.2
log
@merge src/etc minus generated files
@
text
@d3 1
a3 1
#	$MirOS$
d38 2
a39 1
	find -x . ! -name . -type d -mtime +1 -execdir rmdir -- {} \; \
@


1.1
log
@Initial revision
@
text
@d1 3
a3 2
#!/bin/sh -
#
d16 2
a17 2
TMP=`mktemp /tmp/_daily.XXXXXXXXXX` || exit 1
OUT=`mktemp /tmp/_security.XXXXXXXXXX` || {
d61 1
a61 1
#		-a -atime +3 -a -execdir rm -f -- {} \; -a -print > $TMP
d92 2
a93 2
[ "X$ROOTBACKUP" = X1 ] && {
	rootdev=`awk '$2 == "/" && $1 ~ /^\/dev\// && $3 == "ffs" && \
d95 2
a96 2
		 { print substr($1, 6) }' < /etc/fstab`
	rootbak=`awk '$2 == "/altroot" && $1 ~ /^\/dev\// && $3 == "ffs" && \
d98 2
a99 2
		{ print substr($1, 6) }' < /etc/fstab`
	[ X$rootdev != X -a X$rootbak != X ] && {
d110 5
d119 7
d133 1
a133 1
mailq > $TMP
d146 1
a146 1
if [ "$t" != '/var/rwho/*' ]; then
d152 1
a152 1
if [ -d /var/yp/binding -a ! -d /var/yp/`domainname` -o "X$CALENDAR" = X0 ]
d154 1
a154 1
	if [ "X$CALENDAR" = X0 ]; then
d166 1
a166 1
[ "X$CHECKFILESYSTEMS" = X1 ] && {
d176 1
a176 1
		logf=`date +%Y.%b.%e`
d183 3
a185 3
sh /etc/security 2>&1 > $OUT
if [ -s $OUT ]; then
    mail -s "`hostname` daily insecurity output" root < $OUT
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@improve my Frankenstein OS (*wink* you know who you are) further
sans wchar_t of course

this is the essence of reading >1200 commit messages which suck
due to not having the new format of ours...
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.50 2005/03/17 18:16:52 millert Exp $
a8 2
sysctl -n kern.version

d27 4
a30 5
	find -x . \
	    \( -path './ssh-*' -o -path ./.X11-unix -o -path ./.ICE-unix \) \
	    -prune -o -type f -atime +3 -execdir rm -f -- {} \;
	find -x . -type d -mtime +1 ! -path ./vi.recover ! -path ./.X11-unix \
	    ! -path ./.ICE-unix ! -name . -execdir rmdir -- {} \; >/dev/null 2>&1; }
d35 4
a38 5
	find -x . \
	    \( -path './ssh-*' -o -path ./.X11-unix -o -path ./.ICE-unix \) \
	    -prune -o ! -type d -atime +7 -execdir rm -f -- {} \;
	find -x . -type d -mtime +1 ! -path ./vi.recover ! -path ./.X11-unix \
	    ! -path ./.ICE-unix ! -name . -execdir rmdir -- {} \; >/dev/null 2>&1; }
d92 3
a94 1
	rootdev=`df -n / | awk '/^\/dev\// { print substr($1, 6) }'`
d98 1
a98 1
	[ X$rootdev != X -a X$rootbak != X -a X$rootdev != X$rootbak ] && {
@


1.1.1.3
log
@pull in OtherBSDs changes
@
text
@d3 1
a3 1
#	$OpenBSD: daily,v 1.56 2006/10/26 12:20:55 ajacoutot Exp $
a5 2
umask 022

a9 1
uptime
d23 1
a23 1
trap 'rm -f $TMP $OUT; exit 1' 0 1 15
d58 2
a59 2
#find / \( ! -fstype local -o -fstype rdonly \
#		-o -fstype procfs \) -a -prune -o \
@


