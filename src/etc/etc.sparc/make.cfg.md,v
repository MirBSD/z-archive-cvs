head	1.7;
access;
symbols
	MIRBSD_10:1.4.0.2
	MIRBSD_10_BASE:1.4
	MIRBSD_9_BASE:1.3
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3;
locks; strict;
comment	@# @;


1.7
date	2017.04.08.16.05.44;	author tg;	state Exp;
branches;
next	1.6;
commitid	10058E90A645BB20D20;

1.6
date	2009.10.04.19.46.59;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004AC8FB395C07C631;

1.5
date	2008.11.10.20.43.06;	author tg;	state Exp;
branches;
next	1.4;
commitid	10049189CF038F460F4;

1.4
date	2006.09.20.19.26.51;	author tg;	state Exp;
branches;
next	1.3;
commitid	100451195FE092D5A41;

1.3
date	2005.10.21.20.00.13;	author tg;	state Exp;
branches;
next	1.2;
commitid	7c2f435948d43637;

1.2
date	2005.08.28.22.41.25;	author tg;	state Exp;
branches;
next	1.1;
commitid	14a543123d39f391;

1.1
date	2005.08.21.11.45.47;	author tg;	state Exp;
branches;
next	;
commitid	1c13430869647d4b;


desc
@@


1.7
log
@add -fverbose-asm and MD options to compile-to-.s by default
@
text
@# $MirOS: src/etc/etc.sparc/make.cfg.md,v 1.5 2008/11/10 20:43:06 tg Exp $
#
# machdep part of ${MAKE}.cfg for sparc

_DEFCOPTS:=	-mcpu=v8 -mtune=hypersparc
_DEFCOPTS_llvm:=-mcpu=v8 -mtune=hypersparc
_DEFCOPTS_pcc:=	# nothing
_DEFcTOsOPTS:=	# nothing
@


1.6
log
@I seem to have gotten some sense in SPARC flags now:
* the SS5 takes microSPARC or TurboSPARC, both are cpu=v8 tune=v8(?)
* the SS10 and SS20 take mbus modules with SuperSPARC (TMS*) or
  HyperSPARC (mostly ROSS) CPUs, cpu=v8 tune={super,hyper}sparc
* gcc docs say supersparc is for SS10 and sparcservers (sun4d)
* my SS20en do have ROSS CPUs, my SS5 has a TurboSPARC
* none of my boxen has a v7 CPU any more, and we really do need the
  v8 speed-up, but changing flags and recompile should yield a sun4c
  v7 capable OS anyway
* TurboSPARC is fastest anyway
=> optimise for HyperSPARC, run on all v8 CPUs
@
text
@d8 1
@


1.5
log
@somewhat sensible DEFCOPTS
@
text
@d1 1
a1 1
# $MirOS: src/etc/etc.sparc/make.cfg.md,v 1.4 2006/09/20 19:26:51 tg Exp $
d5 2
a6 2
_DEFCOPTS:=	-mcpu=v8 -mtune=supersparc
_DEFCOPTS_llvm:=-mcpu=v8 -mtune=supersparc
@


1.4
log
@while wondering why -Wbounded wasn't active by default, add a few
others and merge same code
@
text
@d1 1
a1 1
# $MirOS: src/etc/etc.sparc/make.cfg.md,v 1.3 2005/10/21 20:00:13 tg Exp $
d6 2
@


1.3
log
@* DEFCOPTS -> _DEFCOPTS
* add them in MirMake, too
@
text
@d1 1
a1 1
# $MirOS: src/etc/etc.sparc/make.cfg.md,v 1.2 2005/08/28 22:41:25 tg Exp $
d5 1
a5 3
_DEFCOPTS=	-Os -Wstrict-aliasing -Wformat -fno-align-functions \
		-fno-align-labels -falign-loops=4 -falign-jumps=4 \
		-mcpu=v8 -mtune=supersparc
@


1.2
log
@* -fno-strict-aliasing -fno-strength-reduce are unneeded, since mgcc
  (not stock gcc) only enables them at -O3 (or the old unroller)
* use new -Wstrict-aliasing instead to warn at such corner cases
* don't use -fno-unit-at-a-time any more
* if MKC_DEBG use new DEBUGPROGS instead of disabling INSTALL_STRIP
* don't build a release floppy for now
@
text
@d1 1
a1 1
# $MirOS: src/etc/etc.sparc/make.cfg.md,v 1.1 2005/08/21 11:45:47 tg Exp $
d5 1
a5 1
DEFCOPTS=	-Os -Wstrict-aliasing -Wformat -fno-align-functions \
@


1.1
log
@mk.conf -> make.cfg (uses basename of $MAKE, for portable mirmake's sake)
@
text
@d1 1
a1 1
# $MirOS: src/etc/etc.sparc/mk.conf.md,v 1.3 2005/04/17 22:27:05 tg Exp $
d5 3
a7 3
DEFCOPTS=	-Os -fno-strict-aliasing -fno-strength-reduce -Wformat \
		-fno-unit-at-a-time -fno-align-functions -fno-align-labels \
		-falign-loops=4 -falign-jumps=4 -mcpu=v8 -mtune=supersparc
@

