head	1.24;
access;
symbols
	MIRBSD_10:1.13.0.2
	MIRBSD_10_BASE:1.13
	MIRBSD_9_BASE:1.10
	MIRBSD_8:1.7.0.2
	MIRBSD_8_BASE:1.7
	cvs-200507211800:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.24
date	2016.03.25.19.55.54;	author tg;	state Exp;
branches;
next	1.23;
commitid	10056F597E40E87C9C3;

1.23
date	2010.09.25.11.58.49;	author tg;	state Exp;
branches;
next	1.22;
commitid	1004C9DE41036C08FD3;

1.22
date	2009.08.17.20.18.57;	author tg;	state Exp;
branches;
next	1.21;
commitid	1004A89BB49047166CE;

1.21
date	2009.07.18.14.09.38;	author tg;	state Exp;
branches;
next	1.20;
commitid	1004A61D7B934CA2D90;

1.20
date	2009.03.29.13.11.18;	author tg;	state Exp;
branches;
next	1.19;
commitid	10049CF738D45B2C807;

1.19
date	2009.02.22.16.29.40;	author tg;	state Exp;
branches;
next	1.18;
commitid	10049A17D8B3664D118;

1.18
date	2009.02.22.12.24.22;	author tg;	state Exp;
branches;
next	1.17;
commitid	10049A143E6107152AE;

1.17
date	2008.12.10.18.06.50;	author tg;	state Exp;
branches;
next	1.16;
commitid	100494005500DF34FD7;

1.16
date	2008.07.13.18.07.19;	author tg;	state Exp;
branches;
next	1.15;
commitid	100487A446E64C0F5CB;

1.15
date	2008.07.13.17.56.56;	author tg;	state Exp;
branches;
next	1.14;
commitid	100487A41FC6197991E;

1.14
date	2008.03.27.14.06.30;	author tg;	state Exp;
branches;
next	1.13;
commitid	10047EBA9DC670639D4;

1.13
date	2007.10.26.23.11.07;	author tg;	state Exp;
branches;
next	1.12;
commitid	100472274210D18D662;

1.12
date	2007.02.07.21.18.24;	author tg;	state Exp;
branches;
next	1.11;
commitid	10045CA421B369B307C;

1.11
date	2007.02.02.16.45.34;	author tg;	state Exp;
branches;
next	1.10;
commitid	10045C36AC452FE6806;

1.10
date	2006.06.17.16.28.50;	author tg;	state Exp;
branches;
next	1.9;
commitid	10044942DD756469EE3;

1.9
date	2006.01.30.13.10.39;	author tg;	state Exp;
branches;
next	1.8;
commitid	10043DE106135D6A11B;

1.8
date	2006.01.30.13.07.47;	author tg;	state Exp;
branches;
next	1.7;
commitid	10043DE0FB315360D20;

1.7
date	2005.10.21.12.55.04;	author tg;	state Exp;
branches;
next	1.6;
commitid	61994358e536bcc5;

1.6
date	2005.08.02.12.02.59;	author tg;	state Exp;
branches;
next	1.5;
commitid	363442ef61054a74;

1.5
date	2005.07.24.13.13.23;	author tg;	state Exp;
branches;
next	1.4;
commitid	683342e39407e3b6;

1.4
date	2005.05.06.13.02.16;	author tg;	state Exp;
branches;
next	1.3;
commitid	1111427b6aec94fb;

1.3
date	2005.05.06.12.46.46;	author tg;	state Exp;
branches;
next	1.2;
commitid	14b3427b6749badc;

1.2
date	2005.03.15.16.58.06;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.22.11;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.22.11;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.20.45.39;	author tg;	state Exp;
branches;
next	;
commitid	560042e0092f571e;


desc
@@


1.24
log
@regen
@
text
@#!/bin/mksh
# $MirSecuCron$
# $MirOS: src/etc/MAKEDEV.mi,v 1.15 2016/03/25 19:49:14 tg Exp $
#
# THIS FILE AUTOMATICALLY GENERATED.  DO NOT EDIT.
# generated from:
#
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.32 2005/06/29 18:23:27 todd Exp 
#	MirOS: src/etc/etc.i386/MAKEDEV.md,v 1.15 2009/02/22 16:29:08 tg Exp 
#	OpenBSD: MAKEDEV.common,v 1.19 2005/06/29 18:23:26 todd Exp 
#	MirOS: src/etc/MAKEDEV.common,v 1.12 2010/09/25 11:58:05 tg Exp 
#	OpenBSD: MAKEDEV.mi,v 1.73 2005/02/07 06:14:18 david Exp 
#	MirOS: src/etc/MAKEDEV.mi,v 1.15 2016/03/25 19:49:14 tg Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
#	MirOS: src/etc/MAKEDEV.sub,v 1.4 2005/07/24 12:49:10 tg Exp 
#
#
# Copyright (c) 2003-2016 mirabilos <m@@mirbsd.org>
# Copyright (c) 2001-2004 Todd T. Fries <todd@@OpenBSD.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
# Device "make" file.  Valid arguments:
#	all	makes all known devices, including local devices.
#		Tries to make the ``standard'' number of each type.
#	ramdisk	Ramdisk kernel devices
#	rambig	additional devices to be put on large ramdisk media
#	std	Standard devices
#	local	Configuration specific devices
# Disks:
#	ccd*	Concatenated disk devices
#	cd*	ATAPI and SCSI CD-ROM drives
#	fd*	Floppy disk drives (3 1/2", 5 1/4")
#	mcd*	Mitsumi CD-ROM drives
#	raid*	RAIDframe disk devices
#	rd*	"rd" pseudo-disks
#	sd*	SCSI disks, including flopticals
#	vnd*	"file" pseudo-disk devices
#	wd*	"winchester" disk drives (ST506, IDE, ESDI, RLL, ...)
# Tapes:
#	ch*	SCSI media changers
#	st*	SCSI tape drives
#	wt*	Archive/Wangtek QIC-cartridge tape drives
# Terminal ports:
#	tty[0-7][0-9a-f]	NS16x50 serial ports
#	ttyc*	Cyclades serial ports
# Pseudo terminals:
#	ptm	pty master device
#	pty*	Set of 62 master pseudo terminals
#	tty*	Set of 62 slave pseudo terminals
# Console ports:
#	ttyC0	Minimal wscons devices
#	ttyC-F*	wscons display devices
#	wskbd*	wscons keyboards
#	wsmux	wscons keyboard/mouse mux devices
# Pointing devices:
#	wsmouse*	wscons mice
# Printers:
#	lpa*	Polled printer port
#	lpt*	IEEE 1284 centronics printer
# USB devices:
#	uall	All USB devices
#	ttyU*	USB serial ports
#	ugen*	Generic USB devices
#	uhid*	Generic HID devices
#	ulpt*	Printer devices
#	urio*	Diamond Multimedia Rio 500
#	usb*	Bus control devices used by usbd for attach/detach
#	uscanner*	Scanners
# Special purpose devices:
#	apm	Power management device
#	audio*	Audio devices
#	bio	ioctl tunnel pseudo-device
#	bktr*	Video frame grabbers
#	bpf*	Berkeley Packet Filter
#	crypto	Hardware crypto access driver
#	fd	fd/* nodes for fdescfs
#	gpr*	GPR400 smartcard reader
#	iop*	I2O controller devices
#	joy*	Joystick driver
#	lkm	Loadable kernel modules interface
#	music*	MIDI devices
#	pci	PCI bus device
#	pctr*	PC Performance Tuning Register access device
#	pf*	Packet Filter
#	radio*	FM tuner devices
#	rmidi*	Raw MIDI devices
#	*random	In-kernel random data source
#	speaker	PC speaker
#	ss*	SCSI scanners
#	systrace*	System call tracing device
#	tun*	Network tunnel driver
#	tuner*	Tuner devices
#	uk*	Unknown SCSI devices
#	wdt0	Watchdog timer
# I4B devices:
#	isdn	ISDN4BSD master device
#	isdnctl	ISDN4BSD control device
#	isdnbchan*	ISDN4BSD raw B channel device
#	isdntrc*	ISDN4BSD tracing device
#	isdntel*	ISDN4BSD telephony device
LC_ALL=C
PATH=/sbin:/usr/sbin:/bin:/usr/bin
T=$0

# set this to echo for Echo-Only debugging
[ "$eo" ] || eo=

hex()
{
	case $1 in
	[0-9]) echo -n $1;;
	10) echo -n a;;
	11) echo -n b;;
	12) echo -n c;;
	13) echo -n d;;
	14) echo -n e;;
	15) echo -n f;;
	esac
}

alph2d()
{
	typeset t="$1"
	typeset p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	typeset sub=${p%${t}*}
	echo ${#sub}
}

h2d()
{
	typeset s="$1"
	typeset f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}

	echo $(($(_h2d $f)*16+ $(_h2d $n) ))
}

_h2d()
{
	case $1 in
	[0-9]) echo -n $1;;
	a) echo -n 10;;
	b) echo -n 11;;
	c) echo -n 12;;
	d) echo -n 13;;
	e) echo -n 14;;
	f) echo -n 15;;
	esac
}

unt()
{
	# XXX pdksh can't seem to deal with locally scoped variables
	# in ${foo#$bar} expansions
	arg="$1"
	tmp="${arg#[a-zA-Z]*}"
	tmp="${tmp%*[a-zA-Z]}"
	while [ "$tmp" != "$arg" ]
	do
		arg=$tmp
		tmp="${arg#[a-zA-Z]*}"
		tmp="${tmp%*[a-zA-Z]}"
	done
	echo $arg
}

dodisk()
{
	[ "$DEBUG" ] && set -x
	n=$(($((${5}*${7:-16}))+${6})) count=0
	RMlist="$RMlist $1$2? r$1$2?"
	[ 0$7 -ne 8 ] && l="i j k l m n o p"
	for d in a b c d e f g h $l
	do
		M $1$2$d	b $3 $(($n+$count)) 640
		M r$1$2$d	c $4 $(($n+$count)) 640
		let count=count+1
	done
	MKlist="$MKlist;chown root:operator $1$2? r$1$2?"
}

dodisk2()
{
	n=$(($(($5*${7:-16}))+$6))
	M $1$2a b $3 $n 640 operator
	M r$1$2a c $4 $n 640 operator
	n=$(($n+2))
	M $1$2c b $3 $n 640 operator
	M r$1$2c c $4 $n 640 operator
}

# M name b/c major minor [mode] [group]
RMlist="rm -f"
MKlist=":"

mkl() {
	[ "${mklist[$1]}" ] && {
		mklist[$1]="${mklist[$1]};mknod -m $1 $2 $3 $4 $5"
	} || {
		mklist[$1]="mknod -m $1 $2 $3 $4 $5"
		modes="$modes $1"
	}
}

M() {
	RMlist="$RMlist $1"
	mkl ${5-666} $1 $2 $3 $4
	mklist="$mklist $1"
	G=${6:-wheel}
	[ "$7" ] && {
		MKlist="$MKlist;chown $7:$G $1"
	} || {
		case $G in
		wheel)		g=0;;
		kmem)		g=2;;
		tty)		g=4;;
		operator)	g=5;;
		_lkm)		g=61;;
		dialer)		g=117;;
		audio)		g=250;;
		esac
		[ "${grplist[$g]}" ] && {
			grplist[$g]="${grplist[$g]} $1"
		} || {
			groups="$groups $g"
			grplist[$g]="chgrp $G $1"
		}
	}
	return 0
}

R() {
[ "$DEBUG" ] && set -x
for i in "$@@"
do
U=`unt $i`
[ "$U" ] || U=0

case $i in
ramdisk)
	R std bpf0 fd0 wd0 sd0 tty00 tty01 rd0
	R st0 cd0 ttyC0 random wskbd0 wskbd1 wskbd2 apm vnd0
	;;
rambig)
	R bpf1 pty0 raid0 raid1 tun0 vnd1 crypto
	;;

std)
	M console	c 0 0 600
	M tty		c 1 0
	M mem		c 2 0 640 kmem
	M kmem		c 2 1 640 kmem
	M null		c 2 2
	M zero		c 2 12
	M stdin		c 22 0
	M stdout	c 22 1
	M stderr	c 22 2
	M ksyms		c 50 0 640 kmem
	M drum		c 4 0 640 kmem
	M klog		c 7 0 600
	M xf86		c 2 4 600
	;;

ttyc*)
	M ttyc$U c 38 $U 660 dialer uucp
	M cuac$U c 38 $(($U+128)) 660 dialer uucp
	;;

isdns)
	R isdn isdnctl isdnbchan0 isdnbchan1
	R isdntel0 isdntel1 isdntrc0 isdntrc1
	cat <<_EOF_ALLISDN
The author of the ISDN4BSD package is:
 * Hellmuth Michaelis
 * Hallstrasse 20
 * D-25462 Rellingen
 * voice: +49 4101 473574
 * fax:   +49 4101 473575
 * email: hm@@kts.org

He requests a picture postcard of the home town of any ISDN4BSD
user as licence fee.  Please send him one if you are using this
ISDN subsystem for MirOS BSD, too.

 * It may be illegal in your country to connect an ISDN4BSD-based machine
 * using a passive ISDN card to the ISDN at your site because the protocol
 * stack of ISDN4BSD, which is necessary to run passive cards, has not been
 * approved by the telecommunication certification authority of your country.
 * If in doubt, please contact your local ISDN provider!

_EOF_ALLISDN
	;;

isdntel*)
	M isdntel$U c 60 $U
	;;

isdntrc*)
	M isdntrc$U c 59 $U
	;;

isdnbchan*)
	M isdnbchan$U c 58 $U
	;;

isdnctl)
	M isdnctl c 57 0
	;;

isdn)
	M isdn c 56 0
	;;

wdt0)
	M wdt$U c 55 $U 440 operator
	;;

uk*)
	M uk$U c 20 $U 640 operator
	;;

tuner*)
	M tuner$U c 49 $(($(($U*2))+16)) 644
	;;

tun*)
	M tun$U c 40 $U 600
	;;

systrace)
	M systrace c 78 0 644
	;;

ss*)
	M ss$U c 19 $(($U*16)) 640 operator
	M nss$U c 19 $(($(($U*16))+1)) 640 operator
	M enss$U c 19 $(($(($U*16))+3)) 640 operator
	RMlist="$RMlist scan$U"
	MKlist="$MKlist;(umask 77;ln -s ss$U scan$U)"
	;;

speaker)
	M speaker c 27 0 660 audio
	;;

*random)
	M random c 45 0 644
	M srandom c 45 1 644
	M urandom c 45 2 644
	M prandom c 45 3 644
	M wrandom c 45 3 666
	M arandom c 45 4 644
	;;

rmidi*)
	M rmidi$U c 52 $U 666
	;;

radio*)
	M radio$U     c 76 $U 660 audio
	MKlist="$MKlist;[ -e radio ] || ln -s radio$U radio"
	;;

pf*)
	M pf c 73 0 600
	;;

pctr)
	M pctr c 46 0 644
	;;

pci)
	M pci c 72 0 600
	;;

music*)
	M music$U     c 53 $U 660 audio
	M sequencer$U c 53 $(($U+128)) 660 audio
	MKlist="$MKlist;[ -e music ] || ln -s music$U music"
	MKlist="$MKlist;[ -e sequencer ] || ln -s sequencer$U sequencer"
	;;

lkm)
	M lkm c 28 0 640 _lkm
	;;

joy*)
	M joy$U c 26 $U 666
	;;

iop*)
	M iop$U c 75 $U 660
	;;

gpr*)
	M gpr$U c 80 $U
	;;

fd)
	RMlist="mkdir -p fd;$RMlist" n=0
	while [ $n -lt 64 ];do M fd/$n c 22 $n;n=$(($n+1));done
	MKlist="$MKlist;chmod 555 fd"
	;;

crypto)
	M crypto c 70 0
	M tpm c 70 1 660 operator
	;;

bpf*)
	M bpf$U c 23 $U 600
	;;

bktr*)
	M bktr$U c 49 $U 644
	;;

bio)
	M bio c 79 0 600
	;;

audio*)
	M sound$U	c 42 $U 660 audio
	M mixer$U	c 42 $(($U+16)) 660 audio
	M audio$U	c 42 $(($U+128)) 660 audio
	M audioctl$U	c 42 $(($U+192)) 660 audio
	MKlist="$MKlist;[ -e audio ] || ln -s audio$U audio"
	MKlist="$MKlist;[ -e mixer ] || ln -s mixer$U mixer"
	MKlist="$MKlist;[ -e sound ] || ln -s sound$U sound"
	MKlist="$MKlist;[ -e audioctl ] || ln -s audioctl$U audioctl"
	;;

apm*)
	M apm	c 21 0 644
	M apmctl	c 21 8 644
	;;

uscanner*)
	M uscanner$U c 77 $U 660
	;;

usb*)
	[ "$i" = "usb" ] && u= || u=$U
	M usb$u c 61 $U 660
	;;

urio*)
	M urio$U c 65 $U 660
	;;

ulpt*)
	M ulpt$U c 64 $U 660
	;;

uhid*)
	M uhid$U c 62 $U 660
	;;

ugen*)
	n=$(($U*16))
	for j in 0{0,1,2,3,4,5,6,7,8,9} 1{0,1,2,3,4,5}
	do
		M ugen$U.$j c 63 $(($n+10#$j)) 660
	done
	;;

ttyU[0-9a-zA-Z])
	U=${i#ttyU*}
	o=$(alph2d $U)
	M ttyU$U c 66 $o 660 dialer uucp
	M cuaU$U c 66 $(($o+128)) 660 dialer uucp
	;;

uall)
	R ttyU0 ttyU1 ugen0 ugen1 ulpt0 ulpt1 uhid0 uhid1 uhid2 uhid3
	R uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
	;;

lpt*|lpa*)
	case $i in
	lpt*) n=lpt f=0;;
	lpa*) n=lpa f=128;;
	esac
	M $n$U c 16 $(($U+$f)) 600
	;;

wsmouse[0-9]*)
	M wsmouse$U c 68 $U 600
	;;

wsmux|wsmouse|wskbd)
	M wsmouse c 69 0 600
	M wskbd c 69 1 600
	;;

wskbd*)
	M wskbd$U c 67 $U 600
	;;

tty[C-F]*)
	U=${i##tty[C-F]}
	case $i in
	ttyC*) n=C m=0;;
	ttyD*) n=D m=256;;
	ttyE*) n=E m=512;;
	ttyF*) n=F m=768;;
	esac
	case $U in
	[0-9a-f]) M tty$n$U c 12 $((16#$U+$m)) 600;;
	cfg) M tty${n}cfg c 12 $((255+$m)) 600;;
	*) echo bad unit $U for $i; exit 1;;
	esac
	;;

wscons)
	R wsmouse0 wsmouse1 wsmouse2 wsmouse3 wskbd0 wskbd1 wskbd2
	R wskbd3 wsmux ttyCcfg ttyC0 ttyC1 ttyC2 ttyC3 ttyC4 ttyC5
	R ttyC6 ttyC7 ttyC8 ttyC9 ttyCa ttyCb
	;;

pty*)
	if [ $U -gt 15 ]; then
		echo bad unit for pty in: $i
		continue
	fi
	set -A letters p q r s t u v w x y z P Q R S T
	set -A suffixes 0 1 2 3 4 5 6 7 8 9 \
	    a b c d e f g h i j k l m n o p q r s t u v w x y z \
	    A B C D E F G H I J K L M N O P Q R S T U V W X Y Z

	name=${letters[$U]}
	n=0
	while [ $n -lt 62 ]
	do
		nam=$name${suffixes[$n]}
		off=$(($U*62))
		M tty$nam c 5 $(($off+$n))
		M pty$nam c 6 $(($off+$n))
		n=$(($n+1))
	done
	;;

ptm)
	M ptm c 82 0 666
	;;

tty[0-7][0-9a-f])
	U=${i#tty*}
	o=$(h2d $U)
	M tty$U c 8 $o 660 dialer uucp
	M cua$U c 8 $(($o+128)) 660 dialer uucp
	;;

wt*)
	name=wt
	n=$(($U*8)) m=$(($n+4))
	M $name$U	b 3 $n 640 operator
	M r$name$U	c 10 $n 640 operator
	M n$name$U	b 3 $m 640 operator
	M nr$name$U	c 10 $m 640 operator
	;;

st*)
	n=$(($U*16))
	for pre in " " n e en
	do
		M ${pre}st$U	b 5 $n 660 operator
		M ${pre}rst$U	c 14 $n 660 operator
		n=$(($n+1))
	done
	;;

ch*)
	M ch$U c 17 $U 660 operator
	;;

vnd*)
	dodisk vnd $U 14 41 $U 0
	dodisk svnd $U 14 41 $U 2048
	;;

rd*)
	dodisk2 rd $U 17 47 $U 0
	;;

mcd*)
	dodisk2 mcd $U 7 39 $U 0
	;;

fd*)
	typnam=$U${i#fd[01]*}
	case $typnam in
	0|1)	typnum=0;; # no type specified, assume A
	*A)	typnum=0; typnam=0;;
	*B)	typnum=1;;
	*C)	typnum=2;;
	*D)	typnum=3;;
	*E)	typnum=4;;
	*F)	typnum=5;;
	*G)	typnum=6;;
	*H)	typnum=7;;
	*)	echo bad type $typnam for $i; exit 1;;
	esac
	case $U in
	0|1)	blk=2; chr=9;;
	*)	echo bad unit $U for $i; exit 1;;
	esac
	nam=fd${typnam}
	n=$(($(($U*128))+$(($typnum*16))))
	M ${nam}a	b $blk $n 640 operator
	M ${nam}b	b $blk $(($n+1)) 640 operator
	M ${nam}c	b $blk $(($n+2)) 640 operator
	M r${nam}a	c $chr $n 640 operator
	M r${nam}b	c $chr $(($n+1)) 640 operator
	M r${nam}c	c $chr $(($n+2)) 640 operator
	;;

cd*)
	dodisk2 cd $U 6 15 $U 0
	;;

local)
	test -s $T.local && sh $T.local
	;;

all)
	R bktr0 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1 vnd2 vnd3 sd0 sd1 sd2
	R sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3 crypto bio bpf0 bpf1
	R bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C
	R fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G
	R fd0H ss0 ss1 ch0 ptm gpr0 local wscons pci iop0 iop1 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 music0 speaker audio0 wdt0 wt0 uk0 random joy0
	R joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm pf
	R pctr systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std
	R st0 st1 fd mcd0
	;;

wd*|sd*|raid*|ccd*)
	case $i in
	wd*) dodisk wd $U 0 3 $U 0;;
	sd*) dodisk sd $U 4 13 $U 0;;
	raid*) dodisk raid $U 19 54 $U 0;;
	ccd*) dodisk ccd $U 16 18 $U 0;;
	esac
	;;

*)
	echo $i: unknown device
	;;
esac
done
}
R "$@@"
list="$RMlist"
for mode in $modes; do
	list="$list;${mklist[$mode]}"
done
for group in $groups; do
	list="$list;${grplist[$group]}"
done
list="$list;$MKlist"
if [ "$eo" = "echo" ]; then
	$eo "$list"
else
	echo "$list" | sh
fi
@


1.23
log
@regen
@
text
@d3 1
a3 1
# $MirOS: src/etc/MAKEDEV.mi,v 1.14 2009/07/18 14:08:59 tg Exp $
d13 1
a13 1
#	MirOS: src/etc/MAKEDEV.mi,v 1.14 2009/07/18 14:08:59 tg Exp 
d18 1
a18 1
# Copyright (c) 2003-2009 Thorsten Glaser <tg@@mirbsd.org>
d112 1
@


1.22
log
@regen
@
text
@d11 1
a11 1
#	MirOS: src/etc/MAKEDEV.common,v 1.11 2009/08/17 20:18:24 tg Exp 
d496 1
a496 1
wsmouse*)
@


1.21
log
@regenerate
@
text
@d11 1
a11 1
#	MirOS: src/etc/MAKEDEV.common,v 1.10 2009/02/22 11:56:48 tg Exp 
d348 1
a348 1
	MKlist="$MKlist;umask 77;ln -s ss$U scan$U"
@


1.20
log
@regen
@
text
@d2 2
a3 1
# $MirOS: src/etc/MAKEDEV.mi,v 1.13 2009/03/29 13:04:15 tg Exp $
d13 1
a13 1
#	MirOS: src/etc/MAKEDEV.mi,v 1.13 2009/03/29 13:04:15 tg Exp 
@


1.19
log
@regen
@
text
@d1 2
a2 2
#!/usr/bin/env mksh
# $MirOS: src/etc/MAKEDEV.mi,v 1.12 2008/12/10 18:06:05 tg Exp $
d12 1
a12 1
#	MirOS: src/etc/MAKEDEV.mi,v 1.12 2008/12/10 18:06:05 tg Exp 
d17 1
a17 1
# Copyright (c) 2003-2006 Thorsten Glaser <tg@@mirbsd.de>
d111 1
a111 1
PATH=/usr/dsbin:/sbin:/usr/sbin:/usr/dbin:/bin:/usr/bin
@


1.18
log
@use mkdev(major(crypto),1) for /dev/tpm, not mkdev(newmajor(),*)
and restrict crypto to mkdev(major(crypto),0) instead of minor=*

untested
@
text
@d8 1
a8 1
#	MirOS: src/etc/etc.i386/MAKEDEV.md,v 1.14 2009/02/22 11:58:35 tg Exp 
d253 1
a253 1
	R bpf1 pty0 raid0 raid1 tun0 vnd1
@


1.17
log
@regen
@
text
@d8 1
a8 1
#	MirOS: src/etc/etc.i386/MAKEDEV.md,v 1.10 2007/10/26 23:08:22 tg Exp 
d10 1
a10 1
#	MirOS: src/etc/MAKEDEV.common,v 1.9 2008/06/27 21:02:22 tg Exp 
d415 1
d636 9
a644 9
	R sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bio bpf0 bpf1 bpf2
	R bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D
	R fd1E fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H
	R ss0 ss1 ch0 ptm gpr0 local wscons pci iop0 iop1 uall rmidi0
	R rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0
	R radio0 music0 speaker audio0 wdt0 wt0 uk0 random joy0 joy1
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm crypto
	R pf pctr systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std
@


1.16
log
@regen
@
text
@d1 2
a2 2
#!/bin/mksh
# $MirOS: src/etc/MAKEDEV.mi,v 1.11 2008/07/13 18:07:04 tg Exp $
d12 1
a12 1
#	MirOS: src/etc/MAKEDEV.mi,v 1.11 2008/07/13 18:07:04 tg Exp 
@


1.15
log
@regenerate
@
text
@d2 1
a2 2
#=beginstrip=
# $MirOS: src/etc/MAKEDEV.mi,v 1.10 2008/07/13 17:55:50 tg Exp $
d12 1
a12 1
#	MirOS: src/etc/MAKEDEV.mi,v 1.10 2008/07/13 17:55:50 tg Exp 
a110 1
#=endstrip=
@


1.14
log
@regenerate for PATH change
note: on i386, /dev/prandom is no longer writable, use /dev/wrandom as
announced earlier would be changed post-#10-release
@
text
@d2 2
a3 1
# $MirOS: src/etc/MAKEDEV.mi,v 1.9 2008/03/27 13:48:26 tg Exp $
d11 1
a11 1
#	MirOS: src/etc/MAKEDEV.common,v 1.8 2007/02/02 16:45:10 tg Exp 
d13 1
a13 1
#	MirOS: src/etc/MAKEDEV.mi,v 1.9 2008/03/27 13:48:26 tg Exp 
d112 1
d536 3
a538 3
	set -A suffixes 0 1 2 3 4 5 6 7 8 9 a b c d e f g h i j k l m n o p q \
	    r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X \
	    Y Z
@


1.13
log
@regen
@
text
@d2 1
a2 1
# $MirOS: src/etc/MAKEDEV.mi,v 1.8 2007/06/15 23:43:46 tg Exp $
d12 1
a12 1
#	MirOS: src/etc/MAKEDEV.mi,v 1.8 2007/06/15 23:43:46 tg Exp 
d111 1
a111 1
PATH=/sbin:/usr/sbin:/bin:/usr/bin
d358 1
a358 1
	M prandom c 45 3 666	# hand-edited for #10/i386 only
@


1.12
log
@compatibility kludge for upgraders: retain 0666 on /dev/prandom
until every user has done the transition to /dev/wrandom (and a
regen of the MAKEDEV files will fix that automagically)
@
text
@d2 1
a2 1
# $MirOS: src/etc/etc.i386/MAKEDEV,v 1.11 2007/02/02 16:45:34 tg Exp $
d8 1
a8 1
#	MirOS: src/etc/etc.i386/MAKEDEV.md,v 1.9 2006/06/17 16:28:21 tg Exp 
d12 1
a12 1
#	MirOS: src/etc/MAKEDEV.mi,v 1.7 2006/06/17 16:28:20 tg Exp 
d132 3
a134 3
	local t="$1"
	local p="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	local sub=${p%${t}*}
d140 2
a141 2
	local s="$1"
	local f=${s%*[0-9a-f]} n=${s#[0-9a-f]*}
d253 1
a253 1
	R pty0 raid0 raid1 tun0 vnd1
d358 1
a358 1
	M prandom c 45 3 666
@


1.11
log
@regen
@
text
@d2 1
a2 1
# $MirOS: src/etc/MAKEDEV.mi,v 1.7 2006/06/17 16:28:20 tg Exp $
d358 1
a358 1
	M prandom c 45 3 644
@


1.10
log
@regen
@
text
@d10 1
a10 1
#	MirOS: src/etc/MAKEDEV.common,v 1.7 2006/01/30 13:10:15 tg Exp 
d358 2
a359 1
	M prandom c 45 3 666
@


1.9
log
@regen, sorry
@
text
@d2 1
a2 1
# $MirOS: src/etc/MAKEDEV.mi,v 1.6 2005/07/24 12:49:10 tg Exp $
d8 1
a8 1
#	MirOS: src/etc/etc.i386/MAKEDEV.md,v 1.8 2005/10/21 12:54:30 tg Exp 
d12 1
a12 1
#	MirOS: src/etc/MAKEDEV.mi,v 1.6 2005/07/24 12:49:10 tg Exp 
d17 1
a18 1
# Copyright (c) 2003-2005 Thorsten Glaser <tg@@66h.42h.de>
@


1.8
log
@regen
@
text
@d10 1
a10 1
#	MirOS: src/etc/MAKEDEV.common,v 1.6 2006/01/30 13:07:24 tg Exp 
d356 4
a359 4
	M srandom c 45 0 644
	M urandom c 45 0 644
	M prandom c 45 0 666
	M arandom c 45 0 644
@


1.7
log
@regen
@
text
@d10 1
a10 1
#	MirOS: src/etc/MAKEDEV.common,v 1.5 2005/08/02 12:02:06 tg Exp 
d355 5
a359 6
	n=0
	for pre in " " s u p a
	do
		M ${pre}random c 45 $n 644
		n=$(($n+1))
	done
@


1.6
log
@regen
@
text
@d8 1
a8 1
#	MirOS: src/etc/etc.i386/MAKEDEV.md,v 1.7 2005/08/02 12:02:06 tg Exp 
d551 1
a551 1
	M ptm c 81 0 666
@


1.5
log
@regenerate MAKEDEV stuff
@
text
@d8 1
a8 1
#	MirOS: src/etc/etc.i386/MAKEDEV.md,v 1.6 2005/07/23 15:36:58 tg Exp 
d10 1
a10 1
#	MirOS: src/etc/MAKEDEV.common,v 1.4 2005/07/24 12:49:10 tg Exp 
a97 1
#	ses*	SES/SAF-TE SCSI devices
a353 4
ses*)
	M ses$U c 24 $U 640 operator
	;;

d638 7
a644 7
	R ss0 ss1 ch0 ses0 ptm gpr0 local wscons pci iop0 iop1 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 music0 speaker audio0 wdt0 wt0 uk0 random joy0
	R joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm
	R crypto pf pctr systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2
	R raid3 std st0 st1 fd mcd0
@


1.4
log
@sync
@
text
@d1 2
a2 2
#!/bin/ksh
# $MirOS: src/etc/MAKEDEV.mi,v 1.4 2005/05/06 12:46:32 tg Exp $
d7 8
a14 8
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.23 2004/04/11 18:05:23 millert Exp 
#	MirOS: src/etc/etc.i386/MAKEDEV.md,v 1.3 2005/03/15 16:45:45 tg Exp 
#	OpenBSD: MAKEDEV.common,v 1.7 2004/04/11 18:14:59 millert Exp 
#	MirOS: src/etc/MAKEDEV.common,v 1.3 2005/05/06 13:01:54 tg Exp 
#	OpenBSD: MAKEDEV.mi,v 1.72 2004/02/16 18:58:53 miod Exp 
#	MirOS: src/etc/MAKEDEV.mi,v 1.4 2005/05/06 12:46:32 tg Exp 
#	OpenBSD: MAKEDEV.sub,v 1.12 2004/02/20 19:13:01 miod Exp 
#	MirOS: src/etc/MAKEDEV.sub,v 1.3 2005/03/15 16:45:44 tg Exp 
a55 2
# Call units:
#	tun*	Network tunnel driver
d82 1
d102 1
d104 1
a104 1
#	uk*	SCSI unknown devices
d133 1
a133 1
	local t="$1"  
d250 2
a251 2
	R std bpf0 fd0 wd0 wd1 wd2 sd0 sd1 sd2 tty00 tty01 rd0
	R st0 cd0 ttyC0 random wskbd0 vnd0
d335 4
d430 4
d473 1
a473 1
	for j in 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15
d475 1
a475 1
		M ugen$U.$j c 63 $(($n+$j)) 660
d483 1
d488 1
a488 1
	R uscanner0 urio0 usb0 usb1
d521 1
a521 1
	[0-9a-f]) M tty$n$U c 12 $(( 16#$U + $m )) 600;;
d556 1
a556 5
	M ptm c 82 0 666
	;;

tun*)
	M tun$U c 40 $U 600
d640 10
a649 10
	R sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2 tun3 bpf0 bpf1 bpf2 bpf3
	R bpf4 bpf5 bpf6 bpf7 bpf8 bpf9 pty0 fd1 fd1B fd1C fd1D fd1E
	R fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H ss0
	R ss1 ch0 ses0 ptm gpr0 local wscons pci iop0 iop1 uall rmidi0
	R rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0
	R radio0 music0 speaker audio0 wdt0 wt0 uk0 random joy0 joy1
	R lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03
	R ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm crypto
	R pf pctr systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std
	R st0 st1 fd mcd0
@


1.3
log
@regen
@
text
@d10 1
a10 1
#	MirOS: src/etc/MAKEDEV.common,v 1.2 2005/03/06 19:05:53 tg Exp 
d348 1
a348 1
	M speaker c 27 0 600
@


1.2
log
@regenerate (make allarchs in etc)
@
text
@d2 1
a2 1
# $MirOS: src/etc/MAKEDEV.mi,v 1.3 2005/03/15 16:45:44 tg Exp $
d12 1
a12 1
#	MirOS: src/etc/MAKEDEV.mi,v 1.3 2005/03/15 16:45:44 tg Exp 
d223 7
a229 1
		wheel)g=0;;kmem)g=2;;operator)g=5;;tty)g=4;;dialer)g=117;;_lkm)g=61;;
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#!/bin/sh -
d8 1
d10 1
d12 1
d14 1
d18 1
d36 1
d106 6
a111 1
#	xfs*	XFS filesystem node
d245 4
a248 1
	R st0 cd0 ttyC0 random wskbd0
d272 43
a314 2
xfs*)
	M xfs$U c 51 $U 600
d363 1
a363 1
	M radio$U     c 76 $U
d380 2
a381 2
	M music$U     c 53 $U
	M sequencer$U c 53 $(($U+128))
d421 4
a424 4
	M sound$U	c 42 $U
	M mixer$U	c 42 $(($U+16))
	M audio$U	c 42 $(($U+128))
	M audioctl$U	c 42 $(($U+192))
d541 1
a541 1
	M ptm c 81 0 666
d631 8
a638 8
	R fd1F fd1G fd1H fd0 fd0B fd0C fd0D fd0E fd0F fd0G fd0H xfs0
	R ss0 ss1 ch0 ses0 ptm gpr0 local wscons pci iop0 iop1 uall
	R rmidi0 rmidi1 rmidi2 rmidi3 rmidi4 rmidi5 rmidi6 rmidi7
	R tuner0 radio0 music0 speaker audio0 wdt0 wt0 uk0 random joy0
	R joy1 lpa0 lpa1 lpa2 lpt0 lpt1 lpt2 lkm tty00 tty01 tty02
	R tty03 ttyc0 ttyc1 ttyc2 ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 apm
	R crypto pf pctr systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2
	R raid3 std st0 st1 fd mcd0
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d6 4
a9 4
#	OpenBSD: etc.i386/MAKEDEV.md,v 1.32 2005/06/29 18:23:27 todd Exp 
#	OpenBSD: MAKEDEV.common,v 1.19 2005/06/29 18:23:26 todd Exp 
#	OpenBSD: MAKEDEV.mi,v 1.73 2005/02/07 06:14:18 david Exp 
#	OpenBSD: MAKEDEV.sub,v 1.14 2005/02/07 06:14:18 david Exp 
d49 2
a75 1
#	acpi	Advanced Configuration and Power Interface
a76 1
#	bio	ioctl tunnel pseudo-device
a80 1
#	gpio*	General Purpose Input/Output
a81 1
#	hotplug	devices hot plugging
a85 1
#	nvram	NVRAM access
a95 1
#	tun*	Network tunnel driver
d97 1
a97 1
#	uk*	Unknown SCSI devices
d121 1
a121 1
	local t="$1"
d232 2
a233 2
	R std bpf0 fd0 wd0 sd0 tty00 tty01 rd0
	R st0 cd0 ttyC0 random wskbd0 wskbd1 wskbd2 apm
a272 4
tun*)
	M tun$U c 40 $U 600
	;;

a322 4
nvram)
	M nvram c 84 0 440 kmem
	;;

a341 4
hotplug)
	M hotplug c 82 $U 400
	;;

a345 4
gpio*)
	M gpio$U c 83 $U 600
	;;

a363 4
bio)
	M bio c 79 0 600
	;;

a374 4
acpi*)
	M acpi	c 85 0 644
	;;

d403 1
a403 1
	for j in 0{0,1,2,3,4,5,6,7,8,9} 1{0,1,2,3,4,5}
d405 1
a405 1
		M ugen$U.$j c 63 $(($n+10#$j)) 660
a412 1
	M cuaU$U c 66 $(($o+128)) 660 dialer uucp
d417 1
a417 1
	R uscanner0 urio0 usb0 usb1 usb2 usb3 usb4 usb5
d450 1
a450 1
	[0-9a-f]) M tty$n$U c 12 $((16#$U+$m)) 600;;
d488 4
d572 11
a582 12
	R nvram gpio0 gpio1 gpio2 bktr0 ccd0 ccd1 ccd2 ccd3 vnd0 vnd1
	R vnd2 vnd3 sd0 sd1 sd2 sd3 sd4 cd0 cd1 rd0 tun0 tun1 tun2
	R tun3 bio bpf0 bpf1 bpf2 bpf3 bpf4 bpf5 bpf6 bpf7 bpf8 bpf9
	R pty0 fd1 fd1B fd1C fd1D fd1E fd1F fd1G fd1H fd0 fd0B fd0C
	R fd0D fd0E fd0F fd0G fd0H xfs0 ss0 ss1 ch0 ses0 hotplug ptm
	R gpr0 local wscons pci iop0 iop1 uall rmidi0 rmidi1 rmidi2
	R rmidi3 rmidi4 rmidi5 rmidi6 rmidi7 tuner0 radio0 music0
	R speaker audio0 wdt0 wt0 uk0 random joy0 joy1 lpa0 lpa1 lpa2
	R lpt0 lpt1 lpt2 lkm tty00 tty01 tty02 tty03 ttyc0 ttyc1 ttyc2
	R ttyc3 ttyc4 ttyc5 ttyc6 ttyc7 acpi apm crypto pf pctr
	R systrace wd0 wd1 wd2 wd3 raid0 raid1 raid2 raid3 std st0 st1
	R fd mcd0
@

