head	1.9;
access;
symbols
	MIRBSD_10:1.7.0.2
	MIRBSD_10_BASE:1.7
	OPENBSD_4_0:1.1.1.5
	MIRBSD_9_BASE:1.6
	MIRBSD_8:1.5.0.2
	MIRBSD_8_BASE:1.5
	cvs-200507211800:1.1.1.4
	cvs-200504302130:1.1.1.3
	cvs-200504291700:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.9
date	2018.10.07.01.10.23;	author tg;	state Exp;
branches;
next	1.8;
commitid	1005BB95CA10BF418E8;

1.8
date	2008.11.08.23.04.01;	author tg;	state Exp;
branches;
next	1.7;
commitid	10049161AB22DF5DFC5;

1.7
date	2006.09.20.20.03.30;	author tg;	state Exp;
branches;
next	1.6;
commitid	10045119E9F677AC322;

1.6
date	2006.06.17.22.12.40;	author tg;	state Exp;
branches;
next	1.5;
commitid	10044947A600871A477;

1.5
date	2005.11.23.16.43.53;	author tg;	state Exp;
branches;
next	1.4;
commitid	560c43849c55498d;

1.4
date	2005.04.30.21.49.25;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.29.18.34.55;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.06.19.49.54;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.26.30;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.26.30;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.17.05.32;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.04.30.21.36.13;	author tg;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2005.07.21.20.56.58;	author tg;	state Exp;
branches;
next	1.1.1.5;
commitid	560042e0092f571e;

1.1.1.5
date	2006.09.20.19.06.47;	author tg;	state Exp;
branches;
next	;
commitid	10045119150397FC669;


desc
@@


1.9
log
@spelling cleanup: “programme” is distinct from “program”; even in
British English, the latter is used for computer programs, while
the former serves for things like the TV programme, or a programme
to plant trees
@
text
@.\"	$MirOS: src/sbin/fdisk/fdisk.8,v 1.8 2008/11/08 23:04:01 tg Exp $
.\"	$OpenBSD: fdisk.8,v 1.51 2006/08/05 14:04:00 ray Exp $
.\"
.\" Copyright (c) 2003, 2004, 2005
.\"	Thorsten "mirabilos" Glaser <tg@@mirbsd.org>
.\" Copyright (c) 1997 Tobias Weingartner
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd January 3, 2002
.Dt FDISK 8
.Os
.Sh NAME
.Nm fdisk
.Nd MBR partition maintenance program
.Sh SYNOPSIS
.Nm fdisk
.Op Fl ieu
.Oo
.Fl c Ar cylinders
.Fl h Ar heads
.Fl s Ar sectors
.Oc
.Op Fl f Ar mbrfile
.Ar device
.Sh DESCRIPTION
On the i386 and other architectures, sector 0 of a bootable hard disc
must contain MBR bootcode, the MBR partition table containing 4 slots,
and a specific magic number (0xAA55).
The 4 slots in the MBR partition table allow a disk drive to be
sub-divided up into chunks known as MBR partitions.
.Pp
On the i386, the BIOS loads sector 0 of the boot disk into memory,
verifies the magic number, and begins executing the MBR bootcode
at the first byte.
The MBR bootcode then searches the MBR partition table for an
.Dq active
MBR partition (indicated by a
.Ql \&*
in the first column), and if one
is found, the boot block from that MBR partition is loaded and executed in
place of the original (MBR) boot block.
.Pp
Some other architectures (like the zaurus), consider sector 0 of the disk
to contain the MBR partition table, but do not use the MBR bootcode at all.
.Sh TYPICAL LAYOUT
When called with no special flags,
.Nm
prints the MBR partition table of the specified device, i.e.,
.Bd -literal -offset 1n
# fdisk wd0
Disk: wd0       geometry: 5168/240/63 [78140160 Sectors]
Offset: 0       Signature: 0xAA55
         Starting       Ending       LBA Info:
 #: id    C   H  S -    C   H  S [       start:      size   ]
------------------------------------------------------------------------
 0: 04    0   1  1 -  170   0 63 [          63:     2570462 ] DOS FAT-16
 1: 00    0   0  0 -    0   0  0 [           0:           0 ] unused
 2: 00    0   0  0 -    0   0  0 [           0:           0 ] unused
*3: A6  170   1  1 - 5167 239 63 [     2570463:    75569697 ] OpenBSD
.Ed
.Pp
It should be noted that the partition table shown above is
invalid and a bad idea in general.
This 78140160 sector (38154MB) disk drive is divided into two MBR
partitions that span the whole disk.
The first MBR partition is a 1225MB FAT-16 DOS partition
(in this case containing a Phoenix BIOS Laptop Suspend-to-Disk file),
the second is a 36GB
.Ox
MBR partition using the remainder of the disk.
The fields of the output are thus:
.Bl -tag -width "start/size"
.It Em "#"
Number identifying each MBR partition table entry.
There are a total of four slots.
.Sq *
denotes the MBR partition which is declared bootable.
.It Em "id"
MBR partition type identifier.
.Mx
reserves the
magic number hexadecimal 27 (39 decimal).
If no MBR partition of type 27 is found,
.Mx
can use an older
.Ox ,
.Nx
or
.Fx
MBR partition (with type 0xA6, 0xA9 and 0xA5, respectively).
.It Em "C/H/S"
These fields provide the starting and ending address of the MBR partition
in BIOS geometry.
.It Em "start/size"
These fields provide the starting sector and size in sectors of the
MBR partition in linear block addresses.
.El
.Pp
.Em NOTE :
The BIOS geometry sectors field is
.Dq 1 based ,
but the start field is
.Dq 0 based .
The CHS values will need to be in the BIOS's geometry
for the system to be able to boot and use the drive correctly.
These values must be kept correctly synchronized or a variety of
problems develop which are very difficult to diagnose.
.Pp
The
.Ox
MBR partition shown above is subdivided further using the
functionality provided by
.Xr disklabel 8 ,
which provides
.Mx
slices.
.Bd -literal -offset 1n
# Inside MBR partition 3: type A6 start 2570463 size 75569697
# /dev/rwd0c:
type: ESDI
disk: ESDI/IDE disk
label: HITACHI_DK13FA-4
flags:
bytes/sector: 512
sectors/track: 63
tracks/cylinder: 16
sectors/cylinder: 1008
cylinders: 16383
total sectors: 78140160
rpm: 3600
interleave: 1
trackskew: 0
cylinderskew: 0
headswitch: 0           # microseconds
track-to-track seek: 0  # microseconds
drivedata: 0

16 partitions:
#           size     offset  fstype [fsize bsize  cpg]
  a:     1740753    2570463  4.2BSD   2048 16384  328 # Cyl  2550*-  4276
  b:      819504    4311216    swap                   # Cyl  4277 -  5089
  c:    78140160          0  unused      0     0      # Cyl     0 - 77519
  d:     2097648    5130720  4.2BSD   2048 16384  328 # Cyl  5090 -  7170
  e:      614880    7228368  4.2BSD   2048 16384  328 # Cyl  7171 -  7780
  g:     2097648    7843248  4.2BSD   2048 16384  328 # Cyl  7781 -  9861
  h:      921312    9940896  4.2BSD   2048 16384  328 # Cyl  9862 - 10775
  i:     2570462         63   MSDOS                   # Cyl     0*-  2549
  j:     3355632   10862208  4.2BSD   2048 16384  328 # Cyl 10776 - 14104
  k:     2097648   14217840  4.2BSD   2048 16384  328 # Cyl 14105 - 16185
  l:     2097648   16315488  4.2BSD   2048 16384  328 # Cyl 16186 - 18266
  m:    59727024   18413136  4.2BSD   2048 16384  328 # Cyl 18267 - 77519
.Ed
.Pp
These
.Mx
filesystems are then mounted as follows using
.Pa /etc/fstab :
.Bd -literal -offset indent
/dev/wd0a / ffs rw,softdep 1 1
/dev/wd0m /home ffs rw,softdep,nodev,nosuid 1 2
/dev/wd0d /tmp ffs rw,softdep,nodev,nosuid 1 2
/dev/wd0g /usr ffs rw,softdep,nodev 1 2
/dev/wd0h /usr/X11R6 ffs rw,softdep,nodev 1 2
/dev/wd0j /usr/local ffs rw,softdep,nodev 1 2
/dev/wd0k /usr/obj ffs rw,softdep,nodev,nosuid 1 2
/dev/wd0l /usr/src ffs rw,softdep,nodev,nosuid 1 2
/dev/wd0e /var ffs rw,softdep,nodev,nosuid 1 2
.Ed
.Sh OPTIONS
The options are as follows:
.Bl -tag -width Ds
.It Xo Fl c Ar cylinders ,
.Fl h Ar heads ,
.Fl s Ar sectors
.Xc
Specifies an alternate BIOS geometry for
.Nm
to use.
By default, an automatic calculation of disk size will be built
using heuristics.
These figures are taken from the in-core disklabel
(see
.Xr disklabel 8 ) ,
or values that
.Em /boot
has passed to the kernel.
.It Fl e
Use the interactive edit of
.Nm
to modify a MBR partition table.
The editor permits configuration of the MBR partition, as well as
extended MBR partitions.
.It Fl f Ar mbrfile
Specifies an alternate MBR template file.
The default file is
.Pa /usr/mdec/mbr .
.It Fl i
Requests that the MBR partition data be re-initialized.
In this mode,
.Nm
will completely overwrite the primary MBR bootcode and MBR partition table
using the default MBR template
.Pa /usr/mdec/mbr
(or the one optionally specified by the
.Fl f
flag).
In the default template, MBR partition number 3 will be configured as an
.Mx
MBR partition spanning from cylinder 0, head 1, sector 1, and extending
to the end of the disk.
This mode is designed to initialize the MBR the very first time.
.It Fl u
Update MBR bootcode, preserving existing MBR partition table.
The MBR bootcode extends from offset 0x000 to the start of the MBR partition table
at offset 0x1BE.
It is similar to the
.Fl i
flag, except the existing MBR partition table is preserved.
This is useful for writing new MBR bootcode onto an existing drive, and is
equivalent to the DOS command
.Dq FDISK /MBR .
Note that this option will overwrite the NT disk signature, if present.
If you would like to preserve the NT disk signature, you can use the
.Em umin
command in the interactive command mode.
Just be damn sure you use a boot code which supports this.
.El
.Sh COMMAND MODE
The
.Fl e
flag causes
.Nm
to enter an interactive command mode.
The prompt contains information about the state of the edit
process.
.Pp
.Dl fdisk:*0>
.Pp
.Sq *
means that the in-memory copy of the boot block has been modified, but
not yet written to disk.
.Pp
0 is the disk offset of the currently selected boot block being edited.
This number could be something other than zero when extended MBR partitions
are being edited (using the
.Em select
subcommand).
.Pp
The list of commands and their explanations are given below.
.Bl -tag -width Ds
.It help
Display a list of commands that
.Nm
understands in the interactive edit mode.
.It manual
Display this manual page.
.It reinit
Initialize the currently selected, in-memory copy of the
boot block.
.It disk
Display the current drive geometry that
.Nm
probed using kernel provided information and various heuristics.
The disk geometry may be changed at this point.
.It edit Ar #
Edit a given table entry in the memory copy of
the current boot block.
Sizes may be adjusted using either in BIOS geometry mode or
sector offsets and sizes.
.It fdef Ar #
Make the given partition table entry bootable.
This does only work with the MirOS boot blocks.
This is not the same as the flag command, which
If an optional value is given, the partition is marked with the given
value, and other partitions are not touched.
\fBAttention:\fR This command should only be used
by people who know what they are doing.
This command can destroy third party bootblocks.
To disable the functionality after it has been enabled,
use the number 9 as parameter.
is commonly used to mark the default entry, too.
.It flag Ar #
Make the given MBR partition table entry bootable.
Only one entry can be marked bootable.
.\" If you wish to boot from an extended
.\" MBR partition, you will need to mark the MBR partition table entry for the
.\" extended MBR partition as bootable.
.\" If an optional value is given, the MBR partition is marked with the given
.\" value, and other MBR partitions are not touched.
If no default entry has been selected with fdef,
or an older, for example from
.Mx 7 ,
or non-MirOS bootblock is used, this entry will be
the default booted entry as well.
.It update
Update the machine MBR bootcode and 0xAA55 signature in the memory copy
of the currently selected boot block.
Note that this option will overwrite an NT disk
signature, if present.
This option will also revert the
.Em fdef
choice to unset, if you use recent
.Mx
boot code.
.It umin
This option performs basically the same operation as the
.Em update
command, but leaving the last part of the machine boot code, which
contains the Microsoft NT disk signature and, shortly before, the
.Em fdef
flag, untouched.
If you do not use recent
.Mx
boot code which supports this, your hard disc will be left
unbootable because this option cuts off the end of the
machine code, possibly containing instructions.
.It select Ar #
Select and load into memory the boot block pointed
to by the extended MBR partition table entry in the current boot block.
.It setpid Ar #
Change the MBR partition
identifier of the given MBR partition table entry.
This command is particularly useful for reassigning
an existing MBR partition to
.Mx .
.It swap Ar # Ar #
Swap two MBR entries.
.It print Op unit
Print the currently selected in-memory copy of the boot
block and its MBR table to the terminal.
If
.Ar unit
is specified as
.Sq b ,
.Sq k ,
.Sq m ,
or
.Sq g ,
the MBR is printed in units of bytes, kibibytes, mebibytes, or gibibytes.
Otherwise the number of sectors is printed.
.It write
Write the in-memory copy of the boot block to disk.
.It exit
Exit the current level of
.Nm fdisk ,
either returning to the
previously selected in-memory copy of a boot block, or exiting the
program if there is none.
.It quit
Exit the current level of
.Nm fdisk ,
either returning to the
previously selected in-memory copy of a boot block, or exiting the
program if there is none.
Unlike
.Em exit
it does write the modified block out.
.It abort
Quit program without saving current changes.
.El
.Sh FILES
.Bl -tag -width /usr/mdec/mbrmgr -compact
.It Pa /usr/mdec/mbrmgr
default MBR template
.El
.Sh SEE ALSO
.Xr fstab 5 ,
.Xr boot_i386 8 ,
.Xr disklabel 8
.Sh CAVEATS
Hand crafted disk layouts are highly error prone.
MBR partitions should start on a cylinder boundary
(head 0, sector 1),
except when starting on track 0,
(these should begin at head 1, sector 1).
MBR partitions should also end at cylinder boundaries.
@


1.8
log
@more mass conversions, including ancient eMail addresses
@
text
@d1 1
a1 1
.\"	$MirOS: src/sbin/fdisk/fdisk.8,v 1.7 2006/09/20 20:03:30 tg Exp $
d34 1
a34 1
.Nd MBR partition maintenance programme
@


1.7
log
@merge fdisk, dhcp stuff
fix fdisk units
@
text
@d1 1
a1 1
.\"	$MirOS: src/sbin/fdisk/fdisk.8,v 1.6 2006/06/17 22:12:40 tg Exp $
d5 1
a5 1
.\"	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
@


1.6
log
@remove more of these AMD64 remains
@
text
@d1 2
a2 2
.\"	$MirOS: src/sbin/fdisk/fdisk.8,v 1.5 2005/11/23 16:43:53 tg Exp $
.\"	$OpenBSD: fdisk.8,v 1.50 2005/05/01 20:53:38 jmc Exp $
d348 1
a348 1
.It print
d351 10
@


1.5
log
@fastmerge
@
text
@d1 1
a1 1
.\"	$MirOS: src/sbin/fdisk/fdisk.8,v 1.4 2005/04/30 21:49:25 tg Exp $
a377 1
.Xr boot_amd64 8 ,
@


1.4
log
@merge
@
text
@d1 2
a2 2
.\"	$MirOS: src/sbin/fdisk/fdisk.8,v 1.3 2005/04/29 18:34:55 tg Exp $
.\"	$OpenBSD: fdisk.8,v 1.49 2005/04/30 16:48:56 deraadt Exp $
d4 2
a6 2
.\" Copyright (c) 2003, 2004
.\"	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
d38 6
a43 4
.Op Fl f Ar mbrname
.Op Fl c Ar cylinders
.Op Fl h Ar heads
.Op Fl s Ar sectors
d111 1
a111 1
.It Em "cyl/hd/sec"
d213 1
a213 1
.It Fl f Ar mbrname
a370 6
.Sh NOTES
Hand crafted disk layouts can be highly error prone;
ensure that the
.Mx
MBR partition starts on a cylinder boundary.
(This restriction may be changed in the future.)
d377 1
a377 1
.Xr boot ,
a379 1
.Xr boot_macppc 8 ,
d381 7
@


1.3
log
@(tentative) merge, more to come
@
text
@d1 2
a2 2
.\"	$MirOS: src/sbin/fdisk/fdisk.8,v 1.2 2005/03/06 19:49:54 tg Exp $
.\"	$OpenBSD: fdisk.8,v 1.45 2005/03/29 19:35:25 otto Exp $
d34 1
a34 1
.Nd i386 BIOS partition maintenance program
d44 10
a53 10
In order for the BIOS to boot the kernel, certain conventions must be
adhered to.
Sector 0 of a bootable hard disk must contain boot code,
an MBR partition table, and a magic number (0xAA55).
These MBR partitions (also known as BIOS partitions) can be used
to break the disk up into several pieces.
.Pp
The BIOS loads sector 0 of the boot disk into memory, verifies
the magic number, and begins executing the code at the first byte.
The normal DOS MBR boot code searches the MBR partition table for an
d55 1
a55 1
partition (indicated by a
d58 1
a58 1
is found, the boot block from that partition is loaded and executed in
d61 4
a64 24
The options are as follows:
.Bl -tag -width Ds
.It Fl i
Initialize the MBR sector.
.It Fl e
Edit existing MBR sectors.
.It Fl f Ar mbrname
Specifies an alternate MBR template file.
.It Fl u
Update MBR code, preserving existing partition table.
.It Xo Fl c Ar cylinders ,
.Fl h Ar heads ,
.Fl s Ar sectors
.Xc
Specifies an alternate BIOS geometry for
.Nm
to use.
.El
.Pp
The DOS
.Nm
program can be used to divide space on the disk into partitions and set
one active.
This
d66 12
a77 14
program serves a similar purpose to the DOS program.
When called with no special flags, it prints the MBR partition
table of the specified device, i.e.,
.Bd -literal
    # fdisk fd0
    Disk: fd0       geometry: 80/2/18 [2880 sectors]
    Offset: 0       Signature: 0xAA55
             Starting        Ending
     #: id  cyl  hd sec -  cyl  hd sec [     start -       size]
    ----------------------------------------------------------------------
    *0: A6    0   0   1 -   79   1  18 [         0 -       2880] OpenBSD
     1: 00    0   0   0 -    0   0   0 [         0 -          0] unused
     2: A7    0   0   2 -   79   1  18 [         1 -       2879] NEXTSTEP
     3: 00    0   0   0 -    0   0   0 [         0 -          0] unused
d81 9
a89 14
invalid and a bad idea in general, because the partitions
overlap.
.Pp
The geometry displayed is the BIOS geometry unless another geometry
has been selected using the
.Fl c ,
.Fl h ,
and
.Fl s
options.
.Pp
This disk is divided into two partitions that happen to fill the disk.
The first partition overlaps the third partition.
(Used for debugging purposes.)
d92 4
a95 4
Number of partition table entry.
A
.Dq \&*
denotes the bootable partition.
d97 5
a101 1
System identifier.
d103 1
a103 2
reserves the partition type 0x27 (39 dec.) and will use
the
d108 1
a108 3
types (0xA6, 0xA9 and 0xA5 respectively) if no partition of
.Mx
type is found.
d110 1
a110 1
These fields provide the starting and ending address of the partition
d114 1
a114 1
partition in linear block addresses.
d118 1
a118 1
The sectors field is
d120 1
a120 1
and the start field is
d124 2
d128 89
a216 2
.Fl i
flag is used to indicate that the partition data is to be initialized.
d219 4
a222 2
will completely overwrite the primary MBR and partition table, either
using the default MBR template, or the one specified by the
d224 2
a225 2
flag.
In the default template, partition number 3 will be configured as an
d227 1
a227 1
partition spanning from cylinder 0, head 1, sector 1, and extending
d229 4
a232 7
This mode is designed to initialize an MBR the very first time,
or when it has been corrupted beyond repair.
.Pp
The
.Fl u
flag is used to update the MBR code on a given drive.
The MBR code extends from offset 0x000 to the start of the partition table
d236 2
a237 2
flag, except the existing partition table is preserved.
This is useful for writing new MBR code onto an existing drive, and is
d245 2
a246 1
.Pp
d249 1
a249 2
flag is used to modify a partition table using an
interactive edit mode of the
d251 16
a266 23
program.
This mode is designed to allow you to change any partition on the
drive you choose, including extended partitions.
It is a very powerful mode,
but is safe as long as you do not execute the
.Em write
command, or answer in the negative (the default) when
.Nm
asks you about writing out changes.
.Sh COMMAND MODE
When you first enter this mode, you are presented with a prompt, that looks
like so:
.Em "fdisk: 0>" .
This prompt has two important pieces of information for you.
It will tell
you if the in-memory copy of the boot block has been modified or not.
If it has been modified, the prompt will change to look like:
.Em "fdisk:*0>" .
The second piece of information pertains to the number given in the prompt.
This number specifies the disk offset of the currently selected boot block
you are editing.
This number could be something other than zero when
you are editing extended partitions.
d268 2
a269 2
.Bl -tag -width "update"
.It Em help
d273 1
a273 1
.It Em manual
d275 1
a275 1
.It Em reinit
d278 1
a278 1
.It Em disk
d281 3
a283 4
has
probed.
You are given a chance to edit it if you wish.
.It Em edit
d286 3
a288 9
You may edit either in BIOS geometry mode,
or in sector offsets and sizes.
.It Em setpid
Change the partition
identifier of the given partition table entry.
This command is particularly useful for reassigning
an existing partition to
.Mx .
.It Em fdef
a291 5
is commonly used to mark the default entry, too.
Only one entry can be marked bootable.
If you wish to boot from an extended
partition, you will need to mark the partition table entry for the
extended partition as bootable.
d299 9
a307 6
.It Em flag
Make the given partition table entry active.
Only one entry can be marked active.
If you wish to boot from an extended
partition, you will need to mark the partition table entry for the
extended partition active.
d313 2
a314 2
.It Em update
Update the machine code and 0xAA55 signature in the memory copy
d316 1
a316 1
Note that this option will overwrite the NT disk
d323 1
a323 1
.It Em umin
d335 10
a344 1
.It Em swap
d346 1
a346 4
.It Em select
Select and load into memory the boot block pointed
to by the extended partition table entry in the current boot block.
.It Em print
d349 1
a349 1
.It Em write
d351 1
a351 2
You will be asked to confirm this operation.
.It Em exit
d357 1
a357 1
.It Em quit
d366 1
a366 1
.It Em abort
d370 2
a371 14
The automatic calculation of starting cylinder etc. uses
a set of figures that represent what the BIOS thinks is the
geometry of the drive.
These figures are by default taken from the in-core disklabel, or
values that
.Em /boot
has passed to the kernel, but
.Nm
gives you an opportunity to change them if there is a need to.
This allows the user to create a bootblock that can work with drives
that use geometry translation under a potentially different BIOS.
.Pp
If you hand craft your disk layout,
please make sure that the
d373 1
a373 1
partition starts on a cylinder boundary.
a374 9
.Pp
Editing an existing partition is risky, and may cause you to
lose all the data in that partition.
.Pp
You should run this program interactively once or twice to see how it works.
This is completely safe as long as you answer the
.Dq write
questions in the
negative.
d382 1
d384 1
a385 7
.Sh BUGS
There are subtleties
.Nm
detects that are not explained in this manual page.
As well, chances are that some of the subtleties it should detect are being
steamrolled.
Caveat Emptor.
@


1.2
log
@merge src/sbin
@
text
@d1 2
a2 2
.\"	$MirOS$
.\"	$OpenBSD: fdisk.8,v 1.43 2004/06/26 11:45:40 jmc Exp $
d249 2
d289 2
@


1.1
log
@Initial revision
@
text
@d1 1
d5 2
d34 1
a34 1
.Nd DOS partition maintenance program
d48 2
a49 3
These MBR partitions (also
known as BIOS partitions) can be used to break the disk up into several
pieces.
d102 4
d125 6
a130 4
.Ox
reserves the
magic number 166 decimal (A6 in hex).
If no 166 partition is found, it will use an older
d132 3
a134 1
partition (with a magic number of 165 or A5 in hex).
d161 1
a161 1
.Ox
d179 4
d239 2
a240 2
.Ox .
.It Em flag
d242 3
d249 16
d270 17
d329 1
a329 1
.Ox
d342 2
a343 2
.Bl -tag -width /usr/mdec/mbr -compact
.It Pa /usr/mdec/mbr
d347 1
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@improve my Frankenstein OS (*wink* you know who you are) further
sans wchar_t of course

this is the essence of reading >1200 commit messages which suck
due to not having the new format of ours...
@
text
@d1 1
a1 1
.\"	$OpenBSD: fdisk.8,v 1.45 2005/03/29 19:35:25 otto Exp $
a231 2
If an optional value is given, the partition is marked with the given
value, and other partitions are not touched.
a236 2
.It Em swap
Swap two MBR entries.
@


1.1.1.3
log
@theo makes them more readable for us
@
text
@d1 1
a1 1
.\"	$OpenBSD: fdisk.8,v 1.49 2005/04/30 16:48:56 deraadt Exp $
d31 1
a31 1
.Nd MBR partition maintenance program
d41 11
a51 10
On the i386 and other architectures, sector 0 of a bootable hard disk
must contain MBR bootcode, the MBR partition table containing 4 slots,
and a specific magic number (0xAA55).
The 4 slots in the MBR partition table allow a disk drive to be
sub-divided up into chunks known as MBR partitions.
.Pp
On the i386, the BIOS loads sector 0 of the boot disk into memory,
verifies the magic number, and begins executing the MBR bootcode
at the first byte.
The MBR bootcode then searches the MBR partition table for an
d53 1
a53 1
MBR partition (indicated by a
d56 1
a56 1
is found, the boot block from that MBR partition is loaded and executed in
d59 20
a78 4
Some other architectures (like the zaurus), consider sector 0 of the disk
to contain the MBR partition table, but do not use the MBR bootcode at all.
.Sh TYPICAL LAYOUT
When called with no special flags,
d80 18
a97 12
prints the MBR partition table of the specified device, i.e.,
.Bd -literal -offset 1n
# fdisk wd0
Disk: wd0       geometry: 5168/240/63 [78140160 Sectors]
Offset: 0       Signature: 0xAA55
         Starting       Ending       LBA Info:
 #: id    C   H  S -    C   H  S [       start:      size   ]
------------------------------------------------------------------------
 0: 04    0   1  1 -  170   0 63 [          63:     2570462 ] DOS FAT-16
 1: 00    0   0  0 -    0   0  0 [           0:           0 ] unused
 2: 00    0   0  0 -    0   0  0 [           0:           0 ] unused
*3: A6  170   1  1 - 5167 239 63 [     2570463:    75569697 ] OpenBSD
d100 11
a110 8
This 78140160 sector (38154MB) disk drive is divided into two MBR
partitions that span the whole disk.
The first MBR partition is a 1225MB FAT-16 DOS partition
(in this case containing a Phoenix BIOS Laptop Suspend-to-Disk file),
the second is a 36GB
.Ox
MBR partition using the remainder of the disk.
The fields of the output are thus:
d113 4
a116 4
Number identifying each MBR partition table entry.
There are a total of four slots.
.Sq *
denotes the MBR partition which is declared bootable.
d118 1
a118 1
MBR partition type identifier.
d121 2
a122 4
magic number hexadecimal A6 (166 decimal).
If no A6 MBR partition is found,
.Ox
can use an older
d124 1
a124 1
MBR partition (with a magic number of hexadecimal A5).
d126 1
a126 1
These fields provide the starting and ending address of the MBR partition
d130 1
a130 1
MBR partition in linear block addresses.
d134 1
a134 1
The BIOS geometry sectors field is
d136 1
a136 1
but the start field is
a139 2
These values must be kept correctly synchronized or a variety of
problems develop which are very difficult to diagnose.
d142 2
a143 89
.Ox
MBR partition shown above is subdivided further using the
functionality provided by
.Xr disklabel 8 ,
which provides
.Ox
partitions.
.Bd -literal -offset 1n
# Inside MBR partition 3: type A6 start 2570463 size 75569697
# /dev/rwd0c:
type: ESDI
disk: ESDI/IDE disk
label: HITACHI_DK13FA-4
flags:
bytes/sector: 512
sectors/track: 63
tracks/cylinder: 16
sectors/cylinder: 1008
cylinders: 16383
total sectors: 78140160
rpm: 3600
interleave: 1
trackskew: 0
cylinderskew: 0
headswitch: 0           # microseconds
track-to-track seek: 0  # microseconds
drivedata: 0

16 partitions:
#           size     offset  fstype [fsize bsize  cpg]
  a:     1740753    2570463  4.2BSD   2048 16384  328 # Cyl  2550*-  4276
  b:      819504    4311216    swap                   # Cyl  4277 -  5089
  c:    78140160          0  unused      0     0      # Cyl     0 - 77519
  d:     2097648    5130720  4.2BSD   2048 16384  328 # Cyl  5090 -  7170
  e:      614880    7228368  4.2BSD   2048 16384  328 # Cyl  7171 -  7780
  g:     2097648    7843248  4.2BSD   2048 16384  328 # Cyl  7781 -  9861
  h:      921312    9940896  4.2BSD   2048 16384  328 # Cyl  9862 - 10775
  i:     2570462         63   MSDOS                   # Cyl     0*-  2549
  j:     3355632   10862208  4.2BSD   2048 16384  328 # Cyl 10776 - 14104
  k:     2097648   14217840  4.2BSD   2048 16384  328 # Cyl 14105 - 16185
  l:     2097648   16315488  4.2BSD   2048 16384  328 # Cyl 16186 - 18266
  m:    59727024   18413136  4.2BSD   2048 16384  328 # Cyl 18267 - 77519
.Ed
.Pp
These
.Ox
partitions are then mounted as follows using
.Pa /etc/fstab :
.Bd -literal -offset indent
/dev/wd0a / ffs rw,softdep 1 1
/dev/wd0m /home ffs rw,softdep,nodev,nosuid 1 2
/dev/wd0d /tmp ffs rw,softdep,nodev,nosuid 1 2
/dev/wd0g /usr ffs rw,softdep,nodev 1 2
/dev/wd0h /usr/X11R6 ffs rw,softdep,nodev 1 2
/dev/wd0j /usr/local ffs rw,softdep,nodev 1 2
/dev/wd0k /usr/obj ffs rw,softdep,nodev,nosuid 1 2
/dev/wd0l /usr/src ffs rw,softdep,nodev,nosuid 1 2
/dev/wd0e /var ffs rw,softdep,nodev,nosuid 1 2
.Ed
.Sh OPTIONS
The options are as follows:
.Bl -tag -width Ds
.It Xo Fl c Ar cylinders ,
.Fl h Ar heads ,
.Fl s Ar sectors
.Xc
Specifies an alternate BIOS geometry for
.Nm
to use.
By default, an automatic calculation of disk size will be built
using heuristics.
These figures are taken from the in-core disklabel
(see
.Xr disklabel 8 ) ,
or values that
.Em /boot
has passed to the kernel.
.It Fl e
Use the interactive edit of
.Nm
to modify a MBR partition table.
The editor permits configuration of the MBR partition, as well as
extended MBR partitions.
.It Fl f Ar mbrname
Specifies an alternate MBR template file.
The default file is
.Pa /usr/mdec/mbr .
.It Fl i
Requests that the MBR partition data be re-initialized.
d146 2
a147 4
will completely overwrite the primary MBR bootcode and MBR partition table
using the default MBR template
.Pa /usr/mdec/mbr
(or the one optionally specified by the
d149 2
a150 2
flag).
In the default template, MBR partition number 3 will be configured as an
d152 1
a152 1
MBR partition spanning from cylinder 0, head 1, sector 1, and extending
d154 7
a160 4
This mode is designed to initialize the MBR the very first time.
.It Fl u
Update MBR bootcode, preserving existing MBR partition table.
The MBR bootcode extends from offset 0x000 to the start of the MBR partition table
d164 2
a165 2
flag, except the existing MBR partition table is preserved.
This is useful for writing new MBR bootcode onto an existing drive, and is
d169 1
a169 2
.El
.Sh COMMAND MODE
d172 2
a173 1
flag causes
d175 23
a197 16
to enter an interactive command mode.
The prompt contains information about the state of the edit
process.
.Pp
.Dl fdisk:*0>
.Pp
.Sq *
means that the in-memory copy of the boot block has been modified, but
not yet written to disk.
.Pp
0 is the disk offset of the currently selected boot block being edited.
This number could be something other than zero when extended MBR partitions
are being edited (using the
.Em select
subcommand).
.Pp
d199 2
a200 2
.Bl -tag -width Ds
.It help
d204 1
a204 1
.It manual
d206 1
a206 1
.It reinit
d209 1
a209 1
.It disk
d212 4
a215 3
probed using kernel provided information and various heuristics.
The disk geometry may be changed at this point.
.It edit Ar #
d218 10
a227 4
Sizes may be adjusted using either in BIOS geometry mode or
sector offsets and sizes.
.It flag Ar #
Make the given MBR partition table entry bootable.
d229 7
a235 7
.\" If you wish to boot from an extended
.\" MBR partition, you will need to mark the MBR partition table entry for the
.\" extended MBR partition as bootable.
.\" If an optional value is given, the MBR partition is marked with the given
.\" value, and other MBR partitions are not touched.
.It update
Update the machine MBR bootcode and 0xAA55 signature in the memory copy
d237 1
a237 1
Note that this option will overwrite an NT disk
d239 3
a241 1
.It select Ar #
d243 2
a244 10
to by the extended MBR partition table entry in the current boot block.
.It setpid Ar #
Change the MBR partition
identifier of the given MBR partition table entry.
This command is particularly useful for reassigning
an existing MBR partition to
.Ox .
.It swap Ar # Ar #
Swap two MBR entries.
.It print
d247 1
a247 1
.It write
d249 2
a250 1
.It exit
d256 1
a256 1
.It quit
d265 1
a265 1
.It abort
d269 14
a282 2
Hand crafted disk layouts can be highly error prone;
ensure that the
d284 1
a284 1
MBR partition starts on a cylinder boundary.
d286 9
a300 3
.Xr boot_alpha 8 ,
.Xr boot_amd64 8 ,
.Xr boot_cats 8 ,
a301 2
.Xr boot_macppc 8 ,
.Xr boot_zaurus 8 ,
d303 7
@


1.1.1.4
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d1 1
a1 1
.\"	$OpenBSD: fdisk.8,v 1.50 2005/05/01 20:53:38 jmc Exp $
d35 4
a38 6
.Oo
.Fl c Ar cylinders
.Fl h Ar heads
.Fl s Ar sectors
.Oc
.Op Fl f Ar mbrfile
d101 1
a101 1
.It Em "C/H/S"
d203 1
a203 1
.It Fl f Ar mbrfile
d323 6
a334 1
.Xr fstab 5 ,
a341 7
.Sh CAVEATS
Hand crafted disk layouts are highly error prone.
MBR partitions should start on a cylinder boundary
(head 0, sector 1),
except when starting on track 0,
(these should begin at head 1, sector 1).
MBR partitions should also end at cylinder boundaries.
@


1.1.1.5
log
@import a few security-wise relevant changes right now
@
text
@d1 1
a1 1
.\"	$OpenBSD: fdisk.8,v 1.51 2006/08/05 14:04:00 ray Exp $
d302 1
a302 1
.It print Op unit
a304 10
If
.Ar unit
is specified as
.Sq b ,
.Sq k ,
.Sq m ,
or
.Sq g ,
the MBR is printed in units of bytes, kilobytes, megabytes, or gigabytes.
Otherwise the number of sectors is printed.
@


