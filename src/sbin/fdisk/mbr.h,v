head	1.3;
access;
symbols
	MIRBSD_10:1.2.0.4
	MIRBSD_10_BASE:1.2
	OPENBSD_4_0:1.1.1.1
	MIRBSD_9_BASE:1.2
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	cvs-200507211800:1.1.1.1
	cvs-200504302130:1.1.1.1
	cvs-200504291700:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2008.04.07.05.57.16;	author tg;	state Exp;
branches;
next	1.2;
commitid	10047F9B7820E825646;

1.2
date	2005.03.06.19.49.54;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.26.30;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.26.30;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@make the ‘u’pdate command (not the ‘um’in command tho!) randomise, not
just zero out, the (NT) Disk Signature, so that otherwise identical
volumes, e.g. for a RAID,
• differ in their NT device path,
• show up as different (boot) devices under Linux,
• have a different dkcsum on BSD
@
text
@/**	$MirOS: src/sbin/fdisk/mbr.h,v 1.2 2005/03/06 19:49:54 tg Exp $ */
/*	$OpenBSD: mbr.h,v 1.11 2003/06/03 01:13:19 weingart Exp $	*/

/*
 * Copyright (c) 1997 Tobias Weingartner
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _MBR_H
#define _MBR_H

#include "part.h"

/* Various constants */
#define	MBR_CODE_SIZE		0x1BE	/* all of boot code */
#define	MBR_SMALLCODE_SIZE	0x1B7	/* not the fdef flag and NT magic */
#define	MBR_PART_SIZE		0x10	/* size of one PTBL entry */
#define	MBR_FORCE_DEFPART	0x1B7	/* offset of the fdef flag */
#define	MBR_DISKSIG_OFF		0x1B8	/* offset of the disc signature */
#define	MBR_PART_OFF		0x1BE	/* offset of first PTBL entry */
#define	MBR_SIG_OFF		0x1FE	/* offset of the 55AA signature */

/* MBR type */
typedef struct _mbr_t {
	off_t reloffset;
	off_t offset;
	unsigned char code[MBR_CODE_SIZE];
	prt_t part[NDOSPART];
	unsigned short signature;
} mbr_t;

/* Prototypes */
void MBR_print_disk(char *);
void MBR_print(mbr_t *, char *);
void MBR_parse(disk_t *, char *, off_t, off_t, mbr_t *);
void MBR_make(mbr_t *, char *);
void MBR_init(disk_t *, mbr_t *);
int MBR_read(int, off_t, char *);
int MBR_write(int, off_t, char *);
void MBR_pcopy(disk_t *, mbr_t *);

/* Sanity check */
#include <machine/param.h>
#if (DEV_BSIZE != 512)
#error "DEV_BSIZE != 512, somebody better fix me!"
#endif

#endif /* _MBR_H */
@


1.2
log
@merge src/sbin
@
text
@d1 1
a1 1
/**	$MirOS$ */
d38 2
d41 1
a41 3
#define	MBR_SIG_OFF		0x1FE
#define	MBR_FORCE_DEFPART	0x01B7	/* offset of the fdef flag */

@


1.1
log
@Initial revision
@
text
@d1 1
d35 6
a40 4
#define MBR_CODE_SIZE 0x1BE
#define MBR_PART_SIZE	0x10
#define MBR_PART_OFF 0x1BE
#define MBR_SIG_OFF 0x1FE
a68 1

@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
