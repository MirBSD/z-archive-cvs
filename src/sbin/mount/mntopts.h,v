head	1.1;
branch	1.1.1;
access;
symbols
	MIRBSD_10:1.1.1.2.0.4
	MIRBSD_10_BASE:1.1.1.2
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200507211800:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2005.02.05.17.26.38;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.26.38;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.20.57.21;	author tg;	state Exp;
branches;
next	;
commitid	560042e0092f571e;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$OpenBSD: mntopts.h,v 1.10 2003/06/02 20:06:15 millert Exp $	*/
/*	$NetBSD: mntopts.h,v 1.3 1995/03/18 14:56:59 cgd Exp $	*/

/*-
 * Copyright (c) 1994
 *      The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)mntopts.h	8.3 (Berkeley) 3/27/94
 */

struct mntopt {
	const char *m_option;	/* option name */
	int m_inverse;		/* if a negative option, eg "dev" */
	int m_flag;		/* bit to set, eg. MNT_RDONLY */
};

/* User-visible MNT_ flags. */
#define MOPT_ASYNC		{ "async",	0, MNT_ASYNC }
#define MOPT_NOACCESSTIME	{ "accesstime",	1, MNT_NOATIME }
#define MOPT_NOATIME		{ "atime",	1, MNT_NOATIME }
#define MOPT_NODEV		{ "dev",	1, MNT_NODEV }
#define MOPT_NOEXEC		{ "exec",	1, MNT_NOEXEC }
#define MOPT_NOSUID		{ "suid",	1, MNT_NOSUID }
#define MOPT_RDONLY		{ "rdonly",	0, MNT_RDONLY }
#define MOPT_SYNC		{ "sync",	0, MNT_SYNCHRONOUS }
#define MOPT_UNION		{ "union",	0, MNT_UNION }
#define MOPT_USERQUOTA		{ "userquota",	0, 0 }
#define MOPT_GROUPQUOTA		{ "groupquota",	0, 0 }
#define MOPT_SOFTDEP		{ "softdep",	0, MNT_SOFTDEP }

/* Control flags. */
#define MOPT_FORCE		{ "force",	0, MNT_FORCE }
#define MOPT_UPDATE		{ "update",	0, MNT_UPDATE }
#define MOPT_RELOAD		{ "reload",	0, MNT_RELOAD }

/* Support for old-style "ro", "rw" flags. */
#define MOPT_RO			{ "ro",		0, MNT_RDONLY }
#define MOPT_RW			{ "rw",		1, MNT_RDONLY }

/* This is parsed by mount(8), but is ignored by specific mount_*(8)s. */
#define MOPT_AUTO		{ "auto",	0, 0 }

#define MOPT_FSTAB_COMPAT						\
	MOPT_RO,							\
	MOPT_RW,							\
	MOPT_AUTO

/* Standard options which all mounts can understand. */
#define MOPT_STDOPTS							\
	MOPT_USERQUOTA,							\
	MOPT_GROUPQUOTA,						\
	MOPT_FSTAB_COMPAT,						\
	MOPT_NOACCESSTIME,						\
	MOPT_NOATIME,							\
	MOPT_NODEV,							\
	MOPT_NOEXEC,							\
	MOPT_NOSUID,							\
	MOPT_RDONLY,							\
	MOPT_UNION

void getmntopts(const char *, const struct mntopt *, int *);
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d1 1
a1 1
/*	$OpenBSD: mntopts.h,v 1.15 2005/05/26 01:37:49 pedro Exp $	*/
a34 7
#define MFLAG_INVERSE		0x01	/* if a negative option, eg "dev" */
#define MFLAG_SET		0x02	/* 1 => set bit in mntflags,
					   0 => return flag */
#define MFLAG_STRVAL		0x04	/* option needs a string value */
#define MFLAG_INTVAL		0x08	/* option needs an int value */
#define MFLAG_OPT		0x10	/* value is optional */

d37 1
a38 6
	int m_oflags;
};

union mntval {
	char *strval;
	int ival;
d42 12
a53 14
#define MOPT_ASYNC	{ "async",	MNT_ASYNC, MFLAG_SET }
#define MOPT_NOACCESSTIME	{ "accesstime", MNT_NOATIME,		\
					MFLAG_INVERSE | MFLAG_SET }
#define MOPT_NOATIME	{ "atime",      MNT_NOATIME, MFLAG_INVERSE | MFLAG_SET }
#define MOPT_NODEV	{ "dev",	MNT_NODEV, MFLAG_INVERSE | MFLAG_SET }
#define MOPT_NOEXEC	{ "exec",	MNT_NOEXEC, MFLAG_INVERSE | MFLAG_SET }
#define MOPT_NOSUID	{ "suid",	MNT_NOSUID, MFLAG_INVERSE | MFLAG_SET }
#define MOPT_RDONLY	{ "rdonly",	MNT_RDONLY, MFLAG_SET }
#define MOPT_SYNC	{ "sync",	MNT_SYNCHRONOUS, MFLAG_SET }
#define MOPT_USERQUOTA	{ "userquota",	0, MFLAG_SET | MFLAG_STRVAL \
					    | MFLAG_OPT }
#define MOPT_GROUPQUOTA	{ "groupquota",	0, MFLAG_SET | MFLAG_STRVAL \
					    | MFLAG_OPT }
#define MOPT_SOFTDEP	{ "softdep",	MNT_SOFTDEP, MFLAG_SET }
d56 3
a58 3
#define MOPT_FORCE	{ "force",	MNT_FORCE, MFLAG_SET }
#define MOPT_UPDATE	{ "update",	MNT_UPDATE, MFLAG_SET }
#define MOPT_RELOAD	{ "reload",	MNT_RELOAD, MFLAG_SET }
d61 2
a62 2
#define MOPT_RO		{ "ro",		MNT_RDONLY, MFLAG_SET }
#define MOPT_RW		{ "rw",		MNT_RDONLY, MFLAG_INVERSE | MFLAG_SET }
d65 1
a65 1
#define MOPT_AUTO		{ "auto",	0, MFLAG_SET }
d82 2
a83 1
	MOPT_RDONLY
d85 1
a85 2
int getmntopts(const char *, const struct mntopt *, int *);
int getmntopt(char **, union mntval *, const struct mntopt *, int *);
@

