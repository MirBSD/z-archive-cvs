head	1.1;
branch	1.1.1;
access;
symbols
	MIRBSD_10:1.1.1.2.0.4
	MIRBSD_10_BASE:1.1.1.2
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200507211800:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.1
date	2005.02.05.17.26.42;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.26.42;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.20.57.30;	author tg;	state Exp;
branches;
next	;
commitid	560042e0092f571e;


desc
@@


1.1
log
@Initial revision
@
text
@.\"	$OpenBSD: route.8,v 1.30 2003/08/31 07:03:29 jmc Exp $
.\"	$NetBSD: route.8,v 1.6 1995/03/18 15:00:13 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)route.8	8.3 (Berkeley) 3/19/94
.\"
.Dd March 19, 1994
.Dt ROUTE 8
.Os
.Sh NAME
.Nm route
.Nd manually manipulate the routing tables
.Sh SYNOPSIS
.Nm route
.Op Fl dnqv
.Ar command
.Oo
.Op Ar modifiers
.Ar args
.Oc
.Sh DESCRIPTION
.Nm
is a utility used to manually manipulate the network routing tables.
It normally is not needed, as a
system routing table management daemon, such as
.Xr routed 8 ,
should tend to this task.
.Pp
The
.Nm
utility supports a limited number of general options,
but a rich command language enables the user to specify
any arbitrary request that could be delivered via the
programmatic interface discussed in
.Xr route 4 .
.Bl -tag -width Ds
.It Fl d
Run in debug-only mode, i.e., don't actually modify the routing table.
.It Fl n
Bypasses attempts to print host and network names symbolically
when reporting actions.
(The process of translating between symbolic
names and numerical equivalents can be quite time consuming, and
may require correct operation of the network; thus it may be expedient
to forgo this, especially when attempting to repair networking operations.)
.It Fl v
(verbose) Print additional details.
.It Fl q
Suppress all output.
.El
.Pp
The
.Nm
utility provides several commands:
.Pp
.Bl -tag -width Fl -compact
.It Cm add
Add a route.
.It Cm flush
Remove all routes.
.It Cm delete
Delete a specific route.
.It Cm change
Change aspects of a route (such as its gateway).
.It Cm get
Lookup and display the route for a destination.
.It Cm show
Print out the route table similar to "netstat \-r" (see
.Xr netstat 1 ) .
.It Cm monitor
Continuously report any changes to the routing information base,
routing lookup misses, or suspected network partitionings.
.El
.Pp
The monitor command has the syntax
.Pp
.Bd -filled -offset indent -compact
.Nm route Op Fl n
.Cm monitor
.Ed
.Pp
The flush command has the syntax
.Pp
.Bd -filled -offset indent -compact
.Nm route Op Fl n
.Cm flush
.Op Ar family
.Ed
.Pp
If the
.Cm flush
command is specified,
.Nm
will
.Dq flush
the routing tables of all gateway entries.
When the address family is specified by any of the
.Fl osi ,
.Fl xns ,
.Fl ipx ,
.Fl link ,
.Fl x25 ,
.Fl inet ,
or
.Fl inet6
modifiers, only routes having destinations with addresses in the
delineated family will be deleted.
.Pp
The other commands have the following syntax:
.Pp
.Bd -filled -offset indent -compact
.Nm route Op Fl n
.Ar command
.Op Fl net No \&| Fl host
.Ar destination gateway
.Ed
.Pp
where
.Ar destination
is the destination host or network and
.Ar gateway
is the next-hop intermediary via which packets should be routed.
Routes to a particular host may be distinguished from those to
a network by interpreting the Internet address specified as the
.Ar destination
argument.
The optional modifiers
.Fl net
and
.Fl host
force the destination to be interpreted as a network or a host, respectively.
Otherwise, if the
.Ar destination
has a
.Dq local address part
of
.Dv INADDR_ANY ,
or if the
.Ar destination
is the symbolic name of a network, then the route is
assumed to be to a network; otherwise, it is presumed to be a
route to a host.
.Pp
For example,
.Li 128.32
is interpreted as
.Fl host Li 128.0.0.32 ;
.Li 128.32.130
is interpreted as
.Fl host Li 128.32.0.130 ;
.Fl net Li 128.32
is interpreted as
.Li 128.32.0.0 ;
and
.Fl net Li 128.32.130
is interpreted as
.Li 128.32.130.0 .
A more detailed syntax is also available, for example
.Fl net Li 192.168.64.0/20
is interpreted to specify that the high 20 bits of the address
192.168.64.0 are the requested network.
.Pp
As a special case, the default route can be accessed using an
argument of
.Dq default
for
.Ar destination .
.Pp
If the destination is directly reachable
via an interface requiring
no intermediary system to act as a gateway, the
.Fl interface
modifier should be specified;
the gateway given is the address of this host on the common network,
indicating the interface to be used for transmission.
.Pp
The optional modifiers
.Fl xns ,
.Fl osi ,
and
.Fl link
specify that all subsequent addresses are in the
.Tn XNS
.Tn OSI
address families,
or are specified as link-level addresses,
and the names must be numeric specifications rather than
symbolic names.
.Pp
The optional
.Fl netmask
qualifier is intended
to achieve the effect of an
.Tn OSI
.Tn ESIS
redirect with the netmask option,
or to manually add subnet routes with
netmasks different from that of the implied network interface
(as would otherwise be communicated using the OSPF or ISIS routing protocols).
One specifies an additional ensuing address parameter
(to be interpreted as a network mask).
The implicit network mask generated in the
.Dv AF_INET
case
can be overridden by making sure this option follows the destination parameter.
.Fl prefixlen
is also available for a similar purpose, for IPv6/v4.
.Pp
Routes have associated flags which influence operation of the protocols
when sending to destinations matched by the routes.
These flags may be set (or sometimes cleared)
by indicating the following corresponding modifiers:
.Bd -literal
-cloning   RTF_CLONING    - generates a new route on use
-xresolve  RTF_XRESOLVE   - emit mesg on use (for external lookup)
-iface    ~RTF_GATEWAY    - destination is directly reachable
-static    RTF_STATIC     - manually added route
-nostatic ~RTF_STATIC     - pretend route added by kernel or daemon
-reject    RTF_REJECT     - emit an ICMP unreachable when matched
-blackhole RTF_BLACKHOLE  - silently discard pkts (during updates)
-proto1    RTF_PROTO1     - set protocol specific routing flag #1
-proto2    RTF_PROTO2     - set protocol specific routing flag #2
-llinfo    RTF_LLINFO     - validly translates proto addr to link addr
.Ed
.Pp
The optional modifiers
.Fl rtt ,
.Fl rttvar ,
.Fl sendpipe ,
.Fl recvpipe ,
.Fl mtu ,
.Fl hopcount ,
.Fl expire ,
and
.Fl ssthresh
provide initial values to quantities maintained in the routing entry
by transport level protocols, such as TCP or TP4.
These may be individually locked by preceding each such modifier to
be locked by
the
.Fl lock
meta-modifier, or one can
specify that all ensuing metrics may be locked by the
.Fl lockrest
meta-modifier.
.Pp
In a
.Cm change
or
.Cm add
command where the destination and gateway are not sufficient to specify
the route (as in the
.Tn ISO
case where several interfaces may have the
same address), the
.Fl ifp
or
.Fl ifa
modifiers may be used to determine the interface or interface address.
.Pp
All symbolic names specified for a
.Ar destination
or
.Ar gateway
are looked up first as a host name using
.Xr gethostbyname 3 .
If this lookup fails,
.Xr getnetbyname 3
is then used to interpret the name as that of a network.
.Pp
.Nm
uses a routing socket and the new message types
RTM_ADD,
RTM_DELETE,
RTM_GET,
and
RTM_CHANGE.
As such, only the superuser may modify
the routing tables.
.Sh FILES
.Bl -tag -width "/etc/mygate" -compact
.It Pa /etc/mygate
Default gateway address.
.El
.Sh DIAGNOSTICS
.Bl -tag -width Ds
.It Sy "add [host \&| network ] %s: gateway %s flags %x"
The specified route is being added to the tables.
The values printed are from the routing table entry supplied in the
.Xr ioctl 2
call.
If the gateway address used was not the primary address of the gateway
(the first one returned by
.Xr gethostbyname 3 ) ,
the gateway address is printed numerically as well as symbolically.
.It Sy "delete [ host &| network ] %s: gateway %s flags %x"
As above, but when deleting an entry.
.It Sy "%s %s done"
When the
.Cm flush
command is specified, each routing table entry deleted
is indicated with a message of this form.
.It Sy "Network is unreachable"
An attempt to add a route failed because the gateway listed was not
on a directly connected network.
The next-hop gateway must be given.
.It Sy "not in table"
A
.Cm delete
operation was attempted for an entry which
wasn't present in the tables.
.It Sy "routing table overflow"
An
.Cm add
operation was attempted, but the system was
low on resources and was unable to allocate memory
to create the new entry.
.El
.Sh SEE ALSO
.Xr esis 4 ,
.Xr netintro 4 ,
.Xr route 4 ,
.Xr mygate 5 ,
.Xr routed 8
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.2 .
IPv6 support was added by WIDE/KAME project.
.Sh BUGS
The first paragraph may have slightly exaggerated
.Xr routed Ns 's
abilities.
.Pp
Some uses of the
.Fl ifa
or
.Fl ifp
modifiers with the
.Cm add
command will incorrectly fail with a
.Dq Network is unreachable
message if there is no default route.
See case
.Dv RTM_ADD
in
.Pa sys/net/rtsock.c:route_output
for details.
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d1 1
a1 1
.\"	$OpenBSD: route.8,v 1.43 2005/03/30 08:52:35 henning Exp $
d41 1
a41 1
.Op Fl dnqtv
d49 2
a50 3
is a utility used to manually view and manipulate the network routing tables.
Except for setting up the default route, it normally is not needed to
manipulate routes, as a
a52 3
.Xr ospfd 8 ,
or
.Xr bgpd 8 ,
a54 6
.Nm
can be used to modify nearly any aspect of the routing policy,
except packet forwarding, which can be manipulated through the
.Xr sysctl 8
command.
.Pp
a61 2
.Pp
The options are as follows:
d66 1
a66 1
Bypass attempts to print host and network names symbolically
d72 2
a75 6
.It Fl t
Write routing messages to a fake device
.Pa ( /dev/null )
instead of a real routing socket to test route manipulation.
.It Fl v
(verbose) Print additional details.
d85 4
a90 4
.It Cm delete
Delete a specific route.
.It Cm flush
Remove all routes.
d93 3
a98 3
.It Cm show
Print out the route table similar to "netstat -r" (see
.Xr netstat 1 ) .
d101 5
a105 8
The
.Cm get
command has the syntax:
.Bd -filled -offset indent
.Nm route Op Fl nv
.Cm get
.Op Ar modifiers
.Ar address
d108 4
a111 5
The
.Cm flush
command has the syntax:
.Bd -filled -offset indent
.Nm route Op Fl dnqtv
d123 10
a132 4
When the address family is specified by any one of the
.Ar family
modifiers (listed below), only routes having destinations with addresses
in the
d135 1
a135 7
The
.Cm monitor
command has the syntax:
.Bd -filled -offset indent
.Nm route Op Fl \&dn
.Cm monitor
.Ed
d137 1
a137 4
The
.Cm show
command has the syntax:
.Bd -filled -offset indent
a138 7
.Cm show
.Op Ar family
.Ed
.Pp
The other commands have the syntax:
.Bd -filled -offset indent
.Nm route Op Fl dnqtv
d140 2
a141 2
.Op Ar modifiers
.Ar destination gateway Op Ar netmask
d144 1
d146 1
a146 1
is the destination host or network,
d148 1
a148 6
is the next-hop intermediary via which packets should be routed,
and
.Ar netmask
behaves the same as the argument to the
.Fl netmask
modifier and is described below.
d157 8
a164 23
cause the destination to be interpreted as a network or a host, respectively.
Otherwise, type is chosen based on the following rules:
.Pp
The route is assumed to be to a network if any of the following apply to
.Ar destination :
.Pp
.Bl -bullet -compact
.It
it is the word "default", equivalent to 0/0
.It
it is an IPv4 address with less than 3 dots
.It
it is an IPv4 address with a
.Dq / Ns Em XX
suffix (where
.Em XX
is the number of bits in the network portion of the address
and is less than 32)
.It
it is the symbolic name of a network.
.El
.Pp
If
d166 3
a168 5
is a valid IP address or host name, it is presumed to be a route to a host.
.Pp
If none of the above apply,
.Nm
prints an error message and exits.
d171 7
a177 1
.Li 192.168.1.1
d179 1
a179 1
.Fl host Li 192.168.1.1
d181 1
a181 1
.Li 192.168.1
d183 11
a193 12
.Fl net Li 192.168.1 .
Note, however, that
.Li 192.168.2.0
will be interpreted as
.Fl host Li 192.168.2.0
since it is a complete IP address with 3 dots.
In this case the number of bits in the network portion of the address must
be explicitly listed, for example
.Li 192.168.2.0/24 ,
.Li 192.168.2/24 ,
or alternately
.Li 192.168.2 .
d203 4
a206 25
To allow addresses to be interpreted as belonging to a particular address
family (as well as for use in the
.Ar family
arguments to some commands), the following modifiers may be used:
.Pp
.Bl -tag -width -inet6 -compact
.It Fl inet
Internet Protocol version 4 (IPv4) addresses
(see
.Xr ip 4 )
.It Fl inet6
Internet Protocol version 6 (IPv6) addresses
(see
.Xr ip6 4 )
.It Fl ipx
Novell's Internet Packet Exchange (IPX) addresses
.It Fl link
Hardware (link-level) addresses
.It Fl sa
Actual
.Vt sockaddr
data, in hexadecimal format
.El
.Pp
The optional modifier
d208 5
a212 1
specifies that all subsequent addresses are specified as link-level addresses,
d218 6
a223 1
qualifier is intended to manually add subnet routes with
d225 1
a225 1
(as would otherwise be communicated using a routing protocol).
d231 1
a231 3
can be overridden by making sure this option follows the
.Ar destination
parameter.
a234 7
The optional
.Fl mpath
modifier needs to be specified with the
.Cm add
command to be able to enter multiple gateways for the same destination address
(multipath).
.Pp
d239 12
a250 13
.Bl -column blackhole RTF_BLACKHOLE
.It Fl blackhole Ta Dv RTF_BLACKHOLE Ta "silently discard pkts (during updates)"
.It Fl cloning   Ta Dv RTF_CLONING   Ta "generates a new route on use"
.It Fl iface     Ta Dv ~RTF_GATEWAY  Ta "destination is directly reachable"
.It Fl llinfo    Ta Dv RTF_LLINFO    Ta "validly translates proto addr to link addr"
.It Fl mpath     Ta Dv RTF_MPATH     Ta "multiple gateways for a destination exist"
.It Fl nostatic  Ta Dv ~RTF_STATIC   Ta "pretend route added by kernel or daemon"
.It Fl proto1    Ta Dv RTF_PROTO1    Ta "set protocol specific routing flag #1"
.It Fl proto2    Ta Dv RTF_PROTO2    Ta "set protocol specific routing flag #2"
.It Fl reject    Ta Dv RTF_REJECT    Ta "emit an ICMP unreachable when matched"
.It Fl static    Ta Dv RTF_STATIC    Ta "manually added route"
.It Fl xresolve  Ta Dv RTF_XRESOLVE  Ta "emit mesg on use (for external lookup)"
.El
d253 7
a259 1
.Fl mtu
d261 1
a261 1
.Fl expire
d263 1
a263 13
by transport level protocols, such as TCP (see
.Xr tcp 4 ) .
They have the following meanings:
.Pp
.Bl -tag -width "-ssthresh n" -compact
.It Fl expire Ar n
Lifetime for route (e.g., if generated by a redirect).
.It Fl mtu Ar n
Maximum transmission unit
.Tn ( MTU )
size for this path.
.El
.Pp
d278 4
a281 1
the route, the
a286 17
The optional
.Fl genmask
modifier specifies that a cloning mask is present.
This specifies the mask applied when determining if a child route should
be created.
It is only applicable to network routes with the
.Dv RTF_CLONING
flag set.
.Pp
The optional
.Fl label
modifier specifies on route addition or modification that the route
should have the given
.Em label
associated with it.
Route labels can be used to attach arbitrary information to a route.
.Pp
d291 2
a292 2
are looked up first as a network name using
.Xr getnetbyname 3 .
d294 2
a295 2
.Xr gethostbyname 3
is then used to interpret the name as a valid host name.
d298 4
a301 6
uses a routing socket (see
.Xr route 4 )
and the message types
.Dv RTM_ADD ,
.Dv RTM_DELETE ,
.Dv RTM_GET ,
d303 1
a303 1
.Dv RTM_CHANGE .
d307 1
a307 3
.Bl -tag -width "/etc/networks" -compact
.It Pa /etc/hosts
host name database
d309 1
a309 3
default gateway address
.It Pa /etc/networks
network name database
d312 3
a314 3
.Bl -diag
.It "%s: gateway %s flags %x"
The specified route is being added to or deleted from the tables.
d322 3
a324 1
.It "%s %s done"
d329 1
a329 1
.It "Network is unreachable"
d333 1
a333 1
.It "not in table"
d338 1
a338 1
.It "routing table overflow"
d346 1
a346 3
.Xr netstat 1 ,
.Xr gethostbyname 3 ,
.Xr getnetbyname 3 ,
a348 2
.Xr tcp 4 ,
.Xr hosts 5 ,
d350 1
a350 5
.Xr networks 5 ,
.Xr bgpd 8 ,
.Xr ospfd 8 ,
.Xr routed 8 ,
.Xr sysctl 8
a356 13
.Pp
The
.Fl recvpipe ,
.Fl hopcount ,
.Fl sendpipe ,
.Fl ssthres ,
.Fl rtt ,
and
.Fl rttvar
modifiers used to be used to initialize various quantities in routing
table entries.
The routing system no longer uses these values and the modifiers
exist now only for compatibility with other operating systems.
d359 1
a359 1
.Xr routed 8 Ns 's
d374 1
a374 3
.Fn route_output
from
.Pa sys/net/rtsock.c
@

