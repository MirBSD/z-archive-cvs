head	1.6;
access;
symbols
	MIRBSD_10:1.4.0.4
	MIRBSD_10_BASE:1.4
	MIRBSD_9_BASE:1.4
	MIRBSD_8:1.4.0.2
	MIRBSD_8_BASE:1.4
	cvs-200507211800:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2009.08.09.14.21.36;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004A7EDB636D03C67C;

1.5
date	2009.04.23.18.11.35;	author tg;	state Exp;
branches;
next	1.4;
commitid	10049F0AF6E13846499;

1.4
date	2005.11.23.16.44.00;	author tg;	state Exp;
branches;
next	1.3;
commitid	560c43849c55498d;

1.3
date	2005.05.23.10.16.51;	author tg;	state Exp;
branches;
next	1.2;
commitid	64f64291ad5e7d6c;

1.2
date	2005.03.06.19.50.18;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.26.38;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.26.38;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.20.57.22;	author tg;	state Exp;
branches;
next	;
commitid	560042e0092f571e;


desc
@@


1.6
log
@make this compile again, mount_ext2fs(8) read-write again by default
(XXX Benny, please test if async mounts are working), mention as news
@
text
@/**	$MirOS: src/sbin/mount_ext2fs/mount_ext2fs.c,v 1.5 2009/04/23 18:11:35 tg Exp $	*/
/*	$OpenBSD: mount_ext2fs.c,v 1.13 2005/04/08 20:09:36 jaredy Exp $	*/
/*	$NetBSD: mount_ffs.c,v 1.3 1996/04/13 01:31:19 jtc Exp $	*/

/*-
 * Copyright (c) 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/mount.h>

#include <err.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "mntopts.h"

__SCCSID("@@(#)mount_ufs.c	8.2 (Berkeley) 3/27/94");
__RCSID("$MirOS: src/sbin/mount_ext2fs/mount_ext2fs.c,v 1.5 2009/04/23 18:11:35 tg Exp $");

void	ext2fs_usage(void);

static const struct mntopt mopts[] = {
	MOPT_STDOPTS,
	MOPT_UPDATE,
	MOPT_ASYNC,
	MOPT_SYNC,
	MOPT_RELOAD,
	{ NULL }
};

int
main(int argc, char *argv[])
{
	struct ufs_args args;		/* XXX ffs_args */
	int ch, mntflags;
	char fs_name[MAXPATHLEN], *errcause;

	mntflags = 0;
	optind = optreset = 1;		/* Reset for parse of new argv. */
	while ((ch = getopt(argc, argv, "o:")) != -1)
		switch (ch) {
		case 'o':
			getmntopts(optarg, mopts, &mntflags);
			break;
		case '?':
		default:
			ext2fs_usage();
		}
	argc -= optind;
	argv += optind;

	if (argc != 2)
		ext2fs_usage();

        args.fspec = argv[0];		/* The name of the device file. */
	if (realpath(argv[1], fs_name) == NULL)	/* The mount point. */
		err(1, "realpath %s", argv[1]);

#define DEFAULT_ROOTUID	-2
	args.export_info.ex_root = DEFAULT_ROOTUID;
	if (mntflags & MNT_RDONLY)
		args.export_info.ex_flags = MNT_EXRDONLY;
	else
		args.export_info.ex_flags = 0;

	if (mount(MOUNT_EXT2FS, fs_name, mntflags, &args) < 0) {
		switch (errno) {
		case EMFILE:
			errcause = "mount table full";
			break;
		case EINVAL:
			errcause =
			    "specified device does not match mounted device";
			break;
		case EOPNOTSUPP:
			errcause = "filesystem not supported by kernel";
			break;
		default:
			errcause = strerror(errno);
			break;
		}
		errx(1, "%s on %s: %s", args.fspec, fs_name, errcause);
	}
	exit(0);
}

void
ext2fs_usage(void)
{
	(void)fprintf(stderr,
		"usage: mount_ext2fs [-o options] special node\n");
	exit(1);
}
@


1.5
log
@we sell rope
@
text
@d1 1
a1 1
/**	$MirOS: src/sbin/mount_ext2fs/mount_ext2fs.c,v 1.4 2005/11/23 16:44:00 tg Exp $	*/
d47 1
a47 1
__RCSID("$MirOS: src/sbin/mount_ext2fs/mount_ext2fs.c,v 1.4 2005/11/23 16:44:00 tg Exp $");
d67 1
a67 1
	mntflags = MNT_RDONLY;
@


1.4
log
@fastmerge
@
text
@d1 1
a1 1
/**	$MirOS: src/sbin/mount_ext2fs/mount_ext2fs.c,v 1.3 2005/05/23 10:16:51 tg Exp $	*/
d47 1
a47 1
__RCSID("$MirOS$");
d67 1
a67 1
	mntflags = 0;
@


1.3
log
@* add a debugging if the drive is still dirty after reload
  (fsck_ffs automatically reloads the root filesystem)
* ext2fs can handle mount -o reload
@
text
@d1 2
a2 2
/**	$MirOS: src/sbin/mount_ext2fs/mount_ext2fs.c,v 1.2 2005/03/06 19:50:18 tg Exp $	*/
/*	$OpenBSD: mount_ext2fs.c,v 1.12 2003/07/03 22:41:40 tedu Exp $	*/
a33 3
#include <sys/cdefs.h>
__RCSID("$MirOS: src/sbin/mount_ext2fs/mount_ext2fs.c,v 1.2 2005/03/06 19:50:18 tg Exp $");

d46 3
d86 1
a86 1
		err(1, "realpath %s", fs_name);
@


1.2
log
@merge src/sbin
@
text
@d1 1
a1 1
/**	$MirOS$	*/
d35 1
a35 1
__RCSID("$MirOS$");
d56 1
@


1.1
log
@Initial revision
@
text
@d1 1
d34 2
a35 13
#ifndef lint
static char copyright[] =
"@@(#) Copyright (c) 1993, 1994\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static char sccsid[] = "@@(#)mount_ufs.c	8.2 (Berkeley) 3/27/94";
#else
static char rcsid[] = "$OpenBSD: mount_ext2fs.c,v 1.12 2003/07/03 22:41:40 tedu Exp $";
#endif
#endif /* not lint */
d54 2
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d1 1
a1 1
/*	$OpenBSD: mount_ext2fs.c,v 1.13 2005/04/08 20:09:36 jaredy Exp $	*/
d43 1
a43 1
static char rcsid[] = "$OpenBSD: mount_ext2fs.c,v 1.13 2005/04/08 20:09:36 jaredy Exp $";
d93 1
a93 1
		err(1, "realpath %s", argv[1]);
@

