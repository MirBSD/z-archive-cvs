head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2008.08.03.23.19.09;	author tg;	state Exp;
branches;
next	1.2;
commitid	10048963D0012296147;

1.2
date	2008.08.03.21.02.00;	author tg;	state Exp;
branches;
next	1.1;
commitid	10048961CCE67B72AC5;

1.1
date	2008.08.01.18.09.17;	author tg;	state Exp;
branches;
next	;
commitid	1004893513244B11E80;


desc
@@


1.3
log
@missing #endif, oops
@
text
@/*-
 * Copyright (c) 2008
 *	Thorsten Glaser <tg@@mirbsd.org>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 */

#include <libckern.h>

__RCSID("$MirOS: src/kern/c/strcmp.c,v 1.2 2008/08/03 21:02:00 tg Exp $");

#ifdef WIDEC
#define NUL L'\0'
int
wcscmp(const wchar_t *cp1, const wchar_t *cp2)
{
#else
#define NUL '\0'
int
strcmp(const char *s1, const char *s2)
{
	const uint8_t *cp1 = s1, *cp2 = s2;
#endif
	while (*cp1 == *cp2++)
		if (*cp1++ == NUL)
			return (0);
	return (*cp1 - *--cp2);
}

#ifdef lint
#ifdef WIDEC
int
wcscoll(const wchar_t *cp1, const wchar_t *cp2)
{
	return (wcscmp(cp1, cp2));
}
#else
int
strcoll(const char *s1, const char *s2)
{
	return (strcmp(s1, s2));
}
#endif
#else /* lint */
#ifdef WIDEC
__strong_alias(wcscoll, wcscmp);
#else
__strong_alias(strcoll, strcmp);
#endif
#endif /* lint */
@


1.2
log
@Hacked in the train to Zwitserland:

• new: memcpy()=bcopy()=memmove()
• new macro: __strong_alias (incidentally, TNF has exactly the same name
  and exactly (except an ‘a’ more) the same implementation)
• use __strong_alias and #ifdef lint instead of duplicate code via unifdef
  abuse
• sprinkle a few uses of _ALIGN_TEXT
• remove duplicate memmove, memcpy, bcopy and ovbcopy implementations
  from the i386 kernel
• _ALIGN_TEXT is a nop #ifdef SMALL
• remove more duplicate definitions, etc.
• remove more dead code from bootloader -D_TEST
@
text
@d23 1
a23 1
__RCSID("$MirOS: src/kern/c/strcmp.c,v 1.1 2008/08/01 18:09:17 tg Exp $");
d56 1
@


1.1
log
@more migration

(in case you wonder: goal is to make libc, kernel and bootloaders share
the code currently in libkern, (some of) libsa, and libz, and to move
the bootloaders out of src/sys/ and into some more sane place)
@
text
@d23 1
a23 6
__RCSID("$MirOS$");

#ifdef L_strcoll
#define strcmp strcoll
#define wcscmp wcscoll
#endif
d42 21
@

