head	1.7;
access;
symbols
	paxmirabilis-20190825:1.7
	paxmirabilis-20190224:1.7
	paxmirabilis-20190210:1.7
	joe-3_1jupp38:1.6
	joe-3_1jupp37:1.6
	joe-3_1jupp36:1.5
	joe-3_1jupp35:1.5
	joe-3_1jupp34:1.5
	joe-3_1jupp33:1.5
	joe-3_1jupp32:1.5
	paxmirabilis-20171021:1.5
	joe-3_1jupp31:1.5
	joe-3_1jupp30:1.5
	paxmirabilis-20161104:1.5
	paxmirabilis-20161031:1.5
	joe-3_1jupp29:1.5
	paxmirabilis-20161025:1.5
	paxmirabilis-20160306:1.5
	paxmirabilis-20151013:1.4
	joe-3_1jupp28:1.4
	paxmirabilis-20140703:1.4
	joe-3_1jupp27:1.4
	joe-3_1jupp26:1.4
	joe-3_1jupp25:1.4
	joe-3_1jupp24:1.4
	joe-3_1jupp23:1.4
	joe-3_1jupp22:1.4
	joe-3_1jupp21:1.4
	joe-3_1jupp20:1.4
	joe-3_1jupp19:1.4
	paxmirabilis-20120606:1.4
	paxmirabilis-20120605:1.4;
locks; strict;
comment	@ * @;


1.7
date	2019.01.05.16.39.26;	author tg;	state Exp;
branches;
next	1.6;
commitid	1005C30DDD442B8461F;

1.6
date	2018.08.10.02.53.50;	author tg;	state Exp;
branches;
next	1.5;
commitid	1005B6CFE0B5BDFE404;

1.5
date	2016.03.06.13.47.13;	author tg;	state Exp;
branches;
next	1.4;
commitid	10056DC34E25F0AA0A6;

1.4
date	2011.11.11.20.39.31;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004EBD880F36E7B285;

1.3
date	2011.07.02.22.28.33;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004E0F9BA21ECA802A;

1.2
date	2011.04.09.16.28.47;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004DA0890A2EA8ED27;

1.1
date	2008.08.01.16.35.22;	author tg;	state Exp;
branches;
next	;
commitid	10048933B5E5B20CA97;


desc
@@


1.7
log
@more prototypes for GNUPORT
@
text
@#if 0 /* comment in gmake; next line ignored by gcc */
ifeq (0,gmake ignores from here)
#endif
/*-
 * Copyright (c) 2006, 2008, 2011
 *	mirabilos <m@@mirbsd.org>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 *-
 * The original implementations of strlcpy(3) and strlcat(3) are from
 * Todd C. Miller; the licence is reproduced below. However, this ap-
 * plies only to the strlcpy(3) portion of the code, as Thorsten Gla-
 * ser write the following strlcat(3) implementation according to the
 * spec. Both functions below have been optimised according to sugge-
 * stions from Bodo Eggert. mirabilos merged the code with strxfrm(3)
 * for UTF-8-only systems and the wide character variants wcslcat(3),
 * wcslcpy(3), and wcsxfrm(3).
 */

#include <sys/types.h>
#ifndef OUTSIDE_OF_LIBKERN
#include <libckern.h>
#endif

#ifndef __RCSID
#define __RCSID(x)		static const char __rcsid[] = x
#endif

__RCSID("$MirOS: src/kern/c/strlfun.c,v 1.6 2018/08/10 02:53:50 tg Exp $");

#ifdef WIDEC
#ifdef OUTSIDE_OF_LIBKERN
#ifdef __WCHAR_TYPE__
typedef __WCHAR_TYPE__ wchar_t;
#else
#include <wchar.h>
#endif
#endif
/* wide character string functions */
#define NUL			L'\0'
#define char_t			wchar_t
#define fn_len			wcslen
#define	fn_cat			wcslcat
#define fn_cpy			wcslcpy
#else
/* (multibyte) string functions */
#define NUL			'\0'
#define char_t			char
#define fn_len			strlen
#define	fn_cat			strlcat
#define fn_cpy			strlcpy
#endif

#ifdef L_strxfrm
#define strlcpy			strxfrm
#define wcslcpy			wcsxfrm
#define L_strlcpy
#endif

#ifdef OUTSIDE_OF_LIBKERN
extern size_t fn_len(const char_t *);
#ifdef NEED_STRLFUN_PROTOS
size_t fn_cat(char_t *, const char_t *, size_t);
size_t fn_cpy(char_t *, const char_t *, size_t);
#endif
#endif

#ifndef __predict_true
#define __predict_true(exp)	(exp)
#define __predict_false(exp)	(exp)
#endif

#ifdef L_strlcat
/*
 * Appends src to string dst of size dlen (unlike strncat, dlen is the
 * full size of dst, not space left).  At most dlen-1 characters
 * will be copied.  Always NUL terminates (unless dlen <= strlen(dst)).
 * Returns strlen(src) + MIN(dlen, strlen(initial dst)), without the
 * trailing NUL byte counted.  If retval >= dlen, truncation occurred.
 */
size_t
fn_cat(char_t *dst, const char_t *src, size_t dlen)
{
	size_t n = 0, slen;

	slen = fn_len(src);
	while (__predict_true(n + 1 < dlen && dst[n] != NUL))
		++n;
	if (__predict_false(dlen == 0 || dst[n] != NUL))
		return (dlen + slen);
	while (__predict_true((slen > 0) && (n < (dlen - 1)))) {
		dst[n++] = *src++;
		--slen;
	}
	dst[n] = NUL;
	return (n + slen);
}
#endif

#ifdef L_strlcpy
/* $OpenBSD: strlcpy.c,v 1.11 2006/05/05 15:27:38 millert Exp $ */

/*-
 * Copyright (c) 1998 Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/*
 * Copy src to string dst of size siz.  At most siz-1 characters
 * will be copied.  Always NUL terminates (unless siz == 0).
 * Returns strlen(src); if retval >= siz, truncation occurred.
 */
size_t
fn_cpy(char_t *dst, const char_t *src, size_t siz)
{
	const char_t *s = src;

	if (__predict_false(siz == 0))
		goto traverse_src;

	/* copy as many chars as will fit */
	while (--siz && (*dst++ = *s++))
		;

	/* not enough room in dst */
	if (__predict_false(siz == 0)) {
		/* safe to NUL-terminate dst since we copied <= siz-1 chars */
		*dst = NUL;
 traverse_src:
		/* traverse rest of src */
		while (*s++)
			;
	}

	/* count does not include NUL */
	return (s - src - 1);
}
#endif

#if 0 /* gcc ignored from here; gmake stops ignoring */
endif

USE_WIDEC?=	1

LIB=		libstrlfun.a
OBJS=		strlcpy.o strlcat.o
ifeq (1,$(strip $(USE_WIDEC)))
OBJS+=		wcslcpy.o wcslcat.o
endif
DEFS=		-DOUTSIDE_OF_LIBKERN
DEFS_strlcpy.o=	-DL_strlcpy
DEFS_strlcat.o=	-DL_strlcat
DEFS_wcslcpy.o=	-DL_strlcpy -DWIDEC
DEFS_wcslcat.o=	-DL_strlcat -DWIDEC

all: $(LIB)

$(LIB): $(OBJS)
	ar rc $(LIB) $(OBJS)
	-ranlib $(LIB)

$(OBJS): strlfun.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(DEFS) $(DEFS_$@@) -c -o $@@ strlfun.c

#endif /* EOF for gmake and gcc */
@


1.6
log
@same as in commitid 1005B6CF36E3932B560, plus assorted cleanup
@
text
@d42 1
a42 1
__RCSID("$MirOS: src/kern/c/strlfun.c,v 1.5 2016/03/06 13:47:13 tg Exp $");
d75 4
@


1.5
log
@apply changes from mpax-erstmalnurderbackport branch not related to the CVEs
@
text
@d29 1
a29 1
 * (Unicode-only systems) and the wide character variants wcslcat(3),
d42 1
a42 1
__RCSID("$MirOS: src/kern/c/strlfun.c,v 1.3 2011/07/02 22:28:33 tg Exp $");
@


1.4
log
@if USE_WIDEC=0 in the environment, do not build wchar_t versions
@
text
@d6 1
a6 1
 *	Thorsten Glaser <tg@@mirbsd.org>
d28 3
a30 3
 * stions from Bodo Eggert. Thorsten Glaser also has merged this code
 * with strxfrm(3) for ISO-10646-only systems and the wide char vari-
 * ants wcslcat(3), wcslcpy(3), and wcsxfrm(3).
@


1.3
log
@Minix 3 ACK compliance
@
text
@d42 1
a42 1
__RCSID("$MirOS: src/kern/c/strlfun.c,v 1.2 2011/04/09 16:28:47 tg Exp $");
d163 2
d166 4
a169 1
OBJS=		strlcpy.o strlcat.o wcslcpy.o wcslcat.o
@


1.2
log
@ed:
• merge openbsd
• sync portmdoc in manpage with template
• reduce diff against openbsd
• pimp

strlfun:
• add GNUmakefile embedded in C code


⇒ both: make this possible:

tg@@frozenfish:~ $ DIST=etch sudo cowbuilder --login
root@@frozenfish:/tmp# make -f strlfun.c
root@@frozenfish:/tmp/ed# make LDFLAGS=-L.. LDADD=-lstrlfun
root@@frozenfish:/tmp/ed# ./ed
@
text
@d1 2
a2 3
#if 0 /* this line is a comment in gmake */
# @@gmake: ignore from here
ifeq (0,1)
d42 1
a42 1
__RCSID("$MirOS: src/kern/c/strlfun.c,v 1.1 2008/08/01 16:35:22 tg Exp $");
d160 1
a160 3
/* @@gcc: ignore from here */
#if 0
# @@gmake: end ignore
@


1.1
log
@migrate strlcat/strlcpy/strxfrm and wcs* equivalents
@
text
@d1 4
d6 1
a6 1
 * Copyright (c) 2006, 2008
d35 1
d37 5
d43 1
a43 1
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.18 2008/08/01 12:26:17 tg Exp $");
d46 7
d54 5
a58 5
#define NUL		L'\0'
#define char_t		wchar_t
#define fn_len		wcslen
#define	fn_cat		wcslcat
#define fn_cpy		wcslcpy
d61 5
a65 5
#define NUL		'\0'
#define char_t		char
#define fn_len		strlen
#define	fn_cat		strlcat
#define fn_cpy		strlcpy
d69 2
a70 2
#define strlcpy		strxfrm
#define wcslcpy		wcsxfrm
d74 9
d160 24
@

