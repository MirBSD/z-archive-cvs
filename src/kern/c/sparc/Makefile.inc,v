head	1.13;
access;
symbols
	MIRBSD_10:1.3.0.2
	MIRBSD_10_BASE:1.3;
locks; strict;
comment	@# @;


1.13
date	2011.01.03.19.02.50;	author tg;	state Exp;
branches;
next	1.12;
commitid	1004D221D691CE0C01C;

1.12
date	2010.01.10.20.18.49;	author tg;	state Exp;
branches;
next	1.11;
commitid	1004B4A3588743BF0D3;

1.11
date	2009.09.15.16.27.34;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004AAFC06B14538FAA;

1.10
date	2008.12.27.21.29.31;	author tg;	state Exp;
branches;
next	1.9;
commitid	10049569E4574E4ED91;

1.9
date	2008.10.18.17.45.50;	author tg;	state Exp;
branches;
next	1.8;
commitid	10048FA208B0085A8ED;

1.8
date	2008.10.16.13.15.17;	author tg;	state Exp;
branches;
next	1.7;
commitid	10048F73E594E0D4BF5;

1.7
date	2008.10.16.12.54.41;	author tg;	state Exp;
branches;
next	1.6;
commitid	10048F7397809B5EF4A;

1.6
date	2008.08.03.21.02.02;	author tg;	state Exp;
branches;
next	1.5;
commitid	10048961CCE67B72AC5;

1.5
date	2008.08.01.18.31.02;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004893567C55E13A4E;

1.4
date	2008.08.01.18.09.21;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004893513244B11E80;

1.3
date	2007.02.07.02.29.37;	author tg;	state Exp;
branches;
next	1.2;
commitid	10045C939841596957A;

1.2
date	2007.02.06.16.28.38;	author tg;	state Exp;
branches;
next	1.1;
commitid	10045C8ACBA4BADCC48;

1.1
date	2007.02.05.20.16.08;	author tg;	state Exp;
branches;
next	;
commitid	10045C78FD963274EDA;


desc
@@


1.13
log
@move strchr, strrchr, strncpy to kern; remove redundant strncmp, strncasecmp protos
@
text
@# $MirOS: src/kern/c/sparc/Makefile.inc,v 1.12 2010/01/10 20:18:49 tg Exp $

XSRCS+=		htonl.c htons.c ntohl.c ntohs.c

XSRCS+=		strlen.S
LSRCS+=		strlen.c
UIF_NUSRCS+=	wcslen.c strlen.c -DWIDEC

XSRCS+=		strchr.c strrchr.c
XSRCS+=		strncmp.c
XSRCS+=		strncpy.c

UIF_KUSRCS+=	mempcpy.c memcpy.c -DL_mempcpy

XSRCS+=		bzero.S ffs.S memchr.c memcmp.c memcpy.c memset.c strcmp.c
LSRCS+=		Lbzero.c Lffs.c

# broken standard API
CFLAGS_memchr.o= -Wno-cast-qual
CFLAGS_strchr.o= -Wno-cast-qual
CFLAGS_strrchr.o= -Wno-cast-qual

XSRCS+=		mul.S umul.S
KUSRCS+=	fixunsdfsi.S
XSRCS+=		saveregs.S

XSRCS+=		rem.S sdiv.S udiv.S urem.S
CLEANFILES+=	rem.S sdiv.S udiv.S urem.S

.for _t _n _o _s in \
    sdiv div div true \
    udiv udiv div false \
    rem rem rem true \
    urem urem rem false
${_t}.S: ${KERNBASE}/c/sparc/divrem.m4
	@@print building ${.TARGET:Q} from ${.ALLSRC:Q}
	@@(print "define(NAME,\`.${_n}')define(NAME2,\`_C_LABEL(_${_n})')define(OP,\`${_o}')define(S,\`${_s}')"; \
	  cat ${.ALLSRC}) | m4 >$@@
.endfor
@


1.12
log
@• kern: new KERNISUSR (defined by libc and libmdsup, but not by either
  bootloader or kernel), enables new NUSRCS, UIF_NUSRCS
• move MD strncmp() to kern
• move MI {str,wcs}case{,n}cmp to kern
• make wcs* functions NU not KU as we don’t need them in the kernel YET
• move __main to NU (it’s a joke anyway, I think)
• bootloader: make devsw_prefix_match case-insensitive
@
text
@d1 1
a1 1
# $MirOS: src/kern/c/sparc/Makefile.inc,v 1.11 2009/09/15 16:27:34 tg Exp $
d9 1
d11 1
d20 2
@


1.11
log
@remove symbols common to libc/libgcc_s from libgcc; add to libmdsup if
they haven’t been there before
@
text
@d1 1
a1 1
# $MirOS: src/kern/c/sparc/Makefile.inc,v 1.10 2008/12/27 21:29:31 tg Exp $
d7 3
a9 1
UIF_KUSRCS+=	wcslen.c strlen.c -DWIDEC
@


1.10
log
@• GNU function mempcpy(3)
• fix i386 memcpy(3) retval if len==0
@
text
@d1 1
a1 1
# $MirOS: src/kern/c/sparc/Makefile.inc,v 1.9 2008/10/18 17:45:50 tg Exp $
d18 1
@


1.9
log
@for the kernel v7→v8 divrem replacement routines to work, we need a
second name under which to export these functions
@
text
@d1 1
a1 1
# $MirOS: src/kern/c/sparc/Makefile.inc,v 1.8 2008/10/16 13:15:17 tg Exp $
d9 2
@


1.8
log
@add sources to XSRCS instead of SRCS for cherry-picking,
craft a variable allowing them to be automatically be all picked
@
text
@d1 1
a1 1
# $MirOS: src/kern/c/sparc/Makefile.inc,v 1.7 2008/10/16 12:54:41 tg Exp $
d28 1
a28 1
	@@(print "define(NAME,\`.${_n}')define(OP,\`${_o}')define(S,\`${_s}')"; \
@


1.7
log
@memchr.c needs to “cast away a const” due to a broken standards API,
so add -Wno-cast-qual to its CFLAGS (we could use an unconst macro –
similar to mksh’s cphack – but this would probably just worsen code)
@
text
@d1 1
a1 1
# $MirOS: src/kern/c/sparc/Makefile.inc,v 1.6 2008/08/03 21:02:02 tg Exp $
d3 1
a3 1
SRCS+=		htonl.c htons.c ntohl.c ntohs.c
d5 1
a5 1
SRCS+=		strlen.S
d9 1
a9 1
SRCS+=		bzero.S ffs.S memchr.c memcmp.c memcpy.c memset.c strcmp.c
d15 2
a16 2
SRCS+=		mul.S umul.S
SRCS+=		saveregs.S
d18 1
a18 1
SRCS+=		rem.S sdiv.S udiv.S urem.S
@


1.6
log
@Hacked in the train to Zwitserland:

• new: memcpy()=bcopy()=memmove()
• new macro: __strong_alias (incidentally, TNF has exactly the same name
  and exactly (except an ‘a’ more) the same implementation)
• use __strong_alias and #ifdef lint instead of duplicate code via unifdef
  abuse
• sprinkle a few uses of _ALIGN_TEXT
• remove duplicate memmove, memcpy, bcopy and ovbcopy implementations
  from the i386 kernel
• _ALIGN_TEXT is a nop #ifdef SMALL
• remove more duplicate definitions, etc.
• remove more dead code from bootloader -D_TEST
@
text
@d1 1
a1 1
# $MirOS: src/kern/c/sparc/Makefile.inc,v 1.5 2008/08/01 18:31:02 tg Exp $
d12 3
@


1.5
log
@merge some more SPARC specifics
@
text
@d1 1
a1 1
# $MirOS: src/kern/c/sparc/Makefile.inc,v 1.4 2008/08/01 18:09:21 tg Exp $
d9 1
a9 3
SRCS+=		bzero.S ffs.S memchr.c memcmp.c memset.c strcmp.c
UNIFDEF_SRCS+=	bcmp.c memcmp.c -DL_bcmp
UNIFDEF_SRCS+=	strcoll.c strcmp.c -DL_strcoll
@


1.4
log
@more migration

(in case you wonder: goal is to make libc, kernel and bootloaders share
the code currently in libkern, (some of) libsa, and libz, and to move
the bootloaders out of src/sys/ and into some more sane place)
@
text
@d1 1
a1 1
# $MirOS: src/kern/c/sparc/Makefile.inc,v 1.3 2007/02/07 02:29:37 tg Exp $
d13 17
@


1.3
log
@MD must define wcslen() now, too
@
text
@d1 1
a1 1
# $MirOS: src/kern/c/sparc/Makefile.inc,v 1.2 2007/02/06 16:28:38 tg Exp $
d8 5
@


1.2
log
@add sparc MD strlen() - from OpenBSD
i386 will follow… I'll code that myself
@
text
@d1 1
a1 1
# $MirOS: src/kern/c/sparc/Makefile.inc,v 1.1 2007/02/05 20:16:08 tg Exp $
d7 1
@


1.1
log
@proof-of-concept implementation of a few functions for the
new "kern" directory containing stuff shared between
* userland (-fhosted -lgcc)
* kernel (-ffreestanding -D_KERNEL -nostdlib)
* bootloader (-ffreestanding -D_STANDALONE -nostdlib)

Here, userland and kernel share some functions not for the
bootloader (e.g. utf-8 stuff), while kernel and bootloader
share a few libgcc replacement functions.

I took the htonl() &c. functions because they were pretty
easy to implement; no sparc assembly version because it's
a 'no-op' and I trust gcc so much as to produce optimised
output for the type foo(type x) { return (x); } case.

Not tested.

Most of the functions will be written "on demand" and re-
written from scratch by me.
@
text
@d1 1
a1 1
# $MirOS$
d4 3
@

