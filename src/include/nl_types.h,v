head	1.8;
access;
symbols
	MIRBSD_10:1.7.0.2
	MIRBSD_10_BASE:1.7
	MIRBSD_9_BASE:1.6
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	cvs-200509221800:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2013.10.31.20.06.07;	author tg;	state Exp;
branches;
next	1.7;
commitid	1005272B7081B0E5655;

1.7
date	2007.02.02.21.22.43;	author tg;	state Exp;
branches;
next	1.6;
commitid	10045C3ABA84E1A727F;

1.6
date	2006.06.02.02.48.34;	author tg;	state Exp;
branches;
next	1.5;
commitid	100447FA7163718F591;

1.5
date	2006.06.02.02.45.36;	author tg;	state Exp;
branches;
next	1.4;
commitid	100447FA65E16D5024E;

1.4
date	2006.05.30.20.28.15;	author tg;	state Exp;
branches;
next	1.3;
commitid	100447CAAF0115F2F3A;

1.3
date	2006.05.30.20.11.59;	author tg;	state Exp;
branches;
next	1.2;
commitid	100447CA7201A785E67;

1.2
date	2005.03.06.19.13.40;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.24.34;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.34;	author tg;	state Exp;
branches;
next	;


desc
@@


1.8
log
@adapt most __attribute__((â€¦)) occurrences to new KNF style(9)
@
text
@/* $MirOS: src/include/nl_types.h,v 1.7 2007/02/02 21:22:43 tg Exp $ */

#ifndef _NL_TYPES_H_
#define _NL_TYPES_H_

#include <sys/cdefs.h>

#define NL_SETD		1
#define NL_CAT_LOCALE	1

typedef int nl_catd;
typedef int nl_item;

__BEGIN_DECLS
nl_catd catopen(const char *, int);
char *catgets(nl_catd, int, int, const char *)
    __attribute__((__format_arg__(4)));
int catclose(nl_catd);
__END_DECLS

#define catopen(s,f)		(0)
#define catgets(cid,sid,mid,s)	(s)
#define catclose(n)		(0)

#endif
@


1.7
log
@since noone sane uses catgets interface and it was stubbed out anyway,
compile it out if possible
@
text
@d1 1
a1 1
/* $MirOS$ */
d17 1
a17 1
    __attribute__((format_arg(4)));
@


1.6
log
@thou shan't mis-count
@
text
@d1 1
a1 39
/*	$MirOS: src/include/nl_types.h,v 1.5 2006/06/02 02:45:36 tg Exp $	*/
/*	$OpenBSD: nl_types.h,v 1.7 2002/02/16 21:27:17 millert Exp $	*/
/*	$NetBSD: nl_types.h,v 1.6 1996/05/13 23:11:15 jtc Exp $	*/

/*-
 * Copyright (c) 1996 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by J.T. Conklin.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
d8 2
a9 2
#define	NL_SETD		1
#define NL_CAT_LOCALE   1
d15 2
a16 2
extern nl_catd 	catopen(const char *, int);
extern char    *catgets(nl_catd, int, int, const char *)
d18 1
a18 1
extern int	catclose(nl_catd);
d21 5
a25 1
#endif	/* _NL_TYPES_H_ */
@


1.5
log
@add format_arg attribute to catgets
@
text
@d1 1
a1 1
/*	$MirOS: src/include/nl_types.h,v 1.4 2006/05/30 20:28:15 tg Exp $	*/
d55 1
a55 1
    __attribute__((format_arg(3)));
@


1.4
log
@save even more space (some arches)
@
text
@d1 1
a1 1
/*	$MirOS: src/include/nl_types.h,v 1.3 2006/05/30 20:11:59 tg Exp $	*/
d54 2
a55 1
extern char    *catgets(nl_catd, int, int, const char *);
@


1.3
log
@save space
@
text
@d1 1
a1 1
/*	$MirOS: src/include/nl_types.h,v 1.2 2005/03/06 19:13:40 tg Exp $	*/
d49 2
a50 2
typedef void *nl_catd;
typedef long nl_item;
@


1.2
log
@merge src/include
@
text
@d1 1
a1 1
/*	$MirOS$	*/
d49 2
a50 6
typedef struct _nl_catd {
	void	*__data;
	int	__size;
} *nl_catd;

typedef long	nl_item;
@


1.1
log
@Initial revision
@
text
@d1 1
d43 1
a45 38
#ifdef _NLS_PRIVATE
/*
 * MESSAGE CATALOG FILE FORMAT.
 *
 * The NetBSD message catalog format is similar to the format used by
 * Svr4 systems.  The differences are:
 *   * fixed byte order (big endian)
 *   * fixed data field sizes
 *
 * A message catalog contains four data types: a catalog header, one
 * or more set headers, one or more message headers, and one or more
 * text strings.
 */

#define _NLS_MAGIC	0xff88ff89

struct _nls_cat_hdr {
	int32_t __magic;
	int32_t __nsets;
	int32_t __mem;
	int32_t __msg_hdr_offset;
	int32_t __msg_txt_offset;
} ;

struct _nls_set_hdr {
	int32_t __setno;	/* set number: 0 < x <= NL_SETMAX */
	int32_t __nmsgs;	/* number of messages in the set  */
	int32_t __index;	/* index of first msg_hdr in msg_hdr table */
} ;

struct _nls_msg_hdr {
	int32_t __msgno;	/* msg number: 0 < x <= NL_MSGMAX */
	int32_t __msglen;
	int32_t __offset;
} ;

#endif

@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
