head	1.16;
access;
symbols
	MIRBSD_10:1.8.0.2
	MIRBSD_10_BASE:1.8
	MIRBSD_9_BASE:1.6
	MIRBSD_8:1.6.0.2
	MIRBSD_8_BASE:1.6
	cvs-200509221800:1.1.1.2
	cvs-200507211800:1.1.1.2
	cvs-200504291700:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.16
date	2015.02.11.21.42.22;	author tg;	state Exp;
branches;
next	1.15;
commitid	10054DBCCD452D127A7;

1.15
date	2015.02.09.21.50.44;	author tg;	state Exp;
branches;
next	1.14;
commitid	10054D92BCB3E6955C8;

1.14
date	2015.02.09.21.46.02;	author tg;	state Exp;
branches;
next	1.13;
commitid	10054D92AB15D0B8652;

1.13
date	2014.11.30.21.30.54;	author tg;	state Exp;
branches;
next	1.12;
commitid	100547B8BEB4A8A38F2;

1.12
date	2014.11.30.02.45.32;	author tg;	state Exp;
branches;
next	1.11;
commitid	100547A84C870A75856;

1.11
date	2014.02.09.16.15.32;	author tg;	state Exp;
branches;
next	1.10;
commitid	10052F7A9B12873E47B;

1.10
date	2013.10.31.20.06.09;	author tg;	state Exp;
branches;
next	1.9;
commitid	1005272B7081B0E5655;

1.9
date	2008.12.27.21.43.22;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004956A18038840C35;

1.8
date	2007.06.16.21.05.13;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004674508F681EFD66;

1.7
date	2007.06.15.16.00.03;	author tg;	state Exp;
branches;
next	1.6;
commitid	1004672B77C139E51F0;

1.6
date	2005.11.21.19.31.54;	author tg;	state Exp;
branches;
next	1.5;
commitid	60294382208fe0fe;

1.5
date	2005.07.27.14.45.07;	author tg;	state Exp;
branches;
next	1.4;
commitid	66f542e79ded6a44;

1.4
date	2005.07.26.18.40.56;	author tg;	state Exp;
branches;
next	1.3;
commitid	72d742e683c64b07;

1.3
date	2005.04.29.18.34.48;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.06.19.13.40;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.24.34;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.34;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.17.05.17;	author tg;	state Exp;
branches;
next	;


desc
@@


1.16
log
@nice workaround for C++ brokenness: 0L taken from musl via ycombinator, but it must be unsigned of course, so 0UL
@
text
@/**	$MirOS: src/include/string.h,v 1.15 2015/02/09 21:50:44 tg Exp $ */
/*	$OpenBSD: string.h,v 1.15 2005/03/30 03:04:16 deraadt Exp $	*/
/*	$NetBSD: string.h,v 1.6 1994/10/26 00:56:30 cgd Exp $	*/

/*-
 * Copyright © 2013, 2014, 2015
 *	Thorsten “mirabilos” Glaser <tg@@mirbsd.org>
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)string.h	5.10 (Berkeley) 3/9/91
 */

#ifndef _STRING_H_
#define	_STRING_H_

#if !defined(_ANSI_SOURCE) && !defined(_POSIX_SOURCE)
#include <sys/types.h>		/* for mode_t */
#else
#include <sys/cdefs.h>
#include <machine/ansi.h>
#endif

#if !defined(_GCC_SIZE_T)
#define	_GCC_SIZE_T
typedef	__SIZE_TYPE__	size_t;
#endif

/* C11 optional */
#if !defined(__STDC_WANT_LIB_EXT1__) || (__STDC_WANT_LIB_EXT1__)
#ifndef rsize_t
#define rsize_t		rsize_t
typedef size_t		rsize_t;
#endif
#endif /* __STDC_WANT_LIB_EXT1__ */

#ifndef NULL
#ifdef __GNUG__
#define	NULL		__null
#elif defined(lint) || defined(__cplusplus)
#define	NULL		0UL
#else
#define	NULL		((void *)((__PTRDIFF_TYPE__)0UL))
#endif
#endif

__BEGIN_DECLS
void	*memchr(const void *, int, size_t);
int	 memcmp(const void *, const void *, size_t);
void	*memcpy(void *, const void *, size_t)
		__attribute__((__bounded__(__buffer__, 1, 3)))
		__attribute__((__bounded__(__buffer__, 2, 3)));
void	*memmove(void *, const void *, size_t)
		__attribute__((__bounded__(__buffer__, 1, 3)))
		__attribute__((__bounded__(__buffer__, 2, 3)));
void	*memset(void *, int, size_t)
		__attribute__((__bounded__(__buffer__, 1, 3)));
char	*strcat(char *, const char *);
char	*strchr(const char *, int);
int	 strcmp(const char *, const char *);
int	 strcoll(const char *, const char *);
char	*strcpy(char *, const char *);
size_t	 strcspn(const char *, const char *);
char	*strerror(int);
int	 strerror_r(int, char *, size_t)
		__attribute__((__bounded__(__string__, 2, 3)));
size_t	 strlen(const char *);
char	*strncat(char *, const char *, size_t)
		__attribute__((__bounded__(__string__, 1, 3)));
int	 strncmp(const char *, const char *, size_t);
char	*strncpy(char *, const char *, size_t)
		__attribute__((__bounded__(__string__, 1, 3)));
char	*strpbrk(const char *, const char *);
char	*strrchr(const char *, int);
size_t	 strspn(const char *, const char *);
char	*strstr(const char *, const char *);
char	*strtok(char *, const char *);
char	*strtok_r(char *, const char *, char **);
size_t	 strxfrm(char *, const char *, size_t)
		__attribute__((__bounded__(__string__, 1, 3)));

/* Nonstandard routines */
#if !defined(_ANSI_SOURCE) && !defined(_POSIX_SOURCE)
int	 bcmp(const void *, const void *, size_t);
void	 bcopy(const void *, void *, size_t)
		__attribute__((__bounded__(__buffer__, 1, 3)))
		__attribute__((__bounded__(__buffer__, 2, 3)));
void	 bzero(void *, size_t)
		__attribute__((__bounded__(__buffer__, 1, 2)));
#if __OPENBSD_VISIBLE
void explicit_bzero(void *, size_t)
    __attribute__((__bounded__(__buffer__, 1, 2)));
#endif
int	 ffs(int);
char	*index(const char *, int);
void	*memccpy(void *, const void *, int, size_t)
		__attribute__((__bounded__(__buffer__, 1, 4)));
char	*rindex(const char *, int);
int	 strcasecmp(const char *, const char *);
char	*strdup(const char *);
char	*strcasestr(const char *, const char *);
size_t	 strlcat(char *, const char *, size_t)
		__attribute__((__bounded__(__string__, 1, 3)));
size_t	 strlcpy(char *, const char *, size_t)
		__attribute__((__bounded__(__string__, 1, 3)));
void	 strmode(mode_t, char *);
int	 strncasecmp(const char *, const char *, size_t);
#if __OPENBSD_VISIBLE
char	*strndup(const char *, size_t);
size_t	 strnlen(const char *, size_t);
#endif
char	*strsep(char **, const char *);
char	*strsignal(int);
#endif
#if __OPENBSD_VISIBLE
int timingsafe_bcmp(const void *, const void *, size_t)
    __attribute__((__bounded__(__buffer__, 1, 3)))
    __attribute__((__bounded__(__buffer__, 2, 3)));
int timingsafe_memcmp(const void *, const void *, size_t)
    __attribute__((__bounded__(__buffer__, 1, 3)))
    __attribute__((__bounded__(__buffer__, 2, 3)));
#endif
__END_DECLS

#if defined(_GNU_SOURCE) && !defined(__STRICT_ANSI__)
__BEGIN_DECLS
char *stpcpy(char *, const char *);
char *stpncpy(char *, const char *, size_t)
    __attribute__((__bounded__(__string__, 1, 3)));
void *mempcpy(void *, const void *, size_t)
    __attribute__((__bounded__(__buffer__, 1, 3)))
    __attribute__((__bounded__(__buffer__, 2, 3)));
__END_DECLS
#endif

#endif /* _STRING_H_ */
@


1.15
log
@harmonise tabs inside the files
@
text
@d1 1
a1 1
/**	$MirOS: src/include/string.h,v 1.14 2015/02/09 21:46:02 tg Exp $ */
d65 1
a65 1
#define	NULL		0
@


1.14
log
@fix C++ (except G++) definition of NULL; revalidate C/POSIX one
@
text
@d1 1
a1 1
/**	$MirOS: src/include/string.h,v 1.13 2014/11/30 21:30:54 tg Exp $ */
d63 1
a63 1
#define	NULL			__null
d65 1
a65 1
#define	NULL			0
d67 1
a67 1
#define	NULL			((void *)((__PTRDIFF_TYPE__)0UL))
@


1.13
log
@• timingsafe_memcmp is not the same as timingsafe_bcmp, remove
• remove timingsafe_bcmp from libkern
• (re-)add timingsafe_bcmp and timingsafe_memcmp to libc
• update omalloc
• newly add reallocarray to libc
• add strnlen to libc, fix strndup to not read beyond size with that
• update manpages and add MLINKS: strndup, strnlen, timingsafe_*cmp
@
text
@d1 1
a1 1
/**	$MirOS: src/include/string.h,v 1.12 2014/11/30 02:45:32 tg Exp $ */
d6 1
a6 1
 * Copyright © 2013, 2014
d62 4
a65 4
#ifdef 	__GNUG__
#define	NULL	__null
#elif defined(lint)
#define	NULL	0
d67 1
a67 1
#define	NULL	((void *)((__PTRDIFF_TYPE__)0UL))
@


1.12
log
@use faster call for CAST, it does help

this also adds explicit_bzero and timingsafe_{b,mem}cmp to libc API
@
text
@d1 1
a1 1
/**	$MirOS: src/include/string.h,v 1.11 2014/02/09 16:15:32 tg Exp $ */
d134 1
@


1.11
log
@implement rsize_t as specified in N1570, inspired by xenu
@
text
@d1 1
a1 1
/**	$MirOS: src/include/string.h,v 1.10 2013/10/31 20:06:09 tg Exp $ */
d114 4
d138 8
@


1.10
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@d1 1
a1 1
/**	$MirOS: src/include/string.h,v 1.9 2008/12/27 21:43:22 tg Exp $ */
d6 1
a6 1
 * Copyright © 2013
d53 8
@


1.9
log
@stpcpy and stpncpy, GNU extensions

XXX no manpages for either these or mempcpy (yet)
@
text
@d1 1
a1 1
/**	$MirOS: src/include/string.h,v 1.8 2007/06/16 21:05:13 tg Exp $ */
d6 2
d67 2
a68 2
		__attribute__ ((__bounded__(__buffer__,1,3)))
		__attribute__ ((__bounded__(__buffer__,2,3)));
d70 2
a71 2
		__attribute__ ((__bounded__(__buffer__,1,3)))
		__attribute__ ((__bounded__(__buffer__,2,3)));
d73 1
a73 1
		__attribute__ ((__bounded__(__buffer__,1,3)));
d82 1
a82 1
		__attribute__ ((__bounded__(__string__,2,3)));
d85 1
a85 1
		__attribute__ ((__bounded__(__string__,1,3)));
d88 1
a88 1
		__attribute__ ((__bounded__(__string__,1,3)));
d96 1
a96 1
		__attribute__ ((__bounded__(__string__,1,3)));
d102 2
a103 2
		__attribute__ ((__bounded__(__buffer__,1,3)))
		__attribute__ ((__bounded__(__buffer__,2,3)));
d105 1
a105 1
		__attribute__ ((__bounded__(__buffer__,1,2)));
d109 1
a109 1
		__attribute__ ((__bounded__(__buffer__,1,4)));
d115 1
a115 1
		__attribute__ ((__bounded__(__string__,1,3)));
d117 1
a117 1
		__attribute__ ((__bounded__(__string__,1,3)));
d132 1
a132 1
    __attribute__((bounded (string, 1, 3)));
d134 2
a135 2
    __attribute__((bounded (buffer, 1, 3)))
    __attribute__((bounded (buffer, 2, 3)));
@


1.8
log
@optimise strndup(3) and introduce wcsndup(3), agreed bsiegert@@
@
text
@d1 1
a1 1
/**	$MirOS: src/include/string.h,v 1.7 2007/06/15 16:00:03 tg Exp $ */
d126 11
@


1.7
log
@implement just another useful GNU extension: strndup(3)
@
text
@d1 1
a1 1
/**	$MirOS: src/include/string.h,v 1.6 2005/11/21 19:31:54 tg Exp $ */
d118 3
a122 4

#if __OPENBSD_VISIBLE
char *strndup(const char *, size_t);
#endif /* __OPENBSD_VISIBLE */
@


1.6
log
@First round of system include "fixes":
let GCC decide the length of ptrdiff_t, size_t, wchar_t, wint_t
(the first three adapted from gcc fixincludes run[1])
and adapt ssize_t accordingly (untested)
also fix limits

[1] which we don't run during gcc module build tho
@
text
@d1 1
a1 1
/**	$MirOS: src/include/string.h,v 1.5 2005/07/27 14:45:07 tg Exp $ */
d120 4
@


1.5
log
@* mode_t needs <sys/types.h>
* make use of the fact that <sys/types.h>
  includes <sys/cdefs.h> and <machine/ansi.h>
* sort includes (KNF)
@
text
@d1 1
a1 1
/**	$MirOS: src/include/string.h,v 1.4 2005/07/26 18:40:56 tg Exp $ */
d46 3
a48 3
#ifdef	_BSD_SIZE_T_
typedef	_BSD_SIZE_T_	size_t;
#undef	_BSD_SIZE_T_
d57 1
a57 1
#define	NULL	((void *)((_BSD_PTRDIFF_T_)0UL))
@


1.4
log
@strmode(3) says strmode() takes a mode_t
@
text
@d1 1
a1 1
/**	$MirOS: src/include/string.h,v 1.3 2005/04/29 18:34:48 tg Exp $ */
d39 4
d44 1
a60 2
#include <sys/cdefs.h>

@


1.3
log
@(tentative) merge, more to come
@
text
@d1 1
a1 1
/**	$MirOS: src/include/string.h,v 1.2 2005/03/06 19:13:40 tg Exp $ */
d113 1
a113 1
void	 strmode(int, char *);
@


1.2
log
@merge src/include
@
text
@d1 2
a2 2
/**	$MirOS$ */
/*	$OpenBSD: string.h,v 1.14 2004/06/20 17:47:07 avsm Exp $	*/
d108 1
@


1.1
log
@Initial revision
@
text
@d1 1
d38 1
d46 1
a46 1
#ifndef	NULL
d49 2
d52 1
a52 1
#define	NULL	0L
d116 1
a116 1
#endif 
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@improve my Frankenstein OS (*wink* you know who you are) further
sans wchar_t of course

this is the essence of reading >1200 commit messages which suck
due to not having the new format of ours...
@
text
@d1 1
a1 1
/*	$OpenBSD: string.h,v 1.15 2005/03/30 03:04:16 deraadt Exp $	*/
a103 1
char	*strcasestr(const char *, const char *);
@

