head	1.2;
access;
symbols
	MIRBSD_10:1.1.0.2
	MIRBSD_10_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.10.31.20.06.08;	author tg;	state Exp;
branches;
next	1.1;
commitid	1005272B7081B0E5655;

1.1
date	2007.05.07.15.21.17;	author tg;	state Exp;
branches;
next	;
commitid	100463F43D3067E6553;


desc
@@


1.2
log
@adapt most __attribute__((â€¦)) occurrences to new KNF style(9)
@
text
@/* $MirOS: src/include/sfv.h,v 1.1 2007/05/07 15:21:17 tg Exp $ */

#ifndef _SFV_H
#define _SFV_H

#define SFV_DIGEST_LENGTH		4
#define SFV_DIGEST_STRING_LENGTH	(SFV_DIGEST_LENGTH * 2 + 1)

typedef struct {
	uint64_t len;
	uint32_t crc;
} SFV_CTX;

#define SFV_DIGEST_UPPERCASE

#include <sys/cdefs.h>

__BEGIN_DECLS
void SFVInit(SFV_CTX *);
void SFVPad(SFV_CTX *);
void SFVUpdate(SFV_CTX *, const uint8_t *, size_t)
	__attribute__((__bounded__(__string__, 2, 3)));
void SFVFinal(uint8_t *, SFV_CTX *)
	__attribute__((__bounded__(__minbytes__, 1, SFV_DIGEST_LENGTH)));
char *SFVEnd(SFV_CTX *, char *)
	__attribute__((__bounded__(__minbytes__, 2, SFV_DIGEST_STRING_LENGTH)));
char *SFVFile(const char *, char *)
	__attribute__((__bounded__(__minbytes__, 2, SFV_DIGEST_STRING_LENGTH)));
char *SFVFileChunk(const char *, char *, off_t, off_t)
	__attribute__((__bounded__(__minbytes__, 2, SFV_DIGEST_STRING_LENGTH)));
char *SFVData(const uint8_t *, size_t, char *)
	__attribute__((__bounded__(__string__, 1, 2)))
	__attribute__((__bounded__(__minbytes__, 3, SFV_DIGEST_STRING_LENGTH)));
__END_DECLS

#endif
@


1.1
log
@add suma and sfv hashes in the standard format, too
(can't do adler32 that easily for now, later; sum/cksum/sysvsum differ, never)
@
text
@d1 1
a1 1
/* $MirOS: src/include/tiger.h,v 1.1 2006/09/17 19:28:58 tg Exp $ */
d22 1
a22 1
	__attribute__((bounded (string, 2, 3)));
d24 1
a24 1
	__attribute__((bounded (minbytes, 1, SFV_DIGEST_LENGTH)));
d26 1
a26 1
	__attribute__((bounded (minbytes, 2, SFV_DIGEST_STRING_LENGTH)));
d28 1
a28 1
	__attribute__((bounded (minbytes, 2, SFV_DIGEST_STRING_LENGTH)));
d30 1
a30 1
	__attribute__((bounded (minbytes, 2, SFV_DIGEST_STRING_LENGTH)));
d32 2
a33 2
	__attribute__((bounded (string, 1, 2)))
	__attribute__((bounded (minbytes, 3, SFV_DIGEST_STRING_LENGTH)));
@

