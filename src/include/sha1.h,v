head	1.3;
access;
symbols
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200509221800:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2014.03.05.14.07.26;	author tg;	state Exp;
branches;
next	1.2;
commitid	10053172F8E30AE4681;

1.2
date	2013.10.31.20.06.08;	author tg;	state Exp;
branches;
next	1.1;
commitid	1005272B7081B0E5655;

1.1
date	2005.02.05.17.24.34;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.34;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@more http://www.tedunangst.com/flak/post/how-to-screw-up-crypto-the-easy-way
fixing in headers (need to rid this from the corresponding *.c files, too!)

also, bonus, fix some bounded attributes and add some more (WTF!)
@
text
@/*	$MirOS: src/include/sha1.h,v 1.2 2013/10/31 20:06:08 tg Exp $ */
/*	$OpenBSD: sha1.h,v 1.23 2004/06/22 01:57:30 jfb Exp $	*/

/*
 * SHA-1 in C
 * By Steve Reid <steve@@edmweb.com>
 * 100% Public Domain
 */

#ifndef _SHA1_H
#define _SHA1_H

#define	SHA1_BLOCK_LENGTH		64
#define	SHA1_DIGEST_LENGTH		20
#define	SHA1_DIGEST_STRING_LENGTH	(SHA1_DIGEST_LENGTH * 2 + 1)

typedef struct {
    u_int32_t state[5];
    u_int64_t count;
    u_int8_t buffer[SHA1_BLOCK_LENGTH];
} SHA1_CTX;

#include <sys/cdefs.h>

__BEGIN_DECLS
void SHA1Init(SHA1_CTX *);
void SHA1Pad(SHA1_CTX *);
void SHA1Transform(u_int32_t *, const u_int8_t *)
	__attribute__((__bounded__(__minbytes__, 1, 20)))
	__attribute__((__bounded__(__minbytes__, 2, SHA1_BLOCK_LENGTH)));
void SHA1Update(SHA1_CTX *, const u_int8_t *, size_t)
	__attribute__((__bounded__(__string__, 2, 3)));
void SHA1Final(u_int8_t *, SHA1_CTX *)
	__attribute__((__bounded__(__minbytes__, 1, SHA1_DIGEST_LENGTH)));
char *SHA1End(SHA1_CTX *, char *)
	__attribute__((__bounded__(__minbytes__, 2, SHA1_DIGEST_STRING_LENGTH)));
char *SHA1File(const char *, char *)
	__attribute__((__bounded__(__minbytes__, 2, SHA1_DIGEST_STRING_LENGTH)));
char *SHA1FileChunk(const char *, char *, off_t, off_t)
	__attribute__((__bounded__(__minbytes__, 2, SHA1_DIGEST_STRING_LENGTH)));
char *SHA1Data(const u_int8_t *, size_t, char *)
	__attribute__((__bounded__(__string__, 1, 2)))
	__attribute__((__bounded__(__minbytes__, 3, SHA1_DIGEST_STRING_LENGTH)));
__END_DECLS

#define HTONDIGEST(x) do {                                              \
        x[0] = htonl(x[0]);                                             \
        x[1] = htonl(x[1]);                                             \
        x[2] = htonl(x[2]);                                             \
        x[3] = htonl(x[3]);                                             \
        x[4] = htonl(x[4]); } while (0)

#define NTOHDIGEST(x) do {                                              \
        x[0] = ntohl(x[0]);                                             \
        x[1] = ntohl(x[1]);                                             \
        x[2] = ntohl(x[2]);                                             \
        x[3] = ntohl(x[3]);                                             \
        x[4] = ntohl(x[4]); } while (0)

#endif /* _SHA1_H */
@


1.2
log
@adapt most __attribute__((â€¦)) occurrences to new KNF style(9)
@
text
@d1 1
a1 1
/*	$MirOS$ */
d28 2
a29 2
void SHA1Transform(u_int32_t [5], const u_int8_t [SHA1_BLOCK_LENGTH])
	__attribute__((__bounded__(__minbytes__, 1, 5)))
d33 1
a33 1
void SHA1Final(u_int8_t [SHA1_DIGEST_LENGTH], SHA1_CTX *)
@


1.1
log
@Initial revision
@
text
@d1 1
d29 2
a30 2
	__attribute__((__bounded__(__minbytes__,1,5)))
	__attribute__((__bounded__(__minbytes__,2,SHA1_BLOCK_LENGTH)));
d32 1
a32 1
	__attribute__((__bounded__(__string__,2,3)));
d34 1
a34 1
	__attribute__((__bounded__(__minbytes__,1,SHA1_DIGEST_LENGTH)));
d36 1
a36 1
	__attribute__((__bounded__(__minbytes__,2,SHA1_DIGEST_STRING_LENGTH)));
d38 1
a38 1
	__attribute__((__bounded__(__minbytes__,2,SHA1_DIGEST_STRING_LENGTH)));
d40 1
a40 1
	__attribute__((__bounded__(__minbytes__,2,SHA1_DIGEST_STRING_LENGTH)));
d42 2
a43 2
	__attribute__((__bounded__(__string__,1,2)))
	__attribute__((__bounded__(__minbytes__,3,SHA1_DIGEST_STRING_LENGTH)));
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
