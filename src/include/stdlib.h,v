head	1.38;
access;
symbols
	MIRBSD_10:1.17.0.2
	MIRBSD_10_BASE:1.17
	MIRBSD_9_BASE:1.10
	MIRBSD_8:1.7.0.2
	MIRBSD_8_BASE:1.7
	cvs-200509221800:1.1.1.2
	cvs-200507211800:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.38
date	2015.02.11.21.42.22;	author tg;	state Exp;
branches;
next	1.37;
commitid	10054DBCCD452D127A7;

1.37
date	2015.02.09.21.50.44;	author tg;	state Exp;
branches;
next	1.36;
commitid	10054D92BCB3E6955C8;

1.36
date	2015.02.09.21.46.02;	author tg;	state Exp;
branches;
next	1.35;
commitid	10054D92AB15D0B8652;

1.35
date	2014.11.30.21.30.54;	author tg;	state Exp;
branches;
next	1.34;
commitid	100547B8BEB4A8A38F2;

1.34
date	2014.03.05.14.07.26;	author tg;	state Exp;
branches;
next	1.33;
commitid	10053172F8E30AE4681;

1.33
date	2014.02.09.23.19.55;	author tg;	state Exp;
branches;
next	1.32;
commitid	10052F80D3270BFA1BC;

1.32
date	2014.02.09.22.35.51;	author tg;	state Exp;
branches;
next	1.31;
commitid	10052F802DB25EB293D;

1.31
date	2014.02.09.16.15.32;	author tg;	state Exp;
branches;
next	1.30;
commitid	10052F7A9B12873E47B;

1.30
date	2014.01.01.15.16.26;	author bsiegert;	state Exp;
branches;
next	1.29;
commitid	10052C4308401AE6DFB;

1.29
date	2013.10.31.20.06.08;	author tg;	state Exp;
branches;
next	1.28;
commitid	1005272B7081B0E5655;

1.28
date	2011.07.18.07.56.24;	author tg;	state Exp;
branches;
next	1.27;
commitid	1004E23E73F6F1D3DEA;

1.27
date	2010.12.23.18.33.32;	author tg;	state Exp;
branches;
next	1.26;
commitid	1004D13961111145958;

1.26
date	2010.09.21.21.24.06;	author tg;	state Exp;
branches;
next	1.25;
commitid	1004C992261692DCA0F;

1.25
date	2010.09.15.22.48.37;	author tg;	state Exp;
branches;
next	1.24;
commitid	1004C914D4E44C3AA75;

1.24
date	2010.09.12.17.10.38;	author tg;	state Exp;
branches;
next	1.23;
commitid	1004C8D0939027D8BE7;

1.23
date	2010.01.16.20.29.40;	author tg;	state Exp;
branches;
next	1.22;
commitid	1004B5221B01604F5E4;

1.22
date	2008.12.27.21.17.51;	author tg;	state Exp;
branches;
next	1.21;
commitid	10049569B9439744217;

1.21
date	2008.06.21.22.21.05;	author tg;	state Exp;
branches;
next	1.20;
commitid	100485D7EE75A1111BF;

1.20
date	2008.05.17.16.02.32;	author tg;	state Exp;
branches;
next	1.19;
commitid	100482F019C5A9CF7C2;

1.19
date	2008.04.06.22.37.36;	author tg;	state Exp;
branches;
next	1.18;
commitid	10047F950B24746C7DE;

1.18
date	2008.04.06.16.35.16;	author tg;	state Exp;
branches;
next	1.17;
commitid	10047F8FBC509338948;

1.17
date	2007.05.22.15.46.19;	author tg;	state Exp;
branches
	1.17.2.1;
next	1.16;
commitid	100465310391B12C689;

1.16
date	2007.02.02.21.06.16;	author tg;	state Exp;
branches;
next	1.15;
commitid	10045C3A79F53A9E808;

1.15
date	2006.10.27.15.52.56;	author tg;	state Exp;
branches;
next	1.14;
commitid	10045422B51340FA673;

1.14
date	2006.08.19.02.06.33;	author tg;	state Exp;
branches;
next	1.13;
commitid	10044E6722A70FCFDDA;

1.13
date	2006.08.19.02.03.08;	author tg;	state Exp;
branches;
next	1.12;
commitid	10044E6716A6772EFD9;

1.12
date	2006.08.18.13.02.18;	author tg;	state Exp;
branches;
next	1.11;
commitid	10044E5BA6E310A62DF;

1.11
date	2006.07.04.21.38.13;	author tg;	state Exp;
branches;
next	1.10;
commitid	10044AADFD122F51E6C;

1.10
date	2006.05.30.19.55.53;	author tg;	state Exp;
branches;
next	1.9;
commitid	100447CA35D613A7D0E;

1.9
date	2006.05.30.18.09.59;	author tg;	state Exp;
branches;
next	1.8;
commitid	100447C8A8400A74937;

1.8
date	2006.05.21.12.12.24;	author tg;	state Exp;
branches;
next	1.7;
commitid	100447059215CDB3530;

1.7
date	2005.11.21.19.31.54;	author tg;	state Exp;
branches;
next	1.6;
commitid	60294382208fe0fe;

1.6
date	2005.09.30.22.13.54;	author tg;	state Exp;
branches;
next	1.5;
commitid	3c62433db87ae478;

1.5
date	2005.09.30.22.07.32;	author tg;	state Exp;
branches;
next	1.4;
commitid	35fc433db72f0b7b;

1.4
date	2005.09.22.19.53.04;	author tg;	state Exp;
branches;
next	1.3;
commitid	c1343330b86894d;

1.3
date	2005.07.25.19.16.10;	author tg;	state Exp;
branches;
next	1.2;
commitid	59fb42e53a855a3d;

1.2
date	2005.03.06.19.13.40;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.24.34;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.17.2.1
date	2008.05.17.11.43.21;	author tg;	state Exp;
branches;
next	;
commitid	100482EC4E23587AF32;

1.1.1.1
date	2005.02.05.17.24.34;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.20.52.08;	author tg;	state Exp;
branches;
next	;
commitid	560042e0092f571e;


desc
@@


1.38
log
@nice workaround for C++ brokenness: 0L taken from musl via ycombinator, but it must be unsigned of course, so 0UL
@
text
@/**	$MirOS: src/include/stdlib.h,v 1.37 2015/02/09 21:50:44 tg Exp $ */
/*	$OpenBSD: stdlib.h,v 1.34 2005/05/27 17:45:56 millert Exp $	*/
/*	$NetBSD: stdlib.h,v 1.25 1995/12/27 21:19:08 jtc Exp $	*/

/*-
 * Copyright © 2013, 2014, 2015
 *	Thorsten “mirabilos” Glaser <tg@@mirbsd.org>
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)stdlib.h	5.13 (Berkeley) 6/4/91
 */

#ifndef _STDLIB_H_
#define _STDLIB_H_

#include <machine/ansi.h>

#if !defined(_ANSI_SOURCE)	/* for quad_t, etc. */
#include <sys/types.h>
#include <sys/wait.h>
#endif

#if !defined(_GCC_SIZE_T)
#define	_GCC_SIZE_T
typedef	__SIZE_TYPE__	size_t;
#endif

/* C11 optional */
#if !defined(__STDC_WANT_LIB_EXT1__) || (__STDC_WANT_LIB_EXT1__)
#ifndef rsize_t
#define rsize_t		rsize_t
typedef size_t		rsize_t;
#endif
#endif /* __STDC_WANT_LIB_EXT1__ */

#if !defined(_GCC_WCHAR_T) && !defined(__cplusplus)
#define	_GCC_WCHAR_T
typedef	__WCHAR_TYPE__	wchar_t;
#endif

typedef struct {
	int quot;		/* quotient */
	int rem;		/* remainder */
} div_t;

typedef struct {
	long quot;		/* quotient */
	long rem;		/* remainder */
} ldiv_t;

#if !defined(_ANSI_SOURCE)
typedef struct {
	quad_t quot;		/* quotient */
	quad_t rem;		/* remainder */
} qdiv_t;
#endif

#ifndef NULL
#ifdef __GNUG__
#define	NULL		__null
#elif defined(lint) || defined(__cplusplus)
#define	NULL		0UL
#else
#define	NULL		((void *)((__PTRDIFF_TYPE__)0UL))
#endif
#endif

#define	EXIT_FAILURE	1
#define	EXIT_SUCCESS	0

#define	RAND_MAX	0x7fffffff

/* maximum length of a multibyte character sequence (all locales) */
/*
 * Note: we internally use UCS-2 which yields a maximum of 3, but
 * due to the brain-dead specification of e.g. wcrtomb(3), 2 more
 * bytes (MAX - 1) can be stored due to old mbstate_t processing.
 */
#undef MB_LEN_MAX
#define MB_LEN_MAX	5	/* 3 (UCS-2) * 2 - 1 */

/* maximum length of a multibyte character sequence (current locale) */
#undef MB_CUR_MAX
#define MB_CUR_MAX	5

#include <sys/cdefs.h>

#ifndef _STDLIB_H_abs_DEFINED
/*
 * Some header files may define an abs macro.
 * If defined, undef it to prevent a syntax error and issue a warning.
 */
#ifdef abs
#undef abs
#warning abs macro collides with abs() prototype, undefining
#endif
__BEGIN_DECLS
int abs(int);
__END_DECLS
#define _STDLIB_H_abs_DEFINED
#define abs(j) __extension__({				\
	int abs_j = (j);				\
	(abs_j < 0 ? -abs_j : abs_j);			\
})
#endif

__BEGIN_DECLS
__dead void	 abort(void);
int	 atexit(void (*)(void));
double	 atof(const char *);
int	 atoi(const char *);
long	 atol(const char *);
/* LONGLONG */
long long atoll(const char *);
void	*bsearch(const void *, const void *, size_t, size_t,
	    int (*)(const void *, const void *));
void	*calloc(size_t, size_t);
div_t	 div(int, int);
char	*ecvt(double, int, int *, int *);
__dead void	 exit(int);
__dead void	 _Exit(int);
char	*fcvt(double, int, int *, int *);
void	 free(void *);
char	*gcvt(double, int, char *);
char	*getenv(const char *);
long	 labs(long);
ldiv_t	 ldiv(long, long);
/* LONGLONG */
long long
	 llabs(long long);
void	*malloc(size_t);
int	 posix_memalign(void **, size_t, size_t);
char	*mkdtemp(char *);
int	 mkstemp(char *);
int	 mkstemps(char *, int);
char	*mktemp(char *);
void	 qsort(void *, size_t, size_t, int (*)(const void *, const void *));
int	 rand(void);
int	 rand_r(unsigned int *);
void	*realloc(void *, size_t);
#if __OPENBSD_VISIBLE
void	*reallocarray(void *, size_t, size_t);
#endif
void	 srand(unsigned);
double	 strtod(const char *, char **);
float	 strtof(const char *, char **);
long	 strtol(const char *, char **, int);
/* LONGLONG */
long long
	 strtoll(const char *, char **, int);
/* LONGLONG */
long long
	 strtonum(const char *, long long, long long, const char **);
unsigned long
	 strtoul(const char *, char **, int);
/* LONGLONG */
unsigned long long
	 strtoull(const char *, char **, int);
int	 system(const char *);

#if !defined(_ANSI_SOURCE) && !defined(_POSIX_SOURCE)
#if defined(alloca) && (alloca == __builtin_alloca) && (__GNUC__ < 2)
void  *alloca(int);     /* built-in for gcc */
#elif defined(__PCC__)
#define alloca(size)	__builtin_alloca(size)
#else
void  *alloca(size_t);
#endif /* __GNUC__ */

char	*getbsize(int *, long *);
char	*cgetcap(char *, const char *, int);
int	 cgetclose(void);
int	 cgetent(char **, char **, const char *);
int	 cgetfirst(char **, char **);
int	 cgetmatch(char *, const char *);
int	 cgetnext(char **, char **);
int	 cgetnum(char *, const char *, long *);
int	 cgetset(const char *);
int	 cgetusedb(int);
int	 cgetstr(char *, const char *, char **);
int	 cgetustr(char *, const char *, char **);

int	 daemon(int, int);
char	*devname(int, int);
int	 getloadavg(double *, int);

long	 a64l(const char *);
char	*l64a(long);

void	 cfree(void *);

#ifndef _GETOPT_DEFINED_
#define _GETOPT_DEFINED_
int	 getopt(int, char * const *, const char *);
extern	 char *optarg;			/* getopt(3) external variables */
extern	 int opterr;
extern	 int optind;
extern	 int optopt;
extern	 int optreset;
int	 getsubopt(char **, char * const *, char **);
extern	 char *suboptarg;		/* getsubopt(3) external variable */
#endif /* _GETOPT_DEFINED_ */

int	 heapsort(void *, size_t, size_t, int (*)(const void *, const void *));
int	 mergesort(void *, size_t, size_t, int (*)(const void *, const void *));
int	 radixsort(const unsigned char **, int, const unsigned char *,
	    unsigned);
int	 sradixsort(const unsigned char **, int, const unsigned char *,
	    unsigned);

char	*initstate(unsigned int, char *, size_t)
		__attribute__((__bounded__(__string__, 2, 3)));
long	 random(void);
char	*realpath(const char *, char *)
		__attribute__((__bounded__(__minbytes__, 2, 1024)));
char	*setstate(const char *);
void	 srandom(unsigned int);
void	 srandomdev(void);

int	 putenv(const char *);
int	 setenv(const char *, const char *, int);
int	 unsetenv(const char *);
void	 setproctitle(const char *, ...)
	__attribute__((__format__(__printf__, 1, 2)));

quad_t	 qabs(quad_t);
qdiv_t	 qdiv(quad_t, quad_t);
quad_t	 strtoq(const char *, char **, int);
u_quad_t strtouq(const char *, char **, int);

double	 drand48(void);
double	 erand48(unsigned short *);
long	 jrand48(unsigned short *);
void	 lcong48(unsigned short *);
long	 lrand48(void);
long	 mrand48(void);
long	 nrand48(unsigned short *);
unsigned short *seed48(unsigned short *);
void	 srand48(long);

/* starting with MirOS 0AAD define the entire arc4random API as cpp macros */

/* core API */
#undef arc4random
#undef arc4random_stir
/* core API, deprecated in favour of arc4random_pushb_fast */
#undef arc4random_addrandom
/* useful OpenBSD extension */
#undef arc4random_buf
#undef arc4random_uniform
/* current MirBSD extension */
#undef arc4random_pushb_fast
/* deprecated MirBSD extension */
#undef arc4random_push
#undef arc4random_pushb
#undef arc4random_pushk

u_int32_t arc4random(void);
void	arc4random_stir(void);
void arc4random_buf(void *, size_t)
	__attribute__((__bounded__(__string__, 1, 2)));
u_int32_t arc4random_uniform(u_int32_t);
void arc4random_pushb_fast(const void *, size_t)
	__attribute__((__bounded__(__string__, 1, 2)));

#define arc4random		arc4random
#define arc4random_stir		arc4random_stir
#define arc4random_buf		arc4random_buf
#define arc4random_uniform	arc4random_uniform
#define arc4random_pushb_fast	arc4random_pushb_fast

void	arc4random_addrandom(unsigned char *, int)
	__attribute__((__bounded__(__string__, 1, 2)));
#define arc4random_addrandom	arc4random_addrandom
void	arc4random_push(int);
#define arc4random_push(n)	do {			\
	int arc4random_push_n = (n);			\
	arc4random_pushb_fast(&arc4random_push_n,	\
	    sizeof(arc4random_push_n));			\
} while (/* CONSTCOND */ 0)
uint32_t arc4random_pushb(const void *, size_t)
	__attribute__((__bounded__(__string__, 1, 2)));
#define arc4random_pushb(buf,n)	\
	(arc4random_pushb_fast((buf),(n)), arc4random())
#define arc4random_pushk(buf,n)	\
	(arc4random_pushb_fast((buf),(n)), arc4random())


void	setprogname(const char *);
const char *getprogname(void);
#endif /* !_ANSI_SOURCE && !_POSIX_SOURCE */

int	mblen(const char *, size_t);
size_t	mbstowcs(wchar_t *, const char *, size_t);
int	mbtowc(wchar_t *, const char *, size_t);
size_t	wcstombs(char *, const wchar_t *, size_t);
int	wctomb(char *, const wchar_t);
__END_DECLS

#if defined(_SVID_SOURCE) && !defined(__STRICT_ANSI__)
__BEGIN_DECLS
int rpmatch(const char *);
__END_DECLS
#endif

#endif /* _STDLIB_H_ */
@


1.37
log
@harmonise tabs inside the files
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.36 2015/02/09 21:46:02 tg Exp $ */
d87 1
a87 1
#define	NULL		0
@


1.36
log
@fix C++ (except G++) definition of NULL; revalidate C/POSIX one
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.35 2014/11/30 21:30:54 tg Exp $ */
d85 1
a85 1
#define	NULL			__null
d87 1
a87 1
#define	NULL			0
d89 1
a89 1
#define	NULL			((void *)((__PTRDIFF_TYPE__)0UL))
@


1.35
log
@• timingsafe_memcmp is not the same as timingsafe_bcmp, remove
• remove timingsafe_bcmp from libkern
• (re-)add timingsafe_bcmp and timingsafe_memcmp to libc
• update omalloc
• newly add reallocarray to libc
• add strnlen to libc, fix strndup to not read beyond size with that
• update manpages and add MLINKS: strndup, strnlen, timingsafe_*cmp
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.34 2014/03/05 14:07:26 tg Exp $ */
d6 1
a6 1
 * Copyright © 2013, 2014
a82 1

d84 4
a87 4
#ifdef 	__GNUG__
#define	NULL	__null
#elif defined(lint)
#define	NULL	0
d89 1
a89 1
#define	NULL	((void *)((__PTRDIFF_TYPE__)0UL))
@


1.34
log
@more http://www.tedunangst.com/flak/post/how-to-screw-up-crypto-the-easy-way
fixing in headers (need to rid this from the corresponding *.c files, too!)

also, bonus, fix some bounded attributes and add some more (WTF!)
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.33 2014/02/09 23:19:55 tg Exp $ */
d167 3
@


1.33
log
@“long double” in MirBSD (i386 and sparc, both) is currently just plain wrong and will lead to bad results; fix the code if needed
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.32 2014/02/09 22:35:51 tg Exp $ */
d208 1
a208 1
int	 getloadavg(double [], int);
d255 3
a257 3
double	 erand48(unsigned short[3]);
long	 jrand48(unsigned short[3]);
void	 lcong48(unsigned short[7]);
d260 2
a261 2
long	 nrand48(unsigned short[3]);
unsigned short *seed48(unsigned short[3]);
@


1.32
log
@nuke the restrict qualifiers; C99 says this makes no externally visible difference and is only a compiler hint and a limitation to the interface implementor
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.31 2014/02/09 16:15:32 tg Exp $ */
a169 2
long double
	 strtold(const char *, char **);
@


1.31
log
@implement rsize_t as specified in N1570, inspired by xenu
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.30 2014/01/01 15:16:26 bsiegert Exp $ */
d319 3
a321 3
size_t	mbstowcs(wchar_t *__restrict__, const char *__restrict__, size_t);
int	mbtowc(wchar_t *__restrict__, const char *__restrict__, size_t);
size_t	wcstombs(char *__restrict__, const wchar_t *__restrict__, size_t);
@


1.30
log
@Add strtof and strtold to libc.

They are simple wrappers around the existing strtod implementation.
In MirOS, double and long double are the same anyway. This change is needed
because the two functions are part of C99, so there is a bunch of software
that uses them without a configure check.

ok tg@@
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.29 2013/10/31 20:06:08 tg Exp $ */
d6 1
a6 1
 * Copyright © 2013
d53 8
@


1.29
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.28 2011/07/18 07:56:24 tg Exp $ */
d161 3
@


1.28
log
@prevent macro./.proto collision
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.27 2010/12/23 18:33:32 tg Exp $ */
d6 2
d226 1
a226 1
		__attribute__((__bounded__ (__string__,2,3)));
d229 1
a229 1
		__attribute__((__bounded__ (__minbytes__,2,1024)));
d238 1
a238 1
	__attribute__((__format__ (__printf__, 1, 2)));
d275 1
a275 1
	__attribute__((__bounded__ (__string__,1,2)));
d278 1
a278 1
	__attribute__((bounded (string, 1, 2)));
d287 1
a287 1
	__attribute__((__bounded__ (__string__,1,2)));
d296 1
a296 1
	__attribute__((bounded (string, 1, 2)));
@


1.27
log
@merge omalloc but don’t make it default just yet
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.26 2010/09/21 21:24:06 tg Exp $ */
d104 1
d113 9
a124 1
int	 abs(int);
@


1.26
log
@use arc4random() a bit more efficiently
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.25 2010/09/15 22:48:37 tg Exp $ */
d139 1
@


1.25
log
@apparently, SUSv4 optionally requires (heh!) <sys/wait.h> to be pulled in
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.24 2010/09/12 17:10:38 tg Exp $ */
d243 17
a261 1
u_int32_t arc4random_uniform(u_int32_t);
d264 1
a264 2
#undef arc4random_pushb_fast
#define arc4random_pushb_fast arc4random_pushb_fast
d268 6
a273 1
/* deprecated */
d276 1
a276 3
#undef arc4random_push
#undef arc4random_pushb
#undef arc4random_pushk
d278 1
a278 3
uint32_t arc4random_pushb(const void *, size_t)
	__attribute__((bounded (string, 1, 2)));
#define arc4random_push(n) do {				\
d283 7
a289 4
#define arc4random_pushb(buf,len) \
	(arc4random_pushb_fast((buf),(len)), arc4random())
#define arc4random_pushk(buf,len) \
	(arc4random_pushb_fast((buf),(len)), arc4random())
@


1.24
log
@new implementation of arc4random(3) API (except arc4random_uniform(3),
which though has been split off earlier today)

deprecate arc4random_push arc4random_pushb arc4random_pushk
in favour of arc4random_pushb_fast as well

hide internal symbols from user with a version script (only some,
until the next major bump)

make deprecated functions into macros already

switch some kernel code to use the new shared code already; rewrite
of kernel arc4random(9) will come next/later
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.23 2010/01/16 20:29:40 tg Exp $ */
d43 1
@


1.23
log
@add (if 0’d) arc4random_add_lazy – will be added when we really need/use
it, maybe with a push_lazy variant as well – and a small bugfix
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.22 2008/12/27 21:17:51 tg Exp $ */
a243 6
void	arc4random_addrandom(unsigned char *, int)
	__attribute__((__bounded__ (__string__,1,2)));
#if 0
void	arc4random_add_lazy(const void *, size_t)
	__attribute__((__bounded__ (__string__,1,2)));
#endif
d247 11
d261 9
a269 2
#undef arc4random_pushk
#define arc4random_pushk arc4random_pushb
@


1.22
log
@merge and wrap exec/exit functions better
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.21 2008/06/21 22:21:05 tg Exp $ */
d246 4
@


1.21
log
@alloca is a pcc builtin, from pcc wiki
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.20 2008/05/17 16:02:32 tg Exp $ */
d245 4
a248 1
	__attribute__((bounded (string, 1, 2)));
d253 1
a253 3
#define arc4random_pushk arc4random_pushk
uint32_t arc4random_pushk(const void *, size_t)
	__attribute__((bounded (string, 1, 2)));
@


1.20
log
@SUSv3 and TFM say that the second argument must be of at least PATH_MAX,
i.e. 1024, bytes.
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.19 2008/04/06 22:37:36 tg Exp $ */
d165 2
@


1.19
log
@• arc4random_pushk, the easy way for mirmake: alias to arc4random_pushb
• stdlib.h: override that (since we come past cmd line -include)
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.18 2008/04/06 16:35:16 tg Exp $ */
d213 2
a214 1
char	*realpath(const char *, char *);
@


1.18
log
@new function (and macro with 1:1 definition): arc4random_pushk(3)
for use in applications that do not need to pull in all of arc4random.c
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.17 2007/05/22 15:46:19 tg Exp $ */
d246 1
@


1.17
log
@implement rpmatch(3) from GNU libc – no manpage yet, same as getline(3),
for compat only; rides on recent libc minor bump
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.16 2007/02/02 21:06:16 tg Exp $ */
d246 3
@


1.17.2.1
log
@compatibility with -current: add arc4random_pushk as arc4random_pushb alias
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.17 2007/05/22 15:46:19 tg Exp $ */
a245 2
#undef arc4random_pushk
#define arc4random_pushk arc4random_pushb
@


1.16
log
@switch to a one-locale system; "the" locale is UTF-8 encoded 'C' now;
inline many simpler functions for reduced code size / imports / speed
and optimise a little - XXX untested
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.15 2006/10/27 15:52:56 tg Exp $ */
d258 6
@


1.15
log
@* sys.mk, param.h: bump OS patchlevel
* sys.mk, sys.mk.ed: simplify CPPFLAGS generation
* limits.h, stdlib.h: crank MB_LEN_MAX to (2*real-MB_LEN_MAX - 1)
  to account for functions such as wcrtomb(3) to process an mbstate_t
* machine/limits.h: do *not* define MB_LEN_MAX=1 unconditionally,
  broke libncursesw(!); protect against multiple inclusion
* bsd.port.mk: default 'mmake uninstall' to pkg_delete -c
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.14 2006/08/19 02:06:33 tg Exp $ */
d94 1
a94 1
#ifndef MB_LEN_MAX
a95 1
#endif
d99 1
a99 1
#define MB_CUR_MAX	(__mb_cur_max())
a112 2
extern int __mb_cur_max(void);

@


1.14
log
@use the 'string' bounded type, it doesn't check for NUL
but just if it's "sizeof (pointer)"-derived
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.13 2006/08/19 02:03:08 tg Exp $ */
d89 5
d95 1
a95 1
#define MB_LEN_MAX	3	/* corresponding to UCS-2 */
@


1.13
log
@the implementation was good, the specification lacked a const...
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.12 2006/08/18 13:02:18 tg Exp $ */
d240 1
a240 1
	__attribute__((__bounded__ (__string__,1,2)));
d243 1
a243 1
	__attribute__((bounded (buffer, 1, 2)));
@


1.12
log
@implement new arc4random_pushb(3) API
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.11 2006/07/04 21:38:13 tg Exp $ */
d242 1
a242 1
uint32_t arc4random_pushb(void *, size_t)
@


1.11
log
@make unsetenv(3) SUSv3-conforming
found by Frank Denis
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.10 2006/05/30 19:55:53 tg Exp $ */
d242 2
@


1.10
log
@sync proto
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.9 2006/05/30 18:09:59 tg Exp $ */
d218 1
a218 1
void	 unsetenv(const char *);
@


1.9
log
@sort and remove double (and conflicting!) declaration
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.8 2006/05/21 12:12:24 tg Exp $ */
d251 1
a251 1
int	wctomb(char *, wchar_t);
@


1.8
log
@make MB_LEN_CUR overridable (weak function) too, in case
someone wants to plug in support for more than 2 locales
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.7 2005/11/21 19:31:54 tg Exp $ */
a159 7
/* these are currently just stubs */
int	 mblen(const char *, size_t);
size_t	 mbstowcs(wchar_t *, const char *, size_t);
int	 wctomb(char *, wchar_t);
int	 mbtowc(wchar_t *, const char *, size_t);
size_t	 wcstombs(char *, const wchar_t *, size_t);

d248 1
d250 1
a251 2
size_t	mbstowcs(wchar_t *__restrict__, const char *__restrict__, size_t);
size_t	wcstombs(char *__restrict__, const wchar_t *__restrict__, size_t);
@


1.7
log
@First round of system include "fixes":
let GCC decide the length of ptrdiff_t, size_t, wchar_t, wint_t
(the first three adapted from gcc fixincludes run[1])
and adapt ssize_t accordingly (untested)
also fix limits

[1] which we don't run during gcc module build tho
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.6 2005/09/30 22:13:54 tg Exp $ */
d94 2
a95 1
#define	MB_CUR_MAX	(__locale_is_utf8 ? MB_LEN_MAX : 1)
d109 1
a109 1
extern int __locale_is_utf8;
@


1.6
log
@replace __libc_mb_cur_max variable by the (__locale_is_utf8 ? 3 : 1)
equation in the MB_CUR_MAX macro; expose MB_LEN_MAX in <stdlib.h> too,
prevent duplicate definitions. Adjust includes appropriately - <locale.h>
is not needed any more.
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.5 2005/09/30 22:07:32 tg Exp $ */
d45 3
a47 3
#ifdef	_BSD_SIZE_T_
typedef	_BSD_SIZE_T_	size_t;
#undef	_BSD_SIZE_T_
d50 3
a52 6
#ifdef	_BSD_WCHAR_T_
/* in C++, wchar_t is a built-in type */
#ifndef __cplusplus
typedef	_BSD_WCHAR_T_	wchar_t;
#endif
#undef	_BSD_WCHAR_T_
d79 1
a79 1
#define	NULL	((void *)((_BSD_PTRDIFF_T_)0UL))
@


1.5
log
@MB_CUR_MAX needs not to be a function call every time
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.4 2005/09/22 19:53:04 tg Exp $ */
d91 7
a97 1
#define	MB_CUR_MAX	__libc_mb_cur_max
d111 2
a260 2

extern int __libc_mb_cur_max;
@


1.4
log
@first attempt at merging internationalisation frameworks
(Citrix, Bruno Haible's libutf8, SUSv3, my own) into MirOS

The API should(tm) match POSIX, but has no __attribute__
checks (nonnull, format, ...) yet
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.3 2005/07/25 19:16:10 tg Exp $ */
d91 1
a91 1
#define	MB_CUR_MAX	(__mb_cur_max())
a247 1
size_t	__mb_cur_max(void);
d254 1
@


1.3
log
@merge src/include
TODO: wchar stuff
@
text
@d1 1
a1 1
/**	$MirOS: src/include/stdlib.h,v 1.2 2005/03/06 19:13:40 tg Exp $ */
d91 2
d248 7
@


1.2
log
@merge src/include
@
text
@d1 2
a2 2
/**	$MirOS$ */
/*	$OpenBSD: stdlib.h,v 1.32 2004/08/03 19:59:42 millert Exp $	*/
a90 2
#define	MB_CUR_MAX	1	/* XXX */

d128 4
@


1.1
log
@Initial revision
@
text
@d1 1
d38 1
d76 1
a76 1
#ifndef	NULL
d78 3
a80 1
#define NULL	__null
d82 1
a82 1
#define	NULL	0L
d111 1
d126 1
d137 1
d140 1
d145 1
d159 4
a162 4
void  *alloca(int);     /* built-in for gcc */ 
#else 
void  *alloca(size_t); 
#endif /* __GNUC__ */ 
d238 4
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d1 1
a1 1
/*	$OpenBSD: stdlib.h,v 1.34 2005/05/27 17:45:56 millert Exp $	*/
d87 1
a87 2
extern size_t	__mb_cur_max;
#define	MB_CUR_MAX	__mb_cur_max
a123 4
char	*mkdtemp(char *);
int	 mkstemp(char *);
int	 mkstemps(char *, int);
char	*mktemp(char *);
@

