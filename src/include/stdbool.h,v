head	1.3;
access;
symbols
	MIRBSD_10:1.2.0.2
	MIRBSD_10_BASE:1.2
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200509221800:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2009.10.16.17.35.55;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004AD8AEE146D3F72A;

1.2
date	2007.09.21.10.43.36;	author tg;	state Exp;
branches;
next	1.1;
commitid	10046F3A05E1835C58A;

1.1
date	2005.02.05.17.24.34;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.34;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@* make our includes more nwcc friendly (it now likes <stdbool.h> even
  in non-gnu mode)
* revamp stdarg handling (XXX wth is __gnuc_va_list for, moid?)
@
text
@/* $MirOS: src/include/stdbool.h,v 1.2 2007/09/21 10:43:36 tg Exp $ */
/* $OpenBSD: stdbool.h,v 1.3 2004/10/02 12:55:31 espie Exp $ */

/*
 * Written by Marc Espie, September 25, 1999
 * Public domain.
 */

#ifndef	_STDBOOL_H_
#define	_STDBOOL_H_	

#ifndef __cplusplus

#if (defined(__GNUC__) && __GNUC__ >= 3) || defined(__PCC__) || \
    defined(__NWCC__)
/* Support for _C99: type _Bool is already built-in. */
#define false	0
#define true	1

#else
/* `_Bool' type must promote to `int' or `unsigned int'. */
typedef enum {
	false = 0,
	true = 1
} _Bool;

/* And those constants must also be available as macros. */
#define	false	false
#define	true	true

#endif

/* User visible type `bool' is provided as a macro which may be redefined */
#define bool _Bool

#else /* __cplusplus */
#define _Bool 	bool
#define bool 	bool
#define false 	false
#define true 	true
#endif /* __cplusplus */

/* Inform that everything is fine */
#define __bool_true_false_are_defined 1

#endif /* _STDBOOL_H_ */
@


1.2
log
@pcc 0.9.8 does C99 boolean just fine
@
text
@d1 1
a1 1
/* $MirOS$ */
d14 2
a15 1
#if (defined(__GNUC__) && __GNUC__ >= 3) || defined(__PCC__)
@


1.1
log
@Initial revision
@
text
@d1 1
d14 1
a14 1
#if defined(__GNUC__) && __GNUC__ >= 3
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
