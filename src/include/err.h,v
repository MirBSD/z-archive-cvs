head	1.2;
access;
symbols
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200509221800:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2013.10.31.20.06.07;	author tg;	state Exp;
branches;
next	1.1;
commitid	1005272B7081B0E5655;

1.1
date	2005.02.05.17.24.33;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.33;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@/*	$MirOS$ */
/*	$OpenBSD: err.h,v 1.9 2003/06/02 19:34:12 millert Exp $	*/
/*	$NetBSD: err.h,v 1.11 1994/10/26 00:55:52 cgd Exp $	*/

/*-
 * Copyright © 2013
 *	Thorsten “mirabilos” Glaser <tg@@mirbsd.org>
 * Copyright (c) 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)err.h	8.1 (Berkeley) 6/2/93
 */

#ifndef _ERR_H_
#define	_ERR_H_

/*
 * Don't use va_list in the err/warn prototypes.   Va_list is typedef'd in two
 * places (<machine/varargs.h> and <machine/stdarg.h>), so if we include one
 * of them here we may collide with the utility's includes.  It's unreasonable
 * for utilities to have to include one of them to include err.h, so we get
 * _BSD_VA_LIST_ from <machine/ansi.h> and use it.
 */
#include <machine/ansi.h>
#include <sys/cdefs.h>

__BEGIN_DECLS

__dead void	err(int, const char *, ...)
			__attribute__((__format__(__printf__, 2, 3)));
__dead void	verr(int, const char *, _BSD_VA_LIST_)
			__attribute__((__format__(__printf__, 2, 0)));
__dead void	errx(int, const char *, ...)
			__attribute__((__format__(__printf__, 2, 3)));
__dead void	verrx(int, const char *, _BSD_VA_LIST_)
			__attribute__((__format__(__printf__, 2, 0)));
void		warn(const char *, ...)
			__attribute__((__format__(__printf__, 1, 2)));
void		vwarn(const char *, _BSD_VA_LIST_)
			__attribute__((__format__(__printf__, 1, 0)));
void		warnx(const char *, ...)
			__attribute__((__format__(__printf__, 1, 2)));
void		vwarnx(const char *, _BSD_VA_LIST_)
			__attribute__((__format__(__printf__, 1, 0)));

/*
 * The _* versions are for use in library functions so user-defined
 * versions of err*,warn* do not get used.
 */
__dead void	_err(int, const char *, ...)
			__attribute__((__format__(__printf__, 2, 3)));
__dead void	_verr(int, const char *, _BSD_VA_LIST_)
			__attribute__((__format__(__printf__, 2, 0)));
__dead void	_errx(int, const char *, ...)
			__attribute__((__format__(__printf__, 2, 3)));
__dead void	_verrx(int, const char *, _BSD_VA_LIST_)
			__attribute__((__format__(__printf__, 2, 0)));
void		_warn(const char *, ...)
			__attribute__((__format__(__printf__, 1, 2)));
void		_vwarn(const char *, _BSD_VA_LIST_)
			__attribute__((__format__(__printf__, 1, 0)));
void		_warnx(const char *, ...)
			__attribute__((__format__(__printf__, 1, 2)));
void		_vwarnx(const char *, _BSD_VA_LIST_)
			__attribute__((__format__(__printf__, 1, 0)));

__END_DECLS

#endif /* !_ERR_H_ */
@


1.1
log
@Initial revision
@
text
@d1 1
d6 2
d54 1
a54 1
			__attribute__((__format__ (printf, 2, 3)));
d56 1
a56 1
			__attribute__((__format__ (printf, 2, 0)));
d58 1
a58 1
			__attribute__((__format__ (printf, 2, 3)));
d60 1
a60 1
			__attribute__((__format__ (printf, 2, 0)));
d62 1
a62 1
			__attribute__((__format__ (printf, 1, 2)));
d64 1
a64 1
			__attribute__((__format__ (printf, 1, 0)));
d66 1
a66 1
			__attribute__((__format__ (printf, 1, 2)));
d68 1
a68 1
			__attribute__((__format__ (printf, 1, 0)));
d75 1
a75 1
			__attribute__((__format__ (printf, 2, 3)));
d77 1
a77 1
			__attribute__((__format__ (printf, 2, 0)));
d79 1
a79 1
			__attribute__((__format__ (printf, 2, 3)));
d81 1
a81 1
			__attribute__((__format__ (printf, 2, 0)));
d83 1
a83 1
			__attribute__((__format__ (printf, 1, 2)));
d85 1
a85 1
			__attribute__((__format__ (printf, 1, 0)));
d87 1
a87 1
			__attribute__((__format__ (printf, 1, 2)));
d89 1
a89 1
			__attribute__((__format__ (printf, 1, 0)));
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
