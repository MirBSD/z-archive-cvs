head	1.8;
access;
symbols
	MIRBSD_10:1.6.0.2
	MIRBSD_10_BASE:1.6
	MIRBSD_9_BASE:1.5
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2;
locks; strict;
comment	@ * @;


1.8
date	2009.11.09.21.30.47;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004AF88A0F18F30769;

1.7
date	2008.11.30.13.08.49;	author tg;	state Exp;
branches;
next	1.6;
commitid	100493290663125FF1F;

1.6
date	2007.02.02.21.06.17;	author tg;	state Exp;
branches;
next	1.5;
commitid	10045C3A79F53A9E808;

1.5
date	2006.06.01.23.00.41;	author tg;	state Exp;
branches;
next	1.4;
commitid	100447F717560592A14;

1.4
date	2006.05.26.13.49.53;	author tg;	state Exp;
branches;
next	1.3;
commitid	100447707922EFC177D;

1.3
date	2006.05.21.12.15.32;	author tg;	state Exp;
branches;
next	1.2;
commitid	100447059DA615790A5;

1.2
date	2005.12.17.05.46.13;	author tg;	state Exp;
branches;
next	1.1;
commitid	10043A3A3E65E20A413;

1.1
date	2005.09.22.19.53.04;	author tg;	state Exp;
branches;
next	;
commitid	c1343330b86894d;


desc
@@


1.8
log
@fix __CRAZY=Yes build (or work around bugs we canâ€™t fix atm)
@
text
@/* $MirOS: src/include/wctype.h,v 1.7 2008/11/30 13:08:49 tg Exp $ */

#ifndef	_WCTYPE_H_
#define	_WCTYPE_H_

#include <wchar.h>

typedef const uint16_t * const *wctrans_t;

__BEGIN_DECLS
int	iswalnum(wint_t);
int	iswalpha(wint_t);
int	iswblank(wint_t);
int	iswcntrl(wint_t);
int	iswdigit(wint_t);
int	iswgraph(wint_t);
int	iswlower(wint_t);
int	iswprint(wint_t);
int	iswpunct(wint_t);
int	iswspace(wint_t);
int	iswtitle(wint_t);
int	iswupper(wint_t);
int	iswxdigit(wint_t);
int	iswctype(wint_t, wctype_t);
wint_t	towctrans(wint_t, wctrans_t);
wint_t	towlower(wint_t);
wint_t	towtitle(wint_t);
wint_t	towupper(wint_t);
wctrans_t wctrans(const char *);

extern const uint16_t * const mir18n_caseconv_tolower[0x100];
extern const uint16_t * const mir18n_caseconv_totitle[0x100];
extern const uint16_t * const mir18n_caseconv_toupper[0x100];
__END_DECLS

#define iswalnum(x)	iswctype((x), _ctp_alnum)
#define iswalpha(x)	iswctype((x), _ctp_alpha)
#define iswblank(x)	iswctype((x), _ctp_blank)
#define iswcntrl(x)	iswctype((x), _ctp_cntrl)
#define iswdigit(x)	iswctype((x), _ctp_digit)
#define iswgraph(x)	iswctype((x), _ctp_graph)
#define iswlower(x)	iswctype((x), _ctp_lower)
#define iswprint(x)	iswctype((x), _ctp_print)
#define iswpunct(x)	iswctype((x), _ctp_punct)
#define iswspace(x)	iswctype((x), _ctp_space)
#define iswtitle(x)	iswctype((x), _ctp_title)
#define iswupper(x)	iswctype((x), _ctp_upper)
#define iswxdigit(x)	iswctype((x), _ctp_xdigit)
#define towlower(x)	towctrans((x), mir18n_caseconv_tolower)
#define towtitle(x)	towctrans(towctrans((x), mir18n_caseconv_toupper), mir18n_caseconv_totitle)
#define towupper(x)	towctrans((x), mir18n_caseconv_toupper)

#endif
@


1.7
log
@if upper|lower, then title

still waiting for answer from Bruno Haible, though...
@
text
@d1 1
a1 1
/* $MirOS: src/include/wctype.h,v 1.6 2007/02/02 21:06:17 tg Exp $ */
d27 1
@


1.6
log
@switch to a one-locale system; "the" locale is UTF-8 encoded 'C' now;
inline many simpler functions for reduced code size / imports / speed
and optimise a little - XXX untested
@
text
@d1 1
a1 1
/* $MirOS: src/include/wctype.h,v 1.5 2006/06/01 23:00:41 tg Exp $ */
d21 1
d31 1
d45 1
d49 1
@


1.5
log
@bump libc version; fix includes; bump os patchlevel
@
text
@d1 1
a1 1
/* $MirOS: contrib/code/libhaible/wctype.h,v 1.7 2006/06/01 21:42:59 tg Exp $ */
d28 3
d33 15
@


1.4
log
@sync wctrans_t with libhaible
@
text
@d1 1
a1 26
/* $MirOS: contrib/code/libhaible/wctype.h,v 1.3 2006/05/23 11:39:37 tg Exp $ */

/*-
 * Copyright (c) 2005
 *	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
 *
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
 *
 * All advertising materials mentioning features or use of this soft-
 * ware must display the following acknowledgement:
 *	This product includes material provided by Thorsten Glaser.
 *
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a nontrivial bug.
 */
a7 4
#ifndef __BIT_TYPES_DEFINED__
#include <machine/types.h>
#endif

a12 1
#ifdef notyet
a16 1
#endif
a17 1
#ifdef notyet
a20 1
#endif
a21 1
#ifdef notyet
a24 1
#endif
a26 1
#ifdef notyet
a27 1
#endif
@


1.3
log
@* "#ifdef notyet" out stuff we do not yet have (the functions
  which we have currently are singlebyte stubs), like wchar.h
* install wctype.h again
@
text
@d1 1
a1 1
/* $MirOS: src/include/wctype.h,v 1.2 2005/12/17 05:46:13 tg Exp $ */
d33 5
a37 1
typedef const short * const * wctrans_t;
@


1.2
log
@big fat licence update (I left some which are bsiegert@@'s alone though)
also, remove licence boilerplate from some .h files who don't deserve it
and remove and add some advertising clauses because I say so
@
text
@d1 1
a1 1
/* $MirOS: src/include/wctype.h,v 1.1 2005/09/22 19:53:04 tg Exp $ */
d38 1
d43 1
d45 1
d49 1
d51 1
d55 1
d58 1
d60 1
@


1.1
log
@first attempt at merging internationalisation frameworks
(Citrix, Bruno Haible's libutf8, SUSv3, my own) into MirOS

The API should(tm) match POSIX, but has no __attribute__
checks (nonnull, format, ...) yet
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.2 2005/03/03 19:43:30 tg Rel $ */
d18 8
a25 7
 * Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
 * any kind, expressed or implied, to the maximum extent permitted by
 * applicable law, but with the warranty of being written without ma-
 * licious intent or gross negligence; in no event shall licensor, an
 * author or contributor be held liable for any damage, direct, indi-
 * rect or other, however caused, arising in any way out of the usage
 * of this work, even if advised of the possibility of such damage.
@

