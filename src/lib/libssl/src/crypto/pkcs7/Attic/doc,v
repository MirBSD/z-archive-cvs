head	1.2;
access;
symbols
	cvs-200804031830:1.1.1.1
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	cvs-200706161500:1.1.1.1
	cvs-200705171600:1.1.1.1
	OPENBSD_4_0:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200512060130:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.11.26.20.37.58;	author tg;	state dead;
branches;
next	1.1;
commitid	10054763A212522B5E6;

1.1
date	2005.02.05.17.25.55;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.25.55;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@OpenSSL_0_9_8-stable up to commit a20a6366c8d769020d5fcb49e4e01bdf5b2d811e
@
text
@int PKCS7_set_content_type(PKCS7 *p7, int type);
Call to set the type of PKCS7 object we are working on

int PKCS7_SIGNER_INFO_set(PKCS7_SIGNER_INFO *p7i, X509 *x509, EVP_PKEY *pkey,
	EVP_MD *dgst);
Use this to setup a signer info
There will also be functions to add signed and unsigned attributes.

int PKCS7_add_signer(PKCS7 *p7, PKCS7_SIGNER_INFO *p7i);
Add a signer info to the content.

int PKCS7_add_certificae(PKCS7 *p7, X509 *x509);
int PKCS7_add_crl(PKCS7 *p7, X509_CRL *x509);

----

p7=PKCS7_new();
PKCS7_set_content_type(p7,NID_pkcs7_signed);

signer=PKCS7_SINGNER_INFO_new();
PKCS7_SIGNER_INFO_set(signer,x509,pkey,EVP_md5());
PKCS7_add_signer(py,signer);

we are now setup.
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
