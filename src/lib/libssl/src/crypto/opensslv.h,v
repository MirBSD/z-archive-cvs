head	1.15;
access;
symbols
	cvs-200804031830:1.1.1.3
	MIRBSD_10:1.3.0.2
	MIRBSD_10_BASE:1.3
	cvs-200706161500:1.1.1.3
	cvs-200705171600:1.1.1.3
	OPENBSD_4_0:1.1.1.3
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200512060130:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2016.05.06.00.26.13;	author tg;	state Exp;
branches;
next	1.14;
commitid	100572BE4BE4636C4A0;

1.14
date	2016.02.23.13.38.34;	author tg;	state Exp;
branches;
next	1.13;
commitid	10056CC60D855ACD834;

1.13
date	2015.07.19.12.25.47;	author tg;	state Exp;
branches;
next	1.12;
commitid	10055AB97502B6E820F;

1.12
date	2015.07.18.22.48.21;	author tg;	state Exp;
branches;
next	1.11;
commitid	10055AAD7BC6B247CCA;

1.11
date	2015.06.05.12.48.17;	author tg;	state Exp;
branches;
next	1.10;
commitid	10055719AA6480682B5;

1.10
date	2015.05.25.15.38.24;	author tg;	state Exp;
branches;
next	1.9;
commitid	100556342081BA523C1;

1.9
date	2015.05.23.19.43.56;	author tg;	state Exp;
branches;
next	1.8;
commitid	1005560D85D30AABC33;

1.8
date	2015.04.12.12.53.53;	author tg;	state Exp;
branches;
next	1.7;
commitid	100552A6AA50FB28DE6;

1.7
date	2015.01.25.17.42.35;	author tg;	state Exp;
branches;
next	1.6;
commitid	10054C52B0D69B135DD;

1.6
date	2014.12.15.21.25.21;	author tg;	state Exp;
branches;
next	1.5;
commitid	100548F51D626672E49;

1.5
date	2014.11.30.02.03.18;	author tg;	state Exp;
branches;
next	1.4;
commitid	100547A7AFC07A57FEB;

1.4
date	2014.06.05.12.47.56;	author tg;	state Exp;
branches;
next	1.3;
commitid	100539066E9550A2A21;

1.3
date	2007.03.08.10.50.01;	author tg;	state Exp;
branches;
next	1.2;
commitid	10045EFEA64749A2C51;

1.2
date	2006.09.29.21.08.28;	author tg;	state Exp;
branches;
next	1.1;
commitid	100451D8B4970B35118;

1.1
date	2005.02.05.17.25.39;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.25.39;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.13.38.49;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2006.09.20.19.06.56;	author tg;	state Exp;
branches;
next	;
commitid	10045119150397FC669;


desc
@@


1.15
log
@bump
@
text
@#ifndef HEADER_OPENSSLV_H
#define HEADER_OPENSSLV_H

#ifdef HEADER_OPENSSLV_H_RCSID_PLEASE
__RCSID("$MirOS: src/lib/libssl/src/crypto/opensslv.h,v 1.14 2016/02/23 13:38:34 tg Exp $");
#endif

/* Numeric release version identifier:
 * MNNFFPPS: major minor fix patch status
 * The status nibble has one of the values 0 for development, 1 to e for betas
 * 1 to 14, and f for release.  The patch level is exactly that.
 * For example:
 * 0.9.3-dev	  0x00903000
 * 0.9.3-beta1	  0x00903001
 * 0.9.3-beta2-dev 0x00903002
 * 0.9.3-beta2    0x00903002 (same as ...beta2-dev)
 * 0.9.3	  0x0090300f
 * 0.9.3a	  0x0090301f
 * 0.9.4 	  0x0090400f
 * 1.2.3z	  0x102031af
 *
 * For continuity reasons (because 0.9.5 is already out, and is coded
 * 0x00905100), between 0.9.5 and 0.9.6 the coding of the patch level
 * part is slightly different, by setting the highest bit.  This means
 * that 0.9.5a looks like this: 0x0090581f.  At 0.9.6, we can start
 * with 0x0090600S...
 *
 * (Prior to 0.9.3-dev a different scheme was used: 0.9.2b is 0x0922.)
 * (Prior to 0.9.5a beta1, a different scheme was used: MMNNFFRBB for
 *  major minor fix final patch/beta)
 */
#define OPENSSL_VERSION_NUMBER	0x009070dfL
#ifdef OPENSSL_FIPS
# error WTF? No FIPS here!
#else
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7m 05 May 2016"
#endif
#define OPENSSL_VERSION_PTEXT	" part of " OPENSSL_VERSION_TEXT


/* The macros below are to be used for shared library (.so, .dll, ...)
 * versioning.  That kind of versioning works a bit differently between
 * operating systems.  The most usual scheme is to set a major and a minor
 * number, and have the runtime loader check that the major number is equal
 * to what it was at application link time, while the minor number has to
 * be greater or equal to what it was at application link time.  With this
 * scheme, the version number is usually part of the file name, like this:
 *
 *	libcrypto.so.0.9
 *
 * Some unixen also make a softlink with the major verson number only:
 *
 *	libcrypto.so.0
 *
 * On Tru64 and IRIX 6.x it works a little bit differently.  There, the
 * shared library version is stored in the file, and is actually a series
 * of versions, separated by colons.  The rightmost version present in the
 * library when linking an application is stored in the application to be
 * matched at run time.  When the application is run, a check is done to
 * see if the library version stored in the application matches any of the
 * versions in the version string of the library itself.
 * This version string can be constructed in any way, depending on what
 * kind of matching is desired.  However, to implement the same scheme as
 * the one used in the other unixen, all compatible versions, from lowest
 * to highest, should be part of the string.  Consecutive builds would
 * give the following versions strings:
 *
 *	3.0
 *	3.0:3.1
 *	3.0:3.1:3.2
 *	4.0
 *	4.0:4.1
 *
 * Notice how version 4 is completely incompatible with version, and
 * therefore give the breach you can see.
 *
 * There may be other schemes as well that I haven't yet discovered.
 *
 * So, here's the way it works here: first of all, the library version
 * number doesn't need at all to match the overall OpenSSL version.
 * However, it's nice and more understandable if it actually does.
 * The current library version is stored in the macro SHLIB_VERSION_NUMBER,
 * which is just a piece of text in the format "M.m.e" (Major, minor, edit).
 * For the sake of Tru64, IRIX, and any other OS that behaves in similar ways,
 * we need to keep a history of version numbers, which is done in the
 * macro SHLIB_VERSION_HISTORY.  The numbers are separated by colons and
 * should only keep the versions that are binary compatible with the current.
 */
#define SHLIB_VERSION_HISTORY ""
#define SHLIB_VERSION_NUMBER "0.9.7"


#endif /* HEADER_OPENSSLV_H */
@


1.14
log
@Backport from Debian squeeze-LTS by Kurt Roeckx:

From 5475d108f64b8a56141dc0b29ac841695f9dfa5f Mon Sep 17 00:00:00 2001
From: Matt Caswell <matt@@openssl.org>
Date: Thu, 17 Dec 2015 02:57:20 +0000
Subject: [PATCH 1/2] Always generate DH keys for ephemeral DH cipher suites

Modified version of the commit ffaef3f15 in the master branch by Stephen
Henson. This makes the SSL_OP_SINGLE_DH_USE option a no-op and always
generates a new DH key for every handshake regardless.

This is a follow on from CVE-2016-0701. This branch is not impacted by
that CVE because it does not support X9.42 style parameters. It is still
possible to generate parameters based on primes that are not "safe",
although by default OpenSSL does not do this. The documentation does
sign post that using such parameters is unsafe if the private DH key is
reused. However to avoid accidental problems or future attacks this commit
has been backported to this branch.

Issue reported by Antonio Sanso
@
text
@d5 1
a5 1
__RCSID("$MirOS: src/lib/libssl/src/crypto/opensslv.h,v 1.13 2015/07/19 12:25:47 tg Exp $");
d36 1
a36 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7m 23 Feb 2016"
@


1.13
log
@revert the now no longer needed patches from yesternight, MirSSL copes now
@
text
@d5 1
a5 1
__RCSID("$MirOS: src/lib/libssl/src/crypto/opensslv.h,v 1.12 2015/07/18 22:48:21 tg Exp $");
d36 1
a36 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7m 19 Jul 2015"
@


1.12
log
@bump; this was enough to get SHA2 in openssltool(1) apparently
@
text
@d5 1
a5 1
__RCSID("$MirOS: src/lib/libssl/src/crypto/opensslv.h,v 1.11 2015/06/05 12:48:17 tg Exp $");
d36 1
a36 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7m 18 Jul 2015"
@


1.11
log
@works, bump version
@
text
@d5 1
a5 1
__RCSID("$MirOS: src/lib/libssl/src/crypto/opensslv.h,v 1.10 2015/05/25 15:38:24 tg Exp $");
d36 1
a36 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7m 5 Jun 2015"
@


1.10
log
@bump
@
text
@d5 1
a5 1
__RCSID("$MirOS: src/lib/libssl/src/crypto/opensslv.h,v 1.9 2015/05/23 19:43:56 tg Exp $");
d36 1
a36 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7m 25 May 2015"
@


1.9
log
@backport upstream commit ac38115c1a4fb61c66c2a8cd2a9800751828d328:
    Correctly check for export size limit
    40 bit ciphers are limited to 512 bit RSA, 56 bit ciphers to 1024 bit.

also add note about upstream commit to limit DH size to > 768 bit
which handles more cases than we do but has issues still (to be fixed)
@
text
@d5 1
a5 1
__RCSID("$MirOS: src/lib/libssl/src/crypto/opensslv.h,v 1.8 2015/04/12 12:53:53 tg Exp $");
d36 1
a36 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7m 23 May 2015"
@


1.8
log
@drop export ciphers and DES (not 3DES); demote 3DES behind AES; prefer PFS
@
text
@d5 1
a5 1
__RCSID("$MirOS: src/lib/libssl/src/crypto/opensslv.h,v 1.7 2015/01/25 17:42:35 tg Exp $");
d36 1
a36 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7m 11 Apr 2015"
@


1.7
log
@bump version; missing: SHA2, bigger RAND_* pool; should bring us to upstream’s
commit 6844c129682c525af278bac75cb5d0696b85fa10
@
text
@d5 1
a5 1
__RCSID("$MirOS: src/lib/libssl/src/crypto/opensslv.h,v 1.6 2014/12/15 21:25:21 tg Exp $");
d36 1
a36 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7m 25 Jan 2015"
@


1.6
log
@bump version
@
text
@d5 1
a5 1
__RCSID("$MirOS: src/lib/libssl/src/crypto/opensslv.h,v 1.5 2014/11/30 02:03:18 tg Exp $");
d36 1
a36 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7m 15 Dec 2014"
@


1.5
log
@version bump
@
text
@d5 1
a5 1
__RCSID("$MirOS: src/lib/libssl/src/crypto/opensslv.h,v 1.4 2014/06/05 12:47:56 tg Exp $");
d36 1
a36 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7m 29 Nov 2014"
@


1.4
log
@merge most post-0.9.7m changes we didn’t already have, from the 0.9.7 branch

FWIW: git://git.openssl.org/openssl.git is not linked from anywhere on the
OpenSSL homepage except an HTML page that is not linked anywhere… go guys!
@
text
@d5 1
a5 1
__RCSID("$MirOS$");
d36 1
a36 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7m 05 Jun 2014"
@


1.3
log
@upgrade to OpenSSL 0.9.7m
@
text
@d4 4
d34 1
a34 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7m-fips 23 Feb 2007"
d36 1
a36 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7m 23 Feb 2007"
@


1.2
log
@update OpenSSL to 0.9.7l (easy update, no API/ABI change)
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x009070cfL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7l-fips 28 Sep 2006"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7l 28 Sep 2006"
@


1.1
log
@Initial revision
@
text
@d28 6
a33 2
#define OPENSSL_VERSION_NUMBER	0x0090704fL
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7d 17 Mar 2004"
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@sure enough they updated OpenSSL late
but thanks mates, so I need not do it myself
@
text
@d28 2
a29 6
#define OPENSSL_VERSION_NUMBER	0x0090707fL
#ifdef OPENSSL_FIPS
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7g-fips 11 Apr 2005"
#else
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7g 11 Apr 2005"
#endif
@


1.1.1.3
log
@import a few security-wise relevant changes right now
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x009070afL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7j-fips 04 May 2006"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7j 04 May 2006"
@


