head	1.4;
access;
symbols
	cvs-200804031830:1.1.1.2
	MIRBSD_10:1.1.1.2.0.4
	MIRBSD_10_BASE:1.1.1.2
	cvs-200706161500:1.1.1.2
	cvs-200705171600:1.1.1.2
	OPENBSD_4_0:1.1.1.2
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200512060130:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.07.18.13.44.39;	author tg;	state Exp;
branches;
next	1.3;
commitid	10055AA58566D9EE960;

1.3
date	2014.12.15.21.04.23;	author tg;	state Exp;
branches;
next	1.2;
commitid	100548F4CC703E2776F;

1.2
date	2014.11.30.01.59.38;	author tg;	state Exp;
branches;
next	1.1;
commitid	100547A79D40E397510;

1.1
date	2005.02.05.17.25.47;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.25.47;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.13.39.08;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@drop compat code for old MirBSD, we’re going to need more anyway
@
text
@/* $MirOS: src/lib/libssl/src/crypto/cast/cast.h,v 1.3 2014/12/15 21:04:23 tg Exp $ */

#ifndef HEADER_CAST_H
#define HEADER_CAST_H

#include <sys/types.h>
#include <cast.h>

#ifdef OPENSSL_NO_CAST
#error CAST is disabled.
#endif

__BEGIN_DECLS

#define CAST_ENCRYPT 1
#define CAST_DECRYPT 0

#define CAST_LONG u_int32_t

#define CAST_BLOCK 8
#define CAST_KEY_LENGTH 16

#define CAST_KEY cast_key

void CAST_set_key(CAST_KEY *key, int len, const unsigned char *data);
void CAST_ecb_encrypt(const unsigned char *in,unsigned char *out,CAST_KEY *key,
		      int enc);
void CAST_encrypt(CAST_LONG *data,CAST_KEY *key);
void CAST_decrypt(CAST_LONG *data,CAST_KEY *key);
void CAST_cbc_encrypt(const unsigned char *in, unsigned char *out, long length,
		      CAST_KEY *ks, unsigned char *iv, int enc);
void CAST_cfb64_encrypt(const unsigned char *in, unsigned char *out,
			long length, CAST_KEY *schedule, unsigned char *ivec,
			int *num, int enc);
void CAST_ofb64_encrypt(const unsigned char *in, unsigned char *out, 
			long length, CAST_KEY *schedule, unsigned char *ivec,
			int *num);

#define CAST_encrypt(data,key)		cast_encrypt2(key, data)
#define CAST_decrypt(data,key)		cast_decrypt2(key, data)
#define CAST_set_key(key,len,data)	cast_setkey(key, data, len)

__END_DECLS

#endif
@


1.3
log
@inline wrappers instead of having one more function call plus some
assorted stack shuffling (especially where argument order differs)
which gives us a small but nice speedup and another size reduction
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libssl/src/crypto/cast/cast.h,v 1.2 2014/11/30 01:59:38 tg Exp $ */
a38 1
#if (MirBSD >= 0x0AB5)
a40 1
#endif
@


1.2
log
@… and CAST. That’s it. AES is not in libc, and DES scares me silly.

Bad thing here: CAST has useless use of bswap award. We cannot fix
this without adding API to libc. But I’d prefer to not have those
huge S-boxen in two places, so it’s either do that or remove CAST
from OpenSSL altogether (it’s not in TLS anyway, just in crypto,
and GnuPG ships its own).
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libssl/src/crypto/bf/blowfish.h,v 1.2 2014/11/30 01:30:11 tg Exp $ */
d39 6
@


1.1
log
@Initial revision
@
text
@d1 1
a1 57
/* crypto/cast/cast.h */
/* Copyright (C) 1995-1998 Eric Young (eay@@cryptsoft.com)
 * All rights reserved.
 *
 * This package is an SSL implementation written
 * by Eric Young (eay@@cryptsoft.com).
 * The implementation was written so as to conform with Netscapes SSL.
 * 
 * This library is free for commercial and non-commercial use as long as
 * the following conditions are aheared to.  The following conditions
 * apply to all code found in this distribution, be it the RC4, RSA,
 * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
 * included with this distribution is covered by the same copyright terms
 * except that the holder is Tim Hudson (tjh@@cryptsoft.com).
 * 
 * Copyright remains Eric Young's, and as such any Copyright notices in
 * the code are not to be removed.
 * If this package is used in a product, Eric Young should be given attribution
 * as the author of the parts of the library used.
 * This can be in the form of a textual message at program startup or
 * in documentation (online or textual) provided with the package.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    "This product includes cryptographic software written by
 *     Eric Young (eay@@cryptsoft.com)"
 *    The word 'cryptographic' can be left out if the rouines from the library
 *    being used are not cryptographic related :-).
 * 4. If you include any Windows specific code (or a derivative thereof) from 
 *    the apps directory (application code) you must include an acknowledgement:
 *    "This product includes software written by Tim Hudson (tjh@@cryptsoft.com)"
 * 
 * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * 
 * The licence and distribution terms for any publically available version or
 * derivative of this code cannot be changed.  i.e. this code cannot simply be
 * copied and put under another distribution licence
 * [including the GNU Public Licence.]
 */
d6 2
a7 3
#ifdef  __cplusplus
extern "C" {
#endif
d13 4
a16 2
#define CAST_ENCRYPT	1
#define CAST_DECRYPT	0
d18 1
a18 1
#define CAST_LONG unsigned long
d20 2
a21 2
#define CAST_BLOCK	8
#define CAST_KEY_LENGTH	16
d23 1
a23 5
typedef struct cast_key_st
	{
	CAST_LONG data[32];
	int short_key;	/* Use reduced rounds for short key */
	} CAST_KEY;
a24 1
 
d39 1
a39 3
#ifdef  __cplusplus
}
#endif
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@sure enough they updated OpenSSL late
but thanks mates, so I need not do it myself
@
text
@d84 1
a84 4

#ifdef OPENSSL_FIPS 
void private_CAST_set_key(CAST_KEY *key, int len, const unsigned char *data);
#endif
@

