head	1.4;
access;
symbols
	cvs-200804031830:1.1.1.1
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	cvs-200706161500:1.1.1.1
	cvs-200705171600:1.1.1.1
	OPENBSD_4_0:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200512060130:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.05.25.15.26.39;	author tg;	state Exp;
branches;
next	1.3;
commitid	10055633F48177D981F;

1.3
date	2015.05.25.15.25.19;	author tg;	state Exp;
branches;
next	1.2;
commitid	10055633EED32A10A8C;

1.2
date	2014.11.26.22.53.03;	author tg;	state Exp;
branches;
next	1.1;
commitid	100547659CA53B50C9D;

1.1
date	2005.02.05.17.26.15;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.26.15;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@add back SSLv23_method
@
text
@/* ssl/t1_meth.c */
/* Copyright (C) 1995-1998 Eric Young (eay@@cryptsoft.com)
 * All rights reserved.
 *
 * This package is an SSL implementation written
 * by Eric Young (eay@@cryptsoft.com).
 * The implementation was written so as to conform with Netscapes SSL.
 * 
 * This library is free for commercial and non-commercial use as long as
 * the following conditions are aheared to.  The following conditions
 * apply to all code found in this distribution, be it the RC4, RSA,
 * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
 * included with this distribution is covered by the same copyright terms
 * except that the holder is Tim Hudson (tjh@@cryptsoft.com).
 * 
 * Copyright remains Eric Young's, and as such any Copyright notices in
 * the code are not to be removed.
 * If this package is used in a product, Eric Young should be given attribution
 * as the author of the parts of the library used.
 * This can be in the form of a textual message at program startup or
 * in documentation (online or textual) provided with the package.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    "This product includes cryptographic software written by
 *     Eric Young (eay@@cryptsoft.com)"
 *    The word 'cryptographic' can be left out if the rouines from the library
 *    being used are not cryptographic related :-).
 * 4. If you include any Windows specific code (or a derivative thereof) from 
 *    the apps directory (application code) you must include an acknowledgement:
 *    "This product includes software written by Tim Hudson (tjh@@cryptsoft.com)"
 * 
 * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * 
 * The licence and distribution terms for any publically available version or
 * derivative of this code cannot be changed.  i.e. this code cannot simply be
 * copied and put under another distribution licence
 * [including the GNU Public Licence.]
 */

#include <stdio.h>
#include <openssl/objects.h>
#include "ssl_locl.h"

static SSL_METHOD *tls1_get_method(int ver);
static SSL_METHOD *tls1_get_method(int ver)
	{
	if (ver == TLS1_VERSION)
		return(TLSv1_method());
	else
		return(NULL);
	}

SSL_METHOD *TLSv1_method(void)
	{
	static int init=1;
	static SSL_METHOD TLSv1_data;

	if (init)
		{
		CRYPTO_w_lock(CRYPTO_LOCK_SSL_METHOD);
		
		if (init)
			{
			memcpy((char *)&TLSv1_data,(char *)tlsv1_base_method(),
				sizeof(SSL_METHOD));
			TLSv1_data.ssl_connect=ssl3_connect;
			TLSv1_data.ssl_accept=ssl3_accept;
			TLSv1_data.get_ssl_method=tls1_get_method;
			init=0;
			}

		CRYPTO_w_unlock(CRYPTO_LOCK_SSL_METHOD);
		}
	
	return(&TLSv1_data);
	}

SSL_METHOD *SSLv23_method(void)
	{
		return(TLS_method());
	}

static SSL_METHOD *tls_get_method(int ver);
static SSL_METHOD *tls_get_method(int ver)
	{
		return(TLS_method());
	}

SSL_METHOD *TLS_method(void)
	{
	static int init=1;
	static SSL_METHOD TLS_data;

	if (init)
		{
		CRYPTO_w_lock(CRYPTO_LOCK_SSL_METHOD);

		if (init)
			{
			memcpy((char *)&TLS_data,(char *)tlsv1_base_method(),
				sizeof(SSL_METHOD));
			TLS_data.ssl_connect=ssl3_connect;
			TLS_data.ssl_accept=ssl23_accept;
			TLS_data.get_ssl_method=tls_get_method;
			init=0;
			}

		CRYPTO_w_unlock(CRYPTO_LOCK_SSL_METHOD);
		}

	return(&TLS_data);
	}
@


1.3
log
@add TLS_{,client_,server_}method()
@
text
@d97 5
@


1.2
log
@bring back sslv23_accept() for generic TLS_method (not TLS_server_method!)

idea here is to accept TLSv1 ClientHello in SSLv2 compat code, as sent
by MirBSD and Debian squeeze
@
text
@d86 1
a86 1
			TLSv1_data.ssl_accept=ssl23_accept;
d97 30
@


1.1
log
@Initial revision
@
text
@d86 1
a86 1
			TLSv1_data.ssl_accept=ssl3_accept;
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
