head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200804031830:1.1.1.1
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	cvs-200706161500:1.1.1.1
	cvs-200705171600:1.1.1.1
	OPENBSD_4_0:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200512060130:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.02.05.17.26.06;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.26.06;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@=pod

=head1 NAME

EVP_PKEY_new, EVP_PKEY_free - private key allocation functions.

=head1 SYNOPSIS

 #include <openssl/evp.h>

 EVP_PKEY *EVP_PKEY_new(void);
 void EVP_PKEY_free(EVP_PKEY *key);


=head1 DESCRIPTION

The EVP_PKEY_new() function allocates an empty B<EVP_PKEY> 
structure which is used by OpenSSL to store private keys.

EVP_PKEY_free() frees up the private key B<key>.

=head1 NOTES

The B<EVP_PKEY> structure is used by various OpenSSL functions
which require a general private key without reference to any
particular algorithm.

The structure returned by EVP_PKEY_new() is empty. To add a
private key to this empty structure the functions described in
L<EVP_PKEY_set1_RSA(3)|EVP_PKEY_set1_RSA(3)> should be used.

=head1 RETURN VALUES

EVP_PKEY_new() returns either the newly allocated B<EVP_PKEY>
structure of B<NULL> if an error occurred.

EVP_PKEY_free() does not return a value.

=head1 SEE ALSO

L<EVP_PKEY_set1_RSA(3)|EVP_PKEY_set1_RSA(3)>

=head1 HISTORY

TBA

=cut
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
