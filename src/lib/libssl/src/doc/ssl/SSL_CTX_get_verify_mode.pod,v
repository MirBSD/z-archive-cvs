head	1.1;
branch	1.1.1;
access;
symbols
	cvs-200804031830:1.1.1.2
	MIRBSD_10:1.1.1.2.0.4
	MIRBSD_10_BASE:1.1.1.2
	cvs-200706161500:1.1.1.2
	cvs-200705171600:1.1.1.2
	OPENBSD_4_0:1.1.1.2
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200512060130:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.02.05.17.26.09;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.26.09;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.13.40.05;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@=pod

=head1 NAME

SSL_CTX_get_verify_mode, SSL_get_verify_mode, SSL_CTX_get_verify_depth, SSL_get_verify_depth, SSL_get_verify_callback, SSL_CTX_get_verify_callback - get currently set verification parameters

=head1 SYNOPSIS

 #include <openssl/ssl.h>

 int SSL_CTX_get_verify_mode(SSL_CTX *ctx);
 int SSL_get_verify_mode(SSL *ssl);
 int SSL_CTX_get_verify_depth(SSL_CTX *ctx);
 int SSL_get_verify_depth(SSL *ssl);
 int (*SSL_CTX_get_verify_callback(SSL_CTX *ctx))(int, X509_STORE_CTX *);
 int (*SSL_get_verify_callback(SSL *ssl))(int, X509_STORE_CTX *);

=head1 DESCRIPTION

SSL_CTX_get_verify_mode() returns the verification mode currently set in
B<ctx>.

SSL_get_verify_mode() returns the verification mode currently set in
B<ssl>.

SSL_CTX_get_verify_depth() returns the verification depth limit currently set
in B<ctx>. If no limit has been explicitly set, -1 is returned and the
default value will be used.

SSL_get_verify_depth() returns the verification depth limit currently set
in B<ssl>. If no limit has been explicitly set, -1 is returned and the
default value will be used.

SSL_CTX_get_verify_callback() returns a function pointer to the verification
callback currently set in B<ctx>. If no callback was explicitly set, the
NULL pointer is returned and the default callback will be used.

SSL_get_verify_callback() returns a function pointer to the verification
callback currently set in B<ssl>. If no callback was explicitly set, the
NULL pointer is returned and the default callback will be used.

=head1 RETURN VALUES

See DESCRIPTION

=head1 SEE ALSO

L<ssl(3)|ssl(3)>, L<SSL_CTX_set_verify(3)|SSL_CTX_set_verify(3)>

=cut
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@sure enough they updated OpenSSL late
but thanks mates, so I need not do it myself
@
text
@d11 6
a16 6
 int SSL_CTX_get_verify_mode(const SSL_CTX *ctx);
 int SSL_get_verify_mode(const SSL *ssl);
 int SSL_CTX_get_verify_depth(const SSL_CTX *ctx);
 int SSL_get_verify_depth(const SSL *ssl);
 int (*SSL_CTX_get_verify_callback(const SSL_CTX *ctx))(int, X509_STORE_CTX *);
 int (*SSL_get_verify_callback(const SSL *ssl))(int, X509_STORE_CTX *);
@

