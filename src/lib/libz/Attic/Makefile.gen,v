head	1.7;
access;
symbols
	MIRBSD_10:1.6.0.2
	MIRBSD_10_BASE:1.6
	MIRBSD_9_BASE:1.4
	MIRBSD_8:1.1.0.2
	MIRBSD_8_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2008.08.01.15.47.55;	author tg;	state dead;
branches;
next	1.6;
commitid	100489330387BEFF349;

1.6
date	2007.08.14.20.52.53;	author tg;	state Exp;
branches;
next	1.5;
commitid	10046C2162D431B08F3;

1.5
date	2007.04.17.22.10.58;	author tg;	state Exp;
branches;
next	1.4;
commitid	100462545D61E1C51F9;

1.4
date	2006.06.12.22.05.38;	author tg;	state Exp;
branches;
next	1.3;
commitid	100448DE53E774C023D;

1.3
date	2006.06.12.22.04.15;	author tg;	state Exp;
branches;
next	1.2;
commitid	100448DE4C2686CBB41;

1.2
date	2006.06.11.01.19.19;	author tg;	state Exp;
branches;
next	1.1;
commitid	100448B6FA21CBD77C9;

1.1
date	2005.12.06.00.46.17;	author tg;	state Exp;
branches;
next	;
commitid	702b4394df5cb18e;


desc
@@


1.7
log
@get rid of the second copy of zlib, finally, after… ages or so
@
text
@# $MirOS: src/lib/libz/Makefile.gen,v 1.6 2007/08/14 20:52:53 tg Exp $

zlib_depends: crc32.h inffixed.h trees.h

crc32.h: mk_crc32
	./mk_crc32

inffixed.h: mk_inffixed
	./mk_inffixed >$@@

trees.h: mk_trees
	./mk_trees

mk_crc32.c:
	print 'void get_crc_table(void);' >$@@
	print >>$@@
	print 'int' >>$@@
	print 'main(void)' >>$@@
	print '{' >>$@@
	print '\tget_crc_table();' >>$@@
	print '\treturn (0);' >>$@@
	print '}' >>$@@

mk_crc32: mk_crc32.c crc32.c
	${HOSTCC} ${LDSTATIC} ${HOSTCFLAGS} ${HOSTCPPFLAGS} \
	    ${HOSTLDFLAGS} -DMAKECRCH -DZLIB_NO_CRC32PUSH $> -o $@@

mk_inffixed.c: crc32.h
	print 'void makefixed(void);' >$@@
	print >>$@@
	print 'int' >>$@@
	print 'main(void)' >>$@@
	print '{' >>$@@
	print '\tmakefixed();' >>$@@
	print '\treturn (0);' >>$@@
	print '}' >>$@@

mk_inffixed: mk_inffixed.c inflate.c \
    adler32.c crc32.c inffast.c inftrees.c zutil.c
	${HOSTCC} ${LDSTATIC} ${HOSTCFLAGS} ${HOSTCPPFLAGS} \
	    ${HOSTLDFLAGS} -DMAKEFIXED -DZLIB_NO_ADLERPUSH $> -o $@@

mk_trees.c:
	print '#include "deflate.h"' >$@@
	print '#include <string.h>' >>$@@
	print >>$@@
	print 'int' >>$@@
	print 'main(void)' >>$@@
	print '{' >>$@@
	print '\tdeflate_state s;' >>$@@
	print >>$@@
	print '\tbzero(&s, sizeof (s));' >>$@@
	print '\t_tr_init(&s);' >>$@@
	print '\treturn (0);' >>$@@
	print '}' >>$@@

mk_trees: mk_trees.c trees.c
	${HOSTCC} ${LDSTATIC} ${HOSTCFLAGS} ${HOSTCPPFLAGS} \
	    ${HOSTLDFLAGS} -DGEN_TREES_H $> -o $@@
@


1.6
log
@• KNF
• use possibly faster bzero()
@
text
@d1 1
a1 1
# $MirOS: src/lib/libz/Makefile.gen,v 1.5 2007/04/17 22:10:58 tg Exp $
@


1.5
log
@gzip (compress(1) tool) uses crc32() which now does adlerpush-alike too
(zutil.h: if either ZLIB_NO_{ADLER,CRC32}PUSH are defined, zADDRND() is
expanded to empty)
@
text
@d1 1
a1 1
# $MirOS: src/lib/libz/Makefile.gen,v 1.4 2006/06/12 22:05:38 tg Exp $
d16 1
d21 1
a21 1
	print '\treturn 0;' >>$@@
d30 1
d35 1
a35 1
	print '\treturn 0;' >>$@@
d52 1
a52 1
	print '\tmemset(&s, 0, sizeof (s));' >>$@@
@


1.4
log
@add zlib_depends::
@
text
@d1 1
a1 1
# $MirOS: src/lib/libz/Makefile.gen,v 1.3 2006/06/12 22:04:15 tg Exp $
d25 1
a25 1
	    ${HOSTLDFLAGS} -DMAKECRCH $> -o $@@
@


1.3
log
@* make an option to don't use the adlerpush
* use it for the depends
@
text
@d1 3
a3 1
# $MirOS: src/lib/libz/Makefile.gen,v 1.2 2006/06/11 01:19:19 tg Exp $
@


1.2
log
@it's HOSTCC, HOSTCFLAGS, HOSTLDFLAGS, everything else up to the user
@
text
@d1 1
a1 1
# $MirOS: src/lib/libz/Makefile.gen,v 1.1 2005/12/06 00:46:17 tg Exp $
d37 1
a37 1
	    ${HOSTLDFLAGS} -DMAKEFIXED $> -o $@@
@


1.1
log
@* split header generation functions out into different file
* use cross-compile specs from kernel Makefile
@
text
@d1 1
a1 1
# $MirOS$
d22 2
a23 2
	${HOSTCC} ${LDSTATIC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} \
	    ${HOSTED_LDFLAGS} -DMAKECRCH $> -o $@@
d36 2
a37 2
	${HOSTCC} ${LDSTATIC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} \
	    ${HOSTED_LDFLAGS} -DMAKEFIXED $> -o $@@
d54 2
a55 2
	${HOSTCC} ${LDSTATIC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} \
	    ${HOSTED_LDFLAGS} -DGEN_TREES_H $> -o $@@
@

