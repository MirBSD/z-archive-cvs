head	1.7;
access;
symbols
	MIRBSD_10:1.6.0.4
	MIRBSD_10_BASE:1.6
	MIRBSD_9_BASE:1.6
	MIRBSD_8:1.6.0.2
	MIRBSD_8_BASE:1.6
	cvs-200507211800:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2008.08.01.15.47.56;	author tg;	state dead;
branches;
next	1.6;
commitid	100489330387BEFF349;

1.6
date	2005.07.24.23.19.02;	author tg;	state Exp;
branches;
next	1.5;
commitid	43a542e421e74b4b;

1.5
date	2005.07.24.23.02.50;	author tg;	state Exp;
branches;
next	1.4;
commitid	69e042e41e2cd616;

1.4
date	2005.07.24.22.50.03;	author tg;	state Exp;
branches;
next	1.3;
commitid	123b42e4199c7c05;

1.3
date	2005.07.07.12.27.24;	author tg;	state Exp;
branches;
next	1.2;
commitid	63f442cd1fb827f1;

1.2
date	2005.03.14.21.58.16;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.26.16;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.26.16;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.20.56.32;	author tg;	state Exp;
branches;
next	;
commitid	560042e0092f571e;


desc
@@


1.7
log
@get rid of the second copy of zlib, finally, afterâ€¦ ages or so
@
text
@/**	$MirOS: src/lib/libz/compress.c,v 1.6 2005/07/24 23:19:02 tg Exp $ */
/*	$OpenBSD: compress.c,v 1.6 2005/07/20 15:56:41 millert Exp $	*/
/* compress.c -- compress a memory buffer
 * Copyright (C) 1995-2003 Jean-loup Gailly.
 * For conditions of distribution and use, see copyright notice in zlib.h
 */

#include "zutil.h"

zRCSID("$MirOS: src/lib/libz/compress.c,v 1.6 2005/07/24 23:19:02 tg Exp $")

/* ===========================================================================
     Compresses the source buffer into the destination buffer. The level
   parameter has the same meaning as in deflateInit.  sourceLen is the byte
   length of the source buffer. Upon entry, destLen is the total size of the
   destination buffer, which must be at least 0.1% larger than sourceLen plus
   12 bytes. Upon exit, destLen is the actual size of the compressed buffer.

     compress2 returns Z_OK if success, Z_MEM_ERROR if there was not enough
   memory, Z_BUF_ERROR if there was not enough room in the output buffer,
   Z_STREAM_ERROR if the level parameter is invalid.
*/
int ZEXPORT compress2 (dest, destLen, source, sourceLen, level)
    Bytef *dest;
    uLongf *destLen;
    const Bytef *source;
    uLong sourceLen;
    int level;
{
    z_stream stream;
    int err;

    stream.next_in = source;
    stream.avail_in = (uInt)sourceLen;
    stream.next_out = dest;
    stream.avail_out = (uInt)*destLen;
    if ((uLong)stream.avail_out != *destLen) return Z_BUF_ERROR;

    stream.zalloc = (alloc_func)0;
    stream.zfree = (free_func)0;
    stream.opaque = (voidpf)0;

    err = deflateInit(&stream, level);
    if (err != Z_OK) return err;

    err = deflate(&stream, Z_FINISH);
    if (err != Z_STREAM_END) {
        deflateEnd(&stream);
        return err == Z_OK ? Z_BUF_ERROR : err;
    }
    *destLen = stream.total_out;

    err = deflateEnd(&stream);
    return err;
}

/* ===========================================================================
 */
int ZEXPORT compress (dest, destLen, source, sourceLen)
    Bytef *dest;
    uLongf *destLen;
    const Bytef *source;
    uLong sourceLen;
{
    return compress2(dest, destLen, source, sourceLen, Z_DEFAULT_COMPRESSION);
}

/* ===========================================================================
     If the default memLevel or windowBits for deflateInit() is changed, then
   this function needs to be updated.
 */
uLong ZEXPORT compressBound (sourceLen)
    uLong sourceLen;
{
    return sourceLen + (sourceLen >> 12) + (sourceLen >> 14) + 11;
}
@


1.6
log
@get -Wcast-qual clean

Attention: minimal API change:
-typedef unsigned (*in_func) OF((void FAR *, unsigned char FAR * FAR *));
+typedef unsigned (*in_func) OF((void FAR *, const unsigned char FAR * FAR *));

If breakage occurs, tell me immediately.
@
text
@d1 1
a1 1
/**	$MirOS: src/lib/libz/compress.c,v 1.5 2005/07/24 23:02:50 tg Exp $ */
d10 1
a10 1
zRCSID("$MirOS: src/lib/libz/compress.c,v 1.5 2005/07/24 23:02:50 tg Exp $")
@


1.5
log
@unifdef more
@
text
@d1 1
a1 1
/**	$MirOS: src/lib/libz/compress.c,v 1.4 2005/07/24 22:50:03 tg Exp $ */
d10 1
a10 1
zRCSID("$MirOS: src/lib/libz/compress.c,v 1.4 2005/07/24 22:50:03 tg Exp $")
d33 1
a33 1
    stream.next_in = (Bytef*)source;
@


1.4
log
@* merge OpenBSD import #SECURITY FIX#, bump minor
* fold inffast.h into inflate.h
* add -Wall
* make __CRAZY clean (with 2 exceptions)
* this yields printf format string checking for gzprintf, yay!
* shrink by removing MSDOS, VMS, OS/2, WINCE, etc. crap
* make use of <sys/cdefs.h> macros
@
text
@d1 1
a1 1
/**	$MirOS: src/lib/libz/compress.c,v 1.3 2005/07/07 12:27:24 tg Exp $ */
d10 1
a10 1
zRCSID("$MirOS: src/lib/libz/compress.c,v 1.3 2005/07/07 12:27:24 tg Exp $")
a34 4
#ifdef MAXSEG_64K
    /* Check for source > 64K on 16-bit machine: */
    if ((uLong)stream.avail_in != sourceLen) return Z_BUF_ERROR;
#endif
@


1.3
log
@unify libz use (make bootloader use base libz sources)
simplify defines
add more RCS IDs
shrink code
@
text
@d1 2
a2 2
/**	$MirOS: src/lib/libz/compress.c,v 1.2 2005/03/14 21:58:16 tg Exp $ */
/*	$OpenBSD: compress.c,v 1.5 2003/12/16 22:33:02 henning Exp $	*/
d4 1
a4 1
 * Copyright (C) 1995-2002 Jean-loup Gailly.
d10 1
a10 1
zRCSID("$MirOS$")
@


1.2
log
@tack on RCS IDs to everything
enable generation of autogen'd headers (only manually)
@
text
@d1 1
a1 1
/**	$MirOS$ */
d8 1
d10 1
a10 2
#define ZLIB_INTERNAL
#include "zlib.h"
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d1 1
a1 1
/*	$OpenBSD: compress.c,v 1.6 2005/07/20 15:56:41 millert Exp $	*/
d3 1
a3 1
 * Copyright (C) 1995-2003 Jean-loup Gailly.
@

