head	1.2;
access;
symbols
	MIRBSD_10:1.1.1.2.0.4
	MIRBSD_10_BASE:1.1.1.2
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200509212000:1.1.1.2
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2009.09.15.16.52.08;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004AAFC64A4A173E46;

1.1
date	2005.02.05.17.24.37;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.37;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.09.21.20.34.16;	author tg;	state Exp;
branches;
next	;
commitid	20cd4331c3c732a2;


desc
@@


1.2
log
@DEFS.h is obsolete
@
text
@/* $OpenBSD: _setjmp.S,v 1.7 2005/08/07 16:40:15 espie Exp $ */
/*
 *
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * C library -- _setjmp, _longjmp
 *
 *	_longjmp(a,v)
 * will generate a "return(v?v:1)" from
 * the last call to
 *	_setjmp(a)
 * by restoring the previous context.
 * The previous signal state is NOT restored.
 */

#include <machine/asm.h>
#include <machine/trap.h>	/* T_FLUSHWIN */
#define	CCFSZ	96		/* from locore.S */

ENTRY(_setjmp)
	st	%sp, [%o0 + 0]	/* store caller's stack pointer */
	st	%o7, [%o0 + 4]	/* ... and return pc */
	retl
	 clr	%o0		! return 0

ENTRY(_longjmp)
	sub	%sp, CCFSZ, %sp	! set up a local stack frame
	tst	%o1		! compute v ? v : 1
	be,a	0f
	 mov	1, %o1
0:
	t	ST_FLUSHWIN	! flush register windows out to the stack

	/*
	 * We restore the saved stack pointer to %fp, then issue
	 * a `restore' instruction which will reload the register
	 * window from the stack.
	 */
	ld	[%o0 + 4], %o7    /* restore return pc */
	ld	[%o0 + 0], %fp    /* and stack pointer */

	retl			! success, return %g6
	 restore	%o1, 0, %o0
@


1.1
log
@Initial revision
@
text
@d1 1
a35 5
#if defined(LIBC_SCCS)
	.text
	.asciz "$OpenBSD: _setjmp.S,v 1.6 2004/05/04 15:57:04 miod Exp $"
#endif /* LIBC_SCCS */

d47 1
a47 1
#include "DEFS.h"
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import OpenBSD's libc as of today, minus some of the locale stuff,
and with brk malloc instead of mmap malloc
@
text
@a0 1
/* $OpenBSD: _setjmp.S,v 1.7 2005/08/07 16:40:15 espie Exp $ */
d35 5
@

