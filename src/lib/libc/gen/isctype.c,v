head	1.11;
access;
symbols
	MIRBSD_10:1.9.0.2
	MIRBSD_10_BASE:1.9
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200509212000:1.1.1.2
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2009.11.09.21.30.48;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004AF88A0F18F30769;

1.10
date	2008.11.30.13.20.37;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004932932F74A83D24;

1.9
date	2007.03.22.03.57.49;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004601FEAC02F93D70;

1.8
date	2007.03.22.03.06.49;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004601F2D82B9C3378;

1.7
date	2007.02.02.21.06.19;	author tg;	state Exp;
branches;
next	1.6;
commitid	10045C3A79F53A9E808;

1.6
date	2007.02.02.19.28.30;	author tg;	state Exp;
branches;
next	1.5;
commitid	10045C390D6140801E9;

1.5
date	2007.02.02.17.53.57;	author tg;	state Exp;
branches;
next	1.4;
commitid	10045C379432B3162B9;

1.4
date	2006.11.03.01.21.49;	author tg;	state Exp;
branches;
next	1.3;
commitid	100454A998D3A817D3C;

1.3
date	2006.11.02.13.36.32;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004549F3D0532921E6;

1.2
date	2006.11.01.19.49.33;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004548F9C65A1BC3D7;

1.1
date	2005.02.05.17.24.45;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.45;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.09.21.20.34.20;	author tg;	state Exp;
branches;
next	;
commitid	20cd4331c3c732a2;


desc
@@


1.11
log
@fix __CRAZY=Yes build (or work around bugs we can’t fix atm)
@
text
@/*-
 * Copyright (c) 2008
 *	Thorsten Glaser <tg@@mirbsd.org>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 */

#define _ANSI_LIBRARY
#include <ctype.h>
#include <stdio.h>

__RCSID("$MirOS: src/lib/libc/gen/isctype.c,v 1.10 2008/11/30 13:20:37 tg Exp $");

#undef isalnum
#undef isalpha
#undef isascii
#undef isbinry
#undef isblank
#undef iscntrl
#undef isdigit
#undef isgraph
#undef islower
#undef isprint
#undef ispunct
#undef isspace
#undef istitle
#undef isupper
#undef isxdigit
#undef toascii
#undef tolower
#undef totitle
#undef toupper

#define __CTYPE_IMPL2(t)			\
	int is ## t (int c)			\
	{					\
		return __CTYPE_IMPL(c,t);	\
	}

__CTYPE_IMPL2(alnum)
__CTYPE_IMPL2(alpha)
__CTYPE_IMPL2(blank)
__CTYPE_IMPL2(cntrl)
__CTYPE_IMPL2(digit)
__CTYPE_IMPL2(graph)
__CTYPE_IMPL2(lower)
__CTYPE_IMPL2(print)
__CTYPE_IMPL2(punct)
__CTYPE_IMPL2(space)
__CTYPE_IMPL2(upper)
__CTYPE_IMPL2(xdigit)

int
istitle(int c __unused)
{
	return (0);
}

int
isascii(int c)
{
	return ((unsigned int)c < 0x80);
}

int
toascii(int c)
{
	return (c & 0x7F);
}

int
tolower(int c)
{
	return (((c) >= 'A') && ((c) <= 'Z') ? (c) - 'A' + 'a' : (c));
}

int
totitle(int c)
{
	return (((c) >= 'a') && ((c) <= 'z') ? (c) - 'a' + 'A' : (c));
}

int
toupper(int c)
{
	return (((c) >= 'a') && ((c) <= 'z') ? (c) - 'a' + 'A' : (c));
}

int
isbinry(int ch)
{
	uint8_t c = ch;
	return ((c == 0x00) || (c == 0xC0) ||
	    (c == 0xC1) || (c > 0xEF));
}
@


1.10
log
@istitle/totitle implementation, sans table
@
text
@d25 1
a25 1
__RCSID("$MirOS: src/lib/libc/gen/isctype.c,v 1.9 2007/03/22 03:57:49 tg Exp $");
d67 1
a67 1
istitle(int c)
@


1.9
log
@fix isbinry(3) implementation:
• gcc (correctly) tells me that an uint8_t is always <=0xFF
• “c” ./. “ch” confusion typo/thinko
@
text
@a0 2
/* $MirOS: src/lib/libc/gen/isctype.c,v 1.8 2007/03/22 03:06:49 tg Exp $ */

d2 2
a3 2
 * Copyright (c) 2006, 2007
 *	Thorsten Glaser <tg@@mirbsd.de>
d25 1
a25 1
__RCSID("$MirOS: src/lib/libc/gen/isctype.c,v 1.8 2007/03/22 03:06:49 tg Exp $");
d39 1
d44 1
d67 6
d91 6
@


1.8
log
@new: isbinry(), implemented as a macro in <ctype.h> (MirOS extension,
only visible with -D_ALL_SOURCE et al.) and in libc for lint only

returns true if its argument is one of the octets that aren't used in
CESU-8 text (C0, C1, F0..FF) or the NUL byte, 0 otherwise
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libc/gen/isctype.c,v 1.7 2007/02/02 21:06:19 tg Exp $ */
d27 1
a27 1
__RCSID("$MirOS: src/lib/libc/gen/isctype.c,v 1.7 2007/02/02 21:06:19 tg Exp $");
d94 2
a95 3
	return ((ch == 0x00) ||
	    (ch == 0xC0) || (ch == 0xC1) ||
	    ((ch >= 0xF0) && (ch <= 0xFF)));
@


1.7
log
@switch to a one-locale system; "the" locale is UTF-8 encoded 'C' now;
inline many simpler functions for reduced code size / imports / speed
and optimise a little - XXX untested
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libc/gen/isctype.c,v 1.6 2007/02/02 19:28:30 tg Exp $ */
d27 1
a27 1
__RCSID("$MirOS: src/lib/libc/gen/isctype.c,v 1.6 2007/02/02 19:28:30 tg Exp $");
d32 1
d89 9
@


1.6
log
@second step: get rid of all the MIR18N_* configurable constants
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libc/gen/isctype.c,v 1.5 2007/02/02 17:53:57 tg Exp $ */
d4 1
a4 1
 * Copyright (c) 2006
a25 1
#include "mir18n.h"
d27 1
a27 1
__RCSID("$MirOS: src/lib/libc/gen/isctype.c,v 1.5 2007/02/02 17:53:57 tg Exp $");
d46 4
a49 7
#define __CTYPE_IMPL(t)							     \
	int is ## t (int c)						     \
	{								     \
		if ((c < 0) || (c >= 128))				     \
			return (0);					     \
		return ((__C_attribute_table_pg[c] & (_ctp_ ## t & 0xFF)) && \
		    !(__C_attribute_table_pg[c] & (_ctp_ ## t >> 8)));	     \
d52 12
a63 12
__CTYPE_IMPL(alnum)
__CTYPE_IMPL(alpha)
__CTYPE_IMPL(blank)
__CTYPE_IMPL(cntrl)
__CTYPE_IMPL(digit)
__CTYPE_IMPL(graph)
__CTYPE_IMPL(lower)
__CTYPE_IMPL(print)
__CTYPE_IMPL(punct)
__CTYPE_IMPL(space)
__CTYPE_IMPL(upper)
__CTYPE_IMPL(xdigit)
d68 1
a68 1
	return ((unsigned int)c <= 0177);
d74 1
a74 1
	return (c & 0177);
@


1.5
log
@* provide tolower(), toupper() as macros too, but side-effect-safe
* shrink _tolower() and _toupper() to the only required functionality
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.20 2006/12/11 21:04:56 tg Rel $ */
d28 1
a28 1
__RCSID("$MirOS: src/lib/libc/gen/isctype.c,v 1.4 2006/11/03 01:21:49 tg Exp $");
d47 1
a47 9
#if MIR18N_C_CSET == 2
#define CTYPE_NUM_CHARS       256
__IDSTRING(CTYPE_NUM_CHARS, "ctype ('C' locale) handles 8 bits");
#else
#define CTYPE_NUM_CHARS       128
__IDSTRING(CTYPE_NUM_CHARS, "ctype ('C' locale) handles 7 bits");
#endif

#define __CTYPE_IMPL(t,v)						     \
d50 1
a50 1
		if ((c < 0) || (c >= v))				     \
d56 12
a67 12
__CTYPE_IMPL(alnum,128)
__CTYPE_IMPL(alpha,128)
__CTYPE_IMPL(blank,128)
__CTYPE_IMPL(cntrl,CTYPE_NUM_CHARS)
__CTYPE_IMPL(digit,128)
__CTYPE_IMPL(graph,128)
__CTYPE_IMPL(lower,128)
__CTYPE_IMPL(print,CTYPE_NUM_CHARS)
__CTYPE_IMPL(punct,128)
__CTYPE_IMPL(space,128)
__CTYPE_IMPL(upper,128)
__CTYPE_IMPL(xdigit,128)
@


1.4
log
@replace table-driven tolower/toupper with ISO_646.irv:1991 quick one
(actually, the same as the - simpler - _tolower/_toupper macros after
the patch to make them less invasive)

tested some time ago; idea to change (make smaller too!) on the train
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libc/gen/isctype.c,v 1.3 2006/11/02 13:36:32 tg Exp $ */
d7 5
a11 6
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
d13 8
a20 8
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a defect.
d28 1
a28 1
__RCSID("$MirOS: src/lib/libc/gen/isctype.c,v 1.3 2006/11/02 13:36:32 tg Exp $");
@


1.3
log
@this actually sucks
we are mandated to be 7bit in e.g. islower(3)
for latin1, 0x80..0x9F are cntrl and 0xA0..0xFF are print,
for utf-8, they all are neither cntrl nor print since they
are multibyte sequence components (0xA0 != U+00A0; the se-
cond one would be handled by iswlower(3) instead).

=> macro version returns 0 for octets >0x7F
=> function version ditto, unless MIR18N_C_CSET == 2
=> function version of iscntrl(3) and isprint(3)
   return latin1 values if MIR18N_C_CSET == 2
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libc/gen/isctype.c,v 1.2 2006/11/01 19:49:33 tg Exp $ */
d29 1
a29 1
__RCSID("$MirOS: src/lib/libc/gen/isctype.c,v 1.2 2006/11/01 19:49:33 tg Exp $");
d45 2
d78 2
a79 1
int isascii(int c)
d84 2
a85 1
int toascii(int c)
d89 12
@


1.2
log
@* the non-wide ctype stuff now also uses the wctype structure
  (saves duplicate rodata) and has been rewritten from scratch
* the non-inline version of the non-wide ctype stuff honours
  the MIR18N_C_CSET definition now as well
* tolower/toupper also rewritten from scratch, honouring the
  MIR18N_C_CSET definition (there is no inline version, and
  _tolower/_toupper are same stupid as usual), much smaller
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.14 2006/08/09 19:35:23 tg Rel $ */
d29 1
a29 1
__RCSID("$MirOS$");
d54 1
a54 1
#define __CTYPE_IMPL(t)							     \
d57 1
a57 1
		if ((c < 0) || (c > (CTYPE_NUM_CHARS - 1)))		     \
d63 12
a74 12
__CTYPE_IMPL(alnum)
__CTYPE_IMPL(alpha)
__CTYPE_IMPL(blank)
__CTYPE_IMPL(cntrl)
__CTYPE_IMPL(digit)
__CTYPE_IMPL(graph)
__CTYPE_IMPL(lower)
__CTYPE_IMPL(print)
__CTYPE_IMPL(punct)
__CTYPE_IMPL(space)
__CTYPE_IMPL(upper)
__CTYPE_IMPL(xdigit)
@


1.1
log
@Initial revision
@
text
@d1 5
a5 8
/*
 * Copyright (c) 1989 The Regents of the University of California.
 * All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
d7 6
a12 11
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
d14 8
a21 11
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
a23 4
#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: isctype.c,v 1.10 2004/05/18 02:05:52 jfb Exp $";
#endif /* LIBC_SCCS and not lint */

d27 3
a31 6
int
isalnum(int c)
{
	return (c == EOF ? 0 : ((_ctype_ + 1)[(unsigned char)c] & (_U|_L|_N)));
}

d33 1
a33 6
int
isalpha(int c)
{
	return (c == EOF ? 0 : ((_ctype_ + 1)[(unsigned char)c] & (_U|_L)));
}

a34 6
int
isblank(int c)
{
	return (c == ' ' || c == '\t');
}

a35 6
int
iscntrl(int c)
{
	return (c == EOF ? 0 : ((_ctype_ + 1)[(unsigned char)c] & _C));
}

a36 6
int
isdigit(int c)
{
	return (c == EOF ? 0 : ((_ctype_ + 1)[(unsigned char)c] & _N));
}

a37 6
int
isgraph(int c)
{
	return (c == EOF ? 0 : ((_ctype_ + 1)[(unsigned char)c] & (_P|_U|_L|_N)));
}

a38 6
int
islower(int c)
{
	return (c == EOF ? 0 : ((_ctype_ + 1)[(unsigned char)c] & _L));
}

a39 6
int
isprint(int c)
{
	return (c == EOF ? 0 : ((_ctype_ + 1)[(unsigned char)c] & (_P|_U|_L|_N|_B)));
}

a40 6
int
ispunct(int c)
{
	return (c == EOF ? 0 : ((_ctype_ + 1)[(unsigned char)c] & _P));
}

a41 6
int
isspace(int c)
{
	return (c == EOF ? 0 : ((_ctype_ + 1)[(unsigned char)c] & _S));
}

d43 2
a44 5
int
isupper(int c)
{
	return (c == EOF ? 0 : ((_ctype_ + 1)[(unsigned char)c] & _U));
}
d46 29
a74 6
#undef isxdigit
int
isxdigit(int c)
{
	return (c == EOF ? 0 : ((_ctype_ + 1)[(unsigned char)c] & (_N|_X)));
}
d76 1
a76 3
#undef isascii
int
isascii(int c)
d81 1
a81 3
#undef toascii
int
toascii(int c)
a84 14

#undef _toupper
int
_toupper(int c)
{
	return (c - 'a' + 'A');
}

#undef _tolower
int
_tolower(int c)
{
	return (c - 'A' + 'a');
}
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import OpenBSD's libc as of today, minus some of the locale stuff,
and with brk malloc instead of mmap malloc
@
text
@a0 1
/*	$OpenBSD: isctype.c,v 1.11 2005/08/08 08:05:34 espie Exp $ */
d35 4
@

