head	1.6;
access;
symbols
	MIRBSD_10:1.6.0.2
	MIRBSD_10_BASE:1.6
	MIRBSD_9_BASE:1.3
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3
	cvs-200509212000:1.1.1.2
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2007.06.21.14.40.22;	author tg;	state Exp;
branches;
next	1.5;
commitid	100467A8D2C4D7EEFFE;

1.5
date	2007.05.17.14.24.43;	author tg;	state Exp;
branches;
next	1.4;
commitid	100464C657063A0BD89;

1.4
date	2007.05.16.22.03.53;	author tg;	state Exp;
branches;
next	1.3;
commitid	100464B7E545A2B0094;

1.3
date	2005.09.22.20.40.01;	author tg;	state Exp;
branches;
next	1.2;
commitid	2258433316aba805;

1.2
date	2005.03.06.20.28.41;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.24.45;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.45;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.09.21.20.34.21;	author tg;	state Exp;
branches;
next	;
commitid	20cd4331c3c732a2;


desc
@@


1.6
log
@• libedit, libm, libocurses, libsectok, libskey, libssl, libusbhid, libutil:
  do something I should've long done and bump their majors – ABI changes are
  not only removals (or changes) of T/D symbols but also additions(!) of U
  symbols (i.e. imports); these changed during the <ctype.h> changes from a
  while ago and depend on newer libc; I did an nm(1) comparision against #9
  (release) to allow upgrading by source
• libc, uname: since I'm bumping a lot of other shlibs, it's a good time to
  bump the libc major as well and finally get rid of that struct utsname bug
  I introduced when I had no idea what I was doing, in MirOS #1 or so…
• libpthread: requires a major bump if libc major is bumped, or so they say
• bump os patchlevel

agreed bsiegert@@
XXX any more changes to do before release?
@
text
@/*	$OpenBSD: uname.c,v 1.8 2005/08/08 08:05:34 espie Exp $ */
/*-
 * Copyright (c) 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/sysctl.h>
#include <sys/utsname.h>
#include <string.h>

__RCSID("$MirOS: src/lib/libc/gen/uname.c,v 1.5 2007/05/17 14:24:43 tg Exp $");

int
uname(struct utsname *name)
{
	int mib[2], rval;
	size_t len;

	rval = 0;

	mib[0] = CTL_KERN;
	mib[1] = KERN_OSTYPE;
	len = sizeof(name->sysname);
	if (sysctl(mib, 2, &name->sysname, &len, NULL, 0) == -1)
		rval = -1;

	mib[0] = CTL_KERN;
	mib[1] = KERN_HOSTNAME;
	len = sizeof(name->nodename);
	if (sysctl(mib, 2, &name->nodename, &len, NULL, 0) == -1)
		rval = -1;

	mib[0] = CTL_KERN;
	mib[1] = KERN_OSRELEASE;
	len = sizeof(name->release);
	if (sysctl(mib, 2, &name->release, &len, NULL, 0) == -1)
		rval = -1;

	mib[0] = CTL_KERN;
	mib[1] = KERN_OSVERSION;
	len = sizeof(name->version);
	if (sysctl(mib, 2, &name->version, &len, NULL, 0) == -1) {
		mib[0] = CTL_KERN;
		mib[1] = KERN_VERSION;
		len = sizeof(name->version);
		if (sysctl(mib, 2, &name->version, &len, NULL, 0) == -1)
			rval = -1;
	}

	mib[0] = CTL_HW;
	mib[1] = HW_MACHINE;
	len = sizeof(name->machine);
	if (sysctl(mib, 2, &name->machine, &len, NULL, 0) == -1)
		rval = -1;
	return (rval);
}
@


1.5
log
@d'oh, this was obviously stupid. new libc with old apps was safe, but new
apps allocated only 1280 bytes for a struct utsname on the stack, trigge-
ring propolice in make(1) at end of main() because of an off-by-one over-
write. until we bump libc major, increase struct utsname size by one byte
again.
@
text
@d36 1
a36 1
__RCSID("$MirOS: src/lib/libc/gen/uname.c,v 1.4 2007/05/16 22:03:53 tg Exp $");
a45 5
#if MirBSD >= 0x0A16
	/* remove this on the next libc major bump! */
	bzero(name, sizeof (struct utsname));	/* and reduce size of struct */
#endif

@


1.4
log
@okay, time to clear up one of the earliest messes in MirBSD's history…
(yes I was young and stup^Wunknowingly did this)

• lib/libc/gen/uname.c: do not fill in the struct utsname.patchlevel
  field any more.
• X11/xc/config/imake/imake.c: use sysctl kern.ospatchlevel, instead
  of relying on non-standard/unsafe struct utsname.patchlevel.
• lib/libc/gen/uname.c: in order to avoid a libc version bump, bzero
  the struct utsname * argument, so that the former patchlevel field
  becomes a NUL string.
• sys/sys/utsname.h: revert, i.e. delete the “patchlevel” field from
  struct utsname. Do NOT bump the os patchlevel, because this change
  does not affect the kernel/userland interface – that field has ne-
  ver been used in kernel land. This change, back then, was not safe
  as per ABI policy.
• lib/libc/gen/uname.c, share/mk/sys.mk, sys/sys/param.h: patchlevel
  bump for size change of struct utsname, used in gen/uname.c to add
  1 to the number of octets to bzero(), ifdef'd (so that new source,
  old includes, is safe).
• lib/libc/Makefile: mention gen/uname.c change for next major bump.

All other users of struct utsname in the base system have been taken
care of already (most notably uname(1); the others didn't use the os
patchlevel anyway).
@
text
@d36 1
a36 1
__RCSID("$MirOS$");
d48 1
a48 1
	bzero(name, sizeof (struct utsname) + /* compat */ 1);
@


1.3
log
@merge
@
text
@d34 1
d36 1
a36 1
__RCSID("$MirOS: src/lib/libc/gen/uname.c,v 1.2 2005/03/06 20:28:41 tg Exp $");
d46 5
a69 6
	mib[1] = KERN_OSPATCHLEVEL;
	len = sizeof(name->patchlevel);
	if (sysctl(mib, 2, &name->patchlevel, &len, NULL, 0) == -1)
		name->patchlevel[0] = '\0';

	mib[0] = CTL_KERN;
@


1.2
log
@merge src/lib
@
text
@d1 1
a30 4
#if 0
static char rcsid[] = "$OpenBSD: uname.c,v 1.7 2004/05/18 02:05:52 jfb Exp $";
#endif /* LIBC_SCCS and not lint */

d35 1
a35 1
__RCSID("$MirOS$");
@


1.1
log
@Initial revision
@
text
@d30 1
a30 1
#if defined(LIBC_SCCS) && !defined(lint)
d38 2
d67 6
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import OpenBSD's libc as of today, minus some of the locale stuff,
and with brk malloc instead of mmap malloc
@
text
@a0 1
/*	$OpenBSD: uname.c,v 1.8 2005/08/08 08:05:34 espie Exp $ */
d30 4
@

