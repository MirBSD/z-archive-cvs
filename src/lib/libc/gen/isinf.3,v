head	1.2;
access;
symbols
	MIRBSD_10:1.2.0.2
	MIRBSD_10_BASE:1.2
	cvs-200611031600:1.1.3.1
	netbsd:1.1.3
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200509212000:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.2
date	2006.11.03.18.10.44;	author tg;	state Exp;
branches;
next	1.1;
commitid	100454B862956081199;

1.1
date	2005.02.05.17.24.45;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.3.1;
next	;

1.1.1.1
date	2005.02.05.17.24.45;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2006.11.03.16.41.45;	author tg;	state Exp;
branches;
next	;
commitid	100454B715C46F2D6BB;


desc
@@


1.2
log
@Switch to NetBSD libm
@
text
@.\"	$NetBSD: isinf.3,v 1.12 2004/03/04 23:47:56 wiz Exp $
.\"
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)isinf.3	8.2 (Berkeley) 1/29/94
.\"
.Dd March 5, 2004
.Dt ISINF 3
.Os
.Sh NAME
.Nm isinf
.Nd test for infinity
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In math.h
.Ft int
.Fn isinf "real-floating x"
.Sh DESCRIPTION
The
.Fn isinf
macro determines whether its argument
.Fa x
is an infinity (positive or negative).
An argument represented in a format wider than its semantic type is
converted to its semantic type first.
The determination is then based on the type of the argument.
.Ss IEEE 754
It is determined whether the value of
.Fa x
is an infinity.
.Ss VAX
Infinities are not supported.
.Sh RETURN VALUES
The
.Fn isinf
macro returns a non-zero value if the value of
.Fa x
is an infinity.
Otherwise 0 is returned.
.Sh SEE ALSO
.Xr fpclassify 3 ,
.Xr isfinite 3 ,
.Xr isinff 3 ,
.Xr isnan 3 ,
.Xr isnanf 3 ,
.Xr isnormal 3 ,
.Xr math 3 ,
.Xr signbit 3
.Rs
.%T "IEEE Standard for Binary Floating-Point Arithmetic"
.%Q ANSI
.%R Std 754-1985
.Re
.Sh STANDARDS
The
.Fn isinf
macro conforms to
.St -isoC-99 .
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$OpenBSD: isinf.3,v 1.11 2003/06/02 20:18:34 millert Exp $
d30 3
a32 1
.Dd January 29, 1994
d36 4
a39 5
.Nm isinf ,
.Nm isinff ,
.Nm isnan ,
.Nm isnanf
.Nd test for infinity or not-a-number
d41 1
a41 5
.Fd #include <math.h>
.Ft int
.Fn isinf "double n"
.Ft int
.Fn isinff "float n"
d43 1
a43 3
.Fn isnan "double n"
.Ft int
.Fn isnanf "float n"
d47 13
a59 3
function returns 1 if the number
.Fa n
is \*(If, otherwise 0.
d61 5
a65 15
.Fn isinff
function is a single precision version of
.Fn isinf .
.Pp
The
.Fn isnan
function returns 1 if the number
.Fa n
is
.Dq not-a-number ,
otherwise 0.
The
.Fn isnanf
function is a single precision version of
.Fn isnan .
d67 8
a74 1
.Xr math 3
d80 5
a84 5
.Sh BUGS
.Tn VAX
floating point does not have distinguished values
for either infinity or not-a-number.
These routines always return 0 on that architecture.
@


1.1.3.1
log
@more libmath stuff
@
text
@d1 1
a1 1
.\"	$NetBSD: isinf.3,v 1.12 2004/03/04 23:47:56 wiz Exp $
d30 1
a30 3
.\"     @@(#)isinf.3	8.2 (Berkeley) 1/29/94
.\"
.Dd March 5, 2004
d34 5
a38 4
.Nm isinf
.Nd test for infinity
.Sh LIBRARY
.Lb libc
d40 5
a44 1
.In math.h
d46 3
a48 1
.Fn isinf "real-floating x"
d52 8
a59 13
macro determines whether its argument
.Fa x
is an infinity (positive or negative).
An argument represented in a format wider than its semantic type is
converted to its semantic type first.
The determination is then based on the type of the argument.
.Ss IEEE 754
It is determined whether the value of
.Fa x
is an infinity.
.Ss VAX
Infinities are not supported.
.Sh RETURN VALUES
d61 10
a70 5
.Fn isinf
macro returns a non-zero value if the value of
.Fa x
is an infinity.
Otherwise 0 is returned.
d72 1
a72 8
.Xr fpclassify 3 ,
.Xr isfinite 3 ,
.Xr isinff 3 ,
.Xr isnan 3 ,
.Xr isnanf 3 ,
.Xr isnormal 3 ,
.Xr math 3 ,
.Xr signbit 3
d78 5
a82 5
.Sh STANDARDS
The
.Fn isinf
macro conforms to
.St -isoC-99 .
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
