head	1.1;
branch	1.1.1;
access;
symbols
	MIRBSD_10:1.1.1.2.0.4
	MIRBSD_10_BASE:1.1.1.2
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200509212000:1.1.1.2
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.1
date	2005.02.05.17.24.45;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.45;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.09.21.20.34.20;	author tg;	state Exp;
branches;
next	;
commitid	20cd4331c3c732a2;


desc
@@


1.1
log
@Initial revision
@
text
@.\"	$OpenBSD: pw_dup.3,v 1.5 2003/06/17 21:56:23 millert Exp $
.\"
.\" Copyright (c) 2000 Todd C. Miller <Todd.Miller@@courtesan.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd November 15, 2000
.Dt PW_DUP 3
.Os
.Sh NAME
.Nm pw_dup
.Nd make a copy of a struct passwd
.Sh SYNOPSIS
.Fd #include <pwd.h>
.Ft struct passwd *
.Fn pw_dup "const struct passwd *pw"
.Sh DESCRIPTION
The
.Fn pw_dup
function allocates sufficient memory for a copy of the struct passwd
.Fa pw ,
does the copy, and returns a pointer to it.
This is useful as subsequent calls to
.Fn getpwent ,
.Fn getpwnam ,
and
.Fn getpwuid
will overwrite the data from previous calls.
.Pp
The returned pointer may be deallocated by a single call to
.Xr free 3 .
Since
.Fn pw_dup
allocates space for the copy in one chunk it is not necessary to free
the individual strings contained in the returned struct passwd.
.Pp
If insufficient memory is available,
.Dv NULL
is returned.
.Sh EXAMPLES
The following will make a copy of the struct passwd for root and
store it in
.Qq pw_save :
.Bd -literal -offset indent
struct passwd *pw, *pw_save;

if ((pw = getpwnam("root")) == NULL) {
	fprintf(stderr, "Cannot find root in the password file.\en");
	exit(1);
}
if ((pw_save = pw_dup(pw)) == NULL) {
	fprintf(stderr, "Out of memory.\en");
	exit(1);
}
.Ed
.Sh ERRORS
.Fn pw_dup
function may fail and set the external variable
.Va errno
for any of the errors specified for the library function
.Xr malloc 3 .
.Sh SEE ALSO
.Xr free 3 ,
.Xr getpwent 3 ,
.Xr malloc 3
.Sh HISTORY
The
.Fn pw_dup
function first appeared in
.Ox 2.9 .
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import OpenBSD's libc as of today, minus some of the locale stuff,
and with brk malloc instead of mmap malloc
@
text
@d1 1
a1 1
.\"	$OpenBSD: pw_dup.3,v 1.6 2005/07/22 03:16:58 jaredy Exp $
d38 1
a38 1
will overwrite the data they returned from previous calls.
d44 1
a44 1
allocates space for the copy in one chunk, it is not necessary to free
@

