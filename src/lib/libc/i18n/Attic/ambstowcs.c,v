head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2014.02.19.16.59.31;	author tg;	state dead;
branches;
next	1.2;
commitid	1005304E30900931FDD;

1.2
date	2008.11.22.14.00.50;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004928108117E0B7FB;

1.1
date	2008.11.22.13.51.09;	author tg;	state Exp;
branches;
next	;
commitid	10049280E475B552D73;


desc
@@


1.3
log
@move some of our custom functions from libc to libmbfun (preparing a libc major bump); drop plan9-like rune functions
@
text
@/*-
 * Copyright (c) 2008
 *	Thorsten Glaser <tg@@mirbsd.org>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 */

#include <err.h>
#include <wchar.h>

__RCSID("$MirOS: src/lib/libc/i18n/ambstowcs.c,v 1.2 2008/11/22 14:00:50 tg Exp $");

#ifdef L_ambsntowcs
#define ambstowcs	ambsntowcs
#define namestr		"ambsntowcs"
#define SECARG		, size_t n
#define mbsrtowcs	mbsnrtowcs
#define MAXARG		, n
#else
#define namestr		"ambstowcs"
#define SECARG		/* nothing */
#define MAXARG		/* nothing */
#endif

wchar_t *
ambstowcs(const char *s  SECARG)
{
	wchar_t *ws;
	size_t len;
	mbstate_t ps = { 0, 0 };

	if ((ws = calloc((len = mbsrtowcs(NULL, &s  MAXARG, 0, &ps) + 1),
	    sizeof (wchar_t))) == NULL)
		err(1, "%s: out of memory allocating %zu wide characters",
		    namestr, len);
	len = mbsrtowcs(ws, &s  MAXARG, len, &ps);
	ws[len] = L'\0';
	return (ws);
}
@


1.2
log
@• add the awcstombs(3) to match the ambstowcs(3)
  and the awcsntombs(3) to match the ambsntowcs(3)
• fix ambsntowcs(3) NUL- and awcsntombs(3) WNUL-termination of output
@
text
@d24 1
a24 1
__RCSID("$MirOS: src/lib/libc/i18n/ambstowcs.c,v 1.1 2008/11/22 13:51:09 tg Exp $");
@


1.1
log
@when going to add local extensions to libc anyway (#if __OPENBSD_VISIBLE),
simplify the rest too; since we bump the minor today anyway, add it now…
@
text
@d24 1
a24 1
__RCSID("$MirOS: src/share/misc/licence.template,v 1.28 2008/11/14 15:33:44 tg Rel $");
d49 2
a50 1
	mbsrtowcs(ws, &s  MAXARG, len, &ps);
@

