head	1.5;
access;
symbols
	MIRBSD_10:1.4.0.2
	MIRBSD_10_BASE:1.4
	MIRBSD_9_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2014.02.09.22.35.53;	author tg;	state Exp;
branches;
next	1.4;
commitid	10052F802DB25EB293D;

1.4
date	2007.02.02.21.06.22;	author tg;	state Exp;
branches;
next	1.3;
commitid	10045C3A79F53A9E808;

1.3
date	2006.11.01.20.01.19;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004548FD236EA4946C;

1.2
date	2006.06.02.19.49.12;	author tg;	state Exp;
branches;
next	1.1;
commitid	100448096433600C5D6;

1.1
date	2006.06.02.12.53.17;	author tg;	state Exp;
branches;
next	;
commitid	100448034AB61640244;


desc
@@


1.5
log
@nuke the restrict qualifiers; C99 says this makes no externally visible difference and is only a compiler hint and a limitation to the interface implementor
@
text
@/* $MirOS: src/lib/libc/i18n/wcsftime.c,v 1.4 2007/02/02 21:06:22 tg Exp $ */

/*-
 * Copyright (c) 2006
 *	Thorsten Glaser <tg@@mirbsd.de>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 *-
 * stub only
 */

#include <wchar.h>

__RCSID("$MirOS: src/lib/libc/i18n/wcsftime.c,v 1.4 2007/02/02 21:06:22 tg Exp $");

size_t __weak_wcsftime(wchar_t *, size_t, const wchar_t *, const struct tm *);

size_t
__weak_wcsftime(wchar_t *wcs, size_t maxsize, const wchar_t *format,
    const struct tm *tp)
{
	mbstate_t state = { 0, 0 };
	const wchar_t *wfmt = format;
	char *fmt, *res;
	const char **resp;
	size_t i;

	if ((res = calloc(maxsize, MB_LEN_MAX)) == NULL)
		return (0);

	i = wcsrtombs(NULL, &wfmt, 0, &state);
	if (i == (size_t)-1) {
		free(res);
		return (0);
	}
	if ((fmt = malloc(++i)) == NULL) {
		free(res);
		return (0);
	}
	wcsrtombs(fmt, &wfmt, i, &state);
	bzero(&state, sizeof (mbstate_t));

	if (strftime(res, maxsize * MB_LEN_MAX, fmt, tp) == 0) {
		free(res);
		free(fmt);
		return (0);
	}

	free(fmt);
	resp = (const char **)&res;
	i = mbsrtowcs(wcs, resp, maxsize, &state);
	free(res);
	if (i == (size_t)-1)
		return (0);
	return ((*resp == NULL) ? i : 0);
}

__weak_alias(wcsftime, __weak_wcsftime);
@


1.4
log
@switch to a one-locale system; "the" locale is UTF-8 encoded 'C' now;
inline many simpler functions for reduced code size / imports / speed
and optimise a little - XXX untested
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.20 2006/12/11 21:04:56 tg Rel $ */
d27 3
a29 1
__RCSID("$MirOS: src/lib/libc/i18n/wcsftime.c,v 1.3 2006/11/01 20:01:19 tg Exp $");
a30 2
size_t	__weak_wcsftime(wchar_t *__restrict__, size_t,
    const wchar_t *__restrict__, const struct tm *__restrict__);
d32 2
a33 2
__weak_wcsftime(wchar_t *__restrict__ wcs, size_t maxsize,
    const wchar_t *__restrict__ format, const struct tm *__restrict__ tp)
@


1.3
log
@sync licences, minor wcwidth KNF
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libc/i18n/wcsftime.c,v 1.2 2006/06/02 19:49:12 tg Exp $ */
d7 5
a11 6
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
d13 8
a20 8
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a defect.
d27 1
a27 1
__RCSID("$MirOS: src/lib/libc/i18n/wcsftime.c,v 1.2 2006/06/02 19:49:12 tg Exp $");
@


1.2
log
@make the poor excuse for a wcsftime(3) weak, though
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libc/i18n/wcsftime.c,v 1.1 2006/06/02 12:53:17 tg Exp $ */
d21 1
a21 1
 * the possibility of such damage or existence of a nontrivial bug.
d28 1
a28 1
__RCSID("$MirOS: src/lib/libc/i18n/wcsftime.c,v 1.1 2006/06/02 12:53:17 tg Exp $");
@


1.1
log
@crazy (and not cheap on the heap) wcsftime(3) implementation
done by converting back and forth between wide and multibyte
strings and just invoking strftime(3) internally

not the optimum, but ought to suffice
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.7 2006/04/09 22:08:49 tg Rel $ */
d28 1
a28 1
__RCSID("$MirOS$");
d30 2
d33 1
a33 1
wcsftime(wchar_t *__restrict__ wcs, size_t maxsize,
d71 2
@

