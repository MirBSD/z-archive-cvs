head	1.4;
access;
symbols
	MIRBSD_10:1.3.0.2
	MIRBSD_10_BASE:1.3
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200509212000:1.1.1.2
	cvs-200507211800:1.1.1.2
	cvs-200504291700:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.4
date	2014.11.30.21.30.58;	author tg;	state Exp;
branches;
next	1.3;
commitid	100547B8BEB4A8A38F2;

1.3
date	2007.06.16.21.08.19;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004674512D02234C60;

1.2
date	2007.06.15.16.00.03;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004672B77C139E51F0;

1.1
date	2005.02.05.17.24.56;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.56;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.17.05.21;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@• timingsafe_memcmp is not the same as timingsafe_bcmp, remove
• remove timingsafe_bcmp from libkern
• (re-)add timingsafe_bcmp and timingsafe_memcmp to libc
• update omalloc
• newly add reallocarray to libc
• add strnlen to libc, fix strndup to not read beyond size with that
• update manpages and add MLINKS: strndup, strnlen, timingsafe_*cmp
@
text
@.\" $MirOS: src/lib/libc/string/strdup.3,v 1.3 2007/06/16 21:08:19 tg Exp $
.\" $OpenBSD: strdup.3,v 1.13 2005/02/25 03:12:44 cloder Exp $
.\"
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)strdup.3	8.1 (Berkeley) 6/9/93
.\"
.Dd $Mdocdate: June 16 2007 $
.Dt STRDUP 3
.Os
.Sh NAME
.Nm strdup ,
.Nm strndup
.Nd save a copy of a string
.Sh SYNOPSIS
.Fd #include <string.h>
.Ft char *
.Fn strdup "const char *s"
.Ft char *
.Fn strndup "const char *s" "size_t n"
.Sh DESCRIPTION
The
.Fn strdup
function allocates sufficient memory for a copy of the string
.Fa s ,
does the copy, and returns a pointer to it.
The pointer may subsequently be used as an argument to the function
.Xr free 3 .
.Pp
The
.Fn strndup
function copies at most
.Fa n
characters from the source string before appending a
.Dv NUL
byte.
.Pp
If insufficient memory is available,
.Dv NULL
is returned.
.Sh EXAMPLES
The following will point
.Va p
to an allocated area of memory containing the NUL-terminated string
.Qq foobar :
.Bd -literal -offset indent
char *p;

p = strdup("foobar");
if (p == NULL)
	err(1, NULL);
.Ed
.Sh ERRORS
The
.Fn strdup
and
.Fn strndup
functions may fail and set the external variable
.Va errno
for any of the errors specified for the library function
.Xr malloc 3 .
.Sh SEE ALSO
.Xr free 3 ,
.Xr malloc 3 ,
.Xr strcpy 3 ,
.Xr strlcpy 3 ,
.Xr strlen 3 ,
.Xr wcsdup 3
.Sh STANDARDS
The
.Fn strdup
and
.Fn strndup
functions conform to
.St -p1003.1-2008 .
.Sh HISTORY
A
.Fn strdup
macro was first used in the
.Bx 4.1c
debugger,
.Sy dbx .
It was rewritten as a C function for the
.Bx 4.3
.Xr inetd 8
and first appeared in the C library of
.Bx 4.3 Reno .
The
.Fn strndup
function is a
.Dv GNU
extension and first appeared in
.Mx 10 .
@


1.3
log
@strndup(3) copies characters, not octets – although these are the exact same,
this distinguishation is important for wcsndup(3), whose description is deri-
ved from this one, and which copies wide characters, not octets
@
text
@d1 1
a1 1
.\" $MirOS$
d33 1
a33 1
.Dd $Mdocdate$
a43 3
.Pp
.Fd #define _GNU_SOURCE
.Fd #include <string.h>
d54 1
d74 3
a76 4
if ((p = strdup("foobar")) == NULL) {
	fprintf(stderr, "Out of memory.\en");
	exit(1);
}
d81 3
a83 1
function may fail and set the external variable
d92 9
a100 1
.Xr strlen 3
d102 1
a102 1
The
d104 9
a112 2
function first appeared in
.Bx 4.4 .
@


1.2
log
@implement just another useful GNU extension: strndup(3)
@
text
@d1 1
d61 1
a61 1
octets from the source string before appending a
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\" $OpenBSD: strdup.3,v 1.12 2003/06/02 20:18:38 millert Exp $
d32 1
a32 1
.Dd June 9, 1993
d36 2
a37 1
.Nm strdup
d43 5
d56 7
d70 1
a70 1
to an allocated area of memory containing the null-terminated string
d98 6
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@improve my Frankenstein OS (*wink* you know who you are) further
sans wchar_t of course

this is the essence of reading >1200 commit messages which suck
due to not having the new format of ours...
@
text
@d1 1
a1 1
.\" $OpenBSD: strdup.3,v 1.13 2005/02/25 03:12:44 cloder Exp $
d57 1
a57 1
to an allocated area of memory containing the NUL-terminated string
@

