head	1.6;
access;
symbols
	MIRBSD_10:1.3.0.2
	MIRBSD_10_BASE:1.3;
locks; strict;
comment	@ * @;


1.6
date	2014.11.30.21.30.58;	author tg;	state Exp;
branches;
next	1.5;
commitid	100547B8BEB4A8A38F2;

1.5
date	2011.07.01.19.17.26;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004E0E1D4E1BD90A5C;

1.4
date	2011.06.30.22.11.37;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004E0CF49753B60CB1;

1.3
date	2007.06.16.21.05.15;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004674508F681EFD66;

1.2
date	2007.06.16.19.45.52;	author tg;	state Exp;
branches;
next	1.1;
commitid	10046743DF02658A7AB;

1.1
date	2007.06.15.16.00.03;	author tg;	state Exp;
branches;
next	;
commitid	1004672B77C139E51F0;


desc
@@


1.6
log
@• timingsafe_memcmp is not the same as timingsafe_bcmp, remove
• remove timingsafe_bcmp from libkern
• (re-)add timingsafe_bcmp and timingsafe_memcmp to libc
• update omalloc
• newly add reallocarray to libc
• add strnlen to libc, fix strndup to not read beyond size with that
• update manpages and add MLINKS: strndup, strnlen, timingsafe_*cmp
@
text
@/*-
 * Copyright (c) 2007, 2011, 2014
 *	Thorsten Glaser <tg@@mirbsd.org>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 */

#include <sys/param.h>
#include <stdlib.h>
#ifdef WIDEC
#include <wchar.h>
#else
#include <string.h>
#endif

__RCSID("$MirOS: src/lib/libc/string/strndup.c,v 1.5 2011/07/01 19:17:26 tg Exp $");

#ifdef WIDEC
#define strndup	wcsndup
#define strlen	wcslen
#define char_t	wchar_t
#define NUL	L'\0'
#else
#define char_t	char
#define NUL	'\0'
#endif

char_t *
strndup(const char_t *s, size_t max)
{
	register size_t n;
	char_t *cp;

	n = strnlen(s, max);
	if ((cp = calloc(n + 1, sizeof(char_t))) != NULL) {
		memcpy(cp, s, n * sizeof(char_t));
		cp[n] = NUL;
	}
	return (cp);
}
@


1.5
log
@fix NULL ptr deref (move insn into if-clause), oeps
@
text
@d2 1
a2 1
 * Copyright (c) 2007, 2011
d29 1
a29 1
__RCSID("$MirOS: src/lib/libc/string/strndup.c,v 1.4 2011/06/30 22:11:37 tg Exp $");
d47 1
a47 2
	n = strlen(s);
	n = MIN(n, max);
@


1.4
log
@fix benz’ GNU make problem: bug in our implementation of a glibcism
(that may or may not be POSuX-mandated by now…)
@
text
@d29 1
a29 1
__RCSID("$MirOS: src/lib/libc/string/strndup.c,v 1.3 2007/06/16 21:05:15 tg Exp $");
d49 4
a52 3
	if ((cp = calloc(n + 1, sizeof (char_t))) != NULL)
		memcpy(cp, s, n * sizeof (char_t));
	cp[n] = NUL;
@


1.3
log
@optimise strndup(3) and introduce wcsndup(3), agreed bsiegert@@
@
text
@d2 2
a3 2
 * Copyright (c) 2007
 *	Thorsten Glaser <tg@@mirbsd.de>
d29 1
a29 1
__RCSID("$MirOS: src/lib/libc/string/strndup.c,v 1.2 2007/06/16 19:45:52 tg Exp $");
d48 1
a48 1
	n = MAX(n, max);
@


1.2
log
@I obviously can't code when coming back home from a long work day
@
text
@d23 3
d27 1
d29 1
a29 1
__RCSID("$MirOS: src/lib/libc/string/strndup.c,v 1.1 2007/06/15 16:00:03 tg Exp $");
d31 12
a42 2
char *
strndup(const char *s, size_t max)
d44 2
a45 2
	size_t n;
	char *cp;
d48 4
a51 4
	n = MAX(n, max) + 1;
	if ((cp = malloc(n)) != NULL)
		memcpy(cp, s, n);
	cp[n - 1] = '\0';
@


1.1
log
@implement just another useful GNU extension: strndup(3)
@
text
@d25 1
a25 1
__RCSID("$MirOS$");
d37 1
@

