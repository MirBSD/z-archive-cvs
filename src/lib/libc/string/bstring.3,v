head	1.4;
access;
symbols
	MIRBSD_10:1.4.0.2
	MIRBSD_10_BASE:1.4
	MIRBSD_9_BASE:1.4
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3
	cvs-200509212000:1.1.1.2
	cvs-200507211800:1.1.1.2
	cvs-200504291700:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.4
date	2006.05.13.14.49.03;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004465F1CB66A57B68;

1.3
date	2005.04.29.18.34.50;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.06.20.28.48;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.24.56;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.56;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.17.05.18;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@do not deprecate the BSD string functions (VAX) because
the gcc3 optimiser handles them accurately and bzero is
actually faster than memset if not optimised (kencc?).
@
text
@.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek.
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	$OpenBSD: bstring.3,v 1.7 2005/02/25 03:12:44 cloder Exp $
.\"
.Dd April 19, 1991
.Dt BSTRING 3
.Os
.Sh NAME
.Nm bstring
.Nd byte string operations
.Sh SYNOPSIS
.Fd #include <string.h>
.Ft int
.Fn bcmp "const void *b1" "const void *b2" "size_t len"
.Ft void
.Fn bcopy "const void *src" "void *dst" "size_t len"
.Ft void
.Fn bzero "void *b" "size_t len"
.Ft void *
.Fn memchr "const void *b" "int c" "size_t len"
.Ft int
.Fn memcmp "const void *b1" "const void *b2" "size_t len"
.Ft void *
.Fn memccpy "void *dst" "const void *src" "int c" "size_t len"
.Ft void *
.Fn memcpy "void *dst" "const void *src" "size_t len"
.Ft void *
.Fn memmove "void *dst" "const void *src" "size_t len"
.Ft void *
.Fn memset "void *b" "int c" "size_t len"
.Sh DESCRIPTION
These functions operate on variable length strings of bytes.
They do not check for terminating NUL bytes as the routines
listed in
.Xr string 3
do.
.Pp
See the specific manual pages for more information.
.Sh SEE ALSO
.Xr bcmp 3 ,
.Xr bcopy 3 ,
.Xr bzero 3 ,
.Xr memccpy 3 ,
.Xr memchr 3 ,
.Xr memcmp 3 ,
.Xr memcpy 3 ,
.Xr memmove 3 ,
.Xr memset 3
.Sh STANDARDS
The functions
.Fn memchr ,
.Fn memcmp ,
.Fn memcpy ,
.Fn memmove ,
and
.Fn memset
conform to
.St -ansiC .
.Sh HISTORY
The
.Fn bzero
and
.Fn memccpy
functions appeared in
.Bx 4.3 .
The
.Fn bcmp
and
.Fn bcopy
functions appeared in
.Bx 4.2 .
@


1.3
log
@(tentative) merge, more to come
@
text
@a0 2
.\" $MirOS: src/lib/libc/string/bstring.3,v 1.2 2005/03/06 20:28:48 tg Exp $
.\"
a41 4
This function is deprecated, please use
.nr nS 0
.Fn memcmp .
.nr nS 1
a43 4
This function is deprecated, please use
.nr nS 0
.Fn memmove .
.nr nS 1
a45 4
This function is deprecated, please use
.nr nS 0
.Fn memset .
.nr nS 1
a98 9
The
.Fn bcmp ,
.Fn bcopy
and
.Fn bzero
functions have been deprecated in
.Nx
and since
.Mx 8 .
@


1.2
log
@merge src/lib
@
text
@d1 1
a1 1
.\" $MirOS$
d32 1
a32 1
.\"	$OpenBSD: bstring.3,v 1.6 2004/02/10 14:35:35 jmc Exp $
d74 1
a74 1
They do not check for terminating null bytes as the routines
@


1.1
log
@Initial revision
@
text
@d1 2
d44 4
d50 4
d56 4
d113 9
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@improve my Frankenstein OS (*wink* you know who you are) further
sans wchar_t of course

this is the essence of reading >1200 commit messages which suck
due to not having the new format of ours...
@
text
@d30 1
a30 1
.\"	$OpenBSD: bstring.3,v 1.7 2005/02/25 03:12:44 cloder Exp $
d60 1
a60 1
They do not check for terminating NUL bytes as the routines
@

