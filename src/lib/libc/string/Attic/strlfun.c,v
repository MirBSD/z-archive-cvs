head	1.19;
access;
symbols
	MIRBSD_10:1.14.0.2
	MIRBSD_10_BASE:1.14
	MIRBSD_9_BASE:1.5
	MIRBSD_8:1.5.0.2
	MIRBSD_8_BASE:1.5;
locks; strict;
comment	@ * @;


1.19
date	2008.08.01.16.35.24;	author tg;	state dead;
branches;
next	1.18;
commitid	10048933B5E5B20CA97;

1.18
date	2008.08.01.12.26.17;	author tg;	state Exp;
branches;
next	1.17;
commitid	100489300F97FB1AAA3;

1.17
date	2008.07.28.00.05.51;	author tg;	state Stab;
branches;
next	1.16;
commitid	100488D0D67482E6434;

1.16
date	2008.07.07.12.59.51;	author tg;	state Stab;
branches;
next	1.15;
commitid	1004872135010DD33E5;

1.15
date	2008.05.03.22.53.43;	author tg;	state Exp;
branches;
next	1.14;
commitid	100481CED0509A27267;

1.14
date	2007.01.07.02.11.40;	author tg;	state Exp;
branches;
next	1.13;
commitid	10045A056F018AF7851;

1.13
date	2007.01.07.02.09.49;	author tg;	state Exp;
branches;
next	1.12;
commitid	10045A0568121247184;

1.12
date	2006.11.21.02.38.32;	author tg;	state Exp;
branches;
next	1.11;
commitid	100456266AC5E94A8E9;

1.11
date	2006.11.21.01.33.47;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004562578E4AE06CBD;

1.10
date	2006.11.08.23.18.04;	author tg;	state Exp;
branches;
next	1.9;
commitid	100455265BA276A4271;

1.9
date	2006.11.08.23.01.50;	author tg;	state Exp;
branches;
next	1.8;
commitid	100455261EE2B88375E;

1.8
date	2006.11.08.22.48.59;	author tg;	state Exp;
branches;
next	1.7;
commitid	10045525DEC4BF2BC34;

1.7
date	2006.08.01.13.41.49;	author tg;	state Exp;
branches;
next	1.6;
commitid	10044CF5A310D5D8B96;

1.6
date	2006.08.01.13.36.15;	author tg;	state Exp;
branches;
next	1.5;
commitid	10044CF58E03D2D060F;

1.5
date	2005.09.19.19.01.11;	author tg;	state Exp;
branches;
next	1.4;
commitid	2cb1432f0afe9944;

1.4
date	2005.05.28.20.59.09;	author tg;	state Exp;
branches;
next	1.3;
commitid	1c074298dbac5578;

1.3
date	2005.05.23.16.42.03;	author tg;	state Exp;
branches;
next	1.2;
commitid	ac8429207da51fd;

1.2
date	2005.03.14.22.34.13;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.23.20.54.33;	author tg;	state Exp;
branches;
next	;


desc
@@


1.19
log
@migrate strlcat/strlcpy/strxfrm and wcs* equivalents
@
text
@/*-
 * Copyright (c) 2006, 2008
 *	Thorsten Glaser <tg@@mirbsd.org>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 *-
 * The original implementations of strlcpy(3) and strlcat(3) are from
 * Todd C. Miller; the licence is reproduced below. However, this ap-
 * plies only to the strlcpy(3) portion of the code, as Thorsten Gla-
 * ser write the following strlcat(3) implementation according to the
 * spec. Both functions below have been optimised according to sugge-
 * stions from Bodo Eggert. Thorsten Glaser also has merged this code
 * with strxfrm(3) for ISO-10646-only systems and wrote the wide char
 * variants wcslcat(3), wcslcpy(3), and wcsxfrm(3) (see wcslfun.c).
 */

#ifdef STRXFRM
#undef HAVE_STRLCPY
#undef HAVE_STRLCAT
#define HAVE_STRLCPY	0
#define HAVE_STRLCAT	1
#define strlcpy		strxfrm
#endif

#include <sys/types.h>
#if defined(_KERNEL) || defined(_STANDALONE)
#include <lib/libkern/libkern.h>
#undef HAVE_STRLCPY
#undef HAVE_STRLCAT
#else
#include <stddef.h>	/* for size_t in user space (SUSv3) */
#if defined(HAVE_CONFIG_H) && (HAVE_CONFIG_H != 0)
/* usually when packaged with third-party software */
#ifdef CONFIG_H_FILENAME
#include CONFIG_H_FILENAME
#else
#include "config.h"
#endif
#endif
/* do not include <string.h> to prevent redefinition warnings */
extern size_t strlen(const char *);
#endif

#ifndef __RCSID
#undef __IDSTRING
#undef __IDSTRING_CONCAT
#undef __IDSTRING_EXPAND
#define __IDSTRING_CONCAT(l,p)		__LINTED__ ## l ## _ ## p
#define __IDSTRING_EXPAND(l,p)		__IDSTRING_CONCAT(l,p)
#define __IDSTRING(prefix, string)				\
	static const char __IDSTRING_EXPAND(__LINE__,prefix) []	\
	    __attribute__((used)) = "@@(""#)" #prefix ": " string
#define __RCSID(x)			__IDSTRING(rcsid,x)
#endif

#ifndef __predict_true
#define __predict_true(exp)	((exp) != 0)
#endif
#ifndef __predict_false
#define __predict_false(exp)	((exp) != 0)
#endif

#if !defined(_KERNEL) && !defined(_STANDALONE)
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.18 2008/08/01 12:26:17 tg Exp $");
#endif

/* (multibyte) string functions */
#undef NUL
#undef char_t
#define NUL		'\0'
#define char_t		char

size_t strlcat(char_t *, const char_t *, size_t);
size_t strlcpy(char_t *, const char_t *, size_t);

#if !defined(HAVE_STRLCAT) || (HAVE_STRLCAT == 0)
/*
 * Appends src to string dst of size dlen (unlike strncat, dlen is the
 * full size of dst, not space left).  At most dlen-1 characters
 * will be copied.  Always NUL terminates (unless dlen <= strlen(dst)).
 * Returns strlen(src) + MIN(dlen, strlen(initial dst)), without the
 * trailing NUL byte counted.  If retval >= dlen, truncation occurred.
 */
size_t
strlcat(char_t *dst, const char_t *src, size_t dlen)
{
	size_t n = 0, slen;

	slen = strlen(src);
	while (__predict_true(n + 1 < dlen && dst[n] != NUL))
		++n;
	if (__predict_false(dlen == 0 || dst[n] != NUL))
		return (dlen + slen);
	while (__predict_true((slen > 0) && (n < (dlen - 1)))) {
		dst[n++] = *src++;
		--slen;
	}
	dst[n] = NUL;
	return (n + slen);
}
#endif /* !HAVE_STRLCAT */

#if !defined(HAVE_STRLCPY) || (HAVE_STRLCPY == 0)
/* $OpenBSD: strlcpy.c,v 1.11 2006/05/05 15:27:38 millert Exp $ */

/*-
 * Copyright (c) 1998 Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/*
 * Copy src to string dst of size siz.  At most siz-1 characters
 * will be copied.  Always NUL terminates (unless siz == 0).
 * Returns strlen(src); if retval >= siz, truncation occurred.
 */
size_t
strlcpy(char_t *dst, const char_t *src, size_t siz)
{
	const char_t *s = src;

	if (__predict_false(siz == 0))
		goto traverse_src;

	/* copy as many chars as will fit */
	while (--siz && (*dst++ = *s++))
		;

	/* not enough room in dst */
	if (__predict_false(siz == 0)) {
		/* safe to NUL-terminate dst since we copied <= siz-1 chars */
		*dst = NUL;
 traverse_src:
		/* traverse rest of src */
		while (*s++)
			;
	}

	/* count does not include NUL */
	return (s - src - 1);
}
#endif /* !HAVE_STRLCPY */
@


1.18
log
@revert, this caused issues on native MirBSD
@
text
@d77 1
a77 1
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.17 2008/07/28 00:05:51 tg Stab $");
@


1.17
log
@erm well, this one does work on the Macintosh
the bug might even affect TNF or so
@
text
@d57 1
a57 2
#ifndef __IDSTRING_CONCAT
#undef __RCSID
d77 1
a77 1
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.16 2008/07/07 12:59:51 tg Stab $");
@


1.16
log
@libc strlfun.c:
• fix file description, history, etc.
• require <stddef.h> for portable size_t declaration (if ! kernel, bootloader)
• mention why we do _not_ include <string.h> (for building on obsd/mbsd)
• sync RCSID definition with that of mksh (more portable)
• fix strlcat description
• sync strlcpy obsd rcsid and licence header with obsd-current
  (their code change 1.10→1.11 was something we already did)
• use “does not”, not “doesn’t”
• make it easier to produce wcslfun.c

libc wcslfun.c:
• sync with strlfun.c (much easier now)

mksh strlcpy.c:
• sync with strlfun.c (in comments, mostly)

no binary changes
@
text
@d57 2
a58 1
#ifndef __RCSID
d78 1
a78 1
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.15 2008/05/03 22:53:43 tg Exp $");
@


1.15
log
@we don't do that many rcsids any more
@
text
@d2 2
a3 2
 * Copyright (c) 2006
 *	Thorsten Glaser <tg@@mirbsd.de>
d20 8
a27 5
 * The strlcat() code below has been written by Thorsten Glaser. Bodo
 * Eggert suggested optimising the strlcpy() code, originally written
 * by Todd C. Miller (see below), which was carried out by Th. Glaser
 * as well as merging this code with strxfrm() for ISO-10646-only sy-
 * stems and writing wcslcat(), wcslcpy() and wcsxfrm() equivalents.
d44 1
d53 1
a60 7
#if defined(__ELF__) && defined(__GNUC__)
#define __IDSTRING(prefix, string)				\
	__asm__(".section .comment"				\
	"\n	.ascii	\"@@(\"\"#)" #prefix ": \""		\
	"\n	.asciz	\"" string "\""				\
	"\n	.previous")
#else
d66 1
a66 2
#endif
#define __RCSID(x)		__IDSTRING(rcsid,x)
d77 1
a77 1
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.14 2007/01/07 02:11:40 tg Exp $");
d80 8
a87 2
size_t strlcat(char *, const char *, size_t);
size_t strlcpy(char *, const char *, size_t);
d91 5
a95 5
 * Appends src to string dst of size siz (unlike strncat, siz is the
 * full size of dst, not space left).  At most siz-1 characters
 * will be copied.  Always NUL terminates (unless siz <= strlen(dst)).
 * Returns strlen(src) + MIN(siz, strlen(initial dst)).
 * If retval >= siz, truncation occurred.
d98 1
a98 1
strlcat(char *dst, const char *src, size_t dlen)
d103 1
a103 1
	while (__predict_true(n + 1 < dlen && dst[n] != '\0'))
d105 1
a105 1
	if (__predict_false(dlen == 0 || dst[n] != '\0'))
d111 1
a111 1
	dst[n] = '\0';
d117 1
a117 1
/* $OpenBSD: strlcpy.c,v 1.10 2005/08/08 08:05:37 espie Exp $ */
d125 8
d141 1
a141 1
strlcpy(char *dst, const char *src, size_t siz)
d143 1
a143 1
	const char *s = src;
d155 1
a155 1
		*dst = '\0';
d162 1
a162 1
	/* count doesn't include NUL */
@


1.14
log
@enhance comments
@
text
@a0 2
/* $MirOS: src/lib/libc/string/strlfun.c,v 1.13 2007/01/07 02:09:49 tg Exp $ */

d80 1
a80 1
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.13 2007/01/07 02:09:49 tg Exp $");
d113 1
a123 1
#if !defined(HAVE_STRLCPY) || (HAVE_STRLCPY == 0)
@


1.13
log
@sync licence template
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.20 2006/12/11 21:04:56 tg Rel $ */
d25 2
a26 1
 * as well as writing wcslcat() and wcslcpy() equivalents.
d82 1
a82 1
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.12 2006/11/21 02:38:32 tg Exp $");
@


1.12
log
@don't pack the kernel overly with RCS IDs or SCCS IDs,
should save a few bytes on the floppies
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libc/string/strlfun.c,v 1.11 2006/11/21 01:33:47 tg Exp $ */
d7 5
a11 6
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
d13 8
a20 8
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a defect.
d81 1
a81 1
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.11 2006/11/21 01:33:47 tg Exp $");
@


1.11
log
@*d'oh* @@openbsd

"(n == 0) ? strlen(src) : strlcpy(dst, src, n)" <=> "strlcpy(dst, src, n)"
do they read their own specs at all?
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libc/string/strlfun.c,v 1.10 2006/11/08 23:18:04 tg Exp $ */
d81 3
a83 1
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.10 2006/11/08 23:18:04 tg Exp $");
@


1.10
log
@the "- 0" syntax doesn't work with crazy warnings
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libc/string/strlfun.c,v 1.9 2006/11/08 23:01:50 tg Exp $ */
d29 8
d81 1
a81 1
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.9 2006/11/08 23:01:50 tg Exp $");
@


1.9
log
@use the (x - 0) syntax for testing
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libc/string/strlfun.c,v 1.8 2006/11/08 22:48:59 tg Exp $ */
d35 1
a35 1
#if (HAVE_CONFIG_H - 0)
d73 1
a73 1
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.8 2006/11/08 22:48:59 tg Exp $");
d78 1
a78 1
#if !(HAVE_STRLCAT - 0)
d115 1
a115 1
#if !(HAVE_STRLCPY - 0)
@


1.8
log
@Originally I only wanted to enhance mksh… now it led to this:
* implement CONFIG_H_FILENAME option which can be used to pull anything
  other than "config.h" (tested)
* sync __RCSID() with <sys/cdefs.h>, here too
* sort the functions in the file alphabetically
* the ISC licence on this file did not request the disclaimer to
  be retained in all copies, so nuke it
* KNF the strlcpy() function
* clean up the #include, definition and macro entry order
* completely rewrite (MirOS licenced) the strlcat() implementation,
  fixing a few bugs in the version we shipped for years (shame on me)
  this was tested with the stuff included below
* be a little more descriptive in the comment at the begin of the file

begin 644 strlcpy_test.shar.gz
M'XL(```````"`^U:;7?:5A+^C'_%!+<%;/F%)$T3$WM+;-GF+(8LX-;9ILN1
MI0NH"(GJ2GY)F_^^SXQ>0-A.G)SN.?NA.0E&HYGGSIV9.R_76:?!Q-6$OQ;I
MB?(\LD)[XEZI;:*^=:7(C<CU\7+D>LJ@@4,T"$"W_-IJX_I@@NU2@@(U=HZ18SB
MN3YX+-_!H_(I]N>6/66$RUM2?J1"%BGKB8"5L4(GB"``AIEU"Q`[5%:DR'%#
M94=!Z"K=$%8MF$MDNG:AZ:6BX-I7#L/?!C$S`63"6CMJ9,5>1',5SERMW<#7
MVVOK>"N[3;=(=N!'ENOK/7Y5TE'HV5:T;:??1[&??_?5=?X]4CHJ/LRF`%#V
M)*`;VJ(%CH9N%;WSGXN=G0H=Y'1Z_9HJ9N=H*QAMY<3*VL7.1NF;[ESY;_I'
M>PL4XXKJV_5G]'1W]_N=W9?X2[LO]W:_WWOV`RD]=Q69-W/ZIK2QLW;!&&L7
MM$&'P?PV=,>3B*IVC>JO7KVD0>`X=+A-9S"="NDU/V\G#S_:01QB)Q8V',P.
M&$%0WN;6HRB@@6,-7-H`-F@@6..[HU4K=`5?<RAN,D"'0PBJZM4!$B@@P-%D.9Q
M.`^T@@M^B"8'./X,XHI%2''L3%2HX<1Q:B!+'H'D87+F.XCBR(@@XFLBX1=P)E
MYUOS@@\BU51IO0%DX.W\UGRLKE`!&O$`2L;.=;V]P:E*_>SSXN=DSJ=6GM[WN
M3ZTC\XC*S3Z>R]3L'`E3\WQPVNW14:M_V&ZVSOK4;+<)4KUF9]`R^P+V<VMP
M2CWSI-F#3!=B`%R`=P[;YT>MSHE(ML[>MEM89H%`W6,!.3-[AZ<@@-=^TVJW!
M.U'@@N#7HF/W^-D"HTR7S)[,SH/XI`RWI]L:D=JOYIFW2<;<G6,W..^J_-0];
MS;8!U7OFX<``1O8-,H?=3M_\USGPP$-'S;/F":O2$]'T,=G;:7/0[V+E'G;8
M/V\/>"?'O>X9M;M]5I[.^R86:0Z:+`X[0NF^`3D3*O98\V8G4>IPT.IV6`*+
M#WI-UJ1CGK1;)V;GT&3AKD@@,NCTPGO=3`8.:O5:?5^V>#S)C=048.!TS0147
ML$V@@C>AA]F",LZ8@@'Q==(E$@@)V;=]6TO=A2]UK=Z)[J=(T0F!P5ZQ(E+B/D!
M:R*R?`?1'MI\-A(6<G1$P8BT^T'Q!U5CWW.GBE_[.,R&$!&IB&A!&<4(2^&&
M%(0-#ES22)N*/#6*:LB1363'`+A@@VZJ3/;%"RT8JU0*0Y4$);8>YO6OK5E/G
MO$T1'P<?"56+'DIK6?[UON06Y5>Q8*TFAJ">BN+0U]D;[*I&FW36ZE0A8F1D
MUW<CU_)H2;`U0DV(KD`\V"?AC<*8]\JG,+#M.`RA5VILWNDPPL\DMU5Y,[0A
M^T8JQAX3`E872X&7?]36+OY8NRBES+3/RS>8L"P",L28G`KZ)/HL41QLH<$N
M+.ULT+&;5"G4)2<UOB02R_DMUERPV&SL`D)F(R?P*Q&-`YI;>,DBO)W2]03%
MB:K^UA8]V:==^NX[5A!?*^]W*U"[5'(V-UD#7IH51W5(E4_58T*NECL"%NT#
M261#\4E59#=SS]1JC<7*V'>V&K&-4@@C0ZBFAM`$5L-:&;L@@C=)4O'_E#)]KQ
M=S$L`R6J%->N:BYKB(E:@@VV':N&S36`A#M?LG'#,L5D^KJW6MF)M3.KJW=HH
M]-7:*$2IC?3-F1MV^WNLR([G7O(_>R<Y>#LYJU3+'[A8OI!B6:?ZL[WG];WG
MKR@@:)Y52E&2\8JV=WV:U=O=SM?8!A"^HUI15ZZU[RC5DGQN"()\OT+0$H8[@@
MBA//TER[H_&/,S>\U,ZVHPZ26C:Q_*GF5/0F<`(RQV,51E*"@@WGDHBPF)Q)-
M6Z3_[A`>W2%,6$G/"ZXEN[O:]BQW!MM8G@@YH)IE"<0)$%PE="BA[.4H;"_F:
M73$:(7&+MM=!.,W[#-:/BQ<7M[0I>,=)";:A*1*5(3#J9AXBB1ML'7<V]URV
M`ZS.<#/KQIW%,_`@@3-*V-XJ2UAA;]%S;NO02ZWC6M9%;=V;AE1O$F`!\D03V
M.`Q0*GPU]MRQ\FW5X'WY`:DK9N!.76#23;&+R8H!%[(PM]3B:WR':3!1.&#E
MQ3-O`RWIY`6&I;"!D!QK9HV5;"YYG5*P)5O-(W&XXD&$T[[Z/6;-Q$8"DXJH
M,!0SD[9<AZV@@X6FVKNR.PP4ARN\E&M@@'!GF\VR!,M!%5$"$QSQRAJ]GM[%6H
MC;I*;#)(NY%.8IU-0LBYEG/E<D(+1@@+#'D$P:_?2]=SH5A2*[4FV(ZBH;EP^
MT.D6>%R!^LL]R8AI'%35X3_-7L=LU^C//Q>T_@@"M8;/=[9@@H%>MY"GZ=YL6I
M"OWL9]+,8!B#,)TV?S(AW&L?OGUW'[4Y`%5Y6@@GJ*'^)+NNX=3(\Y?0?ZQA1
M#H/PC,<3'O;D).<69@@V=K;D58M/Y*><MK5.N8QD.'+EHI\I,AE?<46$+Q2XL
MM8:H.1SV#ONM(Q#B]+EU!*W1%MY#8I63[=QY8UZ\A?56K#PTV\?#88UK^()V
MTCD_!!&L"6T)I8K#.')OC+3UJZ&VEMZC<@@Z'EIX-A]7RMH9+.=-PQISAZ)0S
MEO)[O[1M:=MU2^_+/U;?E]^7UVME6D\0J;Q'[\OE%=8/8"UG;699WB]Q0/**
M3W&YMG#?'8U3BU0]8PYMA\-VJS,PCX9#6E\GCS_DV_Q>T<1DN>A]D%]B)!VA
M'-G+3=_=M41!<S@@T$HP:_?*KR!+^P,A16E)@@ZBK.HE.KH8&!-<NKMLRLQI9)
M@@RW74^*I>E/84S6TM>L8-[6%P'((`MAQ[6@@XLE;,7'A11;*NE:KR0WK#`EJV
M</FO:FG*W!0N\+/>N=!F%WOLK,&N-9:V5RJFAZ6[A$_/.?^#*46ZX`=GDP8G
MW:^<.^:W7SAWW#MFI.WZJMMSU:6#'P=<GD/K"H90PUQP)VE1R-*HIJ@@LC*WY
M2>PT<J/"=+&UQ:!(2U76.&WF-S>3%7)`;L25'\3C"85!,..BQ4X2H$\KFLP)
M@@-#62+&/X96MW"N"@@C*(2G6=.5!&R-S/.EFDQ-HM9HC"MO?2%3(:7)<&$*(J
MD<X'&NQ,!I5T,,G,E4T</(>M#ASIM)*/*?BL<UQ_S,X$`>+)<FPORNQ*V'/!
M^'O"_W^9\//!W5@@>YQ.@@3-JC_4)FD)!9&LR3@@X-CDPW*V;F18_%D<]-/68H,
M>4@@MH%-LAU?<VLIF>0GL`.,&'.$MV]W@@IGP[=:J$Z?+,G]P*T"8HWL/IY`EV
M4-3'\6H/L_MT`+A$0!;S$O7\>':II"].#BS"61*0:,5M>;5!!5OMBXMP%!N4
MFVMQ0R"8=[-$X2@@F>CYT`IL#YEX=\XO7!,F5^]UK`J&O7A,(L?+`I=U7!"5?
M?*11N72?M(OW^6V-3NYTBK&71=[",S@@L[)A-JM-K@@94.4T>_^+\6(PZ1V'C`
MK\GU$=\P\0QPC^S"ZLE=$6O_L#954?T`R5\\[D.Q1)+S9BVK"++.YN:O>3#(
MO1&J46(!N35*=<FS?J[(LA:%^Z#$JP5'I[]/N>OIY,6JJQ/J0[Y>)CIN<)>&
M%BL=+++6K=CT+.AIN%"`.G"IG6'Z_,7M5;Y\.;\E*N=C20YZ=]V9&P;>TK)%
M'#DQC\6!U?\B]<5_]RY[%6#D=F;S3P+F!ZRZ4?OTRH806($,V$X%D@@0HWQ%_
MP]0]O]1?_&H((;%;X1E:\W.C8!X5#3''5N78^Y<UM!?T1RF;4$HS-0-'=6D%
M@@\]__46MD;'(92L$P<J_%2WR2D8PA`$2JY")CH]"S%@@_"XA-/A906.\"?J0T
M8?"XLK"4/5\82A+CPE3)*NSU>S<OW,;J"3*HTJUD>\AD5[>9BA8/`23/[I,L
M[&<AN13VD.SDDG.DBVA4Q>B,P8E&(R_6$U1Z)X@@C,=U]QN`H7+M8"D,[K0]L
MX@@V;FZ.*59%?`=C<@@54^)+\!F,<1\X-%,G(RG"_(E6$E+91+2V05:J4^Y8?'
M6SI&HT>=(W*7>RP8*CT.)1B"IDN]5GB55+<TM,3G:4S)W)X,4$FIS,AXD5GT
M6SO]+P'[E;*!11M9@@S'E\MF@@*6I-_46#-C>GM=2'=M5!L9@@*:P93814!\3AY
M[M#O(G`8['^[^_1#3-8(G8IHE'5/X17PQ'@@PLNPF>_-5VH97Z4K2&N]_ZR"R
M#%`1C5@@)H>'5Z!_H`/90<V5+Q9!+_0^TM8N9Y?I5CH2L_4C35!F`B7!Z'!>$
MG,6ZM$%\]AFN.T`XYJ`]_3S6%S(^>RSC\\<R?O]8QA>/9?SAL8POT_A89L6;
M\<3];>KA??UI06CF!_/?P_+BY#PD5O\ZL=VO$GOU55(O/R6UU/3MWNGVTM;N
M;KLWFS[4[\VF]S9\LRDZOK>][LE^*?]_-VL7G>Y9LP/*K=)\JW;8:_[[W7[R
@@M)TW??QKLGD8C(%QL'87=TW=N-':VG\!]_"/Q0DE````
`
end
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.14 2006/08/09 19:35:23 tg Rel $ */
d35 2
a36 1
#ifdef HAVE_CONFIG_H	/* usually when packaged with third-party software */
d73 1
a73 1
__RCSID("$MirOS$");
d78 1
a78 1
#ifndef	HAVE_STRLCAT
d115 1
a115 1
#ifndef	HAVE_STRLCPY
@


1.7
log
@bytes -> chars
@
text
@d1 1
a1 3
/* $MirOS: src/lib/libc/string/strlfun.c,v 1.6 2006/08/01 13:36:15 tg Exp $ */
/* $OpenBSD: strlcpy.c,v 1.10 2005/08/08 08:05:37 espie Exp $ */
/* $OpenBSD: strlcat.c,v 1.13 2005/08/08 08:05:37 espie Exp $ */
d4 2
a5 3
 * Copyright (c) 2004, 2005, 2006 Thorsten Glaser <tg@@mirbsd.de>
 * Thanks to Bodo Eggert for optimisation hints
 * Copyright (c) 1998 Todd C. Miller <Todd.Miller@@courtesan.com>
d7 6
a12 3
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
d14 13
a26 7
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
d29 1
d31 7
a37 3
# include <lib/libkern/libkern.h>
# undef HAVE_STRLCPY
# undef HAVE_STRLCAT
d39 3
a41 5
# ifdef HAVE_CONFIG_H	/* usually when packaged with third-party software */
#  include "config.h"
# endif
# include <sys/types.h>

d43 1
d46 17
a62 1
#define __RCSID(x)	static const char __rcsid[] = (x)
d65 3
d72 1
a72 2
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.6 2006/08/01 13:36:15 tg Exp $");
#endif
d77 37
d125 1
a125 1
	if (__predict_false(!siz))
d129 1
a129 1
	for (; --siz && (*dst++ = *s++); )
d133 2
a134 2
	if (__predict_false(!siz)) {
		/* safe to NUL-terminate dst since copied <= siz-1 chars */
a145 36

#ifndef	HAVE_STRLCAT
/*
 * Appends src to string dst of size siz (unlike strncat, siz is the
 * full size of dst, not space left).  At most siz-1 characters
 * will be copied.  Always NUL terminates (unless siz <= strlen(dst)).
 * Returns strlen(src) + MIN(siz, strlen(initial dst)).
 * If retval >= siz, truncation occurred.
 */
size_t
strlcat(char *dst, const char *src, size_t siz)
{
	char *d = dst;
	size_t dl, n = siz;
	const size_t sl = strlen(src);

	while (n-- && (*d++ != '\0'))
		;
	if (!++n && (*d != '\0'))
		return (strlen(src));

	dl = --d - dst;		/* original strlen(dst), max. siz-1 */
	n = siz - dl;
	dl += sl;

	if (__predict_false(!n--))
		return (dl);

	if (__predict_false(n > sl))
		n = sl;		/* number of chars to copy */
	for (; n-- && (*d++ = *src++); )
		;
	*d = '\0';		/* NUL-terminate dst */
	return (dl);
}
#endif /* !HAVE_STRLCAT */
@


1.6
log
@KNF, clean up
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libc/string/strlfun.c,v 1.5 2005/09/19 19:01:11 tg Exp $ */
d43 1
a43 1
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.5 2005/09/19 19:01:11 tg Exp $");
d63 1
a63 1
	/* copy as many bytes as will fit */
@


1.5
log
@* sync with OpenBSD
* fix #undef madness
* LIBC_SCCS?
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libc/string/strlfun.c,v 1.4 2005/05/28 20:59:09 tg Exp $ */
d6 1
a6 1
 * Copyright (c) 2004, 2005 Thorsten "mirabile" Glaser <tg@@66h.42h.de>
d23 9
a31 6
#if !defined(_KERNEL) && !defined(_STANDALONE)
#ifdef HAVE_CONFIG_H
/* usually when packaged with third-party software */
#include "config.h"
#endif
#include <sys/types.h>
d39 5
a43 5
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.4 2005/05/28 20:59:09 tg Exp $");
#else
#include <lib/libkern/libkern.h>
#undef HAVE_STRLCPY
#undef HAVE_STRLCAT
d60 2
a61 1
	if (!siz) goto traverse_src;
d63 2
a64 2
	/* Copy as many bytes as will fit */
	for (; --siz && (*dst++ = *s++); /* nothing */)
d67 6
a72 5
	/* Not enough room in dst, add NUL and traverse rest of src */
	if (!siz) {
		/* Save, since we've copied at max. (siz-1) characters */
		*dst = '\0';	/* NUL-terminate dst */
traverse_src:
d77 2
a78 1
	return (s - src - 1);	/* count does not include NUL */
d100 1
a100 1
		return strlen(src);
d106 2
a107 2
	if (!n--)
		return dl;
d109 3
a111 3
	if (n > sl)
		n = sl;		/* number of octets to copy */
	for (; n-- && (*d++ = *src++); /* nothing */)
d114 1
a114 1
	return dl;
@


1.4
log
@missing extern decl of strlen()
@
text
@d1 3
a3 3
/**	$MirOS: src/lib/libc/string/strlfun.c,v 1.3 2005/05/23 16:42:03 tg Exp $ */
/*	$OpenBSD: strlcpy.c,v 1.8 2003/06/17 21:56:24 millert Exp $ */
/*	$OpenBSD: strlcat.c,v 1.11 2003/06/17 21:56:24 millert Exp $ */
d7 1
a7 1
 * Some hints for optimisation from Bodo Eggert (via d.a.s.r)
a26 1
#define LIBC_SCCS
d36 1
a36 1
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.3 2005/05/23 16:42:03 tg Exp $");
a38 4
#undef HAVE_CONFIG_H
#endif

#ifndef HAVE_CONFIG_H
@


1.3
log
@instead of including a probably bogus (on glibc systems)
string.h be rather self-hosted regarding protos
@
text
@d1 1
a1 1
/**	$MirOS: src/lib/libc/string/strlfun.c,v 1.2 2005/03/14 22:34:13 tg Exp $ */
d31 2
d37 1
a37 1
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.2 2005/03/14 22:34:13 tg Exp $");
@


1.2
log
@adjust for using in-kernel
@
text
@d1 1
a1 1
/**	$MirOS: src/lib/libc/string/strlfun.c,v 1.1 2005/02/23 20:54:33 tg Exp $ */
a29 1
#include <string.h>
d35 1
a35 1
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.1 2005/02/23 20:54:33 tg Exp $");
d46 3
@


1.1
log
@add strlcpy(3) and strlcat(3) implementation
@
text
@d1 1
a1 1
/**	$MirOS$ */
d6 1
a6 1
 * Copyright (c) 2004 Thorsten "mirabile" Glaser <tg@@66h.42h.de>
d23 1
a23 3
#include <sys/types.h>
#include <string.h>

d25 1
a25 1
/* packaged with third-party software */
d28 3
a30 5
#else /* ! def HAVE_CONFIG_H */
/* integrated into MirOS C library */
#undef HAVE_STRLCPY
#undef HAVE_STRLCAT
#endif /* ! def HAVE_CONFIG_H */
d36 5
a40 1
__RCSID("$MirOS$");
d42 4
@

