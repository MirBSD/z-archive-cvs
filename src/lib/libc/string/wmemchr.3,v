head	1.6;
access;
symbols
	MIRBSD_10:1.3.0.2
	MIRBSD_10_BASE:1.3
	MIRBSD_9_BASE:1.2
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200509212000:1.1.1.1
	cvs-200507211800:1.1.1.1
	cvs-200504291700:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.6
date	2014.11.30.21.50.24;	author tg;	state Exp;
branches;
next	1.5;
commitid	100547B90F370266570;

1.5
date	2014.02.09.23.19.58;	author tg;	state Exp;
branches;
next	1.4;
commitid	10052F80D3270BFA1BC;

1.4
date	2014.02.09.22.35.56;	author tg;	state Exp;
branches;
next	1.3;
commitid	10052F802DB25EB293D;

1.3
date	2007.06.16.21.05.15;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004674508F681EFD66;

1.2
date	2006.06.01.21.54.48;	author tg;	state Exp;
branches;
next	1.1;
commitid	100447F6214161B5202;

1.1
date	2005.04.29.17.05.23;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.04.29.17.05.23;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@there is no evidence of a wcsndup(3) in the wild, plus it would now
need a wcsnlen(3), which also does not exist, even here, so nuke it
@
text
@.\"	$MirOS: src/lib/libc/string/wmemchr.3,v 1.5 2014/02/09 23:19:58 tg Exp $
.\"	$OpenBSD: wmemchr.3,v 1.2 2005/04/13 20:42:48 jmc Exp $
.\"
.\"	$NetBSD: wmemchr.3,v 1.9 2003/09/08 17:54:33 wiz Exp $
.\"
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     from: @@(#)strcpy.3	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: February 9 2014 $
.Dt WMEMCHR 3
.Os
.Sh NAME
.Nm wcscasecmp ,
.Nm wcscat ,
.Nm wcschr ,
.Nm wcscmp ,
.Nm wcscoll ,
.Nm wcscpy ,
.Nm wcscspn ,
.Nm wcsdup ,
.Nm wcsftime ,
.Nm wcslcat ,
.Nm wcslcpy ,
.Nm wcslen ,
.Nm wcsncasecmp ,
.Nm wcsncat ,
.Nm wcsncmp ,
.Nm wcsncpy ,
.\"Nm wcsndup ,
.Nm wcspbrk ,
.Nm wcsrchr ,
.Nm wcsspn ,
.Nm wcsstr ,
.Nm wcstod ,
.Nm wcstof ,
.Nm wcstol ,
.Nm wcstoll ,
.Nm wcstoul ,
.Nm wcstoull ,
.Nm wcswcs ,
.Nm wcsxfrm ,
.Nm wmemchr ,
.Nm wmemcmp ,
.Nm wmemcpy ,
.Nm wmemmove ,
.Nm wmemset
.Nd wide character string manipulation operations
.Sh SYNOPSIS
.In wchar.h
.Ft int
.Fn wcscasecmp "const wchar_t *" "const wchar_t *"
.Ft wchar_t *
.Fn wcscat "wchar_t *s1" "const wchar_t *s2"
.Ft wchar_t *
.Fn wcschr "const wchar_t *s" "wchar_t c"
.Ft int
.Fn wcscmp "const wchar_t *s1" "const wchar_t *s2"
.Ft int
.Fn wcscoll "const wchar_t *" "const wchar_t *"
.Ft wchar_t *
.Fn wcscpy "wchar_t *s1" "const wchar_t *s2"
.Ft size_t
.Fn wcscspn "const wchar_t *s1" "const wchar_t *s2"
.Ft wchar_t *
.Fn wcsdup "const wchar_t *"
.Ft size_t
.Fn wcsftime "wchar_t *" "size_t" "const wchar_t *" "const struct tm *"
.Ft size_t
.Fn wcslcat "wchar_t *s1" "const wchar_t *s2" "size_t n"
.Ft size_t
.Fn wcslcpy "wchar_t *s1" "const wchar_t *s2" "size_t n"
.Ft size_t
.Fn wcslen "const wchar_t *s"
.Ft int
.Fn wcsncasecmp "const wchar_t *" "const wchar_t *" "size_t"
.Ft wchar_t *
.Fn wcsncat "wchar_t *s1" "const wchar_t *s2" "size_t n"
.Ft int
.Fn wcsncmp "const wchar_t *s1" "const wchar_t * s2" "size_t n"
.Ft wchar_t *
.Fn wcsncpy "wchar_t *s1" "const wchar_t *s2" "size_t n"
.\"Ft wchar_t *
.\"Fn wcsndup "const wchar_t *" "size_t"
.Ft wchar_t *
.Fn wcspbrk "const wchar_t *s1" "const wchar_t *s2"
.Ft wchar_t *
.Fn wcsrchr "const wchar_t *s" "wchar_t c"
.Ft size_t
.Fn wcsspn "const wchar_t *s1" "const wchar_t *s2"
.Ft wchar_t *
.Fn wcsstr "const wchar_t *s1" "const wchar_t *s2"
.Ft double
.Fn wcstod "const wchar_t *" "wchar_t **"
.Ft float
.Fn wcstof "const wchar_t *" "wchar_t **"
.Ft long
.Fn wcstol "const wchar_t *" "wchar_t **" "int"
.Ft long long
.Fn wcstoll "const wchar_t *" "wchar_t **" "int"
.Ft unsigned long
.Fn wcstoul "const wchar_t *" "wchar_t **" "int"
.Ft unsigned long long
.Fn wcstoull "const wchar_t *" "wchar_t **" "int"
.Ft wchar_t *
.Fn wcswcs "const wchar_t *" "const wchar_t *"
.Ft size_t
.Fn wcsxfrm "wchar_t *" "const wchar_t *" "size_t"
.Ft wchar_t *
.Fn wmemchr "const wchar_t *s" "wchar_t c" "size_t n"
.Ft int
.Fn wmemcmp "const wchar_t *s1" "const wchar_t *s2" "size_t n"
.Ft wchar_t *
.Fn wmemcpy "wchar_t *s1" "const wchar_t *s2" "size_t n"
.Ft wchar_t *
.Fn wmemmove "wchar_t *s1" "const wchar_t *s2" "size_t n"
.Ft wchar_t *
.Fn wmemset "wchar_t *s" "wchar_t c" "size_t n"
.Sh DESCRIPTION
These functions implement string manipulation operations over wide character
strings.
For a detailed description, refer to documents for the respective single-byte
counterpart, such as
.Xr memchr 3 .
.Sh SEE ALSO
.Xr memchr 3 ,
.Xr memcmp 3 ,
.Xr memcpy 3 ,
.Xr memmove 3 ,
.Xr memset 3 ,
.Xr strcasecmp 3 ,
.Xr strcat 3 ,
.Xr strchr 3 ,
.Xr strcmp 3 ,
.Xr strcoll 3 ,
.Xr strcpy 3 ,
.Xr strcspn 3 ,
.Xr strdup 3 ,
.Xr strftime 3 ,
.Xr strlcat 3 ,
.Xr strlcpy 3 ,
.Xr strlen 3 ,
.Xr strncasecmp 3 ,
.Xr strncat 3 ,
.Xr strncmp 3 ,
.Xr strncpy 3 ,
.Xr strndup 3 ,
.Xr strpbrk 3 ,
.Xr strrchr 3 ,
.Xr strspn 3 ,
.Xr strstr 3 ,
.Xr strtod 3 ,
.Xr strtol 3 ,
.Xr strtoll 3 ,
.Xr strtoul 3 ,
.Xr strtoull 3 ,
.Xr strxfrm 3
.Sh STANDARDS
These functions conform to
.St -isoC-99
and were first introduced in
.St -isoC-amd1 ,
with the exception of
.Fn wcslcat
and
.Fn wcslcpy ,
which are BSD extensions.
.\", and
.\".Fn wcsndup ,
.\"which is a GNU extension.
.Pp
.Fn wcswcs
is a historic name for
.Fn wcsstr ,
programmers are urged to not use it in new code.
.Pp
.Fn wcstof
is a less-precise version of
.Fn wcstod .
@


1.5
log
@“long double” in MirBSD (i386 and sparc, both) is currently just plain wrong and will lead to bad results; fix the code if needed
@
text
@d1 1
a1 1
.\"	$MirOS: src/lib/libc/string/wmemchr.3,v 1.4 2014/02/09 22:35:56 tg Exp $
d59 1
a59 1
.Nm wcsndup ,
d112 2
a113 2
.Ft wchar_t *
.Fn wcsndup "const wchar_t *" "size_t"
d196 4
a199 3
which are BSD extensions, and
.Fn wcsndup ,
which is a GNU extension.
@


1.4
log
@nuke the restrict qualifiers; C99 says this makes no externally visible difference and is only a compiler hint and a limitation to the interface implementor
@
text
@d1 1
a1 1
.\"	$MirOS: src/lib/libc/string/wmemchr.3,v 1.3 2007/06/16 21:05:15 tg Exp $
d39 1
a39 1
.Dd $Mdocdate: June 16 2007 $
a66 1
.Nm wcstold ,
a127 2
.Ft long double
.Fn wcstold "const wchar_t *" "wchar_t **"
d206 2
a207 5
and
.Fn wcstold
are less- and more-precise versions of
.Fn wcstod ,
respectively.
@


1.3
log
@optimise strndup(3) and introduce wcsndup(3), agreed bsiegert@@
@
text
@d1 1
a1 1
.\"	$MirOS: src/lib/libc/string/wmemchr.3,v 1.2 2006/06/01 21:54:48 tg Exp $
d39 1
a39 1
.Dd $Mdocdate$
d84 1
a84 1
.Fn wcscat "wchar_t * restrict s1" "const wchar_t * restrict s2"
d92 1
a92 1
.Fn wcscpy "wchar_t * restrict s1" "const wchar_t * restrict s2"
d98 1
a98 1
.Fn wcsftime "wchar_t * restrict" "size_t" "const wchar_t * restrict" "const struct tm * restrict"
d108 1
a108 1
.Fn wcsncat "wchar_t * restrict s1" "const wchar_t * restrict s2" "size_t n"
d112 1
a112 1
.Fn wcsncpy "wchar_t * restrict s1" "const wchar_t * restrict s2" "size_t n"
d124 1
a124 1
.Fn wcstod "const wchar_t *__restrict__" "wchar_t **__restrict__"
d126 1
a126 1
.Fn wcstof "const wchar_t *__restrict__" "wchar_t **__restrict__"
d128 1
a128 1
.Fn wcstol "const wchar_t *__restrict__" "wchar_t **__restrict__" "int"
d130 1
a130 1
.Fn wcstold "const wchar_t *__restrict__" "wchar_t **__restrict__"
d132 1
a132 1
.Fn wcstoll "const wchar_t *__restrict__" "wchar_t **__restrict__" "int"
d134 1
a134 1
.Fn wcstoul "const wchar_t *__restrict__" "wchar_t **__restrict__" "int"
d136 1
a136 1
.Fn wcstoull "const wchar_t *__restrict__" "wchar_t **__restrict__" "int"
d140 1
a140 1
.Fn wcsxfrm "wchar_t * restrict" "const wchar_t * restrict" "size_t"
d146 1
a146 1
.Fn wmemcpy "wchar_t * restrict s1" "const wchar_t * restrict s2" "size_t n"
@


1.2
log
@move the wide string functions wcs[n]casecmp, wcscoll and wcsdup,
as well as the enhanced wmemchr(3) manual page, from libhaible into libc
(version bump to come, for all future commits)
@
text
@d1 1
a1 1
.\"	$MirOS: contrib/code/libhaible/string/wmemchr.3,v 1.3 2006/05/31 00:41:05 tg Exp $
d39 1
a39 1
.Dd May 30, 2006
d59 1
d114 2
d179 1
d199 3
a201 1
which are extensions.
@


1.1
log
@Initial revision
@
text
@d1 1
d39 1
a39 1
.Dd December 22, 2000
d43 1
a43 5
.Nm wmemchr ,
.Nm wmemcmp ,
.Nm wmemcpy ,
.Nm wmemmove ,
.Nm wmemset ,
d47 1
d50 2
d55 1
d62 15
a76 1
.Nm wcsstr
a79 2
.Ft wchar_t *
.Fn wmemchr "const wchar_t *s" "wchar_t c" "size_t n"
d81 1
a81 7
.Fn wmemcmp "const wchar_t *s1" "const wchar_t *s2" "size_t n"
.Ft wchar_t *
.Fn wmemcpy "wchar_t * restrict s1" "const wchar_t * restrict s2" "size_t n"
.Ft wchar_t *
.Fn wmemmove "wchar_t *s1" "const wchar_t *s2" "size_t n"
.Ft wchar_t *
.Fn wmemset "wchar_t *s" "wchar_t c" "size_t n"
d88 2
d94 4
d104 2
d120 28
d160 1
d164 1
d167 2
d172 1
d179 7
a185 1
.Xr strstr 3
d196 12
@


1.1.1.1
log
@improve my Frankenstein OS (*wink* you know who you are) further
sans wchar_t of course

this is the essence of reading >1200 commit messages which suck
due to not having the new format of ours...
@
text
@@
