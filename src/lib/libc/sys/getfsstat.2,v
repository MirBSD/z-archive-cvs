head	1.2;
access;
symbols
	MIRBSD_10:1.1.1.2.0.4
	MIRBSD_10_BASE:1.1.1.2
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200509212000:1.1.1.2
	cvs-200507211800:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.2
date	2017.08.07.20.15.23;	author tg;	state Exp;
branches;
next	1.1;
commitid	1005988C69344442E37;

1.1
date	2005.02.05.17.25.00;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.25.00;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.20.53.17;	author tg;	state Exp;
branches;
next	;
commitid	560042e0092f571e;


desc
@@


1.2
log
@filesystem
@
text
@.\"	$OpenBSD: getfsstat.2,v 1.15 2005/05/15 18:10:50 pedro Exp $
.\"	$NetBSD: getfsstat.2,v 1.6 1995/06/29 11:40:44 cgd Exp $
.\"
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)getfsstat.2	8.1 (Berkeley) 6/9/93
.\"
.Dd June 9, 1993
.Dt GETFSSTAT 2
.Os
.Sh NAME
.Nm getfsstat
.Nd get list of all mounted filesystems
.Sh SYNOPSIS
.Fd #include <sys/param.h>
.Fd #include <sys/mount.h>
.Ft int
.Fn getfsstat "struct statfs *buf" "size_t bufsize" "int flags"
.Sh DESCRIPTION
.Fn getfsstat
returns information about all mounted filesystems.
.Fa buf
is a pointer to an array of
.Xr statfs 2
structures defined as follows:
.Bd -literal
typedef struct { int32_t val[2]; } fsid_t;

#define MFSNAMELEN   16 /* length of fs type name, including nul */
#define MNAMELEN     90	/* length of buffer for returned name */

struct statfs {
    u_int32_t  f_flags;       /* copy of mount flags */
    int32_t    f_bsize;       /* fundamental filesystem block size */
    u_int32_t  f_iosize;      /* optimal transfer block size */
    u_int32_t  f_blocks;      /* total data blocks in filesystem */
    u_int32_t  f_bfree;       /* free blocks in fs */
    int32_t    f_bavail;      /* free blocks avail to non-superuser */
    u_int32_t  f_files;       /* total file nodes in filesystem */
    u_int32_t  f_ffree;       /* free file nodes in fs */
    fsid_t     f_fsid;        /* filesystem id */
    uid_t      f_owner;       /* user that mounted the filesystem */
    u_int32_t  f_syncwrites;  /* count of sync writes since mount */
    u_int32_t  f_asyncwrites; /* count of async writes since mount */
    u_int32_t  f_ctime;       /* last mount [-u] time */
    u_int32_t  f_spare[3];    /* spare for later */
    char       f_fstypename[MFSNAMELEN]; /* fs type name */
    char       f_mntonname[MNAMELEN];    /* directory on which mounted */
    char       f_mntfromname[MNAMELEN];  /* mounted filesystem */
    union mount_info mount_info;         /* per-filesystem mount options */
};
.Ed
.Pp
The buffer is filled with an array of
.Fa statfs
structures, one for each mounted filesystem
up to the size specified by
.Fa bufsize .
.Pp
If
.Fa buf
is
.Dv NULL ,
.Fn getfsstat
returns just the number of mounted filesystems.
.Pp
Normally
.Fa flags
should be specified as
.Dv MNT_WAIT .
If
.Fa flags
is set to
.Dv MNT_NOWAIT ,
.Fn getfsstat
will return the information it has available without requesting
an update from each filesystem.
Thus, some of the information will be out of date, but
.Fn getfsstat
will not block waiting for information from a filesystem that is
unable to respond.
If no flags are provided,
.Dv MNT_WAIT
is assumed.
.Sh RETURN VALUES
Upon successful completion, the number of
.Fa statfs
structures is returned.
Otherwise, \-1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn getfsstat
fails if one or more of the following are true:
.Bl -tag -width Er
.It Bq Er EFAULT
.Fa buf
points to an invalid address.
.It Bq Er EIO
An
.Tn I/O
error occurred while reading from or writing to the filesystem.
.El
.Sh SEE ALSO
.Xr statfs 2 ,
.Xr fstab 5 ,
.Xr mount 8
.Sh HISTORY
The
.Fn getfsstat
function first appeared in
.Bx 4.4 .
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.14 2003/11/21 10:45:48 jmc Exp $
d38 1
a38 1
.Nd get list of all mounted file systems
d46 1
a46 1
returns information about all mounted file systems.
d59 1
a59 1
    int32_t    f_bsize;       /* fundamental file system block size */
d61 1
a61 1
    u_int32_t  f_blocks;      /* total data blocks in file system */
d64 1
a64 1
    u_int32_t  f_files;       /* total file nodes in file system */
d66 2
a67 2
    fsid_t     f_fsid;        /* file system id */
    uid_t      f_owner;       /* user that mounted the file system */
d74 1
a74 1
    char       f_mntfromname[MNAMELEN];  /* mounted file system */
d81 1
a81 1
structures, one for each mounted file system
d90 1
a90 1
returns just the number of mounted file systems.
d102 1
a102 1
an update from each file system.
d105 1
a105 1
will not block waiting for information from a file system that is
d107 3
d127 1
a127 1
error occurred while reading from or writing to the file system.
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.15 2005/05/15 18:10:50 pedro Exp $
a106 3
If no flags are provided,
.Dv MNT_WAIT
is assumed.
@

