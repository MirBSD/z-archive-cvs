head	1.11;
access;
symbols;
locks; strict;
comment	@.\" @;


1.11
date	2018.10.07.01.10.20;	author tg;	state Exp;
branches;
next	1.10;
commitid	1005BB95CA10BF418E8;

1.10
date	2018.10.07.00.55.52;	author tg;	state Exp;
branches;
next	1.9;
commitid	1005BB959AF4957DA30;

1.9
date	2018.08.10.02.53.51;	author tg;	state Exp;
branches;
next	1.8;
commitid	1005B6CFE0B5BDFE404;

1.8
date	2017.04.24.12.52.51;	author tg;	state Exp;
branches;
next	1.7;
commitid	10058FDF53421F6E5F7;

1.7
date	2014.02.09.22.35.54;	author tg;	state Exp;
branches;
next	1.6;
commitid	10052F802DB25EB293D;

1.6
date	2010.03.17.18.44.44;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004BA122F154AC5096;

1.5
date	2008.11.22.09.02.34;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004927CA84091CE619;

1.4
date	2008.08.17.00.19.08;	author tg;	state Exp;
branches;
next	1.3;
commitid	10048A76D6E14FD6E0B;

1.3
date	2008.08.05.22.28.11;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004898D40E0746CBEF;

1.2
date	2008.08.01.22.09.53;	author tg;	state Exp;
branches;
next	1.1;
commitid	100489389C5422494C6;

1.1
date	2008.08.01.22.04.56;	author tg;	state Exp;
branches;
next	;
commitid	1004893889978AC31F7;


desc
@@


1.11
log
@spelling cleanup: “programme” is distinct from “program”; even in
British English, the latter is used for computer programs, while
the former serves for things like the TV programme, or a programme
to plant trees
@
text
@.\" $MirOS: src/lib/libc/locale/optu8to16.3,v 1.10 2018/10/07 00:55:52 tg Exp $
.\"-
.\" Copyright (c) 2008, 2010, 2018
.\"	Thorsten Glaser <tg@@mirbsd.org>
.\"
.\" Provided that these terms and disclaimer and all copyright notices
.\" are retained or reproduced in an accompanying document, permission
.\" is granted to deal in this work without restriction, including un-
.\" limited rights to use, publicly perform, distribute, sell, modify,
.\" merge, give away, or sublicence.
.\"
.\" This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
.\" the utmost extent permitted by applicable law, neither express nor
.\" implied; without malicious intent or gross negligence. In no event
.\" may a licensor, author or contributor be held liable for indirect,
.\" direct, other damage, loss, or other issues arising in any way out
.\" of dealing in the work, even if advised of the possibility of such
.\" damage or existence of a defect, except proven that it results out
.\" of said person's immediate fault when using the work as intended.
.\"
.\" The author reserves the right to steward the OPTU encoding forms.
.\"-
.Dd $Mdocdate: October 7 2018 $
.Dt OPTU8TO16 3
.Os MirOS
.Sh NAME
.Nm optu8to16 ,
.Nm optu8to16vis
.Nd converts multibyte characters to wide characters preserving octets
.Sh SYNOPSIS
.Fd #include <wchar.h>
.Ft size_t
.Fn optu8to16 "wchar_t *pwc" "const char *s" "size_t n" "mbstate_t *ps"
.In mbfun.h
.Ft size_t
.Fn optu8to16vis "wchar_t *pwc" "const char *s" "size_t n" "mbstate_t *ps"
/* deprecated */
.Sh DESCRIPTION
The
.Fn optu8to16
function usually converts the multibyte character pointed to by
.Fa s
to a wide character, and stores the wide character
in the wchar_t object pointed to by
.Fa pwc
if
.Fa pwc
is non-null and
.Fa s
points to a valid character in the CESU\-8 multibyte encoding, similar to
.Fn mbrtowc
in a UTF\-8 locale.
If
.Fa s
does not point to a valid character, the first octet is transliterated to
either an ISO_646.irv:1991 (ASCII) mapping into UCS\-2 (U+0000 .. U+007F),
or to the OPTU\-16 raw octet range (U+EF80 .. U+EFFF).
The
.Fn optu8to16vis
function behaves the same, except raw octets are mapped into the normal
UCS range as if they had been encoded in the legacy 8-bit codepage.
The conversion happens in accordance with the conversion state
described in the mbstate_t object pointed to by
.Fa ps ;
it should be noted that raw octet conversion is stateful.
This function may examine at most
.Fa n
bytes of the array beginning from
.Fa s .
If
.Fa n
is set to 0, the function behaves as if end of input (not a null character)
has been read and ignores
.Fa s .
.Pp
If
.Fa s
points to a valid character and the character corresponds to a null wide
character, then the function places the mbstate_t object pointed to by
.Fa ps
to an initial conversion state.
.Pp
These are the special cases:
.Bl -tag -width 0123456789012
.It "pwc == NULL"
The conversion from a multibyte character to a wide character has
taken place and the conversion state may be affected, but the resultant
wide character is discarded.
.It "s == NULL"
.Fn optu8to16
sets the conversion state object pointed to by
.Fa ps
to an initial state and always returns 0.
In this case,
.Fn optu8to16
ignores
.Fa pwc
.\" why does mdoc(7) not have something for strong boldness?
\fBbut not\fR
.Fa n ,
and is equivalent to the following call:
.Bd -literal -offset indent
optu8to16(NULL, "", 1, ps);
.Ed
.It "n == 0"
Read end of input (not a null character, but an epsilon as known from computer
science automaton modelling) and ignore
.Fa s .
.Fn optu8to16
will still emit up to two wide characters and return 0, if the conversion
state contains information about these, and (size_t)\-2 otherwise.
Application note:
If the end of input has been reached, call
.Fn optu8to16
with n == 0 until it returns (size_t)\-2, and process the remaining wide
characters emitted.
This ensures no raw octets in the OPTU\-8 encoded source are lost.
.It "ps == NULL"
.Fn optu8to16
uses its own internal state object to keep the conversion state, instead of
.Fa ps
mentioned in this manual page.
.Pp
Calling any other functions in
.Em libc
never change the internal state of
.Fn optu8to16 ,
which is initialised at program startup time.
.El
.Sh RETURN VALUES
.Bl -tag -width 0123456789012
.It "0 or positive"
Number of bytes read from
.Fa s .
If 0, the state contained enough information to emit a wide character; if
positive, the bytes form a valid multibyte character in the OPTU\-8 encoding.
.It (size_t)\-2
.Fa s
points to the byte sequence which possibly contains part of a valid
multibyte character, but which is incomplete.
All
.Fa n
bytes of the input have been processed and stored in
.Fa ps .
.It (size_t)\-1
Generic error condition; should not happen in the current implementation.
.Va errno
is set to indicate the error.
.El
.Sh ERRORS
The
.Fn optu8to16
function is designed to be as robust as possible and can, in contrast to
.Fn mbrtowc ,
not throw
.Er EILSEQ .
While
.Er EINVAL
to indicate an invalid or uninitialised mbstate_t object is theoretically
possible, neither this nor other processing errors should ever happen with
the current implementaton.
.Sh SEE ALSO
.Xr iswoctet 3 ,
.Xr mbrtowc 3 ,
.Xr optu16to8 3
.Sh STANDARDS
At present,
.Mx
is limited to the UCS BMP (Basic Multilingual Plane), thus
OPTU\-8 is limited to the common subset of CESU\-8 and UTF\-8.
.Pp
The
.Fn optu16to8
and
.Fn optu8to16
functions are standardised by
.Mx
and have been designed to behave as close to their
.\".St -isoC99
ISO/IEC 9899:1999
.Pq Dq ISO C99
equivalents
.Fn wcrtombs
and
.Fn mbrtowcs
as possible, with the following intentional exceptions:
.Pp
If
.Fa n
is 0,
.Fa s
is ignored, even if it is
.Dv NULL ,
not the other way round.
The return value 0 does not indicate that a null character was processed, use
.Fa pwc
for that.
It indicates that no byte of the input has been read.
.Pp
The
.Fn optu8to16vis
function assumes codepage 1252 and maps holes into distinguishable codepoints.
.Pp
All these extended functions declare macros with the same name that can be
used to check for their presence.
.Sh HISTORY
The
.Nm
function first appeared in
.Mx 11 .
.Pp
Later attempts to tackle similar or related problems are PEP 383 (2009)
.Pa https://www.python.org/dev/peps/pep\-0383/
and the Wobbly Transformation Format (2014)
.Pa https://simonsapin.github.io/wtf\-8/
which all differ in which encoding is used for nonstandard codes.
.Pp
The range used in the OPTU encoding is registered with CSUR:
.Pa http://www.evertype.com/standards/csur/conscript\-table.html
.Sh AUTHORS
.An Thorsten Glaser Aq tg@@mirbsd.de
wrote the entire internationalisation implementation in
.Mx .
He is also the steward for the OPTU encoding.
.Sh CAVEATS
On a system whose wide character type is only 16 bits wide, as opposed
to 31 bits of ISO 10646, the OPTU encoder and decoder are permitted to
not de- and recompose any surrogates encountered and pass them through
as if they were regular wide characters with no special function.
Since
.Mx
is such a system, the reference implementation does not care about
UTF\-16 surrogates posing as OPTU\-16 characters at all; a planes-aware
Universal Coded Character Set-using application is required to handle
surrogates by itself.
For compatibility purposes,
.Nm
should always be assumed to not treat surrogates specially; applications
.Em must
ensure to not produce invalid surrogates unless limited to the BMP.
@


1.10
log
@fix header location
@
text
@d1 1
a1 1
.\" $MirOS: src/lib/libc/locale/optu8to16.3,v 1.8 2017/04/24 12:52:51 tg Exp $
d23 1
a23 1
.Dd $Mdocdate: April 24 2017 $
d128 1
a128 1
which is initialised at programme startup time.
@


1.9
log
@same as in commitid 1005B6CF36E3932B560, plus assorted cleanup
@
text
@d3 1
a3 1
.\" Copyright (c) 2008, 2010
d34 1
@


1.8
log
@document other (later, hah!) attempts
@
text
@d1 1
a1 1
.\" $MirOS: src/lib/libc/locale/optu8to16.3,v 1.7 2014/02/09 22:35:54 tg Exp $
d23 1
a23 1
.Dd $Mdocdate: February 9 2014 $
d60 1
a60 1
unicode range as if they had been encoded in the legacy 8-bit codepage.
d168 1
a168 1
is limited to the Unicode BMP (Basic Multilingual Plane), thus
d233 2
a234 1
Unicode application is required to handle surrogates by itself.
@


1.7
log
@nuke the restrict qualifiers; C99 says this makes no externally visible difference and is only a compiler hint and a limitation to the interface implementor
@
text
@d1 1
a1 1
.\" $MirOS: src/lib/libc/locale/optu8to16.3,v 1.6 2010/03/17 18:44:44 tg Exp $
d23 1
a23 1
.Dd $Mdocdate: March 17 2010 $
d210 9
@


1.6
log
@• document OPTU caveats and en-/decoder limits; check with mgk25’s
  UTF-8-test.txt (UTF-8 decoder capability and stress test) and then some
• deprecate optu8to16vis(3) which is unused and application layer anyway
@
text
@d1 1
a1 1
.\" $MirOS: src/lib/libc/locale/optu8to16.3,v 1.5 2008/11/22 09:02:34 tg Exp $
d23 1
a23 1
.Dd $Mdocdate: November 22 2008 $
d33 1
a33 2
.Fn optu8to16 "wchar_t * restrict pwc" "const char * restrict s" \
"size_t n" "mbstate_t * restrict ps"
d35 1
a35 2
.Fn optu8to16vis "wchar_t * restrict pwc" "const char * restrict s" \
"size_t n" "mbstate_t * restrict ps"
@


1.5
log
@new macro: iswoctet(3)

use of this macro also fixes a bug in optu8to16vis(3) which could
errorneously map 0xFF80…0xFFFF wide characters to raw octets
@
text
@d1 1
a1 1
.\" $MirOS: src/lib/libc/locale/optu8to16.3,v 1.4 2008/08/17 00:19:08 tg Exp $
d3 1
a3 1
.\" Copyright (c) 2008
d23 1
a23 1
.Dd $Mdocdate: August 17 2008 $
d38 1
d168 5
d210 1
a210 3
and
.Nm optu8to16vis
functions first appeared in
d217 15
@


1.4
log
@extended conversion functions: “forgiving” variants of mbrtowc¹ and
mbsnrtowcs² encoding raw octets as if they were from codepage 1252,
or ISO-8859-1, into Unicode, instead of the PUA OPTU-16 range.

① called optu8to16vis with semantics of optu8to16
② called mbsnrtowcsvis with semantics of mbsnrtowcs

Note: mbtowc, mbstowcs and mbsrtowcs can be emulated by calling
mbrtowc(vis) and mbsnrtowcs(vis), respectively, with appropriate
arguments. The semantics have been chosen to not exactly match
the standard since the extensions are reasonably easy to use and
granted since these functions are not standardised anyway.
@
text
@d1 1
a1 1
.\" $MirOS: src/lib/libc/locale/optu8to16.3,v 1.3 2008/08/05 22:28:11 tg Exp $
d23 1
a23 1
.Dd $Mdocdate: August 5 2008 $
d163 1
@


1.3
log
@.Dd must be first
@
text
@d1 1
a1 1
.\" $MirOS: src/lib/libc/locale/optu8to16.3,v 1.2 2008/08/01 22:09:53 tg Exp $
d23 1
a23 1
.Dd $Mdocdate: August 1 2008 $
d27 2
a28 1
.Nm optu8to16
d35 3
d58 4
d193 7
d203 3
a205 1
function first appeared in
@


1.2
log
@fix documentation bugs
@
text
@d1 1
a1 1
.\" $MirOS: src/lib/libc/locale/optu8to16.3,v 1.1 2008/08/01 22:04:56 tg Exp $
a22 1
.Os MirOS
d25 1
@


1.1
log
@documentation before implementation, tonight
@
text
@d1 1
a1 1
.\" $MirOS: src/share/misc/licence.template,v 1.24 2008/04/22 11:43:31 tg Rel $
d21 1
a21 1
.\" The author reserves the right to stweard the OPTU encoding.
d24 1
a24 1
.Dd $Mdocdate$
@

