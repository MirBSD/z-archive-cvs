head	1.5;
access;
symbols
	MIRBSD_10:1.3.0.2
	MIRBSD_10_BASE:1.3
	MIRBSD_9_BASE:1.1.1.1
	cvs-200601301245:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.5
date	2014.02.09.22.35.55;	author tg;	state Exp;
branches;
next	1.4;
commitid	10052F802DB25EB293D;

1.4
date	2008.11.22.11.22.11;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004927EB6F7D7FA1B7;

1.3
date	2006.11.20.23.50.48;	author tg;	state Exp;
branches;
next	1.2;
commitid	10045623E721D637299;

1.2
date	2006.08.19.13.26.30;	author tg;	state Exp;
branches;
next	1.1;
commitid	10044E7119362F5CA2E;

1.1
date	2006.01.30.12.51.38;	author tg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	10043DE0BE73819FB87;

1.1.1.1
date	2006.01.30.12.51.38;	author tg;	state Exp;
branches;
next	;
commitid	10043DE0BE73819FB87;


desc
@@


1.5
log
@nuke the restrict qualifiers; C99 says this makes no externally visible difference and is only a compiler hint and a limitation to the interface implementor
@
text
@.\" $MirOS: src/lib/libc/locale/wcsrtombs.3,v 1.4 2008/11/22 11:22:11 tg Exp $
.\" $OpenBSD: wcsrtombs.3,v 1.1 2005/05/11 18:44:12 espie Exp $
.\" $NetBSD: wcsrtombs.3,v 1.6 2003/09/08 17:54:32 wiz Exp $
.\"
.\" Copyright (c)2002 Citrus Project,
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: November 22 2008 $
.Dt WCSRTOMBS 3
.Os
.\" ----------------------------------------------------------------------
.Sh NAME
.Nm wcsrtombs ,
.Nm wcsnrtombs
.Nd convert a wide character string to a multibyte character string \
(restartable)
.\" ----------------------------------------------------------------------
.Sh SYNOPSIS
.Fd #include <stdlib.h>
.Ft size_t
.Fn wcsrtombs "char *s" "const wchar_t **pwcs" "size_t n" "mbstate_t *ps"
.Ft size_t
.Fn wcsnrtombs "char *s" "const wchar_t **pwcs" "size_t max" "size_t n" "mbstate_t *ps"
.\" ----------------------------------------------------------------------
.Sh DESCRIPTION
.Fn wcsrtombs
converts the null-terminated wide character string indirectly pointed to by
.Fa pwcs
to the corresponding multibyte character string,
and store it to the array pointed to by
.Fa s .
The
.Fn wcsnrtombs
function behaves the same, but reads at most
.Fa max
wide characters from the wide character string indirectly pointed to by
.Fa pwcs .
The conversion stops due to the following reasons:
.Bl -bullet
.It
The conversion reaches a null wide character.
In this case, the null wide character is also converted.
.It
.Fn wcsrtombs
or
.Fn wcsnrtombs
has already stored
.Fa n
bytes to the array pointed to by
.Fa s .
.It
The conversion encounters an invalid character.
.It
The
.Fn wcsnrtombs
function has already devoured
.Fa max
wide characters.
.El
.Pp
Each characters will be converted as if
.Xr wcrtomb 3
is continuously called, except the internal state of
.Xr wcrtomb 3
will not be affected.
.Pp
After conversion,
if
.Fa s
is not a
.Dv NULL
pointer,
the pointer object pointed to by
.Fa pwcs
is a
.Dv NULL
pointer (if the conversion is stopped due to reaching a null wide character)
or the first byte of the character just after the last character converted.
.Pp
If
.Fa s
is not a null pointer and the conversion is stopped due to reaching
a null wide character,
.Fn wcsrtombs
and
.Fn wcsnrtombs
place the state object pointed to by
.Fa ps
to an initial state after the conversion is taken place.
.Pp
The behaviour of the
.Fn wcsrtombs
and
.Fn wcsnrtombs
is affected by the
.Dv LC_CTYPE
category of the current locale.
.Pp
These are the special cases:
.Bl -tag -width 012345678901
.It "s == NULL"
.Fn wcsrtombs
and
.Fn wcsnrtombs
return the number of bytes to store the whole multibyte character string
corresponding to the wide character string pointed to by
.Fa pwcs ,
not including the terminating null byte.
In this case,
.Fa n
is ignored.
.It "pwcs == NULL || *pwcs == NULL"
Undefined (may causes the program to crash).
.It "ps == NULL"
.Fn wcsrtombs
uses its own internal state object to keep the conversion state,
instead of
.Fa ps
mentioned in this manual page.
.Fn wcsnrtombs
has an own internal state which is different from the one of
.Fn wcsrtombs .
.Pp
Calling any other functions in
.Em libc
never change the internal
state of
.Fn wcsnrtombs
or
.Fn wcsrtombs ,
that is initialised at startup time of the program.
.El
.\" ----------------------------------------------------------------------
.Sh RETURN VALUES
.Fn wcsrtombs
and
.Fn wcsnrtombs
return:
.Bl -tag -width 012345678901
.It 0 or positive
Number of bytes stored to the array pointed to by
.Fa s ,
except for a null byte.
There is no cases that the value returned is greater than
.Fa n
(unless
.Fa s
is a null pointer).
If the return value is equal to
.Fa n ,
the string pointed to by
.Fa s
will not be null-terminated.
.It (size_t)-1
.Fa pwcs
points to the string containing invalid wide character.
.Fn wcsrtombs
and
.Fn wcsnrtombs
also set errno to indicate the error.
.El
.\" ----------------------------------------------------------------------
.Sh ERRORS
.Fn wcsrtombs
and
.Fn wcsnrtombs
may cause an error in the following cases:
.Bl -tag -width Er
.It Bq Er EILSEQ
.Fa pwcs
points to the string containing an invalid wide character.
.El
.\" ----------------------------------------------------------------------
.Sh SEE ALSO
.Xr optu16to8 3 ,
.Xr setlocale 3 ,
.Xr wcrtomb 3 ,
.Xr wcstombs 3
.\" ----------------------------------------------------------------------
.Sh STANDARDS
The
.Fn wcsrtombs
function conforms to
.St -ansiC .
The
.Fn wcsnrtombs
function is a GNU extension.
.Sh HISTORY
.Fn wcsnrtombs
first appeared in
.Mx 10 .
@


1.4
log
@OPTU-16 to OPTU-8 wcsrtombs(3)
@
text
@d1 1
a1 1
.\" $MirOS: src/lib/libc/locale/wcsrtombs.3,v 1.3 2006/11/20 23:50:48 tg Exp $
d29 1
a29 1
.Dd $Mdocdate$
d42 1
a42 2
.Fn wcsrtombs "char * restrict s" "const wchar_t ** restrict pwcs" \
"size_t n" "mbstate_t * restrict ps"
d44 1
a44 2
.Fn wcsnrtombs "char * restrict s" "const wchar_t ** restrict pwcs" \
"size_t max" "size_t n" "mbstate_t * restrict ps"
a205 4
The restrict qualifier is added at
.\" .St -isoC99 .
ISO/IEC 9899/AMD1:1995
.Pq Dq ISO C99 .
@


1.3
log
@implement mbsnrtowcs(3) and wcsnrtombs(3) - including manual pages

these are only visible if any of
	_GNU_SOURCE and not __STRICT_ANSI__ (gcc -ansi)
	(_OPENBSD_SOURCE or _NETBSD_SOURCE) and none of (_ANSI_SOURCE,
	    XPG and POSIX stuff) and not __STRICT_ANSI__ (gcc -ansi)
	_ALL_SOURCE and not __STRICT_ANSI__ (gcc -ansi)
are defined, since they're GNU (and MirOS) extensions
@
text
@d1 1
a1 1
.\" $MirOS$
d29 1
a29 1
.Dd November 20, 2006
d198 1
@


1.2
log
@same fix, From: Aleksey Cheusov <cheusov@@tut.by>
@
text
@d1 1
d29 1
a29 1
.Dd February 4, 2002
d34 3
a36 2
.Nm wcsrtombs
.Nd converts a wide character string to a multibyte character string \
d44 3
a48 1
The
d55 6
a66 1
The
d68 2
d76 6
d106 1
a106 1
a null wide character, the
d108 3
a110 1
places the state object pointed to by
d116 2
d126 3
a128 1
returns the number of bytes to store the whole multibyte character string
d143 3
d151 2
d154 1
a154 1
that is initialized at startup time of the program.
d159 3
a161 1
returns:
a179 1
The
d181 3
a183 1
also sets errno to indicate the error.
d188 2
d211 7
@


1.1
log
@Initial revision
@
text
@d40 1
a40 1
.Fn wcsrtombs "const char * restrict s" "const wchar_t ** restrict pwcs" \
@


1.1.1.1
log
@Import I18N manual pages for functions we either have or will have
@
text
@@
