head	1.3;
access;
symbols
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200509212000:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.3
date	2014.02.09.23.19.57;	author tg;	state Exp;
branches;
next	1.2;
commitid	10052F80D3270BFA1BC;

1.2
date	2014.01.01.15.16.30;	author bsiegert;	state Exp;
branches;
next	1.1;
commitid	10052C4308401AE6DFB;

1.1
date	2005.02.05.17.24.55;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.55;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@“long double” in MirBSD (i386 and sparc, both) is currently just plain wrong and will lead to bad results; fix the code if needed
@
text
@.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the American National Standards Committee X3, on Information
.\" Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	$OpenBSD: strtod.3,v 1.8 2003/06/02 20:18:38 millert Exp $
.\"
.Dd $Mdocdate$
.Dt STRTOD 3
.Os
.Sh NAME
.Nm strtod , strtof
.Nd convert
.Tn ASCII
string to floating point
.Sh SYNOPSIS
.Fd #include <stdlib.h>
.Ft double
.Fn strtod "const char *nptr" "char **endptr"
.Ft float
.Fn strtof "const char *nptr" "char **endptr"
.Sh DESCRIPTION
These conversion functions convert the initial portion of the string pointed
to by
.Fa nptr
to
.Li double
or
.Li float
representation, respectively.
.Pp
The expected form of the string is an optional plus
.Pq Ql +
or minus sign
.Pq Ql -
followed by a sequence of digits optionally containing
a decimal-point character, optionally followed by an exponent.
An exponent consists of an
.Sq E
or
.Sq e ,
followed by an optional plus or minus sign, followed by a sequence of digits.
.Pp
Leading whitespace characters in the string (as defined by the
.Xr isspace 3
function) are skipped.
.Sh RETURN VALUES
The
.Fn strtod
and
.Fn strtof
functions return the converted value, if any.
.Pp
If
.Fa endptr
is not
.Dv NULL ,
a pointer to the character after the last character used
in the conversion is stored in the location referenced by
.Fa endptr .
.Pp
If no conversion is performed, zero is returned and the value of
.Fa nptr
is stored in the location referenced by
.Fa endptr .
.Pp
If the correct value would cause overflow, plus or minus
.Dv HUGE_VAL
is returned (according to the sign of the value), and
.Er ERANGE
is stored in
.Va errno .
If the correct value would cause underflow, zero is returned and
.Er ERANGE
is stored in
.Va errno .
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er ERANGE
Overflow or underflow occurred.
.El
.Sh SEE ALSO
.Xr atof 3 ,
.Xr atoi 3 ,
.Xr atol 3 ,
.Xr strtol 3 ,
.Xr strtoul 3
.Sh STANDARDS
The
.Fn strtod
function conforms to
.St -ansiC .
.Sh HISTORY
The
.Fn strtof
function was added to
.Mx
in 2013.

@


1.2
log
@Add strtof and strtold to libc.

They are simple wrappers around the existing strtod implementation.
In MirOS, double and long double are the same anyway. This change is needed
because the two functions are part of C99, so there is a bunch of software
that uses them without a configure check.

ok tg@@
@
text
@d34 1
a34 1
.Dd June 29, 1991
d38 1
a38 1
.Nm strtod , strtof , strtold
a47 2
.Ft long double
.Fn strtold "const char *nptr" "char **endptr"
d53 1
a53 1
.Li double , float
d55 1
a55 1
.Li long double
d75 1
a75 1
.Fn strtod , strtof
d77 1
a77 1
.Fn strtold
d122 1
a122 3
and
.Fn strtold
functions were added to
@


1.1
log
@Initial revision
@
text
@d38 1
a38 1
.Nm strtod
d41 1
a41 1
string to double
d46 4
d51 2
a52 3
The
.Fn strtod
function converts the initial portion of the string pointed to by
d55 4
a58 2
.Li double
representation.
d77 4
a80 2
.Fn strtod
function returns the converted value, if any.
d121 9
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
