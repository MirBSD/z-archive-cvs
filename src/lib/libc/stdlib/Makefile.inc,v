head	1.16;
access;
symbols
	MIRBSD_10:1.7.0.2
	MIRBSD_10_BASE:1.7
	MIRBSD_9_BASE:1.5
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3
	cvs-200509212000:1.1.1.2
	cvs-200507211800:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.16
date	2014.11.30.21.30.56;	author tg;	state Exp;
branches;
next	1.15;
commitid	100547B8BEB4A8A38F2;

1.15
date	2014.03.19.22.54.00;	author tg;	state Exp;
branches;
next	1.14;
commitid	100532A20197E59EF11;

1.14
date	2014.02.09.23.23.34;	author tg;	state Exp;
branches;
next	1.13;
commitid	10052F80DE85DB1E595;

1.13
date	2014.01.01.15.16.30;	author bsiegert;	state Exp;
branches;
next	1.12;
commitid	10052C4308401AE6DFB;

1.12
date	2012.12.21.21.49.18;	author tg;	state Exp;
branches;
next	1.11;
commitid	10050D4D97113AFAA4C;

1.11
date	2010.12.24.00.10.59;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004D13E5244D978DD8;

1.10
date	2010.12.23.18.33.33;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004D13961111145958;

1.9
date	2010.12.23.18.11.45;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004D1390F346BAD9BF;

1.8
date	2008.08.01.19.07.44;	author tg;	state Exp;
branches;
next	1.7;
commitid	10048935EFB41305792;

1.7
date	2007.05.22.16.13.51;	author tg;	state Exp;
branches;
next	1.6;
commitid	100465316C85B4B4C7F;

1.6
date	2006.11.20.23.56.43;	author tg;	state Exp;
branches;
next	1.5;
commitid	100456240C065961156;

1.5
date	2006.06.02.02.29.54;	author tg;	state Exp;
branches;
next	1.4;
commitid	100447FA28346FF91C0;

1.4
date	2006.03.30.18.36.01;	author tg;	state Exp;
branches;
next	1.3;
commitid	100442C24BC2AB55E5D;

1.3
date	2005.09.22.20.15.31;	author tg;	state Exp;
branches;
next	1.2;
commitid	4a6b433310f7356b;

1.2
date	2005.03.06.20.28.47;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.24.55;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.55;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.20.53.01;	author tg;	state Exp;
branches;
next	;
commitid	560042e0092f571e;


desc
@@


1.16
log
@• timingsafe_memcmp is not the same as timingsafe_bcmp, remove
• remove timingsafe_bcmp from libkern
• (re-)add timingsafe_bcmp and timingsafe_memcmp to libc
• update omalloc
• newly add reallocarray to libc
• add strnlen to libc, fix strndup to not read beyond size with that
• update manpages and add MLINKS: strndup, strnlen, timingsafe_*cmp
@
text
@# $MirOS: src/lib/libc/stdlib/Makefile.inc,v 1.15 2014/03/19 22:54:00 tg Exp $

# stdlib sources
.PATH: ${LIBCSRCDIR}/arch/${MACHINE_ARCH}/stdlib ${LIBCSRCDIR}/stdlib

SRCS+=	a64l.c abort.c atexit.c atoi.c atof.c atol.c atoll.c bsearch.c \
	cfree.c exit.c ecvt.c gcvt.c getenv.c getopt_long.c \
	getsubopt.c hcreate.c heapsort.c l64a.c llabs.c lsearch.c \
	merge.c putenv.c qsort.c radixsort.c rand.c random.c \
	reallocarray.c realpath.c rpmatch.c \
	setenv.c strtod.c strtof.c strtol.c strtoll.c strtonum.c strtoul.c \
	strtoull.c system.c getprogname.c \
	tfind.c tsearch.c _rand48.c drand48.c erand48.c jrand48.c lcong48.c \
	lrand48.c mrand48.c nrand48.c seed48.c srand48.c qabs.c qdiv.c _Exit.c

.ifdef __CRAZY
CFLAGS_bsearch.o+= -Wno-cast-qual
CFLAGS_ecvt.o+= -Wno-cast-qual
CFLAGS_getopt_long.o+= -Wno-error
CFLAGS_hcreate.o+= -Wno-error
CFLAGS_lsearch.o+= -Wno-cast-qual
CFLAGS_random.o+= -Wno-cast-qual -Wno-uninitialized
CFLAGS_strtod.o+= -Wno-error
CFLAGS_strtol.o+= -Wno-error
CFLAGS_strtoll.o+= -Wno-cast-qual
CFLAGS_strtoul.o+= -Wno-error
CFLAGS_strtoull.o+= -Wno-cast-qual
CFLAGS_system.o+= -Wno-error
CFLAGS_tfind.o+= -Wno-cast-qual
CFLAGS_tsearch.o+= -Wno-cast-qual
CFLAGS_malloc_brk.o+= -Wno-error
CFLAGS_malloc_mmap.o+= -Wno-error
.endif

SRCS+=	abs.S
LSRCS+=	abs.c labs.c
.if (${MACHINE_ARCH} == "i386")
SRCS+=	div.S
LSRCS+=	div.c ldiv.c
.else
SRCS+=	div.c ldiv.c
.endif

.if (${MACHINE_ARCH} == "vax") || (${MACHINE_ARCH} == "m68k")
SRCS+=	insque.S remque.S
.else
SRCS+=	insque.c remque.c
.endif

MALLOC_TYPE?=omalloc
.if ${MALLOC_TYPE:L} == "mmap"
SRCS+=	malloc_mmap.c calloc.c
.elif ${MALLOC_TYPE:L} == "brk"
SRCS+=	malloc_brk.c calloc.c
.elif ${MALLOC_TYPE:L} == "omalloc"
SRCS+=	malloc.c
.else
.  error MALLOC_TYPE "${MALLOC_TYPE:L}" unknown.
.endif

MAN+=	a64l.3 abort.3 abs.3 alloca.3 atexit.3 atof.3 atoi.3 atol.3 atoll.3 \
	bsearch.3 div.3 ecvt.3 exit.3 getenv.3 getopt.3 getopt_long.3 \
	getsubopt.3 hcreate.3 insque.3 labs.3 ldiv.3 lsearch.3 \
	malloc.3 posix_memalign.3 qabs.3 qdiv.3 qsort.3 \
	radixsort.3 rand48.3 rand.3 random.3 realpath.3 rpmatch.3 \
	strtod.3 strtonum.3 strtol.3 strtoul.3 system.3 tsearch.3

MLINKS+=exit.3 _Exit.3
MLINKS+=ecvt.3 fcvt.3 ecvt.3 gcvt.3
MLINKS+=getenv.3 setenv.3 getenv.3 unsetenv.3 getenv.3 putenv.3
MLINKS+=getopt_long.3 getopt_long_only.3
MLINKS+=hcreate.3 hdestroy.3 hcreate.3 hsearch.3
MLINKS+=insque.3 remque.3
MLINKS+=labs.3 llabs.3
MLINKS+=lsearch.3 lfind.3
MLINKS+=malloc.3 free.3 malloc.3 realloc.3 malloc.3 calloc.3
MLINKS+=malloc.3 cfree.3 malloc.3 malloc.conf.5 malloc.3 reallocarray.3
MLINKS+=qsort.3 heapsort.3 qsort.3 mergesort.3
MLINKS+=radixsort.3 sradixsort.3
MLINKS+=rand.3 srand.3 rand.3 rand_r.3
MLINKS+=random.3 initstate.3 random.3 setstate.3
MLINKS+=random.3 srandom.3 random.3 srandomdev.3
MLINKS+=rand48.3 drand48.3 rand48.3 erand48.3 rand48.3 lrand48.3
MLINKS+=rand48.3 mrand48.3 rand48.3 nrand48.3 rand48.3 jrand48.3
MLINKS+=rand48.3 srand48.3 rand48.3 seed48.3 rand48.3 lcong48.3
MLINKS+=strtod.3 strtof.3
MLINKS+=strtol.3 strtoll.3 strtol.3 strtoq.3 strtol.3 strtoimax.3
MLINKS+=strtoul.3 strtoull.3 strtoul.3 strtouq.3 strtoul.3 strtoumax.3
MLINKS+=tsearch.3 tfind.3
MLINKS+=tsearch.3 tdelete.3
MLINKS+=tsearch.3 twalk.3
MLINKS+=a64l.3 l64a.3
@


1.15
log
@implement strtoimax(3) and strtoumax(3) as requested by bsiegert@@
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/stdlib/Makefile.inc,v 1.14 2014/02/09 23:23:34 tg Exp $
d10 1
a10 1
	realpath.c rpmatch.c \
d77 1
a77 1
MLINKS+=malloc.3 cfree.3 malloc.3 malloc.conf.5
@


1.14
log
@mop up after “long double” removal

no library major bump, as code using these cannot have worked right anyway
since we don’t even have a defined API for “long double”
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/stdlib/Makefile.inc,v 1.13 2014/01/01 15:16:30 bsiegert Exp $
d87 2
a88 2
MLINKS+=strtol.3 strtoll.3 strtol.3 strtoq.3
MLINKS+=strtoul.3 strtoull.3 strtoul.3 strtouq.3
@


1.13
log
@Add strtof and strtold to libc.

They are simple wrappers around the existing strtod implementation.
In MirOS, double and long double are the same anyway. This change is needed
because the two functions are part of C99, so there is a bunch of software
that uses them without a configure check.

ok tg@@
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/stdlib/Makefile.inc,v 1.12 2012/12/21 21:49:18 tg Exp $
d86 1
a86 1
MLINKS+=strtod.3 strtof.3 strtod.3 strtold.3
@


1.12
log
@merge omalloc update + bugfix it
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/stdlib/Makefile.inc,v 1.11 2010/12/24 00:10:59 tg Exp $
d11 1
a11 1
	setenv.c strtod.c strtol.c strtoll.c strtonum.c strtoul.c \
d86 1
@


1.11
log
@fix build; make omalloc default; sync lists (objc, lynx)
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/stdlib/Makefile.inc,v 1.10 2010/12/23 18:33:33 tg Exp $
d63 2
a64 2
	getsubopt.3 hcreate.3 insque.3 labs.3 ldiv.3 lsearch.3 malloc.3 \
	qabs.3 qdiv.3 qsort.3 \
@


1.10
log
@merge omalloc but don’t make it default just yet
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/stdlib/Makefile.inc,v 1.9 2010/12/23 18:11:45 tg Exp $
d7 1
a7 1
	calloc.c cfree.c exit.c ecvt.c gcvt.c getenv.c getopt_long.c \
d50 1
a50 1
MALLOC_TYPE?=mmap
d52 1
a52 1
SRCS+=	malloc_mmap.c
d54 1
a54 1
SRCS+=	malloc_brk.c
@


1.9
log
@copy malloc.c,v 1.7 to malloc_mmap.c
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/stdlib/Makefile.inc,v 1.8 2008/08/01 19:07:44 tg Exp $
d31 2
a32 1
CFLAGS_malloc.o+= -Wno-error
d55 2
@


1.8
log
@remove a few function bodies for things we can do inline and always have,
just not as well, and fine-tune the asm code for the bodies in libc
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/stdlib/Makefile.inc,v 1.7 2007/05/22 16:13:51 tg Exp $
d51 1
a51 1
SRCS+=	malloc.c
@


1.7
log
@• rpmatch(3) stub manpage, copied from getline(3)
• enable rpmatch compilation
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/stdlib/Makefile.inc,v 1.6 2006/11/20 23:56:43 tg Exp $
d34 5
a38 17
.if   (${MACHINE_ARCH} == "m68k")
SRCS+=	abs.S div.c labs.c ldiv.c
LSRCS+=	abs.c
.elif (${MACHINE_ARCH} == "i386")
SRCS+=	abs.S div.S
LSRCS+=	abs.c div.c labs.c ldiv.c
.elif (${MACHINE_ARCH} == "ns32k")
SRCS+=	abs.S div.c labs.c ldiv.c
LSRCS+=	abs.c
.elif (${MACHINE_ARCH} == "tahoe")
SRCS+=	abs.S div.c labs.c ldiv.c
LSRCS+=	abs.c
.elif (${MACHINE_ARCH} == "vax")
SRCS+=	abs.c div.c labs.c ldiv.c
.elif (${MACHINE_ARCH} == "alpha")
# XXX should be .S's
SRCS+=	abs.c div.c labs.c ldiv.c
d40 1
a40 1
SRCS+=	abs.c div.c labs.c ldiv.c
@


1.6
log
@only disable certain warnings to help __CRAZY builds if we're
indeed building with __CRAZY=yes
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/stdlib/Makefile.inc,v 1.5 2006/06/02 02:29:54 tg Exp $
d10 2
a11 1
	realpath.c setenv.c strtod.c strtol.c strtoll.c strtonum.c strtoul.c \
d72 3
a74 2
	getsubopt.3 hcreate.3 insque.3 labs.3 ldiv.3 lsearch.3 malloc.3 qabs.3 \
	qdiv.3 qsort.3 radixsort.3 rand48.3 rand.3 random.3 realpath.3 \
@


1.5
log
@__CRAZY cleanliness for most of libc
not: net/rpc/etc., time, thread, sys
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/stdlib/Makefile.inc,v 1.4 2006/03/30 18:36:01 tg Exp $
d15 1
d31 1
@


1.4
log
@* let the user decide which malloc (mmap or brk) he wants;
  default to mmap (secure); for formal releases, probably,
  we'll default to brk again
  ok bsiegert@@
* note in malloc(3) man page that it's inaccurate for brk
* merge latest mmap and brk malloc versions from openbsd
* start warnings cleanup in brk malloc (but give up, mmap
  is even worse tho)
* sync brk and mmap malloc where possible (whitespace and
  KNF in the early file)
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/stdlib/Makefile.inc,v 1.3 2005/09/22 20:15:31 tg Exp $
d15 16
@


1.3
log
@merge
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/stdlib/Makefile.inc,v 1.2 2005/03/06 20:28:47 tg Exp $
d8 1
a8 1
	getsubopt.c hcreate.c heapsort.c l64a.c llabs.c lsearch.c malloc.c \
d42 9
@


1.2
log
@merge src/lib
@
text
@d1 1
a1 1
# $MirOS$
d9 1
a9 1
	merge.c multibyte.c putenv.c qsort.c radixsort.c rand.c random.c \
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$OpenBDS: Makefile.inc,v 1.6 1996/08/21 03:47:21 tholo Exp $
d11 1
a11 1
	strtoull.c system.c \
d19 1
a19 1
SRCS+=	abs.S div.S labs.S ldiv.S
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d9 1
a9 1
	merge.c putenv.c qsort.c radixsort.c rand.c random.c \
@

