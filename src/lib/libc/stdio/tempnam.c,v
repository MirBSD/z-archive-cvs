head	1.5;
access;
symbols
	MIRBSD_10:1.5.0.2
	MIRBSD_10_BASE:1.5
	MIRBSD_9_BASE:1.5
	MIRBSD_8:1.4.0.2
	MIRBSD_8_BASE:1.4
	cvs-200509212000:1.1.1.2
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2006.06.02.02.29.54;	author tg;	state Exp;
branches;
next	1.4;
commitid	100447FA28346FF91C0;

1.4
date	2005.10.21.10.53.26;	author tg;	state Exp;
branches;
next	1.3;
commitid	43a64358c889b118;

1.3
date	2005.09.22.20.13.05;	author tg;	state Exp;
branches;
next	1.2;
commitid	47a94333106567b8;

1.2
date	2005.07.26.19.31.54;	author tg;	state Exp;
branches;
next	1.1;
commitid	43f342e68faddd60;

1.1
date	2005.02.05.17.24.55;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.55;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.09.21.20.34.26;	author tg;	state Exp;
branches;
next	;
commitid	20cd4331c3c732a2;


desc
@@


1.5
log
@__CRAZY cleanliness for most of libc
not: net/rpc/etc., time, thread, sys
@
text
@/*	$OpenBSD: tempnam.c,v 1.14 2005/08/08 08:05:36 espie Exp $ */
/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/param.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <paths.h>

__RCSID("$MirOS: src/lib/libc/stdio/tempnam.c,v 1.4 2005/10/21 10:53:26 tg Exp $");

__warn_references(tempnam,
    "tempnam() possibly used unsafely; consider using mkstemp()");

extern char *_mktemp(char *);

char *
tempnam(const char *dir, const char *pfx)
{
	int sverrno;
	char *f, *name;

	if (!(name = malloc(MAXPATHLEN)))
		return(NULL);

	if (!pfx)
		pfx = "tmp.";

	if (issetugid() == 0 && (f = getenv("TMPDIR"))) {
		(void)snprintf(name, MAXPATHLEN, "%s%s%sXXXXXXXXXX", f,
		    *(f + strlen(f) - (*f == '\0' ? 0 : 1)) == '/'? "": "/",
		    pfx);
		if ((f = _mktemp(name)))
			return(f);
	}

	if ((f = (char *)dir)) {
		(void)snprintf(name, MAXPATHLEN, "%s%s%sXXXXXXXXXX", f,
		    *(f + strlen(f) - (*f == '\0' ? 0 : 1)) == '/'? "": "/",
		    pfx);
		if ((f = _mktemp(name)))
			return(f);
	}

	f = (char *)P_tmpdir;
	(void)snprintf(name, MAXPATHLEN, "%s%sXXXXXXXXX", f, pfx);
	if ((f = _mktemp(name)))
		return(f);

	f = (char *)_PATH_TMP;
	(void)snprintf(name, MAXPATHLEN, "%s%sXXXXXXXXX", f, pfx);
	if ((f = _mktemp(name)))
		return(f);

	sverrno = errno;
	free(name);
	errno = sverrno;
	return(NULL);
}
@


1.4
log
@* remove duplicate "warning: " prefix (ABIWARN)
* fix strerror after NLS removal
* bcmp -> memcmp (one occurence)
@
text
@d39 1
a39 1
__RCSID("$MirOS: src/lib/libc/stdio/tempnam.c,v 1.3 2005/09/22 20:13:05 tg Exp $");
d74 1
a74 1
	f = P_tmpdir;
d79 1
a79 1
	f = _PATH_TMP;
@


1.3
log
@merge
@
text
@d39 1
a39 1
__RCSID("$MirOS: src/lib/libc/stdio/tempnam.c,v 1.2 2005/07/26 19:31:54 tg Exp $");
d42 1
a42 1
    "warning: tempnam() possibly used unsafely; consider using mkstemp()");
@


1.2
log
@sure tempnam is insecure, but it shouldn't access invalid memory
seen by accident in netbsd pr 30839
@
text
@d1 1
a30 4
#if 0
static char rcsid[] = "$OpenBSD: tempnam.c,v 1.13 2004/09/28 18:12:44 otto Exp $";
#endif /* LIBC_SCCS and not lint */

d39 1
a39 1
__RCSID("$MirOS$");
@


1.1
log
@Initial revision
@
text
@d30 1
a30 1
#if defined(LIBC_SCCS) && !defined(lint)
d42 2
d63 2
a64 1
		    *(f + strlen(f) - 1) == '/'? "": "/", pfx);
d71 2
a72 1
		    *(f + strlen(f) - 1) == '/'? "": "/", pfx);
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import OpenBSD's libc as of today, minus some of the locale stuff,
and with brk malloc instead of mmap malloc
@
text
@a0 1
/*	$OpenBSD: tempnam.c,v 1.14 2005/08/08 08:05:36 espie Exp $ */
d30 4
@

