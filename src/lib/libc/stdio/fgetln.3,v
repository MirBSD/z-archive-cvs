head	1.2;
access;
symbols
	MIRBSD_10:1.1.1.2.0.4
	MIRBSD_10_BASE:1.1.1.2
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200509212000:1.1.1.2
	cvs-200507211800:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.2
date	2009.11.21.14.39.42;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004B07FBA7532FCB20;

1.1
date	2005.02.05.17.24.51;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.51;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.20.52.55;	author tg;	state Exp;
branches;
next	1.1.1.3;
commitid	560042e0092f571e;

1.1.1.3
date	2009.11.21.14.32.36;	author tg;	state Exp;
branches;
next	;
commitid	1004B07FA177C18C27E;


desc
@@


1.2
log
@• correct bad code (memory leak) with bad (but safe: err exits) realloc
  example
• use \*(aq etc.
@
text
@.\"	$MirOS$
.\"	$OpenBSD: fgetln.3,v 1.15 2007/06/21 13:47:07 moritz Exp $
.\"
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: November 21 2009 $
.Dt FGETLN 3
.Os
.Sh NAME
.Nm fgetln
.Nd get a line from a stream
.Sh SYNOPSIS
.Fd #include <stdio.h>
.Ft char *
.Fn fgetln "FILE *stream" "size_t *len"
.Sh DESCRIPTION
The
.Fn fgetln
function returns a pointer to the next line from the stream referenced by
.Fa stream .
This line is
.Em not
a C string as it does not end with a terminating
.Tn NUL
character.
The length of the line, including the final newline,
is stored in the memory location to which
.Fa len
points and is guaranteed to be greater than 0 upon successful completion.
(Note, however, that if the last line in the stream does not end in a newline,
the returned text will not contain a newline.)
.Sh RETURN VALUES
Upon successful completion a pointer is returned;
this pointer becomes invalid after the next
.Tn I/O
operation on
.Fa stream
(whether successful or not)
or as soon as the stream is closed.
Otherwise,
.Dv NULL
is returned.
.Pp
The
.Fn fgetln
function does not distinguish between end-of-file and error; the routines
.Xr feof 3
and
.Xr ferror 3
must be used
to determine which occurred.
If an error occurs, the global variable
.Va errno
is set to indicate the error.
The end-of-file condition is remembered, even on a terminal, and all
subsequent attempts to read will return
.Dv NULL
until the condition is
cleared with
.Xr clearerr 3 .
.Pp
The text to which the returned pointer points may be modified,
provided that no changes are made beyond the returned size.
These changes are lost as soon as the pointer becomes invalid.
.Sh ERRORS
.Bl -tag -width [EBADF]
.It Bq Er EBADF
The argument
.Fa stream
is not a stream open for reading.
.El
.Pp
The
.Fn fgetln
function may also fail and set
.Va errno
for any of the errors specified for the routines
.Xr fflush 3 ,
.Xr malloc 3 ,
.Xr read 2 ,
.Xr stat 2 ,
or
.Xr realloc 3 .
.Sh SEE ALSO
.Xr ferror 3 ,
.Xr fgets 3 ,
.Xr fopen 3 ,
.Xr fparseln 3 ,
.Xr putc 3
.Sh HISTORY
The
.Fn fgetln
function first appeared in
.Bx 4.4 .
.Sh CAVEATS
Since the returned buffer is not a C string (it is not NUL terminated), a
common practice is to replace the newline character with
.Sq \e0 .
However, if the last line in a file does not contain a newline,
the returned text won't contain a newline either.
The following code demonstrates how to deal with this problem by allocating a
temporary buffer:
.Bd -literal
	char *buf, *lbuf;
	size_t len;

	lbuf = NULL;
	while ((buf = fgetln(fp, &len))) {
		if (buf[len \- 1] == \*(aq\en\*(aq)
			buf[len \- 1] = \*(aq\e0\*(aq;
		else {
			/* EOF without EOL, copy and add the NUL */
			if ((lbuf = realloc(lbuf, len + 1)) == NULL)
				/* XXX bad realloc example though */
				err(1, NULL);
			memcpy(lbuf, buf, len);
			lbuf[len] = \*(aq\e0\*(aq;
			buf = lbuf;
		}
		printf("%s\en", buf);
	}
	free(lbuf);
.Ed
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
.\"	$OpenBSD: fgetln.3,v 1.11 2004/08/20 18:17:35 millert Exp $
d31 1
a31 1
.Dd April 19, 1994
d54 1
a54 1
points.
d121 1
a121 1
Since the returned buffer is not a C string (it is not null terminated), a
d134 2
a135 2
		if (buf[len - 1] == '\en')
			buf[len - 1] = '\e0';
d138 2
a139 1
			if ((lbuf = (char *)malloc(len + 1)) == NULL)
d142 1
a142 1
			lbuf[len] = '\e0';
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.12 2005/02/25 03:12:44 cloder Exp $
d120 1
a120 1
Since the returned buffer is not a C string (it is not NUL terminated), a
@


1.1.1.3
log
@sync with OpenBSD-current
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.15 2007/06/21 13:47:07 moritz Exp $
d30 1
a30 1
.Dd $Mdocdate: June 21 2007 $
d53 1
a53 1
points and is guaranteed to be greater than 0 upon successful completion.
d137 1
a137 1
			if ((lbuf = malloc(len + 1)) == NULL)
@


