head	1.3;
access;
symbols
	MIRBSD_10:1.2.0.2
	MIRBSD_10_BASE:1.2
	MIRBSD_9_BASE:1.2
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200509212000:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2013.10.31.20.06.21;	author tg;	state Exp;
branches;
next	1.2;
commitid	1005272B7081B0E5655;

1.2
date	2006.06.02.02.29.53;	author tg;	state Exp;
branches;
next	1.1;
commitid	100447FA28346FF91C0;

1.1
date	2005.02.05.17.24.54;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.54;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@adapt most __attribute__((â€¦)) occurrences to new KNF style(9)
@
text
@/*	$OpenBSD: flockfile.c,v 1.7 2004/09/28 18:12:44 otto Exp $	*/

#include <sys/time.h>
#include <stdio.h>
#include "thread_private.h"

__RCSID("$MirOS$");

/*
 * Subroutine versions of the macros in <stdio.h>
 * Note that these are all no-ops because libc does not do threads.
 * Strong implementation of file locking in libc_r/uthread/uthread_file.c
 */

#undef flockfile
#undef ftrylockfile
#undef funlockfile

WEAK_PROTOTYPE(flockfile);
WEAK_PROTOTYPE(ftrylockfile);
WEAK_PROTOTYPE(funlockfile);

WEAK_ALIAS(flockfile);
WEAK_ALIAS(ftrylockfile);
WEAK_ALIAS(funlockfile);

void
WEAK_NAME(flockfile)(FILE * fp __attribute__((__unused__)))
{
}


int
WEAK_NAME(ftrylockfile)(FILE *fp __attribute__((__unused__)))
{

	return 0;
}

void
WEAK_NAME(funlockfile)(FILE * fp __attribute__((__unused__)))
{
}
@


1.2
log
@__CRAZY cleanliness for most of libc
not: net/rpc/etc., time, thread, sys
@
text
@d7 2
d28 1
a28 1
WEAK_NAME(flockfile)(FILE * fp __attribute__((unused)))
d34 1
a34 1
WEAK_NAME(ftrylockfile)(FILE *fp __attribute__((unused)))
d41 1
a41 1
WEAK_NAME(funlockfile)(FILE * fp __attribute__((unused)))
@


1.1
log
@Initial revision
@
text
@d26 1
a26 1
WEAK_NAME(flockfile)(FILE * fp)
d32 1
a32 1
WEAK_NAME(ftrylockfile)(FILE *fp)
d39 1
a39 1
WEAK_NAME(funlockfile)(FILE * fp)
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
