head	1.48;
access;
symbols
	MIRBSD_10:1.25.0.2
	MIRBSD_10_BASE:1.25
	MIRBSD_9_BASE:1.11
	MIRBSD_8:1.6.0.2
	MIRBSD_8_BASE:1.6
	cvs-200509212000:1.1.1.2
	cvs-200507211800:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.48
date	2017.08.08.15.16.31;	author tg;	state Exp;
branches;
next	1.47;
commitid	1005989D5DF25F53E9B;

1.47
date	2015.07.18.22.48.19;	author tg;	state Exp;
branches;
next	1.46;
commitid	10055AAD7BC6B247CCA;

1.46
date	2014.11.30.02.45.33;	author tg;	state Exp;
branches;
next	1.45;
commitid	100547A84C870A75856;

1.45
date	2014.02.19.17.43.26;	author tg;	state Exp;
branches;
next	1.44;
commitid	1005304ED413F0CF25C;

1.44
date	2014.01.01.15.16.30;	author bsiegert;	state Exp;
branches;
next	1.43;
commitid	10052C4308401AE6DFB;

1.43
date	2012.12.31.20.19.50;	author tg;	state Exp;
branches;
next	1.42;
commitid	10050E1F351014A1FCD;

1.42
date	2011.11.20.04.57.11;	author tg;	state Exp;
branches;
next	1.41;
commitid	1004EC8880406A80564;

1.41
date	2011.07.06.22.22.09;	author tg;	state Exp;
branches;
next	1.40;
commitid	1004E14E010182825E7;

1.40
date	2010.10.08.20.52.01;	author tg;	state Exp;
branches;
next	1.39;
commitid	1004CAF8488504CFC91;

1.39
date	2010.10.08.20.34.41;	author tg;	state Exp;
branches;
next	1.38;
commitid	1004CAF80452BA6AAEA;

1.38
date	2010.09.21.19.38.20;	author tg;	state Exp;
branches;
next	1.37;
commitid	1004C99098A59EF7F86;

1.37
date	2010.09.12.17.10.48;	author tg;	state Exp;
branches;
next	1.36;
commitid	1004C8D0939027D8BE7;

1.36
date	2010.03.17.18.44.43;	author tg;	state Exp;
branches;
next	1.35;
commitid	1004BA122F154AC5096;

1.35
date	2010.01.10.20.18.50;	author tg;	state Exp;
branches;
next	1.34;
commitid	1004B4A3588743BF0D3;

1.34
date	2010.01.07.22.34.48;	author tg;	state Exp;
branches;
next	1.33;
commitid	1004B46615B7479BC1B;

1.33
date	2009.11.09.21.36.38;	author tg;	state Exp;
branches;
next	1.32;
commitid	1004AF88B6210E6BBB3;

1.32
date	2009.08.30.18.02.08;	author tg;	state Exp;
branches;
next	1.31;
commitid	1004A9ABE9F3BE09D8C;

1.31
date	2008.12.27.21.17.53;	author tg;	state Exp;
branches;
next	1.30;
commitid	10049569B9439744217;

1.30
date	2008.11.22.12.56.20;	author tg;	state Exp;
branches;
next	1.29;
commitid	100492801345F76EB54;

1.29
date	2008.08.17.00.19.07;	author tg;	state Exp;
branches;
next	1.28;
commitid	10048A76D6E14FD6E0B;

1.28
date	2008.08.02.00.18.32;	author tg;	state Exp;
branches;
next	1.27;
commitid	1004893A7DE512F2DFB;

1.27
date	2008.08.01.16.14.47;	author tg;	state Exp;
branches;
next	1.26;
commitid	10048933682721C5382;

1.26
date	2008.04.06.16.37.30;	author tg;	state Exp;
branches;
next	1.25;
commitid	10047F8FC5B27333443;

1.25
date	2007.06.21.14.40.22;	author tg;	state Exp;
branches;
next	1.24;
commitid	100467A8D2C4D7EEFFE;

1.24
date	2007.06.15.16.00.02;	author tg;	state Exp;
branches;
next	1.23;
commitid	1004672B77C139E51F0;

1.23
date	2007.05.19.22.08.26;	author tg;	state Exp;
branches;
next	1.22;
commitid	100464F755548D7A3DB;

1.22
date	2007.05.17.14.24.43;	author tg;	state Exp;
branches;
next	1.21;
commitid	100464C657063A0BD89;

1.21
date	2007.05.16.22.03.52;	author tg;	state Exp;
branches;
next	1.20;
commitid	100464B7E545A2B0094;

1.20
date	2007.05.07.02.26.10;	author tg;	state Exp;
branches;
next	1.19;
commitid	100463E8E585C5ABCCD;

1.19
date	2007.02.05.20.16.08;	author tg;	state Exp;
branches;
next	1.18;
commitid	10045C78FD963274EDA;

1.18
date	2006.11.20.23.50.47;	author tg;	state Exp;
branches;
next	1.17;
commitid	10045623E721D637299;

1.17
date	2006.11.03.18.10.41;	author tg;	state Exp;
branches;
next	1.16;
commitid	100454B862956081199;

1.16
date	2006.11.01.20.15.38;	author tg;	state Exp;
branches;
next	1.15;
commitid	1004549006D755923EE;

1.15
date	2006.10.02.02.56.58;	author tg;	state Exp;
branches;
next	1.14;
commitid	1004520800031B71F2C;

1.14
date	2006.09.17.19.28.58;	author tg;	state Exp;
branches;
next	1.13;
commitid	100450DA20303EFF79D;

1.13
date	2006.08.18.13.02.16;	author tg;	state Exp;
branches;
next	1.12;
commitid	10044E5BA6E310A62DF;

1.12
date	2006.07.03.16.14.41;	author tg;	state Exp;
branches;
next	1.11;
commitid	10044A942475753D29B;

1.11
date	2006.06.01.23.00.37;	author tg;	state Exp;
branches;
next	1.10;
commitid	100447F717560592A14;

1.10
date	2006.05.26.13.44.07;	author tg;	state Exp;
branches;
next	1.9;
commitid	10044770626519498D6;

1.9
date	2006.01.31.20.47.14;	author tg;	state Exp;
branches;
next	1.8;
commitid	10043DFCCDC09FAFFD4;

1.8
date	2006.01.31.19.57.32;	author tg;	state Exp;
branches;
next	1.7;
commitid	10043DFC13E242E4DBE;

1.7
date	2006.01.24.20.14.48;	author tg;	state Exp;
branches;
next	1.6;
commitid	10043D68ABF4BF1FA61;

1.6
date	2005.09.22.20.39.57;	author tg;	state Exp;
branches;
next	1.5;
commitid	2258433316aba805;

1.5
date	2005.07.01.13.51.24;	author tg;	state Exp;
branches;
next	1.4;
commitid	5ba942c54a6b05f8;

1.4
date	2005.04.29.18.34.49;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.28.21.22.19;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.06.20.28.25;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.24.34;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.34;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.20.52.11;	author tg;	state Exp;
branches;
next	;
commitid	560042e0092f571e;


desc
@@


1.48
log
@bump, as requested by lib/libc/Makefile
@
text
@# $MirOS: src/lib/libc/Makefile,v 1.47 2015/07/18 22:48:19 tg Exp $
# $OpenBSD: Makefile,v 1.23 2005/06/29 14:05:08 mickey Exp $
#
# All library objects contain sccsid strings by default; they may be
# excluded as a space-saving measure.  To produce a library that does
# not contain these strings, delete -DLIBC_SCCS and -DSYSLIBC_SCCS
# from CFLAGS below.  To remove these strings from just the system call
# stubs, remove just -DSYSLIBC_SCCS from CFLAGS in Makefile.inc.

.include <bsd.own.mk>

SHLIB_VERSION?=		42.3	# note: If changes were made to the file
#				# src/lib/libc/include/thread_private.h or
#				# system calls have been added/changed,
#				# libpthread must also be updated.
LIB=			c
LINTFLAGS+=		-z

LIBCSRCDIR=		${.CURDIR}
KERNNOGCC=		#defined
KERNISUSR=		#defined
KERNBASE?=		${.CURDIR}/../../kern
.include "${LIBCSRCDIR}/Makefile.inc"
.include "${KERNBASE}/c/Makefile.inc"

SRCS+=			csuhlpr.c

DPADD+=			${.CURDIR}/libc.exp
LDFLAGS+=		-Wl,--version-script,${.CURDIR}/libc.exp

.include <bsd.lib.mk>
@


1.47
log
@bump; this was enough to get SHA2 in openssltool(1) apparently
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.46 2014/11/30 02:45:33 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		42.2	# note: If changes were made to the file
@


1.46
log
@use faster call for CAST, it does help

this also adds explicit_bzero and timingsafe_{b,mem}cmp to libc API
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.45 2014/02/19 17:43:26 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		42.1	# note: If changes were made to the file
@


1.45
log
@replace OAAT, NZAT, NZAAT with BAFH in virtually all places; bump libc major
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.44 2014/01/01 15:16:30 bsiegert Exp $
d12 1
a12 1
SHLIB_VERSION?=		42.0	# note: If changes were made to the file
@


1.44
log
@Add strtof and strtold to libc.

They are simple wrappers around the existing strtod implementation.
In MirOS, double and long double are the same anyway. This change is needed
because the two functions are part of C99, so there is a bunch of software
that uses them without a configure check.

ok tg@@
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.43 2012/12/31 20:19:50 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		41.12	# note: If changes were made to the file
a24 3
# drop with next major bump
SRCS+=			oaat.c
# also drop taitime stuff; move other stuff from libc to libmbfun
@


1.43
log
@introduce all SUSv4-mandated (and optional) errnos

as requested by bsiegert@@ this also splits EOVERFLOW from ERANGE,
thus bumping libc minor
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.42 2011/11/20 04:57:11 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		41.11	# note: If changes were made to the file
@


1.42
log
@first steps toward a new time API
• no DJB code (actual code) any more, only reimplementation of algorithms
  whose code is placed in USA PD
• no struct returns any more
• skip the extra tai_t step
• no _t suffix for types I define
• try to be a bit more elegant – I learned a lot since then, after all

the old ABI is still provided until we bump libc major
‣ the new API might wander off libc into libmbfun then, _too_

goal is functional equivalence (after all, it’s been proven correct)
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.41 2011/07/06 22:22:09 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		41.10	# note: If changes were made to the file
@


1.41
log
@replace uses of OAAT hash in all its variants by NZAT (mksh internal) or NZAAT (all others)
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.40 2010/10/08 20:52:01 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		41.9	# note: If changes were made to the file
d27 1
@


1.40
log
@revert libc minor bump, the time window is short enough to collapse with the last bump
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.39 2010/10/08 20:34:41 tg Exp $
d25 2
@


1.39
log
@• add GLOB_PERIOD and GLOB_NO_DOTDIRS to make this useful
• bump minor, as we have new functions and other stuff
• use our glob instead of GNU’s in base cvs

XXX this API check they do is ridiculous
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.38 2010/09/21 19:38:20 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		41.10	# note: If changes were made to the file
@


1.38
log
@* discourage arc4random_addrandom if arc4random_pushb_fast is faster but
  doesn’t harm (i.e. for everything that doesn’t specifically require KSA)
* discovered configure checks for symbols, not macros, so keep the older
  push* API around
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.37 2010/09/12 17:10:48 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		41.9	# note: If changes were made to the file
@


1.37
log
@new implementation of arc4random(3) API (except arc4random_uniform(3),
which though has been split off earlier today)

deprecate arc4random_push arc4random_pushb arc4random_pushk
in favour of arc4random_pushb_fast as well

hide internal symbols from user with a version script (only some,
until the next major bump)

make deprecated functions into macros already

switch some kernel code to use the new shared code already; rewrite
of kernel arc4random(9) will come next/later
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.36 2010/03/17 18:44:43 tg Exp $
a11 2
#XXX next major: rm crypt/arc4pushk.c and others, optu8to16vis
#XXX make new conversion: 0‥1F→2400, 80‥9F,EF80‥EF9F vis, EFA0‥EFFF lat1
@


1.36
log
@• document OPTU caveats and en-/decoder limits; check with mgk25’s
  UTF-8-test.txt (UTF-8 decoder capability and stress test) and then some
• deprecate optu8to16vis(3) which is unused and application layer anyway
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.35 2010/01/10 20:18:50 tg Exp $
d12 1
a12 1
#XXX next major: rm crypt/arc4pushk.c, optu8to16vis
d14 1
a14 1
SHLIB_VERSION?=		41.8	# note: If changes were made to the file
d30 3
@


1.35
log
@• kern: new KERNISUSR (defined by libc and libmdsup, but not by either
  bootloader or kernel), enables new NUSRCS, UIF_NUSRCS
• move MD strncmp() to kern
• move MI {str,wcs}case{,n}cmp to kern
• make wcs* functions NU not KU as we don’t need them in the kernel YET
• move __main to NU (it’s a joke anyway, I think)
• bootloader: make devsw_prefix_match case-insensitive
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.34 2010/01/07 22:34:48 tg Exp $
d12 2
a13 1
#XXX next major: rm crypt/arc4pushk.c
@


1.34
log
@facilitate code and data sharing: move some passwd(8) functions
sources by other stuff into libc or libutil; make commons out of
things like digits, base64 data or code, etc. (publish the data
parts as well, justin case) plus do some const cleanup
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.33 2009/11/09 21:36:38 tg Exp $
d22 1
@


1.33
log
@bump libc minor, to be able to pull in OAAT hash helper functions,
as well as globalise the hashpad things; sync mirmake and kernel
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.32 2009/08/30 18:02:08 tg Exp $
d13 1
a13 1
SHLIB_VERSION?=		41.7	# note: If changes were made to the file
@


1.32
log
@move the environ and __progname symbols from csu to libc,
in order to be able to build libc with -Wl,-z,defs
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.31 2008/12/27 21:17:53 tg Exp $
d13 1
a13 1
SHLIB_VERSION?=		41.6	# note: If changes were made to the file
@


1.31
log
@merge and wrap exec/exit functions better
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.30 2008/11/22 12:56:20 tg Exp $
d13 1
a13 1
SHLIB_VERSION?=		41.5	# note: If changes were made to the file
d26 2
@


1.30
log
@for fun, implement Plan 9's Rune API (with some int/long converted
to size_t/Rune/wint_t/wchar_t where they make sense, and with the
appropriate warn_references for runestrcpy and runestrcat, which
recommend wcslcpy and wcslcat now, as usual)

ABI is complete, two functions need to be filled out (Unicode Title case)

XXX if there are any functions missing which a Plan 9 fan desires,
XXX said fan shall contact me ASAP SVP
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.29 2008/08/17 00:19:07 tg Exp $
d12 2
a13 1
SHLIB_VERSION?=		41.4	# note: If changes were made to the file
@


1.29
log
@extended conversion functions: “forgiving” variants of mbrtowc¹ and
mbsnrtowcs² encoding raw octets as if they were from codepage 1252,
or ISO-8859-1, into Unicode, instead of the PUA OPTU-16 range.

① called optu8to16vis with semantics of optu8to16
② called mbsnrtowcsvis with semantics of mbsnrtowcs

Note: mbtowc, mbstowcs and mbsrtowcs can be emulated by calling
mbrtowc(vis) and mbsnrtowcs(vis), respectively, with appropriate
arguments. The semantics have been chosen to not exactly match
the standard since the extensions are reasonably easy to use and
granted since these functions are not standardised anyway.
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.28 2008/08/02 00:18:32 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		41.3	# note: If changes were made to the file
@


1.28
log
@bump minor for optu* function addition, tentatively
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.27 2008/08/01 16:14:47 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		41.2	# note: If changes were made to the file
@


1.27
log
@no more KSRCS, copy-to-libkern, etc. as we migrate to common source
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.26 2008/04/06 16:37:30 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		41.1	# note: If changes were made to the file
@


1.26
log
@need to bump minor: addition of a function
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.25 2007/06/21 14:40:22 tg Exp $
a24 24
copy-to-libkern:	copy-to-libkern-machind copy-to-libkern-machdep

.if make(copy-to-libkern)
copy-to-libkern-machind: ${KSRCS}
	cp -p ${.ALLSRC} ${LIBKERN}
.if defined(KINCLUDES) && !empty(KINCLUDES)
	(cd ${.CURDIR} ; cp -p ${KINCLUDES} ${LIBKERN})
.endif

copy-to-libkern-machdep: ${KMSRCS}
.if defined(KMSRCS) && !empty(KMSRCS)
	cp -p ${.ALLSRC} ${LIBKERN}/arch/${MACHINE_ARCH}
.endif
.if defined(KMINCLUDES) && !empty(KMINCLUDES)
	(cd ${.CURDIR} ; cp -p ${KMINCLUDES} ${LIBKERN}/arch/${MACHINE_ARCH})
.endif

rm-from-libkern:
	for i in ${KSRCS}; do rm -f ${LIBKERN}/$$i; done
.if defined(KMSRCS) && !empty(KMSRCS)
	for i in ${KMSRCS}; do rm -f ${LIBKERN}/arch/${MACHINE_ARCH}/$$i; done
.endif
.endif

@


1.25
log
@• libedit, libm, libocurses, libsectok, libskey, libssl, libusbhid, libutil:
  do something I should've long done and bump their majors – ABI changes are
  not only removals (or changes) of T/D symbols but also additions(!) of U
  symbols (i.e. imports); these changed during the <ctype.h> changes from a
  while ago and depend on newer libc; I did an nm(1) comparision against #9
  (release) to allow upgrading by source
• libc, uname: since I'm bumping a lot of other shlibs, it's a good time to
  bump the libc major as well and finally get rid of that struct utsname bug
  I introduced when I had no idea what I was doing, in MirOS #1 or so…
• libpthread: requires a major bump if libc major is bumped, or so they say
• bump os patchlevel

agreed bsiegert@@
XXX any more changes to do before release?
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.24 2007/06/15 16:00:02 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		41.0	# note: If changes were made to the file
@


1.24
log
@implement just another useful GNU extension: strndup(3)
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.23 2007/05/19 22:08:26 tg Exp $
d12 1
a12 2
# on major bump to 41 look at gen/uname.c and /sys/utsname.h
SHLIB_VERSION?=		40.5	# note: If changes were made to the file
@


1.23
log
@bump minor: new system calls have been added
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.22 2007/05/17 14:24:43 tg Exp $
d13 1
a13 1
SHLIB_VERSION?=		40.4	# note: If changes were made to the file
@


1.22
log
@d'oh, this was obviously stupid. new libc with old apps was safe, but new
apps allocated only 1280 bytes for a struct utsname on the stack, trigge-
ring propolice in make(1) at end of main() because of an off-by-one over-
write. until we bump libc major, increase struct utsname size by one byte
again.
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.21 2007/05/16 22:03:52 tg Exp $
d13 1
a13 1
SHLIB_VERSION?=		40.3	# note: If changes were made to the file
@


1.21
log
@okay, time to clear up one of the earliest messes in MirBSD's history…
(yes I was young and stup^Wunknowingly did this)

• lib/libc/gen/uname.c: do not fill in the struct utsname.patchlevel
  field any more.
• X11/xc/config/imake/imake.c: use sysctl kern.ospatchlevel, instead
  of relying on non-standard/unsafe struct utsname.patchlevel.
• lib/libc/gen/uname.c: in order to avoid a libc version bump, bzero
  the struct utsname * argument, so that the former patchlevel field
  becomes a NUL string.
• sys/sys/utsname.h: revert, i.e. delete the “patchlevel” field from
  struct utsname. Do NOT bump the os patchlevel, because this change
  does not affect the kernel/userland interface – that field has ne-
  ver been used in kernel land. This change, back then, was not safe
  as per ABI policy.
• lib/libc/gen/uname.c, share/mk/sys.mk, sys/sys/param.h: patchlevel
  bump for size change of struct utsname, used in gen/uname.c to add
  1 to the number of octets to bzero(), ifdef'd (so that new source,
  old includes, is safe).
• lib/libc/Makefile: mention gen/uname.c change for next major bump.

All other users of struct utsname in the base system have been taken
care of already (most notably uname(1); the others didn't use the os
patchlevel anyway).
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.20 2007/05/07 02:26:10 tg Exp $
d12 1
a12 1
# on major bump to 41 look at gen/uname.c
@


1.20
log
@steal svis(3) &c. from TNF
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.19 2007/02/05 20:16:08 tg Exp $
d12 1
@


1.19
log
@proof-of-concept implementation of a few functions for the
new "kern" directory containing stuff shared between
* userland (-fhosted -lgcc)
* kernel (-ffreestanding -D_KERNEL -nostdlib)
* bootloader (-ffreestanding -D_STANDALONE -nostdlib)

Here, userland and kernel share some functions not for the
bootloader (e.g. utf-8 stuff), while kernel and bootloader
share a few libgcc replacement functions.

I took the htonl() &c. functions because they were pretty
easy to implement; no sparc assembly version because it's
a 'no-op' and I trust gcc so much as to produce optimised
output for the type foo(type x) { return (x); } case.

Not tested.

Most of the functions will be written "on demand" and re-
written from scratch by me.
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.18 2006/11/20 23:50:47 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		40.2	# note: If changes were made to the file
@


1.18
log
@implement mbsnrtowcs(3) and wcsnrtombs(3) - including manual pages

these are only visible if any of
	_GNU_SOURCE and not __STRICT_ANSI__ (gcc -ansi)
	(_OPENBSD_SOURCE or _NETBSD_SOURCE) and none of (_ANSI_SOURCE,
	    XPG and POSIX stuff) and not __STRICT_ANSI__ (gcc -ansi)
	_ALL_SOURCE and not __STRICT_ANSI__ (gcc -ansi)
are defined, since they're GNU (and MirOS) extensions
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.17 2006/11/03 18:10:41 tg Exp $
d16 2
a17 2
LIB=c
LINTFLAGS+=-z
d19 3
a21 1
LIBCSRCDIR=${.CURDIR}
d23 1
@


1.17
log
@Switch to NetBSD libm
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.16 2006/11/01 20:15:38 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		40.1	# note: If changes were made to the file
@


1.16
log
@Due to <ctype.h> inline function change (global data removal),
the last commit required a major bump
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.15 2006/10/02 02:56:58 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		40.0	# note: If changes were made to the file
@


1.15
log
@add GNU getline(3), for compatibility reasons, not to be used in
new code, that's why no manual page either
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.14 2006/09/17 19:28:58 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		39.3	# note: If changes were made to the file
@


1.14
log
@add the SFV (from cksfv) and TIGER hashes
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.13 2006/08/18 13:02:16 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		39.2	# note: If changes were made to the file
@


1.13
log
@implement new arc4random_pushb(3) API
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.12 2006/07/03 16:14:41 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		39.1	# note: If changes were made to the file
@


1.12
log
@GNU fileutils internally uses an
int mbsnwidth (const char *string, size_t nbytes, int flags);

remove our libc-internal mbswidth() because implementors
"usually" do want to roll their own - e.g. to cope with
invalid characters in multibyte sequences their own way.
keep it in Attic/ for reference tho.

bump libc major
sorry guys
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.11 2006/06/01 23:00:37 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		39.0	# note: If changes were made to the file
@


1.11
log
@bump libc version; fix includes; bump os patchlevel
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.10 2006/05/26 13:44:07 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		38.4	# note: If changes were made to the file
@


1.10
log
@better be careful with the recent int -> bool change of i18n
(bump minor - on all platforms, bool gets promoted to int)
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.9 2006/01/31 20:47:14 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		38.3	# note: If changes were made to the file
@


1.9
log
@correct my historical error to setting ENOCOFFEE=ENOSYS
since the former can also be returned from userland
(bump libc minor since array size changes)
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.8 2006/01/31 19:57:32 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		38.2	# note: If changes were made to the file
@


1.8
log
@don't build the libc tags any more
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.7 2006/01/24 20:14:48 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		38.1	# note: If changes were made to the file
@


1.7
log
@add __fnlist internal function
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.6 2005/09/22 20:39:57 tg Exp $
a17 1
CLEANFILES+=tags
a45 12
all: tags
tags: ${SRCS}
	ctags -w ${.ALLSRC:M*.c}
	egrep "^SYSENTRY(.*)|^ENTRY(.*)|^FUNC(.*)|^SYSCALL(.*)" \
	    /dev/null ${.ALLSRC:M*.S} | \
	    sed "s;\([^:]*\):\([^(]*\)(\([^, )]*\)\(.*\);\3 \1 /^\2(\3\4$$/;" \
	    >> tags; sort -o tags tags

beforeinstall:
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m 444 tags \
		${DESTDIR}/var/db/lib${LIB}.tags

@


1.6
log
@merge
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.5 2005/07/01 13:51:24 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		38.0	# note: If changes were made to the file
@


1.5
log
@remove extattr => bump major
@
text
@d1 2
a2 2
# $MirOS: src/lib/libc/Makefile,v 1.4 2005/04/29 18:34:49 tg Exp $
# $OpenBSD: Makefile,v 1.22 2004/01/28 17:58:12 deraadt Exp $
d12 1
a12 1
SHLIB_VERSION?=		37.0	# note: If changes were made to the file
d25 1
d45 1
@


1.4
log
@(tentative) merge, more to come
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.3 2005/03/28 21:22:19 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		36.0	# note: If changes were made to the file
@


1.3
log
@bump minor: tzset() now does (void)tai_leaps() too, and reentrantly.
@
text
@d1 1
a1 1
# $MirOS: src/lib/libc/Makefile,v 1.2 2005/03/06 20:28:25 tg Exp $
d12 1
a12 1
SHLIB_VERSION?=		35.2	# note: If changes were made to the file
@


1.2
log
@merge src/lib
@
text
@d1 1
a1 1
# $MirOS$
d12 1
a12 1
SHLIB_VERSION?=		35.1	# note: If changes were made to the file
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#	$OpenBSD: Makefile,v 1.22 2004/01/28 17:58:12 deraadt Exp $
d8 1
a8 8
# stubs, remove just -DSYSLIBC_SCCS from CFLAGS.
#
# The NLS (message catalog) functions are always in libc.  To choose that
# strerror(), perror(), strsignal(), psignal(), etc. actually call the NLS
# functions, put -DNLS on the CFLAGS line below.
#
# The YP functions are always in libc. To choose that getpwent() and friends
# actually call the YP functions, put -DYP on the CFLAGS line below.
d12 4
d17 1
a17 1
LINTFLAGS=-z
a18 1
#CFLAGS+=-Werror
a22 2
NLS=	C.msg Pig.msg de.msg es.msg fi.msg fr.msg nl.msg no.msg ru.msg sv.msg

@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2005/06/29 14:05:08 mickey Exp $
a29 1
.if make(copy-to-libkern)
a48 1
.endif
@

