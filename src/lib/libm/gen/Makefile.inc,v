head	1.2;
access;
symbols
	cvs-201110182115:1.1.3.1
	MIRBSD_10:1.1.3.1.0.2
	MIRBSD_10_BASE:1.1.3.1
	cvs-200611031400:1.1.3.1
	netbsd:1.1.3;
locks; strict;
comment	@# @;


1.2
date	2012.09.04.18.16.14;	author tg;	state Exp;
branches;
next	1.1;
commitid	100504644903517C0CE;

1.1
date	2006.11.03.14.20.58;	author tg;	state Exp;
branches
	1.1.3.1;
next	;
commitid	100454B505850533E95;

1.1.3.1
date	2006.11.03.14.20.58;	author tg;	state Exp;
branches;
next	;
commitid	100454B505850533E95;


desc
@@


1.2
log
@tentative major bump to libm.so.7.0 which probably should have been
done instead of a minor bump to 6.2 back then… but what few did we
know… anyway, basically remove the “long double” remnants, since if
you were using it on MirBSD, you were Doing It Wrong already anyway
as sparc only has 32/64 bit float, and while i387 has 32/64/80 bit,
our FPUCW limits precision to 64 bit (and the ABIs are at issue for
whether “long double” should be stored with 80 or 96 bit and *THEN*
SSE wants 128-bit alignment for them, so…)

This removes “long double” functions nobody should have been using,
on i386, which doesn’t really warrant a major bump, and __infinity,
which our new libm provides as GCC builtin (and __infinityf was not
included anyway).

BUT! Do not use this yet. This needs verification on sparc, where a
Perl build failed due to having *more* (but actually even uselesser
– heh) long double stubs…
@
text
@# $MirOS$
# $NetBSD: Makefile.inc,v 1.1 2006/03/15 22:07:09 kleink Exp $

# gen sources
.PATH:	${.CURDIR}/gen
CPPFLAGS+=-I${.CURDIR}/gen

SRCS+=	nan.c nanf.c

MAN+=	nan.3

MLINKS+=nan.3 nanf.3
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#	$NetBSD: Makefile.inc,v 1.1 2006/03/15 22:07:09 kleink Exp $
d8 1
a8 1
SRCS+=	nan.c nanf.c nanl.c
d12 1
a12 2
MLINKS+=nan.3 nanf.3 \
	nan.3 nanl.3
@


1.1.3.1
log
@Laugh at OpenBSD's libm and import NetBSD's
@
text
@@
