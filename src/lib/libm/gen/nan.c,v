head	1.1;
branch	1.1.3;
access;
symbols
	cvs-201110182115:1.1.3.2
	MIRBSD_10:1.1.3.1.0.2
	MIRBSD_10_BASE:1.1.3.1
	cvs-200611031400:1.1.3.1
	netbsd:1.1.3;
locks; strict;
comment	@ * @;


1.1
date	2006.11.03.14.20.58;	author tg;	state Exp;
branches
	1.1.3.1;
next	;
commitid	100454B505850533E95;

1.1.3.1
date	2006.11.03.14.20.58;	author tg;	state Exp;
branches;
next	1.1.3.2;
commitid	100454B505850533E95;

1.1.3.2
date	2011.10.18.19.20.26;	author bsiegert;	state Exp;
branches;
next	;
commitid	1004E9DD18376042FF5;


desc
@@


1.1
log
@Initial revision
@
text
@/* $NetBSD: nan.c,v 1.1 2006/03/15 22:07:09 kleink Exp $ */

/*-
 * Copyright (c) 2006 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Klaus Klein.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/cdefs.h>
#if defined(LIBM_SCCS) && !defined(lint) && !defined(NAN_FUNCTION)
__RCSID("$NetBSD: nan.c,v 1.1 2006/03/15 22:07:09 kleink Exp $");
#endif /* LIBM_SCCS and not lint */

#include <assert.h>
#include <math.h>
#include <stddef.h>
#include <stdlib.h>
#include <string.h>


#ifndef NAN_FUNCTION
#define	NAN_FUNCTION	nan
#define	NAN_TYPE	double
#define	NAN_STRTOD	strtod
#endif

NAN_TYPE
NAN_FUNCTION(const char *tagp)
{
	const char *nstr;
	char *buf;
	NAN_TYPE res;

	_DIAGASSERT(tagp != NULL);

	nstr = "NAN()";
	buf = NULL;

	if (tagp[0] != '\0') {
		size_t l;

		l = strlen(tagp);
		buf = malloc(5 + l + 1);

		if (buf != NULL) {
			/* Avoiding stdio in libm. */
			memcpy(buf,		"NAN(",	4);
			memcpy(buf + 4,		tagp,	l);
			memcpy(buf + 4 + l,	")",	2);
			nstr = buf;
		} else {
			/* Best effort: Fall back to "NAN()". */
		}
	}

	res = NAN_STRTOD(nstr, NULL);

	if (buf != NULL)
		free(buf);

	return res;
}
@


1.1.3.1
log
@Laugh at OpenBSD's libm and import NetBSD's
@
text
@@


1.1.3.2
log
@Import current libm from NetBSD, with the directories complex, noieee_src, arch/!i387 removed.

The idea is to get fmin and fmax, which are needed by some newer software.
@
text
@d1 1
a1 1
/* $NetBSD: nan.c,v 1.2 2008/04/28 20:23:01 martin Exp $ */
d18 7
d41 1
a41 1
__RCSID("$NetBSD: nan.c,v 1.2 2008/04/28 20:23:01 martin Exp $");
@

