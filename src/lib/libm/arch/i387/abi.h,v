head	1.1;
branch	1.1.3;
access;
symbols
	cvs-201110182115:1.1.3.2
	MIRBSD_10:1.1.3.1.0.2
	MIRBSD_10_BASE:1.1.3.1
	cvs-200611031400:1.1.3.1
	netbsd:1.1.3;
locks; strict;
comment	@ * @;


1.1
date	2006.11.03.14.20.58;	author tg;	state Exp;
branches
	1.1.3.1;
next	;
commitid	100454B505850533E95;

1.1.3.1
date	2006.11.03.14.20.58;	author tg;	state Exp;
branches;
next	1.1.3.2;
commitid	100454B505850533E95;

1.1.3.2
date	2011.10.18.19.20.17;	author bsiegert;	state Exp;
branches;
next	;
commitid	1004E9DD18376042FF5;


desc
@@


1.1
log
@Initial revision
@
text
@/*	$NetBSD: abi.h,v 1.3 2004/03/22 13:41:09 wiz Exp $	*/

/*
 * Written by Frank van der Linden (fvdl@@wasabisystems.com)
 */

/*
 * The x86-64 ABI specifies that float, double and long double
 * arguments are passed in SSE2 (xmm) registers. Unfortunately,
 * there is no way to push those on to the FP stack, which is
 * where the fancier instructions get their arguments from.
 *
 * Define some prologues and epilogues to store and retrieve
 * xmm regs to local variables.
 */

#ifdef __x86_64__

#define ARG_DOUBLE_ONE		-8(%rsp)
#define ARG_DOUBLE_TWO		-16(%rsp)
#define ARG_FLOAT_ONE		-4(%rsp)
#define ARG_FLOAT_TWO		-8(%rsp)

#define XMM_ONE_ARG_DOUBLE_PROLOGUE \
	movsd	%xmm0, ARG_DOUBLE_ONE
	
#define XMM_TWO_ARG_DOUBLE_PROLOGUE \
	movsd	%xmm0, ARG_DOUBLE_ONE ; \
	movsd	%xmm1, ARG_DOUBLE_TWO

#define XMM_ONE_ARG_FLOAT_PROLOGUE \
	movss	%xmm0, ARG_FLOAT_ONE

#define XMM_TWO_ARG_FLOAT_PROLOGUE \
	movss	%xmm0, ARG_FLOAT_ONE ; \
	movss	%xmm1, ARG_FLOAT_TWO

#define XMM_DOUBLE_EPILOGUE \
	fstpl ARG_DOUBLE_ONE ; \
	movsd ARG_DOUBLE_ONE, %xmm0

#define XMM_FLOAT_EPILOGUE \
	fstps ARG_FLOAT_ONE ; \
	movss ARG_FLOAT_ONE, %xmm0

#define FLDL_VAR(x)	fldl x(%rip)

#else

#define ARG_DOUBLE_ONE		4(%esp)
#define ARG_DOUBLE_TWO		12(%esp)
#define ARG_FLOAT_ONE		4(%esp)
#define ARG_FLOAT_TWO		8(%esp)

#define XMM_ONE_ARG_DOUBLE_PROLOGUE
#define XMM_TWO_ARG_DOUBLE_PROLOGUE
#define XMM_ONE_ARG_FLOAT_PROLOGUE
#define XMM_TWO_ARG_FLOAT_PROLOGUE

#define XMM_DOUBLE_EPILOGUE
#define XMM_FLOAT_EPILOGUE

#ifdef PIC
#define FLDL_VAR(x) \
	PIC_PROLOGUE ; \
	fldl PIC_GOTOFF(x) ; \
	PIC_EPILOGUE
#else
#define FLDL_VAR(x) \
	fldl x

#endif
#endif
@


1.1.3.1
log
@Laugh at OpenBSD's libm and import NetBSD's
@
text
@@


1.1.3.2
log
@Import current libm from NetBSD, with the directories complex, noieee_src, arch/!i387 removed.

The idea is to get fmin and fmax, which are needed by some newer software.
@
text
@d1 1
a1 1
/*	$NetBSD: abi.h,v 1.7 2011/06/18 22:19:52 joerg Exp $	*/
d8 2
a9 2
 * The x86-64 ABI specifies that float and double arguments
 * are passed in SSE2 (xmm) registers. Unfortunately,
a18 2
#define ARG_LONG_DOUBLE_ONE	8(%rsp)
#define ARG_LONG_DOUBLE_TWO	24(%rsp)
a19 2
#define ARG_DOUBLE_ONE_LSW	-8(%rsp)
#define ARG_DOUBLE_ONE_MSW	-4(%rsp)
a49 2
#define ARG_LONG_DOUBLE_ONE	4(%esp)
#define ARG_LONG_DOUBLE_TWO	16(%esp)
a50 2
#define ARG_DOUBLE_ONE_LSW	4(%esp)
#define ARG_DOUBLE_ONE_MSW	8(%esp)
@

