head	1.2;
access;
symbols
	cvs-201110182115:1.1.3.1
	MIRBSD_10:1.2.0.2
	MIRBSD_10_BASE:1.2
	cvs-200611031400:1.1.3.1
	netbsd:1.1.3
	OPENBSD_4_0:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2006.11.03.18.11.04;	author tg;	state Exp;
branches;
next	1.1;
commitid	100454B862956081199;

1.1
date	2005.02.05.17.25.21;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.3.1;
next	;

1.1.1.1
date	2005.02.05.17.25.21;	author tg;	state Exp;
branches;
next	;

1.1.3.1
date	2006.11.03.14.20.59;	author tg;	state Exp;
branches;
next	;
commitid	100454B505850533E95;


desc
@@


1.2
log
@Switch to NetBSD libm
@
text
@/* w_j1f.c -- float version of w_j1.c.
 * Conversion to float by Ian Lance Taylor, Cygnus Support, ian@@cygnus.com.
 */

/*
 * ====================================================
 * Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
 *
 * Developed at SunPro, a Sun Microsystems, Inc. business.
 * Permission to use, copy, modify, and distribute this
 * software is freely granted, provided that this notice
 * is preserved.
 * ====================================================
 */

#include <sys/cdefs.h>
#if defined(LIBM_SCCS) && !defined(lint)
__RCSID("$NetBSD: w_j1f.c,v 1.6 2002/05/26 22:02:01 wiz Exp $");
#endif

/*
 * wrapper of j1f,y1f
 */

#include "math.h"
#include "math_private.h"

float
j1f(float x)		/* wrapper j1f */
{
#ifdef _IEEE_LIBM
	return __ieee754_j1f(x);
#else
	float z;
	z = __ieee754_j1f(x);
	if(_LIB_VERSION == _IEEE_ || isnanf(x) ) return z;
	if(fabsf(x)>(float)X_TLOSS) {
		/* j1(|x|>X_TLOSS) */
	        return (float)__kernel_standard((double)x,(double)x,136);
	} else
	    return z;
#endif
}

float
y1f(float x)		/* wrapper y1f */
{
#ifdef _IEEE_LIBM
	return __ieee754_y1f(x);
#else
	float z;
	z = __ieee754_y1f(x);
	if(_LIB_VERSION == _IEEE_ || isnanf(x) ) return z;
        if(x <= (float)0.0){
                if(x==(float)0.0)
                    /* d= -one/(x-x); */
                    return (float)__kernel_standard((double)x,(double)x,110);
                else
                    /* d = zero/(x-x); */
                    return (float)__kernel_standard((double)x,(double)x,111);
        }
	if(x>(float)X_TLOSS) {
		/* y1(x>X_TLOSS) */
	        return (float)__kernel_standard((double)x,(double)x,137);
	} else
	    return z;
#endif
}
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
 * software is freely granted, provided that this notice 
d16 1
d18 1
a18 1
static char rcsid[] = "$NetBSD: w_j1f.c,v 1.3 1995/05/10 20:49:17 jtc Exp $";
d21 2
a22 2
/* 
 * wrapper of j1f,y1f 
@


1.1.3.1
log
@Laugh at OpenBSD's libm and import NetBSD's
@
text
@d11 1
a11 1
 * software is freely granted, provided that this notice
a15 1
#include <sys/cdefs.h>
d17 1
a17 1
__RCSID("$NetBSD: w_j1f.c,v 1.6 2002/05/26 22:02:01 wiz Exp $");
d20 2
a21 2
/*
 * wrapper of j1f,y1f
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
