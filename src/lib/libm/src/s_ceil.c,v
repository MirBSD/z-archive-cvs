head	1.3;
access;
symbols
	cvs-201110182115:1.1.3.2
	MIRBSD_10:1.2.0.2
	MIRBSD_10_BASE:1.2
	cvs-200611031400:1.1.3.1
	netbsd:1.1.3
	OPENBSD_4_0:1.1.1.2
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2011.10.18.19.46.27;	author bsiegert;	state Exp;
branches;
next	1.2;
commitid	1004E9DD78368B8F2A9;

1.2
date	2006.11.03.18.10.58;	author tg;	state Exp;
branches;
next	1.1;
commitid	100454B862956081199;

1.1
date	2005.02.05.17.25.18;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.3.1;
next	;

1.1.1.1
date	2005.02.05.17.25.18;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.11.03.01.33.23;	author tg;	state Exp;
branches;
next	;
commitid	100454A9C75705F73D8;

1.1.3.1
date	2006.11.03.14.20.59;	author tg;	state Exp;
branches;
next	1.1.3.2;
commitid	100454B505850533E95;

1.1.3.2
date	2011.10.18.19.20.50;	author bsiegert;	state Exp;
branches;
next	;
commitid	1004E9DD18376042FF5;


desc
@@


1.3
log
@Merge NetBSD libm. Makefile needs more work, I think.
@
text
@/* @@(#)s_ceil.c 5.1 93/09/24 */
/*
 * ====================================================
 * Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
 *
 * Developed at SunPro, a Sun Microsystems, Inc. business.
 * Permission to use, copy, modify, and distribute this
 * software is freely granted, provided that this notice
 * is preserved.
 * ====================================================
 */

#include <sys/cdefs.h>
#if defined(LIBM_SCCS) && !defined(lint)
__RCSID("$MirOS: src/lib/libm/src/s_ceil.c,v 1.2 2006/11/03 18:10:58 tg Exp $");
__RCSID("$NetBSD: s_ceil.c,v 1.13 2009/02/16 01:22:18 lukem Exp $");
#endif

/*
 * ceil(x)
 * Return x rounded toward -inf to integral value
 * Method:
 *	Bit twiddling.
 * Exception:
 *	Inexact flag raised if x not equal to ceil(x).
 */

#include "math.h"
#include "math_private.h"

static const double huge = 1.0e300;

double
ceil(double x)
{
	int32_t i0,i1,jj0;
	u_int32_t i,j;
	EXTRACT_WORDS(i0,i1,x);
	jj0 = ((i0>>20)&0x7ff)-0x3ff;
	if(jj0<20) {
	    if(jj0<0) { 	/* raise inexact if x != 0 */
		if(huge+x>0.0) {/* return 0*sign(x) if |x|<1 */
		    if(i0<0) {i0=0x80000000;i1=0;}
		    else if((i0|i1)!=0) { i0=0x3ff00000;i1=0;}
		}
	    } else {
		i = (0x000fffff)>>jj0;
		if(((i0&i)|i1)==0) return x; /* x is integral */
		if(huge+x>0.0) {	/* raise inexact flag */
		    if(i0>0) i0 += (0x00100000)>>jj0;
		    i0 &= (~i); i1=0;
		}
	    }
	} else if (jj0>51) {
	    if(jj0==0x400) return x+x;	/* inf or NaN */
	    else return x;		/* x is integral */
	} else {
	    i = ((u_int32_t)(0xffffffff))>>(jj0-20);
	    if((i1&i)==0) return x;	/* x is integral */
	    if(huge+x>0.0) { 		/* raise inexact flag */
		if(i0>0) {
		    if(jj0==20) i0+=1;
		    else {
			j = i1 + (1<<(52-jj0));
			if(j<(uint32_t)i1) i0+=1;	/* got a carry */
			i1 = j;
		    }
		}
		i1 &= (~i);
	    }
	}
	INSERT_WORDS(x,i0,i1);
	return x;
}
@


1.2
log
@Switch to NetBSD libm
@
text
@d15 2
a16 2
__RCSID("$MirOS$");
__RCSID("$NetBSD: s_ceil.c,v 1.11 2002/05/26 22:01:54 wiz Exp $");
@


1.1
log
@Initial revision
@
text
@d8 1
a8 1
 * software is freely granted, provided that this notice 
d13 1
d15 2
a16 1
static char rcsid[] = "$NetBSD: s_ceil.c,v 1.8 1995/05/10 20:46:53 jtc Exp $";
d36 1
a36 1
	int32_t i0,i1,j0;
d39 3
a41 3
	j0 = ((i0>>20)&0x7ff)-0x3ff;
	if(j0<20) {
	    if(j0<0) { 	/* raise inexact if x != 0 */
d43 1
a43 1
		    if(i0<0) {i0=0x80000000;i1=0;} 
d47 1
a47 1
		i = (0x000fffff)>>j0;
d50 1
a50 1
		    if(i0>0) i0 += (0x00100000)>>j0;
d54 2
a55 2
	} else if (j0>51) {
	    if(j0==0x400) return x+x;	/* inf or NaN */
d58 1
a58 1
	    i = ((u_int32_t)(0xffffffff))>>(j0-20);
d62 1
a62 1
		    if(j0==20) i0+=1; 
d64 2
a65 2
			j = i1 + (1<<(52-j0));
			if(j<i1) i0+=1;	/* got a carry */
@


1.1.3.1
log
@Laugh at OpenBSD's libm and import NetBSD's
@
text
@d8 1
a8 1
 * software is freely granted, provided that this notice
a12 1
#include <sys/cdefs.h>
d14 1
a14 1
__RCSID("$NetBSD: s_ceil.c,v 1.11 2002/05/26 22:01:54 wiz Exp $");
d41 1
a41 1
		    if(i0<0) {i0=0x80000000;i1=0;}
d60 1
a60 1
		    if(j0==20) i0+=1;
@


1.1.3.2
log
@Import current libm from NetBSD, with the directories complex, noieee_src, arch/!i387 removed.

The idea is to get fmin and fmax, which are needed by some newer software.
@
text
@d15 1
a15 1
__RCSID("$NetBSD: s_ceil.c,v 1.13 2009/02/16 01:22:18 lukem Exp $");
d35 1
a35 1
	int32_t i0,i1,jj0;
d38 3
a40 3
	jj0 = ((i0>>20)&0x7ff)-0x3ff;
	if(jj0<20) {
	    if(jj0<0) { 	/* raise inexact if x != 0 */
d46 1
a46 1
		i = (0x000fffff)>>jj0;
d49 1
a49 1
		    if(i0>0) i0 += (0x00100000)>>jj0;
d53 2
a54 2
	} else if (jj0>51) {
	    if(jj0==0x400) return x+x;	/* inf or NaN */
d57 1
a57 1
	    i = ((u_int32_t)(0xffffffff))>>(jj0-20);
d61 1
a61 1
		    if(jj0==20) i0+=1;
d63 2
a64 2
			j = i1 + (1<<(52-jj0));
			if(j<(u_int32_t)i1) i0+=1;	/* got a carry */
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import OpenBSD 4.0's libm
@
text
@d34 1
a34 1
	int32_t i0,i1,jj0;
d37 3
a39 3
	jj0 = ((i0>>20)&0x7ff)-0x3ff;
	if(jj0<20) {
	    if(jj0<0) { 	/* raise inexact if x != 0 */
d45 1
a45 1
		i = (0x000fffff)>>jj0;
d48 1
a48 1
		    if(i0>0) i0 += (0x00100000)>>jj0;
d52 2
a53 2
	} else if (jj0>51) {
	    if(jj0==0x400) return x+x;	/* inf or NaN */
d56 1
a56 1
	    i = ((u_int32_t)(0xffffffff))>>(jj0-20);
d60 1
a60 1
		    if(jj0==20) i0+=1; 
d62 1
a62 1
			j = i1 + (1<<(52-jj0));
@

