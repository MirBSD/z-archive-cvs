head	1.1;
branch	1.1.3;
access;
symbols
	cvs-201110182115:1.1.3.2
	MIRBSD_10:1.1.3.1.0.2
	MIRBSD_10_BASE:1.1.3.1
	cvs-200611031400:1.1.3.1
	netbsd:1.1.3;
locks; strict;
comment	@.\" @;


1.1
date	2006.11.03.14.20.58;	author tg;	state Exp;
branches
	1.1.3.1;
next	;
commitid	100454B505850533E95;

1.1.3.1
date	2006.11.03.14.20.58;	author tg;	state Exp;
branches;
next	1.1.3.2;
commitid	100454B505850533E95;

1.1.3.2
date	2011.10.18.19.20.31;	author bsiegert;	state Exp;
branches;
next	;
commitid	1004E9DD18376042FF5;


desc
@@


1.1
log
@Initial revision
@
text
@.\"	$NetBSD: ldexp.3,v 1.1 2006/07/03 16:03:56 drochner Exp $
.\"
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the American National Standards Committee X3, on Information
.\" Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)ldexp.3	8.2 (Berkeley) 4/19/94
.\"
.Dd March 21, 2006
.Dt LDEXP 3
.Os
.Sh NAME
.Nm ldexp
.Nd multiply floating-point number by integral power of 2
.Sh LIBRARY
.Lb libm
.Sh SYNOPSIS
.In math.h
.Ft double
.Fn ldexp "double x" "int exp"
.Ft float
.Fn ldexpf "float x" "int exp"
.Sh DESCRIPTION
The
.Fn ldexp
function multiplies a floating-point number by an integral
power of 2.
.Sh RETURN VALUES
The
.Fn ldexp
function returns the value of
.Fa x
times 2 raised to the power
.Fa exp .
.Pp
If the input
.Va x
is a NaN, infinity, or 0.0, it is returned unchanged.
.Pp
If the result would cause an overflow,
the global variable
.Va errno
is set to
.Er ERANGE
and infinity is returned, with the same sign as
.Fa x .
.Pp
If the result would cause underflow to 0.0,
the global variable
.Va errno
is set to
.Er ERANGE
and the value 0.0 is returned.
.Sh SEE ALSO
.Xr frexp 3 ,
.Xr math 3 ,
.Xr modf 3
.Sh STANDARDS
The
.Fn ldexp
function conforms to
.St -ansiC .
@


1.1.3.1
log
@Laugh at OpenBSD's libm and import NetBSD's
@
text
@@


1.1.3.2
log
@Import current libm from NetBSD, with the directories complex, noieee_src, arch/!i387 removed.

The idea is to get fmin and fmax, which are needed by some newer software.
@
text
@d1 1
a1 1
.\"	$NetBSD: ldexp.3,v 1.4 2011/09/18 05:33:13 jruoho Exp $
d36 1
a36 1
.Dd September 18, 2011
d40 1
a40 2
.Nm ldexp ,
.Nm ldexpf
d53 2
a54 9
family of functions compute
.Bd -ragged -offset indent
.Va x
*
2^\fIexp\fR
.Ed
.Pp
for a real floating-point number
.Fa x .
d56 3
a58 1
The functions return the value of
d62 19
a80 28
Otherwise the following may occur:
.Bl -enum -offset indent
.It
If
.Fa x
is \*(Na, a \*(Na is returned.
.It
If
.Fa exp
is zero or
.Fa x
is either \*(Pm 0 or \*(Pm\[if],
.Fa x
is returned.
.It
If the call would cause an overflow, a range error occurs and either
.Dv \*(Pm\*HHUGE_VAL ,
.Dv  \*(Pm\*HHUGE_VALF ,
or
.Dv  \*(Pm\*HHUGE_VALL
is returned, depending on the sign of
.Fa x
and the type of the return value.
.It
If an underflow would be caused by the correct value,
and the value is not representable, either 0.0 or
an implementation-defined value is returned.
.El
d86 4
a89 2
The described functions conform to
.St -isoC-99 .
@

