head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2014.02.19.16.59.33;	author tg;	state Exp;
branches;
next	1.3;
commitid	1005304E30900931FDD;

1.3
date	2013.10.31.20.06.34;	author tg;	state Exp;
branches;
next	1.2;
commitid	1005272B7081B0E5655;

1.2
date	2011.07.17.17.20.20;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004E2319DC7B946E62;

1.1
date	2010.08.14.20.53.06;	author tg;	state Exp;
branches;
next	;
commitid	1004C6702403C804E92;


desc
@@


1.4
log
@move some of our custom functions from libc to libmbfun (preparing a libc major bump); drop plan9-like rune functions
@
text
@/* $MirOS: src/lib/libmbfun/mbfun.h,v 1.3 2013/10/31 20:06:34 tg Exp $ */

/*-
 * Copyright (c) 2010, 2011, 2013, 2014
 *	Thorsten Glaser <tg@@mirbsd.org>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 *-
 * Function declarations for libmbfun (MirBSD-local functions)
 */

#ifndef _MBFUN_H
#define _MBFUN_H

#include <syskern/libckern.h>

__BEGIN_DECLS
/* allocating multibyte <-> wide character string conversion */
wchar_t *ambsntowcs(const char *, size_t)
    __attribute__((__nonnull__(1)))
    __attribute__((__bounded__(__string__, 1, 2)));
wchar_t *ambstowcs(const char *)
    __attribute__((__nonnull__(1)));
char *awcsntombs(const wchar_t *, size_t)
    __attribute__((__nonnull__(1)));
char *awcstombs(const wchar_t *)
    __attribute__((__nonnull__(1)));
/* support routine for lseek+read to make 2048-byte aligned I/O */
ssize_t cdblockedread(int, void *, size_t, off_t)
    __attribute__((__bounded__(__buffer__, 2, 3)));
/* legacy UTF-8 or cp1252-or-latin1 to wchar conversion */
#undef mbsnrtowcsvis
#define mbsnrtowcsvis mbsnrtowcsvis
size_t	mbsnrtowcsvis(wchar_t *, const char **, size_t, size_t, mbstate_t *);
#undef optu8to16vis
#define optu8to16vis optu8to16vis
size_t	optu8to16vis(wchar_t *, const char *, size_t, mbstate_t *)
    __attribute__((__bounded__(__string__, 2, 3)));
__END_DECLS

#endif
@


1.3
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libmbfun/mbfun.h,v 1.2 2011/07/17 17:20:20 tg Exp $ */
d4 1
a4 1
 * Copyright (c) 2010, 2011, 2013
d31 10
d44 8
@


1.2
log
@• pull in <syskern/libckern.h>
• use double-underscore attribute forms
@
text
@d1 1
a1 1
/* $MirOS: src/lib/libmbfun/mbfun.h,v 1.1 2010/08/14 20:53:06 tg Exp $ */
d4 1
a4 1
 * Copyright (c) 2010, 2011
d33 1
a33 1
    __attribute__((__bounded__ (__buffer__, 2, 3)));
@


1.1
log
@new library for all those pesky functions like cdblockedread() or
my arc4random extensions or ambstowcs(3) or whatever other MirBSD
specific functions we provide – this way, they can be shared on a
crunchgen(1)d executable (such as ramdisks’ instbin) but need not
affect libc or other shared libraries’ versions

XXX manpages ought to still be mandated
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.28 2008/11/14 15:33:44 tg Rel $ */
d4 1
a4 1
 * Copyright (c) 2010
d28 1
a28 1
#include <sys/types.h>
d33 1
a33 1
    __attribute__((bounded (buffer, 2, 3)));
@

