head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2019.08.15.00.32.31;	author tg;	state Exp;
branches;
next	1.5;
commitid	1005D54A8346069C6D6;

1.5
date	2014.02.19.20.57.22;	author tg;	state Exp;
branches;
next	1.4;
commitid	10053051AC65A32859A;

1.4
date	2014.02.19.16.59.32;	author tg;	state Exp;
branches;
next	1.3;
commitid	1005304E30900931FDD;

1.3
date	2011.07.17.17.19.25;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004E2319B430931994;

1.2
date	2010.08.14.21.10.18;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004C67063E2E0239C2;

1.1
date	2010.08.14.20.53.05;	author tg;	state Exp;
branches;
next	;
commitid	1004C6702403C804E92;


desc
@@


1.6
log
@fix missing functions from libmbfun
@
text
@# $MirOS: src/lib/libmbfun/Makefile,v 1.4 2014/02/19 16:59:32 tg Exp $

LIB=		mbfun
HDRS=		mbfun.h

FUNCTIONS+=	ambstowcs
FUNCTIONS+=	cdblockedread

SRCS+=		awcstombs.c
SRCS+=		optu8to16vis.c

UIF_FUNCS+=	ambstowcs ambsntowcs
UIF_FUNCS+=	awcstombs awcsntombs

UNIFDEF_SRCS+=	mbsnrtowcsvis.c mbsrtowcs.c -DMBSNRTOWCSVIS

MLINKS+=	ambstowcs.3 awcstombs.3

.for _f in ${FUNCTIONS}
SRCS+=		${_f}.c
MAN+=		${_f}.3
.endfor

.for _src _dst in ${UIF_FUNCS}
UNIFDEF_SRCS+=	${_dst}.c ${_src}.c -DL_${_dst}
MLINKS+=	${_src}.3 ${_dst}.3
.endfor

.for _z _q _s in ${UNIFDEF_SRCS}
SRCS+=		${_z}
.endfor

KERNNOGCC=		#defined
KERNPICKSRCS=		Yes
KERNBASE?=		${.CURDIR}/../../kern
.include "${KERNBASE}/c/Makefile.inc"
SRCS+=			${KXSRCS}
UNIFDEF_SRCS+=		${UIF_KXSRCS}

LIBCSRCDIR?=${.CURDIR}/../libc
.PATH: ${LIBCSRCDIR}/i18n

.for _z _q _s in ${UNIFDEF_SRCS}
CLEANFILES+=	${_z}

${_z}: ${_q}
	-unifdef ${_s:S/,/ /g} $> >$@@

beforedepend: ${_z}
.endfor

.include <bsd.lib.mk>
@


1.5
log
@this could never have worked
@
text
@d29 4
@


1.4
log
@move some of our custom functions from libc to libmbfun (preparing a libc major bump); drop plan9-like rune functions
@
text
@d1 1
a1 1
# $MirOS: src/lib/libmbfun/Makefile,v 1.3 2011/07/17 17:19:25 tg Exp $
d15 1
a15 1
UNIFDEF_SRCS+=	mbsrtowcs.c mbsnrtowcsvis.c -DMBSNRTOWCSVIS
d25 1
a25 1
UNIFDEF_SRCS+=	${_src}.c ${_dst}.c -DL_${_dst}
d36 3
a47 3
LIBCSRCDIR?=${.CURDIR}/../libc
.PATH: ${LIBCSRCDIR}/i18n

@


1.3
log
@• kern/c/{,*/}Makefile.inc: rename UNIFDEF_SRCS to UIF_XSRCS
  matching XSRCS (for KERNPICKSRCS) and to not interfere with
  includers’ uses of UNIFDEF_SRCS
• kern/c/{,*/}Makefile.inc: new KXSRCS/UIF_KXSRCS which are
  the same as XSRCS/UIF_XSRCS except the userspace part is
  _not_ added to libc
• lib/mbfun/Makefile: pull KXSRCS/UIF_KXSRCS from kern dir

This way, we can add stuff to kern for kernel/bootloader/userspace
without having to bump the libc minor every time; their prototypes
will still end up in libckern.h though.
@
text
@d1 1
a1 1
# $MirOS: src/lib/libmbfun/Makefile,v 1.2 2010/08/14 21:10:18 tg Exp $
d6 1
d9 10
d45 3
@


1.2
log
@oh well, let’s give it a manpage

also, macro-ise Makefile and prepare for things like ambstowcs(3)…
@
text
@d1 1
a1 1
# $MirOS: src/lib/libmbfun/Makefile,v 1.1 2010/08/14 20:53:05 tg Exp $
d18 8
a25 1
.for _z _q _s in ${UNIFDEF_SRCS} ${UIF_LSRCS}
@


1.1
log
@new library for all those pesky functions like cdblockedread() or
my arc4random extensions or ambstowcs(3) or whatever other MirBSD
specific functions we provide – this way, they can be shared on a
crunchgen(1)d executable (such as ramdisks’ instbin) but need not
affect libc or other shared libraries’ versions

XXX manpages ought to still be mandated
@
text
@d1 1
a1 1
# $MirOS$
a4 1
NOMAN=		Yes
d6 20
a25 1
SRCS+=		cdblockedread.c
@

