head	1.15;
access;
symbols
	MIRBSD_10:1.10.0.2
	MIRBSD_10_BASE:1.10
	MIRBSD_9_BASE:1.8
	MIRBSD_8:1.8.0.2
	MIRBSD_8_BASE:1.8
	TNF:1.1.3;
locks; strict;
comment	@# @;


1.15
date	2009.08.30.17.54.32;	author tg;	state Exp;
branches;
next	1.14;
commitid	1004A9ABCE823CF7F01;

1.14
date	2008.12.26.16.27.41;	author tg;	state Exp;
branches;
next	1.13;
commitid	1004955060D63AD5C44;

1.13
date	2008.12.26.16.25.51;	author tg;	state Exp;
branches;
next	1.12;
commitid	100495505845E06BC20;

1.12
date	2008.11.22.14.17.21;	author tg;	state Exp;
branches;
next	1.11;
commitid	1004928147F38FA3C80;

1.11
date	2008.11.18.16.51.14;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004922F2421FBFAE06;

1.10
date	2007.06.21.14.54.01;	author tg;	state Exp;
branches;
next	1.9;
commitid	100467A90FF128F5ABB;

1.9
date	2006.09.29.21.28.06;	author tg;	state Exp;
branches;
next	1.8;
commitid	100451D8FF33E9451CC;

1.8
date	2005.10.21.11.02.39;	author tg;	state Exp;
branches;
next	1.7;
commitid	6c0b4358cac0ef88;

1.7
date	2005.06.26.18.07.53;	author tg;	state Exp;
branches;
next	1.6;
commitid	64b142beef0e7eee;

1.6
date	2005.06.09.20.57.36;	author tg;	state Exp;
branches;
next	1.5;
commitid	682c42a8ad535a4f;

1.5
date	2005.04.29.00.38.55;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.25.23.11.37;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.25.22.40.01;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.06.20.28.21;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.01.21.35;	author tg;	state Exp;
branches
	1.1.3.1;
next	;

1.1.3.1
date	2005.02.05.01.21.35;	author tg;	state Exp;
branches;
next	;


desc
@@


1.15
log
@crti.o MUST NOT be built with -g

crazyâ€¦ this is
@
text
@# $MirOS: src/lib/csu/common_elf/Makefile.inc,v 1.14 2008/12/26 16:27:41 tg Exp $
# $NetBSD: Makefile.inc,v 1.23 2003/03/19 16:54:25 ross Exp $

.include "${.CURDIR}/../Makefile.inc"

.if !defined(ELFSIZE) || empty(ELFSIZE)
ELFSIZE=	32
.endif

.if ${DEBUGLIBS:L} == "yes"
_DISCARD=	-X
_SODISCARD=	-X
.else
_DISCARD=	-x
_SODISCARD=	-g -x
.endif

COPTS+=		-fno-stack-protector-all -fno-stack-protector \
		-fno-omit-frame-pointer -fno-unit-at-a-time -Werror
CPPFLAGS+=	-idirafter ${.CURDIR}/../common_elf
CPPFLAGS+=	-DELFSIZE=${ELFSIZE}

.PATH:		${.CURDIR}/../common_elf

SRCS+=		crt0.c crti.c crtn.c
# if profiling
#SRCS+=		gcrt0.c

.ifndef HAVE_VERSION_SPECIFIC_GCC_LIBS
# These are now provided by GCC 3
.else
CPPFLAGS+=	-DHAVE_VERSION_SPECIFIC_GCC_LIBS
SRCS+=		crtbegin.c crtbeginT.c crtend.c
.  if !defined(NOPIC) || ${NOPIC:L} == "no"
SRCS+=		crtbeginS.c crtendS.c
.  endif
CPPFLAGS+=	-DDWARF2_EH -DDSO_HANDLE # -DJCR
.endif

COPYFILES+=	crt0.c gcrt0.c
COPYFILES+=	crtbegin.c crtbeginT.c
COPYFILES+=	crtbegin.c crtbeginS.c
COPYFILES+=	crtend.c crtendS.c
.for _s _d in ${COPYFILES}
CLEANFILES+=	${_d}
beforedepend: ${_d}
${_d}: ${_s}
	cp -f ${.ALLSRC} $@@
.endfor

CLEANFILES+=	sun_crt1.o sun_crtn.o sun_crti.o
sunstuff: sun_crt1.o sun_crtn.o sun_crti.o

sun_crt1.o: ${DESTDIR}/usr/lib/crt0.o ${DESTDIR}/usr/lib/crtbegin.o
	${LD} -r -o $@@ ${.ALLSRC}

sun_crtn.o: ${DESTDIR}/usr/lib/crtend.o ${DESTDIR}/usr/lib/crtn.o
	${LD} -r -o $@@ ${.ALLSRC}

sun_crti.o: ${DESTDIR}/usr/lib/crti.o
	${LD} -r -o $@@ ${.ALLSRC}

crt0.o: crt0.c
	${COMPILE.c} -DCRT0 -fPIE -o $@@.o ${.IMPSRC}
	${LD} ${_DISCARD} -r -o $@@ $@@.o
	@@rm -f $@@.o

gcrt0.o: crt0.c
	${COMPILE.c} -DMCRT0 -fPIE -o $@@.o ${.IMPSRC}
	${LD} ${_DISCARD} -r -o $@@ $@@.o
	@@rm -f $@@.o

crti.o: crti.c
	${COMPILE.c} -g0 -fPIE -o $@@.o ${.IMPSRC}
	${LD} ${_DISCARD} -r -o $@@ $@@.o
	@@rm -f $@@.o

crtn.o: crtn.c
	${COMPILE.c} -fPIE -o $@@.o ${.IMPSRC}
	${LD} ${_DISCARD} -r -o $@@ $@@.o
	@@rm -f $@@.o

crtbegin.o: crtbegin.c
	${COMPILE.c} -fPIE -o $@@.o ${.IMPSRC}
	${LD} ${_DISCARD} -r -o $@@ $@@.o
	@@rm -f $@@.o

crtbeginS.o: crtbegin.c
	${COMPILE.c} -DSHARED -DPIC ${PICFLAG} -o $@@.o ${.IMPSRC}
	${LD} ${_DISCARD} -r -o $@@ $@@.o
	@@rm -f $@@.o

crtbeginT.o: crtbegin.c
	${COMPILE.c} -o $@@.o ${.IMPSRC}
	${LD} ${_DISCARD} -r -o $@@ $@@.o
	@@rm -f $@@.o

crtend.o: crtend.c
	${COMPILE.c} -fPIE -o $@@.o ${.IMPSRC}
	${LD} ${_DISCARD} -r -o $@@ $@@.o
	@@rm -f $@@.o

crtendS.o: crtend.c
	${COMPILE.c} -DSHARED -DPIC ${PICFLAG} -o $@@.o ${.IMPSRC}
	${LD} ${_DISCARD} -r -o $@@ $@@.o
	@@rm -f $@@.o

realinstall:
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} \
	    -m ${NONBINMODE} ${OBJS} ${DESTDIR}/usr/lib/

.PHONY: sunstuff

OBJS+=		${SRCS:N*.h:N*.sh:R:S/$/.o/g}
all: ${OBJS}

.include <bsd.prog.mk>
@


1.14
log
@oops, fix include path (wtf?)
@
text
@d1 1
a1 1
# $MirOS: src/lib/csu/common_elf/Makefile.inc,v 1.13 2008/12/26 16:25:51 tg Exp $
d74 1
a74 1
	${COMPILE.c} -fPIE -o $@@.o ${.IMPSRC}
@


1.13
log
@enable compiling the TNF derived CSU files again, for pcc
(working even though built with mgcc)

tested

XXX pending partial rewrite
@
text
@d1 1
a1 1
# $MirOS: src/lib/csu/common_elf/Makefile.inc,v 1.12 2008/11/22 14:17:21 tg Exp $
d4 1
a4 1
.include <bsd.own.mk>
@


1.12
log
@crtbeginT.o does not need to be built with -fPIE (yet)
@
text
@d1 1
a1 1
# $MirOS: src/lib/csu/common_elf/Makefile.inc,v 1.11 2008/11/18 16:51:14 tg Exp $
a25 1
OBJS+=		crt0.o crti.o crtn.o
d27 1
a27 1
#OBJS+=		gcrt0.o
d29 1
d31 8
a38 7
#SRCS+=		crtbegin.c crtend.c
#OBJS+=		crtbegin.o crtend.o
#OBJS+=		crtbeginT.o
#.  if !defined(NOPIC) || ${NOPIC:L} == "no"
#OBJS+=		crtbeginS.o crtendS.o
#.  endif
#CPPFLAGS+=	-DDWARF2_EH # -DDSO_HANDLE -DJCR
d40 10
a49 1
all: ${OBJS}
d114 3
@


1.11
log
@ensure that csu is built with sort of sane CFLAGS (globally no propolice,
-fno-omit-frame-pointer -fno-unit-at-a-time), crtstuffT.o was missing for
the gcc<3.3 case; build all of csu with -fPIE unless ${PICFLAG} is alrea-
dy used in preparation for later pies
@
text
@d1 1
a1 1
# $MirOS: src/lib/csu/common_elf/Makefile.inc,v 1.10 2007/06/21 14:54:01 tg Exp $
d84 1
a84 1
	${COMPILE.c} -fPIE -o $@@.o ${.IMPSRC}
@


1.10
log
@cf. <Pine.BSM.4.64L.0706042142190.7695@@odem.66h.42h.de>
@
text
@d1 1
a1 1
# $MirOS: src/lib/csu/common_elf/Makefile.inc,v 1.9 2006/09/29 21:28:06 tg Exp $
d10 10
a19 1
COPTS+=		-fno-omit-frame-pointer -fno-stack-protector -Werror
a21 1
SHARED_FLAGS+=	-DSHARED -DPIC ${PICFLAG}
d33 1
d41 11
a51 6
sunstuff:
	${LD} -r -o sun_crt1.o \
	    ${DESTDIR}/usr/lib/crt0.o ${DESTDIR}/usr/lib/crtbegin.o
	${LD} -r -o sun_crtn.o \
	    ${DESTDIR}/usr/lib/crtend.o ${DESTDIR}/usr/lib/crtn.o
	${LD} -r -o sun_crti.o ${DESTDIR}/usr/lib/crti.o
d54 3
a56 3
	${COMPILE.c} -DCRT0 ${.IMPSRC} -o ${.TARGET}.o
	${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o
d59 3
a61 3
	${COMPILE.c} -DMCRT0 ${.ALLSRC} -o ${.TARGET}.o
	${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o
d64 3
a66 4
	# Don't reorder top-level statements and blocks
	${COMPILE.c} ${.IMPSRC} -o ${.TARGET}.o -fno-unit-at-a-time
	${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o
d69 3
a71 3
	${COMPILE.c} ${.IMPSRC} -o ${.TARGET}.o
	${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o
d74 3
a76 3
	${COMPILE.c} ${.IMPSRC} -o ${.TARGET}.o
	${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o
d79 8
a86 3
	${COMPILE.c} ${SHARED_FLAGS} ${.ALLSRC} -o ${.TARGET}.o
	${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o
d89 3
a91 3
	${COMPILE.c} ${.IMPSRC} -o ${.TARGET}.o
	${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o
d94 3
a96 3
	${COMPILE.c} ${SHARED_FLAGS} ${.ALLSRC} -o ${.TARGET}.o
	${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o
d102 2
@


1.9
log
@experimental: discard all locals of /usr/lib/*.o
@
text
@d1 1
a1 1
# $MirOS: src/lib/csu/common_elf/Makefile.inc,v 1.8 2005/10/21 11:02:39 tg Exp $
d32 7
@


1.8
log
@* merge bin and lib completely
* convert some ancient RCSID styles etc. to more modern stuff
* fix use of CDIAGFLAGS+=, CFLAGS+= and COPTS+= to the correct
  variant (include bsd.own.mk _then_ COPTS+=) so they're added
  after any user-specified flags
  (this is probably lurking in more places than I can imagine)
* fix some indenting, comments, etc.
* make stuff compile (fix warnings/errors)
* add script to review _all_ shlib_version after an openbsd import
* remove two more obsolete /usr/lib/debug/ references
* bin/ps: comment out some SMP code
@
text
@d1 1
a1 1
# $MirOS: src/lib/csu/common_elf/Makefile.inc,v 1.7 2005/06/26 18:07:53 tg Exp $
d45 1
a45 1
	${LD} -X -r -o ${.TARGET} ${.TARGET}.o
d50 1
a50 1
	${LD} -X -r -o ${.TARGET} ${.TARGET}.o
d55 1
a55 1
	${LD} -X -r -o ${.TARGET} ${.TARGET}.o
d60 1
a60 1
	${LD} -X -r -o ${.TARGET} ${.TARGET}.o
d65 1
a65 1
	${LD} -X -r -o ${.TARGET} ${.TARGET}.o
d70 1
a70 1
	${LD} -X -r -o ${.TARGET} ${.TARGET}.o
@


1.7
log
@bye bye, macppc
@
text
@d1 1
a1 1
# $MirOS: src/lib/csu/common_elf/Makefile.inc,v 1.6 2005/06/09 20:57:36 tg Exp $
d10 1
a10 1
CFLAGS+=	-fno-omit-frame-pointer -fno-stack-protector -Werror
@


1.6
log
@GCC3_EXT_TOOLCHAIN is gone
@
text
@d1 1
a1 1
# $MirOS: src/lib/csu/common_elf/Makefile.inc,v 1.5 2005/04/29 00:38:55 tg Exp $
d17 2
a18 2
SRCS+=		crt0.c crti.c
OBJS+=		crt0.o crti.o
a20 4
.ifndef __NO_CRTN
SRCS+=		crtn.c
OBJS+=		crtn.o
.endif
@


1.5
log
@add a #warning if using the code preventing C++ to work
@
text
@d1 1
a1 1
# $MirOS: src/lib/csu/common_elf/Makefile.inc,v 1.4 2005/04/25 23:11:37 tg Exp $
d26 7
a32 14
# If using an external toolchain, we expect crtbegin/crtend to be
# supplied by that toolchain's run-time support.
GCC3_EXT_TOOLCHAIN?=no
.if ${GCC3_EXT_TOOLCHAIN:L} != "yes"
SRCS+=		crtbegin.c crtend.c
OBJS+=		crtbegin.o crtend.o
.  if !defined(NOPIC) || ${NOPIC:L} == "no"
OBJS+=		crtbeginS.o crtendS.o
.  endif

CPPFLAGS+=	-DDWARF2_EH
#CPPFLAGS+=	-DDSO_HANDLE
#CPPFLAGS+=	-DJCR
.endif
@


1.4
log
@tweak and indent(1) partially
reduce alignment, force nop insertion
@
text
@d1 1
a1 1
# $MirOS: src/lib/csu/common_elf/Makefile.inc,v 1.3 2005/04/25 22:40:01 tg Exp $
d10 1
a10 1
CFLAGS+=	-fno-omit-frame-pointer -fno-stack-protector
@


1.3
log
@fix g++: the constructors were not run.
reason: dot_init.h search path changed somehow recently
@
text
@d1 1
a1 1
# $MirOS: src/lib/csu/common_elf/Makefile.inc,v 1.2 2005/03/06 20:28:21 tg Exp $
a12 5
#CPPFLAGS+=	-DDYNAMIC -I${BSDSRCDIR}/libexec/ld.so
#CPPFLAGS+=	-I${BSDSRCDIR}/lib/libc/dlfcn
CPPFLAGS+=	-DDWARF2_EH
#CPPFLAGS+=	-DJCR
#CPPFLAGS+=	-DDSO_HANDLE
d35 4
@


1.2
log
@merge src/lib
@
text
@d1 1
a1 1
# $MirOS$
d11 1
a11 1
CPPFLAGS+=	-I${.CURDIR}/../common_elf
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#	$NetBSD: Makefile.inc,v 1.25 2004/08/28 00:18:38 thorpej Exp $
d6 2
a7 2
.if !defined(ELFSIZE)
ELFSIZE=32
d10 1
a10 4
.include "../../Makefile.inc"

CPPFLAGS+=	-DLIBC_SCCS -DPIC -DDYNAMIC -DELFSIZE=${ELFSIZE}
CPPFLAGS+=	-I${NETBSDSRCDIR}/libexec/ld.elf_so
d12 3
a14 1
CPPFLAGS+=	-I${NETBSDSRCDIR}/lib/libc/dlfcn
d16 3
a18 2
CPPFLAGS+=	-DJCR
CPPFLAGS+=	-DDSO_HANDLE
d22 7
a28 4
SRCS+=		crt0.c crti.c crtn.c
OBJS+=		crt0.o gcrt0.o crti.o crtn.o
.if ${MKPIC} != "no"
COPTS+=		-fPIC
d31 4
a34 4
# We supply crtbegin / crtend *ONLY* if using the old in-tree GCC 2.95.3!
# In all other cases (including use of an external toolchain), these will
# be provided by that toolchain's run-time support.
.if ${USE_TOOLS_TOOLCHAIN} == "yes" && !defined(EXTERNAL_TOOLCHAIN)
d37 1
a37 2
.if ${MKPIC} != "no"
SRCS+=		crtbeginS.c crtendS.c
d39 1
a39 1
.endif
d42 1
a42 1
realall: ${OBJS}
d45 2
a46 3
	@@echo "${COMPILE.c} -DCRT0 ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.c} -DCRT0 ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -x -r -o ${.TARGET} ${.TARGET}.o
d49 3
a51 5
# dependant on crt0.o to pick up header dependencies
gcrt0.o: ${.CURDIR}/crt0.c crt0.o
	@@echo "${COMPILE.c} -DMCRT0 ${.CURDIR}/crt0.c -o ${.TARGET}"
	@@${COMPILE.c} -DMCRT0 ${.CURDIR}/crt0.c -o ${.TARGET}.o
	@@${LD} -x -r -o ${.TARGET} ${.TARGET}.o
d55 3
a57 3
	@@echo "${COMPILE.c} ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.c} ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -X -r -o ${.TARGET} ${.TARGET}.o
d61 2
a62 3
	@@echo "${COMPILE.c} ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.c} ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -X -r -o ${.TARGET} ${.TARGET}.o
a64 1
.if ${USE_TOOLS_TOOLCHAIN} == "yes" && !defined(EXTERNAL_TOOLCHAIN)
d66 2
a67 3
	@@echo "${COMPILE.c} ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.c} ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -X -r -o ${.TARGET} ${.TARGET}.o
d70 3
a72 4
crtbeginS.o: crtbeginS.c
	@@echo "${COMPILE.c} -DSHARED ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.c} -DSHARED ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -X -r -o ${.TARGET} ${.TARGET}.o
d76 2
a77 3
	@@echo "${COMPILE.c} ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.c} ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -X -r -o ${.TARGET} ${.TARGET}.o
d80 3
a82 4
crtendS.o: crtendS.c
	@@echo "${COMPILE.c} -DSHARED ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.c} -DSHARED ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -X -r -o ${.TARGET} ${.TARGET}.o
a83 1
.endif	# USE_TOOLS_TOOLCHAIN == "yes" && ! EXTERNAL_TOOLCHAIN
d85 3
a87 2
FILES=${OBJS}
FILESDIR=${LIBDIR}
@


1.1.3.1
log
@The whole bunch of code we took from NetBSD(tm)
@
text
@@
