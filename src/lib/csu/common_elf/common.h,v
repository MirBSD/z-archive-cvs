head	1.7;
access;
symbols
	MIRBSD_10:1.5.0.2
	MIRBSD_10_BASE:1.5
	MIRBSD_9_BASE:1.4
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3
	TNF:1.1.3;
locks; strict;
comment	@ * @;


1.7
date	2009.08.30.18.02.08;	author tg;	state Exp;
branches;
next	1.6;
commitid	1004A9ABE9F3BE09D8C;

1.6
date	2008.11.08.23.03.50;	author tg;	state Exp;
branches;
next	1.5;
commitid	10049161AB22DF5DFC5;

1.5
date	2006.10.15.01.04.00;	author tg;	state Exp;
branches;
next	1.4;
commitid	100453189102970E3F3;

1.4
date	2006.06.15.19.18.48;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004491B2706C2443B2;

1.3
date	2005.04.25.23.11.38;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.06.20.28.21;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.01.21.35;	author tg;	state Exp;
branches
	1.1.3.1;
next	;

1.1.3.1
date	2005.02.05.01.21.35;	author tg;	state Exp;
branches;
next	;


desc
@@


1.7
log
@move the environ and __progname symbols from csu to libc,
in order to be able to build libc with -Wl,-z,defs
@
text
@/* $MirOS: src/lib/csu/common_elf/common.h,v 1.6 2008/11/08 23:03:50 tg Exp $
 * derived from the following files:
 * $NetBSD: common.h,v 1.10 2004/08/26 20:57:47 thorpej Exp $
 */

/*
 * Copyright (c) 2003, 2004, 2005
 *	Thorsten "mirabilos" Glaser <tg@@MirBSD.de>
 * Copyright (c) 1995 Christopher G. Demetriou
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *          This product includes software developed for the
 *          NetBSD Project.  See http://www.NetBSD.org/ for
 *          information about NetBSD.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * <<Id: LICENSE,v 1.2 2000/06/14 15:57:33 cgd Exp>>
 */

#ifndef	_COMMON_H
#define	_COMMON_H

#include <sys/param.h>
#include <sys/exec.h>
#include <sys/syscall.h>
#include <stdlib.h>

__RCSID("$MirOS: src/lib/csu/common_elf/common.h,v 1.6 2008/11/08 23:03:50 tg Exp $");

typedef void Obj_Entry;

extern char *__progname;
extern char **environ;

extern void _init(void);
extern void _fini(void);
static char *_strrchr(char *, int);

#ifdef MCRT0
extern void monstartup(u_long, u_long);
extern void _mcleanup(void);
extern unsigned char _etext, _eprol;
#endif

__dead void ___start(int argc, char **argv, char **envp,
    void (*cleanup) (void), const Obj_Entry *obj,
    struct ps_strings *ps_strings);
int main(int argc, char **argv, char **envp);

#endif
@


1.6
log
@more mass conversions, including ancient eMail addresses
@
text
@d1 1
a1 1
/* $MirOS: src/lib/csu/common_elf/common.h,v 1.5 2006/10/15 01:04:00 tg Exp $
d50 1
a50 1
__RCSID("$MirOS: src/lib/csu/common_elf/common.h,v 1.5 2006/10/15 01:04:00 tg Exp $");
d54 2
a55 5
char *__progname;
char **environ;
struct ps_strings *__ps_strings = NULL;

char __progname_storage[NAME_MAX + 1];
@


1.5
log
@sprinkle more RCSID, because we can
@
text
@d1 1
a1 1
/* $MirOS: src/lib/csu/common_elf/common.h,v 1.4 2006/06/15 19:18:48 tg Exp $
d8 1
a8 1
 *	Thorsten "mirabile" Glaser <tg@@MirBSD.de>
d50 1
a50 1
__RCSID("$MirOS$");
@


1.4
log
@mirbsd.org, 66h.42h.de, bsdadvocacy.org, and whatnot
we changed that too often, try to clean up the mess
mostly outside the www/ module which is dead anyway.
@
text
@d1 1
a1 1
/* $MirOS: src/lib/csu/common_elf/common.h,v 1.3 2005/04/25 23:11:38 tg Exp $
d50 2
d64 1
a64 1
#ifdef	MCRT0
@


1.3
log
@tweak and indent(1) partially
reduce alignment, force nop insertion
@
text
@d1 1
a1 1
/* $MirOS: src/lib/csu/common_elf/common.h,v 1.2 2005/03/06 20:28:21 tg Exp $
d8 1
a8 1
 *	Thorsten "mirabile" Glaser <tg@@MirBSD.org>
@


1.2
log
@merge src/lib
@
text
@d1 1
a1 1
/* $MirOS$
d7 2
a8 2
 * Copyright (c) 2003, 2004
 *	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
d11 1
a11 1
 * 
d27 1
a27 1
 * 
d50 1
a50 19
#ifndef	DYNAMIC
typedef	void	Obj_Entry;
#else
#ifdef	__weak_alias
#define	dlopen	_dlopen
#define	dlclose	_dlclose
#define	dlsym	_dlsym
#define	dlerror	_dlerror
#define	dladdr	_dladdr
#endif
#include <dlfcn.h>
extern int __syscall(quad_t, ...);
#define	_dl_write(fd, s, n) __syscall(SYS_write, (fd), (s), (n))
#define	printf	_dl_printf
#define	_STDIO_H_
#include "util.h"
#include "resolve.h"
typedef	elf_object_t	Obj_Entry;
#endif
d56 1
a56 1
char __progname_storage[NAME_MAX+1];
a61 13
#ifdef	DYNAMIC
void _rtld_setup(void (*cleanup)(void), const Obj_Entry *obj);

/*
 * Arrange for _DYNAMIC to be weak and undefined (and therefore to show up
 * as being at address zero, unless something else defines it).  That way,
 * if we happen to be compiling without -static but with without any
 * shared libs present, things will still work.
 */
extern int _DYNAMIC;
__weak_extern(_DYNAMIC);
#endif

d69 1
a69 1
    void (*cleanup)(void), const Obj_Entry *obj,
d73 1
a73 1
#endif	/* ndef _COMMON_H */
@


1.1
log
@Initial revision
@
text
@d1 4
a4 1
/* $NetBSD: common.h,v 1.10 2004/08/26 20:57:47 thorpej Exp $ */
d7 2
d38 1
a38 1
 * 
d42 4
a45 1
#include <sys/types.h>
d48 1
d50 9
a58 8
#include <stdlib.h>
#ifdef DYNAMIC
#ifdef __weak_alias
#define dlopen	_dlopen
#define dlclose	_dlclose
#define dlsym	_dlsym
#define dlerror	_dlerror
#define dladdr	_dladdr
d61 7
a67 3
#include "rtld.h"
#else
typedef void Obj_Entry;
d70 9
a78 18
extern int	__syscall(quad_t, ...);
#define	_exit(v)	__syscall(SYS_exit, (v))
#define	write(fd, s, n)	__syscall(SYS_write, (fd), (s), (n))

#define	_FATAL(str)				\
do {						\
	write(2, str, sizeof(str)-1);		\
	_exit(1);				\
} while (0)

static char	*_strrchr(char *, int);

char	**environ;
char	*__progname = "";
struct ps_strings *__ps_strings = 0;

extern void	_init(void);
extern void	_fini(void);
d80 2
a81 2
#ifdef DYNAMIC
void	_rtld_setup(void (*)(void), const Obj_Entry *obj);
d91 1
a91 1
#endif /* DYNAMIC */
d93 3
a95 3
#ifdef MCRT0
extern void	monstartup(u_long, u_long);
extern void	_mcleanup(void);
d97 6
a102 1
#endif /* MCRT0 */
d104 1
a104 1
int main(int, char **, char **);
@


1.1.3.1
log
@The whole bunch of code we took from NetBSD(tm)
@
text
@@
