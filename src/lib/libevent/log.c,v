head	1.4;
access;
symbols
	cvs-201210191930:1.1.1.4
	MIRBSD_10:1.2.0.2
	MIRBSD_10_BASE:1.2
	cvs-200705171630:1.1.1.3
	cvs-200702051630:1.1.1.2
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200507211800:1.1.1.2
	cvs-200505050030:1.1.1.2
	cvs-200504291700:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2013.10.31.20.06.30;	author tg;	state Exp;
branches;
next	1.3;
commitid	1005272B7081B0E5655;

1.3
date	2012.10.19.19.58.18;	author tg;	state Exp;
branches;
next	1.2;
commitid	1005081B0E54727ACCA;

1.2
date	2007.05.17.17.15.35;	author tg;	state Exp;
branches;
next	1.1;
commitid	100464C8DC46A1A51B5;

1.1
date	2005.04.29.17.05.23;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.04.29.17.05.23;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.05.05.00.32.58;	author tg;	state Exp;
branches;
next	1.1.1.3;
commitid	48e9427969c07d49;

1.1.1.3
date	2007.05.17.16.38.22;	author tg;	state Exp;
branches;
next	1.1.1.4;
commitid	100464C84A31EC59432;

1.1.1.4
date	2012.10.19.19.33.47;	author tg;	state Exp;
branches;
next	;
commitid	1005081AB336FC5E505;


desc
@@


1.4
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@/*	$OpenBSD: log.c,v 1.6 2010/04/21 20:02:40 nicm Exp $	*/

/*
 * log.c
 *
 * Based on err.c, which was adapted from OpenBSD libc *err* *warn* code.
 *
 * Copyright © 2013
 *	Thorsten “mirabilos” Glaser <tg@@mirbsd.org>
 *
 * Copyright (c) 2005 Nick Mathewson <nickm@@freehaven.net>
 *
 * Copyright (c) 2000 Dug Song <dugsong@@monkey.org>
 *
 * Copyright (c) 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef WIN32
#define WIN32_LEAN_AND_MEAN
#include <windows.h>
#undef WIN32_LEAN_AND_MEAN
#endif
#include <sys/types.h>
#ifdef HAVE_SYS_TIME_H
#include <sys/time.h>
#else
#include <sys/_libevent_time.h>
#endif
#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>
#include <string.h>
#include <errno.h>
#include "event.h"

#include "log.h"
#include "evutil.h"

__RCSID("$MirOS: src/lib/libevent/log.c,v 1.3 2012/10/19 19:58:18 tg Exp $");
__RCSID(_LOG_H_);

static void _warn_helper(int severity, int log_errno, const char *fmt,
                         va_list ap)
    __attribute__((__format__(__printf__, 3, 0)));
static void event_log(int severity, const char *msg);

void
event_err(int eval, const char *fmt, ...)
{
	va_list ap;
	
	va_start(ap, fmt);
	_warn_helper(_EVENT_LOG_ERR, errno, fmt, ap);
	va_end(ap);
	exit(eval);
}

void
event_warn(const char *fmt, ...)
{
	va_list ap;
	
	va_start(ap, fmt);
	_warn_helper(_EVENT_LOG_WARN, errno, fmt, ap);
	va_end(ap);
}

void
event_errx(int eval, const char *fmt, ...)
{
	va_list ap;
	
	va_start(ap, fmt);
	_warn_helper(_EVENT_LOG_ERR, -1, fmt, ap);
	va_end(ap);
	exit(eval);
}

void
event_warnx(const char *fmt, ...)
{
	va_list ap;
	
	va_start(ap, fmt);
	_warn_helper(_EVENT_LOG_WARN, -1, fmt, ap);
	va_end(ap);
}

void
event_msgx(const char *fmt, ...)
{
	va_list ap;
	
	va_start(ap, fmt);
	_warn_helper(_EVENT_LOG_MSG, -1, fmt, ap);
	va_end(ap);
}

void
_event_debugx(const char *fmt, ...)
{
	va_list ap;
	
	va_start(ap, fmt);
	_warn_helper(_EVENT_LOG_DEBUG, -1, fmt, ap);
	va_end(ap);
}

static void
_warn_helper(int severity, int log_errno, const char *fmt, va_list ap)
{
	char buf[1024];
	size_t len;

	if (fmt != NULL)
		evutil_vsnprintf(buf, sizeof(buf), fmt, ap);
	else
		buf[0] = '\0';

	if (log_errno >= 0) {
		len = strlen(buf);
		if (len < sizeof(buf) - 3) {
			evutil_snprintf(buf + len, sizeof(buf) - len, ": %s",
			    strerror(log_errno));
		}
	}

	event_log(severity, buf);
}

static event_log_cb log_fn = NULL;

void
event_set_log_callback(event_log_cb cb)
{
	log_fn = cb;
}

static void
event_log(int severity, const char *msg)
{
	if (log_fn)
		log_fn(severity, msg);
	else {
		const char *severity_str;
		switch (severity) {
		case _EVENT_LOG_DEBUG:
			severity_str = "debug";
			break;
		case _EVENT_LOG_MSG:
			severity_str = "msg";
			break;
		case _EVENT_LOG_WARN:
			severity_str = "warn";
			break;
		case _EVENT_LOG_ERR:
			severity_str = "err";
			break;
		default:
			severity_str = "???";
			break;
		}
		(void)fprintf(stderr, "[%s] %s\n", severity_str, msg);
	}
}
@


1.3
log
@merge latest stable-1.4 libevent
@
text
@d8 3
d68 1
a68 1
__RCSID("$MirOS$");
d73 1
a73 1
    __attribute__((__format__ (__printf__, 3, 0)));
@


1.2
log
@__CRAZY=Yes clean, fixes a few real bugs
@
text
@d1 1
a1 1
/*	$OpenBSD: log.c,v 1.5 2007/03/19 15:12:49 millert Exp $	*/
a47 1
#include "misc.h"
a49 1
#include <sys/tree.h>
d53 1
a53 1
#include <sys/_time.h>
d63 1
d65 2
a66 2
__RCSID("$MirOS$\t"
    _LOG_H_);
d70 1
a70 1
    __attribute__((format (printf, 3, 0)));
a71 35
static int event_vsnprintf(char *, size_t, const char *, va_list)
    __attribute__((format (printf, 3, 0)));
static int event_snprintf(char *, size_t, const char *, ...)
    __attribute__((format (printf, 3, 4)));

static int
event_vsnprintf(char *str, size_t size, const char *format, va_list args)
{
	int r;
	if (size == 0)
		return -1;
#ifdef WIN32
	r = _vsnprintf(str, size, format, args);
#else
	r = vsnprintf(str, size, format, args);
#endif
	str[size-1] = '\0';
	if (r < 0 || ((size_t)r) >= size) {
		/* different platforms behave differently on overflow;
		 * handle both kinds. */
		return -1;
	}
	return r;
}

static int
event_snprintf(char *str, size_t size, const char *format, ...)
{
    va_list ap;
    int r;
    va_start(ap, format);
    r = event_vsnprintf(str, size, format, ap);
    va_end(ap);
    return r;
}
d77 1
a77 1

d88 1
a88 1

d98 1
a98 1

d109 1
a109 1

d119 1
a119 1

d129 1
a129 1

d142 1
a142 1
		event_vsnprintf(buf, sizeof(buf), fmt, ap);
d149 1
a149 1
			event_snprintf(buf + len, sizeof(buf) - len, ": %s",
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD: log.c,v 1.3 2005/04/22 00:56:25 brad Exp $	*/
d66 3
d70 2
a71 1
                         va_list ap);
d73 4
d98 11
d113 1
a113 1
	
d124 1
a124 1
	
d134 1
a134 1
	
d145 1
a145 1
	
d155 1
a155 1
	
d165 1
a165 1
	
d185 1
a185 1
			snprintf(buf + len, sizeof(buf) - len, ": %s",
@


1.1.1.1
log
@improve my Frankenstein OS (*wink* you know who you are) further
sans wchar_t of course

this is the essence of reading >1200 commit messages which suck
due to not having the new format of ours...
@
text
@@


1.1.1.2
log
@latest fixes
@
text
@d1 1
a1 1
/*	$OpenBSD: log.c,v 1.4 2005/05/04 03:17:48 brad Exp $	*/
a89 11
static int
event_snprintf(char *str, size_t size, const char *format, ...)
{
    va_list ap;
    int r;
    va_start(ap, format);
    r = event_vsnprintf(str, size, format, ap);
    va_end(ap);
    return r;
}

d166 1
a166 1
			event_snprintf(buf + len, sizeof(buf) - len, ": %s",
@


1.1.1.3
log
@import latest libevent via openbsd
@
text
@d1 1
a1 1
/*	$OpenBSD: log.c,v 1.5 2007/03/19 15:12:49 millert Exp $	*/
d105 1
a105 1

d116 1
a116 1

d126 1
a126 1

d137 1
a137 1

d147 1
a147 1

d157 1
a157 1

@


1.1.1.4
log
@import latest stable 1.4 libevent, in the OpenBSD version (diff against portable version reviewed-okay)
@
text
@d1 1
a1 1
/*	$OpenBSD: log.c,v 1.6 2010/04/21 20:02:40 nicm Exp $	*/
d48 1
d51 1
d55 1
a55 1
#include <sys/_libevent_time.h>
a64 1
#include "evutil.h"
d70 31
d105 1
a105 1
	
d116 1
a116 1
	
d126 1
a126 1
	
d137 1
a137 1
	
d147 1
a147 1
	
d157 1
a157 1
	
d170 1
a170 1
		evutil_vsnprintf(buf, sizeof(buf), fmt, ap);
d177 1
a177 1
			evutil_snprintf(buf + len, sizeof(buf) - len, ": %s",
@


