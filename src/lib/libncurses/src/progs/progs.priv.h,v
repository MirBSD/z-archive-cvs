head	1.5;
access;
symbols
	MIRBSD_10:1.4.0.2
	MIRBSD_10_BASE:1.4
	ncurses-devel:1.2.0.2
	ncurses-5_5:1.1.109.1
	lynx:1.1.109;
locks; strict;
comment	@ * @;


1.5
date	2009.09.06.12.46.48;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004AA3AF394030A9CC;

1.4
date	2006.10.27.16.13.56;	author tg;	state Exp;
branches;
next	1.3;
commitid	10045423016752CB2FA;

1.3
date	2006.06.08.23.48.40;	author tg;	state dead;
branches;
next	1.2;
commitid	1004488B5EE329FB78D;

1.2
date	2006.06.05.03.27.49;	author tg;	state Exp;
branches
	1.2.2.1;
next	1.1;
commitid	1004483A4B55E576574;

1.1
date	2006.06.04.23.37.18;	author tg;	state Exp;
branches
	1.1.109.1;
next	;
commitid	10044836EA64DB61E09;

1.2.2.1
date	2006.10.27.15.53.28;	author tg;	state Exp;
branches;
next	;
commitid	10045422B525E7FB757;

1.1.109.1
date	2006.06.04.23.37.18;	author tg;	state Exp;
branches;
next	;
commitid	10044836EA64DB61E09;


desc
@@


1.5
log
@• let ncurses compile with __CRAZY=Yes
• ensure RCS IDs are there ☺
@
text
@/****************************************************************************
 * Copyright (c) 1998-2001,2005 Free Software Foundation, Inc.              *
 *                                                                          *
 * Permission is hereby granted, free of charge, to any person obtaining a  *
 * copy of this software and associated documentation files (the            *
 * "Software"), to deal in the Software without restriction, including      *
 * without limitation the rights to use, copy, modify, merge, publish,      *
 * distribute, distribute with modifications, sublicense, and/or sell       *
 * copies of the Software, and to permit persons to whom the Software is    *
 * furnished to do so, subject to the following conditions:                 *
 *                                                                          *
 * The above copyright notice and this permission notice shall be included  *
 * in all copies or substantial portions of the Software.                   *
 *                                                                          *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
 * IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
 *                                                                          *
 * Except as contained in this notice, the name(s) of the above copyright   *
 * holders shall not be used in advertising or otherwise to promote the     *
 * sale, use or other dealings in this Software without prior written       *
 * authorization.                                                           *
 ****************************************************************************/

/****************************************************************************
 *  Author: Thomas E. Dickey                    1997-on                     *
 ****************************************************************************/
/*
 * $MirOS$
 * $Id: progs.priv.h,v 1.29 2005/08/06 20:05:32 tom Exp $
 *
 *	progs.priv.h
 *
 *	Header file for curses utility programs
 */

#include <ncurses_cfg.h>

#if USE_RCS_IDS && !defined(MODULE_ID)
#ifdef __RCSID
#define MODULE_ID(id) __RCSID(id);
#else
#define MODULE_ID(id) static const char Ident[] = id;
#endif
#elif !defined(MODULE_ID)
#define MODULE_ID(id) /*nothing*/
#endif

#include <stdlib.h>
#include <ctype.h>
#include <string.h>
#include <sys/types.h>

#if HAVE_UNISTD_H
#include <unistd.h>
#endif

#if HAVE_SYS_BSDTYPES_H
#include <sys/bsdtypes.h>	/* needed for ISC */
#endif

#if HAVE_LIMITS_H
# include <limits.h>
#elif HAVE_SYS_PARAM_H
# include <sys/param.h>
#endif

#if HAVE_DIRENT_H
# include <dirent.h>
# define NAMLEN(dirent) strlen((dirent)->d_name)
# if defined(_FILE_OFFSET_BITS) && defined(HAVE_STRUCT_DIRENT64)
#  if !defined(_LP64) && (_FILE_OFFSET_BITS == 64)
#   define	DIRENT	struct dirent64
#  else
#   define	DIRENT	struct dirent
#  endif
# else
#  define	DIRENT	struct dirent
# endif
#else
# define DIRENT struct direct
# define NAMLEN(dirent) (dirent)->d_namlen
# if HAVE_SYS_NDIR_H
#  include <sys/ndir.h>
# endif
# if HAVE_SYS_DIR_H
#  include <sys/dir.h>
# endif
# if HAVE_NDIR_H
#  include <ndir.h>
# endif
#endif

#include <errno.h>

#if DECL_ERRNO
extern int errno;
#endif

#if HAVE_GETOPT_H
#include <getopt.h>
#else
/* 'getopt()' may be prototyped in <stdlib.h>, but declaring its
 * variables doesn't hurt.
 */
extern char *optarg;
extern int optind;
#endif /* HAVE_GETOPT_H */

#include <curses.h>
#include <term_entry.h>
#include <tic.h>
#include <nc_alloc.h>

/* usually in <unistd.h> */
#ifndef STDOUT_FILENO
#define STDOUT_FILENO 1
#endif

#ifndef STDERR_FILENO
#define STDERR_FILENO 2
#endif

#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS 0
#endif

#ifndef EXIT_FAILURE
#define EXIT_FAILURE 1
#endif

#ifndef R_OK
#define	R_OK	4		/* Test for readable.  */
#endif

#ifndef W_OK
#define	W_OK	2		/* Test for writable.  */
#endif

#ifndef X_OK
#define	X_OK	1		/* Test for executable.  */
#endif

#ifndef F_OK
#define	F_OK	0		/* Test for existence.  */
#endif

/* usually in <unistd.h> */
#ifndef STDOUT_FILENO
#define STDOUT_FILENO 1
#endif

#ifndef STDERR_FILENO
#define STDERR_FILENO 2
#endif

/* may be in limits.h, included from various places */
#ifndef PATH_MAX
# if defined(_POSIX_PATH_MAX)
#  define PATH_MAX _POSIX_PATH_MAX
# elif defined(MAXPATHLEN)
#  define PATH_MAX MAXPATHLEN
# else
#  define PATH_MAX 255	/* the Posix minimum pathsize */
# endif
#endif

/* We use isascii only to guard against use of 7-bit ctype tables in the
 * isprint test in infocmp.
 */
#if !HAVE_ISASCII
# undef isascii
# if ('z'-'a' == 25) && ('z' < 127) && ('Z'-'A' == 25) && ('Z' < 127) && ('9' < 127)
#  define isascii(c) (UChar(c) <= 127)
# else
#  define isascii(c) 1	/* not really ascii anyway */
# endif
#endif

#define UChar(c)    ((unsigned char)(c))

#define SIZEOF(v) (sizeof(v)/sizeof(v[0]))
@


1.4
log
@resurrect branch
@
text
@d33 1
@


1.3
log
@remove "new" libncurses:
* libncurses can do about the same things as our current libcurses,
  with about the same bugs regarding japanese character positions
  and cursor positioning in an uxterm (and lynx width bugs)
* libncurses cannot, however, make use of terminfo.db and neither
  do I want to restrict it to termcap nor do we want the zillions
  of files under /usr/share/terminfo like the clueless leenocksers
  (except if we had reiserfs)
* libncursesw suffers from the same limitations as libncurses
* libncursesw does not correctly display any text in an uxterm
  except for some links in lynx (but not ordinary text) - this
  might have something to do with "fancy curses" though
* libmenu has not yet been ported, is easy though
* libpanel neither

thus the developers decided it's not worth to continue
investing work into it until these flaws are found and
fixed

furthermore, upgrading our curses is not easily possible,
nor is it possible at all to get hands on a distfile of
ncurses-5.2-20010224 so we can't diff against the vendor;
thus millert@@openbsd.org is the only person who can solve
this dilemma, I think
@
text
@d42 1
a42 4
#if USE_RCS_IDS
#ifndef __BEGIN_DECLS
#include <sys/cdefs.h>
#endif
d48 1
a48 1
#else
@


1.2
log
@* fix RCS IDs to use MirOS standard mechanism
* add BSD terminfo.db reading code
* fix includes, etc.
@
text
@@


1.2.2.1
log
@resurrect; make build; unbreak; use only libncursesw (link it to libcurses, libncurses, libtermcap, libtermlib); sync with mirport; fix BSD terminfo.db code
@
text
@d42 4
a45 1
#if USE_RCS_IDS && !defined(MODULE_ID)
d51 1
a51 1
#elif !defined(MODULE_ID)
@


1.1
log
@Initial revision
@
text
@d43 6
d50 1
@


1.1.109.1
log
@Import Tom Dickey's ncurses 5.5 (quite stripped down)
@
text
@@
