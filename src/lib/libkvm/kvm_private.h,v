head	1.4;
access;
symbols
	MIRBSD_10:1.3.0.2
	MIRBSD_10_BASE:1.3
	MIRBSD_9_BASE:1.3
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2013.10.31.20.06.32;	author tg;	state Exp;
branches;
next	1.3;
commitid	1005272B7081B0E5655;

1.3
date	2006.01.24.21.04.25;	author tg;	state Exp;
branches;
next	1.2;
commitid	10043D696494DED5EF1;

1.2
date	2005.10.21.11.02.47;	author tg;	state Exp;
branches;
next	1.1;
commitid	6c0b4358cac0ef88;

1.1
date	2005.02.05.17.25.17;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.25.17;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@/**	$MirOS: src/lib/libkvm/kvm_private.h,v 1.3 2006/01/24 21:04:25 tg Exp $ */
/*	$OpenBSD: kvm_private.h,v 1.9 2004/01/07 02:16:33 millert Exp $ */
/*	$NetBSD: kvm_private.h,v 1.7 1996/05/05 04:32:15 gwr Exp $	*/

/*-
 * Copyright © 2013
 *	Thorsten “mirabilos” Glaser <tg@@mirbsd.org>
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software developed by the Computer Systems
 * Engineering group at Lawrence Berkeley Laboratory under DARPA contract
 * BG 91-66 and contributed to Berkeley.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)kvm_private.h	8.1 (Berkeley) 6/4/93
 */

struct __kvm {
	/*
	 * a string to be prepended to error messages
	 * provided for compatibility with sun's interface
	 * if this value is null, errors are saved in errbuf[]
	 */
	const char *program;
	char	*errp;		/* XXX this can probably go away */
	char	errbuf[_POSIX2_LINE_MAX];
	DB	*db;
	int	pmfd;		/* physical memory file (or crashdump) */
	int	vmfd;		/* virtual memory file (-1 if crashdump) */
	int	swfd;		/* swap file (e.g., /dev/drum) */
	int	nlfd;		/* namelist file (e.g., /vmunix) */
	FILE	*nl_f;		/* stdio access to nlfd if required */
	struct kinfo_proc *procbase;
	struct kinfo_proc2 *procbase2;
	int	nbpg;		/* page size */
	char	*swapspc;	/* (dynamic) storage for swapped pages */
	char	*argspc, *argbuf; /* (dynamic) storage for argv strings */
	int	arglen;		/* length of the above */
	char	**argv;		/* (dynamic) storage for argv pointers */
	int	argc;		/* length of above (not actual # present) */

	/*
	 * Header structures for kernel dumps. Only gets filled in for
	 * dead kernels.
	 */
	struct kcore_hdr	*kcore_hdr;
	size_t	cpu_dsize;
	void	*cpu_data;
	off_t	dump_off;	/* Where the actual dump starts	*/

	/*
	 * Kernel virtual address translation state.  This only gets filled
	 * in for dead kernels; otherwise, the running kernel (i.e. kmem)
	 * will do the translations for us.  It could be big, so we
	 * only allocate it if necessary.
	 */
	struct vmstate *vmst; /* XXX: should become obsoleted */
	/*
	 * These kernel variables are used for looking up user addresses,
	 * and are cached for efficiency.
	 */
	struct pglist *vm_page_buckets;
	int vm_page_hash_mask;
	int alive;	/* Dead or alive. */
#define ISALIVE(kd) ((kd)->alive)
};

/*
 * Functions used internally by kvm, but across kvm modules.
 */
void	 _kvm_err(kvm_t *kd, const char *program, const char *fmt, ...)
		__attribute__((__format__(__printf__, 3, 4)));
int	 _kvm_dump_mkheader(kvm_t *kd_live, kvm_t *kd_dump);
void	 _kvm_freeprocs(kvm_t *kd);
void	 _kvm_freevtop(kvm_t *);
int	 _kvm_initvtop(kvm_t *);
int	 _kvm_kvatop(kvm_t *, u_long, u_long *);
void	*_kvm_malloc(kvm_t *kd, size_t);
off_t	 _kvm_pa2off(kvm_t *, u_long);
void	*_kvm_realloc(kvm_t *kd, void *, size_t);
void	 _kvm_syserr
(kvm_t *kd, const char *program, const char *fmt, ...);
ssize_t	_kvm_pread
(kvm_t *, int, void *, size_t, off_t);
ssize_t	_kvm_pwrite
(kvm_t *, int, void *, size_t, off_t);
@


1.3
log
@enable savecore(8) to operate on gzip'd kernels which we have now
(yes, it's slow, fpread() uses gzseek() extensively, sadly)
@
text
@d1 1
a1 1
/**	$MirOS: src/lib/libkvm/kvm_private.h,v 1.2 2005/10/21 11:02:47 tg Exp $ */
d6 2
d96 1
a96 1
		__attribute__((__format__ (printf, 3, 4)));
@


1.2
log
@* merge bin and lib completely
* convert some ancient RCSID styles etc. to more modern stuff
* fix use of CDIAGFLAGS+=, CFLAGS+= and COPTS+= to the correct
  variant (include bsd.own.mk _then_ COPTS+=) so they're added
  after any user-specified flags
  (this is probably lurking in more places than I can imagine)
* fix some indenting, comments, etc.
* make stuff compile (fix warnings/errors)
* add script to review _all_ shlib_version after an openbsd import
* remove two more obsolete /usr/lib/debug/ references
* bin/ps: comment out some SMP code
@
text
@d1 1
a1 1
/**	$MirOS$ */
d54 1
@


1.1
log
@Initial revision
@
text
@d1 1
d92 2
a93 1
void	 _kvm_err(kvm_t *kd, const char *program, const char *fmt, ...);
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
