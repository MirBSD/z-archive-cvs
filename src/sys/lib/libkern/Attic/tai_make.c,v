head	1.6;
access;
symbols
	MIRBSD_10:1.5.0.2
	MIRBSD_10_BASE:1.5
	MIRBSD_9_BASE:1.4
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3
	mirbsd:1.1.7;
locks; strict;
comment	@ * @;


1.6
date	2008.08.01.18.09.35;	author tg;	state dead;
branches;
next	1.5;
commitid	1004893513244B11E80;

1.5
date	2007.02.07.20.43.27;	author tg;	state Exp;
branches;
next	1.4;
commitid	10045CA39907FBE4A06;

1.4
date	2006.06.12.20.49.37;	author tg;	state Exp;
branches;
next	1.3;
commitid	100448DD3757D631A9C;

1.3
date	2005.12.17.05.54.19;	author tg;	state Exp;
branches;
next	1.2;
commitid	10043A3A7EA6AFDFD70;

1.2
date	2005.12.17.05.46.26;	author tg;	state Exp;
branches;
next	1.1;
commitid	10043A3A3E65E20A413;

1.1
date	2005.03.06.16.33.47;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.06.16.33.47;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@more migration

(in case you wonder: goal is to make libc, kernel and bootloaders share
the code currently in libkern, (some of) libsa, and libz, and to move
the bootloaders out of src/sys/ and into some more sane place)
@
text
@/* $MirOS: src/sys/lib/libkern/tai_make.c,v 1.5 2007/02/07 20:43:27 tg Exp $ */

/*-
 * Copyright (c) 2004, 2005, 2007
 *	Thorsten Glaser <tg@@mirbsd.de>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * Advertising materials mentioning features or use of this work must
 * display the following acknowledgement:
 *	This product includes material provided by Thorsten Glaser.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 *-
 * Generate dump of leap secons.
 */

#include <sys/types.h>
#include <sys/taitime.h>
#include <err.h>
#include <stdio.h>
#include <time.h>

__RCSID("$MirOS: src/sys/lib/libkern/tai_make.c,v 1.5 2007/02/07 20:43:27 tg Exp $");

static const char preamble[] =
"/* AUTOMATICALLY GENERATED - DO NOT EDIT! */\n\n"
"#include <sys/types.h>\n"
"#include <sys/taitime.h>\n\n"
"__RCSID(\"From: $MirOS: src/sys/lib/libkern/tai_make.c,v 1.5 2007/02/07 20:43:27 tg Exp $\");\n\n"
"static tai64_t _leaps[] = {\n";

static const char epilogue[] =
/* spare for config(8) */
"\t0,\n"
"\t0,\n"
"\t0,\n"
"\t0,\n"
"\t0,\n"
"\t0,\n"

/* last one must be 0 */
"\t0,\n"
/* all bits to 1, for config(8) as marker */
"\t-1LL\n"

/* rest of the C file */
"};\n\n"
"tai64_t *\ntai_leaps(void)\n"
"{\n"
"	return (_leaps);\n"
"}\n";

int
main(int argc, char *argv[])
{
	int64_t *t;

	if (sizeof (int64_t) != sizeof (tai64_t))
		errx(1, "tai64_t is not int64_t");

	t = (int64_t *)tai_leaps();
	if (*t == 0)
		errx(1, "leap second table empty");

	fputs(preamble, stdout);
	while (*t)
		printf("\t0x%16llXLL,\n", *t++);
	fputs(epilogue, stdout);

	return (0);
}
@


1.5
log
@* attempt to move taitime(3) functions from libc and kernel to kernbase,
  its prototypes from <time.h> and <sys/time.h> (which includes <time.h>)
  and <lib/libkern/taitime.h> to <sys/taitime.h>, split between indepen-
  dent and dependent (kernel/userland different leap table initialisation;
  userland additional tai_time(), taina_time(), importtai(), exporttai()),
  reduce required headers; reduce diff from headers to upstream
* move kernel tai leap second table from kernel objects to libkern
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.20 2006/12/11 21:04:56 tg Rel $ */
d35 1
a35 1
__RCSID("$MirOS: src/sys/lib/libkern/tai_make.c,v 1.4 2006/06/12 20:49:37 tg Exp $");
d41 1
a41 1
"__RCSID(\"From: $MirOS$\");\n\n"
@


1.4
log
@KNF; optimise
@
text
@d1 1
a1 1
/* $MirOS: src/sys/lib/libkern/tai_make.c,v 1.3 2005/12/17 05:54:19 tg Exp $ */
d4 2
a5 2
 * Copyright (c) 2004, 2005
 *	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
d7 5
a11 6
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
d13 2
a14 2
 * All advertising materials mentioning features or use of this soft-
 * ware must display the following acknowledgement:
d17 8
a24 8
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a nontrivial bug.
d29 2
a30 1
#include <sys/param.h>
d35 1
a35 1
__RCSID("$MirOS: src/sys/lib/libkern/tai_make.c,v 1.3 2005/12/17 05:54:19 tg Exp $");
d40 2
a41 1
"#include <lib/libkern/taitime.h>\n\n"
d60 1
a60 1
"tai64_t *\n_tai_leaps(void)\n"
a64 1

d71 1
a71 4
		errx(1, "tai64_t is not int64_t!");

	if ((t = (int64_t *)tai_leaps()) == NULL)
		errx(1, "Cannot get leap seconds!");
d73 3
a75 2
	if (!(*t))
		errx(1, "Leap second table empty!");
d77 1
a77 1
	printf("%s", preamble);
d80 1
a80 1
	printf("%s", epilogue);
@


1.3
log
@* add room for six new leap seconds to be inserted via binary patching
  the kernel
* after the 7th 0 (end of array marker) add a -1 (all bits 1) as a new
  marker for these who binary-patch the kernel so they know this all-1
  and the previous all-0 aren't to be touched
@
text
@d1 1
a1 1
/* $MirOS: src/sys/lib/libkern/tai_make.c,v 1.2 2005/12/17 05:46:26 tg Exp $ */
d35 1
a35 1
__RCSID("$MirOS: src/sys/lib/libkern/tai_make.c,v 1.2 2005/12/17 05:46:26 tg Exp $");
d61 1
a61 1
"	return _leaps;\n"
d70 1
a70 1
	if (sizeof(int64_t) != sizeof(tai64_t))
d80 2
a81 4
	while (*t) {
		printf("\t0x%16llXLL,\n", *t);
		++t;
	}
d84 1
a84 1
	return 0;
@


1.2
log
@big fat licence update (I left some which are bsiegert@@'s alone though)
also, remove licence boilerplate from some .h files who don't deserve it
and remove and add some advertising clauses because I say so
@
text
@d1 1
a1 1
/* $MirOS: src/sys/lib/libkern/tai_make.c,v 1.1.7.1 2005/03/06 16:33:47 tg Exp $ */
d35 1
a35 1
__RCSID("$MirOS: src/sys/lib/libkern/tai_make.c,v 1.1.7.1 2005/03/06 16:33:47 tg Exp $");
d44 1
d49 9
a57 1
"\t0\n"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.2 2005/03/03 19:43:30 tg Rel $ */
d18 8
a25 7
 * Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
 * any kind, expressed or implied, to the maximum extent permitted by
 * applicable law, but with the warranty of being written without ma-
 * licious intent or gross negligence; in no event shall licensor, an
 * author or contributor be held liable for any damage, direct, indi-
 * rect or other, however caused, arising in any way out of the usage
 * of this work, even if advised of the possibility of such damage.
d35 1
a35 1
__RCSID("$MirOS$");
@


1.1.7.1
log
@Add some missing files, such as some ISDN4BSD stuff,
documentation, tmac and tab files, TAI64 etc.
@
text
@@
