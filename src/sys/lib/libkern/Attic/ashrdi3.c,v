head	1.3;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.2
	MIRBSD_10:1.2.0.2
	MIRBSD_10_BASE:1.2
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2008.08.01.16.11.05;	author tg;	state dead;
branches;
next	1.2;
commitid	100489335984C5EA2E5;

1.2
date	2006.11.21.02.28.24;	author tg;	state Exp;
branches;
next	1.1;
commitid	100456263EF126F4A4E;

1.1
date	2005.02.05.17.28.54;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.28.54;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.21.39.49;	author tg;	state Exp;
branches;
next	;
commitid	5f0d42e015f52f66;


desc
@@


1.3
log
@move quad support into shared libkern (userland, kernel, bootloader)
@
text
@/*	$OpenBSD: ashrdi3.c,v 1.6 2005/08/08 08:05:35 espie Exp $ */
/*-
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "quad.h"

/*
 * Shift a (signed) quad value right (arithmetic shift right).
 */
quad_t
__ashrdi3(quad_t a, qshift_t shift)
{
	union uu aa;

	if (shift == 0)
		return(a);
	aa.q = a;
	if (shift >= INT_BITS) {
		int s;

		/*
		 * Smear bits rightward using the machine's right-shift
		 * method, whether that is sign extension or zero fill,
		 * to get the `sign word' s.  Note that shifting by
		 * INT_BITS is undefined, so we shift (INT_BITS-1),
		 * then 1 more, to get our answer.
		 */
		/* LINTED inherits machine dependency */
		s = (aa.sl[H] >> (INT_BITS - 1)) >> 1;
		/* LINTED inherits machine dependency*/
		aa.ul[L] = aa.sl[H] >> (shift - INT_BITS);
		aa.ul[H] = s;
	} else {
		aa.ul[L] = (aa.ul[L] >> shift) |
		    (aa.ul[H] << (INT_BITS - shift));
		/* LINTED inherits machine dependency */
		aa.sl[H] >>= shift;
	}
	return (aa.q);
}
@


1.2
log
@sync with libc

attention: possible regressions:
* everything with RCS IDs, SCCS IDs, ident, indentation, weak aliases,
  and the .gnu.warning.* stuff
* these:
  - sys/lib/libkern/qdivrem.c
  - sys/lib/libkern/strcat.c
  - sys/lib/libkern/strcpy.c
* especially these:
  - sys/lib/libkern/arch/i386/SYS.h
  - sys/lib/libkern/arch/sparc/SYS.h
* I reverted these and did NOT commit the change, because they
  look bogus to me:
  - sys/lib/libkern/arch/sparc/_setjmp.S
  - sys/lib/libkern/arch/sparc/divrem.m4

Also, __P() and so on were introduced e.g. in strcat(), and IMHO,
this code needs more work in libc as well.
@
text
@@


1.1
log
@Initial revision
@
text
@d1 1
a1 3
/*	$OpenBSD: ashrdi3.c,v 1.3 2003/06/02 23:28:08 millert Exp $	*/
/*	$NetBSD: ashrdi3.c,v 1.5 1995/10/07 09:26:18 mycroft Exp $	*/

a34 8
#if defined(LIBC_SCCS) && !defined(lint)
#if 0
static char sccsid[] = "@@(#)ashrdi3.c	8.1 (Berkeley) 6/4/93";
#else
static char rcsid[] = "$OpenBSD: ashrdi3.c,v 1.3 2003/06/02 23:28:08 millert Exp $";
#endif
#endif /* LIBC_SCCS and not lint */

d41 1
a41 3
__ashrdi3(a, shift)
	quad_t a;
	qshift_t shift;
d45 2
d48 2
a49 2
	if (shift >= LONG_BITS) {
		long s;
d55 1
a55 1
		 * LONG_BITS is undefined, so we shift (LONG_BITS-1),
d58 4
a61 3
		s = (aa.sl[H] >> (LONG_BITS - 1)) >> 1;
		aa.ul[L] = shift >= QUAD_BITS ? s :
		    aa.sl[H] >> (shift - LONG_BITS);
d63 1
a63 1
	} else if (shift > 0) {
d65 2
a66 1
		    (aa.ul[H] << (LONG_BITS - shift));
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@merge more OpenBSD-HEAD stuff
@
text
@d1 3
d38 5
a42 1
static char rcsid[] = "$OpenBSD: ashrdi3.c,v 1.5 2004/11/28 07:23:41 mickey Exp $";
d51 3
a53 1
__ashrdi3(quad_t a, qshift_t shift)
a56 2
	if (shift == 0)
		return(a);
d58 2
a59 2
	if (shift >= INT_BITS) {
		int s;
d65 1
a65 1
		 * INT_BITS is undefined, so we shift (INT_BITS-1),
d68 3
a70 4
		/* LINTED inherits machine dependency */
		s = (aa.sl[H] >> (INT_BITS - 1)) >> 1;
		/* LINTED inherits machine dependency*/
		aa.ul[L] = aa.sl[H] >> (shift - INT_BITS);
d72 1
a72 1
	} else {
d74 1
a74 2
		    (aa.ul[H] << (INT_BITS - shift));
		/* LINTED inherits machine dependency */
@

