head	1.3;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.2
	MIRBSD_10:1.2.0.2
	MIRBSD_10_BASE:1.2
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2008.08.01.18.09.34;	author tg;	state dead;
branches;
next	1.2;
commitid	1004893513244B11E80;

1.2
date	2006.11.21.02.28.25;	author tg;	state Exp;
branches;
next	1.1;
commitid	100456263EF126F4A4E;

1.1
date	2005.02.05.17.28.55;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.28.55;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.21.39.51;	author tg;	state Exp;
branches;
next	;
commitid	5f0d42e015f52f66;


desc
@@


1.3
log
@more migration

(in case you wonder: goal is to make libc, kernel and bootloaders share
the code currently in libkern, (some of) libsa, and libz, and to move
the bootloaders out of src/sys/ and into some more sane place)
@
text
@/*	$OpenBSD: memcmp.c,v 1.5 2005/08/08 08:05:37 espie Exp $ */
/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Chris Torek.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#if !defined(_KERNEL) && !defined(_STANDALONE)
#include <string.h>
#else
#include <lib/libkern/libkern.h>
#endif

__RCSID("$MirOS: src/sys/lib/libkern/memcmp.c,v 1.2 2006/11/21 02:28:25 tg Exp $");

#ifdef BCMP
#define	memcmp	bcmp
#endif

/*
 * Compare memory regions (vax cmpc3 instruction)
 */
int
memcmp(const void *s1, const void *s2, size_t n)
{
	if (__predict_true(n != 0)) {
		const unsigned char *p1 = s1, *p2 = s2;

		do {
			if (*p1++ != *p2++)
				return (*--p1 - *--p2);
		} while (--n != 0);
	}
	return (0);
}
@


1.2
log
@sync with libc

attention: possible regressions:
* everything with RCS IDs, SCCS IDs, ident, indentation, weak aliases,
  and the .gnu.warning.* stuff
* these:
  - sys/lib/libkern/qdivrem.c
  - sys/lib/libkern/strcat.c
  - sys/lib/libkern/strcpy.c
* especially these:
  - sys/lib/libkern/arch/i386/SYS.h
  - sys/lib/libkern/arch/sparc/SYS.h
* I reverted these and did NOT commit the change, because they
  look bogus to me:
  - sys/lib/libkern/arch/sparc/_setjmp.S
  - sys/lib/libkern/arch/sparc/divrem.m4

Also, __P() and so on were introduced e.g. in strcat(), and IMHO,
this code needs more work in libc as well.
@
text
@d40 1
a40 1
__RCSID("$MirOS: src/lib/libc/string/memcmp.c,v 1.6 2006/06/16 16:49:05 tg Exp $");
@


1.1
log
@Initial revision
@
text
@d1 1
a1 2
/*	$OpenBSD: memcmp.c,v 1.3 2003/06/02 23:28:08 millert Exp $	*/

a33 4
#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: memcmp.c,v 1.3 2003/06/02 23:28:08 millert Exp $";
#endif /* LIBC_SCCS and not lint */

d40 6
d47 1
a47 1
 * Compare memory regions.
d50 1
a50 3
memcmp(s1, s2, n)
	const void *s1, *s2;
	size_t n;
d52 2
a53 2
	if (n != 0) {
		register const unsigned char *p1 = s1, *p2 = s2;
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@merge more OpenBSD-HEAD stuff
@
text
@d1 1
a1 1
/*	$OpenBSD: memcmp.c,v 1.4 2004/08/07 00:38:32 deraadt Exp $	*/
d36 1
a36 1
static char *rcsid = "$OpenBSD: memcmp.c,v 1.4 2004/08/07 00:38:32 deraadt Exp $";
d49 3
a51 1
memcmp(const void *s1, const void *s2, size_t n)
d54 1
a54 1
		const unsigned char *p1 = s1, *p2 = s2;
@

