head	1.3;
access;
symbols
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2;
locks; strict;
comment	@ * @;


1.3
date	2007.02.05.20.16.15;	author tg;	state dead;
branches;
next	1.2;
commitid	10045C78FD963274EDA;

1.2
date	2006.11.21.02.28.25;	author tg;	state Exp;
branches;
next	1.1;
commitid	100456263EF126F4A4E;

1.1
date	2005.02.05.17.28.55;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.28.55;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.21.39.51;	author tg;	state Exp;
branches;
next	;
commitid	5f0d42e015f52f66;


desc
@@


1.3
log
@proof-of-concept implementation of a few functions for the
new "kern" directory containing stuff shared between
* userland (-fhosted -lgcc)
* kernel (-ffreestanding -D_KERNEL -nostdlib)
* bootloader (-ffreestanding -D_STANDALONE -nostdlib)

Here, userland and kernel share some functions not for the
bootloader (e.g. utf-8 stuff), while kernel and bootloader
share a few libgcc replacement functions.

I took the htonl() &c. functions because they were pretty
easy to implement; no sparc assembly version because it's
a 'no-op' and I trust gcc so much as to produce optimised
output for the type foo(type x) { return (x); } case.

Not tested.

Most of the functions will be written "on demand" and re-
written from scratch by me.
@
text
@/*	$OpenBSD: ntohl.c,v 1.6 2005/08/06 20:30:03 espie Exp $ */
/*
 * Written by J.T. Conklin <jtc@@netbsd.org>.
 * Public domain.
 */

#include <sys/types.h>
#include <machine/endian.h>

#undef ntohl

u_int32_t
ntohl(u_int32_t x)
{
#if BYTE_ORDER == LITTLE_ENDIAN
	u_char *s = (u_char *)&x;
	return (u_int32_t)(s[0] << 24 | s[1] << 16 | s[2] << 8 | s[3]);
#else
	return x;
#endif
}
@


1.2
log
@sync with libc

attention: possible regressions:
* everything with RCS IDs, SCCS IDs, ident, indentation, weak aliases,
  and the .gnu.warning.* stuff
* these:
  - sys/lib/libkern/qdivrem.c
  - sys/lib/libkern/strcat.c
  - sys/lib/libkern/strcpy.c
* especially these:
  - sys/lib/libkern/arch/i386/SYS.h
  - sys/lib/libkern/arch/sparc/SYS.h
* I reverted these and did NOT commit the change, because they
  look bogus to me:
  - sys/lib/libkern/arch/sparc/_setjmp.S
  - sys/lib/libkern/arch/sparc/divrem.m4

Also, __P() and so on were introduced e.g. in strcat(), and IMHO,
this code needs more work in libc as well.
@
text
@@


1.1
log
@Initial revision
@
text
@d1 1
a1 3
/*	$OpenBSD: ntohl.c,v 1.3 1996/11/27 19:51:41 niklas Exp $	*/
/*	$NetBSD: ntohl.c,v 1.6.6.1 1996/05/29 23:48:07 cgd Exp $	*/

a6 4
#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$NetBSD: ntohl.c,v 1.6.6.1 1996/05/29 23:48:07 cgd Exp $";
#endif

d13 1
a13 2
ntohl(x)
	u_int32_t x;
a14 2
	u_int32_t y = x;

d16 1
a16 1
	u_char *s = (u_char *)&y;
d19 1
a19 1
	return y;
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@merge more OpenBSD-HEAD stuff
@
text
@d1 3
d10 2
a11 2
static char *rcsid = "$OpenBSD: ntohl.c,v 1.5 2004/11/28 07:23:41 mickey Exp $";
#endif /* LIBC_SCCS and not lint */
d22 2
d25 1
a25 1
	u_char *s = (u_char *)&x;
d28 1
a28 1
	return x;
@

