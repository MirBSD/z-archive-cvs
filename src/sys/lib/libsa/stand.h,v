head	1.18;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.2
	cvs-200808011000:1.1.1.2
	MIRBSD_10:1.7.0.2
	MIRBSD_10_BASE:1.7
	MIRBSD_9_BASE:1.4
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.18
date	2017.08.07.20.18.27;	author tg;	state Exp;
branches;
next	1.17;
commitid	1005988C69344442E37;

1.17
date	2013.10.31.20.06.58;	author tg;	state Exp;
branches;
next	1.16;
commitid	1005272B7081B0E5655;

1.16
date	2011.01.03.19.02.54;	author tg;	state Exp;
branches;
next	1.15;
commitid	1004D221D691CE0C01C;

1.15
date	2009.10.04.16.49.44;	author tg;	state Exp;
branches;
next	1.14;
commitid	1004AC8D234283AB203;

1.14
date	2009.08.11.13.24.01;	author tg;	state Exp;
branches;
next	1.13;
commitid	1004A8170C73C4BAD74;

1.13
date	2009.01.03.13.43.31;	author tg;	state Exp;
branches;
next	1.12;
commitid	100495F6B566145BE45;

1.12
date	2008.08.04.19.10.54;	author tg;	state Exp;
branches;
next	1.11;
commitid	100489754457590501A;

1.11
date	2008.08.03.21.02.05;	author tg;	state Exp;
branches;
next	1.10;
commitid	10048961CCE67B72AC5;

1.10
date	2008.08.02.16.59.23;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004894927E10CB8BAD;

1.9
date	2008.08.01.11.40.07;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004892F62B29B459AD;

1.8
date	2008.08.01.11.25.03;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004892F2924667C00D;

1.7
date	2007.02.06.16.24.45;	author tg;	state Exp;
branches;
next	1.6;
commitid	10045C8ABB857CB69A4;

1.6
date	2006.11.21.13.20.08;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004562FD195F9D6C3A;

1.5
date	2006.11.21.02.53.39;	author tg;	state Exp;
branches;
next	1.4;
commitid	10045626A132AE542D0;

1.4
date	2006.06.16.21.52.54;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004493283B5D0D1060;

1.3
date	2005.11.23.19.24.36;	author tg;	state Exp;
branches;
next	1.2;
commitid	64484384c206894f;

1.2
date	2005.03.06.21.28.08;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.28.59;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.28.59;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.08.01.10.28.38;	author tg;	state Exp;
branches;
next	;
commitid	1004892E54805BE97AB;


desc
@@


1.18
log
@filesystem
@
text
@/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.17 2013/10/31 20:06:58 tg Exp $	*/
/*	$OpenBSD: stand.h,v 1.46 2007/05/04 21:44:07 reyk Exp $	*/
/*	$NetBSD: stand.h,v 1.18 1996/11/30 04:35:51 gwr Exp $	*/

/*-
 * Copyright © 2013
 *	Thorsten “mirabilos” Glaser <tg@@mirbsd.org>
 * Copyright (c) 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)stand.h	8.1 (Berkeley) 6/11/93
 */

#ifndef	_SYS_LIBSA_STAND_H
#define	_SYS_LIBSA_STAND_H

#include <libckern.h>
#include <sys/stat.h>
#include <sys/stdarg.h>
#include "saioctl.h"
#include "saerrno.h"

struct open_file;

/*
 * Useful macros
 */
#define NENTS(x)	(sizeof (x) / sizeof (x[0]))

/*
 * This structure is used to define filesystem operations in a filesystem
 * independent way.
 */
struct fs_ops {
	int	(*open)(char *path, struct open_file *f);
	int	(*close)(struct open_file *f);
	int	(*read)(struct open_file *f, void *buf,
		    size_t size, size_t *resid);
	int	(*write)(struct open_file *f, void *buf,
		    size_t size, size_t *resid);
	off_t	(*seek)(struct open_file *f, off_t offset, int where);
	int	(*stat)(struct open_file *f, struct stat *sb);
	int	(*readdir)(struct open_file *f, char *);
	char	name[8];
};

extern struct fs_ops file_system[];
extern int nfsys;

/* where values for lseek(2) */
#define	SEEK_SET	0	/* set file offset to offset */
#define	SEEK_CUR	1	/* set file offset to current plus offset */
#define	SEEK_END	2	/* set file offset to EOF plus offset */

/* Device switch */
struct devsw {
	char	*dv_name;
	int	(*dv_strategy)(void *devdata, int rw,
				    daddr_t blk, size_t size,
				    void *buf, size_t *rsize);
	int	(*dv_open)(struct open_file *f, ...);
	int	(*dv_close)(struct open_file *f);
	int	(*dv_ioctl)(struct open_file *f, u_long cmd, void *data);
};

extern struct devsw devsw[];	/* device array */

extern struct consdev constab[];
extern struct consdev *cn_tab;

struct open_file {
	int		f_flags;	/* see F_* below */
	struct devsw	*f_dev;		/* pointer to device operations */
	void		*f_devdata;	/* device specific data */
	struct fs_ops	*f_ops;		/* pointer to filesystem operations */
	void		*f_fsdata;	/* filesystem specific data */
	off_t		f_offset;	/* current file offset (F_RAW) */
};

#define	SOPEN_MAX	4
extern struct open_file files[];

/* f_flags values */
#define	F_READ		0x0001	/* file opened for reading */
#define	F_WRITE		0x0002	/* file opened for writing */
#define	F_RAW		0x0004	/* raw device open - no filesystem */
#define F_NODEV		0x0008	/* network open - no device */

#define isupper(c)	((c) >= 'A' && (c) <= 'Z')
#define islower(c)	((c) >= 'a' && (c) <= 'z')
#define isalpha(c)	(isupper(c)||islower(c))
#define tolower(c)	(isupper(c)?((c) - 'A' + 'a'):(c))
#define toupper(c)	(islower(c)?((c) - 'a' + 'A'):(c))
#define isspace(c)	((c) == ' ' || (c) == '\t')
#define isdigit(c)	((c) >= '0' && (c) <= '9')

#define	btochs(b,c,h,s,nh,ns)			\
	c = (b) / ((nh) * (ns));		\
	h = ((b) % ((nh) * (ns))) / (ns);	\
	s = ((b) % ((nh) * (ns))) % (ns);

void	*alloc(u_int);
void	free(void *, u_int);
struct	disklabel;
char	*getdisklabel(const char *, struct disklabel *);
u_int	dkcksum(struct disklabel *);

void	printf(const char *, ...);
int	snprintf(char *, size_t, const char *, ...);
void	vprintf(const char *, va_list);
void	twiddle(void);
void	gets(char *);
__dead void	panic(const char *, ...) __attribute__((__noreturn__));
__dead void	_rtt(void) __attribute__((__noreturn__));
long	strtol(const char *, char **, int);
long long	strtoll(const char *, char **, int);
void	exec(char *, void *, int);
void	exit(void);
int	open(const char *, int);
int	close(int);
void	closeall(void);
ssize_t	read(int, void *, size_t);
ssize_t	write(int, void *, size_t);
int	opendir(char *);
int	readdir(int, char *);
void	closedir(int);
int	nodev(void);
int	noioctl(struct open_file *, u_long, void *);

char	*ttyname(int); /* match userland decl, but ignore !0 */
dev_t	ttydev(char *);
void	cninit(void);
int	cnset(dev_t);
void	cnputc(int);
int	cngetc(void);
int	cnischar(void);
int	cnspeed(dev_t, int);
u_int	sleep(u_int);
void	usleep(u_int);
char *ctime(const time_t *);

int	ioctl(int, u_long, char *);

void	putchar(int);
int	getchar(void);

#ifdef __INTERNAL_LIBSA_CREAD
int	oopen(const char *, int);
int	oclose(int);
ssize_t	oread(int, void *, size_t);
off_t	olseek(int, off_t, int);
#endif

/* Machine dependent functions */
int	devopen(struct open_file *, const char *, char **);
void	machdep_start(char *, int, char *, char *, char *);
time_t	getsecs(void);

#define memcpy(d,s,n)	memmove((d), (s), (n))
#define bcopy(s,d,n)	(void)memmove((d), (s), (n))

#endif
@


1.17
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.16 2011/01/03 19:02:54 tg Exp $	*/
d55 1
a55 1
 * This structure is used to define file system operations in a file system
d99 2
a100 2
	struct fs_ops	*f_ops;		/* pointer to file system operations */
	void		*f_fsdata;	/* file system specific data */
d110 1
a110 1
#define	F_RAW		0x0004	/* raw device open - no file system */
@


1.16
log
@move strchr, strrchr, strncpy to kern; remove redundant strncmp, strncasecmp protos
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.15 2009/10/04 16:49:44 tg Exp $	*/
d6 2
d137 2
a138 2
__dead void	panic(const char *, ...) __attribute__((noreturn));
__dead void	_rtt(void) __attribute__((noreturn));
@


1.15
log
@more nonsensical code cleanup, I give up, this is horrid
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.14 2009/08/11 13:24:01 tg Exp $	*/
a136 2
char	*strncpy(char *, const char *, size_t);
int	strncmp(const char *, const char *, size_t);
a138 1
char	*strchr(const char *, int);
@


1.14
log
@Totally revamp the virtual device code.

Unbreak:
• floppy access (BIOS)
• hard disc access (BIOS)
• CD-ROM El Torito access (BIOS)
• cd9660, fat, ffs (filesystems)

Not tested:
• tftp, nfs (PXE, NET, filesystems)
• lmbmfs (lmbm)
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.13 2009/01/03 13:43:31 tg Exp $	*/
a148 2
int	stat(const char *path, struct stat *sb);
int	fstat(int fd, struct stat *sb);
@


1.13
log
@• cut down on stack usage
• improve reliability (especially on 64K and larger reads)
• remove alloca
• nuke tori transfer buffer
by making use of a paragraph-aligned 4 KiB bounce buffer very early in
the .bss section (allocated in srt0.S, which is first in link)

XXX biosdev.c ist eine Ausgeburt an Häßlichkeit!
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.12 2008/08/04 19:10:54 tg Exp $	*/
d66 1
a88 1
extern int ndevs;		/* number of elements in devsw[] */
@


1.12
log
@next round of build etc. fixes
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.11 2008/08/03 21:02:05 tg Exp $	*/
a124 1
void	*alloca(size_t);
@


1.11
log
@Hacked in the train to Zwitserland:

• new: memcpy()=bcopy()=memmove()
• new macro: __strong_alias (incidentally, TNF has exactly the same name
  and exactly (except an ‘a’ more) the same implementation)
• use __strong_alias and #ifdef lint instead of duplicate code via unifdef
  abuse
• sprinkle a few uses of _ALIGN_TEXT
• remove duplicate memmove, memcpy, bcopy and ovbcopy implementations
  from the i386 kernel
• _ALIGN_TEXT is a nop #ifdef SMALL
• remove more duplicate definitions, etc.
• remove more dead code from bootloader -D_TEST
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.10 2008/08/02 16:59:23 tg Exp $	*/
d188 1
a188 1
#define bcopy(s,d,n)	(void)memmove((s), (d), (n))
@


1.10
log
@remaining fixes
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.9 2008/08/01 11:40:07 tg Exp $	*/
d39 1
a39 2
#include <sys/types.h>
#include <sys/cdefs.h>
a44 10
#ifndef NULL
#ifdef __GNUG__
#define	NULL		__null
#elif defined(lint)
#define	NULL		0
#else
#define	NULL		((void *)((__PTRDIFF_TYPE__)0UL))
#endif
#endif

a137 3
#define	bcopy(s1,s2,n)	((void)memcpy((s2),(s1),(n)))
void	*memcpy(void *, const void *, size_t);
int	memcmp(const void *, const void *, size_t);
a139 6
int	strcmp(const char *, const char *);
size_t	strlen(const char *);
size_t	 strlcpy(char *, const char *, size_t)
		__attribute__ ((__bounded__(__string__,1,3)));
size_t	 strlcat(char *, const char *, size_t)
		__attribute__ ((__bounded__(__string__,1,3)));
a142 1
void	*memset(void *, int, size_t);
a156 1
void	nullsys(void);
a157 9
int	null_open(char *path, struct open_file *f);
int	null_close(struct open_file *f);
ssize_t	null_read(struct open_file *f, void *buf,
			size_t size, size_t *resid);
ssize_t	null_write(struct open_file *f, void *buf,
			size_t size, size_t *resid);
off_t	null_seek(struct open_file *f, off_t offset, int where);
int	null_stat(struct open_file *f, struct stat *sb);
int	null_readdir(struct open_file *f, char *name);
d187 2
a188 1
#include <libckern.h>
@


1.9
log
@prototype fixes
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.8 2008/08/01 11:25:03 tg Exp $	*/
d61 1
a61 6
#define NENTS(x)	sizeof(x)/sizeof(x[0])
/* don't define if libkern included */
#ifndef LIBKERN_INLINE
#define	max(a,b)	(((a)>(b))? (a) : (b))
#define	min(a,b)	(((a)>(b))? (b) : (a))
#endif
a148 2
#define	bzero(s,n)	((void)memset((s),0,(n)))
#define bcmp(s1,s2,n)	(memcmp((s2),(s1),(n)))
@


1.8
log
@merge and reduce diff to obsd
XXX not yet tested
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.7 2007/02/06 16:24:45 tg Exp $	*/
d46 10
d149 1
a149 1
void	vprintf(const char *, __va_list);
@


1.7
log
@next proof-of-concept move: strlen (no asm yet)
XXX libkern/libsa include path might be missing
XXX libkern/libsa/MD-libkern/MD-libsa build is ugly
@
text
@d1 2
a2 2
/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.6 2006/11/21 13:20:08 tg Exp $	*/
/*	$OpenBSD: stand.h,v 1.43 2004/01/03 14:08:53 espie Exp $	*/
d139 1
a139 1
void	vprintf(const char *, _BSD_VA_LIST_);
d144 1
a144 2
#if 0
#define bzero(s,n)	((void)memset((s),0,(n)))
d146 2
a147 3
#endif
#define bcopy(s1,s2,n)	((void)memmove((s2),(s1),(n)))
void	*memmove(void *, const void *, size_t);
d152 1
d158 1
@


1.6
log
@correct strlcpy defns
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.5 2006/11/21 02:53:39 tg Exp $	*/
a157 1
size_t	strlen(const char *);
d215 2
@


1.5
log
@remove dead and insecure code
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.4 2006/06/16 21:52:54 tg Exp $	*/
d154 4
a157 4
size_t strlcpy(char *, const char *, int)
	__attribute__ ((__bounded__(__string__,1,3)));
size_t strlcat(char *, const char *, int)
	__attribute__ ((__bounded__(__string__,1,3)));
@


1.4
log
@with virtue and a cross-developing environment,
make this almost usable (not tested the result)
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.3 2005/11/23 19:24:36 tg Exp $	*/
a151 1
char	*strcpy(char *, const char *);
d154 4
@


1.3
log
@fix kernel build again after recent changes
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/lib/libsa/stand.h,v 1.2 2005/03/06 21:28:08 tg Exp $	*/
d144 5
@


1.2
log
@* merge src/sys/
  (at least the better part of it)
* revert IPv6 networking to OpenBSD, since
  I didn't get IPV4_MAPPED addresses working :(
@
text
@d1 1
a1 1
/**	$MirOS$	*/
a45 4
#ifndef NULL
#define	NULL	((void *)((_BSD_PTRDIFF_T_)0UL))
#endif

@


1.1
log
@Initial revision
@
text
@d1 1
d36 3
d47 1
a47 1
#define	NULL	0
d148 1
a148 4
#define	bzero(s,n)	((void)memset((s),0,(n)))
#define bcmp(s1,s2,n)	(memcmp((s2),(s1),(n)))
#define	bcopy(s1,s2,n)	((void)memcpy((s2),(s1),(n)))
void	*memcpy(void *, const void *, size_t);
d212 1
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@import bootloader-related pieces from openbsd, as first part of the
aspired 4.4 merge… and something else
@
text
@d1 1
a1 1
/*	$OpenBSD: stand.h,v 1.46 2007/05/04 21:44:07 reyk Exp $	*/
d139 1
a139 1
void	vprintf(const char *, __va_list);
d150 1
a154 1
long long	strtoll(const char *, char **, int);
@

