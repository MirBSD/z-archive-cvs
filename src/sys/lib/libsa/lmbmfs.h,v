head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2009.12.26.15.06.15;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004B3626670CBA1E38;

1.2
date	2009.08.11.13.24.00;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004A8170C73C4BAD74;

1.1
date	2009.08.09.18.51.44;	author tg;	state Exp;
branches;
next	;
commitid	1004A7F1A1B76A4634B;


desc
@@


1.3
log
@split “lmbm” dummy device from lmbmfs filesystem, call it “DUMY” (dummydev)
@
text
@/* $MirOS: src/sys/lib/libsa/lmbmfs.h,v 1.2 2009/08/11 13:24:00 tg Exp $ */

#ifndef _SYS_LIB_LIBSA_LMBMFS_H
#define _SYS_LIB_LIBSA_LMBMFS_H

struct lmbm_modinfo;

int lmbmfs_open(char *, struct open_file *);
int lmbmfs_close(struct open_file *);
int lmbmfs_read(struct open_file *, void *, size_t, size_t *);
int lmbmfs_write(struct open_file *, void *, size_t, size_t *);
off_t lmbmfs_seek(struct open_file *, off_t, int);
int lmbmfs_stat(struct open_file *, struct stat *);
int lmbmfs_readdir(struct open_file *, char *);

int lmbmfs_init(void);

extern uint32_t lmbm_num;

#endif
@


1.2
log
@Totally revamp the virtual device code.

Unbreak:
• floppy access (BIOS)
• hard disc access (BIOS)
• CD-ROM El Torito access (BIOS)
• cd9660, fat, ffs (filesystems)

Not tested:
• tftp, nfs (PXE, NET, filesystems)
• lmbmfs (lmbm)
@
text
@d1 1
a1 1
/* $MirOS: src/sys/lib/libsa/lmbmfs.h,v 1.1 2009/08/09 18:51:44 tg Exp $ */
a15 5
int lmbm_strategy(void *, int ,daddr_t, size_t, void *, size_t *);
int lmbm_open(struct open_file *, ...);
int lmbm_close(struct open_file *);
int lmbm_ioctl(struct open_file *, u_long, void *);

@


1.1
log
@Add new (virtual) filesystem “lmbm” (Loadable MultiBoot Modules, like LKM)
that contains the modules we got passed when loaded as Multiboot OS Kernel
as per the spec. Quirks:
• case sensitive
• supports “ls” on its (virtual) root directory
• does *not* support filesystems (cuts off both the directory part of the
  module string passed and the directory part when opening a file, but the
  root directory can only be opened as “/” or “/.” (or “lmbm:/”, etc.)
• assumes that we and all modules are loaded below 20 MiB in RAM
• moves modules on filesystem initialisation (virtual disc probe) to just
  above 20 MiB in RAM
• assumes the kernel will fit below 20 MiB in RAM, too
• does not affect non-multiboot operation
@
text
@d1 1
a1 1
/* $MirOS: src/sys/lib/libsa/fat.h,v 1.2 2005/12/17 05:46:26 tg Exp $ */
a23 1
extern struct lmbm_modinfo *lmbm_ofs;
@

