head	1.44;
access;
symbols
	MIRBSD_10:1.29.0.2
	MIRBSD_10_BASE:1.29
	MIRBSD_9_BASE:1.15
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3;
locks; strict;
comment	@# @;


1.44
date	2018.04.28.05.00.19;	author tg;	state Exp;
branches;
next	1.43;
commitid	1005AE3FFF4125513E9;

1.43
date	2014.11.26.19.29.30;	author tg;	state Exp;
branches;
next	1.42;
commitid	10054762A213E06B080;

1.42
date	2014.02.09.22.49.30;	author tg;	state Exp;
branches;
next	1.41;
commitid	10052F806114B993C09;

1.41
date	2013.08.06.17.06.26;	author tg;	state Exp;
branches;
next	1.40;
commitid	10052012D144F7753C5;

1.40
date	2013.08.05.22.06.17;	author tg;	state Exp;
branches;
next	1.39;
commitid	100520021D16E80D23B;

1.39
date	2012.08.17.17.22.40;	author tg;	state Exp;
branches;
next	1.38;
commitid	100502E7DF8466D9102;

1.38
date	2011.11.20.23.40.12;	author tg;	state Exp;
branches;
next	1.37;
commitid	1004EC98FF17AF0E4B3;

1.37
date	2011.11.20.04.57.14;	author tg;	state Exp;
branches;
next	1.36;
commitid	1004EC8880406A80564;

1.36
date	2010.07.30.21.03.36;	author tg;	state Exp;
branches;
next	1.35;
commitid	1004C533E2F105DC051;

1.35
date	2009.02.16.21.10.04;	author tg;	state Exp;
branches;
next	1.34;
commitid	1004999D6403100E93D;

1.34
date	2008.08.16.23.21.46;	author tg;	state Exp;
branches;
next	1.33;
commitid	10048A7610C2F4B7024;

1.33
date	2008.08.03.00.21.26;	author tg;	state Exp;
branches;
next	1.32;
commitid	1004894F96F745C42A9;

1.32
date	2008.08.01.18.09.32;	author tg;	state Exp;
branches;
next	1.31;
commitid	1004893513244B11E80;

1.31
date	2008.08.01.15.12.38;	author tg;	state Exp;
branches;
next	1.30;
commitid	100489327F067360E73;

1.30
date	2008.03.21.00.00.13;	author tg;	state Exp;
branches;
next	1.29;
commitid	10047E2FAA3252CD043;

1.29
date	2007.06.11.21.23.13;	author tg;	state Exp;
branches;
next	1.28;
commitid	100466DBD51629C517F;

1.28
date	2007.06.11.21.21.25;	author tg;	state Exp;
branches;
next	1.27;
commitid	100466DBCD5249559D5;

1.27
date	2007.05.08.21.52.55;	author tg;	state Exp;
branches;
next	1.26;
commitid	1004640F14A456E3051;

1.26
date	2007.02.19.03.03.30;	author tg;	state Exp;
branches;
next	1.25;
commitid	10045D913776373EBF0;

1.25
date	2007.02.07.20.43.23;	author tg;	state Exp;
branches;
next	1.24;
commitid	10045CA39907FBE4A06;

1.24
date	2007.02.07.05.15.56;	author tg;	state Exp;
branches;
next	1.23;
commitid	10045C960A241EB2FCD;

1.23
date	2007.02.06.23.10.00;	author tg;	state Exp;
branches;
next	1.22;
commitid	10045C90ACE602238E9;

1.22
date	2007.02.06.21.04.10;	author tg;	state Exp;
branches;
next	1.21;
commitid	10045C8ED4264D6B5E3;

1.21
date	2007.02.06.20.37.24;	author tg;	state Exp;
branches;
next	1.20;
commitid	10045C8E70F6B91E61C;

1.20
date	2007.02.06.18.59.14;	author tg;	state Exp;
branches;
next	1.19;
commitid	10045C8D0123814039D;

1.19
date	2007.01.26.19.33.12;	author tg;	state Exp;
branches;
next	1.18;
commitid	10045BA577D1DF64163;

1.18
date	2006.12.13.00.28.35;	author tg;	state Exp;
branches;
next	1.17;
commitid	100457F48CE459EC15A;

1.17
date	2006.12.11.23.55.04;	author tg;	state Exp;
branches;
next	1.16;
commitid	100457DEFC626A6A05C;

1.16
date	2006.07.01.16.57.14;	author tg;	state Exp;
branches;
next	1.15;
commitid	10044A6A9764EEC6C2A;

1.15
date	2006.06.15.19.56.43;	author tg;	state Exp;
branches;
next	1.14;
commitid	1004491BB666BF1F1EC;

1.14
date	2006.06.12.21.57.09;	author tg;	state Exp;
branches;
next	1.13;
commitid	100448DE33A783BA43F;

1.13
date	2006.06.12.12.28.45;	author tg;	state Exp;
branches;
next	1.12;
commitid	100448D5E0B4B6F5D7C;

1.12
date	2006.06.11.01.19.18;	author tg;	state Exp;
branches;
next	1.11;
commitid	100448B6FA21CBD77C9;

1.11
date	2006.03.27.09.40.16;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004427B30B564F0E3E;

1.10
date	2006.03.27.09.27.26;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004427B00C05C55EAD;

1.9
date	2006.01.31.11.26.26;	author tg;	state Exp;
branches;
next	1.8;
commitid	10043DF497762D71CB9;

1.8
date	2006.01.31.10.41.29;	author tg;	state Exp;
branches;
next	1.7;
commitid	10043DF3ED932CCC4B2;

1.7
date	2006.01.31.10.17.47;	author tg;	state Exp;
branches;
next	1.6;
commitid	10043DF394F7289586C;

1.6
date	2006.01.15.23.46.37;	author tg;	state Exp;
branches;
next	1.5;
commitid	10043CADEE658B3AB53;

1.5
date	2006.01.11.12.21.08;	author tg;	state Exp;
branches;
next	1.4;
commitid	10043C4F836602FFEB8;

1.4
date	2006.01.11.12.15.16;	author tg;	state Exp;
branches;
next	1.3;
commitid	10043C4F6B709C2AFA1;

1.3
date	2005.12.20.18.06.13;	author tg;	state Exp;
branches;
next	1.2;
commitid	10043A847EC26AC1439;

1.2
date	2005.12.19.20.12.32;	author tg;	state Exp;
branches;
next	1.1;
commitid	10043A7143F568D2104;

1.1
date	2005.12.18.02.20.39;	author tg;	state Exp;
branches;
next	;
commitid	10043A4C7724F998DEF;


desc
@@


1.44
log
@frobnicate the entire SYSTEM_LD crap to make it work
@
text
@# $MirOS: src/sys/conf/Makefile.inc,v 1.43 2014/11/26 19:29:30 tg Exp $
#-
# Copyright (c) 2005, 2006, 2007, 2008, 2018
#	mirabilos <m@@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.
#-
# This file includes most kernel compile rules commonly used, by all
# architectures' kernel Makefiles.

MKDEP?=		mkdep
SIZE?=		size
STRIP?=		strip

KERNBASE?=	$S/../kern

depend:: beforedepend .WAIT

INCLUDES=	-nostdinc -I. -I$S/arch -I$S -I${KERNBASE}/include
CDIAGFLAGS=	-Werror -Wall -Wstrict-prototypes -Wmissing-prototypes \
		-Wno-uninitialized -Wno-main -ffreestanding
.if ${IDENT:M-DNO_PROPOLICE}
CDIAGFLAGS+=	-fno-stack-protector
.endif
COPTS?=		-Os
.if ${COPTS:M-O*:N-Os}
COPTS+=		-Os
.endif
.if !${COPTS:M-Os}
COPTS+=		-Os
.endif
CFLAGS=		${DEBUG} ${CDIAGFLAGS} ${CMACHFLAGS} \
		${COPTS:C/-g[0-9]//:S/-g//} ${PIPE} ${CSYS}
AFLAGS=		-x assembler-with-cpp -traditional-cpp -D_LOCORE
STRIPFLAGS=	-g -X -x -R .comment

.include "${KERNBASE}/z/Makefile.inc"

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o newvers
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
#	@@${SYSTEM_LD_GZIP}
SYSTEM_OBJ?=	locore.o init_ssp.o config_gz.o mirtime_getleaps.o \
		param.o ioconf.o ${OBJS} ${LIBKERN} ${LIBCOMPAT}
SYSTEM_DEP?=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD?=rm -f $@@ $@@~
SYSTEM_LD?=	@@echo ${LD} ${LINKFLAGS} -o $@@~ '$${SYSTEM_OBJ}' vers.o; \
		${LD} ${LINKFLAGS} -o $@@~ ${SYSTEM_OBJ} vers.o
SYSTEM_LD_TAIL?=@@set -e; ${SIZE} $@@~; chmod 755 $@@~
DEBUG?=
SYSTEM_LD_TAIL+=; \
		echo cp $@@~ $@@.unstripped; \
		rm -f $@@.unstripped; cp $@@~ $@@.unstripped; \
		echo Running kvm_mkdb...; \
		kvm_mkdb -o . ./$@@~; \
		mv kvm_$@@~.db kvm_$@@.db
.if ${DEBUG} == "-g"
LINKFLAGS+=	-X
SYSTEM_LD_TAIL+=; \
		echo ${STRIP} ${STRIPFLAGS} $@@~; ${STRIP} ${STRIPFLAGS} $@@~
.else
LINKFLAGS+=	-x
SYSTEM_LD_TAIL+=; \
		objcopy -R .comment $@@~
.endif
SYSTEM_LD_POST?=:
SYSTEM_LD_TAIL+=; \
		${SYSTEM_LD_POST}
.ifndef NO_GZIP
SYSTEM_LD_GZIP=	echo gzip -n9 $@@; gzip -fn9 -o $@@ $@@~
.else
SYSTEM_LD_GZIP=	mv $@@~ $@@
.endif

# currently always, not because patents but because broken
CPPFLAGS+=	-DMSDOSFS_NO_LFN

HOSTCC=		${CC}
HOSTCPPFLAGS=	${CPPFLAGS:N-nostdinc:N-D_KERNEL}
HOSTCFLAGS?=	${CFLAGS}

### find out what to use for libkern
.include "$S/lib/libkern/Makefile.inc"
LIBKERN=	${KERNLIB}

### find out what to use for libcompat
.include "$S/compat/common/Makefile.inc"
LIBCOMPAT=	${COMPATLIB}

# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL or DRIVER; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.

NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} -c $<
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PARAM} -c $<

DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PARAM} -c $<

NORMAL_S=	${CC} -D_ASM_SOURCE ${AFLAGS} ${CPPFLAGS} -c $<
NORMAL_S_C=	${CC} -D_ASM_SOURCE ${AFLAGS} ${CPPFLAGS} ${PARAM} -c $<

HOSTED_C=	${HOSTCC} ${HOSTCFLAGS} ${HOSTCPPFLAGS} -c $<

.MAIN: all

# these are 'make depend'ed
_COMMON_SRCS=	param.c ioconf.c
SRCS?=		${_MDINC}/locore.s ${_COMMON_SRCS} ${CFILES} ${SFILES}

# Propolice init
init_ssp.o: $S/kern/init_ssp.c
	${NORMAL_C} -fno-stack-protector

assym.h: $S/kern/genassym.sh ${_MDINC}/genassym.cf Makefile
	${SHELL} $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} <${_MDINC}/genassym.cf >assym.h.tmp && \
	    mv -f assym.h.tmp assym.h

ioconf.o: ioconf.c
	${NORMAL_C}

locore.o: ${_MDINC}/locore.s assym.h
	${NORMAL_S}

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${NORMAL_C_C}

# depend on root or device configuration
autoconf.o conf.o: Makefile

# depend on maxusers
machdep.o: Makefile

config_gz.o: $S/conf/config_gz.S config.gz
	${NORMAL_S}

mirtime_getleaps.c: $S/conf/make_leaps.c
	${HOSTCC} ${HOSTCFLAGS} ${HOSTCPPFLAGS} -o make_leaps $>
	./make_leaps >$@@ || (rm -f $@@; false)

config.gz: config.txt
	-@@rm -f $@@
	gzip -n9 <$> >$@@

clean::
	rm -f eddep *bsd *.unstripped tags *.[io] [a-z]*.s config.gz \
	    [Ee]rrs linterrs makelinks genassym genassym.o assym.h \
	    make_leaps mirtime_getleaps.c ${ZLIB_CLEANFLS}

depend:: .depend
beforedepend:
	rm -f syskern
	ln -s ${KERNBASE:Q}/include syskern
.depend: ${SRCS} assym.h param.c ${APMINC} ${ZLIB_GENHDRS} mirtime_getleaps.c
	CC=${CC:Q} ${MKDEP} -D_ASM_SOURCE ${AFLAGS} ${CPPFLAGS} \
	    ${_MDINC}/locore.s
	CC=${CC:Q} ${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
.if defined(SFILES) && !empty(SFILES)
	CC=${CC:Q} ${MKDEP} -a -D_ASM_SOURCE ${AFLAGS} ${CPPFLAGS} ${SFILES}
.endif
	CC=${CC:Q} ${SHELL} $S/kern/genassym.sh ${MKDEP} -f assym.dep \
	    ${CFLAGS} ${CPPFLAGS} <${_MDINC}/genassym.cf
	@@sed -e 's/.*\.o:.* /assym.h: /' <assym.dep >>.depend
	@@rm -f assym.dep

INSTALL_KERNEL=	bsd
install-unstripped:
	@@cd ${.CURDIR} && exec ${MAKE} install INSTALL_KERNEL=bsd.unstripped
install:
	@@if [[ -e /bsd ]]; then \
		echo Move /bsd out of the way!; \
		exit 1; \
	elif [[ ! -e /bsd.old ]]; then \
		echo Back up your old kernel to /bsd.old!; \
		exit 1; \
	else \
		set -x; \
		install -c -o root -g daemon -m 400 ${INSTALL_KERNEL} /bsd; \
		install -c -o root -g wheel -m 644 \
		    kvm_bsd.db /var/db/kvm_bsd.new; \
	fi

links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u >dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' >makelinks
	${SHELL} makelinks && rm -f dontlink makelinks

lint:
	@@lint -hbxncez -DGENERIC -Dvolatile= ${CPPFLAGS} ${PARAM} -UKGDB \
	    ${CFILES} ioconf.c param.c | \
	    grep -v 'static function .* unused'

newvers: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	${SHELL} $S/conf/newvers.sh "${OSrev}" "${OSrpl}" "${OScompat}"
	${CC} ${CFLAGS} ${CPPFLAGS} -c vers.c

tags:
	@@echo "see $S/kern/Makefile for tags"
@


1.43
log
@remove MKC_USAP fully from the tree, we don’t deal with patents
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.42 2014/02/09 22:49:30 tg Exp $
d3 2
a4 2
# Copyright (c) 2005, 2006, 2007, 2008
#	Thorsten "mirabilos" Glaser <tg@@mirbsd.de>
d53 1
a53 1
# xxx: ${SYSTEM_DEP} swapxxx.o
d57 1
d61 4
a64 4
SYSTEM_LD_HEAD?=rm -f $@@
SYSTEM_LD?=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_OBJ}' vers.o; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o
SYSTEM_LD_TAIL?=@@${SIZE} $@@; chmod 755 $@@
d67 5
a71 3
		echo cp $@@ $@@.unstripped; \
		rm -f $@@.unstripped; cp $@@ $@@.unstripped; \
		echo Running kvm_mkdb...; kvm_mkdb -o . ./$@@
d75 1
a75 1
		echo ${STRIP} ${STRIPFLAGS} $@@; ${STRIP} ${STRIPFLAGS} $@@
d79 1
a79 1
		objcopy -R .comment $@@
d81 3
d85 1
a85 1
SYSTEM_LD_GZIP=	echo gzip -n9 $@@; rm -f $@@.gz; gzip -n9 $@@; mv $@@.gz $@@
d87 1
a87 1
SYSTEM_LD_GZIP=	:
@


1.42
log
@tentatively drop C99
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.41 2013/08/06 17:06:26 tg Exp $
d84 1
a84 1
#.if ${MKC_USAP:L} == "yes"
a85 1
#.endif
@


1.41
log
@get rid of the now useless ZLIB_CONST
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.40 2013/08/05 22:06:17 tg Exp $
d45 1
a45 1
CFLAGS=		${DEBUG} ${CDIAGFLAGS} ${CMACHFLAGS} -std=gnu99 \
@


1.40
log
@-DZCONST=const → -DZLIB_CONST

XXX sys/conf/Makefile.inc does it twice?
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.39 2012/08/17 17:22:40 tg Exp $
a37 1
CPPFLAGS+=	-DZLIB_CONST
a50 1
CPPFLAGS+=	-DZLIB_CONST
@


1.39
log
@properly remove -g3 from COPTS
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.38 2011/11/20 23:40:12 tg Exp $
d38 1
a38 1
CPPFLAGS+=	-DZCONST=const
d52 1
a52 1
CPPFLAGS+=	-DZCONST=const
@


1.38
log
@continue MirTime work; allows libc and kernel to compile
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.37 2011/11/20 04:57:14 tg Exp $
d47 1
a47 1
		${COPTS:S/-g//:C/-g[0-9]//} ${PIPE} ${CSYS}
@


1.37
log
@first steps toward a new time API
• no DJB code (actual code) any more, only reimplementation of algorithms
  whose code is placed in USA PD
• no struct returns any more
• skip the extra tai_t step
• no _t suffix for types I define
• try to be a bit more elegant – I learned a lot since then, after all

the old ABI is still provided until we bump libc major
‣ the new API might wander off libc into libmbfun then, _too_

goal is functional equivalence (after all, it’s been proven correct)
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.36 2010/07/30 21:03:36 tg Exp $
d30 2
d169 3
@


1.36
log
@for now, define MSDOSFS_NO_LFN unconditionally
see mailing lists for discussion

tbf asap
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.35 2009/02/16 21:10:04 tg Exp $
d57 1
a57 1
SYSTEM_OBJ?=	locore.o init_ssp.o config_gz.o tai_leaps.o \
d153 3
a155 3
tai_leaps.c: $S/conf/tai_make.c
	${HOSTCC} ${HOSTCFLAGS} ${HOSTCPPFLAGS} -o tai_make $>
	./tai_make >$@@ || (rm -f $@@; false)
d164 1
a164 1
	    tai_make tai_leaps.c ${ZLIB_CLEANFLS}
d167 1
a167 1
.depend: ${SRCS} assym.h param.c ${APMINC} ${ZLIB_GENHDRS} tai_leaps.c
@


1.35
log
@add install-unstripped target
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.34 2008/08/16 23:21:46 tg Exp $
d84 1
a84 1
.if ${MKC_USAP:L} == "yes"
d86 1
a86 1
.endif
@


1.34
log
@we must build our kernels with -std=c99/gnu99 now, due to restrict keyword
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.33 2008/08/03 00:21:26 tg Exp $
d179 3
d191 1
a191 1
		install -c -o root -g daemon -m 400 bsd /; \
@


1.33
log
@• fix use of functions and replacement gcc builtins without declaration (C99)
• use “buffer” style ipv “string” style bounds check on bcmp, bzero,
  memchr, memcmp, and memset, as sizeof (pointer) is a valid idiom (kernel)
• tai_leaps.o was missing in the kernel objects after removal from libkern
• do not redefine min or NULL (libckern)
• sync lists
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.32 2008/08/01 18:09:32 tg Exp $
d44 1
a44 1
CFLAGS=		${DEBUG} ${CDIAGFLAGS} ${CMACHFLAGS} \
@


1.32
log
@more migration

(in case you wonder: goal is to make libc, kernel and bootloaders share
the code currently in libkern, (some of) libsa, and libz, and to move
the bootloaders out of src/sys/ and into some more sane place)
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.31 2008/08/01 15:12:38 tg Exp $
d57 1
a57 1
SYSTEM_OBJ?=	locore.o init_ssp.o config_gz.o \
@


1.31
log
@convert to use zlib from src/kern/z instead of src/lib/libz
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.30 2008/03/21 00:00:13 tg Exp $
d153 4
d163 2
a164 1
	    [Ee]rrs linterrs makelinks genassym genassym.o assym.h
d167 1
a167 1
.depend: ${SRCS} assym.h param.c ${APMINC} ${ZLIB_GENHDRS}
@


1.30
log
@fix the NO_GZIP case (yes, sparc is done, i386 isn’t…)
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.29 2007/06/11 21:23:13 tg Exp $
d3 1
a3 1
# Copyright (c) 2005, 2006, 2007
a11 4
# Advertising materials mentioning features or use of this work must
# display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
d49 3
a156 4
HOSTCPPFLAGS+=	-I${BSDSRCDIR}/lib/libz -DZCONST=const
.PATH: ${BSDSRCDIR}/lib/libz
.include "${BSDSRCDIR}/lib/libz/Makefile.gen"

d162 1
a162 1
.depend: ${SRCS} assym.h param.c ${APMINC} crc32.h inffixed.h trees.h
@


1.29
log
@nah, better, make it active only after rebooting
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.28 2007/06/11 21:21:25 tg Exp $
d81 2
@


1.28
log
@install the generated kvm db by default, to benefit those who set it to NO
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.27 2007/05/08 21:52:55 tg Exp $
d187 2
a188 1
		install -c -o root -g wheel -m 644 kvm_bsd.db /var/db/; \
@


1.27
log
@ZCONST
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.26 2007/02/19 03:03:30 tg Exp $
d187 1
@


1.26
log
@* begin __CRAZY cleanup of config(8), not yet completed
  due to time constraints
* store the kernel config as section .config.gz, gzip'd
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.25 2007/02/07 20:43:23 tg Exp $
d40 1
d156 1
a156 1
HOSTCPPFLAGS+=	-I${BSDSRCDIR}/lib/libz
@


1.25
log
@* attempt to move taitime(3) functions from libc and kernel to kernbase,
  its prototypes from <time.h> and <sys/time.h> (which includes <time.h>)
  and <lib/libkern/taitime.h> to <sys/taitime.h>, split between indepen-
  dent and dependent (kernel/userland different leap table initialisation;
  userland additional tai_time(), taina_time(), importtai(), exporttai()),
  reduce required headers; reduce diff from headers to upstream
* move kernel tai leap second table from kernel objects to libkern
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.24 2007/02/07 05:15:56 tg Exp $
d57 1
a57 1
SYSTEM_OBJ?=	locore.o init_ssp.o \
d65 4
a71 1
		echo cp $@@ $@@.gdb; rm -f $@@.gdb; cp $@@ $@@.gdb; \
a77 4

SYSTEM_LD_TAIL+=; \
		echo Running kvm_mkdb...; kvm_mkdb -o . ./$@@

d148 7
d160 1
a160 1
	rm -f eddep *bsd *bsd.gdb tags *.[io] [a-z]*.s \
@


1.24
log
@we don't really need RCS IDs in the created kernel image, and this is easier than disabling them in the source
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.23 2007/02/06 23:10:00 tg Exp $
d57 1
a57 1
SYSTEM_OBJ?=	locore.o tai_leaps.o init_ssp.o \
d118 1
a118 1
_COMMON_SRCS=	param.c ioconf.c tai_leaps.c
a142 7
tai_leaps.o: tai_leaps.c
	${NORMAL_C}

tai_leaps.c: $S/lib/libkern/tai_make.c
	${HOSTCC} ${HOSTCFLAGS} ${HOSTCPPFLAGS} -o tai_make $>
	./tai_make >$@@ || (rm -f $@@; false)

@


1.23
log
@-Wno-format ?
Ja seid ihr denn aller guten Geister verlassen?
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.22 2007/02/06 21:04:10 tg Exp $
d50 1
a50 1
STRIPFLAGS=	-g -X -x
d72 2
@


1.22
log
@as things stand now, ${HOSTCPPFLAGS} must contain -Ifoo where foo is
the source path of the zlib files

XXX this will go away once we use the zlib sources from kernbase
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.21 2007/02/06 20:37:24 tg Exp $
d36 1
a36 1
		-Wno-uninitialized -Wno-format -Wno-main -ffreestanding
@


1.21
log
@now that we have matching zlib headers in KERNBASE/include, use them
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.20 2007/02/06 18:59:14 tg Exp $
d154 1
@


1.20
log
@include kernbase/include; fix indentation while here
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.19 2007/01/26 19:33:12 tg Exp $
d3 1
a3 1
# Copyright (c) 2005, 2006
d34 1
a34 2
INCLUDES=	-nostdinc -I. -I$S/arch -I$S -I${BSDSRCDIR}/lib/libz \
		-I${KERNBASE}/include
@


1.19
log
@same -Os handling: default to it, but don't overly add it
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.18 2006/12/13 00:28:35 tg Exp $
d28 3
a30 3
MKDEP?=	mkdep
SIZE?=	size
STRIP?=	strip
d32 4
a35 1
INCLUDES=	-nostdinc -I. -I$S/arch -I$S -I${BSDSRCDIR}/lib/libz
@


1.18
log
@From *(gcc)C Dialect Options::

| `-ffreestanding'
|      Assert that compilation takes place in a freestanding environment.
|      This implies `-fno-builtin'.

So we don't need -fno-builtin-{printf,log} here any more.

|      [...]  There is no corresponding
|      `-fbuiltin-FUNCTION' option; if you wish to enable built-in
|      functions selectively when using `-fno-builtin' or
|      `-ffreestanding', you may define macros such as:
|
|           #define abs(n)          __builtin_abs ((n))
|           #define strcpy(d, s)    __builtin_strcpy ((d), (s))

This is to be taken care of eventually. Building the
kernel with -fhosted is no option, neither is using
the generic -fbuiltin one.
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.17 2006/12/11 23:55:04 tg Exp $
d38 7
a44 1
COPTS?=		-O2
@


1.17
log
@mostly administrative licence sync w/ current template
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.16 2006/07/01 16:57:14 tg Exp $
a37 1
CDIAGFLAGS+=	-fno-builtin-printf -fno-builtin-log
@


1.16
log
@we should be able to use a.out syms all over mirbsd again, now
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.15 2006/06/15 19:56:43 tg Exp $
d6 5
a10 6
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
d12 2
a13 2
# All advertising materials mentioning features or use of this soft-
# ware must display the following acknowledgement:
d16 8
a23 8
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a nontrivial bug.
@


1.15
log
@pregenerate a kvm_bsd.db on kernel build;
allow the user to not run kvm_mkdb(8) on boot

this is for people (mostly) building (custom) kernels,
wanting to not load debugging symbols into (precious) RAM
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.14 2006/06/12 21:57:09 tg Exp $
a78 3
# XXX no a.out arches in MirOS?
CPPFLAGS+=	-DDB_NO_AOUT

@


1.14
log
@make it easier for these who can't use tai_make
to copy tai_leaps.c from a MirOS system and use
that instead
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.13 2006/06/12 12:28:45 tg Exp $
d68 3
@


1.13
log
@gna, fsck it, just disable a.out symbol table support in ddb(4)
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.12 2006/06/11 01:19:18 tg Exp $
d138 2
a139 1
tai_leaps.c: tai_make
a141 6
tai_make: tai_make.o
	${HOSTCC} ${HOSTCFLAGS} -o $@@ $>

tai_make.o: $S/lib/libkern/tai_make.c
	${HOSTED_C}

@


1.12
log
@it's HOSTCC, HOSTCFLAGS, HOSTLDFLAGS, everything else up to the user
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.11 2006/03/27 09:40:16 tg Exp $
d76 3
@


1.11
log
@consolidate the MD kernel makefiles even more
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.10 2006/03/27 09:27:26 tg Exp $
d77 2
a78 2
HOSTED_CPPFLAGS=${CPPFLAGS:N-nostdinc:N-D_KERNEL}
HOSTED_CFLAGS=	${CFLAGS}
d102 1
a102 1
HOSTED_C=	${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<
d139 1
a139 1
	${HOSTCC} ${HOSTED_CFLAGS} -o $@@ $>
@


1.10
log
@use -D_ASM_SOURCE for compiling and depending .s/.S files
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.9 2006/01/31 11:26:26 tg Exp $
d4 1
a4 1
#	Thorsten "mirabile" Glaser <tg@@mirbsd.de>
d46 22
d108 1
d114 11
a131 3
ioconf.o: ioconf.c
	${NORMAL_C}

d144 6
d153 3
a155 2
# libz generated headers
.depend: crc32.h inffixed.h trees.h
d157 12
a168 3
newvers: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	${SHELL} $S/conf/newvers.sh "${OSrev}" "${OSrpl}" "${OScompat}"
	${CC} ${CFLAGS} ${CPPFLAGS} -c vers.c
a181 12
clean::
	rm -f eddep *bsd *bsd.gdb tags *.[io] [a-z]*.s \
	    [Ee]rrs linterrs makelinks genassym genassym.o assym.h

lint:
	@@lint -hbxncez -DGENERIC -Dvolatile= ${CPPFLAGS} ${PARAM} -UKGDB \
	    ${CFILES} ioconf.c param.c | \
	    grep -v 'static function .* unused'

tags:
	@@echo "see $S/kern/Makefile for tags"

d190 8
a197 2
# depend on root or device configuration
autoconf.o conf.o: Makefile
d199 2
a200 2
# depend on maxusers
machdep.o: Makefile
@


1.9
log
@don't store file name in bsd.gz (what for? ;)
saves a few bytes
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.8 2006/01/31 10:41:29 tg Exp $
d77 2
a78 2
NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<
NORMAL_S_C=	${CC} ${AFLAGS} ${CPPFLAGS} ${PARAM} -c $<
@


1.8
log
@include tai_leaps into depends target
while here, revamp common files dependency creation
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.7 2006/01/31 10:17:47 tg Exp $
d47 1
a47 1
SYSTEM_LD_GZIP=	echo gzip -9 $@@; rm -f $@@.gz; gzip -9 $@@; mv $@@.gz $@@
@


1.7
log
@move CFLAGS definition to MI code; strip out -g1 as well
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.6 2006/01/15 23:46:37 tg Exp $
d84 3
@


1.6
log
@gzip all kernels - our loaders can cope with it
(experimental)
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.5 2006/01/11 12:21:08 tg Exp $
d41 2
@


1.5
log
@* MSDOS_ -> MSDOSFS_ for consistency
* force a conflict in an #ifdef notyet block, just in case
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.4 2006/01/11 12:15:16 tg Exp $
d44 4
@


1.4
log
@* if MSDOSFSMNT_SHORTNAME is set, unset MSDOSFSMNT_LONGNAME
* if MKC_USAP is set in /etc/make.cfg, force MSDOSFSMNT_NOWIN95
  (the -9 option) to avoid patent problems (pre-MS-DOS-7 behaviour)
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.3 2005/12/20 18:06:13 tg Exp $
d45 1
a45 1
CPPFLAGS+=	-DMSDOS_NO_LFN
@


1.3
log
@* sys/conf/*: encode releases (semel, bis, ter, quater, ...)
  in the MirOS patchlevel: 80, 82, 84, 86... are releases,
  all others -stable (until 9F, which is "the last stable")
* tmac/mdoc/doc-common: add OpenBSD 3.8, 3.9 while here

reminded to check by bsiegert@@
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.2 2005/12/19 20:12:32 tg Exp $
d3 1
a3 1
# Copyright (c) 2005
d44 4
@


1.2
log
@* fix typo
* add .MAIN target
@
text
@d1 1
a1 1
# $MirOS: src/sys/conf/Makefile.inc,v 1.1 2005/12/18 02:20:39 tg Exp $
d107 1
a107 2
	${SHELL} $S/conf/newvers.sh "${OSrev}" "${OSrpl}" \
	    "${OSREV:C/^${OSrev}.//}" "${OScompat}"
@


1.1
log
@consolidate the Makefile rules shared between all architectures (supported)
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/licence.template,v 1.4 2005/12/15 02:46:54 tg Rel $
d72 2
@

