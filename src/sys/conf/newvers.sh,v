head	1.21;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.1
	MIRBSD_10:1.15.0.2
	MIRBSD_10_BASE:1.15
	MIRBSD_9_BASE:1.11
	MIRBSD_8:1.9.0.2
	MIRBSD_8_BASE:1.9
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.21
date	2012.10.19.18.59.40;	author tg;	state Exp;
branches;
next	1.20;
commitid	1005081A33215C2F05A;

1.20
date	2010.09.19.10.55.48;	author tg;	state Exp;
branches;
next	1.19;
commitid	1004C95EC2E6943E42F;

1.19
date	2010.09.12.18.31.36;	author tg;	state Exp;
branches;
next	1.18;
commitid	1004C8D1C8C6446AD76;

1.18
date	2010.07.11.17.29.32;	author tg;	state Exp;
branches;
next	1.17;
commitid	1004C39FF8B59EB3167;

1.17
date	2010.07.11.11.56.04;	author tg;	state Exp;
branches;
next	1.16;
commitid	1004C39B0F253C2A554;

1.16
date	2008.03.21.19.22.17;	author tg;	state Exp;
branches;
next	1.15;
commitid	10047E40AFE44E65982;

1.15
date	2007.02.19.03.03.30;	author tg;	state Exp;
branches;
next	1.14;
commitid	10045D913776373EBF0;

1.14
date	2006.12.11.23.55.04;	author tg;	state Exp;
branches;
next	1.13;
commitid	100457DEFC626A6A05C;

1.13
date	2006.11.21.02.38.34;	author tg;	state Exp;
branches;
next	1.12;
commitid	100456266AC5E94A8E9;

1.12
date	2006.09.13.18.34.28;	author tg;	state Exp;
branches;
next	1.11;
commitid	10045084F401C6CF6A7;

1.11
date	2006.06.04.00.28.43;	author tg;	state Exp;
branches;
next	1.10;
commitid	100448229427FFC924A;

1.10
date	2006.04.05.20.31.04;	author tg;	state Exp;
branches;
next	1.9;
commitid	100443428D337424A5B;

1.9
date	2005.12.21.00.07.20;	author tg;	state Exp;
branches;
next	1.8;
commitid	10043A89CCE33D0262C;

1.8
date	2005.12.20.18.06.13;	author tg;	state Exp;
branches;
next	1.7;
commitid	10043A847EC26AC1439;

1.7
date	2005.12.17.05.46.26;	author tg;	state Exp;
branches;
next	1.6;
commitid	10043A3A3E65E20A413;

1.6
date	2005.06.14.13.53.37;	author tg;	state Exp;
branches;
next	1.5;
commitid	4e3e42aee168022f;

1.5
date	2005.06.14.00.17.58;	author tg;	state Exp;
branches;
next	1.4;
commitid	3cea42ae223d4b69;

1.4
date	2005.03.15.00.03.45;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.14.22.39.26;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.06.21.27.32;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.44;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.44;	author tg;	state Exp;
branches;
next	;


desc
@@


1.21
log
@The arc4random code in libevent suggests to look at the papers in more
detail and skip 256 * 12 bytes (plus fuzz) instead of 256 * 4 bytes
@
text
@#!/bin/mksh
# $MirOS: src/sys/conf/newvers.sh,v 1.20 2010/09/19 10:55:48 tg Exp $
#-
# Copyright (c) 2003, 2004, 2005, 2006, 2008, 2010, 2012
#	Thorsten Glaser <tg@@mirbsd.de>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.
#-
# Kernel version generation script
# Called with: MirBSD major minor level openbsdlevel
#
# List of files to check for version number bumps:
#	sys/sys/param.h, share/mk/sys.mk
#	share/tmac/mdoc/doc-{common,syms}
#	share/tmac/tmac.an.old

# MirBSD version cycle calculation
typeset -i     "_osrmj=${1:-9}"	# Major MirBSD revision number fallback
typeset -Uui16 "_osrmn=${2:-0}"	# only update the above once per release!
if (( _osrmn < 0 || _osrmn > 255 || _osrmj < 7 )); then
	print -u2 "Error: versioning information damaged!"
	exit 1
fi
let _osrmx=0
if ((_osrmn < 16)); then
	_osrtc="?"	# <unknown/damaged>
elif ((_osrmn < 128)); then
	_osrtc="n"	# nearly
elif ((_osrmn == 128)); then
	_osrtc="r"	# released
elif ((_osrmn < 160)); then
	_osrtc="s"	# stable
	let _osrmx=_osrmn-128
else
	_osrtc="u"	# unlocked
fi
if ((_osrmx < 1)); then
	_osrex=""	# regular release/snapshot/local build (-semel)
else			# released for the second, third... time
	case $_osrmx {
	(2)	_osrex=bis		;;
	(4)	_osrex=ter		;;
	(6)	_osrex=quater		;;
	(8)	_osrex=quinquies	;;
	(*)	_osrex=num.$((_osrmx / 2 + 1))ies ;;
	}
	(( (_osrmx % 2) == 1 )) && _osrex=-stable
	(( _osrmn == 159 )) && _osrex=-final
fi
onmj="${_osrmn#16#}$_osrex"
osl="${_osrmj}${_osrtc}${onmj}"

# Everything else
[[ -s version ]] || print 0 >version
touch version
let "wv=$(<version)"

if [[ $4 = +([0-9]).+([0-9]) ]]; then
	osc=" from OpenBSD $4"
else
	osc=
fi
ost="$(uname)"
tm="$(date)"
wd="$(pwd)"
wh="$(hostname)"
wk="$(basename "$wd")"
wt="$(TZ=UTC date '+%Y%m%d')"
wu="$(id -un 2>/dev/null)" || wu=root
myname="$(cd $(dirname "$0"); print -r "$(pwd)/$(basename "$0")")"


# arc4random(3) in Pure mksh™
set -A seedbuf -- $(dd if=/dev/arandom bs=277 count=1 2>&- | \
    hexdump -ve '1/1 "0x%02X "')
set -A rs_S
typeset -i rs_S rs_i=-1 rs_j=0 n
while (( ++rs_i < 256 )); do
	(( rs_S[rs_i] = rs_i ))
done
rs_i=-1
while (( ++rs_i < 256 )); do
	(( n = rs_S[rs_i] ))
	(( rs_j = (rs_j + n + seedbuf[rs_i]) & 0xFF ))
	(( rs_S[rs_i] = rs_S[rs_j] ))
	(( rs_S[rs_j] = n ))
done
rs_i=0
rs_j=0
typeset -i rs_out
function arcfour_byte {
	typeset -i si sj

	(( rs_i = (rs_i + 1) & 0xFF ))
	(( si = rs_S[rs_i] ))
	(( rs_j = (rs_j + si) & 0xFF ))
	(( sj = rs_S[rs_j] ))
	(( rs_S[rs_i] = sj ))
	(( rs_S[rs_j] = si ))
	(( rs_out = rs_S[(si + sj) & 0xFF] ))
}
(( n = 256 * 12 + seedbuf[256] + (RANDOM & 0xFF) ))
while (( n-- )); do
	arcfour_byte
done
(( n = rs_out ))
while (( n-- )); do
	arcfour_byte
done

(( irandseed = ((rs_out + (
    (seedbuf[257] << 24) | (seedbuf[258] << 16) |
    (seedbuf[259] << 8) | seedbuf[260])) | 1) & 0x7FFFFFFF ))


(cat <<EOF
/* Automatically generated by $myname - Do not edit. */

#include <sys/types.h>
#include <sys/slibkern.h>

const char ostype[]="$ost";
const char osrelease[]="$_osrmj";
const char ospatchlevel[]="#${osl}-$wt";
const char osversion[]="${wk}#$wv";
const char sccs[]=
    "	@@(#)$ost $_osrmj rev.${onmj}${osc} ($wk) #${wv}: ${tm}\n";
const char version[]=
    "${ost}#$osl ($wk) #${wv}: ${tm}\n\t${wu}@@${wh}:${wd}\n";

uint32_t _randseed = ${irandseed};
unsigned char initial_entropy[16] = {
EOF
typeset -Uui16 -Z5 seedbuf rs_S rs_i rs_j
n=260
print -n '\t'
while (( ++n < 277 )); do
	print -n 0x${seedbuf[n]#16#}
	(( n == 276 )) || print -n ', '
done
print '\n};'
print -n 'struct arcfour_status initial_arc4random = {\n\t{'
n=-1
while (( ++n < 256 )); do
	if (( n & 15 )); then
		print -n ' '
	else
		print -n '\n\t\t'
	fi
	print -n 0x${rs_S[n]#16#}
	(( n == 255 )) || print -n ,
done
print '\n\t},' 0x${rs_i#16#}, 0x${rs_j#16#}
print '};'
) >vers.c

print $((wv + 1)) >version
@


1.20
log
@implement arc4random() in Pure mksh™ so that we can use arc4random(9)
very early once it picks this up using the pre-generated internal state
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.19 2010/09/12 18:31:36 tg Exp $
d4 1
a4 1
# Copyright (c) 2003, 2004, 2005, 2006, 2008, 2010
d86 2
a87 2
# arc4random in Pure mksh
set -A hostent -- $(dd if=/dev/arandom bs=277 count=1 2>&- | \
d97 1
a97 1
	(( rs_j = (rs_j + n + hostent[rs_i]) & 0xFF ))
d115 1
a115 1
(( n = 1024 + hostent[276] + (RANDOM & 0xFF) ))
d125 2
a126 2
    (hostent[256] << 24) | (hostent[257] << 16) |
    (hostent[258] << 8) | hostent[259])) | 1) & 0x7FFFFFFF ))
d147 2
a148 2
typeset -Uui16 -Z5 hostent rs_S rs_i rs_j
n=259
d150 3
a152 3
while (( ++n < 276 )); do
	print -n 0x${hostent[n]#16#}
	(( n == 275 )) || print -n ', '
@


1.19
log
@make random() a possible early alternative until arc4random(9) works
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.18 2010/07/11 17:29:32 tg Exp $
a84 2
ientropy=$(dd if=/dev/arandom bs=16 count=1 2>&- | hexdump -ve '1/1 "0x%02X, "')
irandseed=$(dd if=/dev/arandom bs=4 count=1 2>&- | hexdump -ve '1/4 "0x%08X"')
d86 41
a126 1
(( irandseed = (irandseed & 0x7FFFFFFF) | 1 ))
d128 2
a129 1
cat >vers.c <<EOF
d133 1
d145 1
a145 2
unsigned char initial_entropy[16] =
    { ${ientropy%, } };
d147 22
@


1.18
log
@… did I mention that -v ought to have been the default?
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.17 2010/07/11 11:56:04 tg Exp $
d86 3
d93 2
d104 1
@


1.17
log
@remove calls to “set ±o arc4random” from all scripts
(and the arc4random_uniform implementation in shell from
rc.netselect.common – could be done with dd(1) but is too
expensive, and not really needed here anyway)

YOU *WILL* NEED TO UPGRADE /etc/rc WITH THIS VERSION BEFORE
UPGRADING /bin/{sh,mksh} TO THIS MONTH’S CODE!
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.16 2008/03/21 19:22:17 tg Exp $
d85 1
a85 1
ientropy=$(dd if=/dev/arandom bs=16 count=1 2>&- | hexdump -e '1/1 "0x%02X, "')
@


1.16
log
@I thought this could be nice: add 128 bits of boot entropy to each kernel
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.15 2007/02/19 03:03:30 tg Exp $
d4 1
a4 1
# Copyright (c) 2003, 2004, 2005, 2006, 2008
d85 1
a85 2
set -o arc4random
ientropy="$((RANDOM & 255)), $((RANDOM & 255)), $((RANDOM & 255)), $((RANDOM & 255)), $((RANDOM & 255)), $((RANDOM & 255)), $((RANDOM & 255)), $((RANDOM & 255)), $((RANDOM & 255)), $((RANDOM & 255)), $((RANDOM & 255)), $((RANDOM & 255)), $((RANDOM & 255)), $((RANDOM & 255)), $((RANDOM & 255)), $((RANDOM & 255))"
d100 1
a100 1
    { $ientropy };
@


1.15
log
@* begin __CRAZY cleanup of config(8), not yet completed
  due to time constraints
* store the kernel config as section .config.gz, gzip'd
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.14 2006/12/11 23:55:04 tg Exp $
d4 1
a4 1
# Copyright (c) 2003, 2004, 2005, 2006
d85 3
d99 3
@


1.14
log
@mostly administrative licence sync w/ current template
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.13 2006/11/21 02:38:34 tg Exp $
a87 4
#ifdef INCLUDE_CONFIG_FILE
#include "config_file.h"
#endif

@


1.13
log
@don't pack the kernel overly with RCS IDs or SCCS IDs,
should save a few bytes on the floppies
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.12 2006/09/13 18:34:28 tg Exp $
d7 5
a11 6
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
d13 8
a20 8
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a nontrivial bug.
@


1.12
log
@implement (and correct, for newvers.sh) version mapping
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.11 2006/06/04 00:28:43 tg Exp $
d98 1
a98 2
    "	@@(#)$ost $_osrmj rev.${onmj}${osc} ($wk) #${wv}: ${tm}\n"
    "	generated by @@(#)\$MirOS: src/sys/conf/newvers.sh,v 1.11 2006/06/04 00:28:43 tg Exp $\n";
@


1.11
log
@fix username (not) showing up in kernels
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.10 2006/04/05 20:31:04 tg Exp $
d59 1
a59 1
	(*)	_osrex=num.$((_osrmx / 2))ies	;;
d99 1
a99 1
    "	generated by @@(#)\$MirOS: src/sys/conf/newvers.sh,v 1.10 2006/04/05 20:31:04 tg Exp $\n";
@


1.10
log
@use "typeset -Uui16" for unsigned uppercase integer hexadecimal,
to prevent stuff like "x=-16#21524111" (0xDEADBEEF) which breaks
about all my scripts
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.6 2006/01/24 22:24:02 tg Rel $
d83 1
a83 1
wu="${USER:-root}"
d99 1
a99 1
    "	generated by @@(#)\$MirOS: src/sys/conf/newvers.sh,v 1.9 2005/12/21 00:07:20 tg Exp $\n";
@


1.9
log
@...
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.8 2005/12/20 18:06:13 tg Exp $
d4 2
a5 2
# Copyright (c) 2003, 2004, 2005
#	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
d32 2
a33 2
typeset -i    "_osrmj=${1:-9}"	# Major MirBSD revision number fallback
typeset -ui16 "_osrmn=${2:-0}"	# only update the above once per release!
d99 1
a99 1
    "	generated by @@(#)\$MirOS: src/sys/conf/newvers.sh,v 1.8 2005/12/20 18:06:13 tg Exp $\n";
@


1.8
log
@* sys/conf/*: encode releases (semel, bis, ter, quater, ...)
  in the MirOS patchlevel: 80, 82, 84, 86... are releases,
  all others -stable (until 9F, which is "the last stable")
* tmac/mdoc/doc-common: add OpenBSD 3.8, 3.9 while here

reminded to check by bsiegert@@
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.7 2005/12/17 05:46:26 tg Exp $
d60 1
a60 1
	esac
d99 1
a99 1
    "	generated by @@(#)\$MirOS: src/sys/conf/newvers.sh,v 1.7 2005/12/17 05:46:26 tg Exp $\n";
@


1.7
log
@big fat licence update (I left some which are bsiegert@@'s alone though)
also, remove licence boilerplate from some .h files who don't deserve it
and remove and add some advertising clauses because I say so
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.6 2005/06/14 13:53:37 tg Exp $
a33 1
typeset -i    "_osrmx=1+${3:-0}"
d35 1
a35 1
	print "Error: versioning information damaged!" >&2
d38 1
d41 1
a41 1
  elif ((_osrmn < 128)); then
d43 1
a43 1
  elif ((_osrmn == 128)); then
d45 1
a45 1
  elif ((_osrmn < 160)); then
d47 2
a48 1
  else
d51 1
a51 1
if ((_osrmx < 2)); then
d53 7
a59 9
  else			# released for the second, third... time
	[[ $_osrtc = s ]] || _osrtc="r"
	case $_osrmx in
		100)	_osrex=-stable		;;
		2)	_osrex=bis		;;
		3)	_osrex=ter		;;
		4)	_osrex=quater		;;
		5)	_osrex=quinquies	;;
		*)	_osrex=num.${_osrmx}ies	;;
d61 2
d99 1
a99 1
    "	generated by @@(#)\$MirOS: src/sys/conf/newvers.sh,v 1.6 2005/06/14 13:53:37 tg Exp $\n";
@


1.6
log
@nobody cares about which version of OpenBSD we sync'd last,
besides it can be seen with $ what bsd
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.5 2005/06/14 00:17:58 tg Exp $
d14 8
a21 7
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of this work, even if advised of the possibility of such damage.
d98 1
a98 1
    "	generated by @@(#)\$MirOS: src/sys/conf/newvers.sh,v 1.5 2005/06/14 00:17:58 tg Exp $\n";
@


1.5
log
@* mksh
* shorten startup a bit

XXX convert to newish sedecimal style, etc.pp
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.4 2005/03/15 00:03:45 tg Exp $
a71 1
	oscs="${4}-"
a73 1
	oscs=
d97 1
a97 1
    "	generated by @@(#)\$MirOS: src/sys/conf/newvers.sh,v 1.4 2005/03/15 00:03:45 tg Exp $\n";
d99 1
a99 1
    "${ost}#$osl [$oscs] ($wk) #${wv}: ${tm}\n\t${wu}@@${wh}:${wd}\n";
@


1.4
log
@- bios0 flags 0x0008 seems to have reversed its meaning already earlier
  * fix it up
  * and document it
- unbark newvers
@
text
@d1 2
a2 2
#!/bin/ksh
# $MirOS: src/sys/conf/newvers.sh,v 1.3 2005/03/14 22:39:26 tg Exp $
d82 1
a82 1
wt="$(TZ=right/UTC date '+%Y%m%d')"
d99 1
a99 1
    "	generated by @@(#)\$MirOS: src/sys/conf/newvers.sh,v 1.3 2005/03/14 22:39:26 tg Exp $\n";
d101 1
a101 1
    "${ost}#$osl $oscs$wt ($wk) #${wv}: ${tm}\n\t${wu}@@${wh}:${wd}\n";
@


1.3
log
@allow to miss obsd compat version
@
text
@d2 1
a2 1
# $MirOS: src/sys/conf/newvers.sh,v 1.2 2005/03/06 21:27:32 tg Exp $
d72 1
d75 1
d89 1
a89 1
#ifdef	INCLUDE_CONFIG_FILE
d99 1
a99 1
    "	generated by @@(#)\$MirOS: src/sys/conf/newvers.sh,v 1.2 2005/03/06 21:27:32 tg Exp $\n";
d101 1
a101 1
    "${ost}#$osl ${osc}-$wt ($wk) #${wv}: ${tm}\n\t${wu}@@${wh}:${wd}\n";
@


1.2
log
@* merge src/sys/
  (at least the better part of it)
* revert IPv6 networking to OpenBSD, since
  I didn't get IPV4_MAPPED addresses working :(
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.2 2005/03/03 19:43:30 tg Rel $
d70 5
a74 1
osc="${4:-0.0}"
d96 2
a97 2
    "	@@(#)$ost $_osrmj rev.${onmj} from OpenBSD ${osc} ($wk) #${wv}: ${tm}\n"
    "	generated by @@(#)\$MirOS$\n";
@


1.1
log
@Initial revision
@
text
@d1 60
a60 37
#!/bin/sh -
#
#	$OpenBSD: newvers.sh,v 1.62 2004/04/05 08:34:10 deraadt Exp $
#	$NetBSD: newvers.sh,v 1.17.2.1 1995/10/12 05:17:11 jtc Exp $
#
# Copyright (c) 1984, 1986, 1990, 1993
#	The Regents of the University of California.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	@@(#)newvers.sh	8.1 (Berkeley) 4/20/94

if [ ! -r version -o ! -s version ]
then
	echo 0 > version
d62 2
d65 2
d68 11
a78 2
v=`cat version` u=${USER-root} d=`pwd` h=`hostname` t=`date`
id=`basename ${d}`
d80 5
a84 32
# additional things which need version number upgrades:
#	src/sys/sys/param.h:
#		OpenBSD symbol
#		OpenBSD_X_X symbol
#	src/share/tmac/mdoc/doc-common
#		change	.       ds oS OpenBSD X.X
#		add	.	if "\\$2"X.X"  .as oS \0X.X
#	src/share/tmac/mdoc/doc-syms
#		ensure new release is listed
#	src/share/mk/sys.mk
#		OSMAJOR
#		OSMINOR
#	src/distrib/miniroot/install.sub
#		VERSION
#	src/etc/root/root.mail
#		VERSION and other bits
#	src/sys/arch/macppc/stand/tbxidata/bsd.tbxi
#		change	/X.X/macppc/bsd.rd
#
# -current and -beta tagging:
#	For release, select STATUS ""
#	Right after release unlock, select STATUS "-current"
#	A month or so before release, select STATUS "-beta"

ost="OpenBSD"
osr="3.5"

cat >vers.c <<eof
#define STATUS "-current"
#if 0
#define STATUS "-beta"
#define STATUS ""			/* release */
d87 10
a96 8
const char ostype[] = "${ost}";
const char osrelease[] = "${osr}";
const char osversion[] = "${id}#${v}";
const char sccs[] =
    "    @@(#)${ost} ${osr}" STATUS " (${id}) #${v}: ${t}\n";
const char version[] =
    "${ost} ${osr}" STATUS " (${id}) #${v}: ${t}\n    ${u}@@${h}:${d}\n";
eof
d98 1
a98 1
expr ${v} + 1 > version
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
