head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2012.09.07.20.06.40;	author tg;	state Exp;
branches;
next	1.2;
commitid	100504A53E80AE0808B;

1.2
date	2011.11.20.23.40.12;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004EC98FF17AF0E4B3;

1.1
date	2011.11.20.04.57.14;	author tg;	state Exp;
branches;
next	;
commitid	1004EC8880406A80564;


desc
@@


1.3
log
@add support for 32-bit time_t systems
@
text
@/*-
 * Copyright (c) 2004, 2005, 2007, 2011, 2012
 *	Thorsten Glaser <tg@@mirbsd.org>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 *-
 * Generate a dump of what leap seconds userspace currently knows of,
 * for use within an environment where tzdata is not available.
 */

#include <err.h>
#include <stdio.h>
#include <time.h>

__RCSID("$MirOS: src/sys/conf/make_leaps.c,v 1.2 2011/11/20 23:40:12 tg Exp $");

static const char preamble[] =
"/* AUTOMATICALLY GENERATED - DO NOT EDIT! */\n"
"\n"
"#include <sys/time.h>\n"
"\n"
"__RCSID(\"From: $MirOS: src/sys/conf/make_leaps.c,v 1.2 2011/11/20 23:40:12 tg Exp $\");\n"
"\n"
"static time_t _leaps_tt[] = {\n";

static const char epilogue[] =
"	/* spare for config(8) */\n"
"	0,\n"
"	0,\n"
"	0,\n"
"	0,\n"
"	0,\n"
"	0,\n"
"	/* last one must be 0 */\n"
"	0,\n"
"	/* past last one must be -1 */\n"
"	(time_t)-1\n"
"};\n"
"\n"
"const time_t *\n"
"mirtime_getleaps(void)\n"
"{\n"
"	return (_leaps_tt);\n"
"}\n";

int
main(void)
{
	const time_t *lp;

	lp = mirtime_getleaps();

	fputs(preamble, stdout);
	while (*lp)
		if (sizeof(time_t) == 4)
			printf("\t0x%08XL,\n", (uint32_t)*lp++);
		else
			printf("\t0x%016llXLL,\n", (uint64_t)*lp++);
	fputs(epilogue, stdout);

	return (0);
}
@


1.2
log
@continue MirTime work; allows libc and kernel to compile
@
text
@d2 1
a2 1
 * Copyright (c) 2004, 2005, 2007, 2011
d28 1
a28 1
__RCSID("$MirOS: src/sys/conf/make_leaps.c,v 1.1 2011/11/20 04:57:14 tg Exp $");
d35 1
a35 1
"__RCSID(\"From: $MirOS: src/sys/conf/make_leaps.c,v 1.1 2011/11/20 04:57:14 tg Exp $\");\n"
d68 4
a71 1
		printf("\t0x%016llXLL,\n", *lp++);
@


1.1
log
@first steps toward a new time API
• no DJB code (actual code) any more, only reimplementation of algorithms
  whose code is placed in USA PD
• no struct returns any more
• skip the extra tai_t step
• no _t suffix for types I define
• try to be a bit more elegant – I learned a lot since then, after all

the old ABI is still provided until we bump libc major
‣ the new API might wander off libc into libmbfun then, _too_

goal is functional equivalence (after all, it’s been proven correct)
@
text
@d28 1
a28 1
__RCSID("$MirOS: src/share/misc/licence.template,v 1.28 2008/11/14 15:33:44 tg Rel $");
d35 1
a35 1
"__RCSID(\"From: $MirOS$\");\n"
d37 1
a37 1
"static time_t _leaps[] = {\n";
d56 1
a56 1
"	return (_leaps);\n"
d60 1
a60 1
main(int argc, char *argv[])
d62 1
a62 1
	time_t *lp;
d68 1
a68 1
		printf("\t0x%16llXLL,\n", *lp++);
@

