head	1.6;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.1
	MIRBSD_10:1.3.0.4
	MIRBSD_10_BASE:1.3
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2009.12.06.15.47.54;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004B1BD2365E8149EE;

1.5
date	2009.10.16.17.35.57;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004AD8AEE146D3F72A;

1.4
date	2008.11.09.20.20.32;	author tg;	state Exp;
branches;
next	1.3;
commitid	100491746220C6CA82B;

1.3
date	2007.10.01.21.05.40;	author tg;	state Exp;
branches;
next	1.2;
commitid	100470161397D26F4B1;

1.2
date	2007.10.01.18.58.08;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004701432129474A8A;

1.1
date	2005.02.05.17.29.18;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.18;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Apply my fix from Debian #530861
@
text
@/* $MirOS: src/sys/sys/stdarg.h,v 1.5 2009/10/16 17:35:57 tg Exp $ */

/*-
 * Copyright (c) 2007, 2008, 2009
 *	Thorsten Glaser <tg@@mirbsd.org>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 */

#ifndef _STDARG_H
#define _STDARG_H

/* ragge's pcc, nwcc, gcc3+ etc. do stdargs in a machine-independent way */
#if (defined(__GNUC__) && (__GNUC__ >= 3)) || \
    (defined(__PCC__) && ((__PCC__ > 0) || (__PCC_MINOR__ > 9) || \
     ((__PCC_MINOR__ == 9) && (__PCC_MINORMINOR__ > 8)))) || \
    (defined(__llvm__) && defined(__clang__)) || \
    defined(__NWCC__)

#include <machine/ansi.h>

#if defined(__GNUC__) && (__GNUC__ >= 3)
#ifndef __GNUC_VA_LIST
#define __GNUC_VA_LIST
typedef __builtin_va_list __gnuc_va_list;
#endif
typedef __gnuc_va_list va_list;
#else
typedef _BSD_VA_LIST_ va_list;
#endif

#if (defined(__llvm__) && defined(__clang__)) || \
    (__GNUC__ > 4) || ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4))
#define va_start(ap,list)	__builtin_va_start((ap), (list))
#else
#define va_start(ap,list)	__builtin_stdarg_start((ap), (list))
#endif
/* note: “type” must be promoted, i.e. “short” is not valid, use “int” */
#define va_arg(ap,type)		__builtin_va_arg((ap), type)
#define va_end(ap)		__builtin_va_end(ap)

#if !defined(_ANSI_SOURCE) && \
    (!defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE) || \
     defined(_ISOC99_SOURCE) || (__STDC_VERSION__ - 0) >= 199901L)
#define va_copy(dst,src)	__builtin_va_copy((dst), (src))
#endif

#else /* ! pcc > 0.9.8 || gcc >= 3 || llvm+clang || nwcc */
/* try to cover up for type and stack alignment, etc. */
#include <machine/stdarg.h>
#endif /* ! pcc > 0.9.8 || gcc >= 3 || llvm+clang || nwcc */

#endif /* !_STDARG_H */
@


1.5
log
@* make our includes more nwcc friendly (it now likes <stdbool.h> even
  in non-gnu mode)
* revamp stdarg handling (XXX wth is __gnuc_va_list for, moid?)
@
text
@d1 1
a1 1
/* $MirOS: src/sys/sys/stdarg.h,v 1.4 2008/11/09 20:20:32 tg Exp $ */
d45 2
a46 1
#if defined(__llvm__) && defined(__clang__)
@


1.4
log
@another fix for LLVM+Clang
@
text
@d1 1
a1 1
/* $MirOS: src/sys/sys/stdarg.h,v 1.3 2007/10/01 21:05:40 tg Exp $ */
d4 2
a5 2
 * Copyright (c) 2007, 2008
 *	Thorsten Glaser <tg@@mirbsd.de>
d26 3
a28 2
/* ragge's pcc and gcc3+ do stdargs in a machine-independent way */
#if (defined(__PCC__) && ((__PCC__ > 0) || (__PCC_MINOR__ > 9) || \
d30 2
a31 2
    (defined(__GNUC__) && (__GNUC__ >= 3)) || \
    (defined(__llvm__) && defined(__clang__))
a32 3
#ifdef __PCC__
typedef char *va_list;
#else /* !__PCC__ */
d35 1
a39 1

d41 3
a43 1
#endif /* !__PCC__ */
d60 1
a60 1
#else /* ! pcc > 0.9.8 || gcc >= 3 */
d63 1
a63 1
#endif /* ! pcc > 0.9.8 || gcc >= 3 */
@


1.3
log
@oeps
@
text
@d1 1
a1 1
/* $MirOS: src/sys/sys/stdarg.h,v 1.2 2007/10/01 18:58:08 tg Exp $ */
d4 1
a4 1
 * Copyright (c) 2007
d29 2
a30 1
    (defined(__GNUC__) && (__GNUC__ >= 3))
d45 3
d49 1
@


1.2
log
@… originally I intended this as src/include/stdarg.h, it’s derived
from Message-ID: <470131F8.4030209@@ludd.ltu.se> since pcc just gained
mi stdarg support, but I found out we have src/sys/sys/stdarg.h, and
just added the gcc3 differences to it, not touching src/include/*
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.20 2006/12/11 21:04:56 tg Rel $ */
d46 1
a46 1
#define va_arg(ap,type)		__builtin_va_arg((ap), (type))
@


1.1
log
@Initial revision
@
text
@d1 5
a5 3
/*	$OpenBSD: stdarg.h,v 1.3 2004/02/26 17:21:59 drahn Exp $ */
/*
 * Copyright (c) 2003, 2004  Marc espie <espie@@openbsd.org>
d7 5
a11 3
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
d13 8
a20 7
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
d23 2
a24 2
#ifndef _STDARG_H_
#define _STDARG_H_
d26 8
a33 1
#if defined(__GNUC__) && __GNUC__ >= 3
a35 2
/* Define __gnuc_va_list.  */

d41 2
a42 9
/* Note that the type used in va_arg is supposed to match the
   actual type **after default promotions**.
   Thus, va_arg (..., short) is not valid.  */

#define va_start(v,l)	__builtin_stdarg_start((v),l)
#define va_end		__builtin_va_end
#define va_arg		__builtin_va_arg
#define va_copy(d,s)	__builtin_va_copy((d),(s))
#define __va_copy(d,s)	__builtin_va_copy((d),(s))
d44 10
d55 2
a56 3
typedef __gnuc_va_list va_list;

#else
d58 1
a58 1
#endif
d60 1
a60 1
#endif /* not _STDARG_H_ */
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
