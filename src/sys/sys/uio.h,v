head	1.3;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.1
	MIRBSD_10:1.1.1.1.0.6
	MIRBSD_10_BASE:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2019.07.20.22.56.17;	author tg;	state Exp;
branches;
next	1.2;
commitid	1005D339C090177F934;

1.2
date	2019.07.20.22.49.39;	author tg;	state Exp;
branches;
next	1.1;
commitid	1005D339A91634C2DCB;

1.1
date	2005.02.05.17.29.18;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.18;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@allow users of the struct ioweg to check for this extension easily
so code using it can still be portable to the lesser BSDs ;)
@
text
@/**	$MirOS: src/sys/sys/uio.h,v 1.2 2019/07/20 22:49:39 tg Exp $ */
/*	$OpenBSD: uio.h,v 1.11 2003/06/02 23:28:22 millert Exp $	*/
/*	$NetBSD: uio.h,v 1.12 1996/02/09 18:25:45 christos Exp $	*/

/*
 * Copyright (c) 1982, 1986, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 * Copyright © 2019
 *	mirabilos <m@@mirbsd.org>
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)uio.h	8.5 (Berkeley) 2/22/94
 */

#ifndef _SYS_UIO_H_
#define	_SYS_UIO_H_

struct iovec {
	void	*iov_base;	/* Base address. */
	size_t	 iov_len;	/* Length. */
};

#ifndef _KERNEL
#ifdef __GNUC__
/*
 * users of this extension should do the following first for portability:
 *
 * #ifndef ioweg
 * #define ioweg iovec
 * #endif
 */

/* used in writev and pwritev ONLY, mnemonic “w”=write or (DE)“weg”=“away” */
struct ioweg {
	/* must stay identical to struct iovec above */
	/* the “const” in iov_base is the difference */
	const void *iov_base;
	size_t iov_len;
};

/* transparent union so either struct iovec or struct ioweg are accepted */
typedef union {
	const struct iovec *iv;
	const struct ioweg *iw;
} writev_parm_t __attribute__((__transparent_union__));
#define ioweg ioweg /* for extension presence check */
#else /* !__GNUC__ */
/* nōn-GCC, make it still work except const-violating */
#define writev_parm_t const struct iovec *
#define ioweg iovec
#endif /* !__GNUC__ */
#endif /* !_KERNEL */

enum	uio_rw { UIO_READ, UIO_WRITE };

/* Segment flag values. */
enum uio_seg {
	UIO_USERSPACE,		/* from user data space */
	UIO_SYSSPACE		/* from system space */
};

#ifdef _KERNEL
struct uio {
	struct	iovec *uio_iov;	/* pointer to array of iovecs */
	int	uio_iovcnt;	/* number of iovecs in array */
	off_t	uio_offset;	/* offset into file this uio corresponds to */
	size_t	uio_resid;	/* residual i/o count */
	enum	uio_seg uio_segflg; /* see above */
	enum	uio_rw uio_rw;	/* see above */
	struct	proc *uio_procp;/* process if UIO_USERSPACE */
};

/*
 * Limits
 */
#define UIO_SMALLIOV	8		/* 8 on stack, else malloc */
#endif /* _KERNEL */

#define UIO_MAXIOV	1024		/* Deprecated, use IOV_MAX instead */

#ifndef	_KERNEL
#include <sys/cdefs.h>

__BEGIN_DECLS
#if !defined(_POSIX_C_SOURCE) && !defined(_XOPEN_SOURCE)
ssize_t preadv(int, const struct iovec *, int, off_t);
ssize_t pwritev(int, writev_parm_t, int, off_t);
#endif /* !_POSIX_C_SOURCE && !_XOPEN_SOURCE */
ssize_t	readv(int, const struct iovec *, int);
ssize_t	writev(int, writev_parm_t, int);
__END_DECLS
#else
int	ureadc(int c, struct uio *);

int	dofilereadv(struct proc *, int, struct file *,
	    const struct iovec *, int, off_t *, register_t *);
int	dofilewritev(struct proc *, int, struct file *,
	    const struct iovec *, int, off_t *, register_t *);

#endif /* !_KERNEL */

#endif /* !_SYS_UIO_H_ */
@


1.2
log
@fix the const string as writev argument problem BSD has
@
text
@d1 1
a1 1
/**	$MirOS$ */
d48 8
d69 1
@


1.1
log
@Initial revision
@
text
@d1 1
d8 2
d46 22
d101 1
a101 1
ssize_t pwritev(int, const struct iovec *, int, off_t);
d104 1
a104 1
ssize_t	writev(int, const struct iovec *, int);
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
