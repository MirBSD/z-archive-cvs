head	1.8;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.2
	MIRBSD_10:1.8.0.4
	MIRBSD_10_BASE:1.8
	MIRBSD_9_BASE:1.5
	MIRBSD_8:1.5.0.2
	MIRBSD_8_BASE:1.5
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2007.05.18.00.47.58;	author tg;	state Exp;
branches;
next	1.7;
commitid	100464CF7A870016783;

1.7
date	2006.11.04.03.58.38;	author tg;	state Exp;
branches;
next	1.6;
commitid	100454C10000D6BE021;

1.6
date	2006.11.04.01.52.14;	author tg;	state Exp;
branches;
next	1.5;
commitid	100454BF24A7458D34B;

1.5
date	2005.11.21.20.11.30;	author tg;	state Exp;
branches;
next	1.4;
commitid	1504438229ef457b;

1.4
date	2005.11.21.19.31.55;	author tg;	state Exp;
branches;
next	1.3;
commitid	60294382208fe0fe;

1.3
date	2005.07.07.14.39.28;	author tg;	state Exp;
branches;
next	1.2;
commitid	61cf42cd3eb15e48;

1.2
date	2005.03.06.21.28.35;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.29.18;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.18;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.07.14.35.40;	author tg;	state Exp;
branches;
next	;
commitid	30a642cd3dcd4cb0;


desc
@@


1.8
log
@add some netbsd compatibility (even really cruel stuff like __UNCONST(x))
to the system headers (the cruel stuff ifdef'd out tho), also the namespace
clean __uint8_t &c. types (should be the other way round tho)
@
text
@/**	$MirOS: src/sys/sys/types.h,v 1.7 2006/11/04 03:58:38 tg Exp $ */
/*	$OpenBSD: types.h,v 1.26 2004/07/13 21:04:29 millert Exp $	*/
/*	$NetBSD: types.h,v 1.29 1996/11/15 22:48:25 jtc Exp $	*/

/*-
 * Copyright (c) 1982, 1986, 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)types.h	8.4 (Berkeley) 1/21/94
 */

#ifndef _SYS_TYPES_H_
#define	_SYS_TYPES_H_

/* Machine type dependent parameters. */
#include <machine/types.h>

#include <machine/ansi.h>
#include <machine/endian.h>

#ifdef __NEED_NETBSD_COMPAT
typedef int8_t		__int8_t;
typedef int16_t		__int16_t;
typedef int32_t		__int32_t;
typedef int64_t		__int64_t;
typedef uint8_t		__uint8_t;
typedef uint16_t	__uint16_t;
typedef uint32_t	__uint32_t;
typedef uint64_t	__uint64_t;
typedef intptr_t	__intptr_t;
typedef uintptr_t	__uintptr_t;
#endif

#if !defined(_POSIX_SOURCE) && !defined(_XOPEN_SOURCE)
typedef	unsigned char	u_char;
typedef	unsigned short	u_short;
typedef	unsigned int	u_int;
typedef	unsigned long	u_long;

typedef unsigned char	unchar;		/* Sys V compatibility */
typedef	unsigned short	ushort;		/* Sys V compatibility */
typedef	unsigned int	uint;		/* Sys V compatibility */
typedef unsigned long	ulong;		/* Sys V compatibility */

typedef	unsigned long	cpuid_t;
#endif

typedef	u_int64_t	u_quad_t;	/* quads */
typedef	int64_t		quad_t;
typedef	quad_t *	qaddr_t;

typedef	char *		caddr_t;	/* core address */
typedef	int32_t		daddr_t;	/* disk address */
typedef	int32_t		dev_t;		/* device number */
typedef	u_int32_t	fixpt_t;	/* fixed point number */
typedef	u_int32_t	gid_t;		/* group id */
typedef	u_int32_t	id_t;		/* may contain pid, uid or gid */
typedef	u_int32_t	ino_t;		/* inode number */
typedef	long		key_t;		/* IPC key (for Sys V IPC) */
typedef	u_int32_t	mode_t;		/* permissions */
typedef	u_int32_t	nlink_t;	/* link count */
typedef	int32_t		pid_t;		/* process id */
typedef u_quad_t	rlim_t;		/* resource limit */
typedef	int32_t		segsz_t;	/* segment size */
typedef	int32_t		swblk_t;	/* swap offset */
typedef	u_int32_t	uid_t;		/* user id */
typedef	u_int32_t	useconds_t;	/* microseconds */
typedef	int32_t		suseconds_t;	/* microseconds (signed) */

/*
 * XPG4.2 states that inclusion of <netinet/in.h> must pull these
 * in and that inclusion of <sys/socket.h> must pull in sa_family_t.
 * We put these here because there are other headers that require
 * these types and <sys/socket.h> and <netinet/in.h> will indirectly
 * include <sys/types.h>.  Thus we are compliant without too many hoops.
 */
typedef u_int32_t	in_addr_t;	/* base type for internet address */
typedef u_int16_t	in_port_t;	/* IP port type */
typedef u_int8_t	sa_family_t;	/* sockaddr address family type */
typedef u_int32_t	socklen_t;	/* length type for network syscalls */

#ifdef	_BSD_CLOCK_T_
typedef	_BSD_CLOCK_T_	clock_t;
#undef	_BSD_CLOCK_T_
#endif

#if !defined(_GCC_SIZE_T)
#define	_GCC_SIZE_T
typedef	__SIZE_TYPE__	size_t;
#endif

/* e-eeeevil kludge, but apparently works */
#define unsigned	signed
typedef	__SIZE_TYPE__	ssize_t;
#undef unsigned

#ifdef	_BSD_TIME_T_
typedef	_BSD_TIME_T_	time_t;
#undef	_BSD_TIME_T_
#endif

#ifdef	_BSD_CLOCKID_T_
typedef	_BSD_CLOCKID_T_	clockid_t;
#undef	_BSD_CLOCKID_T_
#endif

#ifdef	_BSD_TIMER_T_
typedef	_BSD_TIMER_T_	timer_t;
#undef	_BSD_TIMER_T_
#endif

#ifdef	_BSD_OFF_T_
typedef	_BSD_OFF_T_	off_t;
#undef	_BSD_OFF_T_
#endif

/*
 * These belong in unistd.h, but are placed here too to ensure that
 * long arguments will be promoted to off_t if the program fails to
 * include that header or explicitly cast them to off_t.
 */
#if !defined(_POSIX_SOURCE) && !defined(_XOPEN_SOURCE)
#ifndef _KERNEL
#include <sys/cdefs.h>
__BEGIN_DECLS
off_t	 lseek(int, off_t, int);
int	 ftruncate(int, off_t);
int	 truncate(const char *, off_t);
__END_DECLS
#endif /* !_KERNEL */
#endif /* !defined(_POSIX_SOURCE) ... */

#if !defined(_POSIX_SOURCE) && !defined(_XOPEN_SOURCE)
/* Major, minor numbers, dev_t's. */
#define	major(x)	((int32_t)(((u_int32_t)(x) >> 8) & 0xff))
#define	minor(x)	((int32_t)((x) & 0xff) | (((x) & 0xffff0000) >> 8))
#define	makedev(x,y)	((dev_t)((((x) & 0xff) << 8) | ((y) & 0xff) | (((y) & 0xffff00) << 8)))
#endif

#if !defined(_POSIX_SOURCE) && !defined(_XOPEN_SOURCE)
#define	NBBY	8		/* number of bits in a byte */

/*
 * Select uses bit masks of file descriptors in longs.  These macros
 * manipulate such bit fields (the filesystem macros use chars).
 * FD_SETSIZE may be defined by the user, but the default here should
 * be enough for most uses.
 */
#ifndef	FD_SETSIZE
#define	FD_SETSIZE	1024
#endif

typedef int32_t	fd_mask;
#define NFDBITS	(sizeof(fd_mask) * NBBY)	/* bits per mask */

#ifndef howmany
#define	howmany(x, y)	(((x) + ((y) - 1)) / (y))
#endif

typedef	struct fd_set {
	fd_mask	fds_bits[howmany(FD_SETSIZE, NFDBITS)];
} fd_set;

#define	FD_SET(n, p)	((p)->fds_bits[(n)/NFDBITS] |= (1 << ((n) % NFDBITS)))
#define	FD_CLR(n, p)	((p)->fds_bits[(n)/NFDBITS] &= ~(1 << ((n) % NFDBITS)))
#define	FD_ISSET(n, p)	((p)->fds_bits[(n)/NFDBITS] & (1 << ((n) % NFDBITS)))
#define	FD_COPY(f, t)	memcpy(t, f, sizeof(*(f)))
#define	FD_ZERO(p)	memset(p, 0, sizeof(*(p)))

#if defined(__STDC__) && defined(_KERNEL)
/*
 * Forward structure declarations for function prototypes.  We include the
 * common structures that cross subsystem boundaries here; others are mostly
 * used in the same place that the structure is defined.
 */
struct	proc;
struct	pgrp;
struct	ucred;
struct	rusage;
struct	file;
struct	buf;
struct	tty;
struct	uio;
#endif

#endif /* !defined(_POSIX_SOURCE) ... */
#endif /* !_SYS_TYPES_H_ */
@


1.7
log
@ssize_t is only defined here
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/sys/types.h,v 1.6 2006/11/04 01:52:14 tg Exp $ */
d50 13
@


1.6
log
@solve /usr/ports/games/frozen-bubble/w-frozen-bubble-2.0.0-0/frozen-bubble-2.0.0/server/net.c:925: warning: signed size_t format, ssize_t arg (arg 6)
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/sys/types.h,v 1.5 2005/11/21 20:11:30 tg Exp $ */
d106 2
a111 1
#endif
@


1.5
log
@cpp is stupid, can't do strings... do an approximation using __LP64__
the same way as <stdint.h> already does for SIZE_MAX
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/sys/types.h,v 1.4 2005/11/21 19:31:55 tg Exp $ */
d106 4
a109 9
#endif

#if !defined(_GCC_SSIZE_T)
#define	_GCC_SIZE_T
#ifdef __LP64__
typedef	long		ssize_t;
#else
typedef	int		ssize_t;
#endif
@


1.4
log
@First round of system include "fixes":
let GCC decide the length of ptrdiff_t, size_t, wchar_t, wint_t
(the first three adapted from gcc fixincludes run[1])
and adapt ssize_t accordingly (untested)
also fix limits

[1] which we don't run during gcc module build tho
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/sys/types.h,v 1.3 2005/07/07 14:39:28 tg Exp $ */
d110 1
a110 3
#if __SIZE_TYPE__ == unsigned int
typedef	int		ssize_t;
#elif __SIZE_TYPE__ == unsigned long
d113 1
a113 1
#error Don't know GCC __SIZE_TYPE__
@


1.3
log
@merge
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/sys/types.h,v 1.2 2005/03/06 21:28:35 tg Exp $ */
d103 3
a105 3
#ifdef	_BSD_SIZE_T_
typedef	_BSD_SIZE_T_	size_t;
#undef	_BSD_SIZE_T_
d108 9
a116 3
#ifdef	_BSD_SSIZE_T_
typedef	_BSD_SSIZE_T_	ssize_t;
#undef	_BSD_SSIZE_T_
@


1.2
log
@* merge src/sys/
  (at least the better part of it)
* revert IPv6 networking to OpenBSD, since
  I didn't get IPV4_MAPPED addresses working :(
@
text
@d1 1
a1 1
/**	$MirOS$ */
d60 2
@


1.1
log
@Initial revision
@
text
@d1 1
a180 4
#ifdef _KERNEL
#define	FD_COPY(f, t)	bcopy(f, t, sizeof(*(f)))
#define	FD_ZERO(p)	bzero(p, sizeof(*(p)))
#else
a182 1
#endif
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@merge some more stuff
@
text
@a58 2

typedef	unsigned long	cpuid_t;
@

