head	1.7;
access;
symbols
	tg-use_ldscript:1.5.0.2
	tg-beforemerge-ksrc10:1.1.1.2
	cvs-200808011000:1.1.1.2
	MIRBSD_10:1.2.0.4
	MIRBSD_10_BASE:1.2
	MIRBSD_9_BASE:1.2
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	cvs-200507032030:1.1.1.1
	cvs-200505050030:1.1.1.1
	cvs-200504302230:1.1.1.1
	cvs-200504291700:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2018.04.28.02.14.35;	author tg;	state Exp;
branches;
next	1.6;
commitid	1005AE3D91A742324FF;

1.6
date	2013.10.31.20.06.47;	author tg;	state Exp;
branches;
next	1.5;
commitid	1005272B7081B0E5655;

1.5
date	2009.08.11.13.23.59;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004A8170C73C4BAD74;

1.4
date	2008.08.01.12.39.08;	author tg;	state Exp;
branches;
next	1.3;
commitid	100489303F432B4030A;

1.3
date	2008.08.01.11.25.00;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004892F2924667C00D;

1.2
date	2005.03.06.21.27.07;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.29;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.29;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.08.01.10.28.38;	author tg;	state Exp;
branches;
next	;
commitid	1004892E54805BE97AB;


desc
@@


1.7
log
@i386 and documentation part for -D argument to boot
@
text
@/*	$MirOS: src/sys/arch/i386/stand/libsa/exec_i386.c,v 1.6 2013/10/31 20:06:47 tg Exp $ */
/*	$OpenBSD: exec_i386.c,v 1.32 2007/07/27 17:46:56 tom Exp $	*/

/*
 * Copyright © 2013, 2018 mirabilos <m@@mirbsd.org>
 * Copyright (c) 1997-1998 Michael Shalayeff
 * Copyright (c) 1997 Tobias Weingartner
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#include <sys/param.h>
#include <sys/reboot.h>
#include <dev/cons.h>
#include <stand/boot/bootarg.h>
#include <machine/biosvar.h>
#include <sys/disklabel.h>
#include "disk.h"
#include "libsa.h"
#include <lib/libsa/loadfile.h>

typedef void (*startfuncp)(int, int, int, int, int, int, int, int)
    __attribute__((__noreturn__));

char *bootmac = NULL;
char use_bootmac = 1;

void
run_loadfile(u_long *marks, int howto)
{
	u_long entry;
	dev_t bootdev = bootdev_dip->bootdev;
	size_t ac = BOOTARG_LEN;
	caddr_t av = (caddr_t)BOOTARG_OFF;
	bios_consdev_t cd;
	extern int com_speed; /* from bioscons.c */

	if (sa_cleanup != NULL)
		(*sa_cleanup)();

	cd.consdev = cn_tab->cn_dev;
	cd.conspeed = com_speed;
	addbootarg(BOOTARG_CONSDEV, sizeof(cd), &cd);

	if (bootmac != NULL && use_bootmac)
		addbootarg(BOOTARG_BOOTMAC, sizeof(bios_bootmac_t), bootmac);

	/* Pass memory map to the kernel */
	mem_pass();

	makebootargs(av, &ac);

	entry = marks[MARK_ENTRY] & 0x0fffffff;

	printf("entry point at 0x%x\n", (int) entry);
	/* stack and the gung is ok at this point, so, no need for asm setup */
	(*(startfuncp)entry)(howto, bootdev, BOOTARG_APIVER,
	    (howto & RB_NO_KSYMS) ? 0 : marks[MARK_END],
	    extmem, cnvmem, ac, (int)av);
	/* not reached */
}
@


1.6
log
@adapt most __attribute__((…)) occurrences to new KNF style(9)
@
text
@d1 1
a1 1
/*	$MirOS$ */
d5 1
a5 2
 * Copyright © 2013
 *	Thorsten “mirabilos” Glaser <tg@@mirbsd.org>
d34 1
d79 2
a80 1
	    marks[MARK_END], extmem, cnvmem, ac, (int)av);
@


1.5
log
@Totally revamp the virtual device code.

Unbreak:
• floppy access (BIOS)
• hard disc access (BIOS)
• CD-ROM El Torito access (BIOS)
• cd9660, fat, ffs (filesystems)

Not tested:
• tftp, nfs (PXE, NET, filesystems)
• lmbmfs (lmbm)
@
text
@d1 1
d5 2
d44 1
a44 1
    __attribute__ ((noreturn));
@


1.4
log
@remove unused code (for testing the bootloader on unix)
@
text
@d44 1
d63 1
a63 1
	if (bootmac != NULL)
@


1.3
log
@merge and reduce diff to obsd
XXX not yet tested
@
text
@a48 1
#ifndef _TEST
a76 1
#endif
@


1.2
log
@* merge src/sys/
  (at least the better part of it)
* revert IPv6 networking to OpenBSD, since
  I didn't get IPV4_MAPPED addresses working :(
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_i386.c,v 1.30 2004/03/19 13:48:18 tom Exp $	*/
d43 2
a49 3
#ifdef EXEC_DEBUG
	extern int debug;
#endif
d63 3
d73 1
a73 1
	printf("entry point at 0x%X\n", (int) entry);
@


1.1
log
@Initial revision
@
text
@d71 1
a71 1
	printf("entry point at 0x%x\n", (int) entry);
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@import bootloader-related pieces from openbsd, as first part of the
aspired 4.4 merge… and something else
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_i386.c,v 1.32 2007/07/27 17:46:56 tom Exp $	*/
a42 2
char *bootmac = NULL;

d48 3
a63 3
	if (bootmac != NULL)
		addbootarg(BOOTARG_BOOTMAC, sizeof(bios_bootmac_t), bootmac);

@

