head	1.10;
access;
symbols
	tg-use_ldscript:1.9.0.2
	tg-beforemerge-ksrc10:1.1.1.3
	cvs-200808011000:1.1.1.3
	MIRBSD_10:1.3.0.4
	MIRBSD_10_BASE:1.3
	MIRBSD_9_BASE:1.3
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3
	cvs-200507032030:1.1.1.2
	cvs-200505050030:1.1.1.2
	cvs-200504302230:1.1.1.2
	cvs-200504291700:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2010.01.10.20.18.54;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004B4A3588743BF0D3;

1.9
date	2009.10.04.16.49.43;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004AC8D234283AB203;

1.8
date	2009.08.11.13.23.59;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004A8170C73C4BAD74;

1.7
date	2009.01.11.13.36.05;	author tg;	state Exp;
branches;
next	1.6;
commitid	1004969F59F7F1E8AC2;

1.6
date	2009.01.10.20.28.28;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004969050259BEA59F;

1.5
date	2009.01.03.13.43.33;	author tg;	state Exp;
branches;
next	1.4;
commitid	100495F6B566145BE45;

1.4
date	2008.08.01.11.25.00;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004892F2924667C00D;

1.3
date	2005.04.29.18.34.59;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.06.21.27.07;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.29;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.29;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.17.05.48;	author tg;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.08.01.10.28.38;	author tg;	state Exp;
branches;
next	;
commitid	1004892E54805BE97AB;


desc
@@


1.10
log
@• kern: new KERNISUSR (defined by libc and libmdsup, but not by either
  bootloader or kernel), enables new NUSRCS, UIF_NUSRCS
• move MD strncmp() to kern
• move MI {str,wcs}case{,n}cmp to kern
• make wcs* functions NU not KU as we don’t need them in the kernel YET
• move __main to NU (it’s a joke anyway, I think)
• bootloader: make devsw_prefix_match case-insensitive
@
text
@/*	$MirOS: src/sys/arch/i386/stand/libsa/libsa.h,v 1.9 2009/10/04 16:49:43 tg Exp $ */
/*	$OpenBSD: libsa.h,v 1.44 2007/04/27 10:08:34 tom Exp $	*/

/*
 * Copyright (c) 1996-1999 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef	_I386_STAND_LIBSA_H
#define	_I386_STAND_LIBSA_H

#include <lib/libsa/stand.h>
#include <machine/biosvar.h>

#define	EXEC_ELF

#define	DEFAULT_KERNEL_ADDRESS	0

#define VTOPSEG(vaddr)	(((uint32_t)vaddr) >> 4)
#define VTOPOFF(vaddr)	(((uint32_t)vaddr) & 15)
#define PTOV(seg,ofs)	((void *)((((uint32_t)seg) << 4) + ((uint32_t)ofs)))

struct i386_boot_probes {
	char *name;
	void (**probes)(void);
	int count;
};

extern struct devsw_prefix_match {
	struct devsw *devops;
	struct fs_ops *fsops;
	char prefix[5];		/* matched case-insensitively */
	char networked;		/* pass bootmac */
	char strip;		/* strip prefix from file */
} devsw_match[];

extern uint8_t bounce_buf[4096];

extern void (*sa_cleanup)(void);

void gateA20(int);
void gateA20on(void);

void cpuprobe(void);
void smpprobe(void);
void ps2probe(void);
void pciprobe(void);
void memprobe(void);
void diskprobe(void);
void apmprobe(void);
void apmfixmem(void);
void dump_biosmem(bios_memmap_t *);
int mem_add(long long, long long);
int mem_delete(long long, long long);
void mem_pass(void);

void devboot(dev_t, char *);
void machdep(void);

void *getSYSCONFaddr(void);
void *getEBDAaddr(void);

extern const char bdevs[][4];
extern const int nbdevs;
extern u_int cnvmem, extmem; /* XXX global pass memprobe()->machdep_start() */
extern int ps2model;

extern struct {
	uint8_t active;
	uint8_t beg_DH;
	uint8_t beg_CL;
	uint8_t beg_CH;
	uint8_t partyp;
	uint8_t end_DH;
	uint8_t end_CL;
	uint8_t end_CH;
	uint32_t p_ofs;
	uint32_t p_siz;
} bios_bootpte;
extern uint8_t i386_userpt;
extern uint8_t i386_biosdev;
extern uint8_t i386_biosflags;
extern uint8_t i386_dosdev;

extern struct i386_boot_probes probe_list[];
extern int nibprobes;
extern void (*devboot_p)(dev_t, char *);

/* diskprobe.c */
extern bios_diskinfo_t bios_diskinfo[];
extern u_int32_t bios_cksumlen;

#define MACHINE_CMD	cmd_machine /* we have i386-specific commands */

#define CHECK_SKIP_CONF	check_skip_conf	/* we can skip boot.conf with Ctrl */
extern int check_skip_conf(void);

#endif
@


1.9
log
@more nonsensical code cleanup, I give up, this is horrid
@
text
@d1 1
a1 1
/*	$MirOS: src/sys/arch/i386/stand/libsa/libsa.h,v 1.8 2009/08/11 13:23:59 tg Exp $ */
d53 1
a53 1
	char prefix[5];
@


1.8
log
@Totally revamp the virtual device code.

Unbreak:
• floppy access (BIOS)
• hard disc access (BIOS)
• CD-ROM El Torito access (BIOS)
• cd9660, fat, ffs (filesystems)

Not tested:
• tftp, nfs (PXE, NET, filesystems)
• lmbmfs (lmbm)
@
text
@d1 1
a1 1
/*	$MirOS: src/sys/arch/i386/stand/libsa/libsa.h,v 1.7 2009/01/11 13:36:05 tg Exp $ */
d117 1
@


1.7
log
@better bios_bootpte sanitisation: use a C structure type
(although I *still* don't understand why I can have
	extern uint32_t bios_bootpte[4];
	bzero(bios_bootpte, 16);
but must now write
	extern struct { … } bios_bootpte;
	bzero(&bios_bootpte, 16);
which is one of the reasons I think asm is superiour than C)
@
text
@d1 1
a1 1
/*	$MirOS: src/sys/arch/i386/stand/libsa/libsa.h,v 1.6 2009/01/10 20:28:28 tg Exp $ */
d50 8
@


1.6
log
@shuffle some defns around
@
text
@d1 1
a1 1
/*	$MirOS$ */
d81 12
a92 1
extern uint32_t bios_bootpte[4];
@


1.5
log
@• cut down on stack usage
• improve reliability (especially on 64K and larger reads)
• remove alloca
• nuke tori transfer buffer
by making use of a paragraph-aligned 4 KiB bounce buffer very early in
the .bss section (allocated in srt0.S, which is first in link)

XXX biosdev.c ist eine Ausgeburt an Häßlichkeit!
@
text
@d1 1
d40 4
d81 6
@


1.4
log
@merge and reduce diff to obsd
XXX not yet tested
@
text
@d45 2
@


1.3
log
@(tentative) merge, more to come
@
text
@d1 1
a1 2
/**	$MirOS: src/sys/arch/i386/stand/libsa/libsa.h,v 1.2 2005/03/06 21:27:07 tg Exp $	*/
/*	$OpenBSD: libsa.h,v 1.42 2004/08/21 19:09:42 tom Exp $	*/
a4 1
 * Copyright (c) 2003 Thorsten Glaser
a55 1
void cdprobe(void);
d59 2
a60 2
int mem_add(long, long);
int mem_delete(long, long);
a68 3
void apmturnoff (int, int);
void apm_reset (void);

d84 2
@


1.2
log
@* merge src/sys/
  (at least the better part of it)
* revert IPv6 networking to OpenBSD, since
  I didn't get IPV4_MAPPED addresses working :(
@
text
@d1 2
a2 2
/**	$MirOS$	*/
/*	$OpenBSD: libsa.h,v 1.39 2004/03/19 13:48:18 tom Exp $	*/
d52 1
d58 1
d88 1
a88 1
#define MACHINE_CMD	cmd_machine /* we have i386 specific sommands */
@


1.1
log
@Initial revision
@
text
@d1 1
d6 1
d31 3
d70 3
d87 2
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@improve my Frankenstein OS (*wink* you know who you are) further
sans wchar_t of course

this is the essence of reading >1200 commit messages which suck
due to not having the new format of ours...
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.42 2004/08/21 19:09:42 tom Exp $	*/
a46 1
void cpuprobe(void);
a51 1
void cdprobe(void);
d78 1
a78 1
#define MACHINE_CMD	cmd_machine /* we have i386-specific commands */
@


1.1.1.3
log
@import bootloader-related pieces from openbsd, as first part of the
aspired 4.4 merge… and something else
@
text
@d1 1
a1 1
/*	$OpenBSD: libsa.h,v 1.44 2007/04/27 10:08:34 tom Exp $	*/
d57 2
a58 2
int mem_add(long long, long long);
int mem_delete(long long, long long);
a80 2

#define CHECK_SKIP_CONF	check_skip_conf	/* we can skip boot.conf with Ctrl */
@


