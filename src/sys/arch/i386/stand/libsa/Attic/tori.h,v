head	1.4;
access;
symbols
	MIRBSD_10:1.1.7.1.0.4
	MIRBSD_10_BASE:1.1.7.1
	MIRBSD_9_BASE:1.1.7.1
	MIRBSD_8:1.1.7.1.0.2
	MIRBSD_8_BASE:1.1.7.1
	mirbsd:1.1.7;
locks; strict;
comment	@ * @;


1.4
date	2009.01.10.14.49.05;	author tg;	state dead;
branches;
next	1.3;
commitid	1004968B5690CAD8165;

1.3
date	2009.01.02.04.58.41;	author tg;	state Exp;
branches;
next	1.2;
commitid	100495D9F177CADA327;

1.2
date	2008.08.05.19.05.01;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004898A46C6ED28D83;

1.1
date	2005.03.06.16.33.43;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.06.16.33.43;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@comment out tori stuff, will be merged into biosdev access
@
text
@/* $MirOS: src/sys/arch/i386/stand/libsa/tori.h,v 1.3 2009/01/02 04:58:41 tg Exp $ */

#ifndef	_LIBSA_TORI_H
#define	_LIBSA_TORI_H

#if 0
struct tori_pbk {
	u_int32_t	x1;
	u_int32_t	imgofs;
	u_int32_t	x2;
	u_int32_t	segcnt;
	u_int8_t	x3[3];
};

#define	_B0(a)	((u_int8_t)((a)&0xFF))
#define	_B1(a)	(_B0((a)>>8))
#define	_B2(a)	(_B0((a)>>16))
#define	_B3(a)	(_B0((a)>>24))
#define	_W0(a)	((u_int16_t)((a)&0xFFFF))
#define	_W1(a)	(_W0((a)>>16))

#define	_MKW(a,b)	((((u_int16_t)(a))&0xFF)|((((u_int16_t)(b))&0xFF)<<8))
#define	_MKL(a,b)	((((u_int32_t)(a))&0xFFFF)|((((u_int32_t)(b))&0xFFFF)<<16))

extern struct tori_pbk tori_pblk;

#define	T_LEN	_B0(tori_pblk.x1)
#define	T_EMUL	_B1(tori_pblk.x1)
#define	T_DRV	_B2(tori_pblk.x1)
#define	T_CTRL	_B3(tori_pblk.x1)
#define	T_IMAG	tori_pblk.imgofs
#define	T_LSEG	_W0(tori_pblk.segcnt)
#define	T_LNUM	_W1(tori_pblk.segcnt)
#define	T_G_CH	tori_pblk.x3[0]
#define	T_G_CL	tori_pblk.x3[1]
#define	T_G_DH	tori_pblk.x3[2]

#define	MKTORI(emul,drv,imag,lseg,lnum,ch,cl,dh) do {			 \
		tori_pblk.x1=_MKL(_MKW(0x13,(emul)),_MKW((drv),T_CTRL)); \
		tori_pblk.imgofs=(imag);				 \
		tori_pblk.segcnt=_MKL((lseg),(lnum));			 \
		tori_pblk.x3[0]=(ch);					 \
		tori_pblk.x3[1]=(cl);					 \
		tori_pblk.x3[2]=(dh);					 \
	} while (0)
#endif

struct open_file;

/* toridev.c */
int toristrategy(void *, int, daddr_t, size_t, void *, size_t *);
int toriopen(struct open_file *, ...);
int toriclose(struct open_file *);
int toriioctl(struct open_file *, u_long, void *);
int tori_io(daddr_t, void *);

#endif
@


1.3
log
@remove toridev kludge and probe the bios boot device for El Torito in
no emulation mode… if so, set the flag
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/libsa/tori.h,v 1.2 2008/08/05 19:05:01 tg Exp $ */
@


1.2
log
@comment out ☺ enough code to make this actually work
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/libsa/tori.h,v 1.1.7.1 2005/03/06 16:33:43 tg Exp $ */
a47 3
extern u_int32_t tori_bootflag;
#define T_DRV	(tori_bootflag & 0xFF)

@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* $MirOS$ */
d6 1
d46 4
@


1.1.7.1
log
@Add some missing files, such as some ISDN4BSD stuff,
documentation, tmac and tab files, TAI64 etc.
@
text
@@
