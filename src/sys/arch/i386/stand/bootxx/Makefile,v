head	1.18;
access;
symbols
	tg-use_ldscript:1.16.0.2
	MIRBSD_10:1.3.0.2
	MIRBSD_10_BASE:1.3;
locks; strict;
comment	@# @;


1.18
date	2016.02.06.17.09.05;	author tg;	state Exp;
branches;
next	1.17;
commitid	10056B628C31FA73C0D;

1.17
date	2010.12.01.19.56.58;	author tg;	state Exp;
branches;
next	1.16;
commitid	1004CF6A89472F8D29F;

1.16
date	2009.06.29.20.50.59;	author tg;	state Exp;
branches;
next	1.15;
commitid	1004A49292C66B6FB4D;

1.15
date	2009.06.29.20.34.59;	author tg;	state Exp;
branches;
next	1.14;
commitid	1004A4925891FB67971;

1.14
date	2009.06.29.20.34.36;	author tg;	state Exp;
branches;
next	1.12;
commitid	1004A49256E331EB9F8;

1.12
date	2009.06.29.20.32.38;	author tg;	state Exp;
branches;
next	1.11;
commitid	1004A4924F94E50B3C4;

1.11
date	2009.06.29.20.10.26;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004A491FC3492C15C0;

1.10
date	2009.06.07.13.07.46;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004A2BBAFA4B0EDDF2;

1.9
date	2009.06.07.12.02.37;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004A2BAC12547F8E38;

1.8
date	2009.06.07.10.44.16;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004A2B9A0C3AEBAE32;

1.7
date	2009.05.26.19.38.09;	author tg;	state Exp;
branches;
next	1.6;
commitid	1004A1C453715715F07;

1.6
date	2009.05.26.19.26.28;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004A1C424912B13620;

1.5
date	2009.01.31.18.51.19;	author tg;	state Exp;
branches;
next	1.4;
commitid	10049849D7F07A9D7B9;

1.4
date	2008.10.21.18.50.59;	author tg;	state Exp;
branches;
next	1.3;
commitid	10048FE24A97E59C6EE;

1.3
date	2007.10.20.21.28.40;	author tg;	state Exp;
branches;
next	1.2;
commitid	100471A730C69C24D84;

1.2
date	2007.10.20.18.22.40;	author tg;	state Exp;
branches;
next	1.1;
commitid	100471A47762D5DDD12;

1.1
date	2007.02.26.02.11.32;	author tg;	state Exp;
branches;
next	;
commitid	10045E241DC524D9D5F;


desc
@@


1.18
log
@fixup permissions of the files inside /usr/mdec/
@
text
@# $MirOS: src/sys/arch/i386/stand/bootxx/Makefile,v 1.17 2010/12/01 19:56:58 tg Exp $

PROG=		bootxx
SRCS+=		bootxx.S
NOMAN=		Yes
INSTALL_STRIP=	# empty
LDFLAGS=	-nostdlib -Ttext 0xFE00 -N -Bstatic -e _start
CPPFLAGS+=	${DEBUGFLAGS}
CLEANFILES+=	${PROG}~ ${.CURDIR}/disasm bxinst \
		bootgrub.mksh bootgrubfat.mksh bootilnx.mksh

all: ${PROG} bxinst

${PROG}: ${OBJS} ${DPADD}
	${LD} ${LDFLAGS} -o $@@~ ${OBJS} ${LDADD}
	@@size $@@~
	objcopy -x -R .comment $@@~ $@@

disasm: ${.CURDIR}/disasm

bxinst: ${.CURDIR}/mkbxinst.sh ${PROG}
	${MKSH} ${.CURDIR}/mkbxinst.sh ${PROG}~ >$@@

${.CURDIR}/disasm: ${PROG}
	objdump -dS -Mintel,i8086 ${PROG}~ >$@@

.include <bsd.prog.mk>
BINMODE=	${SHAREMODE}

BOOT_TYPE?=	bsd
.if (${BOOT_TYPE:L} == "grub") || (${BOOT_TYPE:L} == "grubfat")
CPPFLAGS+=	-USA_LINKSEG -DSA_LINKSEG=0x0800 -DBOOT_GRUB
.  if ${BOOT_TYPE:L} == "grubfat"
CPPFLAGS+=	-DBPB_SPACE
.  endif
LOADER_NAME=	GNU GRUB2 on i386-pc
.elif (${BOOT_TYPE:L} == "ilnx")
CPPFLAGS+=	-USA_LINKSEG -DSA_LINKSEG=0x07C0 -DBOOT_ISOLINUX
LOADER_NAME=	ISOLINUX
.endif

.if (${BOOT_TYPE:L} != "bsd")
all: boot${BOOT_TYPE:L}.mksh

boot${BOOT_TYPE:L}.mksh: bxinst
	sed \
	    -e 's/\$$Mir''OS.*\$$/$$I''d$$/' \
	    -e '/^. Self-inst/s!MirOS BSD/i386!${LOADER_NAME}!' \
	    $> >$@@
.endif
@


1.17
log
@the “pacify mikap” commit (MirBSD part): ISOLINUX hackish loading support
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/stand/bootxx/Makefile,v 1.16 2009/06/29 20:50:59 tg Exp $
d28 1
@


1.16
log
@• sync cleanfiles
• use parsable "feature indicators" in the rcs id
• if BPB, don’t not-do $RANDOM in the MBR places, there is no ptab…
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/stand/bootxx/Makefile,v 1.15 2009/06/29 20:34:59 tg Exp $
d10 1
a10 1
		bootgrub.mksh bootgrubfat.mksh
d35 5
d41 1
d47 1
a47 1
	    -e '/^. Self-inst/s!MirOS BSD/i386!GNU GRUB2 on i386-pc!' \
@


1.15
log
@I have bad luck
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/stand/bootxx/Makefile,v 1.14 2009/06/29 20:34:36 tg Exp $
d9 2
a10 1
CLEANFILES+=	${PROG}~ ${.CURDIR}/disasm bxinst bootgrub.mksh
@


1.14
log
@oops, really fattenise
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/stand/bootxx/Makefile,v 1.12 2009/06/29 20:32:38 tg Exp $
d32 1
a32 1
CPPFLAGS+=	BPB_SPACE
@


1.12
log
@allos BOOT_TYPE=grubfat
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/stand/bootxx/Makefile,v 1.11 2009/06/29 20:10:26 tg Exp $
d31 3
@


1.11
log
@preserve bootxx.S rcsid in bxinst.sh
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/stand/bootxx/Makefile,v 1.10 2009/06/07 13:07:46 tg Exp $
d29 1
a29 1
.if ${BOOT_TYPE:L} == "grub"
d32 1
a32 1
all: bootgrub.mksh
d34 1
a34 1
bootgrub.mksh: bxinst
@


1.10
log
@The ability to generate a partition table and a partition for the grml
manifold-boot™ ISO without having to sacrifice these 64 bytes of block
table beforehand (bxinst only) by means of two new options:
• -g C:H:S works like bxinst.sparc and initiates creating a partition
• -M no (no=1‥4) makes room for the partition table

If neither -g nor -M are given, nothing is changed.
If -g and -M are given and valid, a partition is created with these values.
If -g is given but -M isn’t, it defaults to the last partition.
If -M is given but -g isn’t, the partition table is merely NUL’d.

The partition type passed from the -p option will be used.
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/stand/bootxx/Makefile,v 1.8 2009/06/07 10:44:16 tg Exp $
d16 1
a16 1
	objcopy -x $@@~ $@@
d21 1
a21 1
	${MKSH} ${.CURDIR}/mkbxinst.sh ${PROG} >$@@
@


1.9
log
@Mika also wants a partition table embedded in the bootsector of his
manifold-boot™ ISOs, because otherwise a 700M ISO on a 2G USB stick
would be a sensational waste of space (and I agree)

works with installboot(8) but not self-installing as of now, plus I
have to actually test it
@
text
@d30 1
a30 1
CPPFLAGS+=	-USA_LINKSEG -DSA_LINKSEG=0x0800 -DBOOT_GRUB -DUSE_PTAB
@


1.8
log
@cosmetics: Mika insists on calling it bootgrub.mksh ☺
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/stand/bootxx/Makefile,v 1.7 2009/05/26 19:38:09 tg Exp $
d30 1
a30 1
CPPFLAGS+=	-USA_LINKSEG -DSA_LINKSEG=0x0800 -DBOOT_GRUB
@


1.7
log
@cosmetics
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/stand/bootxx/Makefile,v 1.6 2009/05/26 19:26:28 tg Exp $
d9 1
a9 1
CLEANFILES+=	${PROG}~ ${.CURDIR}/disasm bxinst bootgrub.sh
d32 1
a32 1
all: bootgrub.sh
d34 1
a34 1
bootgrub.sh: bxinst
@


1.6
log
@the ability to boot a GNU GRUB from our bootxx{,.sh},
designed for Mika Prokop to use with grml GNU/Linux

note: a GNU GRUB2 core.img file was tested, a grub-legacy
stage2 would be too large, the limit is 65280 bytes
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/stand/bootxx/Makefile,v 1.5 2009/01/31 18:51:19 tg Exp $
d9 1
a9 1
CLEANFILES+=	${PROG}~ ${.CURDIR}/disasm bxinst
d31 8
@


1.5
log
@new bootmagic, bootxx: reading only one sector at a time, ignoring
what the BIOS thinks it can do or cannot…

note: bootxx.sh (self-installing bootblocks) and installboot(8/i386)
both still break up entries at track boundaries, which is no longer
needed because of the single-sector reads
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/stand/bootxx/Makefile,v 1.4 2008/10/21 18:50:59 tg Exp $
d27 5
@


1.4
log
@strip locals but not globals from the various bootloader stuffs,
to enable using nm to find the __defkernel symbol in the sparc
second-stage bootloader, and shrink down the first-stage loaders
of both architectures.

The enlarged, symbol-table-enhanced sparc /boot works on my SS20.

Before:

-r-xr-xr-x   1 root  bin    - 38752 Oct 18 13:28 boot*
-r-xr-xr-x   1 root  bin    - 40440 Oct 18 13:28 bootxx*
-r--r--r--   1 root  bin    - 30634 Oct 18 13:07 bootxx.sh

-r--r--r--   1 root  bin    -  7394 Oct 17 00:07 bootxx.sh

After:

-r-xr-xr-x   1 root  bin    - 76254 Oct 21 18:40 boot*
-r-xr-xr-x   1 root  bin    - 40233 Oct 21 18:40 bootxx*
-rw-r--r--   1 tg    wsrc   - 25167 Oct 21 18:40 bxinst

-rw-r--r--   1 tg    wsrc   -  7293 Oct 21 18:38 bxinst
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/stand/bootxx/Makefile,v 1.3 2007/10/20 21:28:40 tg Exp $
d7 1
d14 1
a14 1
	${LD} -N -Ttext 0 -e _start ${OBJS} ${LDADD} -o $@@~
@


1.3
log
@self-installing boot blocks for i386, yay!
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/stand/bootxx/Makefile,v 1.2 2007/10/20 18:22:40 tg Exp $
a6 1
LDFLAGS=	-nostdlib -Ttext 0 -N -Bstatic
d8 1
a8 1
CLEANFILES+=	${PROG}.elf ${.CURDIR}/disasm bxinst
d12 4
a15 9
${PROG}: ${PROG}.elf
	objcopy -x $@@.elf $@@

.include <bsd.prog.mk>

LINK.prog=	:

${PROG}.elf: ${OBJS} ${DPADD}
	${LD} ${LDFLAGS} -o ${PROG}.elf ${OBJS} ${LDADD}
d19 2
a20 2
bxinst: ${.CURDIR}/mkbxinst.sh ${PROG}.elf
	${MKSH} ${.CURDIR}/mkbxinst.sh ${PROG}.elf >$@@
d23 1
a23 1
	objdump -d -Mintel,i8086 ${PROG}.elf >$@@
@


1.2
log
@make the Makefile more similar to sys/arch/sparc/stand/bootxx/Makefile
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/stand/bootxx/Makefile,v 1.1 2007/02/26 02:11:32 tg Exp $
d9 1
a9 1
CLEANFILES+=	${PROG}.elf ${.CURDIR}/disasm
d11 1
a11 1
all: ${PROG}
d25 3
@


1.1
log
@switch to a newer, more compact, PBR as well
@
text
@d1 1
a1 1
# $MirOS$
d11 10
a20 1
${PROG}: ${OBJS} ${DPADD}
a21 3
	objcopy -x ${PROG}.elf ${PROG}
	@@size ${PROG}
	@@ls -l ${.OBJDIR}/${PROG}
@

