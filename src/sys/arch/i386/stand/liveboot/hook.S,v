head	1.27;
access;
symbols
	tg-use_ldscript:1.27.0.2
	MIRBSD_10:1.19.0.2
	MIRBSD_10_BASE:1.19
	MIRBSD_9_BASE:1.11;
locks; strict;
comment	@# @;


1.27
date	2009.06.29.16.20.43;	author tg;	state Exp;
branches;
next	1.26;
commitid	1004A48E9B2175E8B71;

1.26
date	2009.02.01.10.44.17;	author tg;	state Exp;
branches;
next	1.25;
commitid	10049857D1225B78D79;

1.25
date	2009.02.01.10.25.48;	author tg;	state Exp;
branches;
next	1.24;
commitid	100498578C4000DA62D;

1.24
date	2009.01.17.12.18.24;	author tg;	state Exp;
branches;
next	1.23;
commitid	1004971CC9C6D611754;

1.23
date	2009.01.17.12.04.26;	author tg;	state Exp;
branches;
next	1.22;
commitid	1004971C95B717A11AE;

1.22
date	2009.01.17.11.54.34;	author tg;	state Exp;
branches;
next	1.21;
commitid	1004971C6FF340F9745;

1.21
date	2009.01.15.22.11.56;	author tg;	state Exp;
branches;
next	1.20;
commitid	100496FB4B664EBDCF0;

1.20
date	2009.01.10.13.25.02;	author tg;	state Exp;
branches;
next	1.19;
commitid	1004968A1C15AC2AF26;

1.19
date	2007.08.25.10.51.23;	author tg;	state Exp;
branches;
next	1.18;
commitid	10046D009C122E3F724;

1.18
date	2007.07.15.19.48.04;	author tg;	state Exp;
branches;
next	1.17;
commitid	100469A79C9351AA1E4;

1.17
date	2007.07.11.14.11.47;	author tg;	state Exp;
branches;
next	1.16;
commitid	1004694E52D6071C4DF;

1.16
date	2007.05.28.13.57.35;	author tg;	state Exp;
branches;
next	1.15;
commitid	100465ADFC03B9F0305;

1.15
date	2007.05.26.21.18.26;	author tg;	state Exp;
branches;
next	1.14;
commitid	1004658A4355ACAECEF;

1.14
date	2007.01.08.16.51.06;	author tg;	state Exp;
branches;
next	1.13;
commitid	10045A276397FBC481E;

1.13
date	2006.12.11.23.55.02;	author tg;	state Exp;
branches;
next	1.12;
commitid	100457DEFC626A6A05C;

1.12
date	2006.10.14.23.13.37;	author tg;	state Exp;
branches;
next	1.11;
commitid	10045316E81474E066D;

1.11
date	2006.06.23.21.03.30;	author tg;	state Exp;
branches;
next	1.10;
commitid	100449C5734476312C9;

1.10
date	2006.04.19.17.00.18;	author tg;	state Exp;
branches;
next	1.9;
commitid	10044466CA47A67C998;

1.9
date	2006.04.19.11.04.41;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004446195B170AC079;

1.8
date	2006.04.10.23.38.05;	author tg;	state Exp;
branches;
next	1.7;
commitid	100443AEC5D1B5B4672;

1.7
date	2006.04.10.23.35.07;	author tg;	state Exp;
branches;
next	1.6;
commitid	100443AEBB42CF6240E;

1.6
date	2006.04.10.21.05.20;	author tg;	state Exp;
branches;
next	1.5;
commitid	100443AC89915373C92;

1.5
date	2006.04.10.20.53.54;	author tg;	state Exp;
branches;
next	1.4;
commitid	100443AC5EE39990AE3;

1.4
date	2006.04.10.20.26.16;	author tg;	state Exp;
branches;
next	1.3;
commitid	100443ABF563A493ED2;

1.3
date	2006.04.10.18.50.57;	author tg;	state Exp;
branches;
next	1.2;
commitid	100443AA9286616B4FF;

1.2
date	2006.04.10.17.33.03;	author tg;	state Exp;
branches;
next	1.1;
commitid	100443A96E54F1EF465;

1.1
date	2006.04.10.17.27.26;	author tg;	state Exp;
branches;
next	;
commitid	100443A957C4C6EF5DB;


desc
@@


1.27
log
@• add a way to build an ldbsd.com for MirOS bsd4grml without the menu
  option to jump back to GNU GRUB2, for use with the LinuxMagazin DVD
  which is over 4 GiB in size, which seems to confuse boot(8/i386)
  XXX we don’t know at the moment if it’s 2 GiB or 4 GiB…
• MirOS BSD → MirOS bsd4grml if appropriate
@
text
@/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.26 2009/02/01 10:44:17 tg Exp $ */

/*-
 * Copyright (c) 2006, 2007, 2009
 *	Thorsten Glaser <tg@@mirbsd.org>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 */

	.intel_syntax noprefix
	.code16

	.data
lbl_mayskip:
	.ascii	"\n\rHold down SHIFT to skip the coloured menu"
	.ascii	" and go directly to the bootloader...\n\r"
#ifdef FORGRML
	.ascii	"On a WRAP/Soekris, press 4"
#else
	.ascii	"On a WRAP/Soekris, press 4 (Live) or 7 (Setup)"
#endif
	.asciz	" for serial console @@38k4,8N1.\n\r"
lbl_title:
	.ascii	"MirOS #"
	.ascii	mbsd_major
	.ascii	mbsd_type
#ifndef HAVE_DUALIVE
	.ascii	"/i386"
#endif
#ifdef FORGRML
	.asciz	" Rescue CD for grml.org"
#else
	.ascii	" Setup/Rescue/"
#ifndef HAVE_DUALIVE
#ifndef HAVE_GRML
	.ascii	"Live"
#else
	.ascii	"Live/GRML"
#endif
#else
#ifndef HAVE_GRML
	.ascii	"DuaLive"
#else
	.ascii	"Triforce"
#endif
#endif
	.asciz	" CD"
#endif
lbl_menus:
#if defined(FORGRML)
#if defined(NOGRUB)
	.byte	6
#else
	.byte	7
#endif
#elif defined(HAVE_GRML)
	.byte	10
#else
	.byte	9
#endif
	.long	lbl_menu0 - SA_LINKADDR
	.long	lbl_menu1 - SA_LINKADDR
	.long	lbl_menu2 - SA_LINKADDR
	.long	lbl_menu3 - SA_LINKADDR
	.long	lbl_menu4 - SA_LINKADDR
	.long	lbl_menu5 - SA_LINKADDR
#if !defined(FORGRML) || !defined(NOGRUB)
	.long	lbl_menu6 - SA_LINKADDR
#endif
#ifndef FORGRML
	.long	lbl_menu7 - SA_LINKADDR
	.long	lbl_menu8 - SA_LINKADDR
#ifdef HAVE_GRML
	.long	lbl_menu9 - SA_LINKADDR
#endif
lbl_menu0:
	.asciz	"Continue to normal /boot installer/rescue\n"
lbl_menu1:
	.asciz	"Boot into the Live-CD\n"
lbl_menu2:
	.asciz	"Boot the Live-CD from 2nd CD drive or hard disc\n"
lbl_menu3:
	.asciz	"Live-CD, serial console at COM1:9600,8N1\n"
lbl_menu4:
	.asciz	"Live-CD, serial console at COM1:38400,8N1\n"
lbl_menu5:
	.asciz	"Live-CD, serial console at COM1:115200,8N1\n"
lbl_menu6:
	.asciz	"Installer, serial console at COM1:9600,8N1\n"
lbl_menu7:
	.asciz	"Installer, serial console at COM1:38400,8N1\n"
lbl_menu8:
	.asciz	"Installer, serial console at COM1:115200,8N1\n"
#ifdef HAVE_GRML
lbl_menu9:
	.asciz	"Switch to GNU GRUB for booting into grml\n"
#endif
#else /* FORGRML */
lbl_menu0:
	.asciz	"Continue to normal MirOS boot loader\n"
lbl_menu1:
	.asciz	"Boot the MirOS bsd4grml rescue system ramdisk kernel\n"
lbl_menu2:
	.asciz	"Boot the rescue system, entering UKC (userconf)\n"
lbl_menu3:
	.asciz	"Rescue system, serial console at COM1:9600,8N1\n"
lbl_menu4:
	.asciz	"Rescue system, serial console at COM1:38400,8N1\n"
lbl_menu5:
	.asciz	"Rescue system, serial console at COM1:115200,8N1\n"
#ifndef NOGRUB
lbl_menu6:
	.asciz	"Chain to GNU GRUB for booting into grml.org again\n"
#endif /* !NOGRUB */
#endif /* FORGRML */
lbl_ask:
	.ascii	"\nUse the cursor up/down keys to navigate\n"
	.ascii	"and press return to activate the selected item\n"
	.asciz	"or enter the number of the entry to boot: "
lbl_widmung:
#ifdef FORGRML
	.ascii	"MirBSD for grml.org is proudly presented to you by\n"
	.asciz	"Thorsten Glaser, Michael Prokop, and their contributors."
#else
	.ascii	"This MirBSD Setup/Rescue/Triforce/DuaLive-CD ISO image is proudly\n"
	.asciz	"presented by The MirOS Project developers and contributors."
#endif

Ltick:	.long	0	/* end tick for timeout */
Lmenu:	.word	0	/* which menu point has been chosen (MBZ) */

#define GETTICK(a) \
	xor	ax,ax; \
	int	0x1A; \
	add	dx,(a); \
	adc	cl,0; \
	shl	ecx,16; \
	mov	cx,dx

	.text
	.globl	Lhook

Llens:	mov	di,si
	xor	cx,cx
	dec	cx
	cld
	xor	al,al
	repne	scasb
	not	cx
	dec	cx
	ret

/* out: DH=Zeile DL=Spalte (0-based) */
#define GET_XY \
	mov	ah,3; \
	mov	bh,0; \
	int	0x10

/* in: z,s (0-based) */
#define	LOCATE(z,s) \
	mov	ah,2; \
	mov	bh,0; \
	mov	dx,(((z) & 0xFF) << 8) | ((s) & 0xFF); \
	int	0x10

#define OUTCH(ch,col) \
	mov	al,(ch); \
	mov	bx,((col) & 0xFF); \
	call	outchc

#define OUTS(s,col) \
	mov	esi,offset s - SA_LINKADDR; \
	mov	bx,((col) & 0xFF); \
	call	Louts

Louts:	lodsb
	or	al,al
	je	Louts1
	call	outchc
	jmp	Louts
#if 1
Louts1:	ret
#else

Lsinitlo:
	mov	ax,0xE3
	xor	dx,dx
	int	0x14
Louts1:	ret

Lsput:	mov	ah,1
	xor	dx,dx
	int	0x14
	ret

Lsget:
	XXX ...
#endif

Lhook:	/* if any shift key pressed, skip all of this, return 0 */
	mov	esi,offset lbl_mayskip - SA_LINKADDR
	lodsb
Lhookp:	mov	ah,0x0E
	mov	bx,7
	int	0x10
	lodsb
	or	al,al
	jnz	Lhookp
	GETTICK(32)
	mov	ebp,ecx
Lhooks:	mov	ah,2
	int	0x16
	and	al,3
	jnz	Lquit
	GETTICK(0)
	cmp	ecx,ebp
	jbe	Lhooks
Lhook0:	/* clear screen */
#if 0
	mov	ax,7
	int	0x10
	mov	ax,3
	int	0x10
#else
	push	es
	mov	ax,0xB000
	mov	es,ax
	cld
	xor	di,di
	mov	ax,0x0720
	mov	cx,0x8000
	rep	stosw
	pop	es
#endif
	/* print banner */
	LOCATE(20,0)
	OUTS(lbl_widmung,4)
	GET_XY
	push	dx
	OUTCH(32,7)		/* -> newline at Lquit has this colour */
	LOCATE(0,0)
	OUTCH(201,15)
	mov	esi,offset lbl_title - SA_LINKADDR
	call	Llens
	inc	cx
	inc	cx
	push	cx
Lhook1:	OUTCH(205,15)
	dec	cx
	jne	Lhook1
	OUTCH(187,15)
	LOCATE(1,0)
	OUTCH(186,15)
	OUTCH(32,7)
	OUTS(lbl_title,14)
	OUTCH(32,7)
	OUTCH(186,15)
	LOCATE(2,0)
	OUTCH(200,15)
	pop	cx
Lhook2:	OUTCH(205,15)
	dec	cx
	jne	Lhook2
	OUTCH(188,15)

	GETTICK(219 /* 12 * 18.2 */)
	mov	ebx,offset Ltick - SA_LINKADDR
	mov	[bx],ecx
Lmlp0:	/* display the menu */
	call	Ldspm
Lmlp1:	/* read keypress (if any) */
	mov	ah,1
	int	0x16
	jnz	Lmlp2
	/* checking time? */
	mov	ebx,offset Ltick - SA_LINKADDR
	mov	ebp,[bx]
	or	ebp,ebp
	jz	Lmlp1
	/* get current ticks */
	GETTICK(0)
	/* lower? */
	cmp	ecx,ebp
	jbe	Lmlp1
	/* fake "return" */
	mov	ax,13
	jmp	Lmlp3
Lmlp2:	/* we have a keypress event, disable timeout */
	mov	ebx,offset Ltick - SA_LINKADDR
	mov	dword ptr [bx],0
	/* check which key */
	xor	ax,ax
	int	0x16
Lmlp3:	cmp	ax,0x4800	/* cursor up */
	jne	Lmlp4
	mov	ebx,offset lbl_menus - SA_LINKADDR
	mov	al,[bx]
	dec	ax
	mov	ebx,offset Lmenu - SA_LINKADDR
	xchg	al,[bx]
	or	al,al
	je	Lmlp0
	dec	al
	mov	[bx],al
	jmp	Lmlp0
Lmlp4:	cmp	ax,0x5000	/* cursor down */
	jne	Lmlp5
	mov	ebx,offset Lmenu - SA_LINKADDR
	xchg	al,[bx]
	inc	ax
	mov	ebx,offset lbl_menus - SA_LINKADDR
	cmp	al,[bx]
	jnb	Lmlp0
	mov	ebx,offset Lmenu - SA_LINKADDR
	mov	[bx],al
	jmp	Lmlp0
Lmlp5:	sub	al,13		/* return */
	jb	Lmlp1		/* <13: illegal */
	je	Ldone
	sub	al,0x30-13	/* '0' */
	jb	Lmlp1
	mov	ebx,offset lbl_menus - SA_LINKADDR
	cmp	al,[bx]
	jae	Lmlp1
	mov	ebx,offset Lmenu - SA_LINKADDR
	mov	[bx],al
Ldone:	/* choice in [Lmenu] */
	mov	ah,2
	mov	bh,0
	pop	dx
	/* restore cursor position (after last text output) */
	int	0x10 
Lquit:	/* issue a newline (colour 7, because it's the final one) */
	mov	ax,0x0E0D
	mov	bx,7
	int	0x10
	mov	ax,0x0E0A
	int	0x10
	/* return choice */
	xor	eax,eax
	mov	ebx,offset Lmenu - SA_LINKADDR
	mov	al,[bx]
	ret

Ldspm:	/* lines 0, 1, 2 = banner, 3 = empty, start at 4 */
	LOCATE(4,0)
	mov	esi,offset lbl_menus - SA_LINKADDR
	xor	ax,ax
	lodsb
	mov	bp,ax	/* count left */
	xor	di,di	/* which item */
Ldspm0:	mov	ebx,offset Lmenu - SA_LINKADDR
	mov	ax,[bx]
	mov	bx,7
	cmp	ax,di
	jne	Ldspm1
	mov	bl,0x70
Ldspm1:	lodsd
	push	si
	push	di
	push	bp
	mov	si,ax
	mov	al,0x30
	add	ax,di
	call	outchc
	mov	al,')'
	call	outchc
	mov	al,' '
	call	outchc
	call	Louts
	pop	bp
	pop	di
	pop	si
	inc	di
	dec	bp
	jne	Ldspm0
	OUTS(lbl_ask,9)
	ret

/*
 * We cannot use INT 10h AH=09 or AH=0Eh functions for
 * outputting coloured text, use direct memory writes,
 * cover both HGC and CGA/EGA/VGA memory
 */
outchc:
	pusha
	/* special case: newline (never coloured, equals 0x0D 0x0A) */
	cmp	al,0x0a
	je	outnl
	mov	ah,bl
	push	ax	/* in correct form for video memory */
	mov	ah,3
	int	0x10
	mov	cl,160
	mov	al,dh
	mul	cl
	mov	dh,0
	shl	dx,1
	add	dx,ax	/* dx := offset in video memory */
	pop	ax
	push	es
	mov	bx,0xb800
	mov	es,bx
	mov	di,dx
	stosw
	cmp	ah,9
	jne	outct1
	mov	ah,7	/* tweak black/white */
outct1:	mov	bh,0xb0
	mov	es,bx
	mov	di,dx
	stosw
	pop	es
	mov	ah,3
	mov	bh,0
	int	0x10
	inc	dx	/* go forward by one char */
setcpos:
	mov	ah,2
	int	0x10
	popa
	ret
outnl:
	mov	ah,3
	mov	bh,0
	int	0x10
	inc	dh
	mov	dl,0
	jmp	setcpos
@


1.26
log
@special boot menu for bsd4grml ☺
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.25 2009/02/01 10:25:48 tg Exp $ */
d64 3
d68 1
d80 1
d82 1
d111 1
a111 1
#else
d115 1
a115 1
	.asciz	"Boot the MirOS BSD rescue system ramdisk kernel\n"
d124 1
d127 2
a128 1
#endif
@


1.25
log
@do not set the video modes; rather, clear the MDA and CGA/EGA/VGA video
screen by writing spaces in COLOR 7,0 there directly

might improve palette compatibility with buggy Parallels Desktop *sigh*
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.24 2009/01/17 12:18:24 tg Exp $ */
d30 3
d34 1
d43 3
d61 1
d63 3
a65 1
#ifdef HAVE_GRML
d77 1
d105 16
d126 4
d132 1
@


1.24
log
@add grml, reserve boot.9 slot for grml too
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.23 2009/01/17 12:04:26 tg Exp $ */
d192 1
d197 11
@


1.23
log
@use ifdef to specify what CD we have
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.22 2009/01/17 11:54:34 tg Exp $ */
d36 10
a45 2
#if defined(HAVE_DUALIVE)
	.asciz	" Setup/DuaLive CD"
d47 5
a51 1
	.asciz	"/i386 Setup/Live CD"
d53 1
d55 1
d57 3
d69 1
d71 1
d73 1
a73 1
	.asciz	"Continue to normal /boot\n"
d90 1
d92 2
a93 1
	.asciz	"Boot the MirOS installer\n"
d99 2
a100 2
	.ascii	"This MirBSD Setup/Live-CD ISO image is proudly presented by\n"
	.asciz	"The MirOS Project developers and contributors."
@


1.22
log
@#10-current, and we do DuaLive baselive CDs sorta manually, or Triforce CDs
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.21 2009/01/15 22:11:56 tg Exp $ */
d33 8
a40 1
	.asciz	"MirOS #10-current Setup/DuaLive CD"
@


1.21
log
@be a little less specific re. who is actually a developer/contributor,
and nuke the adv clause
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.20 2009/01/10 13:25:02 tg Exp $ */
d33 1
a33 1
	.asciz	"MirOS #10 Setup/Live CD"
@


1.20
log
@fix relocation warnings
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.19 2007/08/25 10:51:23 tg Exp $ */
d4 2
a5 2
 * Copyright (c) 2006, 2007
 *	Thorsten Glaser <tg@@mirbsd.de>
a12 4
 * Advertising materials mentioning features or use of this work must
 * display the following acknowledgement:
 *	This product includes material provided by Thorsten Glaser.
 *
d71 2
a72 2
	.ascii	"This MirOS Setup/Live-CD ISO image is proudly presented by\n"
	.asciz	"Thorsten Glaser and Benny Siegert, and their contributors."
@


1.19
log
@LF -> CR-LF, 10x bsiegert@@
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.18 2007/07/15 19:48:04 tg Exp $ */
d40 10
a49 10
	.word	lbl_menu0
	.word	lbl_menu1
	.word	lbl_menu2
	.word	lbl_menu3
	.word	lbl_menu4
	.word	lbl_menu5
	.word	lbl_menu6
	.word	lbl_menu7
	.word	lbl_menu8
	.word	lbl_menu9
d121 1
a121 1
	mov	si,offset s; \
d150 1
a150 1
	mov	si,offset lbl_mayskip
d180 1
a180 1
	mov	si,offset lbl_title
d204 2
a205 1
	mov	[Ltick],ecx
d213 2
a214 1
	mov	ebp,[Ltick]
d226 2
a227 1
	mov	dword ptr [Ltick],0
d233 2
a234 1
	mov	al,[lbl_menus]
d236 2
a237 1
	xchg	al,[Lmenu]
d241 1
a241 1
	mov	[Lmenu],al
d245 2
a246 1
	xchg	al,[Lmenu]
d248 2
a249 1
	cmp	al,[lbl_menus]
d251 2
a252 1
	mov	[Lmenu],al
d259 2
a260 1
	cmp	al,[lbl_menus]
d262 2
a263 1
	mov	[Lmenu],al
d278 2
a279 1
	mov	al,[Lmenu]
d284 1
a284 1
	mov	si,offset lbl_menus
d289 2
a290 1
Ldspm0:	mov	ax,[Lmenu]
d295 1
a295 1
Ldspm1:	lodsw
@


1.18
log
@help serial console users even more (for now; this might become a two-stage
menu later, and cdrom10.iso must be touched too; maybe we can even grab the
port from the combios/tinybios control… who knows)

anyway, we weren't the first BSD with a live CD, we probably were the first
with a live HDD, and we definitively are the first OS with a live CF card ☻
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.17 2007/07/11 14:11:47 tg Exp $ */
d33 1
a33 1
	.ascii	" and go directly to the bootloader...\n"
d35 1
a35 1
	.asciz	" for serial console @@38k4,8N1.\n"
@


1.17
log
@offer live cd boot with serial console (untested)
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.16 2007/05/28 13:57:35 tg Exp $ */
d33 3
a35 1
	.asciz	" and go directly to the bootloader..."
d39 1
a39 1
	.byte	7
d47 3
d63 6
@


1.16
log
@• make it more clear that the "dd(1)d onto hard disc" is actually
  the "boot -a" option and recommend it if something fails
• mention changing /etc/X11/XF86Config in case of trouble
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.15 2007/05/26 21:18:26 tg Exp $ */
d37 1
a37 1
	.byte	4
d42 3
d52 6
@


1.15
log
@another #9-current…
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.14 2007/01/08 16:51:06 tg Exp $ */
d47 1
a47 1
	.asciz	"Boot the Live-CD dd(1)d onto hard disc\n"
@


1.14
log
@try to fix the issue of the boot loader messages being in
a different colour: except for BOCHS BIOS, you usually can't
set the colour of the text with AH=0Eh INT 10h

reported by bsiegert@@ and kabelaffe; fix not tested
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.13 2006/12/11 23:55:02 tg Exp $ */
d35 1
a35 1
	.asciz	"MirOS #9-current Setup/Live CD"
@


1.13
log
@mostly administrative licence sync w/ current template
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.20 2006/12/11 21:04:56 tg Rel $ */
d4 1
a4 1
 * Copyright (c) 2006
d157 1
@


1.12
log
@implement an almost-two second time before the menu is generated (or any
screen related functions such as resetting the video mode) are done, du-
ring which pressing either shift key skips the hook entirely; cover this
with a nice message too (and adapt the final newline handling)

morfic said (in IRC) this _might_ be required on a Matrox G550
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.14 2006/08/09 19:35:23 tg Rel $ */
d7 5
a11 6
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
d17 8
a24 8
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a defect.
@


1.11
log
@This is #9-current
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.10 2006/04/19 17:00:18 tg Exp $ */
d14 2
a15 2
 * All advertising materials mentioning features or use of this soft-
 * ware must display the following acknowledgement:
d25 1
a25 1
 * the possibility of such damage or existence of a nontrivial bug.
d32 3
d60 9
a68 1
Lmenu:	.word	0	/* which menu point has been chosen */
d130 19
a148 2
Lhook:
	/* clear screen */
a181 7
#define GETTICK(a) \
	xor	ax,ax; \
	int	0x1A; \
	add	dx,(a); \
	adc	cl,0; \
	shl	ecx,16; \
	mov	cx,dx
a182 1
	.text
d238 1
d240 7
a246 2
	OUTCH('\n',0)
	/* cursor position (after last text output) restored, new line */
@


1.10
log
@even nicer: let /boot continue (after the hook) on the line
after the last line of our "selfish" message
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.9 2006/04/19 11:04:41 tg Exp $ */
d33 1
a33 1
	.asciz	"MirOS #8-current Setup/Live CD"
@


1.9
log
@we proudly present, so be it ;)
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.8 2006/04/10 23:38:05 tg Exp $ */
d128 2
d215 6
a220 1
	LOCATE(18,0)
@


1.8
log
@* tweak black/white to use (7,0) for (9,0)
* also unbreak compilation while here
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.7 2006/04/10 23:35:07 tg Exp $ */
d52 3
d126 2
@


1.7
log
@write colour first, then hercules/mda
allows for tweaks
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.6 2006/04/10 21:05:20 tg Exp $ */
d44 1
a44 1
lbl_menu1:
d273 4
a276 1
	mov	bh,0xb0
@


1.6
log
@offer the ability to boot the live cd from hard disc in the menu, too
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.5 2006/04/10 20:53:54 tg Exp $ */
d269 1
a269 1
	mov	bx,0xb000
d273 1
a273 1
	mov	bh,0xb8
@


1.5
log
@* comment better
* move .data to beginning for cleanliness
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.4 2006/04/10 20:26:16 tg Exp $ */
d35 1
a35 1
	.byte	3
d39 1
d44 3
a46 1
lbl_menu2:
@


1.4
log
@use our own direct memory access instead of the BIOS for
outputting coloured (yes Benny, you read right) text

Benny, you will be *shocked* when you boot the next snapshot...
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.3 2006/04/10 18:50:57 tg Exp $ */
d50 3
d110 1
a110 1
	;...
a143 5

	.data
Ltick:	.long	0
Lmenu:	.byte	0

d217 1
a217 2
Ldspm0:	xor	ax,ax
	mov	al,[Lmenu]
d244 5
d250 2
a253 1
	pusha
d255 1
a255 1
	push	ax
d263 1
a263 1
	add	dx,ax
d278 1
a278 1
	inc	dx
a284 1
	pusha
@


1.3
log
@cosmetics
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.2 2006/04/10 17:33:03 tg Exp $ */
d40 1
a40 1
	.asciz	"Continue to normal /boot"
d42 1
a42 1
	.asciz	"Boot into the Live-CD"
d44 1
a44 1
	.asciz	"Boot the MirOS installer"
d46 2
a47 2
	.ascii	"Use the cursor up/down keys to navigate\r\n"
	.ascii	"and press return to activate the selected item\r\n"
d77 1
a77 1
	mov	ax,0x0E00 | ((ch) & 0xFF); \
d79 1
a79 1
	int	0x10
d89 1
a89 2
	mov	ah,0x0E
	int	0x10
d207 1
d224 1
a224 1
	mov	bl,15
d230 1
a230 1
	mov	ax,0x0E30
d232 5
a236 5
	int	0x10
	mov	ax,0x0E29	/* ')' */
	int	0x10
	mov	ax,0x0E20
	int	0x10
a237 5
	mov	ax,0x0E0D
	mov	bx,7
	int	0x10
	mov	ax,0x0E0A
	int	0x10
d244 34
a277 3
	mov	ax,0x0E0D
	int	0x10
	mov	ax,0x0E0A
d279 1
a279 1
	OUTS(lbl_ask,7)
d281 8
@


1.2
log
@make it build
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/liveboot/hook.S,v 1.1 2006/04/10 17:27:26 tg Exp $ */
d46 2
a47 2
	.ascii	"Use the cursor up/down keys to navigate and press return"
	.ascii	" to activate the selected item\r\n"
@


1.1
log
@first, untested, not-yet-serial-enabled draft of liveboot's hook
I need to buy beer now before the shop closes so I better back it
up at the cvs server ;)
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.7 2006/04/09 22:08:49 tg Rel $ */
d138 1
a138 1
Lhook1:	OUTCH(205,15)
d140 1
a140 1
	jne	Lhook1
@

