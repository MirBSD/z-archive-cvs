head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2010.01.16.23.16.55;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004B5248E46EAE418D;

1.1
date	2010.01.10.01.28.50;	author tg;	state Exp;
branches;
next	;
commitid	1004B492D5519935373;


desc
@@


1.2
log
@make into a function, so that itâ€™s reusable
@
text
@#!/bin/mksh
# $MirOS: src/sys/arch/i386/stand/bootxx_ustarfs/tarcksum,v 1.1 2010/01/10 01:28:50 tg Exp $
#-
# Copyright (c) 2010
#	Thorsten Glaser <tg@@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.

function tarcksum {
	typeset buf i

	buf=($(dd if="$1" count=1 2>/dev/null | hexdump -ve '1/1 "0x%02X "'))
	buf[0x94]=0
	buf[0x95]=0
	buf[0x96]=0
	buf[0x97]=0
	buf[0x98]=0
	buf[0x99]=0
	buf[0x9A]=0
	buf[0x9B]=0
	i=0
	typeset -Z9 -Uui8 chksum=256
	while (( i < 512 )); do
		(( chksum += buf[i++] ))
	done
	print ${chksum#8#}
}

tarcksum "$1"
@


1.1
log
@first draft of ustarfs primary bootloader (aka bootsector)
not complete, different approach will follow
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.28 2008/11/14 15:33:44 tg Rel $
d22 21
a42 15
buf=($(dd if="$1" count=1 2>&- | hexdump -ve '1/1 "0x%02X "'))
buf[0x94]=0
buf[0x95]=0
buf[0x96]=0
buf[0x97]=0
buf[0x98]=0
buf[0x99]=0
buf[0x9A]=0
buf[0x9B]=0
i=0
typeset -Z9 -Uui8 chksum=256
while (( i < 512 )); do
	(( chksum += buf[i++] ))
done
print ${chksum#8#}
@

