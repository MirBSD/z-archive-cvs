head	1.10;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.1
	MIRBSD_10:1.6.0.4
	MIRBSD_10_BASE:1.6
	MIRBSD_9_BASE:1.6
	MIRBSD_8:1.6.0.2
	MIRBSD_8_BASE:1.6
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2014.01.11.18.16.12;	author tg;	state Exp;
branches;
next	1.9;
commitid	10052D18A8038CC3F4D;

1.9
date	2010.04.16.22.44.05;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004BC8E8284299B9C3;

1.8
date	2009.02.16.21.21.02;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004999D6C503898A56;

1.7
date	2008.08.01.18.39.54;	author tg;	state Exp;
branches;
next	1.6;
commitid	1004893589041A05FFB;

1.6
date	2005.12.06.01.24.49;	author tg;	state Exp;
branches;
next	1.5;
commitid	4c194394e8209ffa;

1.5
date	2005.12.04.23.14.40;	author tg;	state Exp;
branches;
next	1.4;
commitid	6ea6439378626964;

1.4
date	2005.07.04.01.41.32;	author tg;	state Exp;
branches;
next	1.3;
commitid	364b42c893e257b6;

1.3
date	2005.05.04.18.12.39;	author tg;	state Exp;
branches;
next	1.2;
commitid	6b5442790f8aa337;

1.2
date	2005.03.06.21.26.56;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.24;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.24;	author tg;	state Exp;
branches;
next	;


desc
@@


1.10
log
@there is precisely zero reason to use random()/srandom() even in the kernel (since we initialise arc4random statically)
@
text
@# $MirOS: src/sys/arch/i386/conf/files.i386,v 1.9 2010/04/16 22:44:05 tg Exp $
# $OpenBSD: files.i386,v 1.118 2004/05/11 04:01:00 deraadt Exp $
#
# new style config file for i386 architecture
#

# maxpartitions must be first item in files.${ARCH}
maxpartitions 16

maxusers 2 16 64

major	{ccd = 16}

file	arch/i386/i386/autoconf.c
file	arch/i386/i386/conf.c
file	arch/i386/i386/db_disasm.c	ddb
file	arch/i386/i386/db_interface.c	ddb
file	arch/i386/i386/db_memrw.c	ddb | kgdb
file	arch/i386/i386/db_trace.c	ddb
file	arch/i386/i386/db_magic.s	ddb
file	arch/i386/i386/disksubr.c	disk
file	arch/i386/i386/est.c		!small_kernel & i686_cpu
file	arch/i386/i386/gdt.c
file	arch/i386/i386/in_cksum.s	inet
file	arch/i386/i386/ipx_cksum.c	ipx
file	arch/i386/i386/machdep.c
file	arch/i386/i386/via.c		i686_cpu
file	arch/i386/i386/kgdb_machdep.c	kgdb
file	arch/i386/i386/longrun.c	!small_kernel & i586_cpu
file	arch/i386/i386/mem.c
file	arch/i386/i386/i686_mem.c	mtrr
file	arch/i386/i386/k6_mem.c		mtrr
file	arch/i386/i386/microtime.s
file	arch/i386/i386/p4tcc.c		!small_kernel & i686_cpu
file	arch/i386/i386/pmap.c
file	arch/i386/i386/powernow.c	!small_kernel
file	arch/i386/i386/process_machdep.c
file	arch/i386/i386/procfs_machdep.c	procfs
file	arch/i386/i386/sys_machdep.c
file	arch/i386/i386/trap.c
file	arch/i386/i386/vm_machdep.c
file	arch/i386/i386/dkcsum.c		bios
file	arch/i386/i386/locc.S
file	arch/i386/i386/scanc.S
file	arch/i386/i386/skpc.S
file	dev/cons.c
file	dev/cninit.c
file	arch/i386/i386/wscons_machdep.c	wsdisplay
major	{vnd = 14}

#
# Media Independent Interface (mii)
#
include "../../../dev/mii/files.mii"

#
# Machine-independent SCSI drivers
#

include "../../../scsi/files.scsi"
major	{sd = 4}
major	{st = 5}
major	{cd = 6}
major	{rd = 17}

#
# I2O
#
include "dev/i2o/files.i2o"

#
# Machine-independent ATAPI drivers
#

include "../../../dev/atapiscsi/files.atapiscsi"
include "../../../dev/ata/files.ata"

#
# System bus types
#

define mainbus { }
device	mainbus: isabus, eisabus, pcibus, mainbus
attach	mainbus at root
file	arch/i386/i386/mainbus.c	mainbus

#device	mca at root {...}

#
# PCI-only drivers
# XXX MUST BE INCLUDED BEFORE files.isa, as long as files.isa attaches
# XXX devices to 'pci'.
#

include "../../../dev/pci/files.pci"
file	arch/i386/pci/pci_machdep.c		pci
file	arch/i386/pci/agp_machdep.c		pciagp
file	dev/pci/agp_ali.c			pciagp
file	dev/pci/agp_amd.c			pciagp
file	dev/pci/agp_i810.c			pciagp
file	dev/pci/agp_intel.c			pciagp
file	dev/pci/agp_sis.c			pciagp
file	dev/pci/agp_via.c			pciagp
file	arch/i386/pci/pciide_machdep.c		pciide
file	arch/i386/pci/pcic_pci_machdep.c	pcic_pci

# PCI-Host bridge chipsets
device	pchb: pcibus
attach	pchb at pci
file	arch/i386/pci/pchb.c		pchb

# AMD Elan SC520 System Controller (PCI-Host bridge)
device	elansc
attach	elansc at pci
file	arch/i386/pci/elan520.c		elansc

# Geode SC1100
device	geodesc
attach	geodesc at pci
file	arch/i386/pci/geodesc.c		geodesc

# PCI-ISA bridge chipsets
device	pcib: isabus
attach	pcib at pci
file	arch/i386/pci/pcib.c		pcib | ichpcib

# Intel ICHx/ICHx-M LPC bridges
device	ichpcib: isabus
attach	ichpcib at pci
file	arch/i386/pci/ichpcib.c		ichpcib

device	tpm
file	dev/ic/tpm.c			tpm needs-flag
attach	tpm at mainbus with ich_tpm
file	arch/i386/pci/ich_tpm.c		ich_tpm

device	hme: ether, ifnet, mii, ifmedia
file	dev/ic/hme.c			hme
attach	hme at pci with hme_pci
file	dev/pci/if_hme_pci.c		hme_pci

#
# ISA and mixed ISA+EISA or ISA+PCI or ISA+PCMCIA drivers
#

major	{mcd = 7}
major	{wd = 0}
major	{wt = 3}

include "../../../dev/isa/files.isa"
file	arch/i386/isa/isa_machdep.c	isabus

# PC clock
file	arch/i386/isa/clock.c		isabus

# Numeric Processing Extension; Math Co-processor
device	npx
attach	npx at isa
file	arch/i386/isa/npx.c		npx needs-flag

# attribute used to represent the "keyboard controller"
# XXX should be a real device
define pckbcport { [irq = -1], [port = -1] }

# 8250/16[45]50-based "com" ports, optimized for the i386 interrupt system
device	pccom: tty
attach	pccom at isa with pccom_isa
attach	pccom at commulti with pccom_commulti
file	arch/i386/isa/pccom.c		pccom & (pccom_isa | pccom_isapnp | pccom_commulti | pccom_pcmcia | pccom_cardbus | pccom_puc) needs-flag

# PC Mice; Logitech-style, Microsoft-style, and PS/2-style
device	lms: wsmousedev
attach	lms at isa
file	arch/i386/isa/lms.c		lms needs-flag
device	mms: wsmousedev
attach	mms at isa
file	arch/i386/isa/mms.c		mms needs-flag

include	"dev/wscons/files.wscons"
include	"dev/pckbc/files.pckbc"

device sysbeep
attach sysbeep at pcppi

# Floppy disk controller
# XXX temporarily conflicts with arc, will soon move to files.isa
device	fdc {drive = -1}
attach	fdc at isa
file	dev/isa/fdc.c		fdc needs-flag

device	fd: disk, isa_dma
attach	fd at fdc
file	dev/isa/fd.c		fd needs-flag
major	{fd = 2}

# Pentium performance counters
pseudo-device	pctr
file	arch/i386/i386/pctr.c		pctr needs-flag

pseudo-device	mtrr
file 	arch/i386/i386/mtrr.c		mtrr needs-flag

#
# ISA PnP
#

include "../../../dev/isa/files.isapnp"
file	arch/i386/isa/isapnp_machdep.c	isapnp

attach	pccom at isapnp with pccom_isapnp

# Game adapter (joystick)
device	joy
file	arch/i386/isa/joy.c		joy needs-flag
attach	joy at isa with joy_isa
file	arch/i386/isa/joy_isa.c		joy_isa
attach	joy at isapnp with joy_isapnp
file	arch/i386/isa/joy_isapnp.c	joy_isapnp

#
# Compatibility modules
#

# VM86 mode
file	arch/i386/i386/vm86.c			vm86

# Linux binary compatibility (COMPAT_LINUX)
include "../../../compat/linux/files.linux"
file	arch/i386/i386/linux_machdep.c		compat_linux

# OpenBSD binary compatibility (COMPAT_OPENBSD)
include "../../../compat/openbsd/files.openbsd"

device	powernowhack {}
attach	powernowhack at mainbus
file	arch/i386/i386/powernow-k7.c	powernowhack needs-flag

device	bios {}
attach	bios at mainbus
file	arch/i386/i386/bios.c		bios needs-count

device	apm
attach	apm at bios
file	arch/i386/i386/apm.c		apm needs-count
file	arch/i386/i386/apmcall.S	apm

device	pcibios
attach	pcibios at bios
file	arch/i386/pci/pcibios.c		pcibios needs-count
file	arch/i386/pci/pci_intr_fixup.c	pcibios
file	arch/i386/pci/pci_bus_fixup.c	pcibios
file	arch/i386/pci/pci_addr_fixup.c	pcibios
file	arch/i386/pci/opti82c558.c	pcibios
file	arch/i386/pci/opti82c700.c	pcibios
file	arch/i386/pci/piix.c		pcibios
file	arch/i386/pci/sis85c503.c	pcibios
file	arch/i386/pci/via82c586.c	pcibios
file	arch/i386/pci/via8231.c		pcibios
file	arch/i386/pci/amd756.c		pcibios
file	arch/i386/pci/ali1543.c		pcibios

#
# CARDBUS
#
include	"dev/cardbus/files.cardbus"
file	arch/i386/i386/rbus_machdep.c	cardbus

# XXXX pcic here because it needs to be late.  The catch: pcic needs
# to be late, so devices which attach to it are attached late.  But it
# needs to be before its isa and pci attachments.  This answer is
# non-optimal, but I don't have a better answer right now.

# PCIC pcmcia contoller
# XXX this needs to be done very late, so it's done here.  This feels
# like a kludge, but it might be for the best.

device	pcic: pcmciabus
file	dev/ic/i82365.c			pcic

# PCIC pcmcia controller on ISA bus.
attach	pcic at isa with pcic_isa
file	dev/isa/i82365_isa.c		pcic_isa

# PCIC pcmcia controller on PCI bus.
attach	pcic at pci with pcic_pci
file	dev/pci/i82365_pci.c		pcic_pci

# PCIC pcmcia controller on PnP board
attach	pcic at isapnp with pcic_isapnp
file	dev/isa/i82365_isapnp.c	pcic_isapnp

# Code common to ISA and ISAPnP attachments
file	dev/isa/i82365_isasubr.c	pcic_isa | pcic_isapnp | pcic_pci

# Databook TCIC/2 pcmcia/isa bridge
device	tcic: pcmciabus
file	dev/ic/tcic2.c			tcic
attach	tcic at isa with tcic_isa
file	dev/isa/tcic2_isa.c		tcic_isa

#
# Machine-independent PUC drivers
#
include "dev/puc/files.puc"

# i386-specific PUC drivers
attach	pccom at puc with pccom_puc

# PCMCIA wants to be probed as late as possible.

#
# Machine-independent PCMCIA drivers
#
include "dev/pcmcia/files.pcmcia"

# i386-specific PCMCIA drivers
attach	pccom at pcmcia with pccom_pcmcia

# i386-specific Cardbus drivers
attach	pccom at cardbus with pccom_cardbus

#
# Machine-independent USB drivers
#
include "dev/usb/files.usb"

#
# Machine-independent SD/MMC drivers
#
include "dev/sdmmc/files.sdmmc"
@


1.9
log
@Backport SD/MMC support from OpenBSD. Not finished:
• attach/detach of a card (an entire scsibus!) works
• access doesn’t: throws EIO

Someone, please, help?
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/files.i386,v 1.8 2009/02/16 21:21:02 tg Exp $
a38 1
file	arch/i386/i386/random.s
@


1.8
log
@functional TPM driver, from Joshua Stein’s efforts
• tested with a slightly hacked user space library (GPL) from IBM:
  RMD160 (tpm-3.2.0.tar.gz) = 80bae009bdfeaaba5d4f2ce371bde630cf6913d1
  ‣ /dev/tpm not /dev/tpm0
  ‣ comment out ioctl
  ‣ for entropy testing of the RNG, slurp 768 bytes in each call
    (more aren’t returned on my IBM Stinkpad X40)
• TODO: make /dev/tpm available only if kern.usercrypto=1
• TODO: similar to VIA C3 HW RNG, feed into kernel pool from TPM, unless
  the device is already opened from user space
  ‣ XXX do we want/need to do a full reset once it was opened?
  ‣ XXX do we take it back once user space had addressed it?
• TODO: write tpm(4) manual page, regen MAKEDEV(8)

Think about it. (Hah, how bleu from me.) Why not let cprng(8) do the deed?
(Of course, in-kernel operation is much cooler. But it may block, and in
any case, it adds complexity. Plus, we only allow one user space programme
to actually access the device.)

Tests with mirports/math/ent on a 64 KiB sample looked good, although the
TPM is a very slow HW RNG (about 1KB/s even at the largest block size my
exemplar could do, which is not guaranteed by the standard anyway).

*winks Theo* Every bit counts. Even if it may not be worth it for crypto.

PS: someone with actual kernel coding experience might want to help me
    to attach the tpm0 at ichpcib0, which I couldn’t get quite right…
    for now, tpm0 attaches at mainbus0 or root, similar to powernowhack0…
    the match function falses constantly unless manually called from the
    ichpcib attach routine – but it is at least better than jsg’s trick
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/files.i386,v 1.7 2008/08/01 18:39:54 tg Exp $
d327 5
@


1.7
log
@move kernel-only files
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/files.i386,v 1.6 2005/12/06 01:24:49 tg Exp $
d133 5
@


1.6
log
@replace in-kernel zlib 0.95 with user-space libz 1.2.3
- crypto/deflate.c is now called crypto/kdeflate.c (basename conflict)
- I should probably better have made a libzkrnl.a
- ppp-deflate is disabled for now, until stuff goes in upstream
  (have to check for breakage in unrelated stuff, like rsync)
- untested, but kernel gets build
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/files.i386,v 1.5 2005/12/04 23:14:40 tg Exp $
d44 3
@


1.5
log
@* elfrdsetroot: fix size of format string arguments (yeah! openbsd, eat this)
* distrib, etc, sys/arch/conf: shrink size of i386 FLOPPY in-kernel root disc
* distrib/*: re-enable i386 floppy (and lots of free space despite smaller)
* distrib/i386/common/list: enable it to find ssh's sources
* libz: make it usable as an in-kernel library "as is"
  XXX remove zlib.{c,h} from src/sys/dev/
* files.i386: use external libz sources
* pbr: export new public symbol
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/files.i386,v 1.4 2005/07/04 01:41:32 tg Exp $
a43 1
file	../lib/libz/adler32.c		!ppp_deflate & !ipsec & !crypto
@


1.4
log
@clean up
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/files.i386,v 1.3 2005/05/04 18:12:39 tg Exp $
d44 1
a44 1
file	lib/libz/adler32.c		!ppp_deflate & !ipsec & !crypto
@


1.3
log
@turn the K7 PowerNow driver into a device with flags,
changeable via UKC. Also, no action is taken if the speed
is not changed any more, we don't hold lock on 128 KiB of
unused RAM, allow selection of the correct PST or none at
all, list available PSTs verbosely, show available (but
not unusable (fid/vid == 0)) frequencies, offer a debug
mode for K7PN developers, have a nice manual page, do not
disturb on non-K7 boxen at all, look nice in general, use
more static functions and variables where possible, ...
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/files.i386,v 1.2 2005/03/06 21:26:56 tg Exp $
a319 5

#
# Machine-independent FireWire drivers
#
include "dev/ieee1394/files.ieee1394"
@


1.2
log
@* merge src/sys/
  (at least the better part of it)
* revert IPv6 networking to OpenBSD, since
  I didn't get IPV4_MAPPED addresses working :(
@
text
@d1 1
a1 1
# $MirOS$
a36 1
file	arch/i386/i386/powernow-k7.c	!small_kernel
d228 4
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#	$OpenBSD: files.i386,v 1.118 2004/05/11 04:01:00 deraadt Exp $
a33 1
file	arch/i386/i386/ns_cksum.c	ns
d37 1
a149 1
file	dev/clock_subr.c		isabus
a155 3
# Linux/GNU i387 floating point emulator
include "../../../gnu/arch/i386/fpemul/files.fpemul"

a190 5
# Adaptec AHA-284x VL SCSI controllers
# device declaration in sys/conf/files
attach	ahc at isa with ahc_isa
file	arch/i386/isa/ahc_isa.c		ahc_isa

a198 7
# EISA-only drivers
#

include "../../../dev/eisa/files.eisa"
file	arch/i386/eisa/eisa_machdep.c	eisa

#
a221 10
# a.out binary compatibility (COMPAT_AOUT)
include "../../../compat/aout/files.aout"

# SVR4 binary compatibility (COMPAT_SVR4)
include "../../../compat/svr4/files.svr4"
file	arch/i386/i386/svr4_machdep.c		compat_svr4

# iBCS-2 binary compatibility (COMPAT_IBCS2)
include "../../../compat/ibcs2/files.ibcs2"

d226 2
a227 9
# BSD/OS binary compatibility (COMPAT_BSDOS)
include "../../../compat/bsdos/files.bsdos"

# FreeBSD binary compatibility (COMPAT_FREEBSD)
include "../../../compat/freebsd/files.freebsd"
file	arch/i386/i386/freebsd_machdep.c	compat_freebsd

# OSS audio driver compatibility
include "../../../compat/ossaudio/files.ossaudio"
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
