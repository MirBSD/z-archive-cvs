head	1.20;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.1
	MIRBSD_10:1.16.0.2
	MIRBSD_10_BASE:1.16
	MIRBSD_9_BASE:1.16
	MIRBSD_8:1.9.0.2
	MIRBSD_8_BASE:1.9
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.20
date	2018.12.14.21.28.08;	author tg;	state Exp;
branches;
next	1.19;
commitid	1005C142058354E0A9A;

1.19
date	2017.08.07.20.18.10;	author tg;	state Exp;
branches;
next	1.18;
commitid	1005988C69344442E37;

1.18
date	2009.12.26.11.34.47;	author tg;	state Exp;
branches;
next	1.17;
commitid	1004B35F4E077E3E657;

1.17
date	2008.10.05.16.26.19;	author tg;	state Exp;
branches;
next	1.16;
commitid	10048E8EA7D6EAD401E;

1.16
date	2006.06.12.13.15.51;	author tg;	state Exp;
branches;
next	1.15;
commitid	100448D69175E9D042C;

1.15
date	2006.03.27.09.40.16;	author tg;	state Exp;
branches;
next	1.14;
commitid	1004427B30B564F0E3E;

1.14
date	2006.03.27.09.31.32;	author tg;	state Exp;
branches;
next	1.13;
commitid	1004427B1050C48F198;

1.13
date	2006.03.27.09.27.26;	author tg;	state Exp;
branches;
next	1.12;
commitid	1004427B00C05C55EAD;

1.12
date	2006.01.31.10.44.47;	author tg;	state Exp;
branches;
next	1.11;
commitid	10043DF3FA9793545F3;

1.11
date	2006.01.31.10.41.28;	author tg;	state Exp;
branches;
next	1.10;
commitid	10043DF3ED932CCC4B2;

1.10
date	2006.01.31.10.17.46;	author tg;	state Exp;
branches;
next	1.9;
commitid	10043DF394F7289586C;

1.9
date	2005.12.18.02.20.38;	author tg;	state Exp;
branches;
next	1.8;
commitid	10043A4C7724F998DEF;

1.8
date	2005.12.18.02.06.42;	author tg;	state Exp;
branches;
next	1.7;
commitid	10043A4C4367371AA8C;

1.7
date	2005.12.06.01.24.49;	author tg;	state Exp;
branches;
next	1.6;
commitid	4c194394e8209ffa;

1.6
date	2005.07.04.04.33.35;	author tg;	state Exp;
branches;
next	1.5;
commitid	336c42c8bc22400a;

1.5
date	2005.05.04.22.01.08;	author tg;	state Exp;
branches;
next	1.4;
commitid	67d942794635d223;

1.4
date	2005.05.04.21.58.37;	author tg;	state Exp;
branches;
next	1.3;
commitid	2ff942794597d5cf;

1.3
date	2005.04.19.21.52.02;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.06.21.26.56;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.24;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.24;	author tg;	state Exp;
branches;
next	;


desc
@@


1.20
log
@reintegrate (as external contrib thingy, completely separate) the 387 emulation
up to the point where “make depend” succeeds and code bugs remain
@
text
@# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.19 2017/08/07 20:18:10 tg Exp $
# $OpenBSD: Makefile.i386,v 1.40 2004/05/11 04:01:00 deraadt Exp $

# Makefile for MirOS BSD
#
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/arch/i386/conf/MACHINEID
# after which you should do
#	config machineid
# Machine generic makefile changes should be made in
#	/sys/arch/i386/conf/Makefile.i386
# after which config should be rerun for all machines of that type.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in filesystem quotas

# DEBUG is set to -g if debugging.

.include <bsd.own.mk>

# source tree is located via $S relative to the compilation directory
.ifndef S
S!=	realpath ../../../..
.endif
I386=	$S/arch/i386
_MDINC=	${I386}/i386

CPPFLAGS=	${INCLUDES} ${EMU_HOOK_CPPFLAGS} ${IDENT} -D_KERNEL -Di386

# machine-dependent default flags (overrides CFLAGS, overridden by COPTS)
.if !${IDENT:M-DI386_CPU}
CMACHFLAGS=	-march=i486
.else
CMACHFLAGS=	-march=i386 -msoft-float -mno-fp-ret-in-387
.endif

LINKFLAGS=	-Ttext 0xD0100120 -e start -N

.include "$S/conf/Makefile.inc"

### included rules

%OBJS

%CFILES

%SFILES

%LOAD


# depend on network or filesystem configuration
uipc_domain.o uipc_proto.o vfs_conf.o: Makefile
if.o if_tun.o if_loop.o if_ethersubr.o: Makefile
if_arp.o if_ether.o: Makefile
ip_input.o ip_output.o in_pcb.o in_proto.o: Makefile
tcp_subr.o tcp_timer.o tcp_output.o: Makefile

# depend on CPU configuration
locore.o machdep.o: Makefile


%RULES
@


1.19
log
@filesystem
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.18 2009/12/26 11:34:47 tg Exp $
d33 1
a33 1
CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL -Di386
@


1.18
log
@it's possible to build kernels with -msoft-float -mno-fp-ret-in-387
as they don't use the FPU at all right now, as it should be
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.17 2008/10/05 16:26:19 tg Exp $
d20 1
a20 1
# -DQUOTA	compile in file system quotas
@


1.17
log
@use mksh realpath builtin instead of readlink -f for canonicalisation

note: there’s still a readlink(1) call left in, for instance, mirmake;
this does not hurt because we initially assumed that readlink(1) does
exist anyway and bundled ours just because some do not have the ‘-f’
option for realpath(2)isation
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.16 2006/06/12 13:15:51 tg Exp $
d35 1
d39 1
a39 1
CMACHFLAGS=
@


1.16
log
@move the include down, to make CPPFLAGS+= work
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.15 2006/03/27 09:40:16 tg Exp $
d28 1
a28 1
S!=	readlink -nf ../../../..
@


1.15
log
@consolidate the MD kernel makefiles even more
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.14 2006/03/27 09:31:32 tg Exp $
a32 2
.include "$S/conf/Makefile.inc"

d43 2
@


1.14
log
@sync these two Makefiles
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.13 2006/03/27 09:27:26 tg Exp $
d31 1
a52 23
# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
SYSTEM_OBJ=	locore.o tai_leaps.o init_ssp.o \
		param.o ioconf.o ${OBJS} ${LIBKERN} ${LIBCOMPAT}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD=	rm -f $@@
SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_OBJ}' vers.o; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@

DEBUG?=
.if ${DEBUG} == "-g"
LINKFLAGS+=	-X
SYSTEM_LD_TAIL+=; \
		echo cp $@@ $@@.gdb; rm -f $@@.gdb; cp $@@ $@@.gdb; \
		echo ${STRIP} ${STRIPFLAGS} $@@; ${STRIP} ${STRIPFLAGS} $@@
.else
LINKFLAGS+=	-x
.endif

a54 19
assym.h: $S/kern/genassym.sh ${I386}/i386/genassym.cf Makefile
	${SHELL} $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} <${I386}/i386/genassym.cf >assym.h.tmp && \
	    mv -f assym.h.tmp assym.h

SRCS=	${I386}/i386/locore.s ${_COMMON_SRCS} ${CFILES} ${SFILES}
depend:: .depend
.depend: ${SRCS} assym.h param.c ${APMINC}
	CC=${CC:Q} ${MKDEP} -D_ASM_SOURCE ${AFLAGS} ${CPPFLAGS} \
	    ${I386}/i386/locore.s
	CC=${CC:Q} ${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
.if defined(SFILES) && !empty(SFILES)
	CC=${CC:Q} ${MKDEP} -a -D_ASM_SOURCE ${AFLAGS} ${CPPFLAGS} ${SFILES}
.endif
	CC=${CC:Q} ${SHELL} $S/kern/genassym.sh ${MKDEP} -f assym.dep \
	    ${CFLAGS} ${CPPFLAGS} <${I386}/i386/genassym.cf
	@@sed -e 's/.*\.o:.* /assym.h: /' <assym.dep >>.depend
	@@rm -f assym.dep

a66 3
locore.o: ${I386}/i386/locore.s assym.h
	${NORMAL_S}

@


1.13
log
@use -D_ASM_SOURCE for compiling and depending .s/.S files
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.12 2006/01/31 10:44:47 tg Exp $
d4 1
a4 2
# Makefile for MirOS BSD and derived operating environments
# based upon Makefile for OpenBSD (NetBSD, 4.4BSD-Lite, etc.)
d88 1
d90 1
@


1.12
log
@CC="${CC}" -> CC=${CC:Q} as usual
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.11 2006/01/31 10:41:28 tg Exp $
d86 2
a87 1
	CC=${CC:Q} ${MKDEP} ${AFLAGS} ${CPPFLAGS} ${I386}/i386/locore.s
d89 3
a91 3
	CC=${CC:Q} ${MKDEP} -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
	CC=${CC:Q} ${SHELL} $S/kern/genassym.sh ${MKDEP} -f assym.dep ${CFLAGS} \
	    ${CPPFLAGS} <${I386}/i386/genassym.cf
@


1.11
log
@include tai_leaps into depends target
while here, revamp common files dependency creation
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.10 2006/01/31 10:17:46 tg Exp $
d86 4
a89 4
	CC="${CC}" ${MKDEP} ${AFLAGS} ${CPPFLAGS} ${I386}/i386/locore.s
	CC="${CC}" ${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
	CC="${CC}" ${MKDEP} -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
	CC="${CC}" ${SHELL} $S/kern/genassym.sh ${MKDEP} -f assym.dep ${CFLAGS} \
@


1.10
log
@move CFLAGS definition to MI code; strip out -g1 as well
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.9 2005/12/18 02:20:38 tg Exp $
d83 1
a83 2
SRCS=	${I386}/i386/locore.s \
	param.c ioconf.c ${CFILES} ${SFILES}
@


1.9
log
@consolidate the Makefile rules shared between all architectures (supported)
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.8 2005/12/18 02:06:42 tg Exp $
a42 2
CFLAGS=		${DEBUG} ${CDIAGFLAGS} ${CMACHFLAGS} \
		${COPTS:S/-g//} ${PIPE} ${CSYS}
@


1.8
log
@pwd -> readlink -nf
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.7 2005/12/06 01:24:49 tg Exp $
a26 4
MKDEP?=	mkdep
SIZE?=	size
STRIP?=	strip

d33 2
a34 1
INCLUDES=	-nostdinc -I. -I$S/arch -I$S -I${BSDSRCDIR}/lib/libz
a35 2
CDIAGFLAGS=	-Werror -Wall -Wstrict-prototypes -Wmissing-prototypes \
		-Wno-uninitialized -Wno-format -Wno-main
a41 4
.if ${IDENT:M-DNO_PROPOLICE}
CMACHFLAGS+=	-fno-stack-protector
.endif
CMACHFLAGS+=	-fno-builtin-printf -fno-builtin-log -ffreestanding
a42 1
COPTS?=		-O2
a44 1
AFLAGS=		-x assembler-with-cpp -traditional-cpp -D_LOCORE
a45 18
STRIPFLAGS=	-g -X -x

HOSTCC=		${CC}
HOSTED_CPPFLAGS=${CPPFLAGS:N-nostdinc:N-D_KERNEL}
HOSTED_CFLAGS=	${CFLAGS}

### find out what to use for libkern
.include "$S/lib/libkern/Makefile.inc"
LIBKERN=	${KERNLIB}

### find out what to use for libcompat
.include "$S/compat/common/Makefile.inc"
LIBCOMPAT=	${COMPATLIB}

# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL or DRIVER; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.
d47 1
a47 10
NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} -c $<
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PARAM} -c $<

DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PARAM} -c $<

NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<
NORMAL_S_C=	${CC} ${AFLAGS} ${CPPFLAGS} ${PARAM} -c $<

HOSTED_C=	${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<
a84 69
# Propolice init
init_ssp.o: $S/kern/init_ssp.c
	${NORMAL_C} -fno-stack-protector

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${NORMAL_C_C}

ioconf.o: ioconf.c
	${NORMAL_C}

tai_leaps.o: tai_leaps.c
	${NORMAL_C}

tai_leaps.c: tai_make
	./tai_make >$@@ || (rm -f $@@; false)

tai_make: tai_make.o
	${HOSTCC} ${HOSTED_CFLAGS} -o $@@ $>

tai_make.o: $S/lib/libkern/tai_make.c
	${HOSTED_C}

.PATH: ${BSDSRCDIR}/lib/libz
.include "${BSDSRCDIR}/lib/libz/Makefile.gen"

# libz generated headers
.depend: crc32.h inffixed.h trees.h

newvers: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	${SHELL} $S/conf/newvers.sh "${OSrev}" "${OSrpl}" \
	    "${OSREV:C/^${OSrev}.//}" "${OScompat}"
	${CC} ${CFLAGS} ${CPPFLAGS} -c vers.c

install:
	@@if [[ -e /bsd ]]; then \
		echo Move /bsd out of the way!; \
		exit 1; \
	elif [[ ! -e /bsd.old ]]; then \
		echo Back up your old kernel to /bsd.old!; \
		exit 1; \
	else \
		set -x; \
		install -c -o root -g daemon -m 400 bsd /; \
	fi

clean::
	rm -f eddep *bsd bsd.gdb tags *.[io] [a-z]*.s \
	    [Ee]rrs linterrs makelinks assym.h

lint:
	@@lint -hbxncez -Dvolatile= ${CPPFLAGS} ${PARAM} -UKGDB \
	    ${CFILES} ioconf.c param.c | \
	    grep -v 'static function .* unused'

tags:
	@@echo "see $S/kern/Makefile for tags"

links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u >dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' >makelinks
	${SHELL} makelinks && rm -f dontlink makelinks

a97 3
# depend on root or device configuration
autoconf.o conf.o: Makefile

a104 3
# depend on maxusers
machdep.o: Makefile

@


1.7
log
@replace in-kernel zlib 0.95 with user-space libz 1.2.3
- crypto/deflate.c is now called crypto/kdeflate.c (basename conflict)
- I should probably better have made a libzkrnl.a
- ppp-deflate is disabled for now, until stuff goes in upstream
  (have to check for breakage in unrelated stuff, like rsync)
- untested, but kernel gets build
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.6 2005/07/04 04:33:35 tg Exp $
d33 1
a33 1
S!=	cd ../../../..; pwd
@


1.6
log
@our Makefiles don't automatically ${SUDO} on an install target, usually
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.5 2005/05/04 22:01:08 tg Exp $
d37 1
a37 1
INCLUDES=	-nostdinc -I. -I$S/arch -I$S
d60 1
a60 1
HOSTED_CPPFLAGS=${CPPFLAGS:S/^-nostdinc$//}
d149 6
@


1.5
log
@be verbose
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.4 2005/05/04 21:58:37 tg Exp $
d163 1
a163 1
		${SUDO} install -c -o root -g daemon -m 400 bsd /; \
@


1.4
log
@simple 'install' target (relatively safe, but annoying ;)
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.3 2005/04/19 21:52:02 tg Exp $
d162 1
@


1.3
log
@no install target for kernels
reminded by some tech@@o posting
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/i386/conf/Makefile.i386,v 1.2 2005/03/06 21:26:56 tg Exp $
d154 10
@


1.2
log
@* merge src/sys/
  (at least the better part of it)
* revert IPv6 networking to OpenBSD, since
  I didn't get IPV4_MAPPED addresses working :(
@
text
@d1 1
a1 1
# $MirOS$
a207 12
# The install target can be redefined by putting a
# install-kernel-${MACHINE_NAME} target into /etc/mk.conf
MACHINE_NAME!=  uname -n
install: install-kernel-${MACHINE_NAME}
.if !target(install-kernel-${MACHINE_NAME}})
install-kernel-${MACHINE_NAME}:
	rm -f /obsd
	ln /bsd /obsd
	cp bsd /nbsd
	mv /nbsd /bsd
.endif

@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#	$OpenBSD: Makefile.i386,v 1.40 2004/05/11 04:01:00 deraadt Exp $
d4 2
a5 1
# Makefile for OpenBSD
d10 1
a10 1
#	/sys/arch/i386/conf/``machineid''
a23 1
# PROF is set to -pg if profiling.
d50 1
a50 1
CMACHFLAGS+=	-fno-builtin-printf -fno-builtin-log
d53 2
a54 1
CFLAGS=		${DEBUG} ${CDIAGFLAGS} ${CMACHFLAGS} ${COPTS} ${PIPE}
d59 1
a59 1
HOSTCC= ${CC}
a64 1
.ifndef PROF
a65 3
.else
LIBKERN=	${KERNLIB_PROF}
.endif
a68 1
.ifndef PROF
a69 3
.else
LIBCOMPAT=	${COMPATLIB_PROF}
.endif
d72 1
a72 1
# where TYPE is NORMAL, DRIVER, or PROFILE; SUFFIX is the file suffix,
d76 2
a77 2
NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<
d79 2
a80 2
DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<
d98 1
a98 1
SYSTEM_OBJ=	locore.o \
d119 2
a120 2
	sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} < ${I386}/i386/genassym.cf > assym.h.tmp && \
d123 4
d137 12
d150 3
a152 2
	sh $S/conf/newvers.sh
	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c vers.c
d169 1
a169 1
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
d172 2
a173 2
	  sed 's,.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink makelinks
d179 6
a184 6
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${I386}/i386/locore.s
	${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
	${MKDEP} -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
	sh $S/kern/genassym.sh ${MKDEP} -f assym.dep ${CFLAGS} \
	    ${CPPFLAGS} < ${I386}/i386/genassym.cf
	@@sed -e 's/.*\.o:.* /assym.h: /' < assym.dep >> .depend
d190 3
a192 3
 
# depend on network or filesystem configuration 
uipc_domain.o uipc_proto.o vfs_conf.o: Makefile 
d201 1
a201 1
# depend on CPU configuration 
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
