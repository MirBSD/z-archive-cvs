head	1.20;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.1
	MIRBSD_10:1.16.0.2
	MIRBSD_10_BASE:1.16
	MIRBSD_9_BASE:1.13
	MIRBSD_8:1.7.0.2
	MIRBSD_8_BASE:1.7
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.20
date	2018.04.28.05.00.18;	author tg;	state Exp;
branches;
next	1.19;
commitid	1005AE3FFF4125513E9;

1.19
date	2018.04.28.03.24.46;	author tg;	state Exp;
branches;
next	1.18;
commitid	1005AE3E98441347FF5;

1.18
date	2017.08.07.20.18.14;	author tg;	state Exp;
branches;
next	1.17;
commitid	1005988C69344442E37;

1.17
date	2008.10.05.16.26.20;	author tg;	state Exp;
branches;
next	1.16;
commitid	10048E8EA7D6EAD401E;

1.16
date	2007.09.01.10.25.04;	author tg;	state Exp;
branches;
next	1.15;
commitid	10046D93DDC6E3865BC;

1.15
date	2007.06.11.01.57.11;	author tg;	state Exp;
branches;
next	1.14;
commitid	100466CAC035CFC3743;

1.14
date	2006.06.27.14.13.32;	author tg;	state Exp;
branches;
next	1.13;
commitid	10044A13D1864E8DC43;

1.13
date	2006.06.12.13.15.51;	author tg;	state Exp;
branches;
next	1.12;
commitid	100448D69175E9D042C;

1.12
date	2006.03.27.09.40.16;	author tg;	state Exp;
branches;
next	1.11;
commitid	1004427B30B564F0E3E;

1.11
date	2006.03.27.09.31.32;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004427B1050C48F198;

1.10
date	2006.03.27.09.27.26;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004427B00C05C55EAD;

1.9
date	2006.01.31.10.41.28;	author tg;	state Exp;
branches;
next	1.8;
commitid	10043DF3ED932CCC4B2;

1.8
date	2006.01.31.10.17.47;	author tg;	state Exp;
branches;
next	1.7;
commitid	10043DF394F7289586C;

1.7
date	2005.12.18.02.20.38;	author tg;	state Exp;
branches;
next	1.6;
commitid	10043A4C7724F998DEF;

1.6
date	2005.07.07.13.39.40;	author tg;	state Exp;
branches;
next	1.5;
commitid	331742cd306446f9;

1.5
date	2005.05.04.22.01.08;	author tg;	state Exp;
branches;
next	1.4;
commitid	67d942794635d223;

1.4
date	2005.05.04.21.58.37;	author tg;	state Exp;
branches;
next	1.3;
commitid	2ff942794597d5cf;

1.3
date	2005.04.19.21.52.03;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.06.21.27.16;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.33;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.33;	author tg;	state Exp;
branches;
next	;


desc
@@


1.20
log
@frobnicate the entire SYSTEM_LD crap to make it work
@
text
@# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.19 2018/04/28 03:24:46 tg Exp $
# $OpenBSD: Makefile.sparc,v 1.33 2003/11/20 08:38:52 espie Exp $
# $NetBSD: Makefile.sparc,v 1.32.4.1 1996/06/12 20:26:32 pk Exp $

# Makefile for MirOS BSD
#
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/arch/sparc/conf/MACHINEID
# after which you should do
#	config machineid
# Machine generic makefile changes should be made in
#	/sys/arch/sparc/conf/Makefile.sparc
# after which config should be rerun for all machines of that type.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in filesystem quotas

# DEBUG is set to -g if debugging.

.include <bsd.own.mk>

# source tree is located via $S relative to the compilation directory
.ifndef S
S!=	realpath ../../../..
.endif
SPARC=	$S/arch/sparc
_MDINC=	${SPARC}/sparc

.include "${SPARC}/Makefile.reloc"

SPARC_AUTO_NODBGSYM?=No
SPARC_CHKSZ=	${MKSH} ${SPARC:Q}/conf/chkbsdsz.sh ${RELOC2:Q} $@@~
.if ${SPARC_AUTO_NODBGSYM:L} == "yes"
SYSTEM_LD_TAIL=	@@set -e; ${SIZE} $@@~; chmod 755 $@@~; SPARC_AUTO_NODBGSYM=0; \
		set +e; ${SPARC_CHKSZ}; _e=$$?; case $$_e { \
		(0) ;; \
		(1) \
			print -ru2 -- "W: enabling nodbgsym flag for $@@~"; \
			print -n \\014 | dd conv=notrunc bs=1 seek=7 of=$@@~; \
			SPARC_AUTO_NODBGSYM=1; ${SPARC_CHKSZ} || exit $$? ;; \
		(*) exit $$_e ;; \
		}; set -e
SYSTEM_LD_POST=	case $$SPARC_AUTO_NODBGSYM { \
		(0) ;; \
		(1) print -n \\014 | dd conv=notrunc bs=1 seek=7 of=$@@~ ;; \
		(*) print -u2 E: internal error; exit 1 ;; \
		}
.else
SYSTEM_LD_TAIL=	@@set -e; ${SIZE} $@@~; chmod 755 $@@~; ${SPARC_CHKSZ}
.endif

CPPFLAGS=	${INCLUDES} ${IDENT} -D_KERNEL -Dsparc

.if ${IDENT:M-DSUN*} == ${IDENT:M-DSUN4M}
CMACHFLAGS=	-mcpu=supersparc -msoft-float
.else
CMACHFLAGS=	-msoft-float
.endif

LINKFLAGS=	-N -e start -Ttext F8004000

.include "$S/conf/Makefile.inc"

### included rules

%OBJS

%CFILES

%SFILES

%LOAD


# depend on network or filesystem configuration
uipc_proto.o vfs_conf.o: Makefile

# depend on CPU configuration
bwtwo.o cgsix.o cgthree.o cgtwo.o cons.o dma.o esp.o fb.o if_ie.o: Makefile
ms.c obio.o zs.c autoconf.o clock.o cpu.o disksubr.o locore.o: Makefile
machdep.o mem.o openprom.o pmap.o vm_machdep.o: Makefile


%RULES
@


1.19
log
@attempt to make the sparc bsd.rd automatically marked nodbgsym if necessary
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.17 2008/10/05 16:26:20 tg Exp $
d37 1
a37 1
SPARC_CHKSZ=	${MKSH} ${.CURDIR:Q}/chkbsdsz.sh ${RELOC2:Q} $@@
d39 1
a39 1
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@; \
d43 3
a45 3
			print -ru2 -- "W: enabling nodbgsym flag for $@@"; \
			print -n \\014 | dd conv=notrunc bs=1 seek=7 of=$@@; \
			${SPARC_CHKSZ} || exit $$? ;; \
d47 5
d54 1
a54 2
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@; \
		${SPARC_CHKSZ} || exit $$?
@


1.18
log
@filesystem
@
text
@d36 17
a61 9
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@; \
		typeset -i10 rval=${RELOC} "ksize=0x4000+$$(stat -f %z $@@)"; \
		if ((ksize < rval)); then \
			print "Kernel size ($$ksize) below" \
			    "reloc value ($$rval), OK"; \
		else \
			print "ATTENTION: Kernel ($$ksize) is" \
			    "too big; must shrink below $$rval"; \
		fi
@


1.17
log
@use mksh realpath builtin instead of readlink -f for canonicalisation

note: there’s still a readlink(1) call left in, for instance, mirmake;
this does not hurt because we initially assumed that readlink(1) does
exist anyway and bundled ours just because some do not have the ‘-f’
option for realpath(2)isation
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.16 2007/09/01 10:25:04 tg Exp $
d21 1
a21 1
# -DQUOTA	compile in file system quotas
@


1.16
log
@• fix RELOC value used: we need to use RELOC not RELOC2 for kernel size
  checking
• mksh can do 0xnumber now, simplify and stylify
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.15 2007/06/11 01:57:11 tg Exp $
d29 1
a29 1
S!=	readlink -nf ../../../..
@


1.15
log
@• move before +=
• rewrite in more modern ksh
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.14 2006/06/27 14:13:32 tg Exp $
d46 2
a47 3
		typeset -i10 "relocval=16\#${RELOC2:S/^0x//}"; \
		typeset -i10 "ksize=16384+$$(stat -f %z $@@)"; \
		if ((ksize<relocval)); then \
d49 1
a49 1
			    "reloc value ($$relocval), OK"; \
d52 1
a52 1
			    "too big; must shrink below $$relocval"; \
@


1.14
log
@add -msoft-float to the kernel cflags, seems to stabilise things for me
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.13 2006/06/12 13:15:51 tg Exp $
d45 10
a65 10
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@; ${SHELL} -c \
		' typeset -i10 "relocval=16\#${RELOC2:S/^0x//}"; \
		  set -A kstmp -- $$(/bin/ls -l $@@); \
		  typeset -i10 "ksize=16384+$${kstmp[4]}"; \
		  if ((ksize<relocval)); then \
		    print "Kernel size ($${kstmp[4]}) below" \
		      "reloc value ($$relocval), OK"; else \
		    print "ATTENTION: Kernel ($$ksize) is" \
		      "too big; must shrink below $$relocval"; fi '

@


1.13
log
@move the include down, to make CPPFLAGS+= work
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.12 2006/03/27 09:40:16 tg Exp $
d39 1
a39 1
CMACHFLAGS=	-mcpu=supersparc
d41 1
a41 1
CMACHFLAGS=
@


1.12
log
@consolidate the MD kernel makefiles even more
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.11 2006/03/27 09:31:32 tg Exp $
a35 2
.include "$S/conf/Makefile.inc"

d46 2
@


1.11
log
@sync these two Makefiles
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.10 2006/03/27 09:27:26 tg Exp $
d32 1
a55 11
# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
SYSTEM_OBJ=	locore.o tai_leaps.o init_ssp.o \
		param.o ioconf.o ${OBJS} ${LIBKERN} ${LIBCOMPAT}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD=	rm -f $@@
SYSTEM_LD=	@@echo ${LD} ${LINKFLAGS} -o $@@ '$${SYSTEM_OBJ}' vers.o; \
		${LD} ${LINKFLAGS} -o $@@ ${SYSTEM_OBJ} vers.o
a65 10
DEBUG?=
.if ${DEBUG} == "-g"
LINKFLAGS+=	-X
SYSTEM_LD_TAIL+=; \
		echo cp $@@ $@@.gdb; rm -f $@@.gdb; cp $@@ $@@.gdb; \
		echo ${STRIP} ${STRIPFLAGS} $@@; ${STRIP} ${STRIPFLAGS} $@@
.else
LINKFLAGS+=	-x
.endif

a67 19
assym.h: $S/kern/genassym.sh ${SPARC}/sparc/genassym.cf Makefile
	${SHELL} $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} <${SPARC}/sparc/genassym.cf >assym.h.tmp && \
	    mv -f assym.h.tmp assym.h

SRCS=	${SPARC}/sparc/locore.s ${_COMMON_SRCS} ${CFILES} ${SFILES}
depend:: .depend
.depend: ${SRCS} assym.h param.c ${APMINC}
	CC=${CC:Q} ${MKDEP} -D_ASM_SOURCE ${AFLAGS} ${CPPFLAGS} \
	    ${SPARC}/sparc/locore.s
	CC=${CC:Q} ${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
.if defined(SFILES) && !empty(SFILES)
	CC=${CC:Q} ${MKDEP} -a -D_ASM_SOURCE ${AFLAGS} ${CPPFLAGS} ${SFILES}
.endif
	CC=${CC:Q} ${SHELL} $S/kern/genassym.sh ${MKDEP} -f assym.dep \
	    ${CFLAGS} ${CPPFLAGS} <${SPARC}/sparc/genassym.cf
	@@sed -e 's/.*\.o:.* /assym.h: /' <assym.dep >>.depend
	@@rm -f assym.dep

a77 3
locore.o: ${SPARC}/sparc/locore.s assym.h
	${NORMAL_S}

@


1.10
log
@use -D_ASM_SOURCE for compiling and depending .s/.S files
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.9 2006/01/31 10:41:28 tg Exp $
d60 1
a60 1
SYSTEM_OBJ=	locore.o \
d63 1
a63 1
SYSTEM_LD_HEAD=	@@rm -f $@@
d95 6
a100 5
.depend: ${SRCS} assym.h param.c
	${MKDEP} -D_ASM_SOURCE ${AFLAGS} ${CPPFLAGS} ${SPARC}/sparc/locore.s
	${MKDEP} -a ${CFLAGS} ${CPPFLAGS} param.c ioconf.c ${CFILES}
.if !empty(SFILES)
	${MKDEP} -a -D_ASM_SOURCE ${AFLAGS} ${CPPFLAGS} ${SFILES}
d102 2
a103 2
	${SHELL} $S/kern/genassym.sh ${MKDEP} -f assym.dep ${CFLAGS} \
	    ${CPPFLAGS} <${SPARC}/sparc/genassym.cf
@


1.9
log
@include tai_leaps into depends target
while here, revamp common files dependency creation
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.8 2006/01/31 10:17:47 tg Exp $
d96 1
a96 1
	${MKDEP} ${AFLAGS} ${CPPFLAGS} ${SPARC}/sparc/locore.s
d99 1
a99 1
	${MKDEP} -a ${AFLAGS} ${CPPFLAGS} ${SFILES}
@


1.8
log
@move CFLAGS definition to MI code; strip out -g1 as well
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.7 2005/12/18 02:20:38 tg Exp $
d93 1
a93 2
SRCS=	${SPARC}/sparc/locore.s \
	param.c ioconf.c ${CFILES} ${SFILES}
@


1.7
log
@consolidate the Makefile rules shared between all architectures (supported)
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.6 2005/07/07 13:39:40 tg Exp $
a44 2
CFLAGS=		${DEBUG} ${CDIAGFLAGS} ${CMACHFLAGS} \
		${COPTS:S/-g//} ${PIPE} ${CSYS}
@


1.6
log
@/bin/sh and /bin/ksh -> /bin/mksh

This should cover most uses.
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.5 2005/05/04 22:01:08 tg Exp $
a26 4
MKDEP?=	mkdep
SIZE?=	size
STRIP?=	strip

d29 1
a29 1
S!=	cd ../../../..; pwd
d35 2
a36 1
INCLUDES=	-nostdinc -I. -I$S/arch -I$S
a38 3
CDIAGFLAGS=	-Werror -Wall -Wstrict-prototypes -Wmissing-prototypes \
		-Wno-uninitialized -Wno-format -Wno-main -ffreestanding

a43 4
.if ${IDENT:M-DNO_PROPOLICE}
CMACHFLAGS+=	-fno-stack-protector
.endif
CMACHFLAGS+=	-fno-builtin-printf -fno-builtin-log
a44 1
COPTS?=		-Os
a46 1
AFLAGS=		-x assembler-with-cpp -traditional-cpp -D_LOCORE
a47 13
STRIPFLAGS=	-g -X -x

HOSTCC=		${CC}
HOSTED_CPPFLAGS=${CPPFLAGS:S/^-nostdinc$//}
HOSTED_CFLAGS=	${CFLAGS}

### find out what to use for libkern
.include "$S/lib/libkern/Makefile.inc"
LIBKERN=	${KERNLIB}

### find out what to use for libcompat
.include "$S/compat/common/Makefile.inc"
LIBCOMPAT=	${COMPATLIB}
d49 1
a49 15
# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL or DRIVER; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.

NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} -c $<
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PARAM} -c $<

DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PARAM} -c $<

NORMAL_S=	${CC} ${AFLAGS} ${CPPFLAGS} -c $<
NORMAL_S_C=	${CC} ${AFLAGS} ${CPPFLAGS} ${PARAM} -c $<

HOSTED_C=	${HOSTCC} ${HOSTED_CFLAGS} ${HOSTED_CPPFLAGS} -c $<
a94 47
param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${NORMAL_C_C}

ioconf.o: ioconf.c
	${NORMAL_C}

newvers: ${SYSTEM_DEP} ${SYSTEM_SWAP_DEP}
	${SHELL} $S/conf/newvers.sh "${OSrev}" "${OSrpl}" \
	    "${OSREV:C/^${OSrev}.//}" "${OScompat}"
	${CC} ${CFLAGS} ${CPPFLAGS} -c vers.c

install:
	@@if [[ -e /bsd ]]; then \
		echo Move /bsd out of the way!; \
		exit 1; \
	elif [[ ! -e /bsd.old ]]; then \
		echo Back up your old kernel to /bsd.old!; \
		exit 1; \
	else \
		set -x; \
		${SUDO} install -c -o root -g daemon -m 400 bsd /; \
	fi

clean::
	rm -f eddep *bsd *bsd.gdb tags *.[io] [a-z]*.s \
	    [Ee]rrs linterrs makelinks genassym genassym.o assym.h

lint:
	@@lint -hbxncez -DGENERIC -Dvolatile= ${CPPFLAGS} ${PARAM} -UKGDB \
	    ${CFILES} ioconf.c param.c | \
	    grep -v 'static function .* unused'

tags:
	@@echo "see $S/kern/Makefile for tags"

links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u >dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' >makelinks
	${SHELL} makelinks && rm -f dontlink

a109 3
# depend on root or device configuration
autoconf.o conf.o: Makefile

a112 3
# depend on maxusers
machdep.o: Makefile

@


1.5
log
@be verbose
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.4 2005/05/04 21:58:37 tg Exp $
d107 1
a107 1
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@; /bin/ksh -c \
@


1.4
log
@simple 'install' target (relatively safe, but annoying ;)
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.3 2005/04/19 21:52:03 tg Exp $
d157 1
@


1.3
log
@no install target for kernels
reminded by some tech@@o posting
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/conf/Makefile.sparc,v 1.2 2005/03/06 21:27:16 tg Exp $
d149 10
@


1.2
log
@* merge src/sys/
  (at least the better part of it)
* revert IPv6 networking to OpenBSD, since
  I didn't get IPV4_MAPPED addresses working :(
@
text
@d1 1
a1 1
# $MirOS$
a202 12
# The install target can be redefined by putting a
# install-kernel-${MACHINE_NAME} target into /etc/mk.conf
MACHINE_NAME!=  uname -n
install: install-kernel-${MACHINE_NAME}
.if !target(install-kernel-${MACHINE_NAME}})
install-kernel-${MACHINE_NAME}:
	rm -f /obsd
	ln /bsd /obsd
	cp bsd /nbsd
	mv /nbsd /bsd
.endif

@


1.1
log
@Initial revision
@
text
@d1 3
a3 2
#	$OpenBSD: Makefile.sparc,v 1.33 2003/11/20 08:38:52 espie Exp $
# 	$NetBSD: Makefile.sparc,v 1.32.4.1 1996/06/12 20:26:32 pk Exp $
d5 1
a5 1
# Makefile for OpenBSD
d10 1
a10 1
#	/sys/arch/sparc/conf/``machineid''
a23 1
# PROF is set to -pg if profiling.
d37 2
d43 1
a43 1
		-Wno-uninitialized -Wno-format -Wno-main
d55 3
a57 3
CFLAGS=		${DEBUG} -O2 ${CDIAGFLAGS} ${CMACHFLAGS} ${COPTS} ${PIPE}
# add `-mno-fpu' to work around gcc (last noticed in v2.7.2) bug
CFLAGS+=	-mno-fpu
d62 1
a62 1
HOSTCC=	${CC}
a67 1
.ifndef PROF
a68 3
.else
LIBKERN=	${KERNLIB_PROF}
.endif
a71 1
.ifndef PROF
a72 3
.else
LIBCOMPAT=	${COMPATLIB_PROF}
.endif
d75 1
a75 1
# where TYPE is NORMAL, DRIVER, or PROFILE}; SUFFIX is the file suffix,
d79 2
a80 2
NORMAL_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
NORMAL_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<
d82 2
a83 2
DRIVER_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c $<
DRIVER_C_C=	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} ${PARAM} -c $<
d107 9
a115 1
SYSTEM_LD_TAIL=	@@${SIZE} $@@; chmod 755 $@@
d130 2
a131 2
	sh $S/kern/genassym.sh ${CC} ${CFLAGS} ${CPPFLAGS} \
	    ${PARAM} < ${SPARC}/sparc/genassym.cf > assym.h.tmp && \
d145 3
a147 2
	sh $S/conf/newvers.sh
	${CC} ${CFLAGS} ${CPPFLAGS} ${PROF} -c vers.c
d164 1
a164 1
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
d167 2
a168 2
	  sed 's,../.*/\(.*.o\),rm -f \1; ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink
d179 3
a181 3
	sh $S/kern/genassym.sh ${MKDEP} -f assym.dep ${CFLAGS} \
	    ${CPPFLAGS} < ${SPARC}/sparc/genassym.cf
	@@sed -e 's/.*\.o:.* /assym.h: /' < assym.dep >> .depend
d187 3
a189 3
 
# depend on network or filesystem configuration 
uipc_proto.o vfs_conf.o: Makefile 
d194 1
a194 1
# depend on CPU configuration 
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
