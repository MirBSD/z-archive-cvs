head	1.11;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.1
	MIRBSD_10:1.8.0.2
	MIRBSD_10_BASE:1.8
	MIRBSD_9_BASE:1.7
	MIRBSD_8:1.7.0.2
	MIRBSD_8_BASE:1.7
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2009.10.19.20.45.03;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004ADCCFDA15A44171;

1.10
date	2009.10.16.17.35.56;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004AD8AEE146D3F72A;

1.9
date	2008.12.10.21.45.45;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004940389F24F86427;

1.8
date	2006.09.20.17.45.31;	author tg;	state Exp;
branches;
next	1.7;
commitid	10045117DFF16ABCCA0;

1.7
date	2005.11.23.20.16.10;	author tg;	state Exp;
branches;
next	1.6;
commitid	31c84384cdf931d8;

1.6
date	2005.11.21.19.31.58;	author tg;	state Exp;
branches;
next	1.5;
commitid	60294382208fe0fe;

1.5
date	2005.09.22.19.45.24;	author tg;	state Exp;
branches;
next	1.4;
commitid	44a433309e0952a;

1.4
date	2005.07.25.17.45.21;	author tg;	state Exp;
branches;
next	1.3;
commitid	69e42e525226f66;

1.3
date	2005.03.26.10.56.11;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.06.21.27.17;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.40;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.40;	author tg;	state Exp;
branches;
next	;


desc
@@


1.11
log
@correct a typo (or mental pasto) failing lint
@
text
@/**	$MirOS: src/sys/arch/sparc/include/ansi.h,v 1.10 2009/10/16 17:35:56 tg Exp $ */
/*	$OpenBSD: ansi.h,v 1.9 2004/01/03 14:08:53 espie Exp $	*/
/*	$NetBSD: ansi.h,v 1.6 1996/11/15 22:38:59 jtc Exp $ */

/*-
 * Copyright (c) 2009
 *	Thorsten Glaser <tg@@mirbsd.org>
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * 	@@(#)ansi.h	8.2 (Berkeley) 1/4/94
 */

#ifndef	_ANSI_H_
#define	_ANSI_H_

/*
 * Types which are fundamental to the implementation and may appear in
 * more than one standard header are defined here.  Standard headers
 * then use:
 *	#ifdef	_BSD_SIZE_T_
 *	typedef	_BSD_SIZE_T_ size_t;
 *	#undef	_BSD_SIZE_T_
 *	#endif
 */
#define	_BSD_CLOCK_T_	unsigned long		/* clock() */
#define	_BSD_TIME_T_	int			/* time() */
#define	_BSD_TIME_T_IS_INT
#if defined(lint)
#define _BSD_VA_LIST_	char *			/* MI but possibly wrong */
#elif (defined(__GNUC__) && (__GNUC__ >= 3)) || \
    (defined(__PCC__) && ((__PCC__ > 0) || (__PCC_MINOR__ > 9) || \
     ((__PCC_MINOR__ == 9) && (__PCC_MINORMINOR__ > 8)))) || \
    (defined(__llvm__) && defined(__clang__)) || \
    defined(__NWCC__)
#define _BSD_VA_LIST_	__builtin_va_list	/* MI and correct */
#else
#define _BSD_VA_LIST_	char *			/* MD */
#endif
#define _BSD_CLOCKID_T_	int
#define _BSD_TIMER_T_	int

/*
 * We describe off_t here so its declaration can be visible to
 * stdio without pulling in all of <sys/types.h>, thus appeasing ANSI.
 */
#ifdef	__BIT_TYPES_DEFINED__
#define	_BSD_OFF_T_	int64_t			/* file offset */
#else	/* ! def __BIT_TYPES_DEFINED__ */
#define	_BSD_OFF_T_	long long		/* file offset */
#endif	/* ! def __BIT_TYPES_DEFINED__ */

#ifndef __SIZE_TYPE__
#define	__SIZE_TYPE__		long unsigned int
#define	__PTRDIFF_TYPE__	long int
#define	__WCHAR_TYPE__		short unsigned int
#define	__WINT_TYPE__		unsigned int
#endif

#endif	/* _ANSI_H_ */
@


1.10
log
@* make our includes more nwcc friendly (it now likes <stdbool.h> even
  in non-gnu mode)
* revamp stdarg handling (XXX wth is __gnuc_va_list for, moid?)
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/arch/sparc/include/ansi.h,v 1.9 2008/12/10 21:45:45 tg Exp $ */
d54 1
a54 1
#define _BSD_VA_LIST	char *			/* MI but possibly wrong */
@


1.9
log
@delint
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/arch/sparc/include/ansi.h,v 1.8 2006/09/20 17:45:31 tg Exp $ */
d6 2
d53 8
a60 2
#if !defined(lint) && defined(__GNUC__) && __GNUC__ >= 3
#define _BSD_VA_LIST_	__builtin_va_list
d62 1
a62 1
#define	_BSD_VA_LIST_	char *			/* va_list */
@


1.8
log
@* switch ptrdiff_t and size_t to long, so that they can
  be the same (long) on LP64 and ILP32 arches -> no ABI
  change, since we only have ILP32 arches for now
* fix wchar_t from <machine/ansi.h> to agree with gcc's
  idea of how types have to be specified
* while here, nuke obsolete MirPPC config
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/arch/sparc/include/ansi.h,v 1.7 2005/11/23 20:16:10 tg Exp $ */
d51 1
a51 1
#if defined(__GNUC__) && __GNUC__ >= 3
@


1.7
log
@help lint... it doesn't use gcc's cpp
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/arch/sparc/include/ansi.h,v 1.6 2005/11/21 19:31:58 tg Exp $ */
d70 3
a72 3
#define	__SIZE_TYPE__		unsigned int
#define	__PTRDIFF_TYPE__	int
#define	__WCHAR_TYPE__		unsigned short
@


1.6
log
@First round of system include "fixes":
let GCC decide the length of ptrdiff_t, size_t, wchar_t, wint_t
(the first three adapted from gcc fixincludes run[1])
and adapt ssize_t accordingly (untested)
also fix limits

[1] which we don't run during gcc module build tho
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/arch/sparc/include/ansi.h,v 1.5 2005/09/22 19:45:24 tg Exp $ */
d69 7
@


1.5
log
@wint_t is now an unsigned int
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/arch/sparc/include/ansi.h,v 1.4 2005/07/25 17:45:21 tg Exp $ */
a48 3
#define	_BSD_PTRDIFF_T_	int			/* ptr1 - ptr2 */
#define	_BSD_SIZE_T_	unsigned int		/* sizeof() */
#define	_BSD_SSIZE_T_	int			/* byte count or error */
a59 10
 * wchar_t is declared to be an "unsigned short" for size reasons on MirOS,
 * so we can only support the BMP, but this is okay for us.  We also only
 * support UTF-8 and ISO-8859-1/transparent encodings externally, and UCS-2
 * is only being used internally, in machine endianness.
 * wint_t must be an int or unsigned int because of integer promotion rules.
 */
#define	_BSD_WCHAR_T_	unsigned short		/* wchar_t */
#define _BSD_WINT_T_	unsigned int		/* wint_t */

/*
@


1.4
log
@On MirOS, we use UCS-2ME internally, thus make wchar_t an unsigned short.

agreed bsiegert@@ ("yay, finally locales!")
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/arch/sparc/include/ansi.h,v 1.3 2005/03/26 10:56:11 tg Exp $ */
d70 1
a70 1
#define _BSD_WINT_T_	int			/* wint_t */
@


1.3
log
@special preprocessor define for time_t
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/arch/sparc/include/ansi.h,v 1.2 2005/03/06 21:27:17 tg Exp $ */
d63 5
a67 12
 * Runes (wchar_t) is declared to be an "int" instead of the more natural
 * "unsigned long" or "long".  Two things are happening here.  It is not
 * unsigned so that EOF (-1) can be naturally assigned to it and used.  Also,
 * it looks like 10646 will be a 31 bit standard.  This means that if your
 * ints cannot hold 32 bits, you will be in trouble.  The reason an int was
 * chosen over a long is that the is*() and to*() routines take ints (says
 * ANSI C), but they use _RUNE_T_ instead of int.  By changing it here, you
 * lose a bit of ANSI conformance, but your programs will still work.
 *
 * Note that _WCHAR_T_ and _RUNE_T_ must be of the same type.  When wchar_t
 * and rune_t are typedef'd, _WCHAR_T_ will be undef'd, but _RUNE_T remains
 * defined for ctype.h.
d69 1
a69 1
#define	_BSD_WCHAR_T_	int			/* wchar_t */
a70 1
#define	_BSD_RUNE_T_	int			/* rune_t */
@


1.2
log
@* merge src/sys/
  (at least the better part of it)
* revert IPv6 networking to OpenBSD, since
  I didn't get IPV4_MAPPED addresses working :(
@
text
@d1 1
a1 1
/**	$MirOS$ */
d53 1
@


1.1
log
@Initial revision
@
text
@d1 1
d62 2
a63 2
 * Runes (wchar_t) is declared to be an ``int'' instead of the more natural
 * ``unsigned long'' or ``long''.  Two things are happening here.  It is not
d81 1
a81 1
 * stdio without pulling in all of <sys/type.h>, thus appeasing ANSI.
d83 5
a87 1
#define _BSD_OFF_T_	long long		/* file offset */
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
