head	1.12;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.1
	MIRBSD_10:1.7.0.2
	MIRBSD_10_BASE:1.7
	MIRBSD_9_BASE:1.5
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.12
date	2009.02.01.16.12.30;	author tg;	state Exp;
branches;
next	1.11;
commitid	1004985CA0575C03812;

1.11
date	2008.08.03.21.02.04;	author tg;	state Exp;
branches;
next	1.10;
commitid	10048961CCE67B72AC5;

1.10
date	2008.08.01.18.45.38;	author tg;	state Exp;
branches;
next	1.9;
commitid	100489359DF7EF4507F;

1.9
date	2008.08.01.15.47.14;	author tg;	state Exp;
branches;
next	1.8;
commitid	100489330121217368F;

1.8
date	2008.07.13.19.42.39;	author tg;	state Exp;
branches;
next	1.7;
commitid	100487A5AB509C87D3D;

1.7
date	2007.06.11.21.12.57;	author tg;	state Exp;
branches;
next	1.6;
commitid	100466DBAF02D4AB1DE;

1.6
date	2007.01.26.19.33.12;	author tg;	state Exp;
branches;
next	1.5;
commitid	10045BA577D1DF64163;

1.5
date	2006.06.17.20.50.37;	author tg;	state Exp;
branches;
next	1.4;
commitid	10044946B1255D7BAE9;

1.4
date	2006.06.17.20.19.15;	author tg;	state Exp;
branches;
next	1.3;
commitid	100449463D4638D3269;

1.3
date	2006.06.16.21.52.52;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004493283B5D0D1060;

1.2
date	2005.03.06.21.27.19;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.41;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.41;	author tg;	state Exp;
branches;
next	;


desc
@@


1.12
log
@switch to MirBSD style versions
@
text
@# $MirOS: src/sys/arch/sparc/stand/Makefile.inc,v 1.11 2008/08/03 21:02:04 tg Exp $
# $OpenBSD: Makefile.inc,v 1.12 2004/07/13 21:03:38 marc Exp $
# $NetBSD: Makefile.inc,v 1.5 1996/02/01 22:33:01 mycroft Exp $

.ifndef MODSRC_SYS_ARCH_SPARC_STAND_MAKEFILE_INC
MODSRC_SYS_ARCH_SPARC_STAND_MAKEFILE_INC=1

BINDIR=		/usr/mdec

.include <bsd.own.mk>
.include "../Makefile.reloc"

REAL_V!=	print '\#include <sys/param.h>\nMirBSD' | ${CC} -E - \
		    | tail -1 | sed s,0x,,
V?=		${REAL_V}
_V=		"${V}"

KERNBASE?=	$S/../kern
HOSTCFLAGS:=	${CFLAGS} ${COPTS}
COPTS+=		-Wall -Werror -fno-stack-protector -ffreestanding \
		-fno-zero-initialized-in-bss
.if ${COPTS:M-O*:N-Os}
COPTS+=		-Os
.endif
.if !${COPTS:M-Os}
COPTS+=		-Os
.endif
SACFLAGS=	-D_STANDALONE
HOSTCPPFLAGS:=	${CPPFLAGS}
CPPFLAGS+=	-I${S} -I${SADIR}/libsa -D_STANDALONE -D__BOOT_VER=${_V:Q} \
		-I. -I${.CURDIR} -Derrno=errno -I${KERNBASE}/include \
		-DSTANDALONE -DRELOC=${RELOC} -DSUN4 -DSUN4C -DSUN_BOOTPARAMS

CLEANFILES+=	machine

.if !make(libdep) && !make(sadep) && !make(salibdir) && !make(kernlibdir) && !make(obj)
.BEGIN:
	@@([ X$(S) = X -o -h machine ] || ln -s $(S)/arch/sparc/include machine)
.endif

### Figure out what to use for libsa
LIBSADIR=		${.CURDIR}/../libsa

.if exists(${LIBSADIR}/obj.${MACHINE})
LIBSAOBJDIR=		${LIBSADIR}/obj.${MACHINE}
.elif exists(${LIBSADIR}/obj)
LIBSAOBJDIR=		${LIBSADIR}/obj
.else
LIBSAOBJDIR=		${LIBSADIR}
.endif

DLIBSA=			${LIBSAOBJDIR}/libsa.a
LLIBSA=			-L${LIBSAOBJDIR} -lsa

.endif
@


1.11
log
@Hacked in the train to Zwitserland:

• new: memcpy()=bcopy()=memmove()
• new macro: __strong_alias (incidentally, TNF has exactly the same name
  and exactly (except an ‘a’ more) the same implementation)
• use __strong_alias and #ifdef lint instead of duplicate code via unifdef
  abuse
• sprinkle a few uses of _ALIGN_TEXT
• remove duplicate memmove, memcpy, bcopy and ovbcopy implementations
  from the i386 kernel
• _ALIGN_TEXT is a nop #ifdef SMALL
• remove more duplicate definitions, etc.
• remove more dead code from bootloader -D_TEST
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/Makefile.inc,v 1.10 2008/08/01 18:45:38 tg Exp $
d13 5
d30 2
a31 2
CPPFLAGS+=	-I${S} -I${SADIR}/libsa -I. -D_STANDALONE \
		-I${.CURDIR} -Derrno=errno -I${KERNBASE}/include \
@


1.10
log
@fold libkern remnants into libsa now here, too
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/Makefile.inc,v 1.9 2008/08/01 15:47:14 tg Exp $
d25 1
a25 1
CPPFLAGS+=	-I${S} -I${SADIR}/libsa -I. -Dmemmove=memcpy -D_STANDALONE \
@


1.9
log
@switch the sparc bootloader too – untested
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/Makefile.inc,v 1.8 2008/07/13 19:42:39 tg Exp $
a35 14
### Figure out what to use for libkern
LIBKERNDIR=		${.CURDIR}/../libkern

.if exists(${LIBKERNDIR}/obj.${MACHINE})
LIBKERNOBJDIR=		${LIBKERNDIR}/obj.${MACHINE}
.elif exists(${LIBKERNDIR}/obj)
LIBKERNOBJDIR=		${LIBKERNDIR}/obj
.else
LIBKERNOBJDIR=		${LIBKERNDIR}
.endif

DLIBKERN=		${LIBKERNOBJDIR}/libkern.a
LLIBKERN=		-L${LIBKERNOBJDIR} -lkern

@


1.8
log
@like with i386, provide a 4.2FFS-only floppy boot loader, to make them fit
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/Makefile.inc,v 1.7 2007/06/11 21:12:57 tg Exp $
d14 1
d24 1
a63 14
### Figure out what to use for libz
LIBZDIR=		${.CURDIR}/../libz

.if exists(${LIBZDIR}/obj.${MACHINE})
LIBZOBJDIR=		${LIBZDIR}/obj.${MACHINE}
.elif exists(${LIBZDIR}/obj)
LIBZOBJDIR=		${LIBZDIR}/obj
.else
LIBZOBJDIR=		${LIBZDIR}
.endif

DLIBZ=			${LIBZOBJDIR}/libz.a
LLIBZ=			-L${LIBZOBJDIR} -lz

@


1.7
log
@unbreak “make depend” in top-level by hacking in a few missing include paths
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/Makefile.inc,v 1.6 2007/01/26 19:33:12 tg Exp $
d45 2
a46 1
LIBKERN=		${LIBKERNOBJDIR}/libkern.a
d59 2
a60 1
LIBSA=			${LIBSAOBJDIR}/libsa.a
d73 2
a74 1
LIBZ=			${LIBZOBJDIR}/libz.a
@


1.6
log
@same -Os handling: default to it, but don't overly add it
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/Makefile.inc,v 1.5 2006/06/17 20:50:37 tg Exp $
d5 3
d13 1
d24 1
a24 1
		-I${.CURDIR} -Derrno=errno \
d72 2
@


1.5
log
@* bootxx/Makefile: this does not only not cause elf2aout(1) to
  crash during symtab conversion, it also NEEDS the symtab...
* Makefile.inc: add -fno-zero-initialized-in-bss to CFLAGS
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/Makefile.inc,v 1.4 2006/06/17 20:19:15 tg Exp $
d7 1
d10 1
a10 1
CFLAGS+=	-Os -Wall -Werror -fno-stack-protector -ffreestanding \
d12 6
@


1.4
log
@no -D__BOOT_VER here
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/Makefile.inc,v 1.3 2006/06/16 21:52:52 tg Exp $
d9 2
a10 1
CFLAGS+=	-fno-stack-protector -ffreestanding -Os -Wall -Werror
@


1.3
log
@with virtue and a cross-developing environment,
make this almost usable (not tested the result)
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/Makefile.inc,v 1.2 2005/03/06 21:27:19 tg Exp $
d12 1
a12 1
		-I${.CURDIR} -D__BOOT_VER="${_V}" -Derrno=errno \
@


1.2
log
@* merge src/sys/
  (at least the better part of it)
* revert IPv6 networking to OpenBSD, since
  I didn't get IPV4_MAPPED addresses working :(
@
text
@d1 1
a1 1
# $MirOS$
d9 12
a20 5
CFLAGS+=	-fno-stack-protector -ffreestanding -femit-memmove \
		-Os -Wall -Werror

DEFS=		-DSTANDALONE -DRELOC=${RELOC} -DSUN4 -DSUN4C -DSUN_BOOTPARAMS
DEFS+=		-Derrno=errno
@


1.1
log
@Initial revision
@
text
@d1 3
a3 2
#	$OpenBSD: Makefile.inc,v 1.12 2004/07/13 21:03:38 marc Exp $
#	$NetBSD: Makefile.inc,v 1.5 1996/02/01 22:33:01 mycroft Exp $
d5 1
a5 1
BINDIR=	/usr/mdec
d7 1
a7 4
RELOC_TEST=	0x340000
RELOC_SUN4=	0x240000
RELOC_SUN4C=	0x380000
RELOC_SUN4M=	0x440000
d9 2
a10 5
# Note: a `RELOC' value of 0x380000 seems to work on most machines
RELOC?=		${RELOC_TEST}
RELOC2!=	perl -e 'printf "0x%x", ${RELOC_TEST} + 0x40000'

CFLAGS+=	-fno-stack-protector
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
