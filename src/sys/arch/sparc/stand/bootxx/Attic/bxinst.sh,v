head	1.11;
access;
symbols;
locks; strict;
comment	@# @;


1.11
date	2007.10.20.20.24.41;	author tg;	state dead;
branches;
next	1.10;
commitid	100471A64172DC591F6;

1.10
date	2007.10.20.20.05.55;	author tg;	state Exp;
branches;
next	1.9;
commitid	100471A5FB63796C5A4;

1.9
date	2007.10.16.22.44.43;	author tg;	state Exp;
branches;
next	1.8;
commitid	10047153EEE6F035CF7;

1.8
date	2007.10.16.22.28.21;	author tg;	state Exp;
branches;
next	1.7;
commitid	10047153B1B1D830749;

1.7
date	2007.10.16.22.18.07;	author tg;	state Exp;
branches;
next	1.6;
commitid	100471538A469BFBFB9;

1.6
date	2007.10.16.22.04.18;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004715356E54D6324B;

1.5
date	2007.10.16.22.01.37;	author tg;	state Exp;
branches;
next	1.4;
commitid	100471534D76A28B32A;

1.4
date	2007.10.16.21.52.51;	author tg;	state Exp;
branches;
next	1.3;
commitid	100471532CA45DD3282;

1.3
date	2007.10.16.21.48.58;	author tg;	state Exp;
branches;
next	1.2;
commitid	100471531D62B5823EE;

1.2
date	2007.10.16.21.40.58;	author tg;	state Exp;
branches;
next	1.1;
commitid	100471530014C1E90A1;

1.1
date	2007.10.16.21.26.22;	author tg;	state Exp;
branches;
next	;
commitid	10047152C8E24111DA8;


desc
@@


1.11
log
@a less shell-in-Makefile-embedded approach
@
text
@#!/usr/bin/env mksh
# $MirOS: src/sys/arch/sparc/stand/bootxx/bxinst.sh,v 1.10 2007/10/20 20:05:55 tg Exp $
#-
# Copyright (c) 2007
#	Thorsten Glaser <tg@@mirbsd.de>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# Advertising materials mentioning features or use of this work must
# display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.
#-
# Self-installing SPARC boot blocks for MirOS BSD (sun4m, sun4c)
# Reads a list of extents (firstblock lastblock) from standard input
# and writes bootxx to standard output, which can subsequentially be
# stored past the SunOS disklabel directly on the disc.

function out_int32 {
	typeset -Uui16 value=$1
	typeset -Uui8 ba bb bc bd

	(( ba = (value >> 24) & 0xFF ))
	(( bb = (value >> 16) & 0xFF ))
	(( bc = (value >> 8) & 0xFF ))
	(( bd = value & 0xFF ))
	print -n "\\0${ba#8#}\\0${bb#8#}\\0${bc#8#}\\0${bd#8#}"
}

integer blktblsz=@@@@TBLSZ@@@@
set -A blktblent
integer blktblnum=0 firstblock lastblock i=0 sscale=0

while getopts ":S:" ch; do
	case $ch {
	(S)	if (( (sscale = OPTARG) < 0 || OPTARG > 24 )); then
			print -u2 Error: invalid sector scale "'$OPTARG'"
			exit 1
		fi ;;
	(*)	print -u2 "Syntax: bxinst [-S scale] <blocklist >loader"
		exit 1 ;;
	}
done
shift $((OPTIND - 1))

# zero-initialise the block array
while (( i < blktblsz )); do
	integer blktblent[i++]=0
done

# read in the extents
while read firstblock lastblock junk; do
	while (( firstblock <= lastblock )); do
		(( blktblent[blktblnum++] = firstblock++ << sscale ))
	done
	if (( blktblnum > blktblsz )); then
		print -u2 Error: too many blocks, maximum $blktblsz
		exit 1
	fi
done

# verbose output
let i=0
print -nu2 "using $blktblnum blocks of size $((512 << sscale)): "
while (( i < blktblnum )); do
	print -nu2 "${blktblent[i++]} "
done
print -u2 .

# Part 1
print -n '\01\03\01\07\060\0200\0\07@@@@PARTONE@@@@'

# The Block Table
out_int32 $blktblnum
out_int32 $((512 << sscale))
let i=0
while (( i < blktblsz )); do
	out_int32 ${blktblent[i++]}
done

# Part 2
print -n '@@@@PARTTWO@@@@'
exit 0
@


1.10
log
@implement scaling
@
text
@d2 1
a2 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/bxinst.sh,v 1.9 2007/10/16 22:44:43 tg Exp $
@


1.9
log
@be more verbose
@
text
@d2 1
a2 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/bxinst.sh,v 1.8 2007/10/16 22:28:21 tg Exp $
d44 13
a56 1
integer blktblnum=0 firstblock lastblock i=0
d66 1
a66 1
		let blktblent[blktblnum++]=firstblock++
d76 1
a76 1
print -nu2 "using $blktblnum blocks: "
a85 2
# note: currently, MI installboot(8) assumes 512-byte blocks, maybe
#       do an optimisation similar to the i386 first-stage bootloader
d87 1
a87 1
out_int32 512		# XXX size of filesystem blocks
@


1.8
log
@oops
@
text
@d2 1
a2 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/bxinst.sh,v 1.7 2007/10/16 22:18:07 tg Exp $
d64 1
a64 1
print -nu2 "using blocks: "
@


1.7
log
@d’oh: extents in mkisofs.log are start‣end not start‣size
@
text
@d2 1
a2 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/bxinst.sh,v 1.6 2007/10/16 22:04:18 tg Exp $
d44 1
a44 1
integer blktblnum=0 blockno numblocks i=0
@


1.6
log
@allow for comments behind the extents
@
text
@d2 1
a2 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/bxinst.sh,v 1.5 2007/10/16 22:01:37 tg Exp $
d27 1
a27 1
# Reads a list of extents (blockno numblocks LF) from standard input
d52 3
a54 4
while read blockno numblocks junk; do
	while (( numblocks )); do
		let blktblent[blktblnum++]=blockno++
		let numblocks--
@


1.5
log
@beautify
@
text
@d2 1
a2 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/bxinst.sh,v 1.4 2007/10/16 21:52:51 tg Exp $
d52 1
a52 1
while read blockno numblocks; do
@


1.4
log
@go live
@
text
@d2 1
a2 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/bxinst.sh,v 1.3 2007/10/16 21:48:58 tg Exp $
d78 1
a78 1
out_int32 512
@


1.3
log
@implement MI installboot, with debugging output for now but commented
@
text
@d2 1
a2 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/bxinst.sh,v 1.2 2007/10/16 21:40:58 tg Exp $
a34 1
	#print -u2 debug: writing value 0x${value#16#}
a52 1
	#print -u2 Recording $numblocks blocks @@$blockno ...
a54 1
		#print -u2 \\tblock \#$((blktblnum-1)): ${blktblent[blktblnum-1]}, $((blktblsz-blktblnum)) left
d63 8
@


1.2
log
@optimise
@
text
@d2 1
a2 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/bxinst.sh,v 1.1 2007/10/16 21:26:22 tg Exp $
d35 1
a35 1
	print -u2 debug: writing value 0x${value#16#}
d44 2
d47 18
a64 2
exit 1
#XXX TODO
d72 1
a72 1
out_int32 $blktblsz	#XXX
d74 1
a74 1
integer i=0
d76 1
a76 2
	out_int32 0
	let i++
@


1.1
log
@skeleton for the self-installing bootloader
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.20 2006/12/11 21:04:56 tg Rel $
d49 1
a49 1
print -n '@@@@PARTONE@@@@'
@

