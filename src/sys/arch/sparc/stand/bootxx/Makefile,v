head	1.23;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.1
	MIRBSD_10:1.15.0.2
	MIRBSD_10_BASE:1.15
	MIRBSD_9_BASE:1.4
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.23
date	2018.04.27.20.40.30;	author tg;	state Exp;
branches;
next	1.22;
commitid	1005AE38AD42D953C45;

1.22
date	2016.02.06.17.09.07;	author tg;	state Exp;
branches;
next	1.21;
commitid	10056B628C31FA73C0D;

1.21
date	2010.01.16.23.25.53;	author tg;	state Exp;
branches;
next	1.20;
commitid	1004B524AEB3AE97341;

1.20
date	2009.04.16.14.04.09;	author tg;	state Exp;
branches;
next	1.19;
commitid	10049E73AE23A8DAA21;

1.19
date	2009.04.16.13.26.00;	author tg;	state Exp;
branches;
next	1.18;
commitid	10049E731D473EBE4B0;

1.18
date	2009.04.16.12.14.11;	author tg;	state Exp;
branches;
next	1.17;
commitid	10049E720BF2819D7D4;

1.17
date	2008.10.21.18.51.00;	author tg;	state Exp;
branches;
next	1.16;
commitid	10048FE24A97E59C6EE;

1.16
date	2008.08.01.18.45.40;	author tg;	state Exp;
branches;
next	1.15;
commitid	100489359DF7EF4507F;

1.15
date	2007.10.20.20.24.41;	author tg;	state Exp;
branches;
next	1.14;
commitid	100471A64172DC591F6;

1.14
date	2007.10.16.22.01.37;	author tg;	state Exp;
branches;
next	1.13;
commitid	100471534D76A28B32A;

1.13
date	2007.10.16.21.56.27;	author tg;	state Exp;
branches;
next	1.12;
commitid	100471533957FA2B0AF;

1.12
date	2007.10.16.21.52.51;	author tg;	state Exp;
branches;
next	1.11;
commitid	100471532CA45DD3282;

1.11
date	2007.10.16.21.40.58;	author tg;	state Exp;
branches;
next	1.10;
commitid	100471530014C1E90A1;

1.10
date	2007.10.16.21.26.22;	author tg;	state Exp;
branches;
next	1.9;
commitid	10047152C8E24111DA8;

1.9
date	2007.10.16.21.06.49;	author tg;	state Exp;
branches;
next	1.8;
commitid	100471527FC62807738;

1.8
date	2007.10.16.20.57.01;	author tg;	state Exp;
branches;
next	1.7;
commitid	100471525B325B15CA1;

1.7
date	2007.10.16.20.45.28;	author tg;	state Exp;
branches;
next	1.6;
commitid	100471522DC32C6030A;

1.6
date	2007.10.16.20.29.32;	author tg;	state Exp;
branches;
next	1.5;
commitid	10047151F3C224C11A9;

1.5
date	2007.06.11.21.12.58;	author tg;	state Exp;
branches;
next	1.4;
commitid	100466DBAF02D4AB1DE;

1.4
date	2006.06.17.20.50.37;	author tg;	state Exp;
branches;
next	1.3;
commitid	10044946B1255D7BAE9;

1.3
date	2006.06.16.21.52.52;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004493283B5D0D1060;

1.2
date	2005.03.06.21.27.23;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.41;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.41;	author tg;	state Exp;
branches;
next	;


desc
@@


1.23
log
@on size restrictions
@
text
@# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.21 2010/01/16 23:25:53 tg Exp $
# $OpenBSD: Makefile,v 1.7 2003/08/11 06:35:45 deraadt Exp $
# $NetBSD: Makefile,v 1.2 1995/09/30 21:43:38 pk Exp $

.PATH:	${.CURDIR}/../common
S=	${.CURDIR}/../../../..

PROG=		bootxx
NOMAN=		yes
INSTALL_STRIP=	#empty
CLEANFILES+=	${PROG}.elf bxinst

SRCS=		srt0.S bootxx.c btable.S closeall.c dvma.c promdev.c

CPPFLAGS+=	-I${.CURDIR}/../common -I${.CURDIR}/../../../../arch \
		-I${.CURDIR}/../../../.. -I${.CURDIR}/../../../../lib/libsa \
		-DBOOTXX

# bootxx has a maximum size of 7680 bytes, which is exactly
# 15 512-byte sectors and checked by our mkbxinst.sh

all: ${PROG} bxinst

${PROG}: ${PROG}.elf
	elf2aout ${PROG}.elf ${PROG} -b

bxinst: ${.CURDIR}/mkbxinst.sh ${PROG}
	BSDSRCDIR=${BSDSRCDIR:Q} ${MKSH} ${.CURDIR}/mkbxinst.sh ${PROG} >$@@

srt0.o: srt0.S
	${CC} ${CFLAGS} ${CPPFLAGS} -D_LOCORE -c ${.IMPSRC}

.include <bsd.prog.mk>
BINMODE=	${SHAREMODE}

${PROG}.elf: ${OBJS} ${DLIBSA}
	${LD} -N -Ttext ${RELOC} -e start ${OBJS} ${LLIBSA} -o $@@
	@@size $@@
@


1.22
log
@fixup permissions of the files inside /usr/mdec/
@
text
@d19 3
@


1.21
log
@teach the self-installing sparc bootblocks ustarfs
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.20 2009/04/16 14:04:09 tg Exp $
d31 1
@


1.20
log
@fix entry point for bootxx (or so I hope)
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.19 2009/04/16 13:26:00 tg Exp $
d25 1
a25 1
	${MKSH} ${.CURDIR}/mkbxinst.sh ${PROG} >$@@
@


1.19
log
@installboot(8) does nlist(3) on /usr/mdec/bootxx, duh…
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.18 2009/04/16 12:14:11 tg Exp $
d33 1
a33 1
	${LD} -N -Ttext ${RELOC2} -e start ${OBJS} ${LLIBSA} -o $@@
@


1.18
log
@solve some of the stripping vs size problems
• bxinst is now generated from an extra (unstripped) bootxx
• the bootxx which is installed is stripped again
• fdboot is fully stripped
• the boot which is installed is… still too large
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.17 2008/10/21 18:51:00 tg Exp $
d11 1
a11 1
CLEANFILES+=	${PROG}~ ${PROG}.elf ${PROG}.unstripped bxinst
d22 1
a22 2
	objcopy -S ${PROG}.elf ${PROG}~
	elf2aout ${PROG}~ ${PROG} -b
d24 2
a25 5
${PROG}.unstripped: ${PROG}.elf
	elf2aout ${PROG}.elf ${PROG}.unstripped -b

bxinst: ${.CURDIR}/mkbxinst.sh ${PROG}.unstripped
	${MKSH} ${.CURDIR}/mkbxinst.sh ${PROG}.unstripped >$@@
@


1.17
log
@strip locals but not globals from the various bootloader stuffs,
to enable using nm to find the __defkernel symbol in the sparc
second-stage bootloader, and shrink down the first-stage loaders
of both architectures.

The enlarged, symbol-table-enhanced sparc /boot works on my SS20.

Before:

-r-xr-xr-x   1 root  bin    - 38752 Oct 18 13:28 boot*
-r-xr-xr-x   1 root  bin    - 40440 Oct 18 13:28 bootxx*
-r--r--r--   1 root  bin    - 30634 Oct 18 13:07 bootxx.sh

-r--r--r--   1 root  bin    -  7394 Oct 17 00:07 bootxx.sh

After:

-r-xr-xr-x   1 root  bin    - 76254 Oct 21 18:40 boot*
-r-xr-xr-x   1 root  bin    - 40233 Oct 21 18:40 bootxx*
-rw-r--r--   1 tg    wsrc   - 25167 Oct 21 18:40 bxinst

-rw-r--r--   1 tg    wsrc   -  7293 Oct 21 18:38 bxinst
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.16 2008/08/01 18:45:40 tg Exp $
d11 1
a11 1
CLEANFILES+=	${PROG}~ bxinst
d21 3
a23 6
${PROG}: ${OBJS} ${DLIBSA}
	${LD} -N -Ttext ${RELOC2} --format a.out-sparc-netbsd \
	    -e start ${OBJS} ${LLIBSA} -o $@@~
	@@size $@@~
	strip -x $@@~
	elf2aout $@@~ $@@ -b
d25 5
a29 2
bxinst: ${.CURDIR}/mkbxinst.sh ${PROG}
	${MKSH} ${.CURDIR}/mkbxinst.sh ${PROG} >$@@
d35 4
@


1.16
log
@fold libkern remnants into libsa now here, too
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.15 2007/10/20 20:24:41 tg Exp $
d11 2
a18 2
CLEANFILES+=	${PROG}.{bin,elf} bxinst

d21 6
a26 9
${PROG}: ${PROG}.elf
	elf2aout $@@.elf $@@ -b

.include <bsd.prog.mk>

LINK.prog=	:

${PROG}.elf: ${OBJS}
	${LD} -N -Ttext ${RELOC} -e start ${OBJS} ${LLIBSA} -o $@@
d33 2
@


1.15
log
@a less shell-in-Makefile-embedded approach
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.14 2007/10/16 22:01:37 tg Exp $
a12 7
# pre-built bits of libkern
KOBJS=		__main.o bzero.o udiv.o urem.o
_KOBJS=		${KOBJS:S,^,${LIBKERNOBJDIR}/,g}
# pre-built bits of libsa
SOBJS=		alloc.o exit.o memcpy.o memset.o printf.o
_SOBJS=		${SOBJS:S,^,${LIBSAOBJDIR}/,g}

d29 1
a29 1
	${LD} -N -Ttext ${RELOC} -e start ${OBJS} ${_SOBJS} ${_KOBJS} -o $@@
@


1.14
log
@beautify
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.13 2007/10/16 21:56:27 tg Exp $
a34 3
${PROG}.bin: ${PROG}
	strip -F a.out-sunos-big -s -o $@@ $>

d38 2
a39 12
bxinst: ${PROG}.bin bxinst.sh
	eval $$(nm --target=a.out-sunos-big ${PROG} | \
	    sed -n '/_start$$/s/^\([0-9a-fA-F]*\) . \(_.*\)$$/\2=0x\1/p'); \
	typeset -Uui10 ofs tblsz; ((ofs = _block_start - _start + 32)); \
	tblsz=$$(dd if=${PROG}.bin bs=1 skip=$$ofs count=4 2>/dev/null | \
	    hexdump -ve '"0x" 4/1 "%02X"'); \
	sed -e "s@@@@TBLSZ@@@@$$tblsz" \
	    -e "s@@@@PARTONE@@@@$$(dd bs=1 skip=8 count=$$((ofs - 8)) \
		if=${PROG}.bin 2>/dev/null | hexdump -ve '1/1 "\\\\0%o"')" \
	    -e "s@@@@PARTTWO@@@@$$(dd bs=1 skip=$$((ofs + tblsz * 4 + 8)) \
		if=${PROG}.bin 2>/dev/null | hexdump -ve '1/1 "\\\\0%o"')" \
	    <${.CURDIR}/bxinst.sh >$@@
@


1.13
log
@… or rather, copy it here (the generated file, yeah)
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.12 2007/10/16 21:52:51 tg Exp $
d8 4
a11 6
PROG=	bootxx

NOMAN=	yes
INSTALL_STRIP=

SRCS=	srt0.S bootxx.c btable.S closeall.c dvma.c promdev.c
d14 2
a15 2
KOBJS=	__main.o bzero.o urem.o udiv.o
_KOBJS=${KOBJS:S,^,${LIBKERNOBJDIR}/,g}
d17 2
a18 2
SOBJS=	alloc.o exit.o printf.o memcpy.o memset.o
_SOBJS=${SOBJS:S,^,${LIBSAOBJDIR}/,g}
d33 2
a39 1
	@@size $@@
@


1.12
log
@go live
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.11 2007/10/16 21:40:58 tg Exp $
a56 4

afterinstall:
	${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP} -o ${BINOWN} -g ${BINGRP} \
	    -m ${BINMODE} bxinst ${DESTDIR}${BINDIR}/bxinst.sparc
@


1.11
log
@optimise
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.10 2007/10/16 21:26:22 tg Exp $
d57 4
@


1.10
log
@skeleton for the self-installing bootloader
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.9 2007/10/16 21:06:49 tg Exp $
d26 1
a26 1
CLEANFILES+=	${PROG}.elf
d28 15
a42 11
${PROG}: ${OBJS}
	${LD} -N -Ttext ${RELOC} -e start ${OBJS} ${_SOBJS} ${_KOBJS} \
	    -o ${PROG}.elf
	@@size ${PROG}.elf
	elf2aout ${PROG}.elf ${PROG} -b

CLEANFILES+=	${PROG}.bin ${PROG}.part*
bxinst: ${PROG} bxinst.sh
	strip -F a.out-sunos-big -s -o ${PROG}.bin ${PROG}
	print -n '\01\03\01\07\060\0200\0\07' | \
	    dd of=${PROG}.bin conv=notrunc 2>/dev/null
a45 1
	dd if=${PROG}.bin bs=$$ofs count=1 of=${PROG}.part1 2>/dev/null; \
a47 2
	dd if=${PROG}.bin of=${PROG}.part2 bs=1 \
	    skip=$$((ofs + tblsz * 4 + 8)) 2>/dev/null; \
d49 4
a52 2
	    -e "s@@@@PARTONE@@@@$$(hexdump -ve '1/1 "\\\\0%o"' ${PROG}.part1)" \
	    -e "s@@@@PARTTWO@@@@$$(hexdump -ve '1/1 "\\\\0%o"' ${PROG}.part2)" \
a56 2

.include <bsd.prog.mk>
@


1.9
log
@implement the splitting
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.8 2007/10/16 20:57:01 tg Exp $
d35 1
a35 1
mkbin: .PHONY ${PROG}
d44 7
a50 4
	    hexdump -e '"0x" 4/1 "%02X"'); \
	print tblsz=$$tblsz >${PROG}.part2; \
	dd if=${PROG}.bin of=${PROG}.part3 bs=1 \
	    skip=$$((ofs + tblsz * 4 + 8)) 2>/dev/null
@


1.8
log
@better
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.7 2007/10/16 20:45:28 tg Exp $
d34 1
a34 1
CLEANFILES+=	${PROG}.bin ${PROG}.ofs
d41 7
a47 2
	typeset -Uui16 ofs; ((ofs = _block_start - _start + 32)); \
	print $$((ofs)) 0x$${ofs#16#} >${PROG}.ofs
@


1.7
log
@next step: find out the offset of the start of the block table and assorted
information, store it in a separate file, and convert the bootxx to binary,
without the symbol table added
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.6 2007/10/16 20:29:32 tg Exp $
a35 4
	eval $$(nm --target=a.out-sunos-big ${PROG} | \
	    sed -n '/_start$$/s/^\([0-9a-fA-F]*\) . \(_.*\)$$/\2=0x\1/p'); \
	typeset -Uui16 ofs; \
	print $$((ofs = _block_start - _start + 32)) 0x$${ofs#16#} >${PROG}.ofs
d39 4
@


1.6
log
@first step towards an MI installboot:
prepare for splitting up bootxx(8/sparc) on the exact boundary required by
having only one possible boundary; normalise to 32-bit integers
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.5 2007/06/11 21:12:58 tg Exp $
d34 10
@


1.5
log
@unbreak “make depend” in top-level by hacking in a few missing include paths
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.4 2006/06/17 20:50:37 tg Exp $
d13 1
a13 1
SRCS=	srt0.S bootxx.c closeall.c dvma.c promdev.c
@


1.4
log
@* bootxx/Makefile: this does not only not cause elf2aout(1) to
  crash during symtab conversion, it also NEEDS the symtab...
* Makefile.inc: add -fno-zero-initialized-in-bss to CFLAGS
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.3 2006/06/16 21:52:52 tg Exp $
d6 1
@


1.3
log
@with virtue and a cross-developing environment,
make this almost usable (not tested the result)
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/bootxx/Makefile,v 1.2 2005/03/06 21:27:23 tg Exp $
a30 1
	strip -s ${PROG}.elf
@


1.2
log
@* merge src/sys/
  (at least the better part of it)
* revert IPv6 networking to OpenBSD, since
  I didn't get IPV4_MAPPED addresses working :(
@
text
@d1 1
a1 1
# $MirOS$
d23 1
a23 1
		-DBOOTXX ${DEFS}
d31 1
d35 1
a35 1
	${CC} ${CFLAGS} -D_LOCORE -c ${.IMPSRC}
@


1.1
log
@Initial revision
@
text
@d1 3
a3 2
#	$OpenBSD: Makefile,v 1.7 2003/08/11 06:35:45 deraadt Exp $
#	$NetBSD: Makefile,v 1.2 1995/09/30 21:43:38 pk Exp $
d9 1
a9 1
NOMAN=	noman
a12 1
CLEANFILES+=${PROG}.aout ${PROG}.elf elfclean elf
d21 11
a31 14
CFLAGS= -O2 -I${.CURDIR}/../common -I${.CURDIR}/../../../../arch \
	-I${.CURDIR}/../../../.. -I${.CURDIR}/../../../../lib/libsa -DBOOTXX \
	${DEFS}

elfclean: clean-elf.c
	${HOSTCC} -o elfclean ${.ALLSRC}

${PROG}: ${OBJS} elfclean
	${LD} -N -Ttext ${RELOC} -e start ${OBJS} ${_SOBJS} ${_KOBJS} -o elf
	./elfclean elf
	objcopy -j .text -j .data -j .bss -O a.out-sparc-netbsd elf a.out
	@@size a.out
	(echo -n 01 | tr 01 '\01\03'; tail +3c a.out) > ${.TARGET}
	@@rm a.out
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
