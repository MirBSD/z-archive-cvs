head	1.8;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.1
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2015.10.25.00.56.42;	author tg;	state Exp;
branches;
next	1.7;
commitid	100562C28DB12404C4D;

1.7
date	2010.01.16.21.30.33;	author tg;	state Exp;
branches;
next	1.6;
commitid	1004B5230055E80EF25;

1.6
date	2010.01.16.21.12.27;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004B522B9E2A448832;

1.5
date	2009.04.17.18.57.08;	author tg;	state Exp;
branches;
next	1.4;
commitid	10049E8D11A2584B057;

1.4
date	2009.04.16.12.46.53;	author tg;	state Exp;
branches;
next	1.3;
commitid	10049E728CE6646A18B;

1.3
date	2009.02.01.15.02.16;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004985B98A39209247;

1.2
date	2008.10.22.17.46.03;	author tg;	state Exp;
branches;
next	1.1;
commitid	10048FF66BF54933778;

1.1
date	2005.02.05.17.27.43;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.43;	author tg;	state Exp;
branches;
next	;


desc
@@


1.8
log
@fix typo
@
text
@/**	$MirOS: src/sys/arch/sparc/stand/common/srt0.S,v 1.7 2010/01/16 21:30:33 tg Exp $ */
/*	$OpenBSD: srt0.S,v 1.2 2002/08/11 12:20:43 art Exp $	*/
/*	$NetBSD: srt0.S,v 1.5.4.2 1996/07/17 01:51:46 jtc Exp $	*/

/*
 * Copyright © 2009, 2010
 *	Thorsten Glaser <tg@@mirbsd.org>
 * Copyright (c) 1994 Paul Kranenburg
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Paul Kranenburg.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <machine/param.h>
#include <machine/psl.h>
#include <machine/asm.h>

#define	CCFSZ	96
#define fofs_text 0x20

	.file	"srt0.s"

	.data
	.global	_C_LABEL(cputyp), _C_LABEL(nbpg), _C_LABEL(pgofset)
	.global _C_LABEL(pgshift)
_C_LABEL(cputyp):
	.word	1
_C_LABEL(nbpg):
	.word	1
_C_LABEL(pgofset):
	.word	1
_C_LABEL(pgshift):
	.word	1

	.text	
	.globl	start

start:
	/*
	 * Set up a stack.
	 */
	set	start, %o1
	save	%o1, -CCFSZ, %sp

	/*
	 * Relocate.
	 */
1:	call	2f
	 nop

#ifdef BOOTXX
	/*
	 * Little-Endian BSD disklabel
	 */
	.p2align 3
	.globl	_le_disklabel_start
_le_disklabel_start:
	.byte	0x57, 0x45, 0x56, 0x82
	.byte	0x00, 0x00
_ustar_keep:
	.byte	0x90, 0x90

	/* ... and ustar header ... */
	. = start + 0x101 - fofs_text
	.globl	_ustar_keep
	.globl	_ustar_magic
_ustar_magic:
	.asciz	"ustar"
	.ascii	"00"

	. = _le_disklabel_start + 404 - 4
	.byte	0x00, 0x00, 0x90, 0x90
	.globl	_le_disklabel_end
_le_disklabel_end:
	.p2align 3

	. = start + 0x1F4 - fofs_text
	.globl	_ustar_padding
_ustar_padding:
	.byte	0, 0
	.long	0xDEADBEEF
	.word	0xCAFE
	. = start + 510 - fofs_text
	.byte	0x55, 0xAA
	/* here: 0x200 in file */
	.p2align 3	/* just in case */
#else
#ifndef SMALL_BOOT
	/*
	 * Address vectors for a.out
	 */
	.p2align 2
	.globl	_aout_advecs_start
_aout_advecs_start:
	.byte	0x20, 0x35, 0x56, 0x01	! begin, 0x01 entries/version
	.byte	0xFF, 0xFF, 0xFF, 0xFF	! additive checksum over entries
	.byte	0x00, 0x00, 0x00, 0x00	! first entry (__defkernel)
	.byte	0x21, 0x35, 0x56, 0x01	! end
	.globl	_aout_advecs_end
_aout_advecs_end:
	.p2align 2
#endif
#endif

	/*
	 * Relocate.
	 */
2:	add	%o7, (start-1b), %l0
	set	start, %l1
	set	_C_LABEL(end), %o0
	sub	%o0, %l1, %l2		! length
3:	ld	[%l0], %o0
	add	%l0, 4, %l0
	st	%o0, [%l1]
	subcc	%l2, 4, %l2
	bg	3b
	 add	%l1, 4, %l1

	set	4f, %g1
	jmp	%g1
	 nop

4:
#ifdef notyet
	/*
	 * Enable traps
	 */
	wr	%g0, 0, %wim		! make sure we can set psr
	nop; nop; nop
	wr	%g0, PSR_S|PSR_PS|PSR_PIL, %psr	! set initial psr
	nop; nop; nop
	wr	%g0, 2, %wim		! set initial %wim (w1 invalid)

	rd	%psr, %l0
	wr	%l0, PSR_ET, %psr
	nop; nop; nop
#endif

	/*
	 * Clear BSS
	 */
	set     _C_LABEL(edata), %o0	! bzero(edata, end - edata)
	set     _C_LABEL(end), %o1
	call    _C_LABEL(bzero)
	 sub    %o1, %o0, %o1

	/*
	 * Enable interrupts, but only above level 11. This enables "L1-A",
	 * but avoids spurious interrupt bites from most other devices.
	 */
	rd	%psr, %o0
	andn	%o0, PSR_PIL, %o0
	wr	%o0, 0xb00, %psr	! (11 << 8)
	nop; nop; nop

	/*
	 * Set CPU type that we are running on.
	 */
	sethi	%hi(_C_LABEL(cputyp)), %o0
	set	0x4000, %g7
	cmp	%i0, %g7
	beq	5f
	 nop

	/*
	 * Save address of PROM vector (passed in %i0).
	 */
	sethi	%hi(_C_LABEL(promvec)), %o1
	st	%i0, [%o1 + %lo(_C_LABEL(promvec))]

	mov	CPU_SUN4C, %g4
	mov	SUN4CM_PGSHIFT, %g5
	b,a	6f

5:
	mov	CPU_SUN4, %g4
	mov	SUN4_PGSHIFT, %g5

6:
	st	%g4, [%o0 + %lo(_C_LABEL(cputyp))]
	sethi	%hi(_C_LABEL(pgshift)), %o0	! pgshift = log2(nbpg)
	st	%g5, [%o0 + %lo(_C_LABEL(pgshift))]

	mov	1, %o0				! nbpg = 1 << pgshift
	sll	%o0, %g5, %g5
	sethi	%hi(_C_LABEL(nbpg)), %o0	! nbpg = bytes in a page
	st	%g5, [%o0 + %lo(_C_LABEL(nbpg))]

	sub	%g5, 1, %g5
	sethi	%hi(_C_LABEL(pgofset)), %o0	! page offset = bytes in a page - 1
	st	%g5, [%o0 + %lo(_C_LABEL(pgofset))]

	call	_C_LABEL(main)
	 mov	%i0, %o0

	ret
	 restore


#ifdef TIGHT

/*
 * XXX - Space saving .div & .rem routines (small & non-negative numbres only)
 */
	.align	4
	.global .div, .udiv
! int n = 0; while (a >= b) { a -= b; n++; }; return n;
.div:
.udiv:
	cmp	%o0, %o1
	bl	2f
	 mov	0, %o5
1:
	sub	%o0, %o1, %o0
	cmp	%o0, %o1
	bge	1b
	 add	%o5, 1, %o5
2:
	retl
	 mov	%o5, %o0

	.align	4
	.global .rem, .urem
! while (a>=b) a -= b; return a;
.rem:
.urem:
	cmp	%o0, %o1
	bl	2f
	 nop
	sub	%o0, %o1, %o0
1:
	cmp	%o0, %o1
	bge,a	1b
	 sub	%o0, %o1, %o0
2:
	retl
	 nop

#endif /* TIGHT */
@


1.7
log
@track amount of initial (lead) bytes needed for ustar
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/arch/sparc/stand/common/srt0.S,v 1.6 2010/01/16 21:12:27 tg Exp $ */
d44 1
a44 1
	.file	"str0.s"
@


1.6
log
@• srt0.S, mkbxinst.sh: define and control size of a.out header in-file
• srt0.S: hide an ustarfs header at appropriate absolute-file offsets
• mkbxinst.sh: check total size of bootxx (OpenBOOT loads sector 1‥15)
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/arch/sparc/stand/common/srt0.S,v 1.5 2009/04/17 18:57:08 tg Exp $ */
d83 1
d88 1
@


1.5
log
@make fdboot smaller
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/arch/sparc/stand/common/srt0.S,v 1.4 2009/04/16 12:46:53 tg Exp $ */
d6 2
d42 1
d85 7
d97 11
@


1.4
log
@embed some magic in /boot too
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/arch/sparc/stand/common/srt0.S,v 1.3 2009/02/01 15:02:16 tg Exp $ */
d88 1
d103 1
@


1.3
log
@globalise the little endian disklabel part
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/arch/sparc/stand/common/srt0.S,v 1.2 2008/10/22 17:46:03 tg Exp $ */
d87 14
@


1.2
log
@embed a little-endian BSD (native) disklabel, half-populated and 64-bit
aligned, inside the sparc first-stage boot loader as early as possible
(since this way it can be found without need for an MBR partition)
@
text
@d1 1
a1 1
/**	$MirOS$ */
d76 2
a77 1
Lle_disklabel_start:
d82 1
a82 1
	. = Lle_disklabel_start + 404 - 4
d84 2
a85 1
Lle_disklabel_end:
@


1.1
log
@Initial revision
@
text
@d1 1
d70 20
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
