head	1.9;
access;
symbols
	MIRBSD_10:1.7.0.2
	MIRBSD_10_BASE:1.7
	MIRBSD_9_BASE:1.3
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2;
locks; strict;
comment	@# @;


1.9
date	2008.08.01.18.45.40;	author tg;	state dead;
branches;
next	1.8;
commitid	100489359DF7EF4507F;

1.8
date	2008.08.01.16.11.03;	author tg;	state Exp;
branches;
next	1.7;
commitid	100489335984C5EA2E5;

1.7
date	2007.03.02.03.13.27;	author tg;	state Exp;
branches;
next	1.6;
commitid	10045E7958604F58BEB;

1.6
date	2007.02.06.16.24.43;	author tg;	state Exp;
branches;
next	1.5;
commitid	10045C8ABB857CB69A4;

1.5
date	2007.02.05.23.48.03;	author tg;	state Exp;
branches;
next	1.4;
commitid	10045C7C20A219A4CB5;

1.4
date	2007.02.05.20.16.15;	author tg;	state Exp;
branches;
next	1.3;
commitid	10045C78FD963274EDA;

1.3
date	2006.06.16.21.52.53;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004493283B5D0D1060;

1.2
date	2005.03.06.21.27.24;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.43;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.43;	author tg;	state Exp;
branches;
next	;


desc
@@


1.9
log
@fold libkern remnants into libsa now here, too
@
text
@# $MirOS: src/sys/arch/sparc/stand/libkern/Makefile,v 1.8 2008/08/01 16:11:03 tg Exp $
# $OpenBSD: Makefile,v 1.3 2003/06/01 17:00:39 deraadt Exp $

LIB=	kern

.PATH:	${.CURDIR}/../../../../lib/libkern
.PATH:	${.CURDIR}/../../../../lib/libkern/arch/sparc

.include "${.CURDIR}/../../../../lib/libkern/arch/sparc/Makefile.inc"

CPPFLAGS+= -I${.CURDIR}/../include -I${.CURDIR}/../../../.. \
	-I${.CURDIR}/../../../../lib/libkern \
	-I${.CURDIR}/../../../../lib/libkern/arch/sparc

AFLAGS=	-x assembler-with-cpp -traditional-cpp -I${.CURDIR}/../include \
	-I${.CURDIR}/../../../..  -I${.CURDIR}/../../../../lib/libkern \
	-I${.CURDIR}/../../../../lib/libkern/arch/sparc

# kern routines
SRCS=	__main.c bzero.S strcmp.c strncmp.c

SRCS+=	umul.S mul.S rem.S sdiv.S udiv.S urem.S
SRCS+=	saveregs.S

KERNBASE?=	${.CURDIR}/../../../../../kern
KERNSTAND=	#defined
SMALL=		#defined
.include "${KERNBASE}/c/Makefile.inc"
.include "${KERNBASE}/z/Makefile.adler32"

${OBJS}:	${.CURDIR}/../Makefile.inc

NOPIC=	yes

install:

.include <bsd.lib.mk>
@


1.8
log
@move quad support into shared libkern (userland, kernel, bootloader)
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/libkern/Makefile,v 1.7 2007/03/02 03:13:27 tg Exp $
@


1.7
log
@• make the kernel use the adler32() stuff in src/kern, whose sources
  live in the z part but that, logically, more belongs to the c part
• export adler32 (over <sys/systm.h> -> libkern -> <libckern.h>) and
  the rnd_bootpool (via <sys/systm.h> directly) to all of the kernel
• adler32 for the kernel moves to libkern
• adler32 for the i386 bootloader moves to libsa
• adler32 for the sparc bootloader moves to libkern
• userland libz is not affected (yet); make depend still pulls it in

tested by building a GENERIC, a bsd.rd with it, a cdrom9.fs with the
new bootloader (i386), qemu'ing that
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/libkern/Makefile,v 1.6 2007/02/06 16:24:43 tg Exp $
d20 1
a20 2
SRCS=	__main.c ashrdi3.c bzero.S divdi3.c qdivrem.c \
	strcmp.c strncmp.c umoddi3.c
@


1.6
log
@next proof-of-concept move: strlen (no asm yet)
XXX libkern/libsa include path might be missing
XXX libkern/libsa/MD-libkern/MD-libsa build is ugly
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/libkern/Makefile,v 1.5 2007/02/05 23:48:03 tg Exp $
d30 1
@


1.5
log
@make src/kern stuff behave differently .ifdef SMALL, defined by:
- libsa/libkern bootloader
- libkern kernel #ifdef SMALL_KERNEL
- not yet: distrib/special/lib*
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/libkern/Makefile,v 1.4 2007/02/05 20:16:15 tg Exp $
d20 1
a20 1
SRCS=	__main.c ashrdi3.c bzero.S divdi3.c qdivrem.c strlen.S \
@


1.4
log
@proof-of-concept implementation of a few functions for the
new "kern" directory containing stuff shared between
* userland (-fhosted -lgcc)
* kernel (-ffreestanding -D_KERNEL -nostdlib)
* bootloader (-ffreestanding -D_STANDALONE -nostdlib)

Here, userland and kernel share some functions not for the
bootloader (e.g. utf-8 stuff), while kernel and bootloader
share a few libgcc replacement functions.

I took the htonl() &c. functions because they were pretty
easy to implement; no sparc assembly version because it's
a 'no-op' and I trust gcc so much as to produce optimised
output for the type foo(type x) { return (x); } case.

Not tested.

Most of the functions will be written "on demand" and re-
written from scratch by me.
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/libkern/Makefile,v 1.3 2006/06/16 21:52:53 tg Exp $
d28 1
@


1.3
log
@with virtue and a cross-developing environment,
make this almost usable (not tested the result)
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/libkern/Makefile,v 1.2 2005/03/06 21:27:24 tg Exp $
d26 4
@


1.2
log
@* merge src/sys/
  (at least the better part of it)
* revert IPv6 networking to OpenBSD, since
  I didn't get IPV4_MAPPED addresses working :(
@
text
@d1 1
a1 1
# $MirOS$
d11 1
a11 1
CFLAGS= -O2 -I${.CURDIR}/../include -I${.CURDIR}/../../../.. \
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#	$OpenBSD: Makefile,v 1.3 2003/06/01 17:00:39 deraadt Exp $
d28 1
a28 2
NOPROFILE=
NOPIC=
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
