head	1.17;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.1
	MIRBSD_10:1.5.0.2
	MIRBSD_10_BASE:1.5
	MIRBSD_9_BASE:1.3
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.17
date	2016.02.06.17.09.06;	author tg;	state Exp;
branches;
next	1.16;
commitid	10056B628C31FA73C0D;

1.16
date	2009.04.17.18.57.07;	author tg;	state Exp;
branches;
next	1.15;
commitid	10049E8D11A2584B057;

1.15
date	2009.04.16.14.19.19;	author tg;	state Exp;
branches;
next	1.14;
commitid	10049E73E7B27E053C6;

1.14
date	2009.04.16.13.20.24;	author tg;	state Exp;
branches;
next	1.13;
commitid	10049E73089575F8D71;

1.13
date	2009.04.16.12.14.10;	author tg;	state Exp;
branches;
next	1.12;
commitid	10049E720BF2819D7D4;

1.12
date	2009.02.01.16.14.33;	author tg;	state Exp;
branches;
next	1.11;
commitid	1004985CA806CC90EF9;

1.11
date	2009.02.01.16.12.30;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004985CA0575C03812;

1.10
date	2008.10.21.18.51.00;	author tg;	state Exp;
branches;
next	1.9;
commitid	10048FE24A97E59C6EE;

1.9
date	2008.08.01.18.46.31;	author tg;	state Exp;
branches;
next	1.8;
commitid	10048935A0F15610141;

1.8
date	2008.08.01.18.45.39;	author tg;	state Exp;
branches;
next	1.7;
commitid	100489359DF7EF4507F;

1.7
date	2008.08.01.15.47.14;	author tg;	state Exp;
branches;
next	1.6;
commitid	100489330121217368F;

1.6
date	2008.07.13.19.42.40;	author tg;	state Exp;
branches;
next	1.5;
commitid	100487A5AB509C87D3D;

1.5
date	2007.06.12.21.58.26;	author tg;	state Exp;
branches;
next	1.4;
commitid	100466F170341A3478B;

1.4
date	2007.06.11.21.12.58;	author tg;	state Exp;
branches;
next	1.3;
commitid	100466DBAF02D4AB1DE;

1.3
date	2006.06.16.21.52.52;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004493283B5D0D1060;

1.2
date	2005.03.06.21.27.21;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.41;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.41;	author tg;	state Exp;
branches;
next	;


desc
@@


1.17
log
@fixup permissions of the files inside /usr/mdec/
@
text
@# $MirOS: src/sys/arch/sparc/stand/boot/Makefile,v 1.16 2009/04/17 18:57:07 tg Exp $
# $OpenBSD: Makefile,v 1.12 2003/08/11 06:35:45 deraadt Exp $
# $NetBSD: Makefile,v 1.2 1995/09/30 21:43:38 pk Exp $

.PATH:	${.CURDIR}/../common
S=	${.CURDIR}/../../../..

PROG=		boot
NOMAN=		yes
INSTALL_STRIP=	#empty
SMALL_BOOT?=	No
CLEANFILES+=	${PROG}~ ${PROG}.aout ${PROG}.elf
SRCS=		srt0.S boot.c conf.c dvma.c promdev.c
.if ${SMALL_BOOT:L} == "no"
SRCS+=		net.c netif_sun.c
.endif
SRCS+=		loadfile.c

CPPFLAGS+=	-I${.CURDIR}/../common -I${.CURDIR}/../../../../arch \
		-I${.CURDIR}/../../../.. -I${.CURDIR}/../../../../lib/libsa
.if ${SMALL_BOOT:L} != "no"
CPPFLAGS+=	-DSMALL_BOOT
CPPFLAGS+=	-DSPARC_BOOT_ELF
V=		${REAL_V}-small
.else
CPPFLAGS+=	-DSPARC_BOOT_AOUT -DSPARC_BOOT_ELF
.endif

${PROG}: ${PROG}.elf
	rm -f ${PROG} ${PROG}~ ${PROG}.aout
	# create stripped version of loader, for later patching
	objcopy -S ${PROG}.elf ${PROG}~
	elf2aout ${PROG}~ ${PROG}.aout -b
.if ${SMALL_BOOT:L} == "no"
	# create unstripped version of loader, for symbol retrieval
	rm -f ${PROG}~
	elf2aout ${PROG}.elf ${PROG}~ -b
	# write offset to path to default kernel file into loader
	set -A sect_text -- $$(objdump -wh --target=a.out-sunos-big \
	    ${PROG}~ | fgrep .text); (( fofs_text = 0x$${sect_text[5]} )); \
	nm --target=a.out-sunos-big ${PROG}~ |& \
	while read -p adr typ sym; do \
		[[ $$sym = _@@(__defkernel|_aout_advecs_start|start) ]] || continue; \
		eval typeset -i10 sym$$sym=0x\$$adr; \
	done; \
	typeset -Z11 -Uui16 ofs nofs advecs; \
	(( nofs = -(ofs = sym___defkernel - sym_start + fofs_text) )); \
	(( advecs = sym__aout_advecs_start - sym_start + fofs_text )); \
	: check if advecs are still at the correct place in ${PROG}.aout; \
	tstval=$$(dd if=${PROG}.aout bs=1 count=4 skip=$$((advecs)) | \
	    hexdump -ve '1/1 "%02X"'); [[ $$tstval = 20355601 ]] || exit 1; \
	print -n "$$(sed 's/\(..\)/\\x\1/g' <<<"$${nofs#16#}$${ofs#16#}")" | \
	    dd conv=notrunc bs=1 seek=$$((advecs + 4)) of=${PROG}.aout
.endif
	# sort-of install the patched a.out file
	mv -f ${PROG}.aout ${PROG}

srt0.o: srt0.S
	${CC} ${CFLAGS} ${CPPFLAGS} -D_LOCORE -c ${.IMPSRC}

.include <bsd.prog.mk>
BINMODE=	${SHAREMODE}

${PROG}.elf: ${OBJS} ${DLIBSA}
	${LD} -N -Ttext ${RELOC2} -e start ${OBJS} ${LLIBSA} -o $@@
	@@size $@@
@


1.16
log
@make fdboot smaller
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/boot/Makefile,v 1.15 2009/04/16 14:19:19 tg Exp $
d62 1
@


1.15
log
@oops, print -n there please
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/boot/Makefile,v 1.14 2009/04/16 13:20:24 tg Exp $
d20 1
a20 2
		-I${.CURDIR}/../../../.. -I${.CURDIR}/../../../../lib/libsa \
		-DSPARC_BOOT_AOUT -DSPARC_BOOT_ELF
d23 1
d25 2
d34 1
d54 1
@


1.14
log
@• make use of the imbedded patch area to note the file(!) offset of
  the __defkernel patch field (and with possible future extensions)
• strip /usr/mdec/boot now by default ☺
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/boot/Makefile,v 1.13 2009/04/16 12:14:10 tg Exp $
d49 1
a49 1
	print "$$(sed 's/\(..\)/\\x\1/g' <<<"$${nofs#16#}$${ofs#16#}")" | \
@


1.13
log
@solve some of the stripping vs size problems
• bxinst is now generated from an extra (unstripped) bootxx
• the bootxx which is installed is stripped again
• fdboot is fully stripped
• the boot which is installed is… still too large
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/boot/Makefile,v 1.12 2009/02/01 16:14:33 tg Exp $
d12 1
a12 2
CLEANFILES+=	${PROG}~ ${PROG}.elf

d28 2
a29 3
.if ${SMALL_BOOT:L} == "no"
	objcopy -S -K start -K __defkernel ${PROG}.elf ${PROG}~
.else
d31 22
a52 2
.endif
	elf2aout ${PROG}~ ${PROG} -b
@


1.12
log
@small boot announce as such
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/boot/Makefile,v 1.11 2009/02/01 16:12:30 tg Exp $
d12 1
a12 1
CLEANFILES+=	${PROG}~
d28 7
a34 6
${PROG}: ${OBJS} ${DLIBSA}
	${LD} -N -Ttext ${RELOC2} --format a.out-sparc-netbsd \
	    -e start ${OBJS} ${LLIBSA} -o $@@~
	@@size $@@~
	strip -x $@@~
	elf2aout $@@~ $@@ -b
d40 4
@


1.11
log
@switch to MirBSD style versions
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/boot/Makefile,v 1.10 2008/10/21 18:51:00 tg Exp $
d25 1
@


1.10
log
@strip locals but not globals from the various bootloader stuffs,
to enable using nm to find the __defkernel symbol in the sparc
second-stage bootloader, and shrink down the first-stage loaders
of both architectures.

The enlarged, symbol-table-enhanced sparc /boot works on my SS20.

Before:

-r-xr-xr-x   1 root  bin    - 38752 Oct 18 13:28 boot*
-r-xr-xr-x   1 root  bin    - 40440 Oct 18 13:28 bootxx*
-r--r--r--   1 root  bin    - 30634 Oct 18 13:07 bootxx.sh

-r--r--r--   1 root  bin    -  7394 Oct 17 00:07 bootxx.sh

After:

-r-xr-xr-x   1 root  bin    - 76254 Oct 21 18:40 boot*
-r-xr-xr-x   1 root  bin    - 40233 Oct 21 18:40 bootxx*
-rw-r--r--   1 tg    wsrc   - 25167 Oct 21 18:40 bxinst

-rw-r--r--   1 tg    wsrc   -  7293 Oct 21 18:38 bxinst
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/boot/Makefile,v 1.9 2008/08/01 18:46:31 tg Exp $
d14 1
a14 1
SRCS=		srt0.S boot.c conf.c dvma.c promdev.c version.c
@


1.9
log
@I'm pretty sure I don't want my bootloaders to link against libgcc
we have enough quad functions for two of them or so…
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/boot/Makefile,v 1.8 2008/08/01 18:45:39 tg Exp $
d12 1
d23 3
d27 1
a27 4
CLEANFILES+=	${PROG}.elf
LIBS=		${DLIBSA}

${PROG}: ${OBJS} ${LIBS}
d29 4
a32 4
	    -e start ${OBJS} ${LLIBSA} -o ${PROG}.elf
	@@size ${PROG}.elf
	strip -s ${PROG}.elf
	elf2aout ${PROG}.elf ${PROG} -b
@


1.8
log
@fold libkern remnants into libsa now here, too
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/boot/Makefile,v 1.7 2008/08/01 15:47:14 tg Exp $
d28 1
a28 2
	    -e start ${OBJS} --start-group ${LLIBSA} \
	    $$(${CC} -print-libgcc-file-name) --end-group -o ${PROG}.elf
@


1.7
log
@switch the sparc bootloader too – untested
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/boot/Makefile,v 1.6 2008/07/13 19:42:40 tg Exp $
d24 1
a24 1
LIBS=		${DLIBSA} ${DLIBKERN}
d28 1
a28 1
	    -e start ${OBJS} --start-group ${LLIBSA} ${LLIBKERN} \
@


1.6
log
@like with i386, provide a 4.2FFS-only floppy boot loader, to make them fit
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/boot/Makefile,v 1.5 2007/06/12 21:58:26 tg Exp $
d24 1
a24 1
LIBS=		${DLIBSA} ${DLIBKERN} ${DLIBZ}
d28 1
a28 1
	    -e start ${OBJS} --start-group ${LLIBSA} ${LLIBKERN} ${LLIBZ} \
@


1.5
log
@make cross-buildable (or rather buildable at all)
i386: constify a little
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/boot/Makefile,v 1.4 2007/06/11 21:12:58 tg Exp $
d8 10
a17 7
PROG=	boot

NOMAN=	yes
INSTALL_STRIP=

SRCS=	srt0.S boot.c conf.c dvma.c net.c netif_sun.c promdev.c version.c
SRCS+=	loadfile.c
d24 1
a24 1
LIBS=		${LIBSA} ${LIBKERN} ${LIBZ}
d28 1
a28 1
	    -e start ${OBJS} --start-group ${LIBSA} ${LIBKERN} ${LIBZ} \
@


1.4
log
@unbreak “make depend” in top-level by hacking in a few missing include paths
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/boot/Makefile,v 1.3 2006/06/16 21:52:52 tg Exp $
d25 2
a26 2
	    -e start ${OBJS} ${LIBSA} ${LIBKERN} ${LIBZ} \
	    $$(${CC} -print-libgcc-file-name) -o ${PROG}.elf
@


1.3
log
@with virtue and a cross-developing environment,
make this almost usable (not tested the result)
@
text
@d1 1
a1 1
# $MirOS: src/sys/arch/sparc/stand/boot/Makefile,v 1.2 2005/03/06 21:27:21 tg Exp $
d6 1
@


1.2
log
@* merge src/sys/
  (at least the better part of it)
* revert IPv6 networking to OpenBSD, since
  I didn't get IPV4_MAPPED addresses working :(
@
text
@d1 1
a1 1
# $MirOS$
d17 1
a17 1
		${DEFS} -DSPARC_BOOT_AOUT -DSPARC_BOOT_ELF
d27 1
d31 1
a31 1
	${CC} ${CFLAGS} -D_LOCORE -c ${.IMPSRC}
@


1.1
log
@Initial revision
@
text
@d1 3
a3 2
#	$OpenBSD: Makefile,v 1.12 2003/08/11 06:35:45 deraadt Exp $
#	$NetBSD: Makefile,v 1.2 1995/09/30 21:43:38 pk Exp $
d9 1
a9 1
NOMAN=	noman
d15 13
a27 17
CFLAGS=	-O2 -I${.CURDIR}/../common -I${.CURDIR}/../../../../arch \
	-I${.CURDIR}/../../../.. -I${.CURDIR}/../../../../lib/libsa ${DEFS} \
	-DSPARC_BOOT_AOUT -DSPARC_BOOT_ELF

CLEANFILES+=${PROG}.aout ${PROG}.elf elfclean
LIBS=${LIBSA} ${LIBKERN} ${LIBZ}

elfclean: clean-elf.c
	${HOSTCC} -o elfclean ${.ALLSRC}

${PROG}: ${OBJS} ${LIBS} elfclean
	${LD} -N -Ttext ${RELOC2} --format a.out-sparc-netbsd -e start ${OBJS} ${LIBSA} ${LIBKERN} ${LIBZ} `cc -print-libgcc-file-name` -o elf
	./elfclean elf
	objcopy -j .text -j .data -j .bss -O a.out-sparc-netbsd elf a.out
	@@size a.out
	(echo -n 01 | tr 01 '\01\03'; tail +3c a.out) | dd obs=512 conv=osync > ${.TARGET}
	@@rm a.out elf
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
