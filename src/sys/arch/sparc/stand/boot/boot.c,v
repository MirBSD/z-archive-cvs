head	1.7;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.1
	MIRBSD_10:1.3.0.2
	MIRBSD_10_BASE:1.3
	MIRBSD_9_BASE:1.3
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2009.04.17.18.57.07;	author tg;	state Exp;
branches;
next	1.6;
commitid	10049E8D11A2584B057;

1.6
date	2009.02.01.16.12.30;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004985CA0575C03812;

1.5
date	2008.10.16.15.09.12;	author tg;	state Exp;
branches;
next	1.4;
commitid	10048F759262D36E888;

1.4
date	2008.10.05.01.51.00;	author tg;	state Exp;
branches;
next	1.3;
commitid	10048E81D8A54B99D4C;

1.3
date	2006.06.16.21.52.52;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004493283B5D0D1060;

1.2
date	2005.03.06.21.27.22;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.41;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.41;	author tg;	state Exp;
branches;
next	;


desc
@@


1.7
log
@make fdboot smaller
@
text
@/**	$MirOS: src/sys/arch/sparc/stand/boot/boot.c,v 1.6 2009/02/01 16:12:30 tg Exp $ */
/*	$OpenBSD: boot.c,v 1.6 2003/08/14 17:13:57 deraadt Exp $	*/
/*	$NetBSD: boot.c,v 1.2 1997/09/14 19:27:21 pk Exp $	*/

/*-
 * Copyright (c) 1982, 1986, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * 	@@(#)boot.c	8.1 (Berkeley) 6/10/93
 */

#include <sys/param.h>
#include <sys/reboot.h>
#include <a.out.h>
#include <lib/libsa/stand.h>

#include <sparc/stand/common/promdev.h>

void copyunix(int, char *);
void promsyms(int, struct exec *);
int debug;
int netif_debug;

/*
 * Boot device is derived from ROM provided information.
 */
#ifndef SMALL_BOOT
const char __defkernel[] = "bsd\0PADDING.....................................";
#else
const char __defkernel[] = "bsd";
#endif

extern vaddr_t	esym;
char		fbuf[80], dbuf[128];
#ifndef SMALL_BOOT
const char progname[] = "boot";
#endif

typedef void (*entry_t)(caddr_t, int, int, int, long, long);
int loadfile(int, vaddr_t *);

int
main(int argc, char *argv[])
{
	int	io;
	const char *file;
	entry_t entry;

	prom_init();

	file = prom_bootfile;
	if (file == 0 || *file == 0)
		file = __defkernel;

	for (;;) {
		if (prom_boothow & RB_ASKNAME) {
			printf("device[%s]: ", prom_bootdevice);
			gets(dbuf);
			if (dbuf[0])
				prom_bootdevice = dbuf;
			printf("boot: ");
			gets(fbuf);
			if (fbuf[0])
				file = fbuf;
		}
		if ((io = open(file, 0)) >= 0)
			break;
		printf("open: %s: %s\n", file, strerror(errno));
		prom_boothow |= RB_ASKNAME;
	}

	printf("Booting %s @@ 0x%x\n", file, LOADADDR);
	loadfile(io, (vaddr_t *)&entry);

	/* Note: args 2-4 not used due to conflicts with SunOS loaders */
	(*entry)(cputyp == CPU_SUN4 ? LOADADDR : (caddr_t)promvec,
		 0, 0, 0, esym, DDB_MAGIC1);

	_rtt();
}
@


1.6
log
@switch to MirBSD style versions
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/arch/sparc/stand/boot/boot.c,v 1.5 2008/10/16 15:09:12 tg Exp $ */
d51 1
d53 3
d59 3
a61 1
char progname[] = "boot";
@


1.5
log
@const cleanliness
@
text
@d1 1
a1 1
/**	$MirOS: src/sys/arch/sparc/stand/boot/boot.c,v 1.4 2008/10/05 01:51:00 tg Exp $ */
a52 1
extern char	*version;
d55 1
a68 2
	printf(">> MirBSD BOOT %s\n", version);

@


1.4
log
@make the sparc bootloader easier binary-patchable
necessary because it doesnâ€™t have a concept of boot.cfg file
@
text
@d1 1
a1 1
/**	$MirOS$ */
d64 1
a64 1
	char	*file;
@


1.3
log
@with virtue and a cross-developing environment,
make this almost usable (not tested the result)
@
text
@d1 1
d51 1
a51 1
#define	DEFAULT_KERNEL	"bsd"
d73 1
a73 1
		file = DEFAULT_KERNEL;
@


1.2
log
@* merge src/sys/
  (at least the better part of it)
* revert IPv6 networking to OpenBSD, since
  I didn't get IPV4_MAPPED addresses working :(
@
text
@d59 1
@


1.1
log
@Initial revision
@
text
@d67 1
a67 1
	printf(">> OpenBSD BOOT %s\n", version);
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
