head	1.6;
access;
symbols
	tg-beforemerge-ksrc10:1.1.1.3
	MIRBSD_10:1.1.1.2.0.2
	MIRBSD_10_BASE:1.1.1.2
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507032030:1.1.1.1
	cvs-200504302230:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2017.08.07.20.18.37;	author tg;	state Exp;
branches;
next	1.5;
commitid	1005988C69344442E37;

1.5
date	2012.08.17.17.37.14;	author tg;	state Exp;
branches;
next	1.4;
commitid	100502E813241BEB732;

1.4
date	2009.08.09.13.51.26;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004A7ED475634B870B;

1.3
date	2009.04.22.19.48.47;	author tg;	state Exp;
branches;
next	1.2;
commitid	10049EF74A967ECE253;

1.2
date	2009.02.24.19.21.03;	author tg;	state Exp;
branches;
next	1.1;
commitid	10049A4483C0507D891;

1.1
date	2005.02.05.17.29.18;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.29.18;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.03.18.03.55.10;	author tg;	state Exp;
branches;
next	1.1.1.3;
commitid	10045FCB8296AC306FA;

1.1.1.3
date	2009.08.09.13.49.43;	author tg;	state Exp;
branches;
next	;
commitid	1004A7ED3D93685290A;


desc
@@


1.6
log
@filesystem
@
text
@/**	$MirOS: src/sys/ufs/ext2fs/ext2fs_dinode.h,v 1.5 2012/08/17 17:37:14 tg Exp $ */
/*	$OpenBSD: ext2fs_dinode.h,v 1.11 2008/11/23 23:52:35 tedu Exp $	*/
/*	$NetBSD: ext2fs_dinode.h,v 1.6 2000/01/26 16:21:33 bouyer Exp $	*/

/*
 * Copyright (c) 1997 Manuel Bouyer.
 * Copyright (c) 1982, 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)dinode.h	8.6 (Berkeley) 9/13/94
 *  Modified for ext2fs by Manuel Bouyer.
 */

#include <sys/stat.h>

/*
 * The root inode is the root of the filesystem.  Inode 0 can't be used for
 * normal purposes and bad blocks are normally linked to inode 1, thus
 * the root inode is 2.
 * Inode 3 to 10 are reserved in ext2fs.
 */
#define	EXT2_ROOTINO ((ino_t)2)
#define EXT2_FIRSTINO ((ino_t)11)

/*
 * A dinode contains all the meta-data associated with a UFS file.
 * This structure defines the on-disk format of a dinode. Since
 * this structure describes an on-disk structure, all its fields
 * are defined by types with precise widths.
 */

#define	NDADDR	12			/* Direct addresses in inode. */
#define	NIADDR	3			/* Indirect addresses in inode. */

#define EXT2_MAXSYMLINKLEN ((NDADDR+NIADDR) * sizeof (u_int32_t))

struct ext2fs_dinode {
	u_int16_t	e2di_mode;	/*   0: IFMT, permissions; see below. */
	u_int16_t	e2di_uid_low;	/*   2: Owner UID, lowest bits */
	u_int32_t	e2di_size;	/*	 4: Size (in bytes) */
	u_int32_t	e2di_atime;	/*	 8: Access time */
	u_int32_t	e2di_ctime;	/*	12: Create time */
	u_int32_t	e2di_mtime;	/*	16: Modification time */
	u_int32_t	e2di_dtime;	/*	20: Deletion time */
	u_int16_t	e2di_gid_low;	/*  24: Owner GID, lowest bits */
	u_int16_t	e2di_nlink;	/*  26: File link count */
	u_int32_t	e2di_nblock;	/*  28: Blocks count */
	u_int32_t	e2di_flags;	/*  32: Status flags (chflags) */
	u_int32_t	e2di_linux_reserved1; /* 36 */
	u_int32_t	e2di_blocks[NDADDR+NIADDR]; /* 40: disk blocks */
	u_int32_t	e2di_gen;	/* 100: generation number */
	u_int32_t	e2di_facl;	/* 104: file ACL (not implemented) */
	u_int32_t	e2di_dacl;	/* 108: dir ACL (not implemented) */
	u_int32_t	e2di_faddr;	/* 112: fragment address */
	u_int8_t	e2di_nfrag;	/* 116: fragment number */
	u_int8_t	e2di_fsize;	/* 117: fragment size */
	u_int16_t	e2di_linux_reserved2; /* 118 */
	u_int16_t	e2di_uid_high;	/* 120: 16 highest bits of uid */
	u_int16_t	e2di_gid_high;	/* 122: 16 highest bits of gid */
	u_int32_t	e2di_linux_reserved3; /* 124 */
};

#define	E2MAXSYMLINKLEN	((NDADDR + NIADDR) * sizeof(u_int32_t))

/* File permissions. */
#define	EXT2_IEXEC		0000100		/* Executable. */
#define	EXT2_IWRITE		0000200		/* Writeable. */
#define	EXT2_IREAD		0000400		/* Readable. */
#define	EXT2_ISVTX		0001000		/* Sticky bit. */
#define	EXT2_ISGID		0002000		/* Set-gid. */
#define	EXT2_ISUID		0004000		/* Set-uid. */

/* File types. */
#define	EXT2_IFMT		0170000		/* Mask of file type. */
#define	EXT2_IFIFO		0010000		/* Named pipe (fifo). */
#define	EXT2_IFCHR		0020000		/* Character device. */
#define	EXT2_IFDIR		0040000		/* Directory file. */
#define	EXT2_IFBLK		0060000		/* Block device. */
#define	EXT2_IFREG		0100000		/* Regular file. */
#define	EXT2_IFLNK		0120000		/* Symbolic link. */
#define	EXT2_IFSOCK		0140000		/* UNIX domain socket. */

/* file flags */
#define EXT2_SECRM		0x00000001	/* Secure deletion */
#define EXT2_UNRM		0x00000002	/* Undelete */
#define EXT2_COMPR		0x00000004	/* Compress file */
#define EXT2_SYNC		0x00000008	/* Synchronous updates */
#define EXT2_IMMUTABLE		0x00000010	/* Immutable file */
#define EXT2_APPEND		0x00000020	/* writes to file may only append */
#define EXT2_NODUMP		0x00000040	/* do not dump file */

/* size of on-disc inode */
#define EXT2_DINODE_SIZE(s)	\
    (((s)->e2fs.e2fs_rev > E2FS_REV0) ? ((s)->e2fs.e2fs_inode_size) : 128)

/*
 * The e2di_blocks fields may be overlaid with other information for
 * file types that do not have associated disk storage. Block
 * and character devices overlay the first data block with their
 * dev_t value. Short symbolic links place their path in the
 * di_db area.
 */

#define e2di_rdev		e2di_blocks[0]
#define e2di_shortlink		e2di_blocks

/* e2fs needs byte swapping on big-endian systems */
#if BYTE_ORDER == LITTLE_ENDIAN
#	define e2fs_iload(old, new) memcpy((new),(old),sizeof(struct ext2fs_dinode))
#	define e2fs_isave(old, new) memcpy((new),(old),sizeof(struct ext2fs_dinode))
#else
void e2fs_i_bswap(struct ext2fs_dinode *, struct ext2fs_dinode *);
#	define e2fs_iload(old, new) e2fs_i_bswap((old), (new))
#	define e2fs_isave(old, new) e2fs_i_bswap((old), (new))
#endif
@


1.5
log
@really totally big tennis, OpenBSD...

Do not panic upon encountering revision 0 filesystems,
the inode size field in the superblock only exists in rev1 (dynamic) ones.

Discovered while debugging OpenADK's genext2fs tool, 10x wbx@@
@
text
@d1 1
a1 1
/**	$MirOS$ */
d46 1
a46 1
 * The root inode is the root of the file system.  Inode 0 can't be used for
@


1.4
log
@automerge
@
text
@d1 1
d117 1
a117 1
#define EXT2_IMMUTABLE	0x00000010	/* Immutable file */
d121 3
a123 2
/* Size of on-disk inode. */
#define EXT2_DINODE_SIZE(s)	(s)->e2fs.e2fs_inode_size
d134 1
a134 1
#define e2di_shortlink	e2di_blocks
@


1.3
log
@revert to MirBSD #10semel
current code has bad regressions
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.10 2005/10/06 17:51:27 pedro Exp $	*/
d90 1
a90 1
	
d121 1
a121 1
#define	EXT2_DINODE_SIZE	(sizeof(struct ext2fs_dinode))	/* 128 */
@


1.2
log
@support dynamic ext2fs with inode sizes up to 256 bytes, as used by ext4fs:
mke2fs from MirGRML creates these by default, in order to be able to use
its new features seamlessly; our kernel did not support inode sizes other
than 128 bytes until now

while the grub part was Debian supplied, I had to hack this myself, since
FreeBSD® uses a totally different, GPL’d (yuck) ext2fs implementation, and
neither NetBSD® nor OpenBSD have this yet

problem noted by Michael Prokop (mika from grml.org), thanks
@
text
@a0 1
/**	$MirOS$ */
a88 1
	u_int8_t	e2di_linux_ext4space[128]; /* 128: dynamic extension */
d90 1
a90 1

d121 1
a121 1
#define	EXT2_DINODE_SIZE(fs)	((fs)->e2fs_inosz)
d136 2
a137 2
#define e2fs_iload(old, new, sz)	memcpy((new), (old), (sz))
#define e2fs_isave(old, new, sz)	memcpy((new), (old), (sz))
d140 2
a141 2
#define e2fs_iload(old, new, sz)	e2fs_i_bswap((old), (new))
#define e2fs_isave(old, new, sz)	e2fs_i_bswap((old), (new))
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.8 2003/06/02 23:28:22 millert Exp $	*/
d68 1
a68 1
	u_int16_t	e2di_uid;	/*   2: Owner UID */
d70 1
a70 1
	u_int32_t	e2di_atime;	/*	 8: Acces time */
d74 1
a74 1
	u_int16_t	e2di_gid;	/*  24: Owner GID */
d87 4
a90 1
	u_int32_t	e2di_linux_reserved3[2]; /* 120 */
a91 1
	
a92 1
	
d123 1
a123 1
#define	EXT2_DINODE_SIZE	(sizeof(struct ext2fs_dinode))	/* 128 */
d138 2
a139 2
#	define e2fs_iload(old, new) memcpy((new),(old),sizeof(struct ext2fs_dinode))
#	define e2fs_isave(old, new) memcpy((new),(old),sizeof(struct ext2fs_dinode))
d142 2
a143 2
#	define e2fs_iload(old, new) e2fs_i_bswap((old), (new))
#	define e2fs_isave(old, new) e2fs_i_bswap((old), (new))
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@32-bit UID/GID support, needed for new fsck_ext2fs(8)
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.10 2005/10/06 17:51:27 pedro Exp $	*/
d67 1
a67 1
	u_int16_t	e2di_uid_low;	/*   2: Owner UID, lowest bits */
d69 1
a69 1
	u_int32_t	e2di_atime;	/*	 8: Access time */
d73 1
a73 1
	u_int16_t	e2di_gid_low;	/*  24: Owner GID, lowest bits */
d86 1
a86 3
	u_int16_t	e2di_uid_high;	/* 120: 16 highest bits of uid */
	u_int16_t	e2di_gid_high;	/* 122: 16 highest bits of gid */
	u_int32_t	e2di_linux_reserved3; /* 124 */
d89 2
@


1.1.1.3
log
@update to more recent ext2fs code, hopefully fixing the symlink bug
(ext2fs_vnops.c bug:1.38 fix:1.41 probably) and maybe 256 byte inodes
@
text
@d1 1
a1 1
/*	$OpenBSD: ext2fs_dinode.h,v 1.11 2008/11/23 23:52:35 tedu Exp $	*/
d90 1
a90 1

d121 1
a121 1
#define EXT2_DINODE_SIZE(s)	(s)->e2fs.e2fs_inode_size
@


