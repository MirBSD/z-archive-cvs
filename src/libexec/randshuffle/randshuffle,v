head	1.26;
access;
symbols
	MIRBSD_10:1.20.0.2
	MIRBSD_10_BASE:1.20
	MIRBSD_9_BASE:1.11
	MIRBSD_8:1.4.0.2
	MIRBSD_8_BASE:1.4
	mirbsd:1.1.7;
locks; strict;
comment	@# @;


1.26
date	2016.10.09.21.26.05;	author tg;	state Exp;
branches;
next	1.25;
commitid	10057FAB5FF6634B3B1;

1.25
date	2014.02.19.17.43.27;	author tg;	state Exp;
branches;
next	1.24;
commitid	1005304ED413F0CF25C;

1.24
date	2010.10.01.17.27.06;	author tg;	state Exp;
branches;
next	1.23;
commitid	1004CA619F84481882C;

1.23
date	2009.03.29.13.04.19;	author tg;	state Exp;
branches;
next	1.22;
commitid	10049CF71B654F9EF54;

1.22
date	2008.07.30.19.38.54;	author tg;	state Exp;
branches;
next	1.21;
commitid	1004890C3501E5848EE;

1.21
date	2008.07.30.19.36.06;	author tg;	state Exp;
branches;
next	1.20;
commitid	1004890C29E53EF31D2;

1.20
date	2007.08.07.22.18.47;	author tg;	state Exp;
branches;
next	1.19;
commitid	10046B8EFD41ECF0952;

1.19
date	2007.06.09.15.22.10;	author tg;	state Exp;
branches;
next	1.18;

1.18
date	2007.06.04.08.36.37;	author tg;	state Exp;
branches;
next	1.17;
commitid	1004663CEF86900A583;

1.17
date	2007.03.01.22.59.48;	author tg;	state Exp;
branches;
next	1.16;
commitid	10045E75AFB7A07D1DC;

1.16
date	2007.02.02.16.45.11;	author tg;	state Exp;
branches;
next	1.15;
commitid	10045C36A7B5DB2058E;

1.15
date	2006.11.19.16.43.41;	author tg;	state Exp;
branches;
next	1.14;
commitid	1004560891159DD45F6;

1.14
date	2006.10.24.10.13.21;	author tg;	state Exp;
branches;
next	1.13;
commitid	100453DE74B07D5BA55;

1.13
date	2006.10.07.03.37.10;	author tg;	state Exp;
branches;
next	1.12;
commitid	100452720E92BA490E7;

1.12
date	2006.07.20.17.35.50;	author tg;	state Exp;
branches;
next	1.11;
commitid	10044BFBF0C388C7B72;

1.11
date	2006.05.22.12.18.35;	author tg;	state Exp;
branches;
next	1.10;

1.10
date	2006.05.22.12.16.10;	author tg;	state Exp;
branches;
next	1.9;

1.9
date	2006.05.22.12.11.02;	author tg;	state Exp;
branches;
next	1.8;

1.8
date	2006.05.22.12.07.17;	author tg;	state Exp;
branches;
next	1.7;

1.7
date	2006.05.22.11.17.10;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.27.09.49.57;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004427B52C11E7C73D;

1.5
date	2006.01.13.03.06.15;	author tg;	state Exp;
branches;
next	1.4;
commitid	10043C718D8337A89BC;

1.4
date	2005.12.17.05.46.17;	author tg;	state Exp;
branches;
next	1.3;
commitid	10043A3A3E65E20A413;

1.3
date	2005.07.07.13.39.34;	author tg;	state Exp;
branches;
next	1.2;
commitid	331742cd306446f9;

1.2
date	2005.03.15.00.23.06;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.06.16.33.40;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.06.16.33.40;	author tg;	state Exp;
branches;
next	;


desc
@@


1.26
log
@let randshuffle behave a bit more notrunc
@
text
@#!/bin/mksh
# $MirOS: src/libexec/randshuffle/randshuffle,v 1.24 2010/10/01 17:27:06 tg Exp $
#-
# Copyright (c) 2006, 2007, 2008, 2010, 2014, 2016
#	mirabilos <m@@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.

export PATH=/bin:/usr/bin:/sbin:/usr/sbin

if [[ $1 = -f ]]; then
	alias sleep=true
	shift
fi

set -A files
for file in "$@@"; do
	[[ -e $file ]] && files[${#files[*]}]=$file
done
if (( ${#files[*]} )); then
	what=user
	x_p=4
	x_a=52
	x_u=8
else
	set -A files /var/db/host.random
	what=system
	x_p=1
	x_a=31
	x_u=32
fi

sleep $((RANDOM % 120 + 30))
(print -r "$$ $((RANDOM << 15 | RANDOM)) $PPID $SECONDS $TMOUT $KSH_VERSION"; \
 sysctl -a; ps -akwwx -o "$(ps -L)"; ps -aexwwo pid,args; ps -axwwo pid,args; \
 date) 2>&1 | \
    cksum -ba bafh -a sfv -a sha256 -a tiger -a whirlpool >/dev/wrandom
sleep $((RANDOM % 9 + 9))
cat "${files[@@]}" >/dev/arandom 2>/dev/wrandom
sleep $((RANDOM % 9 + 9))
umask 077
for file in "${files[@@]}"; do
	print $SECONDS $RANDOM "$file"
	(
		dd if=/dev/prandom bs=64 count=$x_p
		dd if=/dev/arandom bs=64 count=$x_a
		dd if=/dev/urandom bs=64 count=$x_u
	) | dd of="$file" conv=notrunc
	chown 0:0 "$file"
	chmod 600 "$file"
done >/dev/wrandom 2>&1
sleep $((RANDOM % 3 + 2))
print -n $what $$ $((RANDOM << 15 | RANDOM)) $SECONDS | \
    cksum -ba suma >/dev/wrandom
sleep $((RANDOM % 1 + 1))
print "notice: $what random seed rotated! $((RANDOM & 255))" | logger
print -n $RANDOM >/dev/wrandom
exit 0
@


1.25
log
@replace OAAT, NZAT, NZAAT with BAFH in virtually all places; bump libc major
@
text
@d4 2
a5 2
# Copyright (c) 2006, 2007, 2008, 2010, 2014
#	Thorsten Glaser <tg@@mirbsd.org>
d61 1
a61 1
	) | dd of="$file"
@


1.24
log
@pimp intermediate shuffling (crontab is already decent)
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.28 2008/11/14 15:33:44 tg Rel $
d4 1
a4 1
# Copyright (c) 2006, 2007, 2008, 2010
d50 1
a50 1
    cksum -ba oaat1s -a sfv -a sha256 -a tiger -a whirlpool >/dev/wrandom
@


1.23
log
@• take care of dbins
• #!/bin/mksh shebang, in most places
• rcsid while here
@
text
@d2 1
a2 1
# $MirOS: src/libexec/randshuffle/randshuffle,v 1.22 2008/07/30 19:38:54 tg Exp $
d4 2
a5 2
# Copyright (c) 2006, 2007, 2008
#	Thorsten Glaser <tg@@mirbsd.de>
d49 2
a50 1
 date) 2>&1 | cksum -ba sha256 >/dev/wrandom
d52 1
a52 1
cat "${files[@@]}" >/dev/urandom 2>/dev/wrandom
@


1.22
log
@• direct cat(1) errors to wrandom not urandom
• always sleep at least 1 second if sleeping
@
text
@d1 2
a2 2
#!/usr/bin/env mksh
# $MirOS: src/libexec/randshuffle/randshuffle,v 1.21 2008/07/30 19:36:06 tg Exp $
d22 1
a22 1
export PATH=/usr/dbin:/bin:/usr/bin:/usr/dsbin:/sbin:/usr/sbin
@


1.21
log
@• remove advertising clause
• fix path to include /usr/d*bin
• allow to give files to read/write as cmd line arguments
@
text
@d2 1
a2 1
# $MirOS: src/libexec/randshuffle/randshuffle,v 1.20 2007/08/07 22:18:47 tg Exp $
d51 1
a51 1
cat "${files[@@]}" >/dev/urandom 2>&1
d67 1
a67 1
sleep $((RANDOM % 1))
d69 1
@


1.20
log
@option -f for fast (manual calls)
@
text
@d1 2
a2 2
#!/bin/mksh
# $MirOS: src/libexec/randshuffle/randshuffle,v 1.19 2007/06/09 15:22:10 tg Exp $
d4 1
a4 1
# Copyright (c) 2006, 2007
a12 4
# Advertising materials mentioning features or use of this work must
# display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
d22 6
a27 1
export PATH=/bin:/usr/bin:/sbin:/usr/sbin
d29 16
a44 1
[[ $1 = -f ]] && alias sleep=true
d51 1
a51 1
cat /var/db/host.random >/dev/urandom 2>&1
d54 10
a63 7
( ( dd if=/dev/prandom bs=64 count=1; \
    dd if=/dev/arandom bs=64 count=31; \
    dd if=/dev/urandom bs=64 count=32; \
  ) 2>/dev/wrandom | dd of=/var/db/host.random; \
    chown 0:0 /var/db/host.random; \
    chmod 600 /var/db/host.random) \
    >/dev/wrandom 2>&1
d65 2
a66 1
print -n $$ $((RANDOM << 15 | RANDOM)) $SECONDS | cksum -ba suma >/dev/wrandom
d68 1
a68 1
print "notice: system random seed rotated! $((RANDOM & 255))" | logger
@


1.19
log
@optimise
@
text
@d2 1
a2 1
# $MirOS: src/libexec/randshuffle/randshuffle,v 1.17 2007/03/01 22:59:48 tg Exp $
d28 2
@


1.18
log
@/dev/arandom is seeded with only 256 octets of entropy for 400k octets of
output; while its entropy quality is better than that of /dev/urandom its
randomness is worse, so use more of /dev/urandom for /var/db/host.random.
@
text
@d29 3
a31 2
( date; print -r "$$ $((RANDOM << 15 | RANDOM)) $PPID $SECONDS $TMOUT" \
    "$KSH_VERSION"; ps ax ) 2>&1 | cksum -ba sha256 >/dev/wrandom
a34 1
rm -f /var/db/host.random
d43 3
a45 1
sleep $((RANDOM % 3 + 3))
a46 3
sleep $((RANDOM % 9 + 9))
( TZ=UTC date; print -r "$$ $((RANDOM << 15 | RANDOM)) $SECONDS" ) 2>&1 | \
    cksum -ba suma >/dev/wrandom
@


1.17
log
@no need to sync here
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.20 2006/12/11 21:04:56 tg Rel $
d36 7
a42 4
( dd if=/dev/prandom count=1; dd if=/dev/arandom count=4; dd if=/dev/urandom \
    count=3 ) >/var/db/host.random 2>/dev/wrandom
chown 0:0 /var/db/host.random
chmod 0600 /var/db/host.random
@


1.16
log
@make /dev/wrandom as alias for /dev/prandom but allow it to
be written to - I plan to emulate our entropy suite on other
OSes where /dev/prandom may be read-only emulated by pipes
or similar means
@
text
@d2 1
a2 1
# $MirOS: src/libexec/randshuffle/randshuffle,v 1.15 2006/11/19 16:43:41 tg Exp $
d4 1
a4 1
# Copyright (c) 2006
d7 5
a11 6
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
d17 8
a24 8
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a defect.
a39 1
sync
@


1.15
log
@make mksh compatible to the AT&T ksh spec which says, according to
twkm (from #ksh on freenode), that $RANDOM is always an unsigned
15-bit decimal integer.

(RANDOM << 15 | RANDOM) thusly yields 30 bit, which is still more
than 36^5, so we can use it on the baselife CD to speed things up
@
text
@d2 1
a2 1
# $MirOS: src/libexec/randshuffle/randshuffle,v 1.14 2006/10/24 10:13:21 tg Exp $
d31 1
a31 1
    "$KSH_VERSION"; ps ax ) 2>&1 | cksum -ba sha256 >/dev/prandom
d38 1
a38 1
    count=3 ) >/var/db/host.random 2>/dev/prandom
d46 1
a46 1
    cksum -ba suma >/dev/prandom
@


1.14
log
@small improvements to the quality of the PRNG-pool input
@
text
@d2 1
a2 1
# $MirOS: src/libexec/randshuffle/randshuffle,v 1.13 2006/10/07 03:37:10 tg Exp $
d30 2
a31 2
( date; echo $RANDOM $PPID $SECONDS $TMOUT $$ $KSH_VERSION; ps ax ) 2>&1 | \
    cksum -ba sha512 >/dev/prandom
d41 1
d45 2
a46 1
( TZ=UTC date; print $RANDOM $SECONDS ) 2>&1 | cksum -ba suma >/dev/prandom
@


1.13
log
@add a little "sleep jitter", like bsdstats code, here,
like with everything that runs under cron
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.14 2006/08/09 19:35:23 tg Rel $
d41 1
@


1.12
log
@simplify
@
text
@d2 1
a2 1
# $MirOS: src/share/misc/licence.template,v 1.8 2006/06/16 23:03:39 tg Rel $
d14 2
a15 2
# All advertising materials mentioning features or use of this soft-
# ware must display the following acknowledgement:
d25 1
a25 1
# the possibility of such damage or existence of a nontrivial bug.
d29 1
d32 1
d34 1
d42 1
@


1.11
log
@date later
@
text
@d2 1
a2 1
# $MirOS: src/libexec/randshuffle/randshuffle,v 1.5 2006/01/13 03:06:15 tg Exp $
d4 2
a5 2
# Copyright (c) 2003, 2004, 2005, 2006
#	Thorsten "mirabile" Glaser <tg@@mirbsd.de>
a25 4
#-
# re-seed the random seed state file (batched)

exec 2>&1
d29 9
a37 50
R=$(mktemp /tmp/.randshuffle.XXXXXXXXXX) || exit 1
S=$(mktemp /tmp/.randshuffle.XXXXXXXXXX) || { rm -f $R; exit 1; }
trap 'rm -f $R $S; exit 0' 0
trap 'rm -f $R $S; trap - EXIT; exit 1' 1 2 3 13 15

dd if=/dev/prandom of=$R bs=160 count=1 >/dev/null 2>&1 || exit 1
dd if=/dev/arandom of=$S bs=160 count=16 >/dev/null 2>&1 || exit 1
SUMS="$(date) $(rmd160 $R $S) $RANDOM $((ps ax|wc -l) 2>&1) $PPID $SECONDS $$"
RANDOM=$(print -r -- "$SUMS" | cksum -o 1 | while read a b; do
	print $a
	print $b | cksum -b -a suma >>$R 2>/dev/null
    done)
cat $S >>$R
sync
dd if=/dev/prandom of=$S bs=160 count=1 >/dev/null 2>&1 || exit 1
cat $S >>$R
dd if=/dev/urandom of=$S bs=160 count=27 >/dev/null 2>&1 || exit 1
cat $S >>$R
SUMS="$SUMS $RANDOM"
cat /var/db/host.random >/dev/arandom
SUMS="$SUMS $RANDOM $(mksh -c 'echo $RANDOM')"
dd if=/dev/arandom of=$S bs=160 count=1 >/dev/null 2>&1 || {
	cat $R >/dev/arandom
	exit 1
}
cat $S >>$R
sync
dd if=/dev/urandom of=$S bs=160 count=56 >/dev/null 2>&1 || {
	cat $R >/dev/arandom
	exit 1
}
SUMS="$(md5 $R $S /var/db/host.random) $RANDOM $SUMS $(mksh -c 'echo $RANDOM')"
print $RANDOM | cksum -b -a suma >/var/db/host.random 2>/dev/null
cat $R $S >>/var/db/host.random
SUMS="$SUMS $RANDOM"
dd if=/dev/prandom of=$R bs=160 count=1 >/dev/null 2>&1 || {
	print -r -- "$SUMS" >/dev/arandom
	exit 2
}
sync
SUMS="$SUMS $RANDOM"
dd if=/dev/urandom of=$S bs=160 count=1 >/dev/null 2>&1 || {
	print -r -- "$SUMS" >>$R
	cat $R >/dev/arandom
	exit 2
}
cat $R >>$S
print -r -- "$SECONDS $KSH_VERSION $SUMS $RANDOM $(date)" >$R
# insert here additional >>$R 2>&1, e.g. ftp(1) calls
TZ=UTC date | cat $R - | cksum -b -a sha512 | cat - $S >/dev/arandom
d39 2
a40 1
print -n $RANDOM >/dev/prandom
@


1.10
log
@some more shuffling
@
text
@d82 1
a82 1
cksum -b -a sha512 <$R | cat - $S >/dev/arandom
@


1.9
log
@hash low-entropy input
@
text
@d51 1
d53 1
d64 1
a64 1
SUMS="$(rmd160 $R $S /var/db/host.random) $RANDOM"
d67 1
d73 1
d80 1
a80 1
print -r -- "$SUMS $(date)" >$R
@


1.8
log
@fit in a call to date(1)
@
text
@d75 4
a78 2
print -r -- "$SUMS" >>$S
cat $R $S >/dev/arandom
@


1.7
log
@* entropy improvements
  (even in log files)
* reduce size of host.random below 16 KiB
@
text
@d40 1
a40 1
SUMS="$(rmd160 $R $S) $RANDOM $((ps ax|wc -l) 2>&1) $PPID $SECONDS $$"
@


1.6
log
@ordinarily, a 4 KiB /var/db/host.random should be enough,
because the kernel state is not larger anyway, but use 8K
to be on the safe side, and shrink the size of the output
of the shuffle script too (and let it reset prandom).
@
text
@d41 4
a44 1
RANDOM=$(print -r -- "$SUMS" | cksum -o 1 | while read a b; do print $a; done)
d49 1
a49 1
dd if=/dev/urandom of=$S bs=160 count=32 >/dev/null 2>&1 || exit 1
d58 1
a58 1
dd if=/dev/urandom of=$S bs=160 count=64 >/dev/null 2>&1 || {
d63 2
a64 1
cat $R $S >/var/db/host.random
d77 1
a77 1
print "notice: system random seed rotated!" | logger
@


1.5
log
@don't print an error to stderr if /var/run/dev.db doesn't exist (ps(1)),
instead add that as a value

note: I am using: X=$((ps ax|wc -l) 2>&1) in-
stead of the form X=$( (ps ax|wc -l) 2>&1)
(notice the space) which used to be required
for ksh(1) to distinguish from $(( arith ))
- actually I wonder myself why it works now.
@
text
@d2 1
a2 1
# $MirOS: src/libexec/randshuffle/randshuffle,v 1.4 2005/12/17 05:46:17 tg Exp $
d39 1
a39 1
dd if=/dev/arandom of=$S bs=160 count=96 >/dev/null 2>&1 || exit 1
d46 1
a46 1
dd if=/dev/urandom of=$S bs=160 count=96 >/dev/null 2>&1 || exit 1
d74 1
@


1.4
log
@big fat licence update (I left some which are bsiegert@@'s alone though)
also, remove licence boilerplate from some .h files who don't deserve it
and remove and add some advertising clauses because I say so
@
text
@d2 1
a2 1
# $MirOS: src/libexec/randshuffle/randshuffle,v 1.3 2005/07/07 13:39:34 tg Exp $
d4 2
a5 2
# Copyright (c) 2003, 2004, 2005
#	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
d40 1
a40 1
SUMS="$(rmd160 $R $S) $RANDOM $(ps ax|wc -l) $PPID $SECONDS $$"
@


1.3
log
@/bin/sh and /bin/ksh -> /bin/mksh

This should cover most uses.
@
text
@d2 1
a2 1
# $MirOS: src/libexec/randshuffle/randshuffle,v 1.2 2005/03/15 00:23:06 tg Exp $
d18 8
a25 7
# Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
# any kind, expressed or implied, to the maximum extent permitted by
# applicable law, but with the warranty of being written without ma-
# licious intent or gross negligence; in no event shall licensor, an
# author or contributor be held liable for any damage, direct, indi-
# rect or other, however caused, arising in any way out of the usage
# of this work, even if advised of the possibility of such damage.
@


1.2
log
@not good to have >128K host.random file
shrink to ~44K
@
text
@d1 2
a2 2
#!/bin/ksh
# $MirOS: src/share/misc/licence.template,v 1.2 2005/03/03 19:43:30 tg Rel $
d32 4
a35 4
R=$(mktemp) || exit 1
S=$(mktemp) || { rm -f $R; exit 1; }
trap 'rm -f $R $S ; exit 0' 0
trap 'rm -f $R $S ; exit 1' 1 2 3 13 15
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# $MirOS$
d4 1
a4 1
# Copyright (c) 2003, 2004
d14 4
d37 2
a38 2
dd if=/dev/prandom of=$R bs=256 count=1 >/dev/null 2>&1 || exit 1
dd if=/dev/arandom of=$S bs=256 count=94 >/dev/null 2>&1 || exit 1
d40 1
a40 1
RANDOM=$(echo "$SUMS" | cksum -o 1 | while read a b; do echo $a; done)
d42 2
a43 1
dd if=/dev/prandom of=$S bs=256 count=1 >/dev/null 2>&1 || exit 1
d45 1
a45 1
dd if=/dev/urandom of=$S bs=256 count=96 >/dev/null 2>&1 || exit 1
d48 1
a48 1
dd if=/dev/arandom of=$S bs=256 count=1 >/dev/null 2>&1 || {
d53 2
a54 1
dd if=/dev/urandom of=$S bs=1024 count=63 >/dev/null 2>&1 || {
d60 2
a61 2
dd if=/dev/prandom of=$R bs=256 count=1 >/dev/null 2>&1 || {
	echo "$SUMS" >/dev/arandom
d64 3
a66 2
dd if=/dev/urandom of=$S bs=256 count=1 >/dev/null 2>&1 || {
	echo "$SUMS" >>$R
d70 1
a70 1
echo "$SUMS" >>$S
d72 1
a72 1
echo "notice: system random seed rotated!" | logger
@


1.1.7.1
log
@Add some missing files, such as some ISDN4BSD stuff,
documentation, tmac and tab files, TAI64 etc.
@
text
@@
