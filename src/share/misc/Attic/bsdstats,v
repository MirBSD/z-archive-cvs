head	1.61;
access;
symbols
	MIRBSD_10:1.59.0.2
	MIRBSD_10_BASE:1.59;
locks; strict;
comment	@# @;


1.61
date	2008.07.09.23.32.04;	author tg;	state dead;
branches;
next	1.60;
commitid	10048754A823D6E24B9;

1.60
date	2008.03.21.04.49.59;	author tg;	state Exp;
branches;
next	1.59;
commitid	10047E33E8A35EBD2CD;

1.59
date	2007.09.28.11.33.19;	author tg;	state Rel;
branches
	1.59.2.1;
next	1.58;
commitid	10046FCE68E6F5A3578;

1.58
date	2007.09.28.11.26.47;	author tg;	state Exp;
branches;
next	1.57;
commitid	10046FCE4F070F546D9;

1.57
date	2007.09.28.01.59.46;	author tg;	state Exp;
branches;
next	1.56;
commitid	10046FC60267ACBBB45;

1.56
date	2007.08.15.15.11.34;	author tg;	state Exp;
branches;
next	1.55;
commitid	10046C317A078A3EB6F;

1.55
date	2007.08.07.17.02.03;	author tg;	state Exp;
branches;
next	1.54;
commitid	10046B8A5A03B77C0C2;

1.54
date	2007.08.07.16.58.32;	author tg;	state Exp;
branches;
next	1.53;
commitid	10046B8A4CA2F5D0F00;

1.53
date	2007.08.03.09.27.13;	author tg;	state Exp;
branches;
next	1.52;
commitid	10046B2F4B66CCDF649;

1.52
date	2007.08.03.00.49.35;	author tg;	state Exp;
branches;
next	1.51;
commitid	10046B27BB57D1D1FF2;

1.51
date	2007.05.26.22.55.30;	author tg;	state Exp;
branches;
next	1.50;
commitid	1004658BAED79742DAD;

1.50
date	2007.05.26.22.21.27;	author tg;	state Exp;
branches;
next	1.49;
commitid	1004658B29F58D8A6A2;

1.49
date	2007.05.22.19.34.37;	author tg;	state Rel;
branches;
next	1.48;
commitid	100465345E41E8134C3;

1.48
date	2007.05.21.18.22.53;	author tg;	state Rel;
branches;
next	1.47;
commitid	1004651E37039C4494C;

1.47
date	2007.05.21.18.05.20;	author tg;	state Stab;
branches;
next	1.46;
commitid	1004651DF441A4BA061;

1.46
date	2007.05.21.17.53.12;	author tg;	state Exp;
branches;
next	1.45;
commitid	1004651DC7E08C8DD95;

1.45
date	2007.05.19.20.29.53;	author tg;	state Exp;
branches;
next	1.44;
commitid	100464F5E2B0F1864FB;

1.44
date	2007.05.19.20.27.42;	author tg;	state Exp;
branches;
next	1.43;
commitid	100464F5DA922F00383;

1.43
date	2007.05.19.20.15.29;	author tg;	state Exp;
branches;
next	1.42;
commitid	100464F5A8A629DFE05;

1.42
date	2007.05.19.19.11.44;	author tg;	state Exp;
branches;
next	1.41;
commitid	100464F4A8C5A15E2FA;

1.41
date	2007.05.18.07.31.24;	author tg;	state Exp;
branches;
next	1.40;
commitid	100464D56551CD3A0B2;

1.40
date	2007.05.17.02.16.11;	author tg;	state Exp;
branches;
next	1.39;
commitid	100464BBAE04D7A9B30;

1.39
date	2007.05.17.02.09.32;	author tg;	state Exp;
branches;
next	1.38;
commitid	100464BB9663520BB6B;

1.38
date	2007.05.17.02.07.19;	author tg;	state Exp;
branches;
next	1.37;
commitid	100464BB8DF053213C6;

1.37
date	2007.05.17.00.42.54;	author tg;	state Exp;
branches;
next	1.36;
commitid	100464BA4EA43D5E905;

1.36
date	2007.05.16.20.40.34;	author tg;	state Exp;
branches;
next	1.35;
commitid	100464B6C5141C0406A;

1.35
date	2007.05.16.20.38.05;	author tg;	state Exp;
branches;
next	1.34;
commitid	100464B6BBE59F30725;

1.34
date	2007.05.15.20.51.45;	author tg;	state Exp;
branches;
next	1.33;
commitid	100464A1D6B564300FD;

1.33
date	2007.05.15.20.20.44;	author tg;	state Exp;
branches;
next	1.32;
commitid	100464A163263C4BC41;

1.32
date	2007.05.15.20.02.49;	author tg;	state Exp;
branches;
next	1.31;
commitid	100464A11FD20EFFEF6;

1.31
date	2007.05.15.19.57.47;	author tg;	state Exp;
branches;
next	1.30;
commitid	100464A10C15CB1171E;

1.30
date	2007.05.15.19.56.52;	author tg;	state Exp;
branches;
next	1.29;
commitid	100464A10912C59843F;

1.29
date	2007.05.15.19.12.28;	author tg;	state Exp;
branches;
next	1.28;
commitid	100464A05A9280F8EF0;

1.28
date	2007.05.15.01.09.10;	author tg;	state Exp;
branches;
next	1.27;
commitid	100464908433D4C2CB7;

1.27
date	2007.05.10.00.32.32;	author tg;	state Exp;
branches;
next	1.26;
commitid	100464268263C3C7B31;

1.26
date	2007.05.09.19.03.48;	author tg;	state Exp;
branches;
next	1.25;
commitid	10046421B1B410DA3EA;

1.25
date	2007.05.09.18.30.42;	author tg;	state Exp;
branches;
next	1.24;
commitid	1004642105B72FC6A06;

1.24
date	2007.04.22.13.49.48;	author tg;	state Exp;
branches;
next	1.23;
commitid	100462B67B47B55E7B3;

1.23
date	2007.04.19.18.53.29;	author tg;	state Exp;
branches;
next	1.22;
commitid	1004627BA3248013885;

1.22
date	2007.04.19.12.59.39;	author tg;	state Exp;
branches;
next	1.21;
commitid	1004627678A795C9EF3;

1.21
date	2007.03.13.02.00.22;	author tg;	state Exp;
branches;
next	1.20;
commitid	10045F605AA2C47D7AF;

1.20
date	2007.03.12.22.32.38;	author tg;	state Exp;
branches;
next	1.19;
commitid	10045F5D5102643B959;

1.19
date	2007.03.11.18.51.02;	author tg;	state Exp;
branches;
next	1.18;
commitid	10045F44F4D7BB894F6;

1.18
date	2007.03.09.13.46.11;	author tg;	state Exp;
branches;
next	1.17;
commitid	10045F1652F6C258B19;

1.17
date	2007.03.04.05.48.53;	author tg;	state Exp;
branches;
next	1.16;
commitid	10045EA5DD15CD13E2B;

1.16
date	2006.11.09.02.33.25;	author tg;	state Exp;
branches;
next	1.15;
commitid	100455292AF63CF82EE;

1.15
date	2006.10.07.22.20.47;	author tg;	state Exp;
branches;
next	1.14;
commitid	1004528255103CE70A8;

1.14
date	2006.10.07.21.55.40;	author tg;	state Exp;
branches;
next	1.13;
commitid	100452822615699954B;

1.13
date	2006.10.07.21.47.36;	author tg;	state Exp;
branches;
next	1.12;
commitid	100452820846D1F6F72;

1.12
date	2006.10.07.03.23.23;	author tg;	state Exp;
branches;
next	1.11;
commitid	10045271DA452796B8B;

1.11
date	2006.10.04.07.59.37;	author tg;	state Exp;
branches;
next	1.10;
commitid	100452369F42A5F3517;

1.10
date	2006.10.04.00.15.04;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004522FD1574698089;

1.9
date	2006.10.03.20.34.58;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004522C9800C225052;

1.8
date	2006.10.03.19.09.16;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004522B5645DAE3EA2;

1.7
date	2006.10.03.00.41.10;	author tg;	state Exp;
branches;
next	1.6;
commitid	1004521B1B51CB12DAD;

1.6
date	2006.10.03.00.34.55;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004521B03566351BF5;

1.5
date	2006.10.03.00.04.34;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004521A90E04F17502;

1.4
date	2006.09.19.03.21.24;	author tg;	state Exp;
branches;
next	1.3;
commitid	100450F62442D30085F;

1.3
date	2006.09.13.18.34.27;	author tg;	state Exp;
branches;
next	1.2;
commitid	10045084F401C6CF6A7;

1.2
date	2006.09.13.01.45.59;	author tg;	state Exp;
branches;
next	1.1;
commitid	100450762D93A7641F9;

1.1
date	2006.09.13.01.08.21;	author tg;	state Exp;
branches;
next	;
commitid	100450759BA548292F2;

1.59.2.1
date	2008.07.14.12.43.23;	author tg;	state dead;
branches;
next	;
commitid	100487B49F66A33F1A5;


desc
@@


1.61
log
@nuke bsdstats and explain why
@
text
@# $MirOS: src/share/misc/bsdstats,v 1.60 2008/03/21 04:49:59 tg Exp $
# $FreeBSD: ports/sysutils/bsdstats/files/300.statistics,v 1.38 2006/12/05 13:49:45 scrappy Exp $
#-
# Copyright (c) 2007, 2008
#	Thorsten Glaser <tg@@mirbsd.de>
# Loosely based upon the original bsdstats script and API by
#	Marc G. Fournier <scrappy@@freebsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.

#-- Configuration

# server to report to
rpt='http://rpt.bsdstats.org/scripts/'

# report only known BSDs?
do_bsdonly=1

#-- Do not change below

case $KSH_VERSION in
*MIRBSD\ KSH*) ;;
*)
	echo "ERROR: run $0 with the MirBSD Korn Shell (mksh)!"
	echo >&2 "Fatal: '$0' was not run from mksh, aborting."
	return 1 ;;
esac

stats_token=
integer stats_token_time=0
integer stats_report_time=0

if [[ -e /etc/rc.conf && -O /etc/rc.conf ]]; then
	bsdstats_flags=$(. /etc/rc.conf; echo "$bsdstats_flags")
else
	bsdstats_flags=YES
fi
[[ -s /var/db/bsdstats && -O /var/db/bsdstats ]] && . /var/db/bsdstats
ac=-ac
[[ $bsdstats_flags = YES ]] && ac=

export TZ=UTC PATH=/bin:/usr/bin:/sbin:/usr/sbin
for dir in /usr/mpkg /usr/pkg /usr/local /sw; do
	for subdir in bin sbin; do
		[[ -e $dir/$subdir ]] && PATH=$PATH:$dir/$subdir
	done
done

# RFC 2396 and some optional characters _plus_ apostrophe
# -> escapes all shell meta-characters as well
function uri_escape {
	print -nr -- "$*" | sed -e '
	    s.%.%25.g
	    s.;.%3B.g
	    s./.%2F.g
	    s.?.%3F.g
	    s.:.%3A.g
	    s.@@.%40.g
	    s.&.%26.g
	    s.=.%3D.g
	    s.+.%2B.g
	    s.\$.%24.g
	    s.,.%2C.g
	    s.	.%09.g
	    s. .%20.g
	    s.<.%3C.g
	    s.>.%3E.g
	    s.#.%23.g
	    s.".%22.g
	    s.{.%7B.g
	    s.}.%7D.g
	    s.|.%7C.g
	    s.\\.%5C.g
	    s.\^.%5E.g
	    s.\[.%5B.g
	    s.\].%5D.g
	    s.`.%60.g
	    s.'\''.%27.g
	'
}

rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.60 2008/03/21 04:49:59 tg Exp $'
uname_code=$(uri_escape "$(uname -a | tr -d '\012\015')$stats_sysadd$ac")

if [[ $(uname -M 2>&1) = *MirBSD* ]]; then
	opsys=MirBSD
	ops_m=1
else
	opsys=$(uname -s)
	ops_m=0
fi
if [[ $do_bsdonly != 0 && $opsys != @@(*BSD|DragonFly) ]]; then
	print -u2 Error: $opsys is not a BSD!
	return 1
fi

if [[ $opsys = FreeBSD && -x /usr/bin/fetch ]]; then
	fetch='/usr/bin/fetch -qo -'
elif [[ -x /usr/bin/wget ]]; then
	fetch="/usr/bin/wget -qO -"
elif [[ -x /usr/bin/ftp ]]; then
	fetch='/usr/bin/ftp -Vo -'
elif whence -p wget >&- 2>&-; then
	fetch="$(whence -p wget) -qO -"
elif whence -p fetch >&- 2>&-; then
	fetch="$(whence -p fetch) -qo -"
elif whence -p ftp >&- 2>&-; then
	fetch="$(whence -p ftp) -Vo -"
else
	print -u2 Error: select a HTTP fetch programme!
	return 1
fi

if date --help >/dev/null 2>&1; then
	function timet2date {
		date -d @@$*
	}
else
	function timet2date {
		date -r $*
	}
	datetype=bsd
fi

if whence -p logger >&- 2>&-; then
	function logit {
		print -nr -- "$@@" | logger -t bsdstats
	}
else
	function logit {
		print -r bsdstats: "$@@"
	}
fi

# weird POST reporting of ports in $qs
function report_ports {
	if ! whence -p nc >&- 2>&-; then
		print 'warning: nc (netcat) not found, not reporting packages'
		return 0
	fi
	host=${rpt#http://}
	host=${host%%/*}
	path=${rpt#*$host}report_ports.php
	integer port=0
	if [[ $host = *:+([0-9]) ]]; then
		port=${host##*:}
		host=${host%:*}
	fi
	if [[ $host = \[*] ]]; then
		host=${host#\[}
		host=${host%]}
	fi
	(( (port < 1) || (port > 65535) )) && port=80
	chost=$host
	cport=$port
	cextra="User-Agent: bsdstats $rcsid_code"
	if [[ -n ${http_proxy:-${HTTP_PROXY}} ]]; then
		http_proxy=${http_proxy#http://}
		http_proxy=${http_proxy%%+(/)}
		if [[ $http_proxy = *:+([0-9]) ]]; then
			cport=${http_proxy##*:}
			http_proxy=${http_proxy%:*}
		else
			cport=3128
		fi
		if [[ $http_proxy = *\@@* ]]; then
			ta=${http_proxy%\@@*}
			[[ -n $ta ]] && cextra="$cextra
Proxy-Authorization: Basic $(print -r -- "$ta" | openssl base64)"
			http_proxy=${http_proxy##*\@@}
		fi
		chost=$http_proxy
		path=http://$host:$port$path
	fi
	qs="token=$stats_key&key=$stats_token$qs"
	qs="POST $path HTTP/1.0
Host: $host
$cextra
Connection: close
Content-Type: application/x-www-form-urlencoded
Content-Length: ${#qs}

$qs"
	res=$(sleep $((RANDOM % 99 + 21)); \
	    print -r -- "$qs" | nc $chost $cport 2>/dev/null)
	logit "ports report to $chost:$cport with '$qs' -> ${res:-ERROR}"
	[[ $res = *OK* ]] || ok=0
}

bmake=
function doports_pkgsrc {
	# look for pkgsrc's bmake
	[[ -n $bmake ]] || bmake=/usr/pkg/bin/bmake
	[[ -x $bmake ]] || bmake=$(whence -p bmake 2>&-)
	# use BSD make (usually in /usr/bin), but not GNU make
	[[ -x $bmake ]] || [[ $opsys = GNU* ]] || bmake=$(whence -p make 2>&-)
	# (we could also check --version output tho)
	[[ -x $bmake ]] || print warning: cannot find bmake
	[[ -x $bmake ]] || return
	(find "$1" -name +BUILD_INFO 2>/dev/null | sort) |&
	while IFS= read -pr fn; do
		name=${fn%/*}		# directory
		name=${name##*/}	# pkgname
		[[ $name = *@@(nb)+([0-9]) ]] || name=${name}nb0
		eval $(print 'all:\n\t@@printf "dir=%s flavours=%s"' \
		    '${PKGPATH:Q:Q} ${PKG_OPTIONS:Q:Q}\n.include' "\"$fn\"" | \
		    $bmake -f - all)	# subdir, flavours
		qs="$qs&port[]=$(uri_escape "${dir%%/*}")"
		for flavour in $flavours; do
			name=$name,$flavour
		done
		qs="$qs:$(uri_escape "$name")"
	done
}

function doports_fbsd {
	(find "$1" -name +CONTENTS -print0 2>/dev/null | \
	    xargs -0 grep -a '^@@comment ORIGIN' "" 2>&- | \
	    sed 's!^[^:]*/\([^/:]*\)/+CONTENTS:.*ORIGIN:\([^/]*\).*$!\1:\2!' | \
	    sort) |&
	while IFS=: read -pr name dir; do
		qs="$qs&port[]=$(uri_escape "$dir"):$(uri_escape "$name")"
	done
}

function doports_openmir {
	t=$2
	(find "$1" -name +CONTENTS -print0 2>/dev/null | \
	    xargs -0 grep -a '^@@comment.*subdir=' "" 2>&- | \
	    sed 's!^[^:]*/\([^/:]*\)/+CONTENTS:.*subdir=\([^, ]*\).*$!\1:\2!' | \
	    sort) |&
	while IFS=: read -pr name dir; do
		qs="$qs&port[]=$(uri_escape "${dir%%/*}")"
		# convert stem-version-pl-flavour-...
		# to stem-version_MirPorts_pl,flavour,...
		# and stem-version[p1]-flavour-...
		# to stem-versionp0,flavour,...
		stem=${name%%-[0-9]*}
		name=${name#$stem-}		# version(-pl)-flavour
		vers=${name%%-[a-zA-z]*}	# version(-pl)
		name=$(print -r -- "${name#$vers}" | tr - ,)	# -flavour
		if [[ $t = 0 ]]; then
			# still undecided, look which patchlevel style we have
			# MirPorts Framework (Debian style), since July 2005
			[[ $vers = *-+([0-9]) ]] && t=1
			# OpenBSD Ports; old MirPorts (e.g. on MirOS #7)
			[[ $vers = *p+([0-9]) ]] && t=2
		fi
		if [[ $t = 1 ]]; then
			vers=${vers%-+([0-9])}-MirPorts${vers#${vers%-+([0-9])}}
		else # default to OpenBSD ports style if no patchlevel given
			[[ $vers = *p+([0-9]) ]] || vers=${vers}p0
		fi
		qs="$qs:$(uri_escape "$stem-$(print -r "$vers" | tr - _)$name")"
	done
}

function dodevs_fbsd {
	# taken from scrappy's script, neither optimised nor tested
	/usr/sbin/pciconf -l |&
	while IFS='@@ =	' read -pr driver x1 x2 class x4 x5 x6 chip rest; do
		qs="$qs&dev[]=$(uri_escape "$driver")"
		qs="$qs:$(uri_escape "${chip#0x}"):$(uri_escape "${class#0x}")"
	done
}

host=${rpt#http://}
host=${host%%/*}
# do it twice in case DNS is slow
if ! whence -p host >&- 2>&-; then
	print warning: cannot do DNS checks
elif [[ $host = *bsdstats.org*(.) ]]; then
	res=$(host -t txt bsdstats.org. 2>&1 & dnspid=$!; \
	    (/bin/sleep 12; kill $dnspid) >&- 2>&- & wait $dnspid)
	[[ $res = *@@(not found|not exist|NXDOMAIN)* ]] && res=
	[[ $res = *UP* ]] || res=$(host -t txt bsdstats.org. 2>&1 & dnspid=$!; \
	    (/bin/sleep 12; kill $dnspid) >&- 2>&- & wait $dnspid)
	[[ $res = *@@(not found|not exist|NXDOMAIN)* ]] && res=
	if [[ $res != *UP* ]]; then
		print not connecting to $host: bsdstats.org not up
		return 0
	fi
else
	res=$(host -t a ${host%%+(.)}. 2>&1 & dnspid=$!; \
	    (/bin/sleep 12; kill $dnspid) >&- 2>&- & wait $dnspid)
	[[ $res = *@@(not found|not exist|NXDOMAIN)* ]] && res=
	[[ $res = *UP* ]] || res=$(host -t a ${host%%+(.)}. 2>&1 & dnspid=$!; \
	    (/bin/sleep 12; kill $dnspid) >&- 2>&- & wait $dnspid)
	[[ $res = *@@(not found|not exist|NXDOMAIN)* ]] && res=
	if [[ $res != *${host%%+(.)}* ]]; then
		print not connecting to $host: cannot resolve
		return 0
	fi
fi

print "last report time was: $stats_report_time" \
    "($(timet2date $stats_report_time))"
(( stats_report_time < 1136073623 )) && stats_report_time=0
[[ $stats_uname_code = $uname_code ]] || stats_report_time=0
[[ $stats_rcsid_code = $rcsid_code ]] || stats_report_time=0
(( stats_token_time < 1136073623 )) && stats_token_time=0
(( stats_token_time > 0 )) || stats_token=
integer ok=1
if [[ -z $stats_token || -z $stats_key ]]; then
	stats_report_time=0
	if ! whence -p openssl >&- 2>&-; then
		print -u2 Error: openssl tool missing
		return 1
	fi
	stats_key=$(uri_escape $(openssl rand -base64 32))
	uri="getid.php?key=$stats_key"
	res=$(sleep $((RANDOM % 99 + 21)); $fetch "$rpt$uri" 2>/dev/null)
	logit "firstrun $uri -> ${res:-ERROR}"
	stats_token=$(uri_escape $(eval $res; print -nr -- "$KEY"))
	stats_token_time=$(date +%s)
	if [[ -z $stats_token ]]; then
		# generation failed, wtf?
		print -u2 Error: remote side did not provide a token
		return 1
	fi
fi
integer now=$(date +%s)
if (( now > (stats_report_time + 10 * 86400) )); then
	version=$(uname -r)
	arch=$(sysctl -n hw.machine_arch 2>&-)
	[[ -n $arch ]] || arch=$(sysctl -n hw.machine 2>&-)
	[[ -n $arch ]] || arch=$(uname -m)
	if [[ $opsys = GNU* ]]; then
		[[ -z $stats_sysadd && -s /etc/debian_version ]] && \
		    stats_sysadd=.Debian-$(tr / _ </etc/debian_version)
	elif [[ $ops_m = 1 && -n $stats_sysadd ]]; then
		version=$(uname -M | sed 's/^.*BSD #\([0-9]\).*/\1/')
	elif [[ $opsys = MirBSD && -z $stats_sysadd ]]; then
		version=$(sysctl -n kern.ospatchlevel 2>&-)
		[[ -n $version ]] || version=$(uname -l)
		version=${version#\#}
		version=${version%%-*}
		typeset -i10 pl=0x${version##*[a-z]}
		[[ ${version%%[a-z]*} -lt 8 ]] && pl=157
		version=${version%%[a-z]*}
		if (( pl < 128 )); then
			version=$version-beta
		elif (( pl == 159 )); then
			version=$version-finite
		elif (( pl >= 160 )); then
			version=$version-current
		elif (( (pl % 2) == 1 )); then
			version=$version-stable
		else
			case $pl {
			(128)	version=${version}semel ;;
			(130)	version=${version}bis ;;
			(132)	version=${version}ter ;;
			(134)	version=${version}quater ;;
			(136)	version=${version}quinquies ;;
			(*)	version=${version}num.$(( pl / 2 - 63 ))ies ;;
			}
		fi
	fi
	uri="enable_token.php?key=$stats_key&token=$stats_token"
	res=$(sleep $((RANDOM % 99 + 21)); $fetch "$rpt$uri" 2>/dev/null)
	logit "init $uri -> ${res:-ERROR}"
	uri="report_system.php?token=$stats_key&key=$stats_token"
	uri="$uri&rel=$(uri_escape $version$stats_sysadd$ac)"
	uri="$uri&arch=$arch&opsys=$opsys"
	res=$(sleep $((RANDOM % 99 + 21)); $fetch "$rpt$uri" 2>/dev/null)
	logit "system report $uri -> ${res:-ERROR}"
	[[ $res = *OK* ]] || ok=0
	if [[ $bsdstats_flags = YES ]]; then
		# Hardware report: CPU(s)
		integer ncpus=$(sysctl -n hw.ncpu 2>&-)
		(( ncpus < 2 )) && ncpus=1
		cpu=$(sysctl -n hw.model 2>&-)
		[[ $cpu = *\ * ]] || cpu="unknown unknown"
		uri="report_cpu.php?token=$stats_key&key=$stats_token"
		uri="$uri&cpus=$ncpus&vendor=${cpu%% *}"
		uri="$uri&cpu_type=$(uri_escape "${cpu#* }")"
		res=$(sleep $((RANDOM % 99 + 21)); $fetch "$rpt$uri" 2>/dev/null)
		logit "cpu report $uri -> ${res:-ERROR}"
		[[ $res = *OK* ]] || ok=0
		# Hardware report: PCI devices
		uri="report_devices.php?token=$stats_key&key=$stats_token"
		qs=
		if [[ -x /usr/sbin/pciconf ]]; then
			dodevs_fbsd
		fi
		if [[ -n $qs ]]; then
			res=$(sleep $((RANDOM % 99 + 21)); \
			    $fetch "$rpt$uri$qs" 2>/dev/null)
			logit "devices report $uri$qs -> ${res:-ERROR}"
			[[ $res = *OK* ]] || ok=0
		fi
		# Software report
		qs=
		# scan for FreeBSD Ports, MirPorts, OpenBSD Ports, pkgsrc
		for dir in /{,{*/,.*/}{,{*/,.*/}{,{*/,.*/}}}}{db/pkg,pkgdb}; do
			[[ -e $dir ]] || continue
			for file in $dir/*/+CONTENTS; do
				if [[ ! -s $file ]]; then
					# silently skip
					continue
				elif [[ -e ${file%CONTENTS}BUILD_INFO ]]; then
					# pkgsrc
					doports_pkgsrc "$dir"
				elif fgrep -qa '@@comment ORIGIN' "$file"; then
					# FreeBSD Ports
					doports_fbsd "$dir"
				elif fgrep -qa '@@comment portdir=' "$file"; then
					# MirPorts Framework
					doports_openmir "$dir" 1
				elif fgrep -qa '@@comment subdir=' "$file"; then
					# OpenBSD Ports
					# MirPorts before Jan 2006
					doports_openmir "$dir" 0
				else
					print unknown ports type in "'$dir'"
				fi
				break
			done
		done
		# look for Debian package management
		(whence -p dpkg-query >&- 2>&- && \
		    dpkg-query -Wf '${Section}\t${Package}\t${Version}\n') |&
		while IFS='	' read -pr section name ver; do
			qs="$qs&port[]=$(uri_escape "$section"):$(uri_escape \
			    "$name-$(print -nr -- "$ver" | tr ':-' ';_')")"
		done
		# send info about any found binary packages now at once
		[[ -z $qs ]] || report_ports
	fi
	uri="disable_token.php?key=$stats_key&token=$stats_token"
	res=$(sleep $((RANDOM % 99 + 21)); $fetch "$rpt$uri" 2>/dev/null)
	logit "done $uri -> ${res:-ERROR}"
	if (( ok )); then
		stats_report_time=$(date +%s)
		print "Reported successfully on $(date)"
	fi
else
	print "Nothing to do for now..."
fi
install -c -o root -g staff -m 640 /dev/null /var/db/bsdstats.new
print "stats_key=$stats_key" >/var/db/bsdstats.new
print "stats_token=$stats_token" >>/var/db/bsdstats.new
print "stats_token_time=$stats_token_time" >>/var/db/bsdstats.new
print "stats_report_time=$stats_report_time" >>/var/db/bsdstats.new
print "stats_rcsid_code='$rcsid_code'" >>/var/db/bsdstats.new
print "stats_uname_code='$uname_code'" >>/var/db/bsdstats.new
mv -f /var/db/bsdstats.new /var/db/bsdstats
(( ok )) || print some failures occured, check /var/log/messages, tag bsdstats
print "done, used token from $stats_token_time" \
    "($(timet2date $stats_token_time))"
return 0
@


1.60
log
@be a little more robust
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.59 2007/09/28 11:33:19 tg Rel $
d95 1
a95 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.59 2007/09/28 11:33:19 tg Rel $'
@


1.59
log
@ok this didn‘t work out, do it properly
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.58 2007/09/28 11:26:47 tg Exp $
d4 1
a4 1
# Copyright (c) 2007
d95 1
a95 1
rcsid_code='$MirOS: srx/share/misc/bsdstats,v 1.58 2007/09/28 11:26:47 tg Exp $'
d329 5
@


1.59.2.1
log
@MFC: bsdstats removal
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.59 2007/09/28 11:33:19 tg Rel $
d95 1
a95 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.59 2007/09/28 11:33:19 tg Rel $'
@


1.58
log
@silently skip dirs like /usr/ports/databases/db/pkg/ when looking for
possible occurences of /var/db/pkg/-alikes
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.57 2007/09/28 01:59:46 tg Exp $
d95 1
a95 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.57 2007/09/28 01:59:46 tg Exp $'
d405 1
a405 1
			[[ -e $dir/+CONTENTS ]] || continue
d407 4
a410 1
				if [[ -e ${file%CONTENTS}BUILD_INFO ]]; then
@


1.57
log
@extend globbing
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.56 2007/08/15 15:11:34 tg Exp $
d95 1
a95 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.56 2007/08/15 15:11:34 tg Exp $'
d405 1
a405 1
			[[ -e $dir ]] || continue
@


1.56
log
@“uname -a” output may contain parenthesēs
10x Uwe Hermann from Debian GNU/kFreeBSD for reporting
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.55 2007/08/07 17:02:03 tg Exp $
d95 1
a95 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.55 2007/08/07 17:02:03 tg Exp $'
d404 1
a404 1
		for dir in /{,usr/,opt/}*/{db/pkg,pkgdb}; do
@


1.55
log
@fix log message
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.54 2007/08/07 16:58:32 tg Exp $
d95 1
a95 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.54 2007/08/07 16:58:32 tg Exp $'
d452 1
a452 1
print "stats_uname_code=$uname_code" >>/var/db/bsdstats.new
@


1.54
log
@http proxy support
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.53 2007/08/03 09:27:13 tg Exp $
d95 1
a95 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.53 2007/08/03 09:27:13 tg Exp $'
d199 1
a199 1
	logit "ports report to $host:$port with '$qs' -> ${res:-ERROR}"
@


1.53
log
@I don't know why “uname -l” failed on herc for a while, but the sysctl will
work; use 2>&- et al. more consistently too
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.52 2007/08/03 00:49:35 tg Exp $
d95 1
a95 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.52 2007/08/03 00:49:36 tg Exp $'
a153 1
	#XXX honour http_proxy host/port
d167 21
d191 1
a191 1
User-Agent: bsdstats $rcsid_code
d198 1
a198 1
	    print -r -- "$qs" | nc $host $port 2>/dev/null)
@


1.52
log
@report anonymous cowards as such
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.51 2007/05/26 22:55:30 tg Exp $
d95 1
a95 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.51 2007/05/26 22:55:30 tg Exp $'
d322 2
a323 1
		version=$(uname -l)
d359 1
a359 2
		integer ncpus=$(sysctl -n hw.ncpu)
		cpu=$(sysctl -n hw.model)
d361 2
@


1.51
log
@ah, of course my grep -o emulation will produce stderr output, ignore it
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.50 2007/05/26 22:21:27 tg Exp $
d52 2
d95 2
a96 2
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.50 2007/05/26 22:21:27 tg Exp $'
uname_code=$(uri_escape "$(uname -a | tr -d '\012\015')$stats_sysadd")
d351 1
a351 1
	uri="$uri&rel=$(uri_escape $version$stats_sysadd)"
@


1.50
log
@fix on freebsd, thanks Jürgen “nox” Lock
also, in general, use grep -a (who knows what these OtherBSD guys do…)
and don't use grep -o as it's unportable (who knows where MirPorts run on…)

anecdotes:
• on the BSDstats website, in lynx:
  | [30]Binary file /var/db/pkg/font-screen-cyrillic-1.0.1/+CONTENTS matches
• in IRC
  | 22:07⎜<nox> grep (GNU grep) 2.5.1-FreeBSD
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.49 2007/05/22 19:34:37 tg Exp $
d93 1
a93 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.49 2007/05/22 19:34:37 tg Exp $'
d209 1
a209 1
	    xargs -0 grep -a '^@@comment ORIGIN' "" | \
d220 1
a220 1
	    xargs -0 grep -a '^@@comment.*subdir=' "" | \
@


1.49
log
@be less redundant
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.48 2007/05/21 18:22:53 tg Exp $
d93 1
a93 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.48 2007/05/21 18:22:53 tg Exp $'
d209 1
a209 1
	    xargs -0 grep -o '^@@comment.*ORIGIN' | \
d220 1
a220 1
	    xargs -0 grep -o '^@@comment.*subdir=' | \
d386 1
a386 1
				elif fgrep -q '@@comment ORIGIN' "$file"; then
d389 1
a389 1
				elif fgrep -q '@@comment portdir=' "$file"; then
d392 1
a392 1
				elif fgrep -q '@@comment subdir=' "$file"; then
@


1.48
log
@fix bug applying to reporting packages installed via FreeBSD Ports, OpenBSD
Ports, MirPorts Framework: misreport if exactly _one_ package was installed
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.47 2007/05/21 18:05:20 tg Exp $
d93 1
a93 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.47 2007/05/21 18:05:20 tg Exp $'
d169 1
a169 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.47 2007/05/21 18:05:20 tg Exp $
@


1.47
log
@correct function order (config -> parse user config -> initial setup and
sanitisation -> helper functions -> set up basic things -> user/workhorse
functions -> actual code)
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.46 2007/05/21 17:53:12 tg Rel $
d93 1
a93 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.46 2007/05/21 17:53:12 tg Rel $'
d169 1
a169 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.46 2007/05/21 17:53:12 tg Rel $
d209 1
a209 1
	    xargs -0 grep '^@@comment.*ORIGIN' | \
d220 1
a220 1
	    xargs -0 grep '^@@comment.*subdir=' | \
@


1.46
log
@• now that uri_escape() function escapes all shell meta-characters, we can
  drop the dependency on b64encode
• document that it escapes all shell meta-characters
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.45 2007/05/19 20:29:53 tg Exp $
d60 34
a93 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.45 2007/05/19 20:29:53 tg Exp $'
a145 33
# RFC 2396 and some optional characters _plus_ apostrophe
# -> escapes all shell meta-characters as well
function uri_escape {
	print -nr -- "$*" | sed -e '
	    s.%.%25.g
	    s.;.%3B.g
	    s./.%2F.g
	    s.?.%3F.g
	    s.:.%3A.g
	    s.@@.%40.g
	    s.&.%26.g
	    s.=.%3D.g
	    s.+.%2B.g
	    s.\$.%24.g
	    s.,.%2C.g
	    s.	.%09.g
	    s. .%20.g
	    s.<.%3C.g
	    s.>.%3E.g
	    s.#.%23.g
	    s.".%22.g
	    s.{.%7B.g
	    s.}.%7D.g
	    s.|.%7C.g
	    s.\\.%5C.g
	    s.\^.%5E.g
	    s.\[.%5B.g
	    s.\].%5D.g
	    s.`.%60.g
	    s.'\''.%27.g
	'
}

d169 1
a169 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.45 2007/05/19 20:29:53 tg Exp $
@


1.45
log
@ok, prefer a wget in /usr/bin over /usr/bin/ftp, since all the traditional
BSDs install GNU wget only via ports, and this is a safe way to override –
in case ftp is broken – or for not-quite-BSDs like GNU ones.
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.44 2007/05/19 20:27:42 tg Exp $
d60 2
a61 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.44 2007/05/19 20:27:42 tg Exp $'
d113 2
a114 1
# RFC 2396
d169 1
a169 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.44 2007/05/19 20:27:42 tg Exp $
a286 8
if print test | uuencode -m - >/dev/null 2>&1; then
	uname_code=$(uri_escape "ok:$(uname -a | tr -d '\012\015')")
else
	print warning: uuencode missing or incomplete
	uname_code=$(uri_escape "not:$RANDOM$(date +%s)")
fi
uname_code=$uname_code$(uri_escape "$stats_sysadd")

@


1.44
log
@• on FreeBSD, prefer fetch(1) over ftp(1) as it does https:// too
• on others, scan for fetch before scanning for ftp if it doesn't
  exist in the default path, but after wget…

XXX which BSDs have a /usr/bin/ftp that doesn't do http:// ?
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.43 2007/05/19 20:15:29 tg Exp $
d60 1
a60 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.43 2007/05/19 20:15:29 tg Exp $'
d76 2
d167 1
a167 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.43 2007/05/19 20:15:29 tg Exp $
@


1.43
log
@• check if we're really run with mksh
• fix my unportability in the pkgsrc case, tested on DragonFly by TGEN
• fix fbsd-style device reporting, tested on DragonFly by TGEN
• fix a missing URI part in a logger call
• fix a stupid syntax error
• fix a thinko preventing pkgsrc scans from running, tested on MirOS

Thanks to TGEN (Thomas E. Spanjaard) for testing despite disliking bsdstats
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.42 2007/05/19 19:11:44 tg Exp $
d60 1
a60 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.42 2007/05/19 19:11:44 tg Exp $'
d74 3
a76 1
if [[ -x /usr/bin/ftp ]]; then
d80 2
d165 1
a165 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.42 2007/05/19 19:11:44 tg Exp $
@


1.42
log
@• support FreeBSD ports (specs from scrappy's script, code by myself)
• support OpenBSD ports (maybe; they are a derivate of MirPorts after all)
• support FreeBSD (DragonFly, DesktopBSD, but not GNU/kFreeBSD) device
  reporting (code from scrappy's script, not optimised, untested)
• clarify that DesktopBSD has that very string as uname and doesn't need
  any special handling by telephoning with Daniel Seuffert
• support looking for ports/packages in more places

I guess PC-BSD also has just that, a patched uname, so that our script now
has all the functionality of scrappy's plus some (or rather: much) more. I
also enabled FreeBSD-style PCI device reporting not based upon the OS name
but based upon if the programme in question exists.
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.41 2007/05/18 07:31:24 tg Exp $
d34 8
d60 1
a60 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.41 2007/05/18 07:31:24 tg Exp $'
d161 1
a161 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.41 2007/05/18 07:31:24 tg Exp $
d188 2
a189 2
		eval $(print 'all:\n\t@@print -r -- "dir=${PKGPATH:Q}' \
		    'flavours=${PKG_OPTIONS:Q}"\n.include "'"$fn\"" | \
d243 4
a246 7
	for line in $(/usr/sbin/pciconf -l); do
		qs="$qs&dev[]=$(uri_escape "$(echo "$line" | \
		    awk -F\@@ '{print $1}')")"
		qs="$qs:$(uri_escape "$(echo "$line" | \
		    awk '{print $4}' | cut -c8-15)")"
		qs="$qs:$(uri_escape "$(echo "$line" | \
		    awk '{print $2}' | cut -c9-14)")"
d374 1
a374 1
			logit "devices report $uri -> ${res:-ERROR}"
d381 1
a381 1
			[[ -e $dir || continue ]]
d383 1
a383 1
				if [[ -e ${dir%CONTENTS}BUILD_INFO ]]; then
@


1.41
log
@ok, this quoto is rather stupid, but kind of hard to see
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.40 2007/05/17 02:16:11 tg Exp $
d52 1
a52 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.40 2007/05/17 02:16:11 tg Exp $'
d153 1
a153 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.40 2007/05/17 02:16:11 tg Exp $
d165 80
d360 12
d374 21
a394 49
		# report MirPorts Framework installed binary packages
		(find /usr/mpkg/db/pkg -name +CONTENTS -print0 2>/dev/null | \
		    xargs -0 grep '^@@comment.*subdir=' | \
		    sed 's!^[^:]*/\([^/:]*\)/+CONTENTS:.*subdir=\([^, ]*\).*$!\1:\2!' | \
		    sort) |&	# interesting that we _need_ the parens here oO
		while IFS=: read -pr name dir; do
			qs="$qs&port[]=$(uri_escape "${dir%%/*}")"
			# convert stem-version-pl-flavour-...
			# to stem-version_MirPorts_pl,flavour,...
			stem=${name%%-[0-9]*}
			name=${name#$stem-}		# version-pl-flavour
			vers=${name%%-[a-zA-z]*}	# version-pl
			name=${name#$vers}		# -flavour
			vers=${vers%-+([0-9])}-MirPorts${vers#${vers%-+([0-9])}}
			vers=$(print -r "$vers" | tr - _)
			name=$(print -r -- "$name" | tr - ,)
			qs="$qs:$(uri_escape "$stem-$vers$name")"
		done
		# scan for NetBSD pkgsrc installed binary packages
		res=
		for dir in /usr/pkg/pkgdb /usr/pkg/db/pkg /var/db/pkg; do
			[[ -e $dir ]] || continue
			for file in $dir/*/+BUILD_INFO; do
				[[ -e $file ]] || continue
				res=y
				break 2
			done
		done
		[[ -n $res ]] || dir=/nonexistent
		(find $dir -name +BUILD_INFO 2>/dev/null | sort) |&
		while IFS= read -pr fn; do
			name=${fn%/*}		# directory
			name=${name##*/}	# pkgname
			[[ $name = *@@(nb)+([0-9]) ]] || name=${name}nb0
			# look for pkgsrc's bmake
			bmake=/usr/pkg/bin/bmake
			[[ -x $bmake ]] || bmake=$(whence -p bmake 2>&-)
			# use BSD make (usually in /usr/bin), but not GNU make
			[[ -x $bmake ]] || [[ $opsys = GNU* ]] || \
			    bmake=$(whence -p make 2>&-)
			# (we could also check --version output tho)
			[[ -x $bmake ]] || print warning: cannot find bmake
			[[ -x $bmake ]] || break
			eval $(print 'all:\n\t@@print -r -- "dir=${PKGPATH:Q}' \
			    'flavours=${PKG_OPTIONS:Q}"\n.include "'"$fn\"" | \
			    $bmake -f - all)	# subdir, flavours
			qs="$qs&port[]=$(uri_escape "${dir%%/*}")"
			for flavour in $flavours; do
				name=$name,$flavour
a395 1
			qs="$qs:$(uri_escape "$name")"
d397 1
a397 1
		# look for Debian installed software
d401 2
a402 3
			qs="$qs&port[]=$(uri_escape "$section")"
			name="$name-$(print -nr -- "$ver" | tr ':-' ';_')"
			qs="$qs:$(uri_escape "$name")"
@


1.40
log
@make uri_escape into a shell safe escape (add ' – CR and LF still need to
be stripped tho…) and remove some now-superfluous quoting; also be robust
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.39 2007/05/17 02:09:32 tg Exp $
d52 1
a52 1
rcsid_code='$MirOS: src/share/misc/bsdstats,v 1.39 2007/05/17 02:09:32 tg Exp $'
d126 1
a126 1
	    s.'.%27.g
d153 1
a153 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.39 2007/05/17 02:09:32 tg Exp $
@


1.39
log
@• always report when the version of the _script_ changes, too
• be more robust
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.38 2007/05/17 02:07:19 tg Exp $
d52 1
a52 1
rcsid_code='$MirOS$'
d126 1
d153 1
a153 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.38 2007/05/17 02:07:19 tg Exp $
d195 1
a195 1
	uname_code=ok:$(uname -a | uuencode -m - | tr -d '\012\015 ')
d198 1
a198 1
	uname_code=not:$RANDOM$(date +%s)
d200 1
a200 1
uname_code=$uname_code$stats_sysadd
d360 2
a361 2
print "stats_rcsid_code='$rcsid_code'" >>/var/db/bsdstats.new	# needs ''
print "stats_uname_code=\"$uname_code\"" >>/var/db/bsdstats.new	# needs ""
@


1.38
log
@oops remove spurious output
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.37 2007/05/17 00:42:54 tg Exp $
a33 7
export TZ=UTC PATH=/bin:/usr/bin:/sbin:/usr/sbin
for dir in /usr/mpkg /usr/pkg /usr/local /sw; do
	for subdir in bin sbin; do
		[[ -e $dir/$subdir ]] && PATH=$PATH:$dir/$subdir
	done
done

d45 9
d152 1
a152 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.37 2007/05/17 00:42:54 tg Exp $
d205 1
d359 2
a360 1
print "stats_uname_code=\"$uname_code\"" >>/var/db/bsdstats.new
@


1.37
log
@just don't care about the 1st of the month and report 3 times a month,
with about 10 days distance, since we don't run from anacron anyway,
and the first-of-the-month reporting is broken for several reasons;
plus, this keeps better track of the software people have installed,
and so on.
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.36 2007/05/16 20:40:34 tg Exp $
d129 1
a129 1
	if ! whence -p nc; then
d150 1
a150 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.36 2007/05/16 20:40:34 tg Exp $
@


1.36
log
@use a sysctl to get the machine (arch)
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.35 2007/05/16 20:38:05 tg Exp $
d150 1
a150 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.35 2007/05/16 20:38:05 tg Exp $
d220 1
a220 2
let now-=86400	# account for time zone differences
if (( $(timet2date $stats_report_time +%Y%m) < $(timet2date $now +%Y%m) )); then
@


1.35
log
@use some better quoting and error handling
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.34 2007/05/15 20:51:45 tg Exp $
d150 1
a150 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.34 2007/05/15 20:51:45 tg Exp $
d223 3
a225 1
	arch=$(uname -m)
a226 1
		arch=$(uname -p)
@


1.34
log
@• map debian epochs correctly
• only report ports if we got netcat
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.33 2007/05/15 20:20:44 tg Exp $
d137 1
a137 1
	port=0
d146 1
a146 1
	[[ $port -lt 1 || $port -gt 65535 ]] && port=80
d150 1
a150 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.33 2007/05/15 20:20:44 tg Exp $
d167 2
a168 2
elif [[ $host = *bsdstats.org ]]; then
	res=$(host -t txt bsdstats.org. & dnspid=$!; \
d170 2
a171 2
	[[ $res = *@@(not\ found)* || $res = *NXDOMAIN* ]] && res=
	[[ $res = *UP* ]] || res=$(host -t txt bsdstats.org. & dnspid=$!; \
d173 1
a173 1
	[[ $res = *@@(not\ found)* || $res = *NXDOMAIN* ]] && res=
d179 1
a179 1
	res=$(host -t a ${host%%+(.)}. & dnspid=$!; \
d181 2
a182 2
	[[ $res = *@@(not\ found)* || $res = *NXDOMAIN* ]] && res=
	[[ $res = *UP* ]] || res=$(host -t a ${host%%+(.)}. & dnspid=$!; \
d184 1
a184 1
	[[ $res = *@@(not\ found)* || $res = *NXDOMAIN* ]] && res=
d269 1
a269 1
		(( ncpus < 2 )) && let ncpus=1
d312 9
d323 1
a323 1
			    make -f - all)	# subdir, flavours
d356 1
a356 1
print "stats_uname_code=$uname_code" >>/var/db/bsdstats.new
@


1.33
log
@make this work with alias sleep=true
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.32 2007/05/15 20:02:49 tg Exp $
d129 4
d150 1
a150 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.32 2007/05/15 20:02:49 tg Exp $
d326 1
a326 1
			name="$name-$(print -nr -- "$ver" | tr - _)"
@


1.32
log
@first round of fixes
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.31 2007/05/15 19:57:47 tg Exp $
d146 1
a146 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.31 2007/05/15 19:57:47 tg Exp $
d165 1
a165 1
	    (builtin sleep 12; kill $dnspid) >&- 2>&- & wait $dnspid)
d168 1
a168 1
	    (builtin sleep 12; kill $dnspid) >&- 2>&- & wait $dnspid)
d176 1
a176 1
	    (builtin sleep 12; kill $dnspid) >&- 2>&- & wait $dnspid)
d179 1
a179 1
	    (builtin sleep 12; kill $dnspid) >&- 2>&- & wait $dnspid)
@


1.31
log
@scan for Debian GNU/k*BSD software packages, too
(not tested…)
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.30 2007/05/15 19:56:52 tg Exp $
d41 4
a44 1
[[ -s /var/db/bsdstats && -O /var/db/bsdstats ]] && . /var/db/bsdstats
d50 1
d146 1
a146 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.30 2007/05/15 19:56:52 tg Exp $
d165 1
a165 1
	    (sleep 12; kill $dnspid) >&- 2>&- & wait $dnspid)
d168 1
a168 1
	    (sleep 12; kill $dnspid) >&- 2>&- & wait $dnspid)
d176 1
a176 1
	    (sleep 12; kill $dnspid) >&- 2>&- & wait $dnspid)
d179 1
a179 1
	    (sleep 12; kill $dnspid) >&- 2>&- & wait $dnspid)
a194 3
stats_token=
integer stats_token_time=0
integer stats_report_time=0
d210 1
a210 2
	res=$(sleep $((RANDOM % 99 + 21)); \
	    $fetch "$rpt$uri" 2>/dev/null)
@


1.30
log
@• be more flexible
• use return not exit
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.29 2007/05/15 19:12:28 tg Exp $
d142 1
a142 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.29 2007/05/15 19:12:28 tg Exp $
d317 8
@


1.29
log
@• on my Debian GNU/kFreeBSD system, DNS requests via host(1) seem to hang
  “forever”, so use a means to wait no longer than 2x12 seconds for them
• only send a second DNS request if the first didn't already succeed
• check for bind9 style failure output as well
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.28 2007/05/15 01:09:10 tg Exp $
d24 3
d29 5
d35 24
d62 4
a65 2
elif [[ -x /usr/bin/wget ]]; then
	fetch='/usr/bin/wget -qO -'
d68 1
a68 1
	exit 1
d72 3
a74 1
	datetype=gnu
d76 3
d82 9
a90 8
function timet2date
{
	if [[ $datetype = gnu ]]; then
		date -d @@$*
	else
		date -r $*
	fi
}
d93 1
a93 2
function uri_escape
{
d124 1
a124 2
function report_ports
{
d142 1
a142 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.28 2007/05/15 01:09:10 tg Exp $
d150 1
a150 2
	print -r "ports report to $host:$port with '$qs' -> ${res:-ERROR}" | \
	    logger -t bsdstats
d157 3
a159 1
[[ -x /usr/bin/host ]] && if [[ $host = *bsdstats.org ]]; then
d182 9
d194 2
a195 4
[[ -s /var/db/bsdstats ]] && . /var/db/bsdstats
print "last report time was: $stats_report_time ($(timet2date $stats_report_time))"
bsdstats_flags=$(. /etc/rc.conf; echo "$bsdstats_flags")
uname_code=$(uname -a | uuencode -m - | tr -d '\012\015 ')$stats_sysadd
d203 4
d211 1
a211 1
	print -r "firstrun $uri -> ${res:-ERROR}" | logger -t bsdstats
a217 2
	opsys=$(uname -s)
	uname -M 2>&1 | fgrep MirBSD >/dev/null 2>&1 && opsys=MirBSD
a218 1
	[[ -n $stats_sysadd ]] && version=$version$stats_sysadd
d223 4
a226 6
		    version=$version.Debian-$(tr / _ </etc/debian_version)
	elif [[ $opsys = MirBSD && -n $stats_sysadd ]]; then
		uname -M 2>&1 | fgrep MirBSD >/dev/null 2>&1 && \
		    version=$(uname -M | sed 's/^.*BSD #\([0-9]\).*/\1/' \
		    )$stats_sysadd
	elif [[ $opsys = MirBSD ]]; then
d248 1
a248 1
			(*)	version=${version}num.$((pl/2-63))ies ;;
d253 7
a259 7
	res=$(sleep $((RANDOM % 99 + 21)); \
	    $fetch "$rpt$uri" 2>/dev/null)
	print -r "init $uri -> ${res:-ERROR}" | logger -t bsdstats
	uri="report_system.php?token=$stats_key&key=$stats_token&rel=$(uri_escape $version)&arch=$arch&opsys=$opsys"
	res=$(sleep $((RANDOM % 99 + 21)); \
	    $fetch "$rpt$uri" 2>/dev/null)
	print -r "system report $uri -> ${res:-ERROR}" | logger -t bsdstats
d262 2
a264 1
		integer ncpus=$(sysctl -n hw.ncpu)
d266 5
a270 4
		uri="report_cpu.php?token=$stats_key&key=$stats_token&cpus=$ncpus&vendor=$(print -r -- "$cpu" | cut -d' ' -f1)&cpu_type=$(uri_escape $(print -r -- "$cpu" | cut -d' ' -f2-))"
		res=$(sleep $((RANDOM % 99 + 21)); \
		    $fetch "$rpt$uri" 2>/dev/null)
		print -r "cpu report $uri -> ${res:-ERROR}" | logger -t bsdstats
d272 2
a274 1
		qs=
d317 1
a317 1
		# report any found binary packages now at once
d321 6
a326 5
	res=$(sleep $((RANDOM % 99 + 21)); \
	    $fetch "$rpt$uri" 2>/dev/null)
	print -r "done $uri -> ${res:-ERROR}" | logger -t bsdstats
	(( ok )) && stats_report_time=$(date +%s)
	(( ok )) && print "Reported successfully on $(date)"
d338 3
a340 1
print "done, used token from $stats_token_time ($(timet2date $stats_token_time))"
@


1.28
log
@support MP reporting (e.g. for kFreeBSD)
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.27 2007/05/10 00:32:32 tg Exp $
d104 1
a104 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.27 2007/05/10 00:32:32 tg Exp $
d121 6
a126 2
	res=$(host -t txt bsdstats.org 2>/dev/null; sleep 3; \
	    host -t txt bsdstats.org 2>/dev/null)
d132 7
a138 2
	res=$(host -t a $host 2>/dev/null; sleep 3; host -t a $host 2>/dev/null)
	if [[ $res != *$host* ]]; then
@


1.27
log
@support Debian GNU/kFreeBSD as of today (you need wget, sharutils, etc.)
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.26 2007/05/09 19:03:48 tg Exp $
d104 1
a104 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.26 2007/05/09 19:03:48 tg Exp $
d209 3
a211 1
		uri="report_cpu.php?token=$stats_key&key=$stats_token&cpus=1&vendor=$(print -r -- "$cpu" | cut -d' ' -f1)&cpu_type=$(uri_escape $(print -r -- "$cpu" | cut -d' ' -f2-))"
@


1.26
log
@fix quoting problem (twice was needed)
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.25 2007/05/09 18:30:42 tg Exp $
d28 24
d104 1
a104 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.25 2007/05/09 18:30:42 tg Exp $
d120 1
a120 1
if [[ $host = *bsdstats.org ]]; then
d138 1
a138 1
print "last report time was: $stats_report_time ($(date -r $stats_report_time))"
d140 1
a140 1
uname_code=$(uname -a | b64encode -r | tr -d '\012\015')$stats_sysadd
d151 1
a151 1
	    /usr/bin/ftp -Vo - "$rpt$uri" 2>/dev/null)
d158 11
a168 3
if (( $(date -r $stats_report_time +%Y%m) < $(date -r $now +%Y%m) )); then
	if [[ -n $stats_sysadd ]]; then
		version=$(uname -r)$stats_sysadd
d172 1
a172 1
	else
a197 2
	opsys=$(uname -s)
	uname -M 2>&1 | fgrep MirBSD >/dev/null 2>&1 && opsys=MirBSD
d200 1
a200 1
	    /usr/bin/ftp -Vo - "$rpt$uri" 2>/dev/null)
d202 1
a202 1
	uri="report_system.php?token=$stats_key&key=$stats_token&rel=$(uri_escape $version)&arch=$(uname -m)&opsys=$opsys"
d204 1
a204 1
	    /usr/bin/ftp -Vo - "$rpt$uri" 2>/dev/null)
d211 1
a211 1
		    /usr/bin/ftp -Vo - "$rpt$uri" 2>/dev/null)
d263 1
a263 1
	    /usr/bin/ftp -Vo - "$rpt$uri" 2>/dev/null)
d278 1
a278 1
print "done, used token from $stats_token_time ($(date -r $stats_token_time))"
@


1.25
log
@• report pkgsrc® installed packages (this works at least on MirOS with
  pkgsrc's db dir in either /usr/pkg/pkgdb or /var/db/pkg; it should
  work on OpenBSD (or other OSes) as well because it searches for pkgsrc-
  specific files and won't mistake OpenBSD packages in /var/db/pkg)
• quieten find(1) if the packaging system isn't installed (ENOENT)
• normalise $PATH to not contain /usr/local or a packaging system's paths
• add licence, for this contains much original work by me
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.24 2007/04/22 13:49:48 tg Exp $
d80 1
a80 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.24 2007/04/22 13:49:48 tg Exp $
d219 2
a220 2
			eval $(print 'all:\n\t@@print -r -- dir=${PKGPATH:Q}' \
			    'flavours=${PKG_OPTIONS:Q}\n.include "'"$fn\"" | \
@


1.24
log
@• add $stats_sysadd to uname_code because it is, in effect, different (this is
  responsible for not making the -firstrun ones go away)
• move setting bsdstats_flags and uname_code to past sourcing /var/db/bsdstats
  for security reasons (XXX could do more, but that file's root's, anyway)
• stats_uname_code is shell-safe (b64 and $stats_sysadd)
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.23 2007/04/19 18:53:29 tg Exp $
d3 20
d26 1
a26 1
export TZ=UTC PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/mpkg/bin
d80 1
a80 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.23 2007/04/19 18:53:29 tg Exp $
d186 1
a186 1
		(find /usr/mpkg/db/pkg -name +CONTENTS -print0 | \
d203 26
@


1.23
log
@(try to) handle $rpt URIs of the form
• http://rpt.bsdstats.org/scripts/		(already done before)
• http://rpt.bsdstats.org:80/scripts/
• http://1.2.3.4/scripts/			(already done before)
• http://1.2.3.4:80/scripts/
• http://[1.2.3.4]/scripts/
• http://[1.2.3.4]:80/scripts/
• http://[2001:aaaa:bbbb:cccc::1]/scripts/
• http://[2001:aaaa:bbbb:cccc::1]:80/scripts/
• http://2001:aaaa:bbbb:cccc::1:80/scripts/	(already done before)

we still don't do
• https://…
• use $http_proxy env variable
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.22 2007/04/19 12:59:39 tg Exp $
d60 1
a60 1
User-Agent: bsdstats \$MirOS: src/share/misc/bsdstats,v 1.22 2007/04/19 12:59:39 tg Exp $
a89 1
bsdstats_flags=$(. /etc/rc.conf; echo "$bsdstats_flags")
a92 1
uname_code=$(uname -a | b64encode -r | tr -d '\012\015')
d95 2
d199 1
a199 1
print "stats_uname_code='$uname_code'" >>/var/db/bsdstats.new
@


1.22
log
@implement ports reporting, now we only miss device reporting relative to
the freebsd scrappy thing (and I did GREAT effort to map flavours to the
system, because fbsd ports don't know them)

oh, and: $rpt ports other than 80 and http_proxy isn't yet supported – I
wanted to make this work fast (still took me 2 hrs tho) to prove concept
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.21 2007/03/13 02:00:22 tg Exp $
d43 1
a43 1
	#XXX honour http_proxy host/port and $rpt port
d47 10
d60 1
a60 1
User-Agent: bsdstats \$MirOS$
d67 2
a68 2
	    print -r -- "$qs" | nc $host 80 2>/dev/null)
	print -r "ports report to $host:80 with '$qs' -> ${res:-ERROR}" | \
@


1.21
log
@major OOPS - set the wrong variable to 0… oeps
@
text
@d1 2
a2 2
# $MirOS: src/share/misc/bsdstats,v 1.20 2007/03/12 22:32:38 tg Exp $
# $FreeBSD: /usr/local/www/cvsroot/FreeBSD/ports/sysutils/bsdstats/files/300.statistics,v 1.33 2006/10/04 04:51:41 scrappy Exp $
d40 23
d154 20
@


1.20
log
@be verbose if we reported successfully, with failure (already existing) or not
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.19 2007/03/11 18:51:02 tg Exp $
d65 1
a66 1
[[ $stats_uname_code = $uname_code ]] || stats_token_time=0
@


1.19
log
@• only escape (some¹) chars mentioned in RFC 2396 to make URIs shorter²
  and have one fork'n'exec less
• no 2>&- because it might break things

¹) 0x00 - 0x1F and 0x7F must be encoded too; atm I only encode from
   this set: 0x09
²) preparation for reporting of ports to the stats server
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.18 2007/03/09 13:46:11 tg Exp $
d137 3
@


1.18
log
@if “uname -a” output changes, also do a report
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.17 2007/03/04 05:48:53 tg Exp $
d8 1
d11 27
a37 1
	print -nr -- "$*" | hexdump -ve '1/1 "-%02x"' | sed s/-/%/g
d44 2
a45 2
	res=$(host -t txt bsdstats.org 2>&-; sleep 3; \
	    host -t txt bsdstats.org 2>&-)
d51 1
a51 1
	res=$(host -t a $host 2>&-; sleep 3; host -t a $host 2>&-)
d73 2
a74 1
	res=$(sleep $((RANDOM % 99 + 21)); /usr/bin/ftp -Vo - "$rpt$uri" 2>&-)
d116 2
a117 1
	res=$(sleep $((RANDOM % 99 + 21)); /usr/bin/ftp -Vo - "$rpt$uri" 2>&-)
d120 2
a121 1
	res=$(sleep $((RANDOM % 99 + 21)); /usr/bin/ftp -Vo - "$rpt$uri" 2>&-)
d127 2
a128 1
		res=$(sleep $((RANDOM % 99 + 21)); /usr/bin/ftp -Vo - "$rpt$uri" 2>&-)
d133 2
a134 1
	res=$(sleep $((RANDOM % 99 + 21)); /usr/bin/ftp -Vo - "$rpt$uri" 2>&-)
@


1.17
log
@add support for #7-stable/sparc (at least)
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.16 2006/11/09 02:33:25 tg Exp $
d34 1
d39 1
d111 1
@


1.16
log
@* scrappy told me that the stats are cleaned up monthly at the 1st, so
  do the report at the beginning of the month, as early as possible,
  but not on the 1st of the month because he might not use UTC…
* remove initial delay, like upstream
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.15 2006/10/07 22:20:47 tg Exp $
d54 3
d62 1
d83 2
d88 1
a88 1
	uri="report_system.php?token=$stats_key&key=$stats_token&rel=$(uri_escape $version)&arch=$(uname -m)&opsys=$(uname -s)"
@


1.15
log
@Requested by bsiegert@@ via eMail and <homsn> via IRC:
During installation, ask the user whether he wants to send information
about the hardware used to bsdstats.org and can disable that, in which
case rc.conf.local will be amended with bsdstats_flags="" (empty), the
default value is "YES". To entirely disable sending ANY information to
bsdstats.org, the admin has to set it to "NO" in /etc/rc.conf.local. A
deletion of /usr/share/misc/bsdstats has already resulted in disabling
the code, and continues to do so.

bsiegert@@ disagrees with this practice and wants the installation-time
question to be able to deactivate sending any information. I heard and
noticed the complaint and hereby acknowledge it, but decided to never-
theless go by with this method. I have discussed it through with Desk-
topBSD's Daniel Seuffert in Essen (on a conference), and Marc G. Four-
nier (the bsdstats.org man) has agreed to our proposal.

Please note that the information sent is *only*:
* one of your public IPv4 (or IPv6) addresses
* during the first run, 32 bytes of data from /dev/arandom used to ob-
  tain a "token"
* during all runs, the "key" from above and the "token" returned (this
  is a measure to estimate the number of MirOS installations)
* during all runs, the version of the operating system, i.e.
  - MirOS #9{semel,bis,ter,quater,...}
  - MirOS #9-stable
  - MirOS #9-current
  - MirOS #9-livecd
* unless deactivated, the output of "sysctl hw.model"
* unless deactivated, in the future (not yet specified) PCI device in-
  formation (most likely: PCIID (8 hexadecimal digits that are the sa-
  me for all exemplars/specimen of a type of hardware device), name of
  the device driver (e.g. vga for any vga(4) device), nothing else).
  This is, however, not yet implemented.

The MirOS Project does not have access to the raw data. We do not have
access to data the general public has access to. Only output of stati-
stics is ever published, no keys, tokens or IP addresses. See the web-
site of BSDstats for details. We try hard to not invade privacy.
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.14 2006/10/07 21:55:40 tg Exp $
d50 2
a51 7
if (( (now - 69) < stats_token_time )); then
	let sleeptime='69 - (now - stats_token_time)'
	print -nr "initial delay of $sleeptime seconds... "
	sleep $sleeptime
	print finished sleeping
fi
if (( stats_report_time <= (now - (14 * 86400) + 7200) )); then
@


1.14
log
@sync with bsdstats.org code; export PATH; use TXT record if bsdstats.org
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.13 2006/10/07 21:47:36 tg Exp $
d30 1
d91 7
a97 5
	cpu=$(sysctl -n hw.model)
	uri="report_cpu.php?token=$stats_key&key=$stats_token&cpus=1&vendor=$(print -r -- "$cpu" | cut -d' ' -f1)&cpu_type=$(uri_escape $(print -r -- "$cpu" | cut -d' ' -f2-))"
	res=$(sleep $((RANDOM % 99 + 21)); /usr/bin/ftp -Vo - "$rpt$uri" 2>&-)
	print -r "cpu report $uri -> ${res:-ERROR}" | logger -t bsdstats
	[[ $res = *OK* ]] || ok=0
@


1.13
log
@bsdstat only if we're online
modelled after scrappy's variant
@
text
@d1 2
a2 2
# $MirOS: src/share/misc/bsdstats,v 1.12 2006/10/07 03:23:23 tg Exp $
# $FreeBSD: /repoman/r/pcvs/ports/sysutils/bsdstats/files/300.statistics,v 1.30 2006/10/02 12:07:30 scrappy Exp $
d6 2
d16 13
a28 4
res=$(host -t a $host 2>&-; sleep 3; host -t a $host 2>&-)
if [[ $res != *$host* ]]; then
	print not connecting to $host: cannot resolve
	return 0
a29 1

@


1.12
log
@debugging output goes to syslog, only the important stuff to the email
also, verified this works with bsdstats.org systems as of now
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.11 2006/10/04 07:59:37 tg Exp $
d11 9
@


1.11
log
@he changed the format of the output, post-snapshot build, once again.
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.10 2006/10/04 00:15:04 tg Exp $
d25 1
a25 1
	print -r "firstrun $uri -> ${res:-ERROR}"
d66 1
a66 1
	print -r "init $uri -> ${res:-ERROR}"
d69 1
a69 1
	print -r "system report $uri -> ${res:-ERROR}"
d74 1
a74 1
	print -r "cpu report $uri -> ${res:-ERROR}"
d78 1
a78 1
	print -r "done $uri -> ${res:-ERROR}"
d87 1
a87 1
(( ok )) || print some failures occured
@


1.10
log
@yay! it works now
thanks scrappy for ICQ debugging
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.9 2006/10/03 20:34:58 tg Exp $
d70 1
a70 1
	[[ $res = OK* ]] || ok=0
d75 1
a75 1
	[[ $res = OK* ]] || ok=0
@


1.9
log
@still fails with "FAIL: no record in system" but getting closer
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.8 2006/10/03 19:09:16 tg Exp $
a3 7
print -u2 'Error:\tbsdstats.org code is currently disabled'
print -u2 '\tbecause they fubar'\''d something...'
exit 0

alias sleep=true
rm -f /var/db/bsdstats

a4 4
# ftp(1) sends HTTP/1.1 but doesn't understand Transfer-Encoding: chunked
#fetch="lynx -useragent 'MirOS ftp(1), http://mirbsd.de/, emulated by Lynx' -source"
# fixed in -current
fetch="ftp -Vo -"
d6 3
a8 16
# RFC 2396
uri_escape () {
    echo ${1+$@@} | sed -e '
        s/%/%25/g
        s/;/%3b/g
        s,/,%2f,g
        s/?/%3f/g
        s/:/%3a/g
        s/@@/%40/g
        s/&/%26/g
        s/=/%3d/g
        s/+/%2b/g
        s/\$/%24/g
        s/,/%2c/g
        s/ /%20/g
        '
a10 6
# I like this one
#function uri_escape
#{
#	print -nr -- "$*" | hexdump -ve '1/1 "-%02x"' | sed s/-/%/g
#}

d15 1
d19 1
a19 1
print "last report time was: $stats_report_time ($(date -r $stats_report_time))"
d23 2
a24 3
	sleep $((RANDOM % 120))
	uri="${rpt}getid.php?key=$stats_key"
	res=$(eval $fetch \"\$uri\" 2>&-)
d30 2
a31 2
if (( (now - 909) < stats_token_time )); then
	let sleeptime='909 - (now - stats_token_time)'
a36 1
	integer ok=1
d64 2
a65 3
	uri="${rpt}enable_token.php?key=$stats_token&token=$stats_key"
	sleep $((RANDOM % 120))
	res=$(eval $fetch \"\$uri\" 2>&-)
d67 2
a68 3
	uri="${rpt}report_system.php?token=$stats_token&key=$stats_key&rel=$(uri_escape $version)&arch=$(uname -m)&opsys=$(uname -s)"
	sleep $((RANDOM % 120))
	res=$(eval $fetch \"\$uri\" 2>&-)
d70 1
a70 1
	[[ $res = OK ]] || ok=0
d72 2
a73 3
	uri="${rpt}report_cpu.php?token=$stats_token&key=$stats_key&cpus=1&vendor=$(print -r -- "$cpu" | cut -d' ' -f1)&cpu_type=$(uri_escape $(print -r -- "$cpu" | cut -d' ' -f2-))"
	sleep $((RANDOM % 120))
	res=$(eval $fetch \"\$uri\" 2>&-)
d75 3
a77 4
	[[ $res = OK ]] || ok=0
	uri="${rpt}disable_token.php?key=$stats_token&token=$stats_key"
	sleep $((RANDOM % 120))
	res=$(eval $fetch \"\$uri\" 2>&-)
d87 1
@


1.8
log
@try harder... still not there
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.7 2006/10/03 00:41:10 tg Exp $
d9 1
d13 3
a15 1
fetch="lynx -useragent 'MirOS ftp(1), http://mirbsd.de/, emulated by Lynx' -source"
d35 6
@


1.7
log
@bring back my version of uri_escape, commented out, though
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.6 2006/10/03 00:34:55 tg Exp $
d8 2
a9 1
unset HTTP_USER_AGENT
d11 2
a31 6
# I like this one
#function uri_escape
#{
#	print -nr -- "$*" | hexdump -ve '1/1 "-%02x"' | sed s/-/%/g
#}

d45 1
a45 1
	res=$(ftp -V -o - "$uri" 2>&-)
d86 1
a86 1
	uri="${rpt}enable_token.php?token=$stats_key&key=$stats_token"
d88 1
a88 1
	res=$(ftp -V -o - "$uri" 2>&-)
d90 1
a90 1
	uri="${rpt}report_system.php?token=$stats_key&key=$stats_token&rel=$(uri_escape $version)&arch=$(uname -m)&opsys=$(uname -s)"
d92 1
a92 1
	res=$(ftp -V -o - "$uri" 2>&-)
d96 1
a96 1
	uri="${rpt}report_cpu.php?token=$stats_key&key=$stats_token&vendor=$(print -r -- "$cpu" | cut -d' ' -f1)&cpu_type=$(uri_escape $(print -r -- "$cpu" | cut -d' ' -f2-))&cpus=1"
d98 1
a98 1
	res=$(ftp -V -o - "$uri" 2>&-)
d101 1
a101 1
	uri="${rpt}disable_token.php?token=$stats_key&key=$stats_token"
d103 1
a103 1
	res=$(ftp -V -o - "$uri" 2>&-)
@


1.6
log
@disable bsdstats.org code, THEY broke it
also attempt to merge the new code
cf. http://www.freebsd.org/cgi/cvsweb.cgi/ports/sysutils/bsdstats/files/300.statistics
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.5 2006/10/03 00:04:34 tg Exp $
d29 6
@


1.5
log
@report every two weeks instead of every four weeks - the MirOS entries
on bsdstats.org vanished! I hope they are kept appropriately now.
@
text
@d1 2
a2 1
# $MirOS: src/share/misc/bsdstats,v 1.4 2006/09/19 03:21:24 tg Exp $
d4 23
a26 3
function uri_escape
{
	print -nr -- "$*" | hexdump -ve '1/1 "-%02x"' | sed s/-/%/g
d39 1
a39 1
	stats_key=$(uri_escape $(openssl rand -base64 16))
d41 3
a43 1
	res=$(ftp -V -o - http://bsdstats.org/scripts/getid.php?key=$stats_key 2>&-)
d83 5
a87 1
	uri="http://bsdstats.org/scripts/report_system.php?key=$stats_token&rel=$(uri_escape $version)&arch=$(uname -m)&opsys=$(uname -s)"
d93 1
a93 1
	uri="http://bsdstats.org/scripts/report_cpu.php?key=$stats_token&vendor=$(print -r -- "$cpu" | cut -d' ' -f1)&cpu_type=$(uri_escape $(print -r -- "$cpu" | cut -d' ' -f2-))&cpus=1"
d98 4
@


1.4
log
@cosmetics
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.3 2006/09/13 18:34:27 tg Exp $
d31 1
a31 1
if (( stats_report_time <= (now - (28 * 86400) + 7200) )); then
@


1.3
log
@implement (and correct, for newvers.sh) version mapping
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.2 2006/09/13 01:45:59 tg Exp $
d15 1
a15 1
print -r "last report time: $stats_report_time ($(date -r $stats_report_time))"
d79 1
a79 1
print -r "done, using token from $stats_token_time ($(date -r $stats_token_time))"
@


1.2
log
@improve output format a little
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/bsdstats,v 1.1 2006/09/13 01:08:21 tg Exp $
d33 28
a60 1
	uri="http://bsdstats.org/scripts/report_system.php?key=$stats_token&rel=$(uname -r)&arch=$(uname -m)&opsys=$(uname -s)$stats_sysadd"
@


1.1
log
@rewritten-from-scratch bsdstats.org code, including live cd stuff
believe me, the 900s (plus safety zone) delay _is_ needed...

awaiting testing
@
text
@d1 1
a1 1
# $MirOS$
d15 1
a15 1
print last report time: $stats_report_time
d27 1
a27 1
	print -n initial delay of $sleeptime seconds...
d36 1
a36 1
	print -r "system report '$uri' -> ${res:-ERROR}"
d42 1
a42 1
	print -r "cpu report '$uri' -> ${res:-ERROR}"
d52 1
@

