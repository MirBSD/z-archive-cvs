head	1.11;
access;
symbols
	MIRBSD_10:1.8.0.4
	MIRBSD_10_BASE:1.8
	MIRBSD_9_BASE:1.8
	MIRBSD_8:1.8.0.2
	MIRBSD_8_BASE:1.8
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.11
date	2016.06.16.21.05.04;	author tg;	state Exp;
branches;
next	1.10;
commitid	100576313E724FEAD8F;

1.10
date	2011.03.26.11.36.15;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004D8DCFC2330EA9D1;

1.9
date	2008.06.04.13.14.50;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004846953009D6FCBA;

1.8
date	2005.10.07.21.30.25;	author tg;	state Exp;
branches;
next	1.7;
commitid	65ca4346e8f2ce1e;

1.7
date	2005.09.18.19.29.59;	author tg;	state Exp;
branches;
next	1.6;
commitid	4baf432dc045065f;

1.6
date	2005.09.18.19.24.32;	author tg;	state Exp;
branches;
next	1.5;
commitid	765d432dbefe6505;

1.5
date	2005.09.18.18.52.37;	author tg;	state Exp;
branches;
next	1.4;
commitid	451f432db784fb7c;

1.4
date	2005.07.04.01.39.23;	author tg;	state Exp;
branches;
next	1.3;
commitid	2d9142c89360bd3f;

1.3
date	2005.06.26.17.06.08;	author tg;	state Exp;
branches;
next	1.2;
commitid	649242bee0724fde;

1.2
date	2005.03.06.19.38.39;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.02;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.02;	author tg;	state Exp;
branches;
next	;


desc
@@


1.11
log
@apparently, http://www.mynetwatchman.com/kb/adsl/pppoemtu.htm forgot
the LLC-SNAP header (another 8 bytes), though the new recommended
explanatory page http://whirlpool.net.au/wiki/adsl_theory_ppp is very
User-Agent unfriendly (requires “foo”, not Lynx or unset); I confirm that
this is what Netcologne actually uses (PPPoE with LLC-SNAP, ATM, AAL5),
although their infrastructure further limits the PMTU to 1442 unfortunately
@
text
@.\"	$MirOS: src/share/man/man4/pppoe.4,v 1.10 2011/03/26 11:36:15 tg Exp $
.\"	$OpenBSD: pppoe.4,v 1.5 2004/11/30 12:42:21 jmc Exp $
.\"	$NetBSD: pppoe.4,v 1.26 2003/10/02 07:06:36 wiz Exp $
.\"
.\" Copyright (c) 2002 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Martin Husemann <martin@@NetBSD.org>.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: March 26 2011 $
.Dt PPPOE 4
.Os
.Sh NAME
.Nm pppoe
.Nd PPP over Ethernet protocol network interface
.Sh SYNOPSIS
.Nm pseudo-device pppoe
.Sh DESCRIPTION
The
.Nm
interface encapsulates
.Em Point-to-Point Protocol (PPP)
packets inside Ethernet frames as defined by RFC 2516.
.Pp
This is often used to connect a router via a DSL modem to
an access concentrator.
The
.Nm
interface does not by itself transmit or receive frames,
but needs an Ethernet interface to do so.
This Ethernet interface is connected to the
.Nm
interface via
.Xr ifconfig 8 .
The Ethernet interface needs to be marked UP, but does not need to have an
IP address.
.Pp
There are two basic modes of operation, controlled via the
.Em link1
switch.
The default mode,
.Em link1
not being set, tries to keep the configured session open all the
time.
If the session is disconnected, a new connection attempt is started
immediately.
The
.Dq dial on demand
mode, selected by setting
.Em link1 ,
only establishes a connection when data is being sent to the interface.
.Pp
If the kernel is compiled with option
.Dv PPPOE_SERVER ,
there are two modes of connection, controlled via the
.Em link0
switch.
The default mode,
.Em link0
not being set, is client mode.
The
.Dq PPPoE server
mode, selected by setting
.Em link0 ,
is to wait for incoming PPPoE session.
This option is not set in the GENERIC kernel and discouraged
because it does not offer authentication.
.Pp
Before a
.Nm
interface is usable, it needs to be configured.
The following steps are necessary:
.Bl -bullet
.It
Create the interface.
.It
Connect an Ethernet interface.
This interface is used for the physical communication.
As noted above it must be marked UP, but need not have an IP address.
.It
Configure authentication.
The PPP session needs to identify the client to the peer.
For more details on the available options see
.Xr spppcontrol 8 .
.El
.Pp
This all is typically accomplished using an
.Pa /etc/hostname.pppoe0
file.
.Sh EXAMPLES
A typical
.Pa /etc/hostname.pppoe0
file looks like this:
.Bd -literal -offset indent
pppoedev ne0
!/sbin/ifconfig ne0 up
!/usr/sbin/spppcontrol \e$if myauthproto=pap myauthname=testcaller \e
	myauthkey=donttell
#!/usr/sbin/ifwatchd -d /etc/ppp/ip-down -u /etc/ppp/ip-up \e$if
!/sbin/ifconfig \e$if inet 0.0.0.0 0.0.0.1 netmask 0xFFFFFFFF
!/sbin/route -n add -inet default 0.0.0.1 -mtu 1446
.No up Em link2
.Ed
.Pp
.Sy Attention
regarding the
.Em link2
option given; please read about it under
.Sx OPTIONS
below before using (it is only included as the majority of users
probably does want to use this flag).
.Pp
Using
.Xr ifwatchd 8
may not work correctly, so it's commented out in the example now.
.Pp
Since this is a PPP interface, the addresses assigned to the interface
may change during PPP negotiation.
There is no fine grained control available for deciding
which addresses are acceptable and which are not.
For the local side and the remote address there is exactly one choice:
hard coded address or wildcard.
If a real address is assigned to one side of the connection,
PPP negotiation will only agree to exactly this address.
If one side is wildcarded,
every address suggested by the peer will be accepted.
.Pp
To wildcard the local address set it to 0.0.0.0, to wildcard the remote
address set it to 0.0.0.1.
.Sh OPTIONS
A
.Nm
enabled kernel will not interfere with other
.Nm PPPoE
implementations running on the same machine.
Under special circumstances
(details below) this is not desirable, so the
.Nm
driver can be told to kill all unknown
.Nm PPPoE
sessions received by the Ethernet interface used for a configured
.Nm
interface.
To do this,
set the link2 flag on any interface.
.Pp
Note that this will break all userland
.Nm PPPoE
implementations using the same Ethernet interface!
But if this Kernel
.Nm PPPoE
is the only implementation used, it is a useful device in case
you accidentally destroy an interface while a session is open;
in the case of German NetDSL it can reduce downtimes from 5 to
10 minutes down to half a minute or less.
.Pp
This option is only useful if you have a static IP address assigned and
your ISP does not use LCP echo requests to monitor the link status.
After a crash or power failure the peer device still tries to send data to
the no longer active session on your computer, and might refuse to
reestablish a new connection, because there already is an open session.
On receipt of such packets, the
.Nm
driver with this option set will send a PADT packet
(request to terminate the session).
The peer will immediately disconnect
the orphaned session and allow a new one to be established.
.Sh SEE ALSO
.Xr hostname.if 5 ,
.Xr ifconfig 8 ,
.Xr ifwatchd 8 ,
.Xr ppp 8 ,
.Xr pppoe 8 ,
.Xr spppcontrol 8
.Rs
.%R RFC 2516
.%T A Method for Transmitting PPP Over Ethernet (PPPoE)
.%D February 1999
.Re
.Pp
.Pa http://whirlpool.net.au/wiki/adsl_theory_ppp
.Pq changing User-Agent to "foo" in lynx necessary
has got an explanation how PPPoE is further encapsulated
on the way to your ISP and why 1446 is the optimum MTU for
native IPv4 and native IPv6 connections.
Tunneled IPv6 connections using
.Xr gif 4
tunnels have an optimum MTU of 1426, the difference is just
the size of an IPv4 header for the simple encapsulation; the
maximum TCP-MSS would be 1406 and 1386, respectively.
.Sh HISTORY
The
.Nm
device appeared in
.Nx 1.6
and was ported via
.Ox 3.7
to
.Mx 8 .
.Sh BUGS
This implementation is client side only.
.Pp
It is important to specify
.Dq Li netmask 0xFFFFFFFF
to
.Xr ifconfig 8 .
If the netmask is unspecified, it will be set to 8 when 0.0.0.0 is
configured to the interface, and it will persist after negotiation.
@


1.10
log
@discourage ifwatchd(8)
@
text
@d1 1
a1 1
.\"	$MirOS: src/share/man/man4/pppoe.4,v 1.9 2008/06/04 13:14:50 tg Exp $
d39 1
a39 1
.Dd $Mdocdate: June 4 2008 $
d130 1
a130 1
!/sbin/route -n add -inet default 0.0.0.1 -mtu 1454
d210 2
a211 1
.Pa http://www.mynetwatchman.com/kb/adsl/pppoemtu.htm
d213 1
a213 1
on the way to your ISP and why 1454 is the optimum MTU for
d217 3
a219 2
tunnels have an optimum MTU of 1434, the difference is just
the size of an IPv4 header for the simple encapsulation.
@


1.9
log
@mention that the optimum MTU of 1454 is valid for native IPv4 and IPv6,
and that – since gif(4) just wraps the IPv6 packet as IPv4 payload – the
optimum MTU for tunneled IPv6 connections is 1434 (IPv4 header = 20 bytes)
@
text
@d1 1
a1 1
.\"	$MirOS: src/share/man/man4/pppoe.4,v 1.8 2005/10/07 21:30:25 tg Exp $
d39 1
a39 1
.Dd $Mdocdate$
d128 1
a128 1
!/usr/sbin/ifwatchd -d /etc/ppp/ip-down -u /etc/ppp/ip-up \e$if
d142 4
d231 1
a231 1
.Dq Li netmask 0xffffffff
@


1.8
log
@add MTU rationale here, too
@
text
@d1 1
a1 1
.\"	$MirOS: src/share/man/man4/pppoe.4,v 1.7 2005/09/18 19:29:59 tg Exp $
d39 1
a39 1
.Dd October 1, 2003
d208 6
a213 1
on the way to your ISP and why 1454 is the optimum MTU.
@


1.7
log
@add link2 flag to default hostname.pppoe0
@
text
@d1 1
a1 1
.\"	$MirOS: src/share/man/man4/pppoe.4,v 1.6 2005/09/18 19:24:32 tg Exp $
d205 4
@


1.6
log
@I love the link2 flag
@
text
@d1 1
a1 1
.\"	$MirOS: src/share/man/man4/pppoe.4,v 1.5 2005/09/18 18:52:37 tg Exp $
d131 1
a131 1
up
d134 8
@


1.5
log
@\ -> \e
@
text
@d1 1
a1 1
.\"	$MirOS: src/share/man/man4/pppoe.4,v 1.4 2005/07/04 01:39:23 tg Exp $
d167 6
@


1.4
log
@document link2 flags for pppoe/plip
@
text
@d1 1
a1 1
.\"	$MirOS: src/share/man/man4/pppoe.4,v 1.3 2005/06/26 17:06:08 tg Exp $
d128 1
a128 1
!/usr/sbin/ifwatchd -d /etc/ppp/ip-down -u /etc/ppp/ip-up \$if
@


1.3
log
@* fix sample
* add 1454 MTU
* add ifwatchd xref
@
text
@d1 1
a1 1
.\"	$MirOS: src/share/man/man4/pppoe.4,v 1.2 2005/03/06 19:38:39 tg Exp $
d162 1
a162 3
add the following to your kernel config file:
.Pp
.Dl option PPPOE_TERM_UNKNOWN_SESSIONS
@


1.2
log
@merge src/share
@
text
@d1 1
a1 1
.\"	$MirOS$
d125 2
a126 2
! /sbin/ifconfig ne0 up
! /usr/sbin/spppcontrol \e$if myauthproto=pap myauthname=testcaller \e
d128 3
a130 2
! /sbin/ifconfig \e$if inet 0.0.0.0 0.0.0.1 netmask 0xffffffff
! /sbin/route add default 0.0.0.1
d184 1
@


1.1
log
@Initial revision
@
text
@d1 1
d95 2
d195 5
a199 1
.Ox 3.7 .
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
