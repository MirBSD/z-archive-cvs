head	1.11;
access;
symbols
	MIRBSD_10:1.7.0.2
	MIRBSD_10_BASE:1.7
	MIRBSD_9_BASE:1.6
	MIRBSD_8:1.5.0.2
	MIRBSD_8_BASE:1.5
	cvs-200507211800:1.1.1.1
	cvs-200507040220:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2008.12.10.21.46.26;	author tg;	state Exp;
branches;
next	1.10;
commitid	100494038A97D264953;

1.10
date	2008.09.06.22.32.01;	author tg;	state Exp;
branches;
next	1.9;
commitid	10048C304E12697A3C1;

1.9
date	2008.04.10.14.07.45;	author tg;	state Exp;
branches;
next	1.8;
commitid	10047FE1F455D192B1C;

1.8
date	2008.03.20.21.18.56;	author tg;	state Exp;
branches;
next	1.7;
commitid	10047E2D4D11138D04E;

1.7
date	2007.03.08.09.46.39;	author tg;	state Exp;
branches
	1.7.2.1;
next	1.6;
commitid	10045EFDB8F63334E41;

1.6
date	2006.03.19.20.10.13;	author tg;	state Exp;
branches;
next	1.5;
commitid	100441DBABB7ACA9932;

1.5
date	2005.11.17.18.30.03;	author tg;	state Exp;
branches;
next	1.4;
commitid	67c437ccc236b52;

1.4
date	2005.11.17.12.05.08;	author tg;	state Exp;
branches;
next	1.3;
commitid	43a9437c717d46f5;

1.3
date	2005.08.31.22.11.11;	author tg;	state Exp;
branches;
next	1.2;
commitid	1c2043162ab08347;

1.2
date	2005.02.14.18.57.46;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.17;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.7.2.1
date	2008.03.20.21.20.36;	author tg;	state Exp;
branches;
next	;
commitid	10047E2D53676365EDF;

1.1.1.1
date	2005.02.05.17.27.17;	author tg;	state Exp;
branches;
next	;


desc
@@


1.11
log
@same to “make lint” target
@
text
@# $MirOS: src/share/mk/bsd.lkm.mk,v 1.10 2008/09/06 22:32:01 tg Exp $
# $OpenBSD: bsd.lkm.mk,v 1.19 2003/05/20 22:49:13 millert Exp $

.if exists(${.CURDIR}/../Makefile.inc)
.  include "${.CURDIR}/../Makefile.inc"
.endif

.ifndef	BSD_OWN_MK
.  include <bsd.own.mk>
.endif

.SUFFIXES: .out .o .c .cc .C .y .l .s .8 .7 .6 .5 .4 .3 .2 .1 .0

.if !${COPTS:M-fhonour-copts} || !${CFLAGS:M-fhonour-copts}
CFLAGS+=	${COPTS}
.endif
KERNBASE?=	${BSDSRCDIR}/kern
.if !${CPPFLAGS:M-D_LKM}
CFLAGS+=	-ffreestanding
CPPFLAGS+=	-D_KERNEL -D_LKM -I${BSDSRCDIR}/sys -I${BSDSRCDIR}/sys/arch \
		-I/usr/include/syskern -I${KERNBASE}/include
.endif
.if ${WARNINGS:L} == "yes"
CFLAGS+=	${CDIAGFLAGS}
.endif

LDFLAGS+=	-r
.if defined(LKM) && !empty(LKM)
SRCS?=		${LKM}.c
MAN?=		${LKM}.1
.  if !empty(SRCS:N*.h:N*.sh)
OBJS+=		${SRCS:N*.h:N*.sh:R:S/$/.o/g}
LOBJS+=		${LSRCS:.c=.ln} ${SRCS:M*.c:.c=.ln}
.  endif
POSTINSTALL?=	${LKM}install
POSTUNINSTALL?=	${LKM}uninstall
CLEANFILES+=	${POSTINSTALL} ${POSTUNINSTALL} ${LKM}_init.sh ${LKM}_done.sh

.  if defined(OBJS) && !empty(OBJS)
${LKM}.ko: ${OBJS} ${DPADD}
	${LD} ${LDFLAGS} -o ${.TARGET} ${OBJS} ${LDADD}
.  endif
.endif	# def/not empty LKM

.MAIN: all
all: ${LKM}.ko ${LKM}_init.sh ${LKM}_done.sh _SUBDIRUSE

.if exists(${.CURDIR}/${POSTINSTALL})
all ${LKM}_init.sh: ${POSTINSTALL}

${POSTINSTALL}: ${.CURDIR}/${POSTINSTALL}
	${INSTALL} ${INSTALL_COPY} -m ${BINMODE} $> $@@
.endif

.if exists(${.CURDIR}/${POSTUNINSTALL})
all ${LKM}_done.sh: ${POSTUNINSTALL}

${POSTUNINSTALL}: ${.CURDIR}/${POSTUNINSTALL}
	${INSTALL} ${INSTALL_COPY} -m ${BINMODE} $> $@@
.endif

${LKM}_init.sh: ${LKM}.ko
	print '#!/bin/sh\ncd $$(dirname "$0")' >$@@
	print -n 'exec /sbin/modload $$* ' >>$@@
	if [[ -x ${POSTINSTALL} ]]; then \
		print -- '-o ${LKM} -p ${POSTINSTALL} ${LKM}.ko'; \
	else \
		print -- '-o ${LKM} ${LKM}.ko'; \
	fi >>$@@

${LKM}_done.sh: ${LKM}.ko
	print '#!/bin/sh\ncd $$(dirname "$0")' >$@@
	print 'rm -f ${LKM}' >>$@@
	print -n 'exec /sbin/modunload ' >>$@@
	if [[ -x ${POSTUNINSTALL} ]]; then \
		print -- '-p ${POSTUNINSTALL} -n ${LKM}'; \
	else \
		print -- '-n ${LKM}'; \
	fi >>$@@

.if !target(clean)
clean: _SUBDIRUSE
	rm -f a.out [Ee]rrs mklog core *.core \
	    ${LKM} ${LKM}.ko ${OBJS} ${LOBJS} ${CLEANFILES}
.endif

cleandir: _SUBDIRUSE clean

.if !target(install)
.  if !target(beforeinstall)
beforeinstall:
.  endif
.  if !target(afterinstall)
afterinstall:
.  endif

.  if !target(realinstall)
realinstall:
.    if defined(LKM) && !empty(LKM)
	${INSTALL} ${INSTALL_COPY} -o ${LKMOWN} -g ${LKMGRP} -m ${LKMMODE} \
	    ${LKM}.ko ${DESTDIR}${LKMDIR}/
.      if exists(${.CURDIR}/${POSTINSTALL})
	${INSTALL} ${INSTALL_COPY} -o ${LKMOWN} -g ${LKMGRP} -m ${BINMODE} \
	    ${.CURDIR}/${POSTINSTALL} ${DESTDIR}${LKMDIR}/
.      endif
.      if exists(${.CURDIR}/${POSTUNINSTALL})
	${INSTALL} ${INSTALL_COPY} -o ${LKMOWN} -g ${LKMGRP} -m ${BINMODE} \
	    ${.CURDIR}/${POSTUNINSTALL} ${DESTDIR}${LKMDIR}/
.      endif
	${INSTALL} ${INSTALL_COPY} -o ${LKMOWN} -g ${LKMGRP} -m ${BINMODE} \
	    ${LKM}_init.sh ${LKM}_done.sh ${DESTDIR}${LKMDIR}/
.    endif
.  endif

load: ${LKM}_init.sh
	@@${MKSH} -x $> -d -v

unload: ${LKM}_done.sh
	@@${MKSH} -x $>

install: maninstall _SUBDIRUSE
.  if defined(LINKS) && !empty(LINKS)
	@@set ${LINKS}; \
	while test $$# -ge 2; do \
		l=${DESTDIR}${LKMDIR}/$$1; \
		shift; \
		t=${DESTDIR}${LKMDIR}/$$1; \
		shift; \
		print -r -- $$t -\> $$l; \
		rm -f $$t; \
		ln $$l $$t || cp $$l $$t; \
	done; true
.  endif

maninstall: afterinstall
afterinstall: realinstall
realinstall: beforeinstall
.endif

.if !target(lint)
lint: ${LOBJS}
.  if defined(LOBJS) && !empty(LOBJS)
	@@env CC=${_ORIG_CC:Q} ${LINT} ${LINTFLAGS} ${LDFLAGS:M-L*} \
	    ${LOBJS} ${LDADD}
.  endif
.endif

.if ${NOMAN:L} == "no"
.  include <bsd.man.mk>
.endif

.include <bsd.obj.mk>
.include <bsd.dep.mk>
.include <bsd.subdir.mk>
.include <bsd.sys.mk>

.PHONY: load unload
@


1.10
log
@install libckern.h and change path so that LKMs can be built with
an empty /usr/src (tested with kqemu)
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.lkm.mk,v 1.9 2008/04/10 14:07:45 tg Exp $
d143 2
a144 1
	@@${LINT} ${LINTFLAGS} ${LDFLAGS:M-L*} ${LOBJS} ${LDADD}
@


1.9
log
@optimise
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.lkm.mk,v 1.8 2008/03/20 21:18:56 tg Exp $
d21 1
a21 1
		-I${KERNBASE}/include
@


1.8
log
@need src/kern/include stuff
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.lkm.mk,v 1.7 2007/03/08 09:46:39 tg Exp $
d63 1
a63 2
	print '#!/bin/sh' >$@@
	print 'cd `dirname "$$0"`' >>$@@
d72 1
a72 2
	print '#!/bin/sh' >$@@
	print 'cd `dirname "$$0"`' >>$@@
d129 1
a129 1
		echo $$t -\> $$l; \
@


1.7
log
@-ffreestanding implies -fno-builtin
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.lkm.mk,v 1.6 2006/03/19 20:10:13 tg Exp $
d17 1
d20 2
a21 1
CPPFLAGS+=	-D_KERNEL -D_LKM -I${BSDSRCDIR}/sys -I${BSDSRCDIR}/sys/arch
@


1.7.2.1
log
@MFC fix for LKM builds
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.lkm.mk,v 1.8 2008/03/20 21:18:56 tg Exp $
a16 1
KERNBASE?=	${BSDSRCDIR}/kern
d19 1
a19 2
CPPFLAGS+=	-D_KERNEL -D_LKM -I${BSDSRCDIR}/sys -I${BSDSRCDIR}/sys/arch \
		-I${KERNBASE}/include
@


1.6
log
@+.if !${COPTS:M-fhonour-copts} || !${CFLAGS:M-fhonour-copts}
 CFLAGS+=       ${COPTS}
+.endif

This saves most of the "passed twice" problems of ports which
use our make and <bsd.prog.mk> and friends.
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.lkm.mk,v 1.5 2005/11/17 18:30:03 tg Exp $
d18 1
a18 1
CFLAGS+=	-ffreestanding -fno-builtin-printf -fno-builtin-log
@


1.5
log
@* lkm: remove ld(1) generated output file for us;
  modload(8) doesn't seem to do it any more
* sys: bump patchlevel, LKM works
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.lkm.mk,v 1.4 2005/11/17 12:05:08 tg Exp $
d14 7
a20 2
CFLAGS+=	${COPTS} -ffreestanding -fno-builtin-printf -fno-builtin-log \
		-D_KERNEL -D_LKM -I${BSDSRCDIR}/sys -I${BSDSRCDIR}/sys/arch
@


1.4
log
@* bsd.lkm.mk:
  - unbreak
  - shuffle order
  - replace ${COMBINED} by ${LKM}.ko and install lkm as ${LKM}.ko too
    (pending a change in modload(8) to be committed soon)
  - honour POSTUNINSTALL too
  - generate ${LKM}_{init,done}.sh scripts
  - use <lkmname>_lkmentry as entry point
  - install POSTUNINSTALL and ${LKM}_{init,done}.sh scripts into LKMDIR too
* Makefile:
  - install <bsd.lkm.mk> now that it's tested
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.lkm.mk,v 1.3 2005/08/31 22:11:11 tg Exp $
d68 1
@


1.3
log
@add some CFLAGS for kernel building; some minor style nits
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.lkm.mk,v 1.2 2005/02/14 18:57:46 tg Exp $
a2 1
# XXX untested
d23 1
d28 3
a30 4
COMBINED?=	combined.o
.  ifndef POSTINSTALL
POSTINSTALL=	${LKM}install
.  endif
d33 1
a33 1
${COMBINED}: ${OBJS} ${DPADD}
a35 4

.  ifndef MAN
MAN=		${LKM}.1
.  endif
d39 35
a73 1
all: ${COMBINED} _SUBDIRUSE
d78 1
a78 1
	    ${LKM} ${COMBINED} ${OBJS} ${LOBJS} ${CLEANFILES}
d95 1
a95 1
	    ${COMBINED} ${DESTDIR}${LKMDIR}/${LKM}.o
d100 6
d109 2
a110 7
load:	${COMBINED}
	if [ -x ${.CURDIR}/${POSTINSTALL} ]; then \
		modload -d -o $(LKM) -e$(LKM) -p${.CURDIR}/${POSTINSTALL} \
		    $(COMBINED); \
	else \
		modload -d -o $(LKM) -e$(LKM) $(COMBINED); \
	fi
d112 2
a113 2
unload:
	modunload -n $(LKM)
@


1.2
log
@merge these from ncvs 1
@
text
@d1 2
a2 2
#	$MirOS$
#	$OpenBSD: bsd.lkm.mk,v 1.19 2003/05/20 22:49:13 millert Exp $
d15 2
a16 2
CFLAGS+=	${COPTS} -D_KERNEL -D_LKM \
		-I${BSDSRCDIR}/sys -I${BSDSRCDIR}/sys/arch
d68 1
a68 1
	${INSTALL} ${INSTALL_COPY} -o ${LKMOWN} -g ${LKMGRP} -m 555 \
d76 2
a77 1
		modload -d -o $(LKM) -e$(LKM) -p${.CURDIR}/${POSTINSTALL} $(COMBINED); \
@


1.1
log
@Initial revision
@
text
@d1 1
d3 1
d6 1
a6 1
.include "${.CURDIR}/../Makefile.inc"
d9 3
a11 1
.include <bsd.own.mk>
d15 2
a16 8
# XXX In order to at least diminish the brokenness of trusting /sys to point
# to the tree we're actually belonging to we check BSDSRCDIR.  On multi-tree
# machines /sys isn't always a link to the correct tree.
.if defined(BSDSRCDIR)
CFLAGS+=	${COPTS} -D_KERNEL -D_LKM -I${BSDSRCDIR}/sys -I${BSDSRCDIR}/sys/arch
.else
CFLAGS+=	${COPTS} -D_KERNEL -D_LKM -I/sys -I/sys/arch
.endif
d21 11
a31 13
LDFLAGS+= -r
.if defined(LKM)
SRCS?=	${LKM}.c
.if !empty(SRCS:N*.h:N*.sh)
OBJS+=	${SRCS:N*.h:N*.sh:R:S/$/.o/g}
LOBJS+=	${LSRCS:.c=.ln} ${SRCS:M*.c:.c=.ln}
.endif
COMBINED?=combined.o
.if !defined(POSTINSTALL)
POSTINSTALL= ${LKM}install
.endif

.if defined(OBJS) && !empty(OBJS)
d33 1
d36 1
d38 4
a41 6
.endif	# defined(OBJS) && !empty(OBJS)

.if	!defined(MAN)
MAN=	${LKM}.1
.endif	# !defined(MAN)
.endif	# defined(LKM)
d55 1
a55 1
.if !target(beforeinstall)
d57 2
a58 2
.endif
.if !target(afterinstall)
d60 1
a60 1
.endif
d62 1
a62 1
.if !target(realinstall)
d64 1
a64 1
.if defined(LKM)
d67 1
a67 1
.if exists(${.CURDIR}/${POSTINSTALL})
d69 4
a72 5
	    ${.CURDIR}/${POSTINSTALL} ${DESTDIR}${LKMDIR}
.endif
.endif
.endif

d85 1
a85 1
.if defined(LINKS) && !empty(LINKS)
d94 1
a94 1
		ln $$l $$t; \
d96 1
a96 1
.endif
d105 1
a105 1
.if defined(LOBJS) && !empty(LOBJS)
d107 1
a107 5
.endif
.endif

.if !defined(NOMAN)
.include <bsd.man.mk>
d110 2
a111 2
.if !defined(NONLS)
.include <bsd.nls.mk>
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
