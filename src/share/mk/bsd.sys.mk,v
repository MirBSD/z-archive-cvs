head	1.25;
access;
symbols
	MIRBSD_10:1.19.0.2
	MIRBSD_10_BASE:1.19
	MIRBSD_9_BASE:1.7
	MIRBSD_8:1.3.0.2
	MIRBSD_8_BASE:1.3
	cvs-200507211800:1.1.1.1
	cvs-200507040220:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.25
date	2017.04.03.12.16.08;	author tg;	state Exp;
branches;
next	1.24;
commitid	10058E23D1C3AECA6B5;

1.24
date	2009.12.13.00.32.21;	author tg;	state Exp;
branches;
next	1.23;
commitid	1004B2436206D706B48;

1.23
date	2009.11.17.19.21.07;	author tg;	state Exp;
branches;
next	1.22;
commitid	1004B02F79A0EE74535;

1.22
date	2008.12.10.21.38.56;	author tg;	state Exp;
branches;
next	1.21;
commitid	100494036F0136F90DC;

1.21
date	2008.11.01.21.45.38;	author tg;	state Exp;
branches;
next	1.20;
commitid	100490CCE1101EEEF3B;

1.20
date	2008.08.01.15.35.14;	author tg;	state Exp;
branches;
next	1.19;
commitid	10048932D3F5F266E16;

1.19
date	2007.06.12.19.48.23;	author tg;	state Exp;
branches;
next	1.18;
commitid	100466EF889270EF263;

1.18
date	2007.05.21.18.29.19;	author tg;	state Exp;
branches;
next	1.17;
commitid	1004651E5060EDFC9EC;

1.17
date	2007.05.17.18.38.36;	author tg;	state Exp;
branches;
next	1.16;
commitid	100464CA0BC3310E768;

1.16
date	2007.04.27.20.05.09;	author tg;	state Exp;
branches;
next	1.15;
commitid	100463257457AC21D75;

1.15
date	2007.04.18.21.01.21;	author tg;	state Exp;
branches;
next	1.14;
commitid	1004626873870F37E44;

1.14
date	2007.04.18.19.56.23;	author tg;	state Exp;
branches;
next	1.13;
commitid	100462677FE698747C6;

1.13
date	2007.04.18.19.54.31;	author tg;	state Exp;
branches;
next	1.12;
commitid	100462677650837402E;

1.12
date	2007.04.04.21.48.14;	author tg;	state Exp;
branches;
next	1.11;
commitid	10046141C903A248AA9;

1.11
date	2007.03.19.22.57.43;	author tg;	state Exp;
branches;
next	1.10;
commitid	10045FF157D0A6AB3BF;

1.10
date	2007.03.09.10.40.52;	author tg;	state Exp;
branches;
next	1.9;
commitid	10045F138DD463284F5;

1.9
date	2007.03.08.10.07.02;	author tg;	state Exp;
branches;
next	1.8;
commitid	10045EFE05510C5611E;

1.8
date	2006.11.02.00.50.29;	author tg;	state Exp;
branches;
next	1.7;
commitid	100454940D51A8F9D37;

1.7
date	2006.06.11.00.08.57;	author tg;	state Exp;
branches;
next	1.6;
commitid	100448B5F244163FBA2;

1.6
date	2006.03.01.20.51.11;	author tg;	state Exp;
branches;
next	1.5;
commitid	100440609492C1AF48F;

1.5
date	2006.01.31.13.42.47;	author tg;	state Exp;
branches;
next	1.4;
commitid	10043DF696240923D69;

1.4
date	2006.01.31.13.24.18;	author tg;	state Exp;
branches;
next	1.3;
commitid	10043DF650864B9CF80;

1.3
date	2005.03.06.21.48.06;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.14.18.57.46;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.17;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.17;	author tg;	state Exp;
branches;
next	;


desc
@@


1.25
log
@can this directory now please begone?
@
text
@# $MirOS: src/share/mk/bsd.sys.mk,v 1.24 2009/12/13 00:32:21 tg Exp $
# $OpenBSD: bsd.sys.mk,v 1.8 2000/07/06 23:12:41 millert Exp $
# $NetBSD: bsd.sys.mk,v 1.2 1995/12/13 01:25:07 cgd Exp $

.if !defined(BSD_SYS_MK)
BSD_SYS_MK=1

# just in case...
.if !defined(BSD_OWN_MK)
.  include <bsd.own.mk>
.endif

# The "if" is in case we want the current directory to have
# preference, due to gcc (GNU cpp, actually) brain-deadness
# The :N:S works around make idiocy, :M doesn't expand vars
.if ${CPPFLAGS:N1:S-I${.CURDIR}1:M1} == ""
CPPFLAGS+=	-idirafter ${.CURDIR}
.endif

.if ${OBJECT_FMT} == "ELF"						#mmk-1(
LDFLAGS+=	-Wl,-O2		# optimise hash table
.endif\
									#mmk-1)
# The following is only wanted for source tree builds, not MirPorts
.if !defined(TRUEPREFIX) || empty(TRUEPREFIX)

.  if !defined(EXPERIMENTAL)						#mmk-2(
CFLAGS+=	-Werror
.    if !defined(BSD_CFWRAP_MK) && !make(depend)
_ORIG_CC:=	${CC}
CC:=		env GCC_HONOUR_COPTS=2 ${CC}
.    endif
.  endif								#mmk-2)
_ORIG_CC?=	${CC}

.  if defined(DESTDIR) && !empty(DESTDIR)				#mmk-3(
CPPFLAGS+=	-nostdinc
CPPFLAGS+=	-isystem ${DESTDIR}/usr/include
LDFLAGS+=	-Wl,-rpath-link -Wl,${DESTDIR}/usr/lib
.  endif\
									#mmk-3)
.endif

.if (!target(includes) || defined(BSD_SUBDIR_MK_NOINCLUDES)) && \
    (defined(BSD_PROG_MK) || defined(BSD_LIB_MK)) && \
    (defined(HDRS) || defined(HDRS2))
HDRSRC?=	${.CURDIR}
HDRDST?=	${DESTDIR}${BSD_PREFIX}/include

afterincludes:
includes: _includes afterincludes

.PHONY: _includes afterincludes

_includes:
.  ifdef HDRS
	@@cd ${HDRSRC:Q}; for i in ${HDRS}; do \
		j=$${i##*/}; \
		if cmp -s "$$i" ${HDRDST:Q}/"$$j"; then \
			print Header ${HDRDST:Q}/"$$j <=> $$i"; \
		else \
			print Header ${HDRDST:Q}/"$$j <-- $$i"; \
			${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} \
			    -m ${NONBINMODE} "$$i" ${HDRDST:Q}/; \
		fi; \
	done
.  endif
.  ifdef HDRS2
.    for _i _j in ${HDRS2}
	@@if cmp -s ${HDRSRC:Q}/${_i:Q} ${HDRDST:Q}/${_j:Q}; then \
		print Header ${HDRDST:Q}/${_j:Q} '<=>' ${_i:Q}; \
	else \
		print Header ${HDRDST:Q}/${_j:Q} '<--' ${_i:Q}; \
		${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} \
		    -m ${NONBINMODE} ${HDRSRC:Q}/${_i:Q} ${HDRDST:Q}/${_j:Q}; \
	fi
.    endfor
.  endif
.endif

.endif	# ! BSD_SYS_MK
@


1.24
log
@i386 sync
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.23 2009/11/17 19:21:07 tg Exp $
a37 1
CPPFLAGS+=	-isystem ${DESTDIR}/usr/lib/gcc/${OStriplet}/${OSgccver}/include
a38 3
CXXFLAGS+=	-isystem ${DESTDIR}/usr/lib/gcc/${OStriplet}/${OSgccver}/include/c++
CXXFLAGS+=	-isystem ${DESTDIR}/usr/lib/gcc/${OStriplet}/${OSgccver}/include/c++/${OStriplet}
CXXFLAGS+=	-isystem ${DESTDIR}/usr/lib/gcc/${OStriplet}/${OSgccver}/include/c++/backward
@


1.23
log
@mark better what can be deleted (note the \ to prevent the error
message "unassociated shell command" for lines beginning with a tab)
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.22 2008/12/10 21:38:56 tg Exp $
d37 6
a42 4
CPPFLAGS+=	-nostdinc -isystem ${DESTDIR}/usr/include
CXXFLAGS+=	-isystem ${DESTDIR}/usr/include/gxx \
		-isystem ${DESTDIR}/usr/include/gxx/${OStriplet} \
		-isystem ${DESTDIR}/usr/include/gxx/backward
@


1.22
log
@fix build problems: use ${CC} -E, because our system headers assume
ANSI C and thus cannot be linted with Reiser CCCP
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.21 2008/11/01 21:45:38 tg Exp $
d20 1
a20 1
.if ${OBJECT_FMT} == "ELF"
d22 2
a23 2
.endif

d27 1
a27 1
.  if !defined(EXPERIMENTAL)
d33 1
a33 1
.  endif
d36 1
a36 1
.  if defined(DESTDIR) && !empty(DESTDIR)
d42 2
a43 2
.  endif

@


1.21
log
@honour BSD_PREFIX for includes target
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.20 2008/08/01 15:35:14 tg Exp $
d30 1
d34 1
@


1.20
log
@sync CPPFLAGS-addition-idiom for broken BSD make
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.19 2007/06/12 19:48:23 tg Exp $
d47 2
a48 2
HDRSRC?=${.CURDIR}
HDRDST?=${DESTDIR}/usr/include
@


1.19
log
@DESTDIR builds need -rpath-link ${DESTDIR}/usr/lib for the ld search
path to get DT_NEEDED references solved
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.18 2007/05/21 18:29:19 tg Exp $
d16 1
a16 1
.if ${CPPFLAGS:N0:S/-I${.CURDIR}/0/:M0} == ""
@


1.18
log
@experimental: use -Wl,-O2 for linking, bump mirmake vsn
ok bsiegert@@ if nothing breaks
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.17 2007/05/17 18:38:36 tg Exp $
d39 1
@


1.17
log
@more includes-target overhaul:
• document it
• do it for <bsd.prog.mk> too
• move it to <bsd.sys.mk>, handle generation by <bsd.subdir.mk>
• add /usr/include/openssl to mtree(8) base system tree file
• have all libs and flex use the generic target
• clean them up; repair a few bugs
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.16 2007/04/27 20:05:09 tg Exp $
d8 5
d20 4
@


1.16
log
@• bsd.sys.mk: for defined(FOO) add && !empty(FOO), e.g. DESTDIR, because
  a “make dist” was falsely using DESTDIR rules for standard builds
• bsd.sys.mk, sys.mk: make standard lex/yacc rules parallel-build safe,
  because it also eases debugging
• sys.mk: bump mirmake vsn
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.15 2007/04/18 21:01:21 tg Exp $
d34 35
d70 2
@


1.15
log
@more include path actual idiocy
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.14 2007/04/18 19:56:23 tg Exp $
d16 1
a16 1
.ifndef TRUEPREFIX
d25 1
a25 1
.  if defined(DESTDIR)
a31 27
.  if defined(PARALLEL)
# Lex
.l:
	${LEX.l} -o${.TARGET:R}.yy.c ${.IMPSRC}
	${LINK.c} -o ${.TARGET} ${.TARGET:R}.yy.c ${LDLIBS} -ll
	rm -f ${.TARGET:R}.yy.c
.l.c:
	${LEX.l} -o${.TARGET} ${.IMPSRC}
.l.o:
	${LEX.l} -o${.TARGET:R}.yy.c ${.IMPSRC}
	${COMPILE.c} ${CFLAGS_${.TARGET}:M*} -o ${.TARGET} ${.TARGET:R}.yy.c
	rm -f ${.TARGET:R}.yy.c

# Yacc
.y:
	${YACC.y} -b ${.TARGET:R} ${.IMPSRC}
	${LINK.c} -o ${.TARGET} ${.TARGET:R}.tab.c ${LDLIBS}
	rm -f ${.TARGET:R}.tab.c
.y.c:
	${YACC.y} -b ${.TARGET:R} ${.IMPSRC}
	mv ${.TARGET:R}.tab.c ${.TARGET}
.y.o:
	${YACC.y} -b ${.TARGET:R} ${.IMPSRC}
	${COMPILE.c} ${CFLAGS_${.TARGET}:M*} -o ${.TARGET} ${.TARGET:R}.tab.c
	rm -f ${.TARGET:R}.tab.c
.  endif

@


1.14
log
@add comment; bump mirmake vsn
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.13 2007/04/18 19:54:31 tg Exp $
d10 2
a11 1
.if !${CPPFLAGS:M-I${.CURDIR}}
@


1.13
log
@*graugh*

only add “-idirafter ${.CURDIR}” if not already CPPFLAGS matches “-I${.CURDIR}”
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.12 2007/04/04 21:48:14 tg Exp $
d8 2
@


1.12
log
@• sys.mk: the occasional bump
• bsd.sys.mk: don't -isystem ${.CURDIR} because then <ctype.h> includes
  ${.CURDIR}/ctype.h (if exists) instead; mark it -idirafter instead (a
  ${.CURDIR}/foo.h is then still matched by <foo.h> but only if there's
  no foo.h in /usr/include et al.); people who wanted ${.CURDIR} as the
  preference path used CPPFLAGS+=-I${.CURDIR} anyway (src/lib/csu etc.)
  -> fixes heirloom sh build
• bsd.sys.mk: bump mirmake version
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.11 2007/03/19 22:57:43 tg Exp $
d8 1
d10 1
@


1.11
log
@| cd '/usr/src/bin/mksh' && exec GCC_HONOUR_COPTS=2 mgcc -O2 -pipe -Os -fweb -Wformat -Wstrict-aliasing -Wbounded -fno-align-functions -fno-align-labels -falign-loops=4 -falign-jumps=4 -march=i486 -mpush-args -mpreferred-stack-boundary=2 -fhonour-copts -Werror -fno-strict-aliasing -fstack-protector-all -fwrapv -std=gnu99 -Wall -isystem /usr/src/bin/mksh -I'/usr/src/bin/mksh/obj/build-dir' -DHAVE_ATTRIBUTE=1 -DHAVE_ATTRIBUTE_BOUNDED=1 -DHAVE_ATTRIBUTE_USED=1 -DHAVE_SYS_PARAM_H=1 -DHAVE_SYS_MKDEV_H=0 -DHAVE_SYS_MMAN_H=1 -DHAVE_SYS_SYSMACROS_H=0 -DHAVE_LIBGEN_H=1 -DHAVE_PATHS_H=1 -DHAVE_STDBOOL_H=1 -DHAVE_STDINT_H=1 -DHAVE_GRP_H=1 -DHAVE_ULIMIT_H=0 -DHAVE_VALUES_H=0 -DHAVE_RLIM_T=1 -DHAVE_SIG_T=1 -DHAVE_MKSH_SIGNAME=0 -DHAVE_SYS_SIGNAME=1 -DHAVE__SYS_SIGNAME=0 -DHAVE_SYS_SIGLIST=1 -DHAVE_STRSIGNAL=0 -DHAVE_ARC4RANDOM=1 -DHAVE_ARC4RANDOM_PUSH=1 -DHAVE_FLOCK_EX=1 -DHAVE_SETLOCALE_CTYPE=1 -DHAVE_LANGINFO_CODESET=1 -DHAVE_REVOKE=1 -DHAVE_SETMODE=1 -DHAVE_SETRESUGID=1 -DHAVE_SETGROUPS=1 -DHAVE_STRCASESTR=1 -DHAVE_STRLCPY=1 -DHAVE_PERSISTENT_HISTORY=1 -DHAVE_MULTI_IDSTRING=1 -DHAVE_CONFIG_H -DCONFIG_H_FILENAME=\"sh.h\"  -o '/usr/src/bin/mksh/obj/build-dir/mksh' alloc.c edit.c eval.c exec.c expr.c funcs.c histrap.c jobs.c lex.c main.c misc.c shf.c syn.c tree.c var.c
| /usr/src/bin/mksh/Build.sh: GCC_HONOUR_COPTS=2: not found
| *** Error code 1

• use /usr/bin/env if we want to add environment variables
• <sys.mk>: bump mirmake vsn
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.10 2007/03/09 10:40:52 tg Exp $
d8 1
a8 1
CPPFLAGS+=	-isystem ${.CURDIR}
@


1.10
log
@experimental change:

Until now, <bsd.sys.mk> contained
| COMPILE.c:= GCC_HONOUR_COPTS=2 ${COMPILE.c}
which worked well, except that changes to e.g. CPPFLAGS past that
line wouldn't be honoured. Incidentally, I noticed this because the
very same <bsd.sys.mk> does its “destdir build” magic in the lines
after that…

Now, it does
| CC:= GCC_HONOUR_COPTS=2 ${CC}
because I didn't find a way to do it without expansion; this thusly
affects all uses of ${CC}, i.e.
• COMPILE.c (as until now)
• COMPILE.S, COMPILE.s - not dangerous because doesn't call cc1
• LINK.c, LINK.S, LINK.s - not dangerous because doesn't call cc1
• LINKER (bsd.prog.mk, bsd.lib.mk) - not dangerous because doesn't call cc1
• <bsd.cfwrap.mk> - filtered out by .ifndef BSD_CFWRAP_MK and, in case
  the parent Makefile includes <bsd.sys.mk> before, a :NGCC_HONOUR_COPTS=*
  clause appended to the internal use of ${CC} - won't help other uses then
• CC in “make depend” - filtered out by .ifnmake depend¹

This unbreaks “destdir build” and maybe² some other CPPFLAGS+= lines,
hardenes the rule for honouring CFLAGS a little, but should² work.

¹) safe because “make obj” and “make depend” are never used
   in combination with other targets because they change
   make(1)s cwd and the Makefile itself
²) not tried yet… neither scanned for
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.9 2007/03/08 10:07:02 tg Exp $
d16 1
a16 1
CC:=		GCC_HONOUR_COPTS=2 ${CC}
@


1.9
log
@use about the same compile commands in all places
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.8 2006/11/02 00:50:29 tg Exp $
d15 3
a17 1
COMPILE.c:=	GCC_HONOUR_COPTS=2 ${COMPILE.c}
@


1.8
log
@CPPFLAGS could be overridden from command line, restore previous
behaviour but be less invasive and use bsd.sys.mk
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.7 2006/06/11 00:08:57 tg Exp $
d35 1
a35 1
	${COMPILE.c} -o ${.TARGET} ${.TARGET:R}.yy.c
d48 1
a48 1
	${COMPILE.c} -o ${.TARGET} ${.TARGET:R}.tab.c
@


1.7
log
@revert r1.6, apparently, sysroot doesn't always work properly
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.5 2006/01/31 13:42:47 tg Exp $
d8 2
@


1.6
log
@skip DESTDIR building if cross mode (we use sysroot now)
@
text
@d16 1
a16 1
.  if defined(DESTDIR) && (!defined(CROSS_MODE) || ${CROSS_MODE:L} != "yes")
@


1.5
log
@get rid of the /usr/bin/env, make(1) is guaranteed to use mksh(1) anyway
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.4 2006/01/31 13:24:18 tg Exp $
d16 1
a16 1
.  if defined(DESTDIR)
@


1.4
log
@enforce use of CFLAGS (_DEFCOPTS)

you need at least /etc/make.cfg,v 1.5 for this!
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.3 2005/03/06 21:48:06 tg Exp $
d13 1
a13 1
COMPILE.c:=	/usr/bin/env GCC_HONOUR_COPTS=2 ${COMPILE.c}
@


1.3
log
@* make -Werror default for source tree builds
  (yah, I'll fix the fallout and disable it for perl.)
* smallish licence template update
  (tell me if I missed some)
* nuke empty Makefile.inc""s
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.sys.mk,v 1.2 2005/02/14 18:57:46 tg Exp $
d13 1
@


1.2
log
@merge these from ncvs 1
@
text
@d1 1
a1 1
# $MirOS$
d11 3
a13 1
#CFLAGS+=	-Werror
@


1.1
log
@Initial revision
@
text
@d1 18
a18 11
#	$OpenBSD: bsd.sys.mk,v 1.8 2000/07/06 23:12:41 millert Exp $
#	$NetBSD: bsd.sys.mk,v 1.2 1995/12/13 01:25:07 cgd Exp $
#
# Overrides used for OpenBSD source tree builds.

#CFLAGS+= -Werror

.if defined(DESTDIR)
CPPFLAGS+= -nostdinc -idirafter ${DESTDIR}/usr/include
CXXFLAGS+= -idirafter ${DESTDIR}/usr/include/g++
.endif
d20 1
a20 1
.if defined(PARALLEL)
d30 1
a30 1
	${COMPILE.c} -o ${.TARGET} ${.TARGET:R}.yy.c 
d45 4
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
