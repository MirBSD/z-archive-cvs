head	1.10;
access;
symbols
	MIRBSD_10:1.6.0.2
	MIRBSD_10_BASE:1.6
	MIRBSD_9_BASE:1.5
	MIRBSD_8:1.5.0.2
	MIRBSD_8_BASE:1.5
	cvs-200507211800:1.1.1.2
	cvs-200507040220:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2015.10.16.14.50.53;	author tg;	state Exp;
branches;
next	1.9;
commitid	10056210ED9045E511A;

1.9
date	2015.10.13.17.05.17;	author tg;	state Exp;
branches;
next	1.8;
commitid	100561D39E3574F1475;

1.8
date	2009.03.22.15.27.34;	author tg;	state Exp;
branches;
next	1.7;
commitid	10049C658D8343E383D;

1.7
date	2008.04.10.14.07.46;	author tg;	state Exp;
branches;
next	1.6;
commitid	10047FE1F455D192B1C;

1.6
date	2007.05.17.18.38.36;	author tg;	state Exp;
branches;
next	1.5;
commitid	100464CA0BC3310E768;

1.5
date	2005.07.21.22.52.11;	author tg;	state Exp;
branches;
next	1.4;
commitid	236342e02714f4f2;

1.4
date	2005.07.04.02.37.18;	author tg;	state Exp;
branches;
next	1.3;
commitid	5a3342c8a0eed80e;

1.3
date	2005.02.14.19.21.20;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.14.18.57.46;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.17;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.17;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.04.02.25.10;	author tg;	state Exp;
branches;
next	;
commitid	5c2f42c89e13d7c7;


desc
@@


1.10
log
@making __MAN{,INST}ALL always recurse has unwanted side effects; revert
@
text
@# $MirOS: src/share/mk/bsd.subdir.mk,v 1.9 2015/10/13 17:05:17 tg Exp $
# $OpenBSD: bsd.subdir.mk,v 1.14 2005/02/05 10:39:50 espie Exp $
# $NetBSD: bsd.subdir.mk,v 1.11 1996/04/04 02:05:06 jtc Exp $
# @@(#)bsd.subdir.mk	5.9 (Berkeley) 2/1/91

.if !defined(BSD_SUBDIR_MK)
BSD_SUBDIR_MK=1

.if !target(.MAIN)
.MAIN: all
.endif

# Make sure this is defined
SKIPDIR?=

_SUBDIRUSE: .USE
.if defined(SUBDIR)
	@@for _dirent_ in ${SUBDIR}; do \
		if [[ -d ${.CURDIR}/$$_dirent_.${MACHINE} ]]; then \
			_newdir_=$$_dirent_.${MACHINE}; \
		else \
			_newdir_=$$_dirent_; \
		fi; \
		if [[ -n $$_thisdir_ ]]; then \
			_nextdir_=$$_thisdir_/$$_newdir_; \
		else \
			_nextdir_=$$_newdir_; \
		fi; \
		if [[ -s ${.CURDIR}/$$_newdir_/Makefile.bsd-wrapper ]]; then \
			_nextmf_="-f Makefile.bsd-wrapper"; \
		else \
			_nextmf_=; \
		fi; \
		_nextsd_=; \
		for _skipck_ in ${SKIPDIR}; do \
			if [[ $$_skipck_ = $$_dirent_ ]]; then \
				print -r "($$_nextdir_ skipped)"; \
				continue 2; \
			elif [[ $$_skipck_ != $$_dirent_/* ]]; then \
				continue; \
			fi; \
			_nextsd_="$$_nextsd_ $${_skipck_#$$_dirent_/}"; \
		done; \
		print -r "===> $$_nextdir_"; \
		(cd ${.CURDIR}/$$_newdir_ && exec ${MAKE} \
		    SKIPDIR="$$_nextsd_" ${MAKE_FLAGS} $$_nextmf_ \
		    ${.TARGET:S/realinstall/install/:S/.depend/depend/}); \
	done

${SUBDIR}::
	@@if [[ -d ${.CURDIR}/$@@.${MACHINE} ]]; then \
		_newdir_=$@@.${MACHINE}; \
	else \
		_newdir_=$@@; \
	fi; \
	if [[ -s ${.CURDIR}/$$_newdir_/Makefile.bsd-wrapper ]]; then \
		_nextmf_="-f Makefile.bsd-wrapper"; \
	else \
		_nextmf_=; \
	fi; \
	print -r "===> $$_newdir_"; \
	cd ${.CURDIR}/$$_newdir_ && exec ${MAKE} \
	    ${MAKE_FLAGS} $$_nextmf_ _thisdir_="$$_newdir_" all
.endif

.if !target(install)
.  if !target(beforeinstall)
beforeinstall:
.  endif
.  if !target(afterinstall)
afterinstall:
.  endif
install: maninstall
maninstall: afterinstall
afterinstall: realinstall
realinstall: beforeinstall _SUBDIRUSE
.endif

.if !target(includes)
BSD_SUBDIR_MK_NOINCLUDES=1
.endif

BSD_SUBDIR_MK_TARGETS=all clean cleandir includes depend lint obj tags regress
.ifdef BSD_SUBDIR_MK_MANRECURSE
BSD_SUBDIR_MK_TARGETS+=__MANALL __MANINSTALL
.endif

.for t in ${BSD_SUBDIR_MK_TARGETS}
.  if !target($t)
$t: _SUBDIRUSE
.  endif
.endfor

_subdircheck:
	@@missing=; \
	new=; \
	sp=; \
	all=' '; \
	_skiplist="$${_skiplist-CVS .svn}"; \
	_skiplist=" $$_skiplist "; \
	for s in ${SUBDIR}; do \
		all="$$all$$s "; \
		[[ ! -d $$s ]] || continue; \
		missing="$$missing$$sp$$s"; \
		sp=' '; \
	done; \
	sp=; \
	for s in * .*; do \
		[[ $$_skiplist != *@@( $$s )* ]] || continue; \
		[[ -d $$s ]] || continue; \
		[[ $$all != *@@( $$s )* ]] || continue; \
		new="$$new$$sp$$s"; \
		sp=' '; \
	done; \
	print "Missing in current directory:\n\t$$missing"; \
	print "New in current directory:\n\t$$new"

.if !defined(BSD_OWN_MK)
.  include <bsd.own.mk>
.endif

.endif
@


1.9
log
@let __MANALL and __MANINSTALL recurse
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.subdir.mk,v 1.8 2009/03/22 15:27:34 tg Exp $
d83 6
a88 1
.for t in all clean cleandir includes depend lint obj tags regress __MANALL __MANINSTALL
@


1.8
log
@rewrite subdir code again, to be more tolerant to shells,
especially these that do implement the POSuX stuff correctly

(even if we won't need it soon due to oksh patches, better is)

XXX some of this code still looks gruel
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.subdir.mk,v 1.7 2008/04/10 14:07:46 tg Exp $
d83 1
a83 1
.for t in all clean cleandir includes depend lint obj tags regress
@


1.7
log
@optimise
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.subdir.mk,v 1.6 2007/05/17 18:38:36 tg Exp $
d18 3
a20 4
	@@for entry in ${SUBDIR}; do ( \
		set -e; \
		if [[ -d ${.CURDIR}/$$entry.${MACHINE} ]]; then \
			_newdir_="$$entry.${MACHINE}"; \
d22 1
a22 1
			_newdir_="$$entry"; \
d24 2
a25 2
		if [[ -z $$_THISDIR_ ]]; then \
			_nextdir_="$$_newdir_"; \
d27 1
a27 1
			_nextdir_="$$_THISDIR_/$$_newdir_"; \
d29 12
a40 12
		_makefile_spec_=; \
		[[ ! -f ${.CURDIR}/$$_newdir_/Makefile.bsd-wrapper ]] \
		    || _makefile_spec_="-f Makefile.bsd-wrapper"; \
		subskipdir=; \
		for skipdir in ${SKIPDIR}; do \
			subentry=$${skipdir#$$entry}; \
			if [[ $$subentry != $$skipdir ]]; then \
				if [[ -z $$subentry ]]; then \
					print -r -- "($$_nextdir_ skipped)"; \
					break; \
				fi; \
				subskipdir="$$subskipdir $${subentry#/}"; \
d42 1
d44 5
a48 8
		if [[ -z $$skipdir || -n $$subentry ]]; then \
			print -r "===> $$_nextdir_"; \
			cd ${.CURDIR}/$$_newdir_; \
			${MAKE} SKIPDIR="$$subskipdir" $$_makefile_spec_ \
			    _THISDIR_="$$_nextdir_" ${MAKE_FLAGS} \
			    ${.TARGET:S/realinstall/install/:S/.depend/depend/}; \
		fi; \
	) done
d51 7
a57 3
	@@set -e; \
	if [[ -d ${.CURDIR}/${.TARGET}.${MACHINE} ]]; then \
		_newdir_=${.TARGET}.${MACHINE}; \
d59 1
a59 1
		_newdir_=${.TARGET}; \
a60 3
	_makefile_spec_=; \
	[[ ! -f ${.CURDIR}/$$_newdir_/Makefile.bsd-wrapper ]] \
	    || _makefile_spec_="-f Makefile.bsd-wrapper"; \
d62 2
a63 2
	cd ${.CURDIR}/$$_newdir_; \
	${MAKE} ${MAKE_FLAGS} $$_makefile_spec_ _THISDIR_="$$_newdir_" all
@


1.6
log
@more includes-target overhaul:
• document it
• do it for <bsd.prog.mk> too
• move it to <bsd.sys.mk>, handle generation by <bsd.subdir.mk>
• add /usr/include/openssl to mtree(8) base system tree file
• have all libs and flex use the generic target
• clean them up; repair a few bugs
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.subdir.mk,v 1.5 2005/07/21 22:52:11 tg Exp $
d38 1
a38 1
					echo "($$_nextdir_ skipped)"; \
d45 1
a45 1
			echo "===> $$_nextdir_"; \
d63 1
a63 1
	echo "===> $$_newdir_"; \
@


1.5
log
@* merge
* bump patchlevel (userland)
* invent _subdircheck target
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.subdir.mk,v 1.4 2005/07/04 02:37:18 tg Exp $
d81 4
@


1.4
log
@merge OpenBSD
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.subdir.mk,v 1.3 2005/02/14 19:21:20 tg Exp $
a80 1

d87 24
@


1.3
log
@all:		optimise a bit
obj/subdir:	rewrite using mksh features
@
text
@d1 2
a2 2
# $MirOS: src/share/mk/bsd.subdir.mk,v 1.2 2005/02/14 18:57:46 tg Exp $
# $OpenBSD: bsd.subdir.mk,v 1.12 2004/01/18 23:44:51 marc Exp $
d47 2
a48 2
			${MAKE} ${.MAKEFLAGS} SKIPDIR="$$subskipdir" \
			    $$_makefile_spec_ _THISDIR_="$$_nextdir_" \
d65 1
a65 1
	${MAKE} ${.MAKEFLAGS} $$_makefile_spec_ _THISDIR_="$$_newdir_" all
a80 3
.if !target(all)
all: _SUBDIRUSE
.endif
d82 5
a86 31
.if !target(clean)
clean: _SUBDIRUSE
.endif

.if !target(cleandir)
cleandir: _SUBDIRUSE
.endif

.if !target(includes)
includes: _SUBDIRUSE
.endif

.if !target(depend)
depend: _SUBDIRUSE
.endif

.if !target(lint)
lint: _SUBDIRUSE
.endif

.if !target(obj)
obj: _SUBDIRUSE
.endif

.if !target(tags)
tags: _SUBDIRUSE
.endif

.if !target(regress)
regress: _SUBDIRUSE
.endif
@


1.2
log
@merge these from ncvs 1
@
text
@d1 1
a1 1
# $MirOS$
d18 4
a21 3
	@@for entry in ${SUBDIR}; do \
		(set -e; if test -d ${.CURDIR}/$${entry}.${MACHINE}; then \
			_newdir_="$${entry}.${MACHINE}"; \
d23 1
a23 1
			_newdir_="$${entry}"; \
d25 2
a26 2
		if test X"${_THISDIR_}" = X""; then \
			_nextdir_="$${_newdir_}"; \
d28 1
a28 1
			_nextdir_="$${_THISDIR_}/$${_newdir_}"; \
d30 4
a33 5
		_makefile_spec_=""; \
		if [ -e ${.CURDIR}/$${_newdir_}/Makefile.bsd-wrapper ]; then \
			_makefile_spec_="-f Makefile.bsd-wrapper"; \
		fi; \
		subskipdir=''; \
d35 4
a38 4
			subentry=$${skipdir#$${entry}}; \
			if [ X$${subentry} != X$${skipdir} ]; then \
				if [ X$${subentry} = X ]; then \
					echo "($${_nextdir_} skipped)"; \
d41 1
a41 1
				subskipdir="$${subskipdir} $${subentry#/}"; \
d44 5
a48 5
		if [ X$${skipdir} = X -o X$${subentry} != X ]; then \
			echo "===> $${_nextdir_}"; \
			cd ${.CURDIR}/$${_newdir_}; \
			${MAKE} ${.MAKEFLAGS} SKIPDIR="$${subskipdir}" \
			    $${_makefile_spec_} _THISDIR_="$${_nextdir_}" \
d50 2
a51 2
		fi); \
	done
d54 2
a55 1
	@@set -e; if test -d ${.CURDIR}/${.TARGET}.${MACHINE}; then \
d60 6
a65 7
	_makefile_spec_=""; \
	if [ -f ${.CURDIR}/$${_newdir_}/Makefile.bsd-wrapper ]; then \
		_makefile_spec_="-f Makefile.bsd-wrapper"; \
	fi; \
	echo "===> $${_newdir_}"; \
	cd ${.CURDIR}/$${_newdir_}; \
	${MAKE} ${.MAKEFLAGS} $${_makefile_spec_} _THISDIR_="$${_newdir_}" all
@


1.1
log
@Initial revision
@
text
@d1 7
a7 3
#	$OpenBSD: bsd.subdir.mk,v 1.12 2004/01/18 23:44:51 marc Exp $
#	$NetBSD: bsd.subdir.mk,v 1.11 1996/04/04 02:05:06 jtc Exp $
#	@@(#)bsd.subdir.mk	5.9 (Berkeley) 2/1/91
d69 1
a69 1
.if !target(beforeinstall)
d71 2
a72 2
.endif
.if !target(afterinstall)
d74 1
a74 1
.endif
d118 3
a120 1
.include <bsd.own.mk>
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@the dreaded importer strikes again
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.subdir.mk,v 1.14 2005/02/05 10:39:50 espie Exp $
d43 1
a43 1
			${MAKE} SKIPDIR="$${subskipdir}" \
a44 1
			    ${MAKE_FLAGS} \
d61 1
a61 1
	${MAKE} ${MAKE_FLAGS} $${_makefile_spec_} _THISDIR_="$${_newdir_}" all
d65 1
a65 1
.  if !target(beforeinstall)
d67 2
a68 2
.  endif
.  if !target(afterinstall)
d70 1
a70 1
.  endif
d77 19
d97 15
a111 5
.for t in all clean cleandir includes depend lint obj tags regress
.  if !target($t)
$t: _SUBDIRUSE
.  endif
.endfor
d114 1
a114 1
.  include <bsd.own.mk>
@

