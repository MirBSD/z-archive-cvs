head	1.65;
access;
symbols
	MIRBSD_10:1.53.0.2
	MIRBSD_10_BASE:1.53
	tg-release_reconsider:1.47
	MIRBSD_9_BASE:1.35
	MIRBSD_8:1.31.0.2
	MIRBSD_8_BASE:1.31
	cvs-200507211800:1.1.1.2
	cvs-200507040220:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.65
date	2016.03.03.23.51.30;	author tg;	state Exp;
branches;
next	1.64;
commitid	10056D8CDDB557933AC;

1.64
date	2014.11.26.19.29.29;	author tg;	state Exp;
branches;
next	1.63;
commitid	10054762A213E06B080;

1.63
date	2010.12.24.00.11.00;	author tg;	state Exp;
branches;
next	1.62;
commitid	1004D13E5244D978DD8;

1.62
date	2010.08.14.20.53.08;	author tg;	state Exp;
branches;
next	1.61;
commitid	1004C6702403C804E92;

1.61
date	2010.01.06.19.07.38;	author tg;	state Exp;
branches;
next	1.60;
commitid	1004B44DF660B3051D8;

1.60
date	2009.03.29.13.04.21;	author tg;	state Exp;
branches;
next	1.59;
commitid	10049CF71B654F9EF54;

1.59
date	2008.12.13.23.29.29;	author tg;	state Exp;
branches;
next	1.58;
commitid	1004944455B2BE258CF;

1.58
date	2008.10.16.13.31.21;	author tg;	state Exp;
branches;
next	1.57;
commitid	10048F742164012C987;

1.57
date	2008.10.05.20.14.30;	author tg;	state Exp;
branches;
next	1.56;
commitid	10048E9203C1320A0A1;

1.56
date	2008.08.02.00.45.40;	author tg;	state Exp;
branches;
next	1.55;
commitid	1004893AE1364EF8187;

1.55
date	2008.03.27.14.09.09;	author tg;	state Exp;
branches;
next	1.54;
commitid	10047EBAA8F77F6311A;

1.54
date	2008.03.22.20.42.22;	author tg;	state Exp;
branches;
next	1.53;
commitid	10047E56F3D79B31F44;

1.53
date	2007.08.24.14.25.34;	author tg;	state Exp;
branches;
next	1.52;
commitid	10046CEEA1D199F064A;

1.52
date	2007.08.24.14.20.06;	author tg;	state Exp;
branches;
next	1.51;
commitid	10046CEE8E817DEC27F;

1.51
date	2007.06.26.19.05.51;	author tg;	state Exp;
branches;
next	1.50;
commitid	100468163A43FCC24E6;

1.50
date	2007.06.26.19.04.04;	author tg;	state Exp;
branches;
next	1.49;
commitid	1004681633728643C8B;

1.49
date	2007.06.07.17.22.38;	author tg;	state Exp;
branches;
next	1.48;
commitid	10046683EF46F9D9C3A;

1.48
date	2007.06.07.02.39.16;	author tg;	state Exp;
branches;
next	1.47;
commitid	10046676FDD3739CAF8;

1.47
date	2007.05.16.23.44.37;	author tg;	state Exp;
branches;
next	1.46;
commitid	100464B975245ACE14B;

1.46
date	2007.03.09.10.24.51;	author tg;	state Exp;
branches;
next	1.45;
commitid	10045F1360A06595CA7;

1.45
date	2007.03.09.10.07.32;	author tg;	state Exp;
branches;
next	1.44;
commitid	10045F131B26B0A8A15;

1.44
date	2007.02.18.03.24.07;	author tg;	state Exp;
branches;
next	1.43;
commitid	10045D7C6A2702AB120;

1.43
date	2006.11.01.20.48.58;	author tg;	state Exp;
branches;
next	1.42;
commitid	1004549084D791E12D5;

1.42
date	2006.10.28.19.52.51;	author tg;	state Exp;
branches;
next	1.41;
commitid	1004543B4F81120B887;

1.41
date	2006.09.29.22.10.09;	author tg;	state Exp;
branches;
next	1.40;
commitid	100451D99CE46DC0EEA;

1.40
date	2006.09.29.21.42.33;	author tg;	state Exp;
branches;
next	1.39;
commitid	100451D93594D00EE0F;

1.39
date	2006.09.25.15.22.30;	author tg;	state Exp;
branches;
next	1.38;
commitid	1004517F44717D0D61E;

1.38
date	2006.07.02.23.31.50;	author tg;	state Exp;
branches;
next	1.37;
commitid	10044A8575760F61F97;

1.37
date	2006.06.30.18.11.02;	author tg;	state Exp;
branches;
next	1.36;
commitid	10044A5693745E9F1D6;

1.36
date	2006.06.27.14.16.38;	author tg;	state Exp;
branches;
next	1.35;
commitid	10044A13DD6684859FA;

1.35
date	2006.06.17.22.12.44;	author tg;	state Exp;
branches;
next	1.34;
commitid	10044947A600871A477;

1.34
date	2006.06.15.18.11.36;	author tg;	state Exp;
branches;
next	1.33;
commitid	1004491A2D56D07D882;

1.33
date	2006.06.10.23.21.18;	author tg;	state Exp;
branches;
next	1.32;
commitid	100448B53FF63A66069;

1.32
date	2005.12.29.23.17.04;	author tg;	state Exp;
branches;
next	1.31;
commitid	10043B46E7169DC7DD6;

1.31
date	2005.12.17.05.57.55;	author tg;	state Exp;
branches;
next	1.30;
commitid	10043A3A8D2077BDEA8;

1.30
date	2005.12.16.21.48.45;	author tg;	state Exp;
branches;
next	1.29;
commitid	10043A33616407103C3;

1.29
date	2005.12.15.01.28.38;	author tg;	state Exp;
branches;
next	1.28;
commitid	10043A0C6C66D3269DA;

1.28
date	2005.12.07.07.47.50;	author tg;	state Exp;
branches;
next	1.27;
commitid	0439693918dc758e;

1.27
date	2005.11.24.14.08.35;	author tg;	state Exp;
branches;
next	1.26;
commitid	af4385c9756c7e;

1.26
date	2005.10.21.20.00.13;	author tg;	state Exp;
branches;
next	1.25;
commitid	7c2f435948d43637;

1.25
date	2005.10.06.20.59.43;	author tg;	state Exp;
branches;
next	1.24;
commitid	114343459034471e;

1.24
date	2005.10.02.18.49.03;	author tg;	state Exp;
branches;
next	1.23;
commitid	3d443402ba6828e;

1.23
date	2005.09.12.21.53.12;	author tg;	state Exp;
branches;
next	1.22;
commitid	50444325f8ca3178;

1.22
date	2005.08.28.19.39.01;	author tg;	state Exp;
branches;
next	1.21;
commitid	6ba3431212b764dc;

1.21
date	2005.08.26.23.29.36;	author tg;	state Exp;
branches;
next	1.20;
commitid	7f52430fa5d41cea;

1.20
date	2005.08.21.12.14.00;	author tg;	state Exp;
branches;
next	1.19;
commitid	14304308700940f1;

1.19
date	2005.08.21.11.45.50;	author tg;	state Exp;
branches;
next	1.18;
commitid	1c13430869647d4b;

1.18
date	2005.08.21.11.26.19;	author tg;	state Exp;
branches;
next	1.17;
commitid	4c7b430864e00c71;

1.17
date	2005.07.04.02.37.18;	author tg;	state Exp;
branches;
next	1.16;
commitid	5a3342c8a0eed80e;

1.16
date	2005.06.18.17.53.21;	author tg;	state Exp;
branches;
next	1.15;
commitid	cbf42b45f9d2ddc;

1.15
date	2005.06.14.13.47.39;	author tg;	state Exp;
branches;
next	1.14;
commitid	7c9942aedfb6942d;

1.14
date	2005.06.09.20.55.14;	author tg;	state Exp;
branches;
next	1.13;
commitid	1c7142a8acb3a486;

1.13
date	2005.06.09.20.49.39;	author tg;	state Exp;
branches;
next	1.12;
commitid	c9642a8ab6f1bec;

1.12
date	2005.05.23.22.07.42;	author tg;	state Exp;
branches;
next	1.11;
commitid	6b942925443b739;

1.11
date	2005.05.23.11.59.07;	author tg;	state Exp;
branches;
next	1.10;
commitid	7d2b4291c5850420;

1.10
date	2005.05.23.11.00.36;	author tg;	state Exp;
branches;
next	1.9;
commitid	70564291b7ba0abe;

1.9
date	2005.05.21.14.45.16;	author tg;	state Exp;
branches;
next	1.8;
commitid	529f428f4989141d;

1.8
date	2005.04.29.00.21.57;	author tg;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.13.19.02.11;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2005.04.11.18.17.21;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2005.04.10.20.35.15;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.10.19.46.37;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.29.02.19.35;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.14.18.57.46;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.27.17;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.27.17;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.04.02.25.10;	author tg;	state Exp;
branches;
next	;
commitid	5c2f42c89e13d7c7;


desc
@@


1.65
log
@render PDF manpages in PA4 paper size ipv DIN ISO A4 paper size
@
text
@# $MirOS: src/share/mk/bsd.own.mk,v 1.63 2010/12/24 00:11:00 tg Exp $
# $OpenBSD: bsd.own.mk,v 1.92 2005/01/18 00:28:42 mickey Exp $
# $NetBSD: bsd.own.mk,v 1.24 1996/04/13 02:08:09 thorpej Exp $

.if !defined(BSD_OWN_MK)
BSD_OWN_MK=1

# Host-specific overrides
.if defined(MAKECONF) && exists(${MAKECONF})
.  include "${MAKECONF}"
.elif exists(/etc/${MAKE:T}.cfg)
.  include "/etc/${MAKE:T}.cfg"
.endif

SKEY?=		Yes	# no = avoid building with support for S/Key auth
DEBUGLIBS?=	Yes	# yes (snapshots), no (releases), removed (mirmake)
MALLOC_TYPE?=	omalloc	# default: omalloc, other: brk, mmap

CROSS_MODE?=	No
.if !make(obj) && (${CROSS_MODE:L} == "yes")
DEFFLAGS=	No
EXPERIMENTAL=	Yes
.endif

DEFFLAGS?=	Yes
.if ${DEFFLAGS:L} != "no"
COPTS?=		${_DEFCOPTS} ${GCEXTRA}
.else
COPTS?=		# at least define it
.endif

.ifdef __CRAZY
WARNINGS=	yes
CFLAGS+=	-Wall -Wextra -Wunused -Wdeclaration-after-statement -Wundef \
		-Wendif-labels -Wshadow -Wpointer-arith -Wbad-function-cast \
		-Wcast-qual -Wcast-align -Wwrite-strings -Wstrict-prototypes \
		-Wold-style-definition -Wmissing-prototypes -Winline \
		-Wmissing-declarations -Wmissing-noreturn -Winit-self \
		-Wmissing-format-attribute -Wredundant-decls
.endif

# Set to yes to add CDIAGFLAGS to CFLAGS
WARNINGS?=		No
# Set to yes to build shared libraries with basic debugging information
DEBUGLIBS?=		No	# yes, we have this twice
# Set to sudo to automatically switch to root and only if needed
SUDO?=
# where the system object and source trees are kept; can be configurable
# by the user in case they want them in ~/foosrc and ~/fooobj, for example
BSDSRCDIR?=		/usr/src
BSDOBJDIR?=		/usr/obj
BSDRELDIR?=		/usr/releng
# Shared files for system GNU configure and build process
GNUSYSTEM_AUX_DIR?=	${BSDSRCDIR}/gnu/share
LTMIRMAKE?=		No


BINOWN?=	root
BINGRP?=	bin
CONFGRP?=	wheel
BINMODE?=	555
NONBINMODE?=	444
DIRMODE?=	755

BSD_PREFIX?=	/usr

SHAREDIR?=	${BSD_PREFIX}/share
SHAREOWN?=	${BINOWN}
SHAREGRP?=	${BINGRP}
SHAREMODE?=	${NONBINMODE}

.if ${BSD_PREFIX} == "/usr"
MANDIR?=	${BSD_PREFIX}/share/man/cat
.else
MANDIR?=	${BSD_PREFIX}/man/cat
.endif
MANOWN?=	${SHAREOWN}
MANGRP?=	${SHAREGRP}
MANMODE?=	${NONBINMODE}

LIBDIR?=	${BSD_PREFIX}/lib
LINTLIBDIR?=	${BSD_PREFIX}/libdata/lint
LIBOWN?=	${BINOWN}
LIBGRP?=	${BINGRP}
LIBMODE?=	${NONBINMODE}

DOCDIR?=	${SHAREDIR}/doc
DOCOWN?=	${SHAREOWN}
DOCGRP?=	${SHAREGRP}
DOCMODE?=	${NONBINMODE}

LKMDIR?=	${BSD_PREFIX}/lkm
LKMOWN?=	${BINOWN}
LKMGRP?=	${BINGRP}
LKMMODE?=	${NONBINMODE}

NOLINT?=	yes
NOMAN?=		no
NOOBJ?=		no
NOPIC?=		no

LDFLAGS?=
.if ${NOPIC:L} != "no"
LDSTATIC=	-static
.endif

OBJECT_FMT=	ELF		# ELF a.out COFF Mach-O PE
RTLD_TYPE=	BSD		# dyld GNU BSD

.if ${OBJECT_FMT} == "Mach-O"
PICFLAG=	-fno-common
.elif ${OBJECT_FMT} == "PE"
PICFLAG=	# not needed; -fpic/-fPIC generates broken code
.elif (${MACHINE_ARCH} == "sparc") || (${MACHINE_ARCH} == "sparc64")
PICFLAG=	-fPIC
.else
PICFLAG=	-fpic
.endif

.if ${MACHINE_ARCH} == "sparc"
ASPICFLAG=	-KPIC
.elif ${OBJECT_FMT} == "a.out"
ASPICFLAG=	-k
.endif

INSTALL_COPY?=	-c
.ifndef DEBUG
.  if ${OBJECT_FMT} == "Mach-O"
INSTALL_STRIP?=
STRIP?=		strip -x
.  else
INSTALL_STRIP?=	-s
STRIP?=		strip
.  endif
.endif
INSTALL_STRIP?=
STRIP?=		:

# XXX fixme
PIC?=		cat --
BIB?=		cat --

BIB?=		bib
EQN?=		neqn
GREMLIN?=	grn
GRIND?=		vgrind -f
INDXBIB?=	indxbib
MKDEP_SH?=	mkdep
MKSH?=		/bin/mksh
NROFF?=		nrcon ${MACROS} ${PAGES}
PIC?=		pic
REFER?=		refer
ROFF?=		groff -Tps -P-p28c,21c ${MACROS} ${PAGES}
SOELIM?=	soelim
TBL?=		tbl

# this used to be in <bsd.prog.mk> but we need it
# e.g. for depending DLLs on CSU objects

.if ${OBJECT_FMT} == "ELF"
LIBCRT0?=	${DESTDIR}/usr/lib/crt0.o
CRTBEGIN?=	${DESTDIR}/usr/lib/crtbegin.o
CRTEND?=	${DESTDIR}/usr/lib/crtend.o
CRTI?=		${DESTDIR}/usr/lib/crti.o
CRTN?=		${DESTDIR}/usr/lib/crtn.o
.  if defined(DESTDIR)
${CRTBEGIN} ${CRTEND} ${CRTI} ${CRTN} ${LIBCRT0}: .OPTIONAL .NOTMAIN
.  endif
.endif
LIBC?=		${DESTDIR}/usr/lib/libc.a
LIBCOMPAT?=	${DESTDIR}/usr/lib/libcompat.a
LIBCRYPTO?=	${DESTDIR}/usr/lib/libcrypto.a
LIBCURSES?=	${DESTDIR}/usr/lib/libcurses.a
LIBDES?=	${DESTDIR}/usr/lib/libdes.a
LIBEDIT?=	${DESTDIR}/usr/lib/libedit.a
LIBEVENT?=	${DESTDIR}/usr/lib/libevent.a
LIBEXPAT?=	${DESTDIR}/usr/lib/libexpat.a
LIBFL?=		${DESTDIR}/usr/lib/libfl.a
LIBFORM?=	${DESTDIR}/usr/lib/libform.a
LIBICONV?=	${DESTDIR}/usr/lib/libiconv.a
LIBKEYNOTE?=	${DESTDIR}/usr/lib/libkeynote.a
LIBKVM?=	${DESTDIR}/usr/lib/libkvm.a
LIBL?=		${DESTDIR}/usr/lib/libl.a
LIBM?=		${DESTDIR}/usr/lib/libm.a
LIBMBFUN?=	${DESTDIR}/usr/lib/libmbfun.a
LIBMDSUP?=	${DESTDIR}/usr/lib/libmdsup.a
LIBMENU?=	${DESTDIR}/usr/lib/libmenu.a
LIBMILTER?=	${DESTDIR}/usr/lib/libmilter.a
LIBOLDCURSES?=	${DESTDIR}/usr/lib/libocurses.a
LIBOSSAUDIO?=	${DESTDIR}/usr/lib/libossaudio.a
LIBPANEL?=	${DESTDIR}/usr/lib/libpanel.a
LIBPCAP?=	${DESTDIR}/usr/lib/libpcap.a
LIBPERL?=	${DESTDIR}/usr/lib/libperl.a
LIBPNG?=	${DESTDIR}/usr/lib/libpng.a
LIBPTHREAD?=	${DESTDIR}/usr/lib/libpthread.a
LIBRPCSVC?=	${DESTDIR}/usr/lib/librpcsvc.a
LIBSECTOK?=	${DESTDIR}/usr/lib/libsectok.a
LIBSKEY?=	${DESTDIR}/usr/lib/libskey.a
LIBSSL?=	${DESTDIR}/usr/lib/libssl.a
LIBTERMCAP?=	${DESTDIR}/usr/lib/libtermcap.a
LIBTERMLIB?=	${DESTDIR}/usr/lib/libtermlib.a
LIBUSB?=	${DESTDIR}/usr/lib/libusbhid.a
LIBUTIL?=	${DESTDIR}/usr/lib/libutil.a
LIBY?=		${DESTDIR}/usr/lib/liby.a
LIBZ?=		${DESTDIR}/usr/lib/libz.a

.if ${MACHINE_ARCH} == "i386"
LIBARCH?=	${DESTDIR}/usr/lib/lib${MACHINE_ARCH}.a
.else
LIBARCH?=
.endif

# old stuff
LIBOSSAUDIO?=	${DESTDIR}/usr/lib/libossaudio.a

.PHONY: spell clean cleandir obj manpages print all \
	depend beforedepend afterdepend cleandepend \
	all lint cleanman includes \
	beforeinstall realinstall maninstall afterinstall install

.endif
@


1.64
log
@remove MKC_USAP fully from the tree, we don’t deal with patents
@
text
@d153 1
a153 1
ROFF?=		groff -Tps ${MACROS} ${PAGES}
@


1.63
log
@fix build; make omalloc default; sync lists (objc, lynx)
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.62 2010/08/14 20:53:08 tg Exp $
a45 2
# Set to yes for a stricter patent policy (USA and OpenBSD only)
MKC_USAP?=		No
@


1.62
log
@new library for all those pesky functions like cdblockedread() or
my arc4random extensions or ambstowcs(3) or whatever other MirBSD
specific functions we provide – this way, they can be shared on a
crunchgen(1)d executable (such as ramdisks’ instbin) but need not
affect libc or other shared libraries’ versions

XXX manpages ought to still be mandated
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.61 2010/01/06 19:07:38 tg Exp $
d15 1
a15 1
SKEY?=		Yes	# no = avoid building with support for S/key auth
d17 1
a17 1
MALLOC_TYPE?=	mmap	# default: mmap, other: brk
@


1.61
log
@since install(1) has no --stripflags=-x even on OSX, we must not
strip by default on Mach-O targets; we however can default STRIP
to "strip -x" I'd say (bsiegert@@ please test); see ML discussion
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.60 2009/03/29 13:04:21 tg Exp $
d187 1
@


1.60
log
@• take care of dbins
• #!/bin/mksh shebang, in most places
• rcsid while here
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.59 2008/12/13 23:29:29 tg Exp $
a98 8
INSTALL_COPY?=	-c
.ifndef DEBUG
INSTALL_STRIP?=	-s
STRIP?=		strip
.endif
INSTALL_STRIP?=
STRIP?=		:

d128 13
@


1.59
log
@standard path to mksh is /usr/dbin/mksh on MirOS-current
(sometimes I curse myself for giving in to that idea…)
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.58 2008/10/16 13:31:21 tg Exp $
d146 1
a146 1
MKSH?=		/usr/dbin/mksh
@


1.58
log
@fix sparc ld.so(8) which depended on some libc interna (for softfloat,
soft integer divmul, etc. mostly) by installing a new libmdsup and linking
against it
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.57 2008/10/05 20:14:30 tg Exp $
d146 1
a146 1
MKSH?=		/bin/mksh
@


1.57
log
@add experimental, discouraged LTMIRMAKE variable and modus operandi
sort of works for dylibs and programmes; does not consider bundles yet

shouldn’t affect normal operation at all

agreed to commit bsiegert@@
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.56 2008/08/02 00:45:40 tg Exp $
d182 1
@


1.56
log
@yay, optu*.c do not build, because, tadaa, with debugging cflags I had
-std=c99 enabled, with normal cflags not…

time to break ancient code which is not -std=c99 (well, -std=gnu99, with
extensions) clean (ISTR oldroff already sets -std=gnu89)
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.55 2008/03/27 14:09:09 tg Exp $
d57 1
@


1.55
log
@we no longer have ${STATIC} now, /bin and /sbin are always
statically linked
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.54 2008/03/22 20:42:22 tg Exp $
d39 1
a39 1
		-Wmissing-format-attribute -Wredundant-decls -std=gnu99
@


1.54
log
@past release → re-enable DEBUGLIBS
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.53 2007/08/24 14:25:34 tg Exp $
a105 4
# This may be changed for _single filesystem_ configurations (such as
# routers and other embedded systems); normal systems should leave it alone!
STATIC?=	-static

d112 2
a113 2
.if ${NOPIC:L} != "no" && !${LDFLAGS:M-static}
LDFLAGS+=	${STATIC}
@


1.53
log
@revert the -std=gnu99–by–default change until programmes are ready, as this
is too much annoying (for now) – extra commit so that we have a changeset
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.52 2007/08/24 14:20:06 tg Exp $
d16 1
a16 1
DEBUGLIBS?=	No	# yes (snapshots), no (releases), removed (mirmake)
@


1.52
log
@• add -std=gnu99 to default CFLAGS
• first round of assorted fixes
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.51 2007/06/26 19:05:51 tg Exp $
d39 1
a39 1
		-Wmissing-format-attribute -Wredundant-decls
@


1.51
log
@variablise strip
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.50 2007/06/26 19:04:04 tg Exp $
d39 1
a39 1
		-Wmissing-format-attribute -Wredundant-decls -std=gnu99
@


1.50
log
@this was used by mirmake
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.49 2007/06/07 17:22:38 tg Exp $
d101 1
d104 1
@


1.49
log
@GRAUGH!
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.48 2007/06/07 02:39:16 tg Exp $
d209 3
@


1.48
log
@clean up for release (mostly: we don't build them with debuglibs)
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.47 2007/05/16 23:44:37 tg Exp $
d99 1
a99 1
.ifndef	DEBUG
d101 1
a101 1
.else
a102 1
.endif
@


1.47
log
@__CRAZY flags:
• remove -pedantic, we want to use GNU extensions to ISO C99
  (variadic macros, mostly)
• add -Winit-self, which would've cought 100463F23E61B6C1395
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.46 2007/03/09 10:24:51 tg Exp $
d16 1
a16 1
DEBUGLIBS?=	Yes	# yes (snapshots), no (releases), removed (mirmake)
a108 4
#.if ${MACHINE_ARCH} == "sparc"
#NOPIC=		yes
#.endif

d119 2
a120 5
# MirOS is always ELF for now, although the possible choices
# are: ELF a.out COFF Mach-O PE (consistent with nbsd)
# RTLD: dyld GNU BSD
OBJECT_FMT=	ELF
RTLD_TYPE=	BSD
d187 1
d204 1
a204 1
.if (${MACHINE_ARCH} == "i386")
a209 5
# old stuff
LIBOSSAUDIO?=	${DESTDIR}/usr/lib/libossaudio.a
LIBOTERMCAP?=	${DESTDIR}/usr/lib/libotermcap.a
LIBRESOLV?=	${DESTDIR}/usr/lib/libresolv.a

@


1.46
log
@remove redundancy w/ <sys.mk>
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.45 2007/03/09 10:07:32 tg Exp $
d38 1
a38 1
		-Wmissing-declarations -Wmissing-noreturn -pedantic \
@


1.45
log
@• bsd.own.mk: simplify, don't over-use := operator
• sys.mk: make ___DISPLAY_MAKEVARS usable with targets specified on
  the command line as well (just produces a line of superfluous output
  per target: “`foo' is up to date.” but that can be filtered out easily.
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.44 2007/02/18 03:24:07 tg Exp $
a26 1
CC?=		mgcc
@


1.44
log
@change __CRAZY=Yes from -std=c99 to -std=gnu99; rationale:
gcc -std=c99 defines _STRICT_ANSI__ which, in <sys/cdefs.h>,
forces all __*_VISIBLE=0, thusly not defining valid MirOS
extensions, such as e.g. the taitime functions
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.43 2006/11/01 20:48:58 tg Exp $
d20 1
a20 4
.if make(obj)
CROSS_MODE:=	No
.endif
.if ${CROSS_MODE:L} == "yes"
@


1.43
log
@sync list of DPADD libs
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.42 2006/10/28 19:52:51 tg Exp $
d43 1
a43 1
		-Wmissing-format-attribute -Wredundant-decls -std=c99
@


1.42
log
@* add new CONFGRP?=wheel (mirmake: same as BINGRP, unless BINGRP is the
  default of 'bin', in which case, it defaults to '0')
* sort logically, not alphabetically
* INSTALL_STRIP libs (while here)
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.41 2006/09/29 22:10:09 tg Exp $
d190 1
a190 1
LIBGPC?=	${DESTDIR}/usr/lib/libgpc.a
a196 1
LIBOBJC?=	${DESTDIR}/usr/lib/libobjc.a
d202 1
@


1.41
log
@nuke SYS_INCLUDE for good, we always do copies
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.40 2006/09/29 21:42:33 tg Exp $
d63 1
d65 1
a65 1
BINOWN?=	root
d73 1
a74 1
SHAREOWN?=	${BINOWN}
d82 1
a83 1
MANOWN?=	${SHAREOWN}
d88 1
a89 1
LIBOWN?=	${BINOWN}
d93 1
a94 1
DOCOWN?=	${SHAREOWN}
d98 1
a99 1
LKMOWN?=	${BINOWN}
@


1.40
log
@mark crt0 as notmain too, fix groff
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.39 2006/09/25 15:22:30 tg Exp $
a111 5
# Define SYS_INCLUDE to indicate whether you want symbolic links to the system
# source (''symlinks''), or a separate copy (''copies''); (latter useful
# in environments where it's not possible to keep /sys publicly readable)
SYS_INCLUDE?=	copies

@


1.39
log
@#9-current: mmap malloc, debuglibs
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.38 2006/07/02 23:31:50 tg Exp $
d167 1
a167 1
ROFF?=		groff -Tps -M/usr/share/tmac ${MACROS} ${PAGES}
d175 1
d181 1
a181 1
${CRTBEGIN} ${CRTEND} ${CRTI} ${CRTN}: .OPTIONAL .NOTMAIN
a183 2

LIBCRT0?=	${DESTDIR}/usr/lib/crt0.o
@


1.38
log
@* depend all shared libraries on libc
* remove refs to a few obsolete libs
* we don't depend on libgcc since it's machdep and compiler-dependent
* bump mirmake vsn
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.37 2006/06/30 18:11:02 tg Exp $
d16 2
a17 2
DEBUGLIBS?=	No	# yes (snapshots), no (releases), removed (mirmake)
MALLOC_TYPE?=	brk	# default: mmap
@


1.37
log
@sync; welcome to the world of dynamic arches, sparc
thanks http://mail-index.netbsd.org/port-sparc/1994/12/03/0002.html
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.36 2006/06/27 14:16:38 tg Exp $
a185 1
LIBCDK?=	${DESTDIR}/usr/lib/libcdk.a
a192 1
LIBF2C?=	${DESTDIR}/usr/lib/libg2c.a
a194 3
LIBFRTBEGIN?=	${DESTDIR}/usr/lib/libfrtbegin.a
LIBG2C?=	${DESTDIR}/usr/lib/libg2c.a
LIBGCC?=	${DESTDIR}/usr/lib/libgcc.a
a208 1
LIBRX?=		${DESTDIR}/usr/lib/librx.a
a215 1
LIBWRAP?=	${DESTDIR}/usr/lib/libwrap.a
@


1.36
log
@sparc is NOPIC as of now
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.35 2006/06/17 22:12:44 tg Exp $
d117 3
a119 3
.if ${MACHINE_ARCH} == "sparc"
NOPIC=		yes
.endif
@


1.35
log
@remove more of these AMD64 remains
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.34 2006/06/15 18:11:36 tg Exp $
d117 3
a119 5
# don't try to generate PIC versions of libraries on machines
# which don't support PIC.
#.if (${MACHINE_ARCH} == "vax") || (${MACHINE_ARCH} == "m88k")
#NOPIC=		yes
#.endif
@


1.34
log
@switch to DEBUGLIBS?=No, MALLOC_TYPE?=brk for release
bump os patchlevel

agreed bsiegert@@
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.33 2006/06/10 23:21:18 tg Exp $
d228 1
a228 2
.if (${MACHINE_ARCH} == "alpha" || ${MACHINE_ARCH} == "amd64" || \
     ${MACHINE_ARCH} == "i386")
@


1.33
log
@fix cross build
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.32 2005/12/29 23:17:04 tg Exp $
d16 2
d48 2
a49 2
# Set to yes to build debugging versions of shared libraries
DEBUGLIBS?=		Yes	# default: No for releases and MirMake
@


1.32
log
@* bsd.own.mk: this is #8-current, switch DEBUGLIBS on
* sys.mk: bump _MIRMAKE_VER to tomorrow (will have to regen anyway)
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.31 2005/12/17 05:57:55 tg Exp $
d30 2
@


1.31
log
@bsiegert@@ decided it wouldn't be that good an idea to include debugging
symbols in all libraries for the release (but we'll do for snapshots).

bump mirmake and miros patchlevels
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.30 2005/12/16 21:48:45 tg Exp $
d45 1
a45 1
DEBUGLIBS?=		No	# default: No for releases and MirMake
@


1.30
log
@DEBUGLIBS is back, defaulting to Yes (mirbsd) / No (mirmake),
adding -g1 (for now, later maybe -g) to shared+static library
builds to provide meaningful backtraces

XXX might change default for mirmake to Yes as well
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.28 2005/12/07 07:47:50 tg Exp $
d45 1
a45 1
DEBUGLIBS?=		Yes
@


1.29
log
@remove hooks for DEBUGLIBS, DEBUGPROGS
gdb happily loaded $PROG.dbg but forgot libc.so.X.Y.dbg *sigh*
@
text
@d44 2
@


1.28
log
@set DEBUGLIBS and DEBUGPROGS to no for now
- doesn't work as I wanted it (debugging installboot was a PITA)
- openbsd's libs-with--g1 approach looks better and more saving
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.27 2005/11/24 14:08:35 tg Exp $
a43 3
# Set to yes to build debugging versions of shared libraries and programmes
DEBUGLIBS?=		No
DEBUGPROGS?=		No
@


1.27
log
@variablise mkdep
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.26 2005/10/21 20:00:13 tg Exp $
d45 2
a46 2
DEBUGLIBS?=		Yes
DEBUGPROGS?=		Yes
@


1.26
log
@* DEFCOPTS -> _DEFCOPTS
* add them in MirMake, too
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.25 2005/10/06 20:59:43 tg Exp $
d161 1
@


1.25
log
@for current development, it actually makes sense to enable DEBUGPROGS too
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.24 2005/10/02 18:49:03 tg Exp $
a25 1
# Automatic CC/COPTS assignment system
a26 1

d29 1
a29 1
COPTS?=		${DEFCOPTS} ${GCEXTRA}
@


1.24
log
@default DEBUGLIBS to Yes in MirOS, but not (for now?) MirMake.
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.23 2005/09/12 21:53:12 tg Exp $
d48 1
a48 1
DEBUGPROGS?=		No
@


1.23
log
@* remove macppc mentioning
* shuffle around to ease mmake's job
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.22 2005/08/28 19:39:01 tg Exp $
d47 1
a47 1
DEBUGLIBS?=		No
@


1.22
log
@* no RANLIB needed for us any more
* remove old DEBUGLIBS (libFOO_g.a)
  still available by 'make libFOO_g.a', but ignored by make install
* add new DEBUGLIBS and DEBUGPROGS using .gnu.debuglink section
* fix display
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.21 2005/08/26 23:29:36 tg Exp $
d15 2
d32 3
a34 1
.  ifdef __CRAZY
a41 5
.  endif
.endif

.if ${MACHINE} == "macppc"
CRTN?=		${DESTDIR}/usr/lib/ncrtn.o
a45 2
# Set to no to avoid building with support for S/key authentication
SKEY?=			Yes
a57 1
PORTSDIR?=		/usr/ports
@


1.21
log
@defining PREFIX in <bsd.own.mk> breaks MirPorts (yeah, cool eh?)
use BSD_PREFIX instead
XXX change the other stuff where I used PREFIX recently
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.20 2005/08/21 12:14:00 tg Exp $
d49 1
a49 1
# Set to yes to build debugging versions of shared libraries
d51 1
@


1.20
log
@hardcode OBJECT_FMT and RTLD_TYPE
mirmake now detects it on build time
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.19 2005/08/21 11:45:50 tg Exp $
d71 1
a71 1
PREFIX?=	/usr
d73 1
a73 1
SHAREDIR?=	${PREFIX}/share
d78 2
a79 2
.if ${PREFIX} == "/usr"
MANDIR?=	${PREFIX}/share/man/cat
d81 1
a81 1
MANDIR?=	${PREFIX}/man/cat
d87 2
a88 2
LIBDIR?=	${PREFIX}/lib
LINTLIBDIR?=	${PREFIX}/libdata/lint
d98 1
a98 1
LKMDIR?=	${PREFIX}/lkm
@


1.19
log
@mk.conf -> make.cfg (uses basename of $MAKE, for portable mirmake's sake)
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.18 2005/08/21 11:26:19 tg Exp $
d137 1
a137 7
.if ${OStype} == "Darwin"
OBJECT_FMT=	Mach-O
RTLD_TYPE=	dyld
.elif !empty(OStype:M*Interix)
OBJECT_FMT=	PE
RTLD_TYPE=	GNU
.else
a139 1
.endif
@


1.18
log
@* PREFIXify BINDIR, SHAREDIR, MANDIR etc.
* use print not printf for ___DISPLAY_MAKEVARS
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.17 2005/07/04 02:37:18 tg Exp $
d11 2
a12 2
.elif exists(/etc/mk.conf)
.  include "/etc/mk.conf"
@


1.17
log
@merge OpenBSD
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.16 2005/06/18 17:53:21 tg Exp $
d71 3
a73 1
SHAREDIR?=	/usr/share
d78 5
a82 1
MANDIR?=	/usr/share/man/cat
d87 2
a88 2
LIBDIR?=	/usr/lib
LINTLIBDIR?=	/usr/libdata/lint
d93 1
a93 1
DOCDIR?=	/usr/share/doc
d98 1
a98 1
LKMDIR?=	/usr/lkm
@


1.16
log
@thanks for not getting enough answers; revert DEBUGLIBS to no for now
@
text
@d1 2
a2 2
# $MirOS: src/share/mk/bsd.own.mk,v 1.15 2005/06/14 13:47:39 tg Exp $
# $OpenBSD: bsd.own.mk,v 1.84 2004/06/22 19:50:01 pvalchev Exp $
@


1.15
log
@* use ${LINKER} not ${CC} in <bsd.lib.mk>, like <bsd.prog.mk>
* set LINKER to ${CXX} if ${SRCS} contains a C++ file
  (unused within MirOS source tree though)
  XXX could we add -lobjc to LDADD if SRCS contain an ObjC/ObjC++ file?
* enable DEBUGLIBS to show off that it isn't broken ;)
* bump patchlevel
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.14 2005/06/09 20:55:14 tg Exp $
d50 1
a50 1
DEBUGLIBS?=		Yes
@


1.14
log
@* GCC3_EXT_TOOLCHAIN is obsolete (we only have gcc3)
* DEBUGLIBS is no longer broken
* strip comments a bit
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.13 2005/06/09 20:49:39 tg Exp $
d50 2
a51 2
DEBUGLIBS?=		No
# Set to yes for a stricter patent policy
@


1.13
log
@there is no such thing as -fpic/-fPIC on PE arches
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.12 2005/05/23 22:07:42 tg Exp $
d45 1
a45 3
# crtbegin.o/crtend.o from gcc3 (yes) or src/lib/csu (no)?
GCC3_EXT_TOOLCHAIN?=	Yes
# Set 'WARNINGS' to 'yes' to add appropriate warnings to each compilation
d47 1
a47 1
# Set 'SKEY' to 'yes' to build with support for S/key authentication.
d49 1
a49 2
# Set 'DEBUGLIBS' to 'yes' to build libraries with debugging symbols
# currently broken
d51 1
a51 1
# Ignore USA-only patents for build (by default, build it, MirOS is EU not US)
d53 1
a53 1
# Set 'SUDO' to 'sudo' to build releases, packages etc. as user
d61 1
a61 1
# Shared files for system gnu configure
@


1.12
log
@mksh
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.11 2005/05/23 11:59:07 tg Exp $
d147 2
@


1.11
log
@* if __CRAZY, automatically add CDIAGFLAGS, and add them AFTER our
  crazy warning options
* use it for mksh
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.10 2005/05/23 11:00:36 tg Exp $
d168 1
a168 1
MKSH?=		/bin/ksh
@


1.10
log
@add my crazy warning options, GCC 3.4.3 edition
I've been building mksh (-Wno-cast-qual) and the
MirPorts package tools (-Wno-unreachable-code)
with these for quite a while now
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.9 2005/05/21 14:45:16 tg Exp $
d31 2
a32 1
DEFCOPTS+=	-Wall -Wextra -Wunused -Wdeclaration-after-statement -Wundef \
@


1.9
log
@support GNU rtld, used by Interix and MirOS Interix
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.8 2005/04/29 00:21:57 tg Exp $
d30 8
@


1.8
log
@stuff like this is always .NOTMAIN
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.7 2005/04/13 19:02:11 tg Exp $
d127 1
d130 1
d133 1
@


1.7
log
@default all to ${BINOWN}:${BINGRP}
no functional change

clean up comments
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.6 2005/04/11 18:17:21 tg Exp $
d173 1
a173 1
${CRTBEGIN} ${CRTEND} ${CRTI} ${CRTN}: .OPTIONAL
@


1.6
log
@ports/lang/tcl/8.4/patches/patch-tcl_m4 says sparc needs -fPIC too
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.5 2005/04/10 20:35:15 tg Exp $
d22 1
a22 1
.endif	# CROSS_MODE
d30 1
a30 1
.endif	# DEFFLAGS
d66 2
a67 2
SHAREGRP?=	bin
SHAREOWN?=	root
d71 2
a72 2
MANGRP?=	bin
MANOWN?=	root
d82 2
a83 2
DOCGRP?=	bin
DOCOWN?=	root
@


1.5
log
@be case sensitive for OBJECT_FMT
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.4 2005/04/10 19:46:37 tg Exp $
d135 1
a135 1
.elif ${MACHINE_ARCH} == "sparc64"
@


1.4
log
@* distinguish OBJECT_FMT per OStype
  Darwin -> Mach-O
  Interix (SFU) -> PE
  MirOS Interix -> PE
  everything else -> ELF, currently
* distinguish PICFLAG better, according to OBJECT_FMT too
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.3 2005/03/29 02:19:35 tg Exp $
d143 1
a143 1
.elif ${OBJECT_FMT:L} == "a.out"
d167 1
a167 1
.if ${OBJECT_FMT:U} == "ELF"
@


1.3
log
@time to die for a feature which has been disabled in MirOS
for a good two years, maybe longer, with nobody complaining

pf can do this functionality equally well, I think
@
text
@d1 1
a1 1
# $MirOS: src/share/mk/bsd.own.mk,v 1.2 2005/02/14 18:57:46 tg Exp $
d125 5
d131 1
d133 5
a137 4
# PIC relocation flags.
#.if ${MACHINE_ARCH} == "sparc64"
#PICFLAG=	-fPIC
#.else
d139 1
a139 8
#.  if ${MACHINE_ARCH} == "m68k"
# Function CSE makes gas -k not recognize external function calls as lazily
# resolvable symbols, thus sometimes making ld.so report undefined symbol
# errors on symbols found in shared library members that would never be
# called.  Ask niklas@@openbsd.org for details.
#PICFLAG+=-fno-function-cse
#.  endif
#.endif
d143 2
a144 2
#.elif ${OBJECT_FMT:L} == "aout"
#ASPICFLAG=	-k
@


1.2
log
@merge these from ncvs 1
@
text
@d1 1
a1 1
# $MirOS$
a41 3
# Set 'TCP_WRAPPERS' to 'yes' to build certain networking daemons with
# integrated support for libwrap.
TCP_WRAPPERS?=		No
@


1.1
log
@Initial revision
@
text
@d1 6
a6 2
#	$OpenBSD: bsd.own.mk,v 1.84 2004/06/22 19:50:01 pvalchev Exp $
#	$NetBSD: bsd.own.mk,v 1.24 1996/04/13 02:08:09 thorpej Exp $
d10 1
a10 1
.include "${MAKECONF}"
d12 1
a12 1
.include "/etc/mk.conf"
d15 3
a17 21
# Set `WARNINGS' to `yes' to add appropriate warnings to each compilation
WARNINGS?=	no
# Set `SKEY' to `yes' to build with support for S/key authentication.
SKEY?=		yes
# Set `KERBEROS5' to `yes' to build with support for Kerberos5 authentication.
KERBEROS5?=	yes
# Set `YP' to `yes' to build with support for NIS/YP.
YP?=		yes
# Set `TCP_WRAPPERS' to `yes' to build certain networking daemons with
# integrated support for libwrap.
TCP_WRAPPERS?=	yes
# Set `AFS` to `yes' to build with AFS support.
AFS?=		yes
# Set `DEBUGLIBS' to `yes' to build libraries with debugging symbols
DEBUGLIBS?=	no
# Set toolchain to be able to know differences.
.if ${MACHINE_ARCH} == "m68k" || ${MACHINE_ARCH} == "m88k" || \
    ${MACHINE_ARCH} == "vax"
ELF_TOOLCHAIN?=	no
.else
ELF_TOOLCHAIN?=	yes
d19 7
d27 7
a33 7
# do the dew
.if ${MACHINE} == "amd64" || (${MACHINE_ARCH} == "arm" || \
    ${MACHINE_ARCH} == "hppa" || ${MACHINE_ARCH} == "hppa64" || \
    ${MACHINE_ARCH} == "sparc64" || ${MACHINE_ARCH} == "x86_64")
USE_GCC3?=yes
.else
USE_GCC3?=no
d36 16
d54 7
a60 2
BSDSRCDIR?=	/usr/src
BSDOBJDIR?=	/usr/obj
a67 6
# Define MANZ to have the man pages compressed (gzip)
#MANZ=		1

# Define MANPS to have PostScript manual pages generated
#MANPS=		1

a77 5
PSDIR?=		/usr/share/man/ps
PSGRP?=		bin
PSOWN?=		root
PSMODE?=	${NONBINMODE}

d84 1
a84 1
DOCDIR?=        /usr/share/doc
d87 1
a87 1
DOCMODE?=       ${NONBINMODE}
a93 8
NLSDIR?=	/usr/share/nls
NLSGRP?=	bin
NLSOWN?=	root
NLSMODE?=	${NONBINMODE}

# Shared files for system gnu configure, not used yet
GNUSYSTEM_AUX_DIR?=${BSDSRCDIR}/share/gnu

d95 1
a95 1
.ifndef DEBUG
d97 2
d106 1
a106 1
# source (``symlinks''), or a separate copy (``copies''); (latter useful
d108 1
a108 1
#SYS_INCLUDE= 	symlinks
d112 24
a135 10
.if (${MACHINE_ARCH} == "vax") || (${MACHINE_ARCH} == "m88k")
NOPIC=
.endif

# pic relocation flags.
.if (${MACHINE_ARCH} == "sparc64")
PICFLAG=-fPIC
.else
PICFLAG=-fpic
. if ${MACHINE_ARCH} == "m68k"
d140 87
a226 16
PICFLAG+=-fno-function-cse
. endif
.endif

.if (${MACHINE_ARCH} == "sparc64") || (${MACHINE_ARCH} == "sparc")
ASPICFLAG=-KPIC
.elif (${ELF_TOOLCHAIN:L} == "no")
ASPICFLAG=-k
.endif

# don't try to generate PROFILED versions of libraries on machines
# which don't support profiling.
# to add this back use the following line
.if (${MACHINE_ARCH} == "m88k")
#.if 0
NOPROFILE=
d229 4
a232 4
# No lint, for now.
NOLINT=

BSD_OWN_MK=Done
d236 1
a236 1
	all lint cleanman nlsinstall cleannls includes \
d238 2
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@the dreaded importer strikes again
@
text
@d1 1
a1 1
#	$OpenBSD: bsd.own.mk,v 1.92 2005/01/18 00:28:42 mickey Exp $
d34 6
a39 4
# gcc3
.if ${MACHINE_ARCH} == "alpha" || \
    ${MACHINE_ARCH} == "m68k" || ${MACHINE_ARCH} == "m88k" || \
    ${MACHINE_ARCH} == "sparc" || ${MACHINE_ARCH} == "vax"
a40 2
.else
USE_GCC3?=yes
d141 3
a143 1
.if 0
@

