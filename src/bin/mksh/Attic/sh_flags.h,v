head	1.17;
access;
symbols
	mksh-R48b:1.16
	mksh-R48:1.16
	mksh-R47:1.15
	mksh-R46:1.14
	mksh-R45:1.12
	mksh-R44:1.12
	mksh-R43:1.12
	mksh-R42b:1.12
	mksh-R41c:1.12
	mksh-R41b:1.12
	mksh-R42:1.12
	mksh-R41:1.12
	mksh-R41stable:1.12.0.4
	mksh-wheezy:1.12.0.2
	tg-multikey-bind:1.10.0.2
	mksh-R40f:1.8.2.1
	mksh-R40e:1.8.2.1
	mksh-R40d:1.8.2.1
	mksh-R40c:1.8
	mksh-R40b:1.8
	mksh-R40stable:1.8.0.2
	mksh-R40:1.8
	mksh-R39c:1.5
	mksh-R39b:1.5
	tg-wcswidth-behaviour:1.4.0.2;
locks; strict;
comment	@ * @;


1.17
date	2013.11.17.22.22.56;	author tg;	state dead;
branches;
next	1.16;
commitid	100528941C810C8A893;

1.16
date	2013.08.11.14.57.11;	author tg;	state Exp;
branches;
next	1.15;
commitid	1005207A65963070688;

1.15
date	2013.07.21.18.47.24;	author tg;	state Exp;
branches;
next	1.14;
commitid	10051EC2CBD68BDF6A5;

1.14
date	2013.05.02.20.28.15;	author tg;	state Exp;
branches;
next	1.13;
commitid	1005182CC714DDF0A48;

1.13
date	2013.05.02.20.21.45;	author tg;	state Exp;
branches;
next	1.12;
commitid	1005182CAE814B1B129;

1.12
date	2012.06.28.20.14.17;	author tg;	state Exp;
branches;
next	1.11;
commitid	1004FECBB2E41E1396D;

1.11
date	2012.06.28.20.09.30;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004FECBA116C799310;

1.10
date	2012.05.04.20.49.08;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004FA4409A67B135DE;

1.9
date	2011.06.12.15.37.10;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004DF4DD33162FB258;

1.8
date	2011.02.11.01.18.23;	author tg;	state Exp;
branches
	1.8.2.1;
next	1.7;
commitid	1004D548C4E66D17A12;

1.7
date	2010.07.13.13.07.58;	author tg;	state Exp;
branches;
next	1.6;
commitid	1004C3C65071B4AEB31;

1.6
date	2010.07.04.17.33.58;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004C30C5ED28DF693B;

1.5
date	2010.01.28.15.18.51;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004B61A9B525E85DF5;

1.4
date	2009.10.02.18.08.37;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004AC641341D9D9D02;

1.3
date	2009.09.26.03.40.02;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004ABD8CE62D55CFD8;

1.2
date	2009.09.24.17.15.33;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004ABBA8D95908292B;

1.1
date	2009.09.20.16.40.58;	author tg;	state Exp;
branches;
next	;
commitid	1004AB65AF3542D0922;

1.8.2.1
date	2011.11.26.18.23.26;	author tg;	state Exp;
branches;
next	;
commitid	1004ED12E8854A4E765;


desc
@@


1.17
log
@static option creating for cmdline and set, too
(in preparation of doing something real with set ±p)
@
text
@#if defined(SHFLAGS_DEFNS)
__RCSID("$MirOS: src/bin/mksh/sh_flags.h,v 1.16 2013/08/11 14:57:11 tg Exp $");
#define FN(sname,cname,ochar,flags)		\
	static const struct {			\
		/* character flag (if any) */	\
		char c;				\
		/* OF_* */			\
		unsigned char optflags;		\
		/* long name of option */	\
		char name[sizeof(sname)];	\
	} shoptione_ ## cname = {		\
		ochar, flags, sname		\
	};
#elif defined(SHFLAGS_ENUMS)
#define FN(sname,cname,ochar,flags)	cname,
#define F0(sname,cname,ochar,flags)	cname = 0,
#elif defined(SHFLAGS_ITEMS)
#define FN(sname,cname,ochar,flags)	\
	((const char *)(&shoptione_ ## cname)) + 2,
#endif

#ifndef F0
#define F0 FN
#endif

/*
 * special cases (see parse_args()): -A, -o, -s
 *
 * options are sorted by their longnames
 */

/* -a	all new parameters are created with the export attribute */
F0("allexport", FEXPORT, 'a', OF_ANY)

#if HAVE_NICE
/* ./.	bgnice */
FN("bgnice", FBGNICE, 0, OF_ANY)
#endif

/* ./.	enable {} globbing (non-standard) */
FN("braceexpand", FBRACEEXPAND, 0, OF_ANY)

#if !defined(MKSH_NO_CMDLINE_EDITING) || defined(MKSH_LEGACY_MODE)
/* ./.	Emacs command line editing mode */
FN("emacs", FEMACS, 0, OF_ANY)
#endif

/* -e	quit on error */
FN("errexit", FERREXIT, 'e', OF_ANY)

#if !defined(MKSH_NO_CMDLINE_EDITING) || defined(MKSH_LEGACY_MODE)
/* ./.	Emacs command line editing mode, gmacs variant */
FN("gmacs", FGMACS, 0, OF_ANY)
#endif

/* ./.	reading EOF does not exit */
FN("ignoreeof", FIGNOREEOF, 0, OF_ANY)

/* ./.	inherit -x flag */
FN("inherit-xtrace", FXTRACEREC, 0, OF_ANY)

/* -i	interactive shell */
FN("interactive", FTALKING, 'i', OF_CMDLINE)

/* -k	name=value are recognised anywhere */
FN("keyword", FKEYWORD, 'k', OF_ANY)

/* -l	login shell */
FN("login", FLOGIN, 'l', OF_CMDLINE)

/* -X	mark dirs with / in file name completion */
FN("markdirs", FMARKDIRS, 'X', OF_ANY)

#ifndef MKSH_UNEMPLOYED
/* -m	job control monitoring */
FN("monitor", FMONITOR, 'm', OF_ANY)
#endif

/* -C	don't overwrite existing files */
FN("noclobber", FNOCLOBBER, 'C', OF_ANY)

/* -n	don't execute any commands */
FN("noexec", FNOEXEC, 'n', OF_ANY)

/* -f	don't do file globbing */
FN("noglob", FNOGLOB, 'f', OF_ANY)

/* ./.	don't kill running jobs when login shell exits */
FN("nohup", FNOHUP, 0, OF_ANY)

/* ./.	don't save functions in history (no effect) */
FN("nolog", FNOLOG, 0, OF_ANY)

#ifndef MKSH_UNEMPLOYED
/* -b	asynchronous job completion notification */
FN("notify", FNOTIFY, 'b', OF_ANY)
#endif

/* -u	using an unset variable is an error */
FN("nounset", FNOUNSET, 'u', OF_ANY)

/* ./.	don't do logical cds/pwds (non-standard) */
FN("physical", FPHYSICAL, 0, OF_ANY)

/* ./.	errorlevel of a pipeline is the rightmost nonzero value */
FN("pipefail", FPIPEFAIL, 0, OF_ANY)

/* ./.	adhere more closely to POSIX even when undesirable */
FN("posix", FPOSIX, 0, OF_ANY)

/* -p	use suid_profile; privileged shell */
FN("privileged", FPRIVILEGED, 'p', OF_ANY)

/* -r	restricted shell */
FN("restricted", FRESTRICTED, 'r', OF_CMDLINE)

/* ./.	kludge mode for better compat with traditional sh (OS-specific) */
FN("sh", FSH, 0, OF_ANY)

/* -s	(invocation) parse stdin (pseudo non-standard) */
FN("stdin", FSTDIN, 's', OF_CMDLINE)

/* -h	create tracked aliases for all commands */
FN("trackall", FTRACKALL, 'h', OF_ANY)

/* -U	enable UTF-8 processing (non-standard) */
FN("utf8-mode", FUNICODE, 'U', OF_ANY)

/* -v	echo input */
FN("verbose", FVERBOSE, 'v', OF_ANY)

#if !defined(MKSH_NO_CMDLINE_EDITING) || defined(MKSH_LEGACY_MODE)
/* ./.	Vi command line editing mode */
FN("vi", FVI, 0, OF_ANY)

/* ./.	enable ESC as file name completion character (non-standard) */
FN("vi-esccomplete", FVIESCCOMPLETE, 0, OF_ANY)

/* ./.	enable Tab as file name completion character (non-standard) */
FN("vi-tabcomplete", FVITABCOMPLETE, 0, OF_ANY)

/* ./.	always read in raw mode (no effect) */
FN("viraw", FVIRAW, 0, OF_ANY)
#endif

/* -x	execution trace (display commands as they are run) */
FN("xtrace", FXTRACE, 'x', OF_ANY)

/* -c	(invocation) execute specified command */
FN("", FCOMMAND, 'c', OF_CMDLINE)

/*
 * anonymous flags: used internally by shell only (not visible to user)
 */

/* ./.	direct builtin call (divined from argv[0] multi-call binary) */
FN("", FAS_BUILTIN, 0, OF_INTERNAL)

/* ./.	(internal) initial shell was interactive */
FN("", FTALKING_I, 0, OF_INTERNAL)

#undef FN
#undef F0
#undef SHFLAGS_DEFNS
#undef SHFLAGS_ENUMS
#undef SHFLAGS_ITEMS
@


1.16
log
@improve density of .rodata (with net win on .text size(1)) via better struct packing
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/sh_flags.h,v 1.15 2013/07/21 18:47:24 tg Exp $");
@


1.15
log
@Fix most “set -x” problems (LP#1179287)

• “set -x” manually (cmdline too) snapshots fd#2 now
• “set -o inherit-xtrace” introduced; default still enabled
• reverted iodup printing to pre-R45 behaviour
• made Flag(FXTRACE) a proper state machine
@
text
@d2 12
a13 2
__RCSID("$MirOS: src/bin/mksh/sh_flags.h,v 1.14 2013/05/02 20:28:15 tg Exp $");
#define FN(sname,cname,ochar,flags)	/* nothing */
d18 2
a19 1
#define FN(sname,cname,ochar,flags)	{ sname, ochar, flags },
d150 1
a150 1
FN(NULL, FCOMMAND, 'c', OF_CMDLINE)
d157 1
a157 1
FN(NULL, FAS_BUILTIN, 0, OF_INTERNAL)
d160 1
a160 1
FN(NULL, FTALKING_I, 0, OF_INTERNAL)
@


1.14
log
@implement set -o pipefail
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/sh_flags.h,v 1.12 2012/06/28 20:14:17 tg Exp $");
d48 3
@


1.13
log
@• Allow setting both -o posix and -o sh (although only in the same
  command; setting one still unsets the other at first)
• Change subst_exstat to be conformant unless -o sh is set and -o posix isn’t
• In lksh, make subst_exstat (newly) conformant if -o posix
• New MKSH_BINSHPOSIX to accompany MKSH_BINSHREDUCED
• Sync lksh manpage precisely
@
text
@d91 3
@


1.12
log
@fix emacs/vi lksh
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/sh_flags.h,v 1.10 2012/05/04 20:49:08 tg Exp $");
d91 1
a91 1
/* ./.	pdksh compat: somewhat more POSIXish mode (non-standard) */
d100 1
a100 1
/* ./.	pdksh compat: called as sh not mksh; kludge mode (non-standard) */
@


1.11
log
@keep the emacs/gmacs/vi* options in lksh, just they don't do anything any more
@
text
@d32 1
a32 1
#if !defined(MKSH_NO_CMDLINE_EDITING) && !defined(MKSH_LEGACY_MODE)
d40 1
a40 1
#if !defined(MKSH_NO_CMDLINE_EDITING) && !defined(MKSH_LEGACY_MODE)
d115 1
a115 1
#if !defined(MKSH_NO_CMDLINE_EDITING) && !defined(MKSH_LEGACY_MODE)
@


1.10
log
@new MKSH_NO_CMDLINE_EDITING to disable command line editing in its entirety

mainly for the Plan 9 port though it may also help the WinAPI variant,
other porting efforts, as well as a new project I cannot say yet
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/sh_flags.h,v 1.9 2011/06/12 15:37:10 tg Exp $");
d32 1
a32 1
#ifndef MKSH_NO_CMDLINE_EDITING
d40 1
a40 1
#ifndef MKSH_NO_CMDLINE_EDITING
d115 1
a115 1
#if !defined(MKSH_NO_CMDLINE_EDITING) && !MKSH_S_NOVI
@


1.9
log
@drop long-deprecated 'set ±o arc4random'
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/sh_flags.h,v 1.8 2011/02/11 01:18:23 tg Exp $");
d32 1
d35 1
d40 1
d43 1
d115 1
a115 1
#if !MKSH_S_NOVI
@


1.8
log
@• more comment and int→bool cleanup, add and improve some comments
• in interactive mode, always look up {LC_{ALL,CTYPE},LANG} environment
  variables if setlocale/nl_langinfo(CODESET) doesn’t suffice
• add the ability to call any builtin (some don't make sense or wouldn't
  work) directly by analysing argv[0]
• for direct builtin calls, the {LC_{ALL,CTYPE},LANG} environment
  variables determine utf8-mode, even if MKSH_ASSUME_UTF8 was set
• when called as builtin, echo behaves POSIXish
• add domainname as alias for true on MirBSD only, to be able to link it
• sync mksh Makefiles with Build.sh output
• adjust manpage wrt release plans
• link some things to mksh now that we have callable builtins:
  bin/echo bin/kill bin/pwd bin/sleep (exact matches)
  bin/test bin/[ (were scripts before)
  bin/domainname=usr/bin/true usr/bin/false (move to /bin/ now)
• drop linked utilities and, except for echo and kill, their manpages
• adjust instbin and link a few more there as well
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/sh_flags.h,v 1.7 2010/07/13 13:07:58 tg Exp $");
a23 3
/* ./.	backwards compat: dummy, emits a warning */
FN("arc4random", FARC4RANDOM, 0, OF_ANY)

@


1.8.2.1
log
@• MFC this week’s bag of misc fixes
• mark “set ±o arc4random” MKSH_DISABLE_DEPRECATED (for e.g. Android)
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/sh_flags.h,v 1.8 2011/02/11 01:18:23 tg Exp $");
a23 1
#ifndef MKSH_DISABLE_DEPRECATED
a25 1
#endif
@


1.7
log
@compatibility: stick “set ±o arc4random” around for a bit longer,
until R40 is definitively out (so there MAY still be an R39d)

this commit can easily be reverted in its entirety later, when
Build.sh’s compatibility for “-combine” &c. is removed too
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/sh_flags.h,v 1.6 2010/07/04 17:33:58 tg Exp $");
d138 3
@


1.6
log
@to speed up mksh, get rid of arc4random(3) uses and use the LCG always;
depend on ASLR for seeding
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/sh_flags.h,v 1.5 2010/01/28 15:18:51 tg Exp $");
d24 3
@


1.5
log
@To solve the incompatibility issues between mksh-current, old mksh versions
and vendor pdksh versions, re-introduce FPOSIX alongside FSH. The semantics
are now:
‣ set -o posix ⇒
  • disable brace expansion and FSH when triggered
  • use Debian Policy 10.4 compliant non-XSI “echo” builtin
  • do not keep file descriptors > 2 to ksh
‣ set -o sh ⇒
  • set automatically #ifdef MKSH_BINSHREDUCED
  • disable brace expansion and FPOSIX when triggered
  • use Debian Policy 10.4 compliant non-XSI “echo” builtin
  • do not keep file descriptors > 2 to ksh
  • trigger MKSH_MIDNIGHTBSD01ASH_COMPAT mode if compiled in
  • make “set -- $(getopt ab:c "$@@")” construct work

Note that the set/getopt one used to behave POSIXly only with FSH or
FPOSIX (depending on the mksh version) set and Bourne-ish with it not
set, so this changes default mksh behaviour to POSIX!
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/sh_flags.h,v 1.4 2009/10/02 18:08:37 tg Exp $");
a23 5
#if HAVE_ARC4RANDOM
/* ./.	backwards compat: available if arc4random(3) is used for $RANDOM */
FN("arc4random", FARC4RANDOM, 0, OF_INTERNAL)
#endif

@


1.4
log
@* rename "set -o posix" (FPOSIX) to "set -o sh" (FSH) because it's not
  just a "somewhat more POSIX" but also a "/bin/sh legacy kludge" mode
* consistently capitalise POSIX and SUSv3/SUSv4 (same as AT&T ksh) and
  Bourne shell
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/sh_flags.h,v 1.3 2009/09/26 03:40:02 tg Exp $");
d92 3
d101 1
a101 1
/* ./.	called as sh (some POSIX, some kludgy) not mksh (non-standard) */
@


1.3
log
@further optimise and simplify the handling of $RANDOM, reads and writes
to it are now either arc4random or rand/srand, but srand retains the old
state; set +o arc4random is no longer possible, but if it's there we use
arc4random(3), if not, we use rand(3) for $RANDOM reads; optimise special
variable handling too and fix a few consts and other minor things
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/sh_flags.h,v 1.2 2009/09/24 17:15:33 tg Exp $");
a91 3
/* ./.	mock POSIX mode (try to be more compatible; non-standard) */
FN("posix", FPOSIX, 0, OF_ANY)

d98 3
@


1.2
log
@change undef/def MKSH_NOVI into 0/1 MKSH_S_NOVI flag (with more to come:
MKSH_S_EDIT for small (Emacs) editing mode, MKSH_S_FEAT for all the dis-
abled language features), which can be set to 0 despite MKSH_SMALL being
defined to re-enable the Vi command line editing mode (which I wouldn't,
but fits into the general mastermind scheme)
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/sh_flags.h,v 1.1 2009/09/20 16:40:58 tg Exp $");
d25 2
a26 3
/* ./.	for $RANDOM (non-standard), use the following function scheme: */
/*	  0:rand(3)  1:arc4random(3)  2:switch from 1 to 0 on write */
FN("arc4random", FARC4RANDOM, 0, OF_ANY)
@


1.1
log
@more of this:

• shell flags are now handled in one single place (sh_flags.h)
• sync comments (between enum and array) and manpage with reality
• FMONITOR is now no longer needed for Hartz IV shells
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/emacsfn.h,v 1.1 2009/09/20 15:38:07 tg Exp $");
d114 1
a114 1
#ifndef MKSH_NOVI
@

