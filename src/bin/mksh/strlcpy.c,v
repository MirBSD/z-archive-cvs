head	1.10;
access;
symbols
	mksh-R57:1.10
	mksh-R56c:1.10
	mksh-R56b:1.10
	mksh-R56:1.10
	mksh-R55:1.10
	mksh-R54:1.10
	mksh-R53a:1.10
	mksh-R53:1.10
	mksh-R52c:1.10
	mksh-R52b:1.10
	mksh-R52:1.10
	mksh-R51:1.8
	mksh-R50f:1.8
	mksh-R50e:1.8
	mksh-R50stable:1.8.0.2
	mksh-R50d:1.8
	mksh-R50c:1.8
	mksh-R50b:1.8
	mksh-R50:1.8
	mksh-R49:1.8
	mksh-R48b:1.7
	mksh-R48:1.7
	mksh-R47:1.7
	mksh-R46:1.7
	mksh-R45:1.7
	mksh-R44:1.7
	mksh-R43:1.7
	mksh-R42b:1.7
	mksh-R41c:1.7
	mksh-R41b:1.7
	mksh-R42:1.7
	mksh-R41:1.7
	mksh-R41stable:1.7.0.14
	mksh-wheezy:1.7.0.12
	tg-multikey-bind:1.7.0.8
	mksh-R40f:1.7
	mksh-R40e:1.7
	mksh-R40d:1.7
	mksh-R40c:1.7
	mksh-R40b:1.7
	mksh-R40stable:1.7.0.10
	mksh-R40:1.7
	mksh-R39c:1.7
	mksh-R39b:1.7
	tg-wcswidth-behaviour:1.7.0.6
	tg-nameref:1.7.0.4
	mksh-R39:1.7
	tg-mksh-printf-builtin:1.7.0.2
	mksh-R38c:1.7
	mksh-R38b:1.6
	mksh-R38:1.6
	mksh-R37c:1.4
	mksh-R37b:1.3
	mksh-R37:1.3
	mksh-R36b:1.3
	mksh-R36:1.3
	mksh-R35b:1.3
	mksh-R35:1.3
	mksh-R33d:1.2
	mksh-R33c:1.2
	mksh-R33b:1.2
	MIRBSD_10:1.2.0.4
	MIRBSD_10_BASE:1.2
	mksh-R33:1.2
	mksh-R32:1.2
	mksh-R31d:1.2
	mksh-R31c:1.2
	mksh-R31b:1.2
	mksh-R31:1.2
	mksh-R30:1.2
	mksh-R29g:1.2
	mksh-R29f:1.2
	mksh-R29e:1.2
	mksh-R29stable:1.2.0.2
	mksh-R29d:1.2
	mksh-R29c:1.2
	mksh-R29b:1.1
	mksh-R29:1.1;
locks; strict;
comment	@ * @;


1.10
date	2015.11.29.17.05.02;	author tg;	state Exp;
branches;
next	1.9;
commitid	100565B305567B17D70;

1.9
date	2015.09.05.19.19.11;	author tg;	state Exp;
branches;
next	1.8;
commitid	10055EB402C54C3076B;

1.8
date	2013.11.05.22.10.15;	author tg;	state Exp;
branches;
next	1.7;
commitid	10052796CCF0B90DD21;

1.7
date	2009.06.10.18.12.50;	author tg;	state Rel;
branches;
next	1.6;
commitid	1004A2FF7913BD44883;

1.6
date	2009.05.27.09.58.24;	author tg;	state Rel;
branches;
next	1.5;
commitid	1004A1D0E9B4EF3C493;

1.5
date	2009.05.16.18.57.54;	author tg;	state Rel;
branches;
next	1.4;
commitid	1004A0F0CCA221F9E5F;

1.4
date	2009.04.07.19.15.48;	author tg;	state Stab;
branches;
next	1.3;
commitid	10049DBA6782D9CC864;

1.3
date	2008.07.07.12.59.54;	author tg;	state Stab;
branches;
next	1.2;
commitid	1004872135010DD33E5;

1.2
date	2007.04.23.11.33.26;	author tg;	state Exp;
branches
	1.2.4.1;
next	1.1;
commitid	100462C996E13AB5D90;

1.1
date	2007.03.04.03.04.28;	author tg;	state Exp;
branches;
next	;
commitid	10045EA374B3374AB35;

1.2.4.1
date	2008.04.22.13.29.34;	author tg;	state dead;
branches;
next	;
commitid	100480DE80F32BAA72D;


desc
@@


1.10
log
@janitorial work
@
text
@/*-
 * Copyright (c) 2006, 2008, 2009, 2013
 *	mirabilos <m@@mirbsd.org>
 * Copyright (c) 1998 Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include "sh.h"

__RCSID("$MirOS: src/bin/mksh/strlcpy.c,v 1.7 2009/06/10 18:12:50 tg Rel $");

/*
 * Copy src to string dst of size siz. At most siz-1 characters
 * will be copied. Always NUL terminates (unless siz == 0).
 * Returns strlen(src); if retval >= siz, truncation occurred.
 */
#undef strlcpy
size_t
strlcpy(char *dst, const char *src, size_t siz)
{
	const char *s = src;

	if (siz == 0)
		goto traverse_src;

	/* copy as many chars as will fit */
	while (--siz && (*dst++ = *s++))
		;

	/* not enough room in dst */
	if (siz == 0) {
		/* safe to NUL-terminate dst since we copied <= siz-1 chars */
		*dst = '\0';
 traverse_src:
		/* traverse rest of src */
		while (*s++)
			;
	}

	/* count does not include NUL */
	return ((size_t)(s - src - 1));
}
@


1.9
log
@oksh sync, simplify *all* if(x)free(x); constructs, simplify x_push() and sync boilerplate while here
@
text
@d3 1
a3 1
 *	mirabilos <tg@@mirbsd.org>
@


1.8
log
@some bad OSes use _FORTIFY_LEVEL and break this

problem noticed by jonthn
@
text
@d3 1
a3 1
 *	Thorsten Glaser <tg@@mirbsd.org>
@


1.7
log
@more KNF, mostly whitespace, this time more manual labour applying style(9)
@
text
@d2 1
a2 1
 * Copyright (c) 2006, 2008, 2009
d21 1
a21 1
__RCSID("$MirOS: src/bin/mksh/strlcpy.c,v 1.6 2009/05/27 09:58:24 tg Rel $");
d28 1
@


1.6
log
@• Build.sh, strlcpy.c: gcc-current conversion &c. warnings cleanup
• histrap.c, lex.c, misc.c: get average stack frame size to <= 768 bytes
• check.t, sh.h: bump version
@
text
@d21 1
a21 1
__RCSID("$MirOS: src/bin/mksh/strlcpy.c,v 1.5 2009/05/16 18:57:54 tg Rel $");
d24 2
a25 2
 * Copy src to string dst of size siz.  At most siz-1 characters
 * will be copied.  Always NUL terminates (unless siz == 0).
@


1.5
log
@provide upstream version
@
text
@d2 1
a2 1
 * Copyright (c) 2006, 2008
d21 1
a21 1
__RCSID("$MirOS: src/bin/mksh/strlcpy.c,v 1.4 2009/04/07 19:15:48 tg Stab $");
d51 1
a51 1
	return (s - src - 1);
@


1.4
log
@this is no longer shared code
@
text
@d10 7
a16 8
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
d21 1
a21 1
__RCSID("$MirOS: src/bin/mksh/strlcpy.c,v 1.3 2008/07/07 12:59:54 tg Stab $");
@


1.3
log
@libc strlfun.c:
• fix file description, history, etc.
• require <stddef.h> for portable size_t declaration (if ! kernel, bootloader)
• mention why we do _not_ include <string.h> (for building on obsd/mbsd)
• sync RCSID definition with that of mksh (more portable)
• fix strlcat description
• sync strlcpy obsd rcsid and licence header with obsd-current
  (their code change 1.10→1.11 was something we already did)
• use “does not”, not “doesn’t”
• make it easier to produce wcslfun.c

libc wcslfun.c:
• sync with strlfun.c (much easier now)

mksh strlcpy.c:
• sync with strlfun.c (in comments, mostly)

no binary changes
@
text
@d22 1
a22 15
__RCSID("$MirOS: src/lib/libc/string/strlfun.c,v 1.16 2008/07/07 12:59:51 tg Stab $");
__RCSID("$miros: src/lib/libc/string/strlfun.c,v 1.16 2008/07/07 12:59:51 tg Stab $");

#ifndef __predict_true
#define __predict_true(exp)	((exp) != 0)
#endif
#ifndef __predict_false
#define __predict_false(exp)	((exp) != 0)
#endif

/* (multibyte) string functions */
#undef NUL
#undef char_t
#define NUL		'\0'
#define char_t		char
d30 1
a30 1
strlcpy(char_t *dst, const char_t *src, size_t siz)
d32 1
a32 1
	const char_t *s = src;
d34 1
a34 1
	if (__predict_false(siz == 0))
d42 1
a42 1
	if (__predict_false(siz == 0)) {
d44 1
a44 1
		*dst = NUL;
@


1.2
log
@• strlcpy.c: remove superfluous rcs ids in comments
• Build.sh: NetBSD® gives an ignorable link-time warning in mirtoconf
• Build.sh: GNU (HURD) and GNU/kFreeBSD are no longer experimental, I think
@
text
@d2 2
a3 2
 * Copyright (c) 2006, 2007
 *	Thorsten Glaser <tg@@mirbsd.de>
d22 15
a36 2
__RCSID("$MirOS: src/bin/mksh/strlcpy.c,v 1.1 2007/03/04 03:04:28 tg Exp $");
__RCSID("$miros: src/lib/libc/string/strlfun.c,v 1.14 2007/01/07 02:11:40 tg Exp $");
d44 1
a44 1
strlcpy(char *dst, const char *src, size_t siz)
d46 1
a46 1
	const char *s = src;
d48 1
a48 1
	if (siz == 0)
d56 1
a56 1
	if (siz == 0) {
d58 1
a58 1
		*dst = '\0';
d65 1
a65 1
	/* count doesn't include NUL */
@


1.2.4.1
log
@MFC: mksh-R33d code, mksh-current dot.mkshrc
(this code is MirBSD-specific, as Build.sh is not included)
@
text
@d22 1
a22 1
__RCSID("$MirOS: src/bin/mksh/strlcpy.c,v 1.2 2007/04/23 11:33:26 tg Exp $");
@


1.1
log
@• remove strcasestr.c, use home-grown implementation¹, call it stricmp,
  and have it return an API-correct const char *
• enhance and stylify comments
• a little KNF and simplifications
• #ifdef DEBUG: replace strchr and strstr with ucstrchr and ucstrstr
  that take and return a non-const char *, and fix the violations
• new cstrchr, cstrstr (take and give const char *)
• new vstrchr, vstrstr (take const or not, give boolean value)
• new afreechk(x) = afreechv(x,x) = if (x1) afree(x2, ATEMP)
• new ksh_isdash(str) = (str != NULL) && !strcmp(str, "-")
• replace the only use of strrchr with inlined code to shrink
• minor man page fixes
• Minix 3 signames are autogenerated with gcc
• rename strlfun.c to strlcpy.c since we don't do strlcat(3) anyway,
  only strlcpy(3), and shorten it
• dot.mkshrc: move MKSH=… down to the export line
  to not disturb the PS1 visual impression ☺
• dot.mkshrc: Lstripcom(): optimise
• bump version

¹) side effect from creating API-correct cstrchr, cstrstr, etc.
   uses goto so it must be better ☻

tested on mirbsd-current via both Makefile and Build.sh
@
text
@a0 4
/* $MirOS: src/bin/mksh/strlfun.c,v 1.9 2007/01/12 01:49:29 tg Exp $ */
/* $miros: src/lib/libc/string/strlfun.c,v 1.14 2007/01/07 02:11:40 tg Exp $ */
/* $OpenBSD: strlcpy.c,v 1.10 2005/08/08 08:05:37 espie Exp $ */

d22 2
a23 1
__RCSID("$MirOS: src/bin/mksh/strlfun.c,v 1.9 2007/01/12 01:49:29 tg Exp $");
@

