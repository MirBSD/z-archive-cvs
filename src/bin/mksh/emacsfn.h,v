head	1.10;
access;
symbols
	mksh-R57:1.10
	mksh-R56c:1.10
	mksh-R56b:1.10
	mksh-R56:1.10
	mksh-R55:1.10
	mksh-R54:1.10
	mksh-R53a:1.9
	mksh-R53:1.9
	mksh-R52c:1.7
	mksh-R52b:1.7
	mksh-R52:1.7
	mksh-R51:1.6
	mksh-R50f:1.5
	mksh-R50e:1.5
	mksh-R50stable:1.5.0.10
	mksh-R50d:1.5
	mksh-R50c:1.5
	mksh-R50b:1.5
	mksh-R50:1.5
	mksh-R49:1.5
	mksh-R48b:1.5
	mksh-R48:1.5
	mksh-R47:1.5
	mksh-R46:1.5
	mksh-R45:1.5
	mksh-R44:1.5
	mksh-R43:1.5
	mksh-R42b:1.5
	mksh-R41c:1.5
	mksh-R41b:1.5
	mksh-R42:1.5
	mksh-R41:1.5
	mksh-R41stable:1.5.0.8
	mksh-wheezy:1.5.0.6
	tg-multikey-bind:1.5.0.4
	mksh-R40f:1.5
	mksh-R40e:1.5
	mksh-R40d:1.5
	mksh-R40c:1.5
	mksh-R40b:1.5
	mksh-R40stable:1.5.0.2
	mksh-R40:1.5
	mksh-R39c:1.4
	mksh-R39b:1.4
	tg-wcswidth-behaviour:1.4.0.2;
locks; strict;
comment	@ * @;


1.10
date	2016.09.01.12.59.09;	author tg;	state Exp;
branches;
next	1.9;
commitid	10057C8260A04757349;

1.9
date	2016.07.26.21.50.30;	author tg;	state Exp;
branches;
next	1.8;
commitid	1005797DB3F10060352;

1.8
date	2016.07.26.21.37.25;	author tg;	state Exp;
branches;
next	1.7;
commitid	1005797D80749BA13A1;

1.7
date	2015.12.12.21.08.44;	author tg;	state Exp;
branches;
next	1.6;
commitid	100566C8CF54F3FF318;

1.6
date	2015.07.10.18.41.07;	author tg;	state Exp;
branches;
next	1.5;
commitid	10055A0115F077A1AC9;

1.5
date	2010.07.17.22.09.33;	author tg;	state Exp;
branches
	1.5.4.1;
next	1.4;
commitid	1004C42295452E71B6E;

1.4
date	2009.09.23.18.04.55;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004ABA62C8171BD8E4;

1.3
date	2009.09.20.17.23.51;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004AB6650915B0514A;

1.2
date	2009.09.20.17.00.53;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004AB65FBD7253202C;

1.1
date	2009.09.20.15.38.07;	author tg;	state Exp;
branches;
next	;
commitid	1004AB64C5E29E3250E;

1.5.4.1
date	2012.05.09.21.34.29;	author tg;	state Exp;
branches;
next	;
commitid	1004FAAE2A93A87CC34;


desc
@@


1.10
log
@fix English (thanks to Andreas Buschka); TIL:
• to start ⇒ a start
• to begin ⇒ a beginning
@
text
@/*-
 * Copyright (c) 2009, 2010, 2015, 2016
 *	mirabilos <m@@mirbsd.org>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 */

#if defined(EMACSFN_DEFNS)
__RCSID("$MirOS: src/bin/mksh/emacsfn.h,v 1.8 2016/07/26 21:37:25 tg Exp $");
#define FN(cname,sname,flags)	static int x_##cname(int);
#elif defined(EMACSFN_ENUMS)
#define FN(cname,sname,flags)	XFUNC_##cname,
#define F0(cname,sname,flags)	XFUNC_##cname = 0,
#elif defined(EMACSFN_ITEMS)
#define FN(cname,sname,flags)	{ x_##cname, sname, flags },
#endif

#ifndef F0
#define F0 FN
#endif

F0(abort, "abort", 0)
FN(beg_hist, "beginning-of-history", 0)
FN(cls, "clear-screen", 0)
FN(comment, "comment", 0)
FN(comp_comm, "complete-command", 0)
FN(comp_file, "complete-file", 0)
FN(comp_list, "complete-list", 0)
FN(complete, "complete", 0)
FN(del_back, "delete-char-backward", XF_ARG)
FN(del_bword, "delete-word-backward", XF_ARG)
FN(del_char, "delete-char-forward", XF_ARG)
FN(del_fword, "delete-word-forward", XF_ARG)
FN(del_line, "kill-line", 0)
FN(draw_line, "redraw", 0)
#ifndef MKSH_SMALL
FN(edit_line, "edit-line", XF_ARG)
#endif
FN(end_hist, "end-of-history", 0)
FN(end_of_text, "eot", 0)
FN(enumerate, "list", 0)
FN(eot_del, "eot-or-delete", XF_ARG)
FN(error, "error", 0)
#ifndef MKSH_SMALL
FN(eval_region, "evaluate-region", 0)
#endif
FN(expand, "expand-file", 0)
#ifndef MKSH_SMALL
FN(fold_capitalise, "capitalize-word", XF_ARG)
FN(fold_lower, "downcase-word", XF_ARG)
FN(fold_upper, "upcase-word", XF_ARG)
#endif
FN(goto_hist, "goto-history", XF_ARG)
#ifndef MKSH_SMALL
FN(ins_string, "macro-string", XF_NOBIND)
#endif
FN(insert, "auto-insert", XF_ARG)
FN(kill, "kill-to-eol", XF_ARG)
FN(kill_region, "kill-region", 0)
FN(list_comm, "list-command", 0)
FN(list_file, "list-file", 0)
FN(literal, "quote", 0)
FN(meta1, "prefix-1", XF_PREFIX)
FN(meta2, "prefix-2", XF_PREFIX)
FN(meta3, "prefix-3", XF_PREFIX)
FN(meta_yank, "yank-pop", 0)
FN(mv_back, "backward-char", XF_ARG)
FN(mv_beg, "beginning-of-line", 0)
FN(mv_bword, "backward-word", XF_ARG)
FN(mv_end, "end-of-line", 0)
FN(mv_forw, "forward-char", XF_ARG)
FN(mv_fword, "forward-word", XF_ARG)
FN(newline, "newline", 0)
FN(next_com, "down-history", XF_ARG)
FN(nl_next_com, "newline-and-next", 0)
FN(noop, "no-op", 0)
FN(prev_com, "up-history", XF_ARG)
FN(prev_histword, "prev-hist-word", XF_ARG)
FN(search_char_back, "search-character-backward", XF_ARG)
FN(search_char_forw, "search-character-forward", XF_ARG)
FN(search_hist, "search-history", 0)
#ifndef MKSH_SMALL
FN(search_hist_dn, "search-history-down", 0)
FN(search_hist_up, "search-history-up", 0)
#endif
FN(set_arg, "set-arg", XF_NOBIND)
FN(set_mark, "set-mark-command", 0)
FN(transpose, "transpose-chars", 0)
FN(version, "version", 0)
#ifndef MKSH_SMALL
FN(vt_hack, "vt100-hack", XF_ARG)
#endif
FN(xchg_point_mark, "exchange-point-and-mark", 0)
FN(yank, "yank", 0)

#undef FN
#undef F0
#undef EMACSFN_DEFNS
#undef EMACSFN_ENUMS
#undef EMACSFN_ITEMS
@


1.9
log
@oops, !MKSH_SMALL
@
text
@d81 1
a81 1
FN(mv_begin, "beginning-of-line", 0)
@


1.8
log
@implement new evaluate-region editing command (!MKSH_SMALL)

while here, fixup x_redraw refactoring x_clrtoeol, x_pprompt, and x_lastpos
@
text
@d22 1
a22 1
__RCSID("$MirOS: src/bin/mksh/emacsfn.h,v 1.7 2015/12/12 21:08:44 tg Exp $");
d57 1
d59 1
@


1.7
log
@add explicit licence
@
text
@d2 1
a2 1
 * Copyright (c) 2009, 2010, 2015
d22 1
a22 1
__RCSID("$MirOS: src/bin/mksh/emacsfn.h,v 1.6 2015/07/10 18:41:07 tg Exp $");
d57 1
@


1.6
log
@implement support for PC scancodes à la CHR$(0)+CHR$(&h48)
superseding an mksh-os2 patch which confirmed this is needed

Reference: my copy of the Schneider EURO PC manual 50032 for
Microsoft® GW-BASIC
@
text
@d1 20
d22 1
a22 1
__RCSID("$MirOS: src/bin/mksh/emacsfn.h,v 1.4 2009/09/23 18:04:55 tg Exp $");
@


1.5
log
@• merge printf from OpenBSD
• deactivate %a and %A since our libc doesn’t have it
• rewrite the mksh integration code to use shf instead of stdio, removing
  floating point support always in the process, as shf doesn’t support it
  ⇒ saves 11114 (6706 text, 168 data, 4240 bss) with dietlibc on Debian
• fix -Wall -Wextra -Wformat -Wstrict-aliasing=2 for gcc (Debian 4.4.4-7)
• fix these and -Wc++-compat for gcc version 4.6.0 20100711 (experimental)
  [trunk revision 162057] (Debian 20100711-1) except:
  – a few enum warnings that relate to eglibc’s {g,s}etrlimit() functions
    taking an enum instead of an int because they’re too stupid to adhere
    to POSIX interfaces they design by themselves
  – all “request for implicit conversion” involving a "void *" on one side
• tweak the manual page somewhat more
@
text
@d55 1
@


1.5.4.1
log
@store away the first part of the emacs keybinding redesign

I’ve had this plan stashed for some time already but Ogre forced my hand
by committing something possibly offering similar functionality in a way
I’d not like to have new code written in

this does not compile
@
text
@a0 5
/**
 * conditionals to test for with -DDEBUG every once in a while:
 * MKSH_SMALL
 */

d2 2
a3 2
__RCSID("$MirOS: src/bin/mksh/emacsfn.h,v 1.5 2010/07/17 22:09:33 tg Exp $");
#define FN(cname,sname)		static int x_##cname(int);
d5 4
a8 6
#define FN(cname,sname)		XFUNC_##cname,
#define F0(cname,sname)		XFUNC_##cname = 0,
#elif defined(EMACSFN_PTRS)
#define FN(cname,sname)		x_##cname,
#elif defined(EMACSFN_STRS)
#define FN(cname,sname)		sname,
d15 64
a78 23
F0(abort, "abort")
FN(beg_hist, "beginning-of-history")
FN(cls, "clear-screen")
FN(comment, "comment")
FN(comp_comm, "complete-command")
FN(comp_file, "complete-file")
FN(comp_list, "complete-list")
FN(complete, "complete")
FN(del_back, "delete-char-backward")
FN(del_bword, "delete-word-backward")
FN(del_char, "delete-char-forward")
FN(del_fword, "delete-word-forward")
FN(del_line, "kill-line")
FN(draw_line, "redraw")
#ifndef MKSH_SMALL
FN(edit_line, "edit-line")
#endif
FN(end_hist, "end-of-history")
FN(end_of_text, "eot")
FN(enumerate, "list")
FN(eot_del, "eot-or-delete")
FN(error, "error")
FN(expand, "expand-file")
d80 1
a80 3
FN(fold_capitalise, "capitalize-word")
FN(fold_lower, "downcase-word")
FN(fold_upper, "upcase-word")
d82 2
a83 155
FN(goto_hist, "goto-history")
#ifndef MKSH_SMALL
FN(ins_string, "macro-string")	//XXX die!
#endif
FN(insert, "auto-insert")
FN(kill, "kill-to-eol")
FN(kill_region, "kill-region")
FN(list_comm, "list-command")
FN(list_file, "list-file")
FN(literal, "quote")
FN(meta1, "prefix-1")
FN(meta2, "prefix-2")
FN(meta_yank, "yank-pop")
FN(mv_back, "backward-char")
FN(mv_begin, "beginning-of-line")
FN(mv_bword, "backward-word")
FN(mv_end, "end-of-line")
FN(mv_forw, "forward-char")
FN(mv_fword, "forward-word")
FN(newline, "newline")
FN(next_com, "down-history")
FN(nl_next_com, "newline-and-next")
FN(noop, "no-op")
FN(prev_com, "up-history")
FN(prev_histword, "prev-hist-word")
FN(search_char_back, "search-character-backward")
FN(search_char_forw, "search-character-forward")
FN(search_hist, "search-history")
#ifndef MKSH_SMALL
FN(search_hist_dn, "search-history-down")
FN(search_hist_up, "search-history-up")
#endif
FN(set_arg, "set-arg")
FN(set_mark, "set-mark-command")
FN(transpose, "transpose-chars")
FN(version, "version")
FN(xchg_point_mark, "exchange-point-and-mark")
FN(yank, "yank")

#if defined(EMACSFN_DEFNS)
/* these must be kept sorted and must not contain macros */
#define XB(fn)		XF_CONST, XFUNC_##fn
static const uint8_t x_defbindings0[] = {
	CTRL('A'), 0, XB(mv_begin),
	CTRL('B'), 0, XB(mv_back),
	CTRL('D'), 0, XB(eot_del),
	CTRL('E'), 0, XB(mv_end),
	CTRL('F'), 0, XB(mv_forw),
	CTRL('G'), 0, XB(abort),
	CTRL('H'), 0, XB(del_back),
	CTRL('I'), 0, XB(comp_list),
	CTRL('J'), 0, XB(newline),
	CTRL('K'), 0, XB(kill),
	CTRL('L'), 0, XB(draw_line),
	CTRL('M'), 0, XB(newline),
	CTRL('N'), 0, XB(next_com),
	CTRL('O'), 0, XB(nl_next_com),
	CTRL('P'), 0, XB(prev_com),
	CTRL('R'), 0, XB(search_hist),
	CTRL('T'), 0, XB(transpose),
	CTRL('V'), 0, XB(literal),
	CTRL('W'), 0, XB(kill_region),
	CTRL('X'), 0, XF_PREFIX | XB(meta2),
	CTRL('Y'), 0, XB(yank),
	CTRL('['), 0, XF_PREFIX | XB(meta1),
	CTRL(']'), 0, XB(search_char_forw),
	CTRL('^'), 0, XB(literal),
	CTRL('_'), 0, XB(end_of_text),
	CTRL('?'), 0, XB(del_back),
	0 /* max. 26 elements */
};

static const uint8_t x_defbindings1[] = {
	CTRL('H'), 0, XB(del_bword),
	CTRL('L'), 0, XB(cls),
	CTRL('V'), 0, XB(version),
	CTRL('X'), 0, XB(comp_file),
	CTRL('['), 0, XB(complete),
	CTRL(']'), 0, XB(search_char_back),
	' ', 0, XB(set_mark),
	'#', 0, XB(comment),
	'*', 0, XB(expand),
	'.', 0, XB(prev_histword),
	'0', 0, XF_NOBIND | XB(set_arg),
	'1', 0, XF_NOBIND | XB(set_arg),
	'2', 0, XF_NOBIND | XB(set_arg),
	'3', 0, XF_NOBIND | XB(set_arg),
	'4', 0, XF_NOBIND | XB(set_arg),
	'5', 0, XF_NOBIND | XB(set_arg),
	'6', 0, XF_NOBIND | XB(set_arg),
	'7', 0, XF_NOBIND | XB(set_arg),
	'8', 0, XF_NOBIND | XB(set_arg),
	'9', 0, XF_NOBIND | XB(set_arg),
	'<', 0, XB(beg_hist),
	'=', 0, XB(comp_list),
	'>', 0, XB(end_hist),
	'?', 0, XB(enumerate),
#ifndef MKSH_SMALL
	'C', 0, XB(fold_capitalise),
	'L', 0, XB(fold_lower),
#endif
	'O', 0, XF_PREFIX | XB(meta2),
#ifndef MKSH_SMALL
	'U', 0, XB(fold_upper),
#endif
	'[', 0, XF_PREFIX | XB(meta2),
	'_', 0, XB(prev_histword),
	'b', 0, XB(mv_bword),
#ifndef MKSH_SMALL
	'c', 0, XB(fold_capitalise),
#endif
	'd', 0, XB(del_fword),
	'f', 0, XB(mv_fword),
	'g', 0, XB(goto_hist),
	'h', 0, XB(del_bword),
#ifndef MKSH_SMALL
	'l', 0, XB(fold_lower),
	'u', 0, XB(fold_upper),
#endif
	'y', 0, XB(meta_yank),
	CTRL('?'), 0, XB(del_bword),
	0 /* max. 40 elements */
};

static const uint8_t x_defbindings2[] = {
	CTRL('X'), 0, XB(xchg_point_mark),
	CTRL('Y'), 0, XB(list_file),
	CTRL('['), 0, XB(comp_comm),
#ifndef MKSH_SMALL
	'1', ';', '3', 'C', 0, XB(mv_fword),
	'1', ';', '3', 'D', 0, XB(mv_bword),
	'1', ';', '5', 'C', 0, XB(mv_fword),
	'1', ';', '5', 'D', 0, XB(mv_bword),
	'1', '~', 0, XB(mv_begin),
	'3', '~', 0, XB(del_char),
	'4', '~', 0, XB(mv_end),
	'5', '~', 0, XB(search_hist_up),
	'6', '~', 0, XB(search_hist_dn),
	'7', '~', 0, XB(mv_begin),
	'8', '~', 0, XB(mv_end),
#endif
	'?', 0, XB(list_comm),
	'A', 0, XB(prev_com),
	'B', 0, XB(next_com),
	'C', 0, XB(mv_forw),
	'D', 0, XB(mv_back),
#ifndef MKSH_SMALL
	'F', 0, XB(mv_end),
	'H', 0, XB(mv_begin),
	'e', 0, XB(edit_line),
#endif
	0 /* max. 22 elements */
};
#undef XB
#endif /* EMACSFN_DEFNS */
d89 1
a89 2
#undef EMACSFN_PTRS
#undef EMACSFN_STRS
@


1.4
log
@* shrink MKSH_SMALL even further by removing functionality like
  some GNU bash extensions (suggested by cnuke@@) and bind macros
* make the random cache more efficient (and the code potentially
  smaller, although we have a new implementation of the oaat hash
  function, alongside the old one, now) and pushb only if needed
  (i.e. state has changed or user has set $RANDOM, but not onfork)
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/emacsfn.h,v 1.3 2009/09/20 17:23:51 tg Exp $");
d8 1
a8 1
#define FN(cname,sname,flags)	{ x_##cname, #sname, flags },
d15 14
a28 14
F0(abort, abort, 0)
FN(beg_hist, beginning-of-history, 0)
FN(cls, clear-screen, 0)
FN(comment, comment, 0)
FN(comp_comm, complete-command, 0)
FN(comp_file, complete-file, 0)
FN(comp_list, complete-list, 0)
FN(complete, complete, 0)
FN(del_back, delete-char-backward, XF_ARG)
FN(del_bword, delete-word-backward, XF_ARG)
FN(del_char, delete-char-forward, XF_ARG)
FN(del_fword, delete-word-forward, XF_ARG)
FN(del_line, kill-line, 0)
FN(draw_line, redraw, 0)
d30 1
a30 1
FN(edit_line, edit-line, XF_ARG)
d32 6
a37 6
FN(end_hist, end-of-history, 0)
FN(end_of_text, eot, 0)
FN(enumerate, list, 0)
FN(eot_del, eot-or-delete, XF_ARG)
FN(error, error, 0)
FN(expand, expand-file, 0)
d39 3
a41 3
FN(fold_capitalise, capitalize-word, XF_ARG)
FN(fold_lower, downcase-word, XF_ARG)
FN(fold_upper, upcase-word, XF_ARG)
d43 1
a43 1
FN(goto_hist, goto-history, XF_ARG)
d45 1
a45 1
FN(ins_string, macro-string, XF_NOBIND)
d47 24
a70 24
FN(insert, auto-insert, XF_ARG)
FN(kill, kill-to-eol, XF_ARG)
FN(kill_region, kill-region, 0)
FN(list_comm, list-command, 0)
FN(list_file, list-file, 0)
FN(literal, quote, 0)
FN(meta1, prefix-1, XF_PREFIX)
FN(meta2, prefix-2, XF_PREFIX)
FN(meta_yank, yank-pop, 0)
FN(mv_back, backward-char, XF_ARG)
FN(mv_begin, beginning-of-line, 0)
FN(mv_bword, backward-word, XF_ARG)
FN(mv_end, end-of-line, 0)
FN(mv_forw, forward-char, XF_ARG)
FN(mv_fword, forward-word, XF_ARG)
FN(newline, newline, 0)
FN(next_com, down-history, XF_ARG)
FN(nl_next_com, newline-and-next, 0)
FN(noop, no-op, 0)
FN(prev_com, up-history, XF_ARG)
FN(prev_histword, prev-hist-word, XF_ARG)
FN(search_char_back, search-character-backward, XF_ARG)
FN(search_char_forw, search-character-forward, XF_ARG)
FN(search_hist, search-history, 0)
d72 2
a73 2
FN(search_hist_dn, search-history-down, 0)
FN(search_hist_up, search-history-up, 0)
d75 4
a78 4
FN(set_arg, set-arg, XF_NOBIND)
FN(set_mark, set-mark-command, 0)
FN(transpose, transpose-chars, 0)
FN(version, version, 0)
d80 1
a80 1
FN(vt_hack, vt100-hack, XF_ARG)
d82 2
a83 2
FN(xchg_point_mark, exchange-point-and-mark, 0)
FN(yank, yank, 0)
@


1.3
log
@Add a hack input function for VT100-style key sequences; support
Ctrl-CurLeft and Ctrl-CurRight (not quite ANSI, but fits the scheme)
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/emacsfn.h,v 1.2 2009/09/20 17:00:53 tg Exp $");
d44 1
d46 1
@


1.2
log
@shrink MKSH_SMALL by removing certain editor functionality (e.g. the tilde
hack) and functions (up/down/titlecase words; search history PgUp/PgDn)
@
text
@d2 1
a2 1
__RCSID("$MirOS: src/bin/mksh/emacsfn.h,v 1.1 2009/09/20 15:38:07 tg Exp $");
d77 3
@


1.1
log
@if things need to be in a specific order, use automated means to provide
such order, instead of relying on manually retaining it…
@
text
@d2 1
a2 1
__RCSID("$MirOS$");
d29 1
d31 1
d38 1
d42 1
d69 1
d72 1
@

