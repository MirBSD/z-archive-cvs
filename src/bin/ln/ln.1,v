head	1.2;
access;
symbols
	MIRBSD_10:1.1.1.2.0.4
	MIRBSD_10_BASE:1.1.1.2
	MIRBSD_9_BASE:1.1.1.2
	MIRBSD_8:1.1.1.2.0.2
	MIRBSD_8_BASE:1.1.1.2
	cvs-200507211800:1.1.1.2
	cvs-200504291700:1.1.1.2
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.2
date	2017.08.07.20.10.06;	author tg;	state Exp;
branches;
next	1.1;
commitid	1005988C69344442E37;

1.1
date	2005.02.05.17.22.05;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.22.05;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.17.05.14;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@filesystem
@
text
@.\"	$OpenBSD: ln.1,v 1.21 2004/12/17 00:36:07 jaredy Exp $
.\"	$NetBSD: ln.1,v 1.10 1995/07/25 19:37:04 jtc Exp $
.\"
.\" Copyright (c) 1980, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Institute of Electrical and Electronics Engineers, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)ln.1	8.2 (Berkeley) 12/30/93
.\"
.Dd December 30, 1993
.Dt LN 1
.Os
.Sh NAME
.Nm ln
.Nd make hard and symbolic links to files
.Sh SYNOPSIS
.Nm ln
.Op Fl fhns
.Ar source_file
.Op Ar target_file
.Nm ln
.Op Fl fs
.Ar source_file ...\&
.Op Ar target_dir
.Sh DESCRIPTION
The
.Nm
utility creates a new directory entry (linked file) which has the
same modes as the original file.
It is useful for maintaining multiple copies of a file in many places
at once without using up storage for the copies;
instead, a link
.Dq points
to the original copy.
There are two types of links; hard links and symbolic links.
How a link points
to a file is one of the differences between a hard and symbolic link.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl f
Unlink any already existing file, permitting the link to occur.
.It Fl h
If the target is a symlink to a directory, do not descend into it.
.It Fl n
An alias for
.Fl h
for compatibility with other operating systems.
.It Fl s
Create a symbolic link.
.El
.Pp
By default,
.Nm
makes
.Dq hard
links.
A hard link to a file is indistinguishable from the original directory entry;
any changes to a file are effectively independent of the name used to reference
the file.
Hard links may not normally refer to directories and may not span filesystems.
.Pp
A symbolic link contains the name of the file to
which it is linked.
The referenced file is used when an
.Xr open 2
operation is performed on the link.
A
.Xr stat 2
on a symbolic link will return the linked-to file; an
.Xr lstat 2
must be done to obtain information about the link.
The
.Xr readlink 2
call may be used to read the contents of a symbolic link.
Symbolic links may span filesystems, refer to directories, and refer to
non-existent files.
.Pp
Given one or two arguments,
.Nm
creates a link to an existing file
.Ar source_file .
If
.Ar target_file
is given, the link has that name;
.Ar target_file
may also be a directory in which to place the link.
Otherwise, it is placed in the current directory.
If only the directory is specified, the link will be made
to the last component of
.Ar source_file .
.Pp
Given more than two arguments,
.Nm
makes links in
.Ar target_dir
to all the named source files.
The links made will have the same name as the files being linked to.
.Pp
The
.Nm
utility exits 0 on success or >0 if an error occurred.
.Sh EXAMPLES
Create a symbolic link named
.Pa /home/www
and point it to
.Pa /var/www :
.Pp
.Dl # ln -s /var/www /home/www
.Pp
Hard link
.Pa /usr/local/bin/fooprog
to file
.Pa /usr/local/bin/fooprog-1.0 :
.Pp
.Dl # ln /usr/local/bin/fooprog-1.0 /usr/local/bin/fooprog
.Pp
As an exercise, try the following commands:
.Bd -literal -offset indent
$ ls -i /bin/[
11553 /bin/[
$ ls -i /bin/test
11553 /bin/test
.Ed
.Pp
Note that both files have the same inode; that is,
.Pa /bin/[
is essentially an alias for the
.Xr test 1
command.
This hard link exists so
.Xr test 1
may be invoked from shell scripts, for example, using the
.Li "if [ ]"
construct.
.Pp
In the next example, the second call to
.Nm
removes the original
.Pa foo
and creates a replacement pointing to
.Pa baz :
.Bd -literal -offset indent
$ mkdir bar baz
$ ln -s bar foo
$ ln -shf baz foo
.Ed
.Pp
Without the
.Fl h
option, this would instead leave
.Pa foo
pointing to
.Pa bar
and inside
.Pa foo
create a new symlink
.Pa baz
pointing to itself.
This results from directory-walking.
.Sh SEE ALSO
.Xr link 2 ,
.Xr lstat 2 ,
.Xr readlink 2 ,
.Xr stat 2 ,
.Xr symlink 2 ,
.Xr symlink 7
.Sh HISTORY
An
.Nm
utility appeared in
.At v3 .
.Sh CAVEATS
Since the
.Ar source_file
must have its link count incremented, a hard link cannot be created to a
file which is flagged immutable or append-only (see
.Xr chflags 1 ) .
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$OpenBSD: ln.1,v 1.20 2003/06/02 23:32:08 millert Exp $
d48 2
a49 2
.Op Fl fhns
.Ar source_file ...
d87 1
a87 1
Hard links may not normally refer to directories and may not span file systems.
d102 1
a102 1
Symbolic links may span file systems, refer to directories, and refer to
d125 4
d130 1
a130 3
.Li # ln -s /var/www /home/www
.Pp
Creates a symbolic link named
d132 2
a133 2
and points it to
.Pa /var/www .
d135 1
a135 1
.Li # ln /usr/local/bin/fooprog-1.0 /usr/local/bin/fooprog
d140 3
a142 1
.Pa /usr/local/bin/fooprog-1.0 .
d145 6
a150 5
.Pp
.D1 Ic $ ls -i /bin/[
.D1 Li 11553 /bin/[
.D1 Ic $ ls -i /bin/test
.D1 Li 11553 /bin/test
d163 1
a163 3
.Li "$ mkdir bar baz; ln -s bar foo; ln -shf baz foo"
.Pp
The second call to
d168 7
a174 1
.Pa baz .
d176 1
a176 1
.Ar -h
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@improve my Frankenstein OS (*wink* you know who you are) further
sans wchar_t of course

this is the essence of reading >1200 commit messages which suck
due to not having the new format of ours...
@
text
@d1 1
a1 1
.\"	$OpenBSD: ln.1,v 1.21 2004/12/17 00:36:07 jaredy Exp $
d48 2
a49 2
.Op Fl fs
.Ar source_file ...\&
d125 2
d128 1
a128 5
The
.Nm
utility exits 0 on success or >0 if an error occurred.
.Sh EXAMPLES
Create a symbolic link named
d130 2
a131 2
and point it to
.Pa /var/www :
d133 1
a133 1
.Dl # ln -s /var/www /home/www
d138 1
a138 1
.Pa /usr/local/bin/fooprog-1.0 :
d140 1
a140 1
.Dl # ln /usr/local/bin/fooprog-1.0 /usr/local/bin/fooprog
d142 4
a145 7
As an exercise, try the following commands:
.Bd -literal -offset indent
$ ls -i /bin/[
11553 /bin/[
$ ls -i /bin/test
11553 /bin/test
.Ed
d158 3
a160 1
In the next example, the second call to
d165 1
a165 7
.Pa baz :
.Bd -literal -offset indent
$ mkdir bar baz
$ ln -s bar foo
$ ln -shf baz foo
.Ed
.Pp
d167 1
a167 1
.Fl h
@

