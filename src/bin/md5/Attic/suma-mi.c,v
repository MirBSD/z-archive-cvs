head	1.7;
access;
symbols
	MIRBSD_9_BASE:1.6
	MIRBSD_8:1.4.0.2
	MIRBSD_8_BASE:1.4;
locks; strict;
comment	@ * @;


1.7
date	2007.05.07.15.21.15;	author tg;	state dead;
branches;
next	1.6;
commitid	100463F43D3067E6553;

1.6
date	2006.05.26.12.34.37;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004476F5EA1153F2A4;

1.5
date	2006.05.25.12.56.58;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004475A9A7118904ED;

1.4
date	2005.12.17.05.46.05;	author tg;	state Exp;
branches;
next	1.3;
commitid	10043A3A3E65E20A413;

1.3
date	2005.11.16.17.08.47;	author tg;	state Exp;
branches;
next	1.2;
commitid	622b437b67a833ab;

1.2
date	2005.04.12.20.52.21;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.12.19.50.22;	author tg;	state Exp;
branches;
next	;


desc
@@


1.7
log
@add suma and sfv hashes in the standard format, too
(can't do adler32 that easily for now, later; sum/cksum/sysvsum differ, never)
@
text
@/* $MirOS: src/bin/md5/suma-mi.c,v 1.6 2006/05/26 12:34:37 tg Exp $ */

/*-
 * Copyright (c) 2006
 *	Thorsten Glaser <tg@@mirbsd.de>
 *
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
 *
 * All advertising materials mentioning features or use of this soft-
 * ware must display the following acknowledgement:
 *	This product includes material provided by Thorsten Glaser.
 *
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a nontrivial bug.
 */

#include <sys/param.h>
#include <err.h>
#include <stdbool.h>
#include <stdio.h>
#include "suma.h"

void
SUMA_Init(SUMA_CTX *ctx)
{
	if (ctx != NULL)
		*ctx = 0xFFFFFFFF;
}

void
SUMA_Update(SUMA_CTX *ctx, const uint8_t *data, size_t len)
{
	size_t cnt;
	uint32_t crc, eax;
	int i;
	bool cf;

	if ((len == 0) || (ctx == NULL) || (data == NULL))
		return;

	crc = *ctx;
	cnt = len >> 2;
	while (cnt--) {
		eax = (*(data + 3) << 24) |
		    (*(data + 2) << 16) |
		    (*(data + 1) << 8) | *data;
		data += 4;
		for (i = 32; i; --i) {
			cf = !!(crc & 0x80000000);
			crc <<= 1;
			if (eax & 0x80000000)
				++crc;
			eax <<= 1;
			if (cf)
				crc ^= 0x04563521;
		}
	}
	cnt = len & 3;
	if (cnt--) {
		eax = *data++;
		if (cnt--)
			eax |= (*data++) << 8;
		if (cnt--)
			eax |= (*data++) << 16;
		for (i = 32; i; --i) {
			cf = !!(crc & 0x80000000);
			crc <<= 1;
			if (eax & 0x80000000)
				++crc;
			eax <<= 1;
			if (cf)
				crc ^= 0x04563521;
		}
	}
	*ctx = crc;
}

void
SUMA_Final(SUMA_CTX *ctx)
{
	uint32_t crc;
	int i;
	bool cf;

	if (ctx == NULL)
		return;

	crc = *ctx;
	for (i = 32; i; --i) {
		cf = !!(crc & 0x80000000);
		crc <<= 1;
		if (cf)
			crc ^= 0x04563521;
	}
	*ctx = crc;
}
@


1.6
log
@use uint*_t instead of u_int*_t
@
text
@d1 1
a1 1
/* $MirOS: src/bin/md5/suma-mi.c,v 1.5 2006/05/25 12:56:58 tg Exp $ */
@


1.5
log
@implement non-i386-asm "suma" code
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.7 2006/04/09 22:08:49 tg Rel $ */
d42 1
a42 1
SUMA_Update(SUMA_CTX *ctx, const u_int8_t *data, size_t len)
@


1.4
log
@big fat licence update (I left some which are bsiegert@@'s alone though)
also, remove licence boilerplate from some .h files who don't deserve it
and remove and add some advertising clauses because I say so
@
text
@d1 1
a1 1
/* $MirOS: src/bin/md5/suma-mi.c,v 1.3 2005/11/16 17:08:47 tg Exp $ */
d4 2
a5 2
 * Copyright (c) 2005
 *	Thorsten "mirabile" Glaser <tg@@66h.42h.de>
d14 4
d30 1
d42 1
a42 3
SUMA_Update(SUMA_CTX *ctx __attribute__((unused)),
    const u_int8_t *data __attribute__((unused)),
    size_t len __attribute__((unused)))
d44 43
a86 1
	errx(1, "SUMA_Update not implemented");
d90 1
a90 1
SUMA_Final(SUMA_CTX *ctx __attribute__((unused)))
d92 15
a106 1
	errx(1, "SUMA_Final not implemented");
@


1.3
log
@* apply patches from the port
* clean up for __CRAZY=Yes build
@
text
@d1 1
a1 1
/* $MirOS: src/bin/md5/suma-mi.c,v 1.2 2005/04/12 20:52:21 tg Exp $ */
d14 8
a21 11
 * All advertising materials mentioning features or use of this soft-
 * ware must display the following acknowledgement:
 *	This product includes material provided by Thorsten Glaser.
 *
 * Licensor hereby provides this work "AS IS" and WITHOUT WARRANTY of
 * any kind, expressed or implied, to the maximum extent permitted by
 * applicable law, but with the warranty of being written without ma-
 * licious intent or gross negligence; in no event shall licensor, an
 * author or contributor be held liable for any damage, direct, indi-
 * rect or other, however caused, arising in any way out of the usage
 * of this work, even if advised of the possibility of such damage.
@


1.2
log
@uint32_t => u_int32_t
uint8_t  => u_int8_t

The former are the ISO types, the latter the BSD types.
Guess which one the oh-so-UNIXish Mac OSX doesn't have?

Also, fix a proto glitch in a comment
@
text
@d1 1
a1 1
/* $MirOS: src/bin/md5/suma-mi.c,v 1.1 2005/04/12 19:50:22 tg Exp $ */
d40 3
a42 1
SUMA_Update(SUMA_CTX *ctx, const u_int8_t *data, size_t len)
d48 1
a48 1
SUMA_Final(SUMA_CTX *ctx)
@


1.1
log
@stub out the SUMA algorithm so this at least
builds on non-x86

XXX which MACHINE and MACHINE_ARCH has Darwin/x86?
XXX MACHINE_ARCH is currently i686, going to change!?
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.2 2005/03/03 19:43:30 tg Rel $ */
d40 1
a40 1
SUMA_Update(SUMA_CTX *ctx, const uint8_t *data, size_t len)
@

