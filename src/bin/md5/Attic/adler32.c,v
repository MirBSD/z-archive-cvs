head	1.6;
access;
symbols
	MIRBSD_9_BASE:1.4;
locks; strict;
comment	@ * @;


1.6
date	2007.04.29.22.17.46;	author tg;	state dead;
branches;
next	1.5;
commitid	100463519761D6D8E11;

1.5
date	2006.10.24.10.13.21;	author tg;	state Exp;
branches;
next	1.4;
commitid	100453DE74B07D5BA55;

1.4
date	2006.06.09.09.53.14;	author tg;	state Exp;
branches;
next	1.3;
commitid	100448945095CA9D20C;

1.3
date	2006.06.09.08.46.43;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004489358570B54AE3;

1.2
date	2006.06.08.19.03.00;	author tg;	state Exp;
branches;
next	1.1;
commitid	100448873FE537168BE;

1.1
date	2006.05.26.11.55.16;	author tg;	state Exp;
branches;
next	;
commitid	1004476ECB0544641F5;


desc
@@


1.6
log
@• use adler stuff from kern lib
• fold rest into crc.[ch]

note:	crc32 here doesn't match the one from zlib, although both
	say they use the same polynomial… weird
@
text
@/* $MirOS: src/bin/md5/adler32.c,v 1.5 2006/10/24 10:13:21 tg Exp $ */

/*-
 * Copyright (c) 2006
 *	Thorsten Glaser <tg@@mirbsd.de>
 *
 * Licensee is hereby permitted to deal in this work without restric-
 * tion, including unlimited rights to use, publicly perform, modify,
 * merge, distribute, sell, give away or sublicence, provided all co-
 * pyright notices above, these terms and the disclaimer are retained
 * in all redistributions or reproduced in accompanying documentation
 * or other materials provided with binary redistributions.
 *
 * Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
 * express, or implied, to the maximum extent permitted by applicable
 * law, without malicious intent or gross negligence; in no event may
 * licensor, an author or contributor be held liable for any indirect
 * or other damage, or direct damage except proven a consequence of a
 * direct error of said person and intended use of this work, loss or
 * other issues arising in any way out of its use, even if advised of
 * the possibility of such damage or existence of a nontrivial bug.
 */

#include <sys/param.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <zlib.h>
#include "adler32.h"

void
ADLER32_Init(ADLER32_CTX *ctx)
{
	if (ctx != NULL)
		*ctx = 1;
	/*	*ctx = adler32(0, NULL, 0); */
}

#ifndef USE_ASM
void
ADLER32_Update(ADLER32_CTX *ctx, const uint8_t *buf, size_t len)
{
	if (ctx == NULL)
		return;

	*ctx = adler32(*ctx, buf, len);
}
#endif

char *
ADLER32_End(ADLER32_CTX *ctx, char *res)
{
	if (res)
		snprintf(res, ADLER32_DIGEST_STRING_LENGTH, "%08X", *ctx);
	else if (asprintf(&res, "%08X", *ctx) == -1)
		res = NULL;

	return (res);
}

void
cksum_addpool(const char *s __attribute__((unused)))
{
#if defined(USE_ASM) && defined(__MirBSD__)
	uint32_t x = arc4random();

	ADLER32_Update(&x, (const uint8_t *)s, strlen(s));
	arc4random_push((int)x);
#elif defined(ZLIB_HAS_ADLERPUSH)
	adler32(arc4random(), (const uint8_t *)s, strlen(s));
#else
	arc4random_push(adler32(arc4random(), (const uint8_t *)s, strlen(s)));
#endif
}
@


1.5
log
@small improvements to the quality of the PRNG-pool input
@
text
@d1 1
a1 1
/* $MirOS: src/bin/md5/adler32.c,v 1.4 2006/06/09 09:53:14 tg Exp $ */
@


1.4
log
@be more portable (for MirCksum), e.g. OpenBSD/i386 doesn't have arc4random_push
@
text
@d1 1
a1 1
/* $MirOS: src/bin/md5/adler32.c,v 1.3 2006/06/09 08:46:43 tg Exp $ */
d71 2
@


1.3
log
@fix unnecessary zlib dependency
@
text
@d1 1
a1 1
/* $MirOS: src/bin/md5/adler32.c,v 1.2 2006/06/08 19:03:00 tg Exp $ */
d64 1
a64 1
#if defined(USE_ASM)
@


1.2
log
@make adler32(3) an additional "low-trust" entropy source,
both in kernel and userland, but not in libstand, and use
it in cksum(1) to post-process digests except in time and
testsuite trials (modulated by time(NULL) or time.tv_sec,
respectively, in libz, and arc4random() in cksum too); no
change in behaviour (one-byte-at-a-time mode not affected
for speed reasons) visible
@
text
@d1 1
a1 1
/* $MirOS: src/bin/md5/adler32.c,v 1.1 2006/05/26 11:55:16 tg Exp $ */
d62 1
a62 1
cksum_addpool(const char *x __attribute__((unused)))
d64 7
a70 2
#ifdef ZLIB_HAS_ADLERPUSH
	adler32(arc4random(), (const uint8_t *)x, strlen(x));
@


1.1
log
@add adler32 (libz-based and my own asm code)
@
text
@d1 1
a1 1
/* $MirOS: src/share/misc/licence.template,v 1.7 2006/04/09 22:08:49 tg Rel $ */
d26 2
d60 8
@

