head	1.4;
access;
symbols
	MIRBSD_9_BASE:1.3
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2007.05.07.15.21.15;	author tg;	state dead;
branches;
next	1.3;
commitid	100463F43D3067E6553;

1.3
date	2006.05.26.12.34.38;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004476F5EA1153F2A4;

1.2
date	2005.04.12.20.52.21;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.16.17.19.06;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@add suma and sfv hashes in the standard format, too
(can't do adler32 that easily for now, later; sum/cksum/sysvsum differ, never)
@
text
@/* $MirOS: src/bin/md5/suma.h,v 1.3 2006/05/26 12:34:38 tg Exp $ */

#define	SUMA_DIGEST_LENGTH		4
#define	SUMA_DIGEST_STRING_LENGTH	(SUMA_DIGEST_LENGTH * 2 + 1)

typedef uint32_t SUMA_CTX;

void SUMA_Init(SUMA_CTX *);
void SUMA_Update(SUMA_CTX *, const uint8_t *, size_t)
    __attribute__((__bounded__(__string__,2,3)));
void SUMA_Final(SUMA_CTX *);
char *SUMA_End(SUMA_CTX *, char *)
    __attribute__((__bounded__(__minbytes__,2,SUMA_DIGEST_STRING_LENGTH)));
@


1.3
log
@use uint*_t instead of u_int*_t
@
text
@d1 1
a1 1
/* $MirOS: src/bin/md5/suma.h,v 1.2 2005/04/12 20:52:21 tg Exp $ */
@


1.2
log
@uint32_t => u_int32_t
uint8_t  => u_int8_t

The former are the ISO types, the latter the BSD types.
Guess which one the oh-so-UNIXish Mac OSX doesn't have?

Also, fix a proto glitch in a comment
@
text
@d1 1
a1 1
/* $MirOS: src/bin/md5/suma.h,v 1.1 2005/03/16 17:19:06 tg Exp $ */
d6 1
a6 1
typedef u_int32_t SUMA_CTX;
d9 1
a9 1
void SUMA_Update(SUMA_CTX *, const u_int8_t *, size_t)
@


1.1
log
@add a traditional CRC algorithm of mine to the pool
looks like message digests in output, very cool ;-)

at the moment, x86-only. Wish C had a carry flag!
@
text
@d1 1
a1 1
/* $MirOS$ */
d6 1
a6 1
typedef uint32_t SUMA_CTX;
d9 1
a9 1
void SUMA_Update(SUMA_CTX *, const uint8_t *, size_t)
@

