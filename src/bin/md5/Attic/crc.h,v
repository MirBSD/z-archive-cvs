head	1.5;
access;
symbols
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2007.05.07.15.46.24;	author tg;	state dead;
branches;
next	1.4;
commitid	100463F49DA1187D74F;

1.4
date	2007.05.07.15.21.14;	author tg;	state Exp;
branches;
next	1.3;
commitid	100463F43D3067E6553;

1.3
date	2007.04.29.22.17.46;	author tg;	state Exp;
branches;
next	1.2;
commitid	100463519761D6D8E11;

1.2
date	2006.09.17.19.28.57;	author tg;	state Exp;
branches;
next	1.1;
commitid	100450DA20303EFF79D;

1.1
date	2005.02.05.17.22.06;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.22.06;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@consolidate crc.c, crc.h, md5.c, libz/adler32 into cksum.c
@
text
@/**	$MirOS: src/bin/md5/crc.h,v 1.4 2007/05/07 15:21:14 tg Exp $ */
/*	$OpenBSD: crc.h,v 1.1 2004/05/02 17:53:29 millert Exp $	*/

/*
 * Copyright (c) 2004 Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#define	CKSUM_DIGEST_LENGTH		4
#define	CKSUM_DIGEST_STRING_LENGTH	(10 + 1 + 19)

typedef struct CKSUMContext {
	u_int32_t crc;
	off_t len;
} CKSUM_CTX;

#define	SUM_DIGEST_LENGTH		4
#define	SUM_DIGEST_STRING_LENGTH	(10 + 1 + 16)

typedef struct SUMContext {
	u_int32_t crc;
	off_t len;
} SUM_CTX;

#define	SYSVSUM_DIGEST_LENGTH		4
#define	SYSVSUM_DIGEST_STRING_LENGTH	(10 + 1 + 16)

typedef struct SYSVSUMContext {
	u_int32_t crc;
	off_t len;
} SYSVSUM_CTX;

#define	ADLER32_DIGEST_LENGTH		4
#define	ADLER32_DIGEST_STRING_LENGTH	(ADLER32_DIGEST_LENGTH * 2 + 1)

typedef uint32_t ADLER32_CTX;

void	 CKSUM_Init(CKSUM_CTX *);
void	 CKSUM_Update(CKSUM_CTX *, const u_int8_t *, size_t);
void	 CKSUM_Final(CKSUM_CTX *);
char    *CKSUM_End(CKSUM_CTX *, char *);
char    *CKSUM_Data(const u_int8_t *, size_t, char *);

void	 SUM_Init(SUM_CTX *);
void	 SUM_Update(SUM_CTX *, const u_int8_t *, size_t);
void	 SUM_Final(SUM_CTX *);
char    *SUM_End(SUM_CTX *, char *);
char    *SUM_Data(const u_int8_t *, size_t, char *);

void	 SYSVSUM_Init(SYSVSUM_CTX *);
void	 SYSVSUM_Update(SYSVSUM_CTX *, const u_int8_t *, size_t);
void	 SYSVSUM_Final(SYSVSUM_CTX *);
char    *SYSVSUM_End(SYSVSUM_CTX *, char *);
char    *SYSVSUM_Data(const u_int8_t *, size_t, char *);

void	 ADLER32_Init(ADLER32_CTX *);
void	 ADLER32_Update(ADLER32_CTX *, const uint8_t *, size_t)
	    __attribute__((__bounded__(__string__,2,3)));
char	*ADLER32_End(ADLER32_CTX *, char *)
	    __attribute__((__bounded__(__minbytes__,2,ADLER32_DIGEST_STRING_LENGTH)));

void	 cksum_addpool(const char *) __attribute__((__nonnull__(1)));
@


1.4
log
@add suma and sfv hashes in the standard format, too
(can't do adler32 that easily for now, later; sum/cksum/sysvsum differ, never)
@
text
@d1 1
a1 1
/**	$MirOS: src/bin/md5/crc.h,v 1.3 2007/04/29 22:17:46 tg Exp $ */
@


1.3
log
@• use adler stuff from kern lib
• fold rest into crc.[ch]

note:	crc32 here doesn't match the one from zlib, although both
	say they use the same polynomial… weird
@
text
@d1 1
a1 1
/**	$MirOS: src/bin/md5/crc.h,v 1.2 2006/09/17 19:28:57 tg Exp $ */
a43 8
#define	SFV_DIGEST_LENGTH		4
#define	SFV_DIGEST_STRING_LENGTH	(8 + 1)

typedef struct SFVContext {
	uint64_t len;
	uint32_t crc;
} SFV_CTX;

a66 5
void	 SFV_Init(SFV_CTX *);
void	 SFV_Update(SFV_CTX *, const uint8_t *, size_t);
void	 SFV_Final(SFV_CTX *);
char    *SFV_End(SFV_CTX *, char *);

@


1.2
log
@add the SFV (from cksfv) and TIGER hashes
@
text
@d1 1
a1 1
/**	$MirOS$ */
d52 5
d79 8
@


1.1
log
@Initial revision
@
text
@d1 1
d44 8
d69 5
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
