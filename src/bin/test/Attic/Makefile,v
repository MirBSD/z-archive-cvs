head	1.4;
access;
symbols
	MIRBSD_10:1.2.0.4
	MIRBSD_10_BASE:1.2
	MIRBSD_9_BASE:1.2
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2011.02.11.01.18.26;	author tg;	state dead;
branches;
next	1.3;
commitid	1004D548C4E66D17A12;

1.3
date	2008.03.27.19.05.11;	author tg;	state Exp;
branches;
next	1.2;
commitid	10047EBEE7D110FDF6B;

1.2
date	2005.03.06.18.55.24;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.17.22.10;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.22.10;	author tg;	state Exp;
branches;
next	;


desc
@@


1.4
log
@• more comment and int→bool cleanup, add and improve some comments
• in interactive mode, always look up {LC_{ALL,CTYPE},LANG} environment
  variables if setlocale/nl_langinfo(CODESET) doesn’t suffice
• add the ability to call any builtin (some don't make sense or wouldn't
  work) directly by analysing argv[0]
• for direct builtin calls, the {LC_{ALL,CTYPE},LANG} environment
  variables determine utf8-mode, even if MKSH_ASSUME_UTF8 was set
• when called as builtin, echo behaves POSIXish
• add domainname as alias for true on MirBSD only, to be able to link it
• sync mksh Makefiles with Build.sh output
• adjust manpage wrt release plans
• link some things to mksh now that we have callable builtins:
  bin/echo bin/kill bin/pwd bin/sleep (exact matches)
  bin/test bin/[ (were scripts before)
  bin/domainname=usr/bin/true usr/bin/false (move to /bin/ now)
• drop linked utilities and, except for echo and kill, their manpages
• adjust instbin and link a few more there as well
@
text
@# $MirOS: src/bin/test/Makefile,v 1.3 2008/03/27 19:05:11 tg Exp $
# $OpenBSD: Makefile,v 1.3 1997/09/21 11:35:56 deraadt Exp $

PROG=	test
SRCS=	test.sh
BINDIR?=/bin
INSTALL_STRIP=
LINKS=	${BINDIR}/test ${BINDIR}/[
MLINKS=	test.1 '[.1'

.include <bsd.prog.mk>
@


1.3
log
@• move all the formerly statically linked binaries to /usr/d{,s}bin/ and
  link them dynamically, except…
  ‣ init(8) since it’s used for system startup (chflags(8) comes to mind)
  ‣ shutdown(8) since it’s 4550 root:operator, which would be hard to do
    in a non-exploitable way otherwise
  ‣ test(1), domainname(1), dhclient-script, since they are shell scripts
  ‣ ldconfig(8) to prevent shooting into ourselves’ feet
• add the build of two crunchgen(1)d binaries, dbins and dbinsuid, collec-
  ting the stuff formerly statically built (dbins is 0555 root:bin, while
  dbinsuid is 4555 root:bin – {ping,traceroute}{,6} only)
• some cosmetical et al. changes to the Makefiles involved
  ‣ spacing, shell
  ‣ utf-8
  ‣ use ${CONFGRP}
• CFLAGS+=-DNFS -I… → CPPFLAGS+=… *sigh*

This enables us to make most out of ports/sysutils/fakeroot

agreed bsiegert@@
“fakeroot ist cool” Jonathan Schleifer
idea from and “:-)” Han Boetes
@
text
@d1 1
a1 1
# $MirOS: src/bin/test/Makefile,v 1.2 2005/03/06 18:55:24 tg Exp $
@


1.2
log
@merge src/bin
@
text
@d1 1
a1 1
# $MirOS$
d6 1
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#	$OpenBSD: Makefile,v 1.3 1997/09/21 11:35:56 deraadt Exp $
d5 2
a6 1
SRCS=   test.c
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
