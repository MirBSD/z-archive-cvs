head	1.34;
access;
symbols
	paxmirabilis-20190825:1.34
	paxmirabilis-20190224:1.34
	paxmirabilis-20190210:1.34
	npax:1.1.1.10.0.2
	cvs-20181212:1.1.1.10
	paxmirabilis-20171021:1.31
	paxmirabilis-20161104:1.29
	paxmirabilis-20161031:1.29
	paxmirabilis-20161025:1.29
	paxmirabilis-20160306:1.28
	cvs-201603041945:1.1.1.6
	paxmirabilis-20151013:1.26
	paxmirabilis-20140703:1.25
	paxmirabilis-20120606:1.24
	paxmirabilis-20120605:1.24
	cvs-201206051745:1.1.1.5
	paxmirabilis-20120520:1.22
	paxmirabilis-20120216:1.22
	paxmirabilis-20120212:1.22
	cvs-201202112230:1.1.1.5
	paxmirabilis-20110817:1.17
	MIRBSD_10:1.8.0.2
	MIRBSD_10_BASE:1.8
	cvs-200710231945:1.1.1.4
	cvs-200606232242:1.1.1.3
	MIRBSD_9_BASE:1.6
	MIRBSD_8:1.5.0.2
	MIRBSD_8_BASE:1.5
	cvs-200507211800:1.1.1.2
	cvs-200504291700:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@.\" @;


1.34
date	2018.12.25.19.38.10;	author tg;	state Exp;
branches;
next	1.33;
commitid	1005C22871909EC7FE2;

1.33
date	2018.12.12.18.08.46;	author tg;	state Exp;
branches;
next	1.32;
commitid	1005C114EA81986F5EC;

1.32
date	2018.12.12.00.23.06;	author tg;	state Exp;
branches;
next	1.31;
commitid	1005C1054FE750D63F3;

1.31
date	2017.08.07.20.10.16;	author tg;	state Exp;
branches;
next	1.30;
commitid	1005988C69344442E37;

1.30
date	2017.03.29.01.52.30;	author tg;	state Exp;
branches;
next	1.29;
commitid	10058DB13781FFCE83A;

1.29
date	2016.10.25.18.57.55;	author tg;	state Exp;
branches;
next	1.28;
commitid	100580FAB4B20AD4FA2;

1.28
date	2016.03.06.13.47.12;	author tg;	state Exp;
branches;
next	1.27;
commitid	10056DC34E25F0AA0A6;

1.27
date	2016.02.11.20.12.10;	author tg;	state Exp;
branches;
next	1.26;
commitid	10056BCEAFF41919B5B;

1.26
date	2014.08.03.16.02.34;	author tg;	state Exp;
branches;
next	1.25;
commitid	10053DE5D195DD853BF;

1.25
date	2014.07.03.18.57.17;	author tg;	state Exp;
branches;
next	1.24;
commitid	10053B5A7967833D26E;

1.24
date	2012.06.05.19.29.33;	author tg;	state Exp;
branches;
next	1.23;
commitid	1004FCE5E341EA37634;

1.23
date	2012.05.20.20.04.31;	author tg;	state Exp;
branches;
next	1.22;
commitid	1004FB94E665B6D9B12;

1.22
date	2012.02.12.02.49.41;	author tg;	state Exp;
branches;
next	1.21;
commitid	1004F3728CB5FE3415F;

1.21
date	2012.02.12.01.48.21;	author tg;	state Exp;
branches;
next	1.20;
commitid	1004F371A63217504BD;

1.20
date	2012.02.12.00.04.32;	author tg;	state Exp;
branches;
next	1.19;
commitid	1004F37020D48949196;

1.19
date	2012.02.11.23.44.05;	author tg;	state Exp;
branches;
next	1.18;
commitid	1004F36FD511FCFD6D5;

1.18
date	2012.02.11.23.37.52;	author tg;	state Exp;
branches;
next	1.17;
commitid	1004F36FBE0634FBDC9;

1.17
date	2011.08.17.09.03.58;	author tg;	state Exp;
branches;
next	1.16;
commitid	1004E4B8392073278B7;

1.16
date	2011.08.16.21.32.48;	author tg;	state Exp;
branches;
next	1.15;
commitid	1004E4AE1EF00AF3003;

1.15
date	2011.08.16.14.17.24;	author tg;	state Exp;
branches;
next	1.14;
commitid	1004E4A7C0359BB0B3A;

1.14
date	2011.08.16.13.45.01;	author tg;	state Exp;
branches;
next	1.13;
commitid	1004E4A74015B88F988;

1.13
date	2011.08.16.13.27.02;	author tg;	state Exp;
branches;
next	1.12;
commitid	1004E4A702C39E0597C;

1.12
date	2009.11.22.18.23.40;	author tg;	state Exp;
branches;
next	1.11;
commitid	1004B0981B210A68B89;

1.11
date	2009.11.22.15.55.24;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004B095EF92797429F;

1.10
date	2009.10.27.18.47.26;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004AE74055714A6EEB;

1.9
date	2008.03.14.17.05.06;	author tg;	state Exp;
branches;
next	1.8;
commitid	10047DAB05868FB6D0C;

1.8
date	2007.10.23.20.07.42;	author tg;	state Exp;
branches;
next	1.7;
commitid	100471E5499154FE86E;

1.7
date	2006.07.21.17.34.59;	author tg;	state Exp;
branches;
next	1.6;
commitid	10044C1103610EA28BB;

1.6
date	2006.06.23.23.03.56;	author tg;	state Exp;
branches;
next	1.5;
commitid	100449C736877C98FFB;

1.5
date	2005.11.23.23.27.10;	author tg;	state Exp;
branches;
next	1.4;
commitid	61c84384fa91bd26;

1.4
date	2005.11.18.13.58.47;	author tg;	state Exp;
branches;
next	1.3;
commitid	888437ddd2ba951;

1.3
date	2005.11.16.14.27.28;	author tg;	state Exp;
branches;
next	1.2;
commitid	513b437b415971b7;

1.2
date	2005.11.16.13.58.39;	author tg;	state Exp;
branches;
next	1.1;
commitid	63cf437b3768eac1;

1.1
date	2005.02.05.17.22.06;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.22.06;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.07.21.20.45.27;	author tg;	state Exp;
branches;
next	1.1.1.3;
commitid	560042e0092f571e;

1.1.1.3
date	2006.06.23.23.00.15;	author tg;	state Exp;
branches;
next	1.1.1.4;
commitid	100449C727D31170AA3;

1.1.1.4
date	2007.10.23.19.50.48;	author tg;	state Exp;
branches;
next	1.1.1.5;
commitid	100471E50A5256C77AE;

1.1.1.5
date	2012.02.11.22.47.21;	author tg;	state Exp;
branches;
next	1.1.1.6;
commitid	1004F36F008225F3522;

1.1.1.6
date	2016.03.04.19.46.09;	author tg;	state Exp;
branches;
next	1.1.1.7;
commitid	10056D9E61429EE6550;

1.1.1.7
date	2016.03.04.20.55.02;	author tg;	state Exp;
branches;
next	1.1.1.8;
commitid	10056D9F62E152ECBA5;

1.1.1.8
date	2016.10.25.18.46.11;	author tg;	state Exp;
branches;
next	1.1.1.9;
commitid	100580FA88137705D31;

1.1.1.9
date	2018.12.12.00.15.06;	author tg;	state Exp;
branches;
next	1.1.1.10;
commitid	1005C1052FA5E745A2C;

1.1.1.10
date	2018.12.12.00.24.23;	author tg;	state Exp;
branches
	1.1.1.10.2.1;
next	;
commitid	1005C1055452C78F9E4;

1.1.1.10.2.1
date	2018.12.12.06.03.13;	author tg;	state Exp;
branches;
next	1.1.1.10.2.2;
commitid	1005C10A4B12E5998CE;

1.1.1.10.2.2
date	2018.12.12.12.43.13;	author tg;	state Exp;
branches;
next	;
commitid	1005C1102747A3732E3;


desc
@@


1.34
log
@update from contrib/samples/portmdoc,v 1.11
@
text
@.\"	$MirOS: src/bin/pax/pax.1,v 1.33 2018/12/12 18:08:46 tg Exp $
.\"	$OpenBSD: pax.1,v 1.74 2018/07/23 19:02:49 kn Exp $
.\"	$NetBSD: pax.1,v 1.3 1995/03/21 09:07:37 cgd Exp $
.\"
.\" Copyright (c) 2005, 2009, 2011, 2012, 2014, 2016, 2017, 2018
.\"	mirabilos <m@@mirbsd.org>
.\" Copyright (c) 1992 Keith Muller.
.\" Copyright (c) 1992, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Keith Muller of the University of California, San Diego.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)pax.1	8.4 (Berkeley) 4/18/94
.\"
.\"-
.\" Try to make GNU groff and AT&T nroff more compatible
.\" * ` generates ‘ in gnroff, so use \`
.\" * ' generates ’ in gnroff, \' generates ´, so use \*(aq
.\" * - generates ‐ in gnroff, \- generates −, so .tr it to -
.\"   thus use - for hyphens and \- for minus signs and option dashes
.\" * ~ is size-reduced and placed atop in groff, so use \*(TI
.\" * ^ is size-reduced and placed atop in groff, so use \*(ha
.\" * \(en does not work in nroff, so use \*(en
.\" * <>| are problematic, so redefine and use \*(Lt\*(Gt\*(Ba
.\" Also make sure to use \& *before* a punctuation char that is to not
.\" be interpreted as punctuation, and especially with two-letter words
.\" but also (after) a period that does not end a sentence (“e.g.\&”).
.\" The section after the "doc" macropackage has been loaded contains
.\" additional code to convene between the UCB mdoc macropackage (and
.\" its variant as BSD mdoc in groff) and the GNU mdoc macropackage.
.\"
.ie \n(.g \{\
.	if \*[.T]ascii .tr \-\N'45'
.	if \*[.T]latin1 .tr \-\N'45'
.	if \*[.T]utf8 .tr \-\N'45'
.	ds <= \[<=]
.	ds >= \[>=]
.	ds Rq \[rq]
.	ds Lq \[lq]
.	ds sL \(aq
.	ds sR \(aq
.	if \*[.T]utf8 .ds sL `
.	if \*[.T]ps .ds sL `
.	if \*[.T]utf8 .ds sR '
.	if \*[.T]ps .ds sR '
.	ds aq \(aq
.	ds TI \(ti
.	ds ha \(ha
.	ds en \(en
.\}
.el \{\
.	ds aq '
.	ds TI ~
.	ds ha ^
.	ds en \(em
.\}
.\"
.\" Implement .Dd with the Mdocdate RCS keyword
.\"
.rn Dd xD
.de Dd
.ie \\$1$Mdocdate: \{\
.	xD \\$2 \\$3, \\$4
.\}
.el .xD \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8
..
.\"
.\" .Dd must come before definition of .Mx, because when called
.\" with -mandoc, it might implement .Mx itself, but we want to
.\" use our own definition. And .Dd must come *first*, always.
.\"
.Dd $Mdocdate: December 25 2018 $
.\"
.\" Check which macro package we use, and do other -mdoc setup.
.\"
.ie \n(.g \{\
.	if \*[.T]utf8 .tr \[la]\*(Lt
.	if \*[.T]utf8 .tr \[ra]\*(Gt
.	ie d volume-ds-1 .ds tT gnu
.	el .ie d doc-volume-ds-1 .ds tT gnp
.	el .ds tT bsd
.\}
.el .ds tT ucb
.\"
.\" Implement .Mx (MirBSD)
.\"
.ie "\*(tT"gnu" \{\
.	eo
.	de Mx
.	nr curr-font \n[.f]
.	nr curr-size \n[.ps]
.	ds str-Mx \f[\n[curr-font]]\s[\n[curr-size]u]
.	ds str-Mx1 \*[Tn-font-size]\%MirBSD\*[str-Mx]
.	if !\n[arg-limit] \
.	if \n[.$] \{\
.	ds macro-name Mx
.	parse-args \$@@
.	\}
.	if (\n[arg-limit] > \n[arg-ptr]) \{\
.	nr arg-ptr +1
.	ie (\n[type\n[arg-ptr]] == 2) \
.	as str-Mx1 \~\*[arg\n[arg-ptr]]
.	el \
.	nr arg-ptr -1
.	\}
.	ds arg\n[arg-ptr] "\*[str-Mx1]
.	nr type\n[arg-ptr] 2
.	ds space\n[arg-ptr] "\*[space]
.	nr num-args (\n[arg-limit] - \n[arg-ptr])
.	nr arg-limit \n[arg-ptr]
.	if \n[num-args] \
.	parse-space-vector
.	print-recursive
..
.	ec
.	ds sP \s0
.	ds tN \*[Tn-font-size]
.\}
.el .ie "\*(tT"gnp" \{\
.	eo
.	de Mx
.	nr doc-curr-font \n[.f]
.	nr doc-curr-size \n[.ps]
.	ds doc-str-Mx \f[\n[doc-curr-font]]\s[\n[doc-curr-size]u]
.	ds doc-str-Mx1 \*[doc-Tn-font-size]\%MirBSD\*[doc-str-Mx]
.	if !\n[doc-arg-limit] \
.	if \n[.$] \{\
.	ds doc-macro-name Mx
.	doc-parse-args \$@@
.	\}
.	if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.	nr doc-arg-ptr +1
.	ie (\n[doc-type\n[doc-arg-ptr]] == 2) \
.	as doc-str-Mx1 \~\*[doc-arg\n[doc-arg-ptr]]
.	el \
.	nr doc-arg-ptr -1
.	\}
.	ds doc-arg\n[doc-arg-ptr] "\*[doc-str-Mx1]
.	nr doc-type\n[doc-arg-ptr] 2
.	ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.	nr doc-num-args (\n[doc-arg-limit] - \n[doc-arg-ptr])
.	nr doc-arg-limit \n[doc-arg-ptr]
.	if \n[doc-num-args] \
.	doc-parse-space-vector
.	doc-print-recursive
..
.	ec
.	ds sP \s0
.	ds tN \*[doc-Tn-font-size]
.\}
.el \{\
.	de Mx
.	nr cF \\n(.f
.	nr cZ \\n(.s
.	ds aa \&\f\\n(cF\s\\n(cZ
.	if \\n(aC==0 \{\
.		ie \\n(.$==0 \&MirBSD\\*(aa
.		el .aV \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9
.	\}
.	if \\n(aC>\\n(aP \{\
.		nr aP \\n(aP+1
.		ie \\n(C\\n(aP==2 \{\
.			as b1 \&MirBSD\ #\&\\*(A\\n(aP\\*(aa
.			ie \\n(aC>\\n(aP \{\
.				nr aP \\n(aP+1
.				nR
.			\}
.			el .aZ
.		\}
.		el \{\
.			as b1 \&MirBSD\\*(aa
.			nR
.		\}
.	\}
..
.\}
.\"-
.ie \ng==1 \{\
.	ds nc mircpio
.	ds np mirpax
.	ds nt mirtar
.	ds nm mirpax
.	Dt MIRPAX 1
.\}
.el .ie \ng==2 \{\
.	ds nc paxcpio
.	ds np pax
.	ds nt paxtar
.	ds nm pax
.	Dt PAX 1
.\}
.el \{\
.	ds nc cpio
.	ds np pax
.	ds nt tar
.	ds nm pax
.	Dt PAX 1
.\}
.\"-
.Os MirBSD
.Sh NAME
.ie \ng==1 \{\
.Nm mirpax
.Nd read and write file archives and copy directory hierarchies
.\}
.el \{\
.Nm pax
.Nd read and write file archives and copy directory hierarchies
.\}
.Sh SYNOPSIS
.Bk -words
.Nm \*(nm
.Op Fl 0cdJjnOvz
.Op Fl E Ar limit
.Op Fl f Ar archive
.Op Fl G Ar group
.Op Fl s Ar replstr
.Op Fl T Ar range
.Op Fl U Ar user
.Op Ar pattern ...
.Nm \*(nm
.Fl r
.Op Fl 0cDdiJjknOuvYZz
.Op Fl E Ar limit
.Op Fl f Ar archive
.Op Fl G Ar group
.Op Fl M Ar flag
.Op Fl o Ar options
.Op Fl p Ar string
.Op Fl s Ar replstr
.Op Fl T Ar range
.Op Fl U Ar user
.Op Ar pattern ...
.Nm \*(nm
.Fl w
.Op Fl 0adHiJjLOPtuvXz
.Op Fl B Ar bytes
.Op Fl b Ar blocksize
.Op Fl f Ar archive
.Op Fl G Ar group
.Op Fl M Ar flag
.Op Fl o Ar options
.Op Fl s Ar replstr
.Op Fl T Ar range
.Op Fl U Ar user
.Op Fl x Ar format
.Op Ar
.Nm \*(nm
.Fl rw
.Op Fl 0DdHiJjkLlnOPtuvXYZ
.Op Fl G Ar group
.Op Fl p Ar string
.Op Fl s Ar replstr
.Op Fl T Ar range
.Op Fl U Ar user
.Op Ar
.Ar directory
.Ek
.Sh DESCRIPTION
.Nm
will read, write, and list the members of an archive file
and will copy directory hierarchies.
.Nm
operation is independent of the specific archive format
and supports a wide variety of different archive formats.
A list of supported archive formats can be found under the description of the
.Fl x
option.
.Pp
The presence of the
.Fl r
and the
.Fl w
options specifies which of the following functional modes
.Nm
will operate under:
.Em list , read , write ,
and
.Em copy .
.Bl -tag -width 6n
.It Aq none
.Em List .
.Nm
will write to standard output
a table of contents of the members of the archive file read from
standard input, whose pathnames match the specified
.Ar pattern
arguments.
The table of contents contains one filename per line
and is written using single line buffering.
.It Fl r
.Em Read .
.Nm
extracts the members of the archive file read from the standard input,
with pathnames matching the specified
.Ar pattern
arguments.
The archive format and blocking is automatically determined on input.
When an extracted file is a directory, the entire file hierarchy
rooted at that directory is extracted.
All extracted files are created relative to the current file hierarchy.
The setting of ownership, access and modification times, and file mode of
the extracted files are discussed in more detail under the
.Fl p
option.
.It Fl w
.Em Write .
.Nm
writes an archive containing the
.Ar file
operands to standard output
using the specified archive format.
When no
.Ar file
operands are specified, a list of files to copy with one per line is read from
standard input.
When a
.Ar file
operand is also a directory, the entire file hierarchy rooted
at that directory will be included.
.It Fl rw
.Em Copy .
.Nm
copies the
.Ar file
operands to the destination
.Ar directory .
When no
.Ar file
operands are specified, a list of files to copy with one per line is read from
the standard input.
When a
.Ar file
operand is also a directory the entire file
hierarchy rooted at that directory will be included.
The effect of the
.Em copy
is as if the copied files were written to an archive file and then
subsequently extracted, except that there may be hard links between
the original and the copied files (see the
.Fl l
option below).
.Pp
.Sy Warning :
The destination
.Ar directory
must not be one of the
.Ar file
operands or a member of a file hierarchy rooted at one of the
.Ar file
operands.
The result of a
.Em copy
under these conditions is unpredictable.
.El
.Pp
While processing a damaged archive during a read or list operation,
.Nm
will attempt to recover from media defects and will search through the archive
to locate and process the largest number of archive members possible (see the
.Fl E
option for more details on error handling).
.Pp
The
.Ar directory
operand specifies a destination directory pathname.
If the
.Ar directory
operand does not exist, or it is not writable by the user,
or it is not of type directory,
.Nm
will exit with a non-zero exit status.
.Pp
The
.Ar pattern
operand is used to select one or more pathnames of archive members.
Archive members are selected using the pattern matching notation described
by
.Xr glob 7 .
When the
.Ar pattern
operand is not supplied, all members of the archive will be selected.
When a
.Ar pattern
matches a directory, the entire file hierarchy rooted at that directory will
be selected.
When a
.Ar pattern
operand does not select at least one archive member,
.Nm
will write these
.Ar pattern
operands in a diagnostic message to standard error
and then exit with a non-zero exit status.
.Pp
The
.Ar file
operand specifies the pathname of a file to be copied or archived.
When a
.Ar file
operand does not select at least one archive member,
.Nm
will write these
.Ar file
operand pathnames in a diagnostic message to standard error
and then exit with a non-zero exit status.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl 0
Use the NUL
.Pq Ql \e0
character as a pathname terminator, instead of newline
.Pq Ql \en .
This applies only to the pathnames read from standard input in
the write and copy modes,
and to the pathnames written to standard output in list mode.
This option is expected to be used in concert with the
.Fl print0
function in
.Xr find 1 ,
the
.Fl d Ar \*(aq\*(aq
option to the
.Ic read
built-in utility of
.Xr mksh 1
or the
.Fl 0
flag in
.Xr xargs 1 .
.It Fl a
Append the given
.Ar file
operands
to the end of an archive that was previously written.
If an archive format is not specified with a
.Fl x
option, the format currently being used in the archive will be selected.
Any attempt to append to an archive in a format different from the
format already used in the archive will cause
.Nm
to exit immediately
with a non-zero exit status.
The blocking size used in the archive volume where writing starts
will continue to be used for the remainder of that archive volume.
.Pp
.Sy Warning :
Many storage devices are not able to support the operations necessary
to perform an append operation.
Any attempt to append to an archive stored on such a device may damage the
archive or have other unpredictable results.
Tape drives in particular are more likely to not support an append operation.
An archive stored in a regular filesystem file or on a disk device will
usually support an append operation.
.It Fl B Ar bytes
Limit the number of bytes written to a single archive volume to
.Ar bytes .
The
.Ar bytes
limit can end with
.Sq Li m ,
.Sq Li k ,
or
.Sq Li b
to specify multiplication by 1048576 (1M), 1024 (1K) or 512, respectively.
A pair of
.Ar bytes
limits can be separated by
.Sq Li x
to indicate a product.
.Pp
.Sy Warning :
Only use this option when writing an archive to a device which supports
an end of file read condition based on last (or largest) write offset
(such as a regular file or a tape drive).
The use of this option with a floppy or hard disk is not recommended.
.It Fl b Ar blocksize
When writing an archive,
block the output at a positive decimal integer number of
bytes per write to the archive file.
The
.Ar blocksize
must be a multiple of 512 bytes with a maximum of 64512 bytes.
Archive block sizes larger than 32256 bytes violate the
.Tn POSIX
standard and will not be portable to all systems.
A
.Ar blocksize
can end with
.Sq Li k
or
.Sq Li b
to specify multiplication by 1024 (1K) or 512, respectively.
A pair of
.Ar blocksize Ns s
can be separated by
.Sq Li x
to indicate a product.
A specific archive device may impose additional restrictions on the size
of blocking it will support.
When blocking is not specified, the default
.Ar blocksize
is dependent on the specific archive format being used (see the
.Fl x
option).
.It Fl c
Match all file or archive members
.Em except
those specified by the
.Ar pattern
and
.Ar file
operands.
.It Fl D
This option is the same as the
.Fl u
option, except that the file inode change time is checked instead of the
file modification time.
The file inode change time can be used to select files whose inode information
(e.g., UID, GID, etc.) is newer than a copy of the file in the destination
.Ar directory .
.It Fl d
Cause files of type directory being copied or archived, or archive members of
type directory being extracted, to match only the directory file or archive
member and not the file hierarchy rooted at the directory.
.It Fl E Ar limit
Limit the number of consecutive read faults while trying to read a flawed
archive to
.Ar limit .
With a positive
.Ar limit ,
.Nm
will attempt to recover from an archive read error and will
continue processing starting with the next file stored in the archive.
A
.Ar limit
of 0 will cause
.Nm
to stop operation after the first read error is detected on an archive volume.
The default
.Ar limit
is a small positive number of retries.
.It Fl f Ar archive
Specify
.Ar archive
as the pathname of the input or output archive, overriding the default
standard input (for list and read)
or standard output
(for write).
A single archive may span multiple files and different archive devices.
When required,
.Nm
will prompt for the pathname of the file or device of the next volume in the
archive.
.It Fl G Ar group
Select a file based on its
.Ar group
name, or when starting with a
.Cm # ,
a numeric GID.
A
.Ql \e
can be used to escape the
.Cm # .
Multiple
.Fl G
options may be supplied and checking stops with the first match.
.It Fl H
Follow only command-line symbolic links while performing a physical file
system traversal.
.It Fl i
Interactively rename files or archive members.
For each archive member matching a
.Ar pattern
operand or each file matching a
.Ar file
operand,
.Nm
will prompt to
.Pa /dev/tty
giving the name of the file, its file mode, and its modification time.
.Nm
will then read a line from
.Pa /dev/tty .
If this line is blank, the file or archive member is skipped.
If this line consists of a single period, the
file or archive member is processed with no modification to its name.
Otherwise, its name is replaced with the contents of the line.
.Nm
will immediately exit with a non-zero exit status if
.Dv EOF
is encountered when reading a response or if
.Pa /dev/tty
cannot be opened for reading and writing.
.It Fl J
Use the xz utility to compress (decompress) the archive
while writing (reading).
Incompatible with
.Fl a .
.It Fl j
Use the bzip2 utility to compress (decompress) the archive
while writing (reading).
Incompatible with
.Fl a .
.It Fl k
Do not overwrite existing files.
.It Fl L
Follow all symbolic links to perform a logical filesystem traversal.
.It Fl l
(The lowercase letter
.Dq ell . )
Link files.
In copy mode
.Pq Fl r Fl w ,
hard links are made between the source and destination file hierarchies
whenever possible.
.It Fl M Ar flag
Configure the archive normaliser.
.Ar flag
is either a numeric value compatible to
.Xr strtonum 3
which is directly stored in the flags word, or
one of the following values, optionally prefixed with
.Dq no\-
to turn them off:
.Pp
.Bl -tag -width xxxxxx -compact
.It Ar inodes
0x0001: Serialise inodes, zero device info.
.br
(cpio, sv4cpio, sv4crc)
.It Ar links
0x0002: Store content of hard links only once.
.br
(cpio, sv4cpio, sv4crc)
.It Ar mtime
0x0004: Zero out the file modification time.
.br
(ar, cpio, sv4cpio, sv4crc, ustar)
.It Ar uidgid
0x0008: Set owner to 0:0
.Pq Li root Ns : Ns Li wheel .
.br
(ar, cpio, sv4cpio, sv4crc, ustar)
.It Ar verb
0x0010: Debug this option.
.It Ar debug
0x0020: Debug file header storage.
.It Ar lncp
0x0040: Extract hard links by copy if link fails.
.It Ar numid
0x0080: Use only numeric uid and gid values.
.br
(ustar)
.It Ar gslash
0x0100: Append a slash after directory names.
.br
(ustar)
.It Ar set
0x0003: Keep ownership and mtime intact.
.It Ar dist
0x008B: Clean everything except mtime.
.It Ar norm
0x008F: Clean everything.
.It Ar root
0x0089: Clean owner and device information.
.El
.Pp
When creating an archive and verbosely listing output, these
normalisation operations are not reflected in the output,
because they are made only after the output has been shown.
.Pp
This option is only implemented for the ar, cpio, sv4cpio,
sv4crc, and ustar file format writing routines.
.Pp
TODO: The
.Nm \*(nm
frontend should be using the
.Fl o
option for handling this feature instead.
.It Fl n
Select the first archive member that matches each
.Ar pattern
operand.
No more than one archive member is matched for each
.Ar pattern .
When members of type directory are matched, the file hierarchy rooted at that
directory is also matched (unless
.Fl d
is also specified).
.It Fl O
Force the archive to be one volume.
If a volume ends prematurely,
.Nm
will not prompt for a new volume.
This option can be useful for
automated tasks where error recovery cannot be performed by a human.
.It Fl o Ar options
Information to modify the algorithm for extracting or writing archive files
which is specific to the archive format specified by
.Fl x .
In general,
.Ar options
take the form:
.Ar name Ns = Ns Ar value .
.Pp
The following options are available for the
.Cm ustar
and old
.Bx
.Cm tar
formats:
.Pp
.Bl -tag -width Ds -compact
.It Cm write_opt=nodir
When writing archives, omit the storage of directories.
.El
.It Fl P
Do not follow symbolic links, perform a physical filesystem traversal.
This is the default mode.
.It Fl p Ar string
Specify one or more file characteristic options (privileges).
The
.Ar string
option-argument is a string specifying file characteristics to be retained or
discarded on extraction.
The string consists of the specification characters
.Cm a , e , m , o ,
and
.Cm p .
Multiple characteristics can be concatenated within the same string
and multiple
.Fl p
options can be specified.
The meanings of the specification characters are as follows:
.Bl -tag -width 2n
.It Cm a
Do not preserve file access times.
By default, file access times are preserved whenever possible.
.It Cm e
.Dq Preserve everything ,
the user ID, group ID, file mode bits,
file access time, and file modification time.
This is intended to be used by root,
someone with all the appropriate privileges, in order to preserve all
aspects of the files as they are recorded in the archive.
The
.Cm e
flag is the sum of the
.Cm o
and
.Cm p
flags.
.It Cm m
Do not preserve file modification times.
By default, file modification times are preserved whenever possible.
.It Cm o
Preserve the user ID and group ID.
.It Cm p
.Dq Preserve
the file mode bits.
This is intended to be used by a user with regular privileges
who wants to preserve all aspects of the file other than the ownership.
The file times are preserved by default, but two other flags are offered to
disable this and use the time of extraction instead.
.El
.Pp
In the preceding list,
.Sq preserve
indicates that an attribute stored in the archive is given to the
extracted file, subject to the permissions of the invoking
process.
Otherwise the attribute of the extracted file is determined as
part of the normal file creation action.
If neither the
.Cm e
nor the
.Cm o
specification character is specified, or the user ID and group ID are not
preserved for any reason,
.Nm
will not set the
.Dv S_ISUID
(setuid) and
.Dv S_ISGID
(setgid) bits of the file mode.
If the preservation of any of these items fails for any reason,
.Nm
will write a diagnostic message to standard error.
Failure to preserve these items will affect the final exit status,
but will not cause the extracted file to be deleted.
If the file characteristic letters in any of the string option-arguments are
duplicated or conflict with each other, the one(s) given last will take
precedence.
For example, if
.Fl p Ar eme
is specified, file modification times are still preserved.
.It Fl r
Read an archive file from standard input
and extract the specified
.Ar file
operands.
If any intermediate directories are needed in order to extract an archive
member, these directories will be created as if
.Xr mkdir 2
was called with the bitwise OR of
.Dv S_IRWXU , S_IRWXG ,
and
.Dv S_IRWXO
as the mode argument.
When the selected archive format supports the specification of linked
files and these files cannot be linked while the archive is being extracted,
.Nm
will write a diagnostic message to standard error
and exit with a non-zero exit status at the completion of operation.
.It Fl s Ar replstr
Modify the archive member names according to the substitution expression
.Ar replstr ,
using the syntax of the
.Xr ed 1
utility regular expressions.
.Ar file
or
.Ar pattern
arguments may be given to restrict the list of archive members to those
specified.
.Pp
The format of these regular expressions is:
.Pp
.Dl /old/new/[gp]
.Pp
As in
.Xr ed 1 ,
.Ar old
is a basic regular expression (see
.Xr re_format 7 )
and
.Ar new
can contain an ampersand
.Pq Ql & ,
.Ql \e Ns Em n
(where
.Em n
is a digit) back-references,
or subexpression matching.
The
.Ar old
string may also contain newline characters.
Any non-null character can be used as a delimiter
.Po
.Ql /
is shown here
.Pc .
Multiple
.Fl s
expressions can be specified.
The expressions are applied in the order they are specified on the
command line, terminating with the first successful substitution.
.Pp
The optional trailing
.Cm g
continues to apply the substitution expression to the pathname substring,
which starts with the first character following the end of the last successful
substitution.
The first unsuccessful substitution stops the operation of the
.Cm g
option.
The optional trailing
.Cm p
will cause the final result of a successful substitution to be written to
standard error in the following format:
.Pp
.D1 Em original-pathname No \*(Gt\*(Gt Em new-pathname
.Pp
File or archive member names that substitute to the empty string
are not selected and will be skipped.
.It Fl T Ar range
Allow files to be selected based on a file modification or inode change
time falling within the specified time range.
The range has the format:
.Sm off
.Bd -filled -offset indent
.Oo Ar from_date Oc Oo ,
.Ar to_date Oc Oo /
.Oo Cm c Oc Op Cm m Oc
.Ed
.Sm on
.Pp
The dates specified by
.Ar from_date
to
.Ar to_date
are inclusive.
If only a
.Ar from_date
is supplied, all files with a modification or inode change time
equal to or younger are selected.
If only a
.Ar to_date
is supplied, all files with a modification or inode change time
equal to or older will be selected.
When the
.Ar from_date
is equal to the
.Ar to_date ,
only files with a modification or inode change time of exactly that
time will be selected.
.Pp
When
.Nm
is in write or copy mode, the optional trailing field
.Oo Cm c Oc Ns Op Cm m
can be used to determine which file time (inode change, file modification or
both) are used in the comparison.
If neither is specified, the default is to use file modification time only.
The
.Cm m
specifies the comparison of file modification time (the time when
the file was last written).
The
.Cm c
specifies the comparison of inode change time (the time when the file
inode was last changed; e.g., a change of owner, group, mode, etc).
When
.Cm c
and
.Cm m
are both specified, then the modification and inode change times are
both compared.
.Pp
The inode change time comparison is useful in selecting files whose
attributes were recently changed or selecting files which were recently
created and had their modification time reset to an older time (as what
happens when a file is extracted from an archive and the modification time
is preserved).
Time comparisons using both file times is useful when
.Nm
is used to create a time based incremental archive (only files that were
changed during a specified time range will be archived).
.Pp
A time range is made up of six different fields and each field must contain two
digits.
The format is:
.Pp
.Dl [[[[[cc]yy]mm]dd]HH]MM[.SS]
.Pp
Where
.Ar cc
is the first two digits of the year (the century),
.Ar yy
is the last two digits of the year,
the first
.Ar mm
is the month (from 01 to 12),
.Ar dd
is the day of the month (from 01 to 31),
.Ar HH
is the hour of the day (from 00 to 23),
.Ar MM
is the minute (from 00 to 59),
and
.Ar SS
is the seconds (from 00 to 59).
The minute field
.Ar MM
is required, while the other fields are optional and must be added in the
following order:
.Ar HH , dd , mm ,
.Ar yy , cc .
.Pp
The
.Ar SS
field may be added independently of the other fields.
Time ranges are relative to the current time, so
.Ic \-T 1234/cm
would select all files with a modification or inode change time
of 12:34 PM today or later.
Multiple
.Fl T
time range can be supplied and checking stops with the first match.
.It Fl t
Reset the access times of any file or directory read or accessed by
.Nm
to be the same as they were before being read or accessed by
.Nm \*(nm .
.It Fl U Ar user
Select a file based on its
.Ar user
name, or when starting with a
.Cm # ,
a numeric UID.
A
.Ql \e
can be used to escape the
.Cm # .
Multiple
.Fl U
options may be supplied and checking stops with the first match.
.It Fl u
Ignore files that are older (having a less recent file modification time)
than a pre-existing file or archive member with the same name.
During read,
an archive member with the same name as a file in the filesystem will be
extracted if the archive member is newer than the file.
During write,
a filesystem member with the same name as an archive member will be
written to the archive if it is newer than the archive member.
During copy,
the file in the destination hierarchy is replaced by the file in the source
hierarchy or by a link to the file in the source hierarchy if the file in
the source hierarchy is newer.
.It Fl v
During a list operation, produce a verbose table of contents using the format of the
.Xr ls 1
utility with the
.Fl l
option.
For pathnames representing a hard link to a previous member of the archive,
the output has the format:
.Pp
.Dl Em ls \-l listing No == Em link-name
.Pp
For pathnames representing a symbolic link, the output has the format:
.Pp
.Dl Em ls \-l listing No -\*(Gt Em link-name
.Pp
Where
.Em ls \-l listing
is the output format specified by the
.Xr ls 1
utility when used with the
.Fl l
option.
Otherwise for all the other operational modes
(read, write, and copy),
pathnames are written and flushed to standard error
without a trailing newline
as soon as processing begins on that file or
archive member.
The trailing newline
is not buffered and is written only after the file has been read or written.
.It Fl w
Write files to the standard output
in the specified archive format.
When no
.Ar file
operands are specified, standard input
is read for a list of pathnames with one per line without any leading or
trailing
.Aq blanks .
.It Fl X
When traversing the file hierarchy specified by a pathname,
do not descend into directories that have a different device ID.
See the
.Li st_dev
field as described in
.Xr stat 2
for more information about device IDs.
.It Fl x Ar format
Specify the output archive format, with the default format being
.Cm ustar .
.Nm
currently supports the following formats:
.Bl -tag -width "sv4cpio"
.It Cm ar
The Unix Archiver library format.
This format matches APT repositories and the BSD
.Xr ar 1
specification, not GNU binutils (which can however read them) or SYSV systems.
See
.Xr ar 5
on some operating systems for more information.
.It Cm bcpio
The old binary cpio format.
The default blocksize for this format is 5120 bytes.
This format is not very portable and should not be used when other formats
are available.
Inode and device information about a file (used for detecting file hard links
by this format), which may be truncated by this format, is detected by
.Nm
and is repaired.
.It Cm cpio
The extended cpio interchange format specified in the
.St -p1003.2
standard.
The default blocksize for this format is 5120 bytes.
Inode and device information about a file (used for detecting file hard links
by this format), which may be truncated by this format, is detected by
.Nm
and is repaired.
.It Cm sv4cpio
The System V release 4 cpio.
The default blocksize for this format is 5120 bytes.
Inode and device information about a file (used for detecting file hard links
by this format), which may be truncated by this format, is detected by
.Nm
and is repaired.
.It Cm sv4crc
The System V release 4 cpio with file CRC checksums.
The default blocksize for this format is 5120 bytes.
Inode and device information about a file (used for detecting file hard links
by this format), which may be truncated by this format, is detected by
.Nm
and is repaired.
.It Cm tar
The old
.Bx
tar format as found in
.Bx 4.3 .
The default blocksize for this format is 10240 bytes.
Pathnames stored by this format must be 100 characters or less in length.
Only regular files, hard links, soft links, and directories
will be archived (other filesystem types are not supported).
For backwards compatibility with even older tar formats, a
.Fl o
option can be used when writing an archive to omit the storage of directories.
This option takes the form:
.Pp
.Dl Fl o Cm write_opt=nodir
.It Cm ustar
The extended tar interchange format specified in the
.St -p1003.2
standard.
The default blocksize for this format is 10240 bytes.
Filenames stored by this format must be 100 characters or less in length;
the total pathname must be 256 characters or less.
.El
.Pp
.Nm
will detect and report any file that it is unable to store or extract
as the result of any specific archive format restrictions.
The individual archive formats may impose additional restrictions on use.
Typical archive format restrictions include (but are not limited to):
file pathname length, file size, link pathname length, and the type of the
file.
.It Fl Y
This option is the same as the
.Fl D
option, except that the inode change time is checked using the
pathname created after all the file name modifications have completed.
.It Fl Z
This option is the same as the
.Fl u
option, except that the modification time is checked using the
pathname created after all the file name modifications have completed.
.It Fl z
Use the
.Xr gzip 1
utility to compress (decompress) the archive while writing (reading).
Incompatible with
.Fl a .
.El
.Pp
The options that operate on the names of files or archive members
.Po Fl c ,
.Fl i ,
.Fl n ,
.Fl s ,
.Fl u ,
.Fl v ,
.Fl D ,
.Fl G ,
.Fl T ,
.Fl U ,
.Fl Y ,
and
.Fl Z
.Pc
interact as follows.
.Pp
When extracting files during a read operation, archive members are
.Sq selected ,
based only on the user specified pattern operands as modified by the
.Fl c ,
.Fl n ,
.Fl u ,
.Fl D ,
.Fl G ,
.Fl T ,
.Fl U
options.
Then any
.Fl s
and
.Fl i
options will modify in that order, the names of these selected files.
Then the
.Fl Y
and
.Fl Z
options will be applied based on the final pathname.
Finally, the
.Fl v
option will write the names resulting from these modifications.
.Pp
When archiving files during a write operation,
or copying files during a copy operation,
archive members are
.Sq selected ,
based only on the user specified pathnames as modified by the
.Fl n ,
.Fl u ,
.Fl D ,
.Fl G ,
.Fl T ,
and
.Fl U
options (the
.Fl D
option only applies during a copy operation).
Then any
.Fl s
and
.Fl i
options will modify in that order, the names of these selected files.
Then during a copy operation the
.Fl Y
and the
.Fl Z
options will be applied based on the final pathname.
Finally, the
.Fl v
option will write the names resulting from these modifications.
.Pp
When one or both of the
.Fl u
or
.Fl D
options are specified along with the
.Fl n
option, a file is not considered selected unless it is newer
than the file to which it is compared.
.Sh ENVIRONMENT
.Bl -tag -width Fl
.It Ev TMPDIR
Path in which to store temporary files.
.El
.Sh EXIT STATUS
.Ex -std pax
.Sh EXAMPLES
Copy the contents of the current directory to the device
.Pa /dev/rst0 :
.Pp
.Dl $ \*(nm \-w \-f /dev/rst0 \&.
.Pp
Give the verbose table of contents for an archive stored in
.Pa filename :
.Pp
.Dl $ \*(nm \-v \-f filename
.Pp
This sequence of commands will copy the entire
.Pa olddir
directory hierarchy to
.Pa newdir :
.Bd -literal -offset indent
$ mkdir newdir
$ cd olddir
$ \*(nm \-rw . ../newdir
.Ed
.Pp
Extract files from the archive
.Pa a.pax .
Files rooted in
.Pa /usr
are extracted relative to the current working directory;
all other files are extracted to their unmodified path.
.Pp
.Dl $ \*(nm \-r \-s \*(aq,\*(ha/usr/,,\*(aq \-f a.pax
.Pp
This can be used to interactively select the files to copy from the
current directory to
.Pa dest_dir :
.Pp
.Dl $ \*(nm \-rw \-i \&. dest_dir
.Pp
Extract all files from the archive
.Pa a.pax
which are owned by
.Em root
with group
.Em bin
and preserve all file permissions:
.Pp
.Dl "$ \*(nm \-r \-pe \-U root \-G bin \-f a.pax"
.Pp
Update (and list) only those files in the destination directory
.Pa /backup
which are older (less recent inode change or file modification times) than
files with the same name found in the source file tree
.Pa home :
.Pp
.Dl "$ \*(nm \-r \-w \-v \-Y \-Z home /backup"
.Sh DIAGNOSTICS
Whenever
.Nm
cannot create a file or a link when reading an archive or cannot
find a file when writing an archive, or cannot preserve the user ID,
group ID, or file mode when the
.Fl p
option is specified, a diagnostic message is written to standard error
and a non-zero exit status will be returned, but processing will continue.
In the case where
.Nm
cannot create a link to a file,
unless
.Fl M Ar lncp
is given,
.Nm
will not create a second copy of the file.
.Pp
If the extraction of a file from an archive is prematurely terminated by
a signal or error,
.Nm
may have only partially extracted a file the user wanted.
Additionally, the file modes of extracted files and directories
may have incorrect file bits, and the modification and access times may be
wrong.
.Pp
If the creation of an archive is prematurely terminated by a signal or error,
.Nm
may have only partially created the archive, which may violate the specific
archive format specification.
.Pp
If while doing a copy,
.Nm
detects a file is about to overwrite itself, the file is not copied,
a diagnostic message is written to standard error
and when
.Nm
completes it will exit with a non-zero exit status.
.Sh SEE ALSO
.Xr ar 1 ,
.Xr cpio 1 ,
.if \ng==1 \{\
.Xr deb 5 ,
.Xr mircpio 1 ,
.Xr mirtar 1 ,
.Xr pax 1 ,
.\}
.if \ng==2 \{\
.Xr deb 5 ,
.Xr paxcpio 1 ,
.Xr paxtar 1 ,
.\}
.Xr tar 1
.Sh STANDARDS
The
.Nm
utility is mostly compliant with an older version of the IEEE Std 1003.1
.Pq Dq Tn POSIX
specification,
except for the known
.Sx BUGS
listed below, and that the
.Cm pax
archive format and the
.Cm listopt
keyword are unsupported.
.Pp
The flags
.Fl 0BDEGHJjLMOPTUYZz ,
the archive formats
.Cm ar ,
.Cm bcpio ,
.Cm sv4cpio ,
.Cm sv4crc
and
.Cm tar ,
the
.Cm b , k ,
and
.Cm x
additions to the
.Fl b
flag
and the flawed archive handling during list and read operations
are extensions to that specification.
.Sh HISTORY
A
.Nm
utility appeared in
.Bx 4.4 .
.Sh AUTHORS
.An -nosplit
.An Keith Muller
at the University of California, San Diego.
.Mx
extensions by
.An mirabilos Aq m@@mirbsd.org .
.Sh BUGS
The pattern matching does not match either
.Tn POSIX
or this documentation completely.
See also
.Sx STANDARDS
above.
@


1.33
log
@merge the npax branch into MAIN

asides from a missing dprintf and portability, this ought to be
good enough for people (well me) to play with for now
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.31 2017/08/07 20:10:16 tg Exp $
d97 1
a97 1
.Dd $Mdocdate: August 7 2017 $
d105 1
d118 1
a118 1
.	ds str-Mx1 \*[Tn-font-size]\%MirOS\*[str-Mx]
d144 32
d182 1
a182 1
.		ie \\n(.$==0 \&MirOS\\*(aa
d188 1
a188 1
.			as b1 \&MirOS\ #\&\\*(A\\n(aP\\*(aa
d196 1
a196 1
.			as b1 \&MirOS\\*(aa
@


1.32
log
@slowmerge (untested though)
@
text
@d5 1
a5 1
.\" Copyright (c) 2005, 2009, 2011, 2012, 2014, 2016, 2017
d273 1
a273 1
.It \*(Ltnone\*(Gt
d349 1
a349 5
While processing a damaged archive during a
.Em read
or
.Em list
operation,
d413 7
a419 1
.Xr find 1
d465 1
a465 1
.Em Warning :
d471 1
a471 3
When
.Em writing
an archive,
d488 1
a488 1
.Ar blocksizes
a532 7
A
.Ar limit
of
.Li NONE
will cause
.Nm
to attempt to recover from read errors forever.
a535 7
.Pp
.Em Warning :
Using this option with
.Li NONE
should be used with extreme caution as
.Nm
may get stuck in an infinite loop on a very badly flawed archive.
d540 1
a540 4
standard input (for
.Em list
and
.Em read )
d542 1
a542 2
(for
.Em write ) .
d606 1
a606 3
In the
.Em copy
mode
d634 2
a635 1
0x0008: Set owner to 0:0 (root:wheel).
d700 3
a702 1
The following options are available for the old
d704 2
a705 2
.Em tar
format:
d737 1
a737 2
This is intended to be used by
.Em root ,
d755 2
a756 4
This is intended to be used by a
.Em user
with regular privileges who wants to preserve all aspects of the file other
than the ownership.
d777 1
a777 2
.Em ( setuid )
and
d779 1
a779 2
.Em ( setgid )
bits of the file mode.
d799 1
a799 3
was called with the bitwise inclusive
.Tn OR
of
d904 1
a904 5
is in the
.Em write
or
.Em copy
mode, the optional trailing field
d995 1
a995 2
During
.Em read ,
d998 1
a998 2
During
.Em write ,
d1001 1
a1001 2
During
.Em copy ,
d1006 1
a1006 3
During a
.Em list
operation, produce a verbose table of contents using the format of the
d1014 1
a1014 1
.Dl Em ls \-l listing Li == Em link-name
d1018 1
a1018 1
.Dl Em ls \-l listing Li =\*(Gt Em link-name
d1028 1
a1028 2
.Po Em read , write , No and Em copy
.Pc ,
d1105 1
a1105 6
Only
.Em regular
files,
.Em hard links , soft links ,
and
.Em directories
d1164 1
a1164 3
When extracting files during a
.Em read
operation, archive members are
d1189 3
a1191 5
When archiving files during a
.Em write
operation, or copying files during a
.Em copy
operation, archive members are
d1209 1
a1209 3
Then during a
.Em copy
operation the
d1232 1
a1232 10
The
.Nm
utility exits with one of the following values:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It 0
All files were processed successfully.
.It 1
An error occurred.
.El
d1317 1
a1317 2
If while doing a
.Em copy ,
d1342 4
a1345 1
utility is, except for the known
d1347 5
a1351 3
listed below, mostly compliant with the IEEE Std 1003.1
.Pq Dq Tn POSIX
specification.
d1356 8
a1363 7
.Em ar ,
.Em bcpio ,
.Em sv4cpio ,
.Em sv4crc ,
.Em tar ,
and the flawed archive handling during
.Em list
d1365 5
a1369 2
.Em read
operations
d1371 5
d1384 1
a1384 4
The
.Ar pax
file format is not yet supported.
The pattern matching does not match
d1386 4
a1389 1
completely either, nor this documentation.
@


1.31
log
@filesystem
@
text
@d1 2
a2 2
.\"	$MirOS: src/bin/pax/pax.1,v 1.30 2017/03/29 01:52:30 tg Exp $
.\"	$OpenBSD: pax.1,v 1.61 +1.71 2010/09/19 20:55:25 jmc Exp $
d97 1
a97 1
.Dd $Mdocdate: March 29 2017 $
d375 1
a375 1
.Xr glob 3 .
@


1.30
log
@layout fix
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.28 2016/03/06 13:47:12 tg Exp $
d97 1
a97 1
.Dd $Mdocdate: March 6 2016 $
d444 1
a444 1
An archive stored in a regular file system file or on a disk device will
d619 1
a619 1
Follow all symbolic links to perform a logical file system traversal.
d729 1
a729 1
Do not follow symbolic links, perform a physical file system traversal.
d1025 1
a1025 1
an archive member with the same name as a file in the file system will be
d1029 1
a1029 1
a file system member with the same name as an archive member will be
d1145 1
a1145 1
will be archived (other file system types are not supported).
@


1.29
log
@fastmerge
@
text
@d5 1
a5 1
.\" Copyright (c) 2005, 2009, 2011, 2012, 2014, 2016
d1418 1
@


1.28
log
@apply changes from mpax-erstmalnurderbackport branch not related to the CVEs
@
text
@d1 2
a2 2
.\"	$MirOS: src/bin/pax/pax.1,v 1.25 2014/07/03 18:57:17 tg Exp $
.\"	$OpenBSD: pax.1,v 1.61 2010/09/19 20:55:25 jmc Exp $
d97 1
a97 1
.Dd $Mdocdate: July 3 2014 $
a724 1
.It Cm nodir
@


1.27
log
@merge most recent portmdoc into a̲l̲l̲ of its users; fixup .\& into \&. like
in mksh(1), for Schillix ditroff
@
text
@d1419 2
a1420 2
Keith Muller at the University of California, San Diego.
.Pp
d1423 1
a1423 1
.An Thorsten Glaser Aq tg@@mirbsd.org .
@


1.26
log
@documentation issues wrt. POSIX compliance (Debian #756877, #287068)
@
text
@d5 2
a6 2
.\" Copyright (c) 2005, 2009, 2011, 2012, 2014
.\"	Thorsten Glaser <tg@@mirbsd.org>
d50 3
a52 1
.\" Also make sure to use \& especially with two-letter words.
@


1.25
log
@document why 'tar -M dist -cvvf - foo' does not show 0:0 owner etc.
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.24 2012/06/05 19:29:33 tg Exp $
d95 1
a95 1
.Dd $Mdocdate: June 5 2012 $
d1396 3
a1398 2
utility is compliant with the
IEEE Std 1003.1-2008
d1426 3
@


1.24
log
@mention nōn-support (TOOD) of pax file format
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.23 2012/05/20 20:04:31 tg Exp $
d5 1
a5 1
.\" Copyright (c) 2005, 2009, 2011, 2012
d95 1
a95 1
.Dd $Mdocdate: May 20 2012 $
d679 4
@


1.23
log
@update portmdoc; re-check its rules
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.22 2012/02/12 02:49:41 tg Exp $
d95 1
a95 1
.Dd $Mdocdate: March 15 2010 $
d1417 4
@


1.22
log
@• brown paper bag: pasto
• GNU groff, in 2012, still doesn’t know about POSIX 2008
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.21 2012/02/12 01:48:21 tg Exp $
d49 2
d95 1
a95 1
.Dd $Mdocdate: February 12 2012 $
d97 1
a97 1
.\" Check which macro package we use
d100 2
@


1.21
log
@-rg2: paxcpio / pax / paxtar (new)
-rg1: mircpio / mirpax / mirtar (old)
-rg0: cpio / pax / tar (default)
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.20 2012/02/12 00:04:32 tg Exp $
d1389 2
a1390 1
.St -p1003.1-2008
@


1.20
log
@slowmerge options.c; sort getopt/getoldopt arguments AGAIN, finally
merge usage changes from obsd; add xz support
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.19 2012/02/11 23:44:05 tg Exp $
d93 1
a93 1
.Dd $Mdocdate: February 11 2012 $
d171 7
d1379 5
@


1.19
log
@the -M flag can be used during extraction, too (think lncp)
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.18 2012/02/11 23:37:52 tg Exp $
d192 1
a192 1
.Op Fl 0cdjnOvz
d202 1
a202 1
.Op Fl 0cDdijknOuvYZz
d215 1
a215 1
.Op Fl 0adHijLOPtuvXz
d229 1
a229 1
.Op Fl 0DdHijkLlnOPtuvXYZ
d593 5
a1172 1
.Fl j ,
d1381 1
a1381 1
.Fl 0BDEGHjLMOPTUYZz ,
@


1.18
log
@slowmerge, fix and extend the manual pages
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.17 2011/08/17 09:03:58 tg Exp $
d93 1
a93 1
.Dd $Mdocdate: August 17 2011 $
d206 1
@


1.17
log
@Debian idiotically uses something called lexgrog(1) to parse manpages
for whatis information which fails even worse than mdocml(1)…
@
text
@d1 2
a2 2
.\"	$MirOS: src/bin/pax/pax.1,v 1.16 2011/08/16 21:32:48 tg Exp $
.\"	$OpenBSD: pax.1,v 1.52 2007/05/31 19:19:15 jmc Exp $
d5 1
a5 1
.\" Copyright (c) 2005, 2009, 2011
d93 1
a93 1
.Dd $Mdocdate: August 16 2011 $
d192 1
a192 1
.Op Fl 0cdnOvz
d202 1
a202 1
.Op Fl 0cDdiknOuvYZz
d214 1
a214 1
.Op Fl 0adHiLOPtuvXz
d225 1
a225 1
.Op Ar file ...
d228 1
a228 1
.Op Fl 0DdHikLlnOPtuvXYZ
d234 1
a234 1
.Op Ar file ...
d592 5
d911 1
a911 1
.Oo Cm c Oc Op Cm m
d1074 1
a1074 1
specification, not GNU binutils or SYSV systems.
d1136 1
a1136 1
the total pathname must be 255 characters or less.
d1157 1
a1157 1
Use
d1159 1
a1159 1
to compress (decompress) the archive while writing (reading).
d1167 1
d1255 11
a1319 9
.Nm
will exit with one of the following values:
.Bl -tag -width 2n -offset indent
.It 0
All files were processed successfully.
.It 1
An error occurred.
.El
.Pp
d1372 1
a1372 1
.St -p1003.1-2004
d1376 1
a1376 1
.Op Fl 0BDEGHLMOPTUYZz ,
d1378 1
@


1.16
log
@backend for Unix Archiver libraries – ar(5) and deb(5) format files
(since GNU binutils on ELF systems thinks SYSV style ar is used…)
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.15 2011/08/16 14:17:24 tg Exp $
d181 6
a186 1
.Nm \*(nm
d188 1
@


1.15
log
@with -rg1 the manpages are now mir’d
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.14 2011/08/16 13:45:01 tg Exp $
d5 2
a6 1
.\" Copyright (c) 2005, 2006, 2009 Thorsten Glaser.
d603 4
a606 1
is either a number or a string, optionally prefixed with
d608 1
a608 4
to turn it off.
See
.Xr \*(nc 1
for a comprehensive list and compatibility notes.
d613 2
d617 2
d621 2
d625 6
d632 1
a632 1
0x0040: Extract hard links by copying if linking fails.
d635 2
d639 10
d651 1
a651 1
This option is only implemented for the cpio, sv4cpio,
d653 1
a653 10
For the ustar format, the
.Ar inodes
and
.Ar links
specifiers are ignored.
For all formats except ustar, the
.Ar numid
and
.Ar gslash
specifiers are ignored.
d1059 8
d1345 1
d1348 1
d1379 1
a1379 1
.An Thorsten Glaser Aq tg@@mirbsd.de .
@


1.14
log
@… aaaand the even longer awaited functionality to append a slash to a
directory’s name upon ustar creation (like gtar)
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.13 2011/08/16 13:27:02 tg Exp $
d163 15
a177 1
.Dt PAX 1
d180 1
a180 1
.Nm pax
d184 1
a184 1
.Nm pax
d193 1
a193 1
.Nm pax
d205 1
a205 1
.Nm pax
d219 1
a219 1
.Nm pax
d606 1
a606 1
.Xr cpio 1
d639 1
a639 1
.Nm pax
d957 1
a957 1
.Nm pax .
d1223 1
a1223 1
.Dl $ pax \-w \-f /dev/rst0 \&.
d1228 1
a1228 1
.Dl $ pax \-v \-f filename
d1237 1
a1237 1
$ pax \-rw . ../newdir
d1247 1
a1247 1
.Dl $ pax \-r \-s \*(aq,\*(ha/usr/,,\*(aq \-f a.pax
d1253 1
a1253 1
.Dl $ pax \-rw \-i \&. dest_dir
d1263 1
a1263 1
.Dl "$ pax \-r \-pe \-U root \-G bin \-f a.pax"
d1271 1
a1271 1
.Dl "$ pax \-r \-w \-v \-Y \-Z home /backup"
d1322 5
@


1.13
log
@implement the long-awaited option to skip writing the ASCII uid/gid
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.12 2009/11/22 18:23:40 tg Exp $
d92 1
a92 1
.Dd $Mdocdate: November 22 2009 $
d608 2
d621 3
a623 1
specifier is ignored.
@


1.12
log
@fix more manpages
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.11 2009/11/22 15:55:24 tg Exp $
d606 2
d617 3
@


1.11
log
@update to contrib/samples/portmdoc,v 1.6
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.10 2009/10/27 18:47:26 tg Exp $
d92 1
a92 1
.Dd $Mdocdate: November 17 2009 $
d589 1
a589 1
.Dq no-
d924 1
a924 1
.Ic -T 1234/cm
d975 1
a975 1
.Dl Em ls -l listing Li == Em link-name
d979 1
a979 1
.Dl Em ls -l listing Li =\*(Gt Em link-name
d982 1
a982 1
.Em ls -l listing
d1200 1
a1200 1
.Dl $ pax -w -f /dev/rst0 \&.
d1205 1
a1205 1
.Dl $ pax -v -f filename
d1214 1
a1214 1
$ pax -rw . ../newdir
d1224 1
a1224 1
.Dl $ pax -r -s ',^/usr/,,' -f a.pax
d1230 1
a1230 1
.Dl $ pax -rw -i \&. dest_dir
d1240 1
a1240 1
.Dl "$ pax -r -pe -U root -G bin -f a.pax"
d1248 1
a1248 1
.Dl "$ pax -r -w -v -Y -Z home /backup"
@


1.10
log
@new option “-M lncp”, see TFM for details
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.9 2008/03/14 17:05:06 tg Exp $
d5 1
a5 1
.\" Copyright (c) 2005, 2006 Thorsten Glaser.
d41 3
a43 3
.\" * ` generates ‘ in groff, so use \`
.\" * ' generates ’ in groff, \' generates ´, so use \*(aq
.\" * - generates ‐ in groff, \- generates −, fixed in tmac/mdoc/doc-groff
d48 4
d53 13
d79 1
d91 10
a100 1
.Dd $Mdocdate: March 14 2008 $
d103 32
a134 7
.de Mx
.nr cF \\n(.f
.nr cZ \\n(.s
.ds aa \&\f\\n(cF\s\\n(cZ
.if \\n(aC==0 \{\
.	ie \\n(.$==0 \&MirOS\\*(aa
.	el .aV \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9
d136 21
a156 6
.if \\n(aC>\\n(aP \{\
.	nr aP \\n(aP+1
.	ie \\n(C\\n(aP==2 \{\
.		as b1 \&MirOS\ #\&\\*(A\\n(aP\\*(aa
.		ie \\n(aC>\\n(aP \{\
.			nr aP \\n(aP+1
a158 5
.		el .aZ
.	\}
.	el \{\
.		as b1 \&MirOS\\*(aa
.		nR
d160 1
d162 1
a162 1
..
@


1.9
log
@switch to portmdoc
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.8 2007/10/23 20:07:42 tg Exp $
d541 2
d1207 3
@


1.8
log
@merge openbsd changes and fix tar -R, -S flag misdocumentation
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.7 2006/07/21 17:34:59 tg Exp $
d39 37
a75 4
.Dd October 23, 2007
.Dt PAX 1
.Os MirBSD
.\" for portability
d81 2
a82 1
.	if \\n(.$==0 \&MirOS\\*(aa
d84 14
a97 3
.if \\n(.$==1 \{\
.	if "\\$1"."  \&MirOS\\$1\\*(aa
.	if "\\$1","  \&MirOS\\$1\\*(aa
d100 2
@


1.7
log
@* add -M option to pax
* sync manpages
* don't document deprecated format names in pax(1) any more
* add .de Mx for portability
* improve -M verb to show archive fmt
@
text
@d1 2
a2 2
.\"	$MirOS: src/bin/pax/pax.1,v 1.6 2006/06/23 23:03:56 tg Exp $
.\"	$OpenBSD: pax.1,v 1.48 2006/05/12 11:55:58 jmc Exp $
d39 1
a39 1
.Dd July 21, 2006
d61 1
a61 1
.Op Fl 0cdOnvz
d71 1
a71 1
.Op Fl 0cDdikOnuvYZz
d88 1
a88 1
.Op Fl M Ar value
d96 1
a96 2
.Fl r
.Fl w
d168 1
a168 1
.It Fl r Fl w
d475 1
a475 1
.It Fl M Ar value
d477 1
a477 1
.Ar value
d480 1
a480 1
to turn the flag off.
d706 1
a706 1
.D1 Em original-pathname No >> Em new-pathname
d908 2
a909 4
.It Cm cpio
The extended cpio interchange format specified in the
.St -p1003.2
standard.
d911 2
d917 4
a920 2
.It Cm bcpio
The old binary cpio format.
a921 2
This format is not very portable and should not be used when other formats
are available.
d1105 3
a1107 3
Read the archive
.Pa a.pax ,
with all files rooted in
d1109 2
a1110 1
into the archive extracted relative to the current directory:
d1112 1
a1112 1
.Dl $ pax -r -s ',^//*usr//*,,' -f a.pax
d1188 6
a1193 18
utility is a superset of the
.St -p1003.2
standard.
The options
.Fl 0 ,
.Fl B ,
.Fl D ,
.Fl E ,
.Fl G ,
.Fl H ,
.Fl L ,
.Fl M ,
.Fl O ,
.Fl P ,
.Fl T ,
.Fl U ,
.Fl Y ,
.Fl Z ,
d1203 2
a1204 3
operations are extensions to the
.Tn POSIX
standard.
@


1.6
log
@merge the OpenBSD import (bugfix)
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.5 2005/11/23 23:27:10 tg Exp $
d5 1
a5 1
.\" Copyright (c) 2005 Thorsten Glaser <tg@@66h.42h.de>
d39 1
a39 1
.Dd April 18, 1994
d41 14
a54 1
.Os
d88 1
d476 33
a926 8
.It Cm dist
Anonymised version of the extended cpio interchange format specified in the
.St -p1003.2
standard.
The default blocksize for this format is 512 bytes.
Inode and device information about a file is anonymised, and the UID and GID
information is set to zero.
The content of hardlinked files is only stored once in the archive.
a967 19
.It Cm v4norm
Normalised System V release 4 cpio with file CRC checksums.
The default blocksize for this format is 512 bytes.
The files' ownerships (UID and GID) as well as modification times are
set to 0 unconditionally; inode information is serialised and the
major:minor of the device the file resided on is anonymised.
As an added bonus, this format stores the file content of hard links
only once (in contrast to cpio/sv4cpio/sv4crc, which store it with
every instance of the multiple-linked file).
.It Cm v4root
Anonymised System V release 4 cpio with file CRC checksums.
The default blocksize for this format is 512 bytes.
The files' ownerships (UID and GID) are
set to 0 unconditionally; inode information is serialised
and device information anonymised.
The modification times are however retained.
As an added bonus, this format stores the file content of hard links
only once (in contrast to cpio/sv4cpio/sv4crc, which store it with
every instance of the multiple-linked file).
d1199 1
d1220 4
@


1.5
log
@* cpio.1, pax.1: document new format "dist"
* cpio.c: implement new format "dist"
* cpio.c: trailer doesn't need an inode in any case
* cpio.h: sync comments between CPIO and VCPIO structs
* extern.h, options.c: add glue for new format "dist"
@
text
@d1 2
a2 2
.\"	$MirOS: src/bin/pax/pax.1,v 1.4 2005/11/18 13:58:47 tg Exp $
.\"	$OpenBSD: pax.1,v 1.46 2005/06/02 19:06:43 jaredy Exp $
d319 1
a319 1
Archives larger than 32256 bytes violate the
d1083 1
a1083 1
$ pax -rw . newdir
@


1.4
log
@For v4norm (but not v4root), also anonymise the device major:minor of
the device the file to archive resides/resided on (set to zero)

* does not affect the device major:minor of the file to archive itself
  (only nonzero if the file to archive is a character/block special)
* this works because of my inode serialisation algorithm, which
  uses the original device major:minor and the original inode as
  index into its database, but assigns continuous new-inode numbers
  to them no matter which device they are on

Proof:

e/x/161824 M/interix.diff C/me/x/161824l? | /cpio -oHv4norm >x                <
debug: inode    27820 ->   3, dev       41:      43, file <C/me/x/161824>
debug: inode    27820 ->   4, dev       41:      4D, file <M/interix.diff>
debug: inode    27820 ->   3, dev       41:      43, file <C/me/x/161824l2>
debug: inode    27820 ->   3, dev       41:      43, file <C/me/x/161824l3>
debug: inode        0 ->   5, dev        0:       0, file <TRAILER!!!>
/161824l? | xargs ls -li                                                      <
161824 -rw-r--r--  3 sysop      None          0 Nov 18 13:38 C/me/x/161824
161824 -rw-r--r--  3 sysop      None          0 Nov 18 13:38 C/me/x/161824l2
161824 -rw-r--r--  3 sysop      None          0 Nov 18 13:38 C/me/x/161824l3
161824 -rwxrwxrwx  1 +Everyone  +Everyone  6039 Nov 16 14:46 M/interix.diff

If a file exists twice in the source tree, it's archived twice unless
it's a hard link - in the new v4norm format, it should not matter if
they are on separate or same filesystems for the emission of a new
inode number. If they have been hardlinks before, it does of course
matter, but as far as I am concerned, mpczar does not need to deal
with these, as CVS checkouts aren't hardlinked anyway (and we don't
archive the CVS/ subdirectories).
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.3 2005/11/16 14:27:28 tg Exp $
d880 8
a931 4
Inode and device information about a file (used for detecting file hard links
by this format), which may be truncated by this format, is detected by
.Nm
and is repaired.
d941 3
a943 6
Inode and device information about a file (used for detecting file hard links
by this format), which may be truncated by this format, is detected by
.Nm
and is repaired.
The files; ownerships (UID and GID) are
set to 0 unconditionally; inode information is serialised.
@


1.3
log
@In my new formats (v4norm and v4root), do *not* store the file contents
of files which are hard links twice - instead, hard links' file sizes
are set to 0. This goes along with forward link table creation, and
sort of clones the chk_lnk behaviour for tar/ustar but differently
(including inode number anonymisation).

This does not matter because on extraction, no file is written, instead
a hard link is created. If hard links are on different filesystems during
extraction, an error is generated and no file is being written - same as
with regular cpio/sv4cpio/sv4crc.

This change does not affect the other file formats, because I do not
have access to the SV4CPIO and POSIX CPIO specifications, respectively
cannot easily see whether it breaks the specs.

WFM.
@
text
@d1 1
a1 1
.\"	$MirOS: src/bin/pax/pax.1,v 1.2 2005/11/16 13:58:39 tg Exp $
d929 2
a930 1
set to 0 unconditionally; inode information is serialised.
@


1.2
log
@* cpio.1: Document sv4crc format for creation and extraction
* cpio.1, pax.1: Document new v4norm and v4root formats for creation only
  (to extract these, the sv4crc driver is being used)
* cpio.c: Add initialisation routines for v4norm and v4root formats
* cpio.c (vcpio_wr): Write c_ino, c_uid, c_gid and c_mtime through a
  layer of indirection, depending on the state of (v4norm) setting them
  to the stat buf value, zero (uid, gid, mtime) or the result of a table
  lookup (inode)
* extern.h: expose new v4norm_stwr, v4root_stwr (cpio.c) and
  flnk_start, chk_flnk (table.c) functions
* options.c: add entries for new formats v4norm, v4root
* tables.c: mirror lnk_start, chk_lnk functions to build up a hard link
  table on archive creation as well, anonymising _all_ inodes stored

(inodes start at 3)
@
text
@d1 1
a1 1
.\"	$MirOS$
d930 3
d943 3
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
.\"	$OpenBSD: pax.1,v 1.44 2004/02/19 19:15:32 jmc Exp $
d5 1
d46 1
d48 2
a49 2
.Op Fl 0cdnvz
.Bk -words
d51 1
a51 2
.Ek
.Bk -words
d53 1
a53 3
.Ar ...
.Ek
.Bk -words
a54 14
.Ar ...
.Ek
.Bk -words
.Op Fl G Ar group
.Ar ...
.Ek
.Bk -words
.Oo
.Fl T
.Op Ar from_date
.Op Ar ,to_date
.Oc
.Ar ...
.Ek
d58 2
a59 2
.Op Fl cdiknuvzDYZ
.Bk -words
d61 1
a61 2
.Ek
.Bk -words
a62 3
.Ar ...
.Ek
.Bk -words
a63 3
.Ar ...
.Ek
.Bk -words
d65 1
a65 4
.Ar ...
.Ek
.Op Fl E Ar limit
.Bk -words
a66 14
.Ar ...
.Ek
.Bk -words
.Op Fl G Ar group
.Ar ...
.Ek
.Bk -words
.Oo
.Fl T
.Op Ar from_date
.Op Ar ,to_date
.Oc
.Ar ...
.Ek
d70 2
a71 2
.Op Fl 0dituvzHLPX
.Bk -words
a72 3
.Ek
.Oo
.Op Fl a
d74 2
a75 5
.Oc
.Bk -words
.Op Fl x Ar format
.Ek
.Bk -words
d77 1
a77 7
.Ar ...
.Ek
.Bk -words
.Op Fl o Ar options
.Ar ...
.Ek
.Bk -words
d79 1
a79 18
.Ar ...
.Ek
.Bk -words
.Op Fl G Ar group
.Ar ...
.Ek
.Bk -words
.Op Fl B Ar bytes
.Ek
.Bk -words
.Oo
.Fl T
.Op Ar from_date
.Op Ar ,to_date
.Op Ar /[c][m]
.Oc
.Ar ...
.Ek
d84 2
a85 2
.Op Fl 0diklntuvDHLPXYZ
.Bk -words
a86 3
.Ar ...
.Ek
.Bk -words
d88 1
a88 3
.Ar ...
.Ek
.Bk -words
a89 15
.Ar ...
.Ek
.Bk -words
.Op Fl G Ar group
.Ar ...
.Ek
.Bk -words
.Oo
.Fl T
.Op Ar from_date
.Op Ar ,to_date
.Op Ar /[c][m]
.Oc
.Ar ...
.Ek
d92 1
d95 1
a95 1
will read, write, and list the members of an archive file,
d98 1
a98 1
operation is independent of the specific archive format,
d115 1
a115 1
.It <none>
d121 2
a122 1
.Ar patterns .
d130 2
a131 1
.Ar patterns .
d178 1
a178 1
.Em Warning :
d217 1
a217 1
.Xr fnmatch 3 .
d248 18
a265 23
.It Fl r
Read an archive file from standard input
and extract the specified
.Ar files .
If any intermediate directories are needed in order to extract an archive
member, these directories will be created as if
.Xr mkdir 2
was called with the bitwise inclusive
.Tn OR
of
.Dv S_IRWXU , S_IRWXG ,
and
.Dv S_IRWXO
as the mode argument.
When the selected archive format supports the specification of linked
files and these files cannot be linked while the archive is being extracted,
.Nm
will write a diagnostic message to standard error
and exit with a non-zero exit status at the completion of operation.
.It Fl w
Write files to the standard output
in the specified archive format.
When no
d267 1
a267 7
operands are specified, standard input
is read for a list of pathnames with one per line without any leading or
trailing
.Aq blanks .
.It Fl a
Append
.Ar files
d280 1
a280 1
.Em Warning :
d288 22
a309 16
.It Fl 0
Use the NUL
.Pq Ql \e0
character as a pathname terminator, instead of newline
.Pq Ql \en .
This applies only to the pathnames read from standard input in
the write and copy modes,
and to the pathnames written to standard output in list mode.
This option is expected to be used in concert with the
.Fl print0
function in
.Xr find 1
or the
.Fl 0
flag in
.Xr xargs 1 .
d349 8
d361 31
d408 16
d450 2
d454 1
a454 1
.Dq ell. )
d472 7
d487 14
d521 1
a521 1
.Sq Preserve everything ,
d541 1
a541 1
.Sq Preserve
d581 1
a581 1
.Dl Fl p Ar eme
d583 20
d604 1
a604 5
Modify the file or archive member names specified by the
.Ar pattern
or
.Ar file
operands according to the substitution expression
d609 6
d616 1
d618 1
d621 5
a625 3
.Cm old
is a basic regular expression and
.Cm new
d628 1
a628 1
.Ql \en
d630 1
a630 1
.Ar n
d634 1
a634 1
.Cm old
d646 1
d659 3
a661 1
.Dl <original pathname> >> <new pathname>
d664 108
d777 13
d816 3
a818 1
.Dl <ls -l listing> == <link name>
d820 6
a825 2
.Dl <ls -l listing> => <link name>
Where <ls -l listing> is the output format specified by the
d831 1
a831 1
.Po Em read , write , Li and Em copy
d839 17
d858 1
a858 1
.Ar ustar .
d862 1
a862 1
.It Ar cpio
d871 1
a871 1
.It Ar bcpio
d880 1
a880 1
.It Ar sv4cpio
d887 2
a888 2
.It Ar sv4crc
The System V release 4 cpio with file crc checksums.
d894 5
a898 2
.It Ar tar
The old BSD tar format as found in BSD4.3.
d912 1
d914 1
a914 1
.It Ar ustar
d921 19
a948 212
.It Fl z
Use
.Xr gzip 1
to compress (decompress) the archive while writing (reading).
Incompatible with
.Fl a .
.It Fl B Ar bytes
Limit the number of bytes written to a single archive volume to
.Ar bytes .
The
.Ar bytes
limit can end with
.Sq Li m ,
.Sq Li k ,
or
.Sq Li b
to specify multiplication by 1048576 (1M), 1024 (1K) or 512, respectively.
A pair of
.Ar bytes
limits can be separated by
.Sq Li x
to indicate a product.
.Pp
.Em Warning :
Only use this option when writing an archive to a device which supports
an end of file read condition based on last (or largest) write offset
(such as a regular file or a tape drive).
The use of this option with a floppy or hard disk is not recommended.
.It Fl D
This option is the same as the
.Fl u
option, except that the file inode change time is checked instead of the
file modification time.
The file inode change time can be used to select files whose inode information
(e.g., UID, GID, etc.) is newer than a copy of the file in the destination
.Ar directory .
.It Fl E Ar limit
Limit the number of consecutive read faults while trying to read a flawed
archive to
.Ar limit .
With a positive
.Ar limit ,
.Nm
will attempt to recover from an archive read error and will
continue processing starting with the next file stored in the archive.
A
.Ar limit
of 0 will cause
.Nm
to stop operation after the first read error is detected on an archive volume.
A
.Ar limit
of
.Li NONE
will cause
.Nm
to attempt to recover from read errors forever.
The default
.Ar limit
is a small positive number of retries.
.Pp
.Em Warning :
Using this option with
.Li NONE
should be used with extreme caution as
.Nm
may get stuck in an infinite loop on a very badly flawed archive.
.It Fl G Ar group
Select a file based on its
.Ar group
name, or when starting with a
.Cm # ,
a numeric gid.
A
.Ql \e
can be used to escape the
.Cm # .
Multiple
.Fl G
options may be supplied and checking stops with the first match.
.It Fl H
Follow only command-line symbolic links while performing a physical file
system traversal.
.It Fl L
Follow all symbolic links to perform a logical file system traversal.
.It Fl O
Force the archive to be one volume.
If a volume ends prematurely,
.Nm
will not prompt for a new volume.
This option can be useful for
automated tasks where error recovery cannot be performed by a human.
.It Fl P
Do not follow symbolic links, perform a physical file system traversal.
This is the default mode.
.It Fl T Ar [from_date][,to_date][/[c][m]]
Allow files to be selected based on a file modification or inode change
time falling within a specified time range of
.Ar from_date
to
.Ar to_date
(the dates are inclusive).
If only a
.Ar from_date
is supplied, all files with a modification or inode change time
equal to or younger are selected.
If only a
.Ar to_date
is supplied, all files with a modification or inode change time
equal to or older will be selected.
When the
.Ar from_date
is equal to the
.Ar to_date ,
only files with a modification or inode change time of exactly that
time will be selected.
.Pp
When
.Nm
is in the
.Em write
or
.Em copy
mode, the optional trailing field
.Ar [c][m]
can be used to determine which file time (inode change, file modification or
both) are used in the comparison.
If neither is specified, the default is to use file modification time only.
The
.Ar m
specifies the comparison of file modification time (the time when
the file was last written).
The
.Ar c
specifies the comparison of inode change time (the time when the file
inode was last changed; e.g., a change of owner, group, mode, etc).
When
.Ar c
and
.Ar m
are both specified, then the modification and inode change times are
both compared.
The inode change time comparison is useful in selecting files whose
attributes were recently changed or selecting files which were recently
created and had their modification time reset to an older time (as what
happens when a file is extracted from an archive and the modification time
is preserved).
Time comparisons using both file times is useful when
.Nm
is used to create a time based incremental archive (only files that were
changed during a specified time range will be archived).
.Pp
A time range is made up of six different fields and each field must contain two
digits.
The format is:
.Dl [[[[[cc]yy]mm]dd]HH]MM[.SS]
Where
.Cm cc
is the first two digits of the year (the century),
.Cm yy
is the last two digits of the year,
the first
.Cm mm
is the month (from 01 to 12),
.Cm dd
is the day of the month (from 01 to 31),
.Cm HH
is the hour of the day (from 00 to 23),
.Cm MM
is the minute (from 00 to 59),
and
.Cm SS
is the seconds (from 00 to 59).
The minute field
.Cm MM
is required, while the other fields are optional and must be added in the
following order:
.br
.Cm \&	HH , dd , mm ,
.Cm yy , cc .
.br
The
.Cm SS
field may be added independently of the other fields.
Time ranges are relative to the current time, so
.Dl Fl T Ar 1234/cm
would select all files with a modification or inode change time
of 12:34 PM today or later.
Multiple
.Fl T
time range can be supplied and checking stops with the first match.
.It Fl U Ar user
Select a file based on its
.Ar user
name, or when starting with a
.Cm # ,
a numeric UID.
A
.Ql \e
can be used to escape the
.Cm # .
Multiple
.Fl U
options may be supplied and checking stops with the first match.
.It Fl X
When traversing the file hierarchy specified by a pathname,
do not descend into directories that have a different device ID.
See the
.Li st_dev
field as described in
.Xr stat 2
for more information about device IDs.
d959 6
d1058 2
a1059 4
.Li $ pax -w -f /dev/rst0 \&.
.Pp
Copies the contents of the current directory to the device
.Pa /dev/rst0 .
d1061 1
a1061 1
.Li $ pax -v -f filename
d1063 2
a1064 2
Gives the verbose table of contents for an archive stored in
.Pa filename .
d1066 1
a1066 3
.Li $ mkdir newdir ;
.Li cd olddir ;
.Li pax -rw \&. newdir
d1071 6
a1076 1
.Pa newdir .
d1078 1
a1078 3
.Li $ pax -r -s ',^//*usr//*,,' -f a.pax
.Pp
Reads the archive
d1082 1
a1082 1
into the archive extracted relative to the current directory.
d1084 1
a1084 1
.Li $ pax -rw -i \&. dest_dir
d1086 3
a1088 3
Can be used to interactively select the files to copy from the current
directory to
.Pa dest_dir .
d1090 1
a1090 1
.Li "$ pax -r -pe -U root -G bin -f a.pax"
d1098 1
a1098 1
and preserve all file permissions.
d1100 1
a1100 1
.Li "$ pax -r -w -v -Y -Z home /backup"
d1106 3
a1108 1
.Pa home .
d1112 1
a1112 1
.Bl -tag -width 2n
d1164 1
d1178 4
a1181 4
.Ar bcpio ,
.Ar sv4cpio ,
.Ar sv4crc ,
.Ar tar ,
d1183 1
a1183 1
.Ar list
d1185 1
a1185 1
.Ar read
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import almost everything (no ancontrol, ifconfig, pfctl, wicontrol)
of (the undeleted parts of) OpenBSD-current's userland of about 3 hours ago.
Warning: this introduces major breakage!
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.46 2005/06/02 19:06:43 jaredy Exp $
d44 2
a46 3
.Nm pax
.Op Fl 0cdOnvz
.Op Fl E Ar limit
d48 2
a49 1
.Op Fl G Ar group
d51 3
a53 1
.Op Fl T Ar range
d55 14
d72 2
a73 2
.Op Fl 0cDdikOnuvYZz
.Op Fl E Ar limit
d75 2
a76 1
.Op Fl G Ar group
d78 3
d82 3
d86 4
a89 1
.Op Fl T Ar range
d91 14
d108 2
a109 2
.Op Fl 0adHiLOPtuvXz
.Op Fl B Ar bytes
d111 3
d115 9
a123 1
.Op Fl G Ar group
d125 3
a127 2
.Op Fl s Ar replstr
.Op Fl T Ar range
d129 18
a146 1
.Op Fl x Ar format
d151 2
a152 2
.Op Fl 0DdHikLlnOPtuvXYZ
.Op Fl G Ar group
d154 3
d158 3
a160 1
.Op Fl T Ar range
d162 15
a178 1
.Ek
d181 1
a181 1
will read, write, and list the members of an archive file
d184 1
a184 1
operation is independent of the specific archive format
d201 1
a201 1
.It \*(Ltnone\*(Gt
d207 1
a207 2
.Ar pattern
arguments.
d215 1
a215 2
.Ar pattern
arguments.
d262 1
a262 1
.Sy Warning :
d301 1
a301 1
.Xr glob 3 .
d332 28
a359 16
.It Fl 0
Use the NUL
.Pq Ql \e0
character as a pathname terminator, instead of newline
.Pq Ql \en .
This applies only to the pathnames read from standard input in
the write and copy modes,
and to the pathnames written to standard output in list mode.
This option is expected to be used in concert with the
.Fl print0
function in
.Xr find 1
or the
.Fl 0
flag in
.Xr xargs 1 .
d361 2
a362 3
Append the given
.Ar file
operands
d375 1
a375 1
.Sy Warning :
d383 16
a398 22
.It Fl B Ar bytes
Limit the number of bytes written to a single archive volume to
.Ar bytes .
The
.Ar bytes
limit can end with
.Sq Li m ,
.Sq Li k ,
or
.Sq Li b
to specify multiplication by 1048576 (1M), 1024 (1K) or 512, respectively.
A pair of
.Ar bytes
limits can be separated by
.Sq Li x
to indicate a product.
.Pp
.Em Warning :
Only use this option when writing an archive to a device which supports
an end of file read condition based on last (or largest) write offset
(such as a regular file or a tape drive).
The use of this option with a floppy or hard disk is not recommended.
a437 8
.It Fl D
This option is the same as the
.Fl u
option, except that the file inode change time is checked instead of the
file modification time.
The file inode change time can be used to select files whose inode information
(e.g., UID, GID, etc.) is newer than a copy of the file in the destination
.Ar directory .
a441 31
.It Fl E Ar limit
Limit the number of consecutive read faults while trying to read a flawed
archive to
.Ar limit .
With a positive
.Ar limit ,
.Nm
will attempt to recover from an archive read error and will
continue processing starting with the next file stored in the archive.
A
.Ar limit
of 0 will cause
.Nm
to stop operation after the first read error is detected on an archive volume.
A
.Ar limit
of
.Li NONE
will cause
.Nm
to attempt to recover from read errors forever.
The default
.Ar limit
is a small positive number of retries.
.Pp
.Em Warning :
Using this option with
.Li NONE
should be used with extreme caution as
.Nm
may get stuck in an infinite loop on a very badly flawed archive.
a457 16
.It Fl G Ar group
Select a file based on its
.Ar group
name, or when starting with a
.Cm # ,
a numeric GID.
A
.Ql \e
can be used to escape the
.Cm # .
Multiple
.Fl G
options may be supplied and checking stops with the first match.
.It Fl H
Follow only command-line symbolic links while performing a physical file
system traversal.
a483 2
.It Fl L
Follow all symbolic links to perform a logical file system traversal.
d486 1
a486 1
.Dq ell . )
a503 7
.It Fl O
Force the archive to be one volume.
If a volume ends prematurely,
.Nm
will not prompt for a new volume.
This option can be useful for
automated tasks where error recovery cannot be performed by a human.
a511 14
.Pp
The following options are available for the old
.Bx
.Em tar
format:
.Pp
.Bl -tag -width Ds -compact
.It Cm nodir
.It Cm write_opt=nodir
When writing archives, omit the storage of directories.
.El
.It Fl P
Do not follow symbolic links, perform a physical file system traversal.
This is the default mode.
d532 1
a532 1
.Dq Preserve everything ,
d552 1
a552 1
.Dq Preserve
d592 1
a592 1
.Fl p Ar eme
d594 4
a597 3
.It Fl r
Read an archive file from standard input
and extract the specified
d599 1
a599 18
operands.
If any intermediate directories are needed in order to extract an archive
member, these directories will be created as if
.Xr mkdir 2
was called with the bitwise inclusive
.Tn OR
of
.Dv S_IRWXU , S_IRWXG ,
and
.Dv S_IRWXO
as the mode argument.
When the selected archive format supports the specification of linked
files and these files cannot be linked while the archive is being extracted,
.Nm
will write a diagnostic message to standard error
and exit with a non-zero exit status at the completion of operation.
.It Fl s Ar replstr
Modify the archive member names according to the substitution expression
a603 6
.Ar file
or
.Ar pattern
arguments may be given to restrict the list of archive members to those
specified.
.Pp
a604 1
.Pp
a605 1
.Pp
d608 3
a610 5
.Ar old
is a basic regular expression (see
.Xr re_format 7 )
and
.Ar new
d613 1
a613 1
.Ql \e Ns Em n
d615 1
a615 1
.Em n
d619 1
a619 1
.Ar old
a630 1
.Pp
d643 1
a643 3
.Pp
.D1 Em original-pathname No >> Em new-pathname
.Pp
a645 108
.It Fl T Ar range
Allow files to be selected based on a file modification or inode change
time falling within the specified time range.
The range has the format:
.Sm off
.Bd -filled -offset indent
.Oo Ar from_date Oc Oo ,
.Ar to_date Oc Oo /
.Oo Cm c Oc Op Cm m Oc
.Ed
.Sm on
.Pp
The dates specified by
.Ar from_date
to
.Ar to_date
are inclusive.
If only a
.Ar from_date
is supplied, all files with a modification or inode change time
equal to or younger are selected.
If only a
.Ar to_date
is supplied, all files with a modification or inode change time
equal to or older will be selected.
When the
.Ar from_date
is equal to the
.Ar to_date ,
only files with a modification or inode change time of exactly that
time will be selected.
.Pp
When
.Nm
is in the
.Em write
or
.Em copy
mode, the optional trailing field
.Oo Cm c Oc Op Cm m
can be used to determine which file time (inode change, file modification or
both) are used in the comparison.
If neither is specified, the default is to use file modification time only.
The
.Cm m
specifies the comparison of file modification time (the time when
the file was last written).
The
.Cm c
specifies the comparison of inode change time (the time when the file
inode was last changed; e.g., a change of owner, group, mode, etc).
When
.Cm c
and
.Cm m
are both specified, then the modification and inode change times are
both compared.
.Pp
The inode change time comparison is useful in selecting files whose
attributes were recently changed or selecting files which were recently
created and had their modification time reset to an older time (as what
happens when a file is extracted from an archive and the modification time
is preserved).
Time comparisons using both file times is useful when
.Nm
is used to create a time based incremental archive (only files that were
changed during a specified time range will be archived).
.Pp
A time range is made up of six different fields and each field must contain two
digits.
The format is:
.Pp
.Dl [[[[[cc]yy]mm]dd]HH]MM[.SS]
.Pp
Where
.Ar cc
is the first two digits of the year (the century),
.Ar yy
is the last two digits of the year,
the first
.Ar mm
is the month (from 01 to 12),
.Ar dd
is the day of the month (from 01 to 31),
.Ar HH
is the hour of the day (from 00 to 23),
.Ar MM
is the minute (from 00 to 59),
and
.Ar SS
is the seconds (from 00 to 59).
The minute field
.Ar MM
is required, while the other fields are optional and must be added in the
following order:
.Ar HH , dd , mm ,
.Ar yy , cc .
.Pp
The
.Ar SS
field may be added independently of the other fields.
Time ranges are relative to the current time, so
.Ic -T 1234/cm
would select all files with a modification or inode change time
of 12:34 PM today or later.
Multiple
.Fl T
time range can be supplied and checking stops with the first match.
a650 13
.It Fl U Ar user
Select a file based on its
.Ar user
name, or when starting with a
.Cm # ,
a numeric UID.
A
.Ql \e
can be used to escape the
.Cm # .
Multiple
.Fl U
options may be supplied and checking stops with the first match.
d677 1
a677 3
.Pp
.Dl Em ls -l listing Li == Em link-name
.Pp
d679 2
a680 6
.Pp
.Dl Em ls -l listing Li =\*(Gt Em link-name
.Pp
Where
.Em ls -l listing
is the output format specified by the
d686 1
a686 1
.Po Em read , write , No and Em copy
a693 17
.It Fl w
Write files to the standard output
in the specified archive format.
When no
.Ar file
operands are specified, standard input
is read for a list of pathnames with one per line without any leading or
trailing
.Aq blanks .
.It Fl X
When traversing the file hierarchy specified by a pathname,
do not descend into directories that have a different device ID.
See the
.Li st_dev
field as described in
.Xr stat 2
for more information about device IDs.
d696 1
a696 1
.Cm ustar .
d700 1
a700 1
.It Cm cpio
d709 1
a709 1
.It Cm bcpio
d718 1
a718 1
.It Cm sv4cpio
d725 2
a726 2
.It Cm sv4crc
The System V release 4 cpio with file CRC checksums.
d732 2
a733 5
.It Cm tar
The old
.Bx
tar format as found in
.Bx 4.3 .
a746 1
.Pp
d748 1
a748 1
.It Cm ustar
d764 212
a985 6
.It Fl z
Use
.Xr gzip 1
to compress (decompress) the archive while writing (reading).
Incompatible with
.Fl a .
d1079 4
a1082 2
Copy the contents of the current directory to the device
.Pa /dev/rst0 :
d1084 1
a1084 1
.Dl $ pax -w -f /dev/rst0 \&.
d1086 2
a1087 2
Give the verbose table of contents for an archive stored in
.Pa filename :
d1089 3
a1091 1
.Dl $ pax -v -f filename
d1096 1
a1096 6
.Pa newdir :
.Bd -literal -offset indent
$ mkdir newdir
$ cd olddir
$ pax -rw . newdir
.Ed
d1098 3
a1100 1
Read the archive
d1104 1
a1104 1
into the archive extracted relative to the current directory:
d1106 1
a1106 1
.Dl $ pax -r -s ',^//*usr//*,,' -f a.pax
d1108 3
a1110 3
This can be used to interactively select the files to copy from the
current directory to
.Pa dest_dir :
d1112 1
a1112 1
.Dl $ pax -rw -i \&. dest_dir
d1120 1
a1120 1
and preserve all file permissions:
d1122 1
a1122 1
.Dl "$ pax -r -pe -U root -G bin -f a.pax"
d1128 1
a1128 3
.Pa home :
.Pp
.Dl "$ pax -r -w -v -Y -Z home /backup"
d1132 1
a1132 1
.Bl -tag -width 2n -offset indent
a1183 1
.Fl 0 ,
d1197 4
a1200 4
.Em bcpio ,
.Em sv4cpio ,
.Em sv4crc ,
.Em tar ,
d1202 1
a1202 1
.Em list
d1204 1
a1204 1
.Em read
@


1.1.1.3
log
@One "miserable" byte in filenames is worth an import

agreed bsiegert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.48 2006/05/12 11:55:58 jmc Exp $
d317 1
a317 1
Archive block sizes larger than 32256 bytes violate the
d1054 1
a1054 1
$ pax -rw . ../newdir
@


1.1.1.4
log
@import latest OpenCPIO ☺
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.52 2007/05/31 19:19:15 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate$
d46 1
a46 1
.Op Fl 0cdnOvz
d56 1
a56 1
.Op Fl 0cDdiknOuvYZz
d80 2
a81 1
.Fl rw
d153 1
a153 1
.It Fl rw
d658 1
a658 1
.D1 Em original-pathname No \*(Gt\*(Gt Em new-pathname
d860 4
a863 2
.It Cm bcpio
The old binary cpio format.
a864 2
This format is not very portable and should not be used when other formats
are available.
d869 2
a870 4
.It Cm cpio
The extended cpio interchange format specified in the
.St -p1003.2
standard.
d872 2
d1057 3
a1059 3
Extract files from the archive
.Pa a.pax .
Files rooted in
d1061 1
a1061 2
are extracted relative to the current working directory;
all other files are extracted to their unmodified path.
d1063 1
a1063 1
.Dl $ pax -r -s ',^/usr/,,' -f a.pax
d1139 17
a1155 6
utility is compliant with the
.St -p1003.1-2004
specification.
.Pp
The flags
.Op Fl 0BDEGHLOPTUYZz ,
d1165 3
a1167 2
operations
are extensions to that specification.
@


1.1.1.5
log
@import up-to-date pax from OpenBSD 5.1-current
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.61 2010/09/19 20:55:25 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: September 19 2010 $
d46 1
a46 1
.Op Fl 0cdjnOvz
d56 1
a56 1
.Op Fl 0cDdijknOuvYZz
d68 1
a68 1
.Op Fl 0adHijLOPtuvXz
d78 1
a78 1
.Op Ar
d81 1
a81 1
.Op Fl 0DdHijkLlnOPtuvXYZ
d87 1
a87 1
.Op Ar
a444 5
.It Fl j
Use bzip2 to compress (decompress) the archive while writing (reading).
The bzip2 utility must be installed separately.
Incompatible with
.Fl a .
d667 3
a669 3
.Op Ar from_date
.Op \&, Ar to_date
.Op / Oo Cm c Oc Op Cm m
d700 1
a700 1
.Oo Cm c Oc Ns Op Cm m
d917 1
a917 1
the total pathname must be 256 characters or less.
a947 1
.Fl j ,
a1034 11
.Sh EXIT STATUS
The
.Nm
utility exits with one of the following values:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It 0
All files were processed successfully.
.It 1
An error occurred.
.El
d1089 9
d1140 1
a1140 1
.St -p1003.1-2008
d1144 1
a1144 1
.Op Fl 0BDEGjOPTUYZz ,
@


1.1.1.6
log
@pull newer paxtar from OpenBSD
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.71 2015/03/15 05:16:56 guenther Exp $
d37 1
a37 1
.Dd $Mdocdate: March 15 2015 $
d44 1
d89 1
d112 1
a112 1
.It Aq none
d188 5
a192 1
While processing a damaged archive during a read or list operation,
d302 1
a302 1
.Sy Warning :
d308 3
a310 1
When writing an archive,
d316 2
a317 1
Archive block sizes larger than 32256 bytes violate the POSIX
d326 3
a328 1
A pair of blocksizes can be separated by
d383 1
a383 1
.Sy Warning :
d393 4
a396 1
standard input (for list and read)
d398 2
a399 1
(for write).
d458 3
a460 1
In copy mode
d490 1
a490 3
The following options are available for the
.Cm ustar
and old
d492 2
a493 2
.Cm tar
formats:
d496 1
d526 2
a527 1
This is intended to be used by root,
d545 4
a548 2
This is intended to be used by a user with regular privileges
who wants to preserve all aspects of the file other than the ownership.
d569 2
a570 1
(setuid) and
d572 2
a573 1
(setgid) bits of the file mode.
d593 3
a595 1
was called with the bitwise OR of
d662 1
a662 1
.D1 Em original-pathname No >> Em new-pathname
d700 5
a704 1
is in write or copy mode, the optional trailing field
d795 2
a796 1
During read,
d799 2
a800 1
During write,
d803 2
a804 1
During copy,
d809 3
a811 1
During a list operation, produce a verbose table of contents using the format of the
d819 1
a819 1
.Dl Em ls -l listing No == Em link-name
d823 1
a823 1
.Dl Em ls -l listing No -> Em link-name
d833 2
a834 1
(read, write, and copy),
d903 6
a908 1
Only regular files, hard links, soft links, and directories
d968 3
a970 1
When extracting files during a read operation, archive members are
d995 5
a999 3
When archiving files during a write operation,
or copying files during a copy operation,
archive members are
d1017 3
a1019 1
Then during a copy operation the
d1042 10
a1051 1
.Ex -std pax
d1096 1
a1096 1
.Dl $ pax -r -pe -U root -G bin -f a.pax
d1104 1
a1104 1
.Dl $ pax -r -w -v -Y -Z home /backup
d1133 2
a1134 1
If while doing a copy,
d1149 1
a1149 6
specification,
except that the
.Cm pax
archive format and the
.Cm listopt
keyword are unsupported.
d1154 6
a1159 7
.Cm bcpio ,
.Cm sv4cpio ,
.Cm sv4crc ,
and
.Cm tar ,
the
.Cm b , k ,
d1161 2
a1162 5
.Cm x
additions to the
.Fl b
flag,
and the flawed archive handling during list and read operations
d1165 1
a1165 2
.An Keith Muller
at the University of California, San Diego.
@


1.1.1.7
log
@revert the import; we’ll just backport the CVE fixes, for now ☹
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.61 2010/09/19 20:55:25 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: February 11 2012 $
a43 1
.Bk -words
a87 1
.Ek
d110 1
a110 1
.It \*(Ltnone\*(Gt
d186 1
a186 5
While processing a damaged archive during a
.Em read
or
.Em list
operation,
d296 1
a296 1
.Em Warning :
d302 1
a302 3
When
.Em writing
an archive,
d308 1
a308 2
Archive block sizes larger than 32256 bytes violate the
.Tn POSIX
d317 1
a317 3
A pair of
.Ar blocksizes
can be separated by
d372 1
a372 1
.Em Warning :
d382 1
a382 4
standard input (for
.Em list
and
.Em read )
d384 1
a384 2
(for
.Em write ) .
d443 1
a443 3
In the
.Em copy
mode
d473 3
a475 1
The following options are available for the old
d477 2
a478 2
.Em tar
format:
a480 1
.It Cm nodir
d510 1
a510 2
This is intended to be used by
.Em root ,
d528 2
a529 4
This is intended to be used by a
.Em user
with regular privileges who wants to preserve all aspects of the file other
than the ownership.
d550 1
a550 2
.Em ( setuid )
and
d552 1
a552 2
.Em ( setgid )
bits of the file mode.
d572 1
a572 3
was called with the bitwise inclusive
.Tn OR
of
d639 1
a639 1
.D1 Em original-pathname No \*(Gt\*(Gt Em new-pathname
d677 1
a677 5
is in the
.Em write
or
.Em copy
mode, the optional trailing field
d768 1
a768 2
During
.Em read ,
d771 1
a771 2
During
.Em write ,
d774 1
a774 2
During
.Em copy ,
d779 1
a779 3
During a
.Em list
operation, produce a verbose table of contents using the format of the
d787 1
a787 1
.Dl Em ls -l listing Li == Em link-name
d791 1
a791 1
.Dl Em ls -l listing Li =\*(Gt Em link-name
d801 1
a801 2
.Po Em read , write , No and Em copy
.Pc ,
d870 1
a870 6
Only
.Em regular
files,
.Em hard links , soft links ,
and
.Em directories
d930 1
a930 3
When extracting files during a
.Em read
operation, archive members are
d955 3
a957 5
When archiving files during a
.Em write
operation, or copying files during a
.Em copy
operation, archive members are
d975 1
a975 3
Then during a
.Em copy
operation the
d998 1
a998 10
The
.Nm
utility exits with one of the following values:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It 0
All files were processed successfully.
.It 1
An error occurred.
.El
d1043 1
a1043 1
.Dl "$ pax -r -pe -U root -G bin -f a.pax"
d1051 1
a1051 1
.Dl "$ pax -r -w -v -Y -Z home /backup"
d1080 1
a1080 2
If while doing a
.Em copy ,
d1095 6
a1100 1
specification.
d1105 7
a1111 6
.Em bcpio ,
.Em sv4cpio ,
.Em sv4crc ,
.Em tar ,
and the flawed archive handling during
.Em list
d1113 5
a1117 2
.Em read
operations
d1120 2
a1121 1
Keith Muller at the University of California, San Diego.
@


1.1.1.8
log
@bunch of cherry-picks from OpenBSD
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.61 +1.71 2010/09/19 20:55:25 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: March 4 2016 $
d496 1
@


1.1.1.9
log
@merge what OpenBSD did between our last cherry-pick and today minus one commit

(“Use the new libc uid_from_user() and gid_from_group() instead of
  the pax-specific functions in cache.c” is ignored, for now)
@
text
@d1 1
a1 1
.\"	$OpenBSD: pax.1,v 1.74 2018/07/23 19:02:49 kn Exp $
d37 1
a37 1
.Dd $Mdocdate: October 25 2016 $
d214 1
a214 1
.Xr glob 7 .
@


1.1.1.10
log
@Import latest OpenBSD paxtar, unmodified, into vendor branch
@
text
@d37 1
a37 1
.Dd $Mdocdate: July 23 2018 $
d44 1
d89 1
d112 1
a112 1
.It Aq none
d188 5
a192 1
While processing a damaged archive during a read or list operation,
d302 1
a302 1
.Sy Warning :
d308 3
a310 1
When writing an archive,
d316 2
a317 1
Archive block sizes larger than 32256 bytes violate the POSIX
d326 3
a328 1
A pair of blocksizes can be separated by
d372 7
d382 7
d393 4
a396 1
standard input (for list and read)
d398 2
a399 1
(for write).
d458 3
a460 1
In copy mode
d490 1
a490 3
The following options are available for the
.Cm ustar
and old
d492 2
a493 2
.Cm tar
formats:
d525 2
a526 1
This is intended to be used by root,
d544 4
a547 2
This is intended to be used by a user with regular privileges
who wants to preserve all aspects of the file other than the ownership.
d568 2
a569 1
(setuid) and
d571 2
a572 1
(setgid) bits of the file mode.
d592 3
a594 1
was called with the bitwise OR of
d661 1
a661 1
.D1 Em original-pathname No >> Em new-pathname
d699 5
a703 1
is in write or copy mode, the optional trailing field
d794 2
a795 1
During read,
d798 2
a799 1
During write,
d802 2
a803 1
During copy,
d808 3
a810 1
During a list operation, produce a verbose table of contents using the format of the
d818 1
a818 1
.Dl Em ls -l listing No == Em link-name
d822 1
a822 1
.Dl Em ls -l listing No -> Em link-name
d832 2
a833 1
(read, write, and copy),
d902 6
a907 1
Only regular files, hard links, soft links, and directories
d967 3
a969 1
When extracting files during a read operation, archive members are
d994 5
a998 3
When archiving files during a write operation,
or copying files during a copy operation,
archive members are
d1016 3
a1018 1
Then during a copy operation the
d1041 10
a1050 1
.Ex -std pax
d1095 1
a1095 1
.Dl $ pax -r -pe -U root -G bin -f a.pax
d1103 1
a1103 1
.Dl $ pax -r -w -v -Y -Z home /backup
d1132 2
a1133 1
If while doing a copy,
d1148 1
a1148 6
specification,
except that the
.Cm pax
archive format and the
.Cm listopt
keyword are unsupported.
d1153 6
a1158 3
.Cm bcpio ,
.Cm sv4cpio ,
.Cm sv4crc ,
d1160 2
a1161 9
.Cm tar ,
the
.Cm b , k ,
and
.Cm x
additions to the
.Fl b
flag,
and the flawed archive handling during list and read operations
a1162 5
.Sh HISTORY
A
.Nm
utility appeared in
.Bx 4.4 .
d1164 1
a1164 2
.An Keith Muller
at the University of California, San Diego.
@


1.1.1.10.2.1
log
@do the ‘c’s
@
text
@d37 1
a37 1
.Dd $Mdocdate: December 12 2018 $
d277 1
a277 1
An archive stored in a regular filesystem file or on a disk device will
d424 1
a424 1
Follow all symbolic links to perform a logical filesystem traversal.
d471 1
a471 1
Do not follow symbolic links, perform a physical filesystem traversal.
d755 1
a755 1
an archive member with the same name as a file in the filesystem will be
d758 1
a758 1
a filesystem member with the same name as an archive member will be
d857 1
a857 1
will be archived (other filesystem types are not supported).
@


1.1.1.10.2.2
log
@pax without .h, modulo setpgent and O_CLOEXEC
@
text
@a3 2
.\" Copyright (c) 2005, 2009, 2011, 2012, 2014, 2016, 2017, 2018
.\"	mirabilos <m@@mirbsd.org>
d37 3
a39 153
.\"-
.\" Try to make GNU groff and AT&T nroff more compatible
.\" * ` generates ‘ in gnroff, so use \`
.\" * ' generates ’ in gnroff, \' generates ´, so use \*(aq
.\" * - generates ‐ in gnroff, \- generates −, so .tr it to -
.\"   thus use - for hyphens and \- for minus signs and option dashes
.\" * ~ is size-reduced and placed atop in groff, so use \*(TI
.\" * ^ is size-reduced and placed atop in groff, so use \*(ha
.\" * \(en does not work in nroff, so use \*(en
.\" * <>| are problematic, so redefine and use \*(Lt\*(Gt\*(Ba
.\" Also make sure to use \& *before* a punctuation char that is to not
.\" be interpreted as punctuation, and especially with two-letter words
.\" but also (after) a period that does not end a sentence (“e.g.\&”).
.\" The section after the "doc" macropackage has been loaded contains
.\" additional code to convene between the UCB mdoc macropackage (and
.\" its variant as BSD mdoc in groff) and the GNU mdoc macropackage.
.\"
.ie \n(.g \{\
.	if \*[.T]ascii .tr \-\N'45'
.	if \*[.T]latin1 .tr \-\N'45'
.	if \*[.T]utf8 .tr \-\N'45'
.	ds <= \[<=]
.	ds >= \[>=]
.	ds Rq \[rq]
.	ds Lq \[lq]
.	ds sL \(aq
.	ds sR \(aq
.	if \*[.T]utf8 .ds sL `
.	if \*[.T]ps .ds sL `
.	if \*[.T]utf8 .ds sR '
.	if \*[.T]ps .ds sR '
.	ds aq \(aq
.	ds TI \(ti
.	ds ha \(ha
.	ds en \(en
.\}
.el \{\
.	ds aq '
.	ds TI ~
.	ds ha ^
.	ds en \(em
.\}
.\"
.\" Implement .Dd with the Mdocdate RCS keyword
.\"
.rn Dd xD
.de Dd
.ie \\$1$Mdocdate: \{\
.	xD \\$2 \\$3, \\$4
.\}
.el .xD \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8
..
.\"
.\" .Dd must come before definition of .Mx, because when called
.\" with -mandoc, it might implement .Mx itself, but we want to
.\" use our own definition. And .Dd must come *first*, always.
.\"
.Dd $Mdocdate: February 11 2016 $
.\"
.\" Check which macro package we use, and do other -mdoc setup.
.\"
.ie \n(.g \{\
.	if \*[.T]utf8 .tr \[la]\*(Lt
.	if \*[.T]utf8 .tr \[ra]\*(Gt
.	ie d volume-ds-1 .ds tT gnu
.	el .ds tT bsd
.\}
.el .ds tT ucb
.\"
.\" Implement .Mx (MirBSD)
.\"
.ie "\*(tT"gnu" \{\
.	eo
.	de Mx
.	nr curr-font \n[.f]
.	nr curr-size \n[.ps]
.	ds str-Mx \f[\n[curr-font]]\s[\n[curr-size]u]
.	ds str-Mx1 \*[Tn-font-size]\%MirOS\*[str-Mx]
.	if !\n[arg-limit] \
.	if \n[.$] \{\
.	ds macro-name Mx
.	parse-args \$@@
.	\}
.	if (\n[arg-limit] > \n[arg-ptr]) \{\
.	nr arg-ptr +1
.	ie (\n[type\n[arg-ptr]] == 2) \
.	as str-Mx1 \~\*[arg\n[arg-ptr]]
.	el \
.	nr arg-ptr -1
.	\}
.	ds arg\n[arg-ptr] "\*[str-Mx1]
.	nr type\n[arg-ptr] 2
.	ds space\n[arg-ptr] "\*[space]
.	nr num-args (\n[arg-limit] - \n[arg-ptr])
.	nr arg-limit \n[arg-ptr]
.	if \n[num-args] \
.	parse-space-vector
.	print-recursive
..
.	ec
.	ds sP \s0
.	ds tN \*[Tn-font-size]
.\}
.el \{\
.	de Mx
.	nr cF \\n(.f
.	nr cZ \\n(.s
.	ds aa \&\f\\n(cF\s\\n(cZ
.	if \\n(aC==0 \{\
.		ie \\n(.$==0 \&MirOS\\*(aa
.		el .aV \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9
.	\}
.	if \\n(aC>\\n(aP \{\
.		nr aP \\n(aP+1
.		ie \\n(C\\n(aP==2 \{\
.			as b1 \&MirOS\ #\&\\*(A\\n(aP\\*(aa
.			ie \\n(aC>\\n(aP \{\
.				nr aP \\n(aP+1
.				nR
.			\}
.			el .aZ
.		\}
.		el \{\
.			as b1 \&MirOS\\*(aa
.			nR
.		\}
.	\}
..
.\}
.\"-
.ie \ng==1 \{\
.	ds nc mircpio
.	ds np mirpax
.	ds nt mirtar
.	ds nm mirpax
.	Dt MIRPAX 1
.\}
.el .ie \ng==2 \{\
.	ds nc paxcpio
.	ds np pax
.	ds nt paxtar
.	ds nm pax
.	Dt PAX 1
.\}
.el \{\
.	ds nc cpio
.	ds np pax
.	ds nt tar
.	ds nm pax
.	Dt PAX 1
.\}
.\"-
.Os MirBSD
a40 5
.ie \ng==1 \{\
.Nm mirpax
.Nd read and write file archives and copy directory hierarchies
.\}
.el \{\
a42 1
.\}
d44 2
a45 3
.Bk -words
.Nm \*(nm
.Op Fl 0cdJjnOvz
d53 1
a53 1
.Nm \*(nm
d55 1
a55 1
.Op Fl 0cDdiJjknOuvYZz
a58 1
.Op Fl M Ar flag
d65 1
a65 1
.Nm \*(nm
d67 1
a67 1
.Op Fl 0adHiJjLOPtuvXz
a71 1
.Op Fl M Ar flag
d78 1
a78 1
.Nm \*(nm
d80 1
a80 1
.Op Fl 0DdHiJjkLlnOPtuvXYZ
a87 1
.Ek
d250 1
a250 7
.Xr find 1 ,
the
.Fl d Ar \*(aq\*(aq
option to the
.Ic read
built-in utility of
.Xr mksh 1
d308 1
a308 2
Archive block sizes larger than 32256 bytes violate the
.Tn POSIX
d317 1
a317 3
A pair of
.Ar blocksize Ns s
can be separated by
a415 5
.It Fl J
Use the xz utility to compress (decompress) the archive
while writing (reading).
Incompatible with
.Fl a .
d417 2
a418 2
Use the bzip2 utility to compress (decompress) the archive
while writing (reading).
a432 64
.It Fl M Ar flag
Configure the archive normaliser.
.Ar flag
is either a numeric value compatible to
.Xr strtonum 3
which is directly stored in the flags word, or
one of the following values, optionally prefixed with
.Dq no\-
to turn them off:
.Pp
.Bl -tag -width xxxxxx -compact
.It Ar inodes
0x0001: Serialise inodes, zero device info.
.br
(cpio, sv4cpio, sv4crc)
.It Ar links
0x0002: Store content of hard links only once.
.br
(cpio, sv4cpio, sv4crc)
.It Ar mtime
0x0004: Zero out the file modification time.
.br
(ar, cpio, sv4cpio, sv4crc, ustar)
.It Ar uidgid
0x0008: Set owner to 0:0
.Pq Li root Ns : Ns Li wheel .
.br
(ar, cpio, sv4cpio, sv4crc, ustar)
.It Ar verb
0x0010: Debug this option.
.It Ar debug
0x0020: Debug file header storage.
.It Ar lncp
0x0040: Extract hard links by copy if link fails.
.It Ar numid
0x0080: Use only numeric uid and gid values.
.br
(ustar)
.It Ar gslash
0x0100: Append a slash after directory names.
.br
(ustar)
.It Ar set
0x0003: Keep ownership and mtime intact.
.It Ar dist
0x008B: Clean everything except mtime.
.It Ar norm
0x008F: Clean everything.
.It Ar root
0x0089: Clean owner and device information.
.El
.Pp
When creating an archive and verbosely listing output, these
normalisation operations are not reflected in the output,
because they are made only after the output has been shown.
.Pp
This option is only implemented for the ar, cpio, sv4cpio,
sv4crc, and ustar file format writing routines.
.Pp
TODO: The
.Nm \*(nm
frontend should be using the
.Fl o
option for handling this feature instead.
d625 1
a625 1
.D1 Em original-pathname No \*(Gt\*(Gt Em new-pathname
d635 3
a637 3
.Oo Ar from_date Oc Oo ,
.Ar to_date Oc Oo /
.Oo Cm c Oc Op Cm m Oc
d727 1
a727 1
.Ic \-T 1234/cm
d737 1
a737 1
.Nm \*(nm .
d773 1
a773 1
.Dl Em ls \-l listing No == Em link-name
d777 1
a777 1
.Dl Em ls \-l listing No -\*(Gt Em link-name
d780 1
a780 1
.Em ls \-l listing
a816 8
.It Cm ar
The Unix Archiver library format.
This format matches APT repositories and the BSD
.Xr ar 1
specification, not GNU binutils (which can however read them) or SYSV systems.
See
.Xr ar 5
on some operating systems for more information.
d891 1
a891 1
Use the
d893 1
a893 1
utility to compress (decompress) the archive while writing (reading).
d901 1
d989 1
a989 1
.Dl $ \*(nm \-w \-f /dev/rst0 \&.
d994 1
a994 1
.Dl $ \*(nm \-v \-f filename
d1003 1
a1003 1
$ \*(nm \-rw . ../newdir
d1013 1
a1013 1
.Dl $ \*(nm \-r \-s \*(aq,\*(ha/usr/,,\*(aq \-f a.pax
d1019 1
a1019 1
.Dl $ \*(nm \-rw \-i \&. dest_dir
d1029 1
a1029 1
.Dl "$ \*(nm \-r \-pe \-U root \-G bin \-f a.pax"
d1037 1
a1037 1
.Dl "$ \*(nm \-r \-w \-v \-Y \-Z home /backup"
a1049 3
unless
.Fl M Ar lncp
is given,
a1073 1
.Xr ar 1 ,
a1074 11
.if \ng==1 \{\
.Xr deb 5 ,
.Xr mircpio 1 ,
.Xr mirtar 1 ,
.Xr pax 1 ,
.\}
.if \ng==2 \{\
.Xr deb 5 ,
.Xr paxcpio 1 ,
.Xr paxtar 1 ,
.\}
d1079 2
a1080 2
utility is mostly compliant with an older version of the IEEE Std 1003.1
.Pq Dq Tn POSIX
d1082 1
a1082 3
except for the known
.Sx BUGS
listed below, and that the
d1089 1
a1089 1
.Fl 0BDEGHJjLMOPTUYZz ,
a1090 1
.Cm ar ,
d1093 1
a1093 1
.Cm sv4crc
d1102 1
a1102 1
flag
a1110 1
.An -nosplit
a1112 10
.Mx
extensions by
.An mirabilos Aq m@@mirbsd.org .
.Sh BUGS
The pattern matching does not match either
.Tn POSIX
or this documentation completely.
See also
.Sx STANDARDS
above.
@


