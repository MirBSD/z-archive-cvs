head	1.3;
access;
symbols
	cvs-201804291800:1.1.1.3
	cvs-201704021600:1.1.1.3
	cvs-201611061700:1.1.1.3
	cvs-201104091530:1.1.1.2
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2016.11.06.18.58.43;	author tg;	state Exp;
branches;
next	1.2;
commitid	100581F7D79676B0355;

1.2
date	2012.01.04.21.30.33;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004F04C5116B09F46D;

1.1
date	2005.02.05.17.22.04;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.22.04;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2011.04.09.15.54.12;	author tg;	state Exp;
branches;
next	1.1.1.3;
commitid	1004DA081363B8A3AA8;

1.1.1.3
date	2016.11.06.17.31.57;	author tg;	state Exp;
branches;
next	;
commitid	100581F69214EA355AF;


desc
@@


1.3
log
@preliminary merge
@
text
@$MirOS$
$OpenBSD: POSIX,v 1.8 2014/05/24 01:35:55 daniel Exp $
$NetBSD: POSIX,v 1.9 1995/03/21 09:04:32 cgd Exp $

This version of ed(1) is not strictly POSIX compliant, as described in
the POSIX 1003.2 document.  The following is a summary of the omissions,
extensions and possible deviations from POSIX 1003.2.

OMISSIONS
---------
1) Locale(3) is not supported yet.

2) For backwards compatibility, the POSIX rule that says a range of
   addresses cannot be used where only a single address is expected has
   been relaxed.

3) To support the BSD 's' command (see extension [1] below),
   substitution patterns cannot be delimited by numbers or the characters
   'r', 'g' and 'p'.  In contrast, POSIX specifies any character except
   space or newline can be used as a delimiter.

EXTENSIONS
----------
1) BSD commands have been implemented wherever they do not conflict with
   the POSIX standard.  The BSDisms included are:
	i) 's' (i.e., s[n][rgp]*) to repeat a previous substitution,
	ii) 'W' for appending text to an existing file,
	iii) 'wq' for exiting after a write,
	iv) 'z' for scrolling through the buffer, and
	v) BSD line addressing syntax (i.e., '^' and '%') is recognised.

2) The POSIX interactive global commands 'G' and 'V' are extended to
   support multiple commands, including 'a', 'i' and 'c'.  The command
   format is the same as for the global commands 'g' and 'v', i.e., one
   command per line with each line, except for the last, ending in a
   backslash (\).

3) An extension to the POSIX file commands 'E', 'e', 'r', 'W' and 'w' is
   that <file> arguments are processed for backslash escapes, i.e.,  any
   character preceded by a backslash is interpreted literally.  If the
   first unescaped character of a <file> argument is a bang (!), then the
   rest of the line is interpreted as a shell command, and no escape
   processing is performed by ed.

DEVIATIONS
----------
1) Though ed is not a stream editor, it can be used to edit binary files.
   To assist in binary editing, when a file containing at least one ASCII
   NUL character is written, a newline is not appended if it did not
   already contain one upon reading.  In particular, reading /dev/null
   prior to writing prevents appending a newline to a binary file.

   For example, to create a file with ed containing a single NUL character:
      $ ed file
      a
      ^@@
      .
      r /dev/null
      wq

    Similarly, to remove a newline from the end of binary 'file':
      $ ed file
      r /dev/null
      wq

2) Since the behavior of 'u' (undo) within a 'g' (global) command list is
   not specified by POSIX, it follows the behavior of the SunOS ed:
   undo forces a global command list to be executed only once, rather than
   for each line matching a global pattern.  In addition, each instance of
   'u' within a global command undoes all previous commands (including
   undos) in the command list.  This seems the best way, since the
   alternatives are either too complicated to implement or too confusing
   to use.

   The global/undo combination is useful for masking errors that
   would otherwise cause a script to fail.  For instance, an ed script
   to remove any occurrences of either 'censor1' or 'censor2' might be
   written as:
   	ed - file <<EOF
	1g/.*/u\
	,s/censor1//g\
	,s/censor2//g
	...

3) The 'm' (move) command within a 'g' command list also follows the SunOS
   ed implementation: any moved lines are removed from the global command's
   'active' list.

4) If ed is invoked with a name argument prefixed by a bang (!), then the
   remainder of the argument is interpreted as a shell command.  To invoke
   ed on a file whose name starts with bang, prefix the name with a
   backslash.
@


1.2
log
@http://linuxwiki.de/ApoStrophen
@
text
@d1 2
a2 1
$OpenBSD: POSIX,v 1.4 2007/09/24 19:56:34 jmc Exp $
d17 1
a17 1
3) To support the BSD `s' command (see extension [1] below),
d19 2
a20 2
   `r', `g' and `p'.  In contrast, POSIX specifies any character expect
   space or newline can used as a delimiter.
d26 9
a34 18
	i) `s' (i.e., s[n][rgp]*) to repeat a previous substitution,
	ii) `W' for appending text to an existing file,
	iii) `wq' for exiting after a write,
	iv) `z' for scrolling through the buffer, and
	v) BSD line addressing syntax (i.e., `^' and `%')  is recognized.

2) If crypt(3) is available, files can be read and written using DES
   encryption.  The `x' command prompts the user to enter a key used for
   encrypting/ decrypting subsequent reads and writes.  If only a newline
   is entered as the key, then encryption is disabled.  Otherwise, a key
   is read in the same manner as a password entry.  The key remains in
   effect until encryption is disabled.  For more information on the
   encryption algorithm, see the bdes(1) man page.  Encryption/decryption
   should be fully compatible with SunOS des(1).

3) The POSIX interactive global commands `G' and `V' are extended to 
   support multiple commands, including `a', `i' and `c'.  The command
   format is the same as for the global commands `g' and `v', i.e., one
d38 1
a38 1
4) An extension to the POSIX file commands `E', `e', `r', `W' and `w' is
a44 4
5) For SunOS ed(1) compatibility, ed runs in restricted mode if invoked
   as red.  This limits editing of files in the local directory only and
   prohibits shell commands.

d61 1
a61 1
    Similarly, to remove a newline from the end of binary `file':
d66 1
a66 1
2) Since the behavior of `u' (undo) within a `g' (global) command list is
d70 1
a70 1
   `u' within a global command undoes all previous commands (including
d73 1
a73 1
   to use.  
d77 1
a77 1
   to remove any occurrences of either `censor1' or `censor2' might be
d85 1
a85 1
3) The `m' (move) command within a `g' command list also follows the SunOS
d87 1
a87 1
   `active' list.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$OpenBSD: POSIX,v 1.3 1999/06/06 07:03:01 pjanzen Exp $
d24 1
a24 1
   the POSIX standard.  The BSD-ism's included are:
d81 1
a81 1
   for each line matching a global pattern.  In addtion, each instance of
d83 1
a83 1
   undo's) in the command list.  This seems the best way, since the
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@pull latest ed from openbsd
@
text
@d1 1
a1 1
$OpenBSD: POSIX,v 1.4 2007/09/24 19:56:34 jmc Exp $
d81 1
a81 1
   for each line matching a global pattern.  In addition, each instance of
@


1.1.1.3
log
@Updates for ed(1) from Ox
@
text
@d1 1
a1 1
$OpenBSD: POSIX,v 1.8 2014/05/24 01:35:55 daniel Exp $
d18 2
a19 2
   `r', `g' and `p'.  In contrast, POSIX specifies any character except
   space or newline can be used as a delimiter.
d29 1
a29 1
	v) BSD line addressing syntax (i.e., `^' and `%') is recognized.
d31 10
a40 1
2) The POSIX interactive global commands `G' and `V' are extended to
d46 1
a46 1
3) An extension to the POSIX file commands `E', `e', `r', `W' and `w' is
d53 4
d85 1
a85 1
   to use.
@


