head	1.3;
access;
symbols
	cvs-201804291800:1.1.1.1
	cvs-201704021600:1.1.1.1
	cvs-201611061700:1.1.1.1
	cvs-201104091530:1.1.1.1
	MIRBSD_10:1.2.0.4
	MIRBSD_10_BASE:1.2
	MIRBSD_9_BASE:1.2
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2016.11.06.19.55.04;	author tg;	state Exp;
branches;
next	1.2;
commitid	100581F8AAD7EDD37B6;

1.2
date	2005.07.07.13.39.20;	author tg;	state Exp;
branches;
next	1.1;
commitid	331742cd306446f9;

1.1
date	2005.02.05.17.22.05;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.22.05;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@display results once only
@
text
@#!/bin/mksh
#	$MirOS$
#	$OpenBSD: ckscripts.sh,v 1.3 1998/07/12 03:49:08 todd Exp $
#	$NetBSD: ckscripts.sh,v 1.9 1995/04/23 10:07:34 cgd Exp $
#
# This script runs the .ed scripts generated by mkscripts.sh
# and compares their output against the .r files, which contain
# the correct output

PATH="/bin:/usr/bin:/usr/local/bin/:."
ED=$1
[ ! -x $ED ] && { echo "$ED: cannot execute"; exit 1; }

# Run the *.red scripts first, since these don't generate output;
# they exit with non-zero status
for i in *.red; do
	echo $i
	if $i; then
		echo "*** The script $i exited abnormally  ***"
	fi
done >errs.o 2>&1

# Run the remaining scripts; they exit with zero status
for i in *.ed; do
#	base=`expr $i : '\([^.]*\)'`
#	base=`echo $i | sed 's/\..*//'`
	base=`$ED - \!"echo $i" <<-EOF
		s/\..*
	EOF`
	if $base.ed; then
		if cmp -s $base.o $base.r; then :; else
			echo "*** Output $base.o of script $i is incorrect ***"
		fi
	else
		echo "*** The script $i exited abnormally ***"
	fi
done >scripts.o 2>&1

test -n "$2" || grep -h '\*\*\*' errs.o scripts.o
@


1.2
log
@/bin/sh and /bin/ksh -> /bin/mksh

This should cover most uses.
@
text
@d2 1
d39 1
a39 1
grep -h '\*\*\*' errs.o scripts.o
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#!/bin/sh -
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
