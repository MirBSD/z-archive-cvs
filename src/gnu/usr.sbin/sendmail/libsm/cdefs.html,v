head	1.3;
access;
symbols
	sendmail-8_14_9:1.1.127.2
	sendmail-8_14_7:1.1.127.1
	sendmail-8_14_6:1.1.127.1
	sendmail-8_14_5-ERRATA-1:1.1.127.1
	mbsd-20101220_mergebase:1.2
	sendmail-8_14_5:1.1.127.1
	cvs-201107021500:1.1.1.2
	cvs-20101220:1.1.1.2
	mbsd-20101220:1.2.0.2
	cvs-201012191730:1.1.1.1
	sendmail-8_14_5_Beta0:1.1.127.1
	sendmail-8_14_3:1.1.127.1
	sendmail:1.1.127
	cvs-200812170000:1.1.1.1
	cvs-200805071200:1.1.1.1
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	cvs-200803022030:1.1.1.1
	cvs-200707152000:1.1.1.1
	cvs-200704292000:1.1.1.1
	cvs-200702051700:1.1.1.1
	cvs-200609121900:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	cvs-200606151800:1.1.1.1
	cvs-200603231300:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	cvs-200504262050:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.06.09.15.17.23;	author tg;	state Exp;
branches;
next	1.2;
commitid	1005395CFC65E5646F1;

1.2
date	2010.12.19.17.18.12;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004D0E3E2D1286B3DF;

1.1
date	2005.02.05.17.24.23;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.127.1;
next	;

1.1.1.1
date	2005.02.05.17.24.23;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2011.07.02.15.00.02;	author tg;	state Exp;
branches;
next	;
commitid	1004E0F31C5496AB95F;

1.1.127.1
date	2010.12.19.14.45.48;	author tg;	state Exp;
branches;
next	1.1.127.2;
commitid	1004D0E1A94384778FD;

1.1.127.2
date	2014.06.09.14.29.20;	author tg;	state Exp;
branches;
next	;
commitid	1005395C4CC1A6DB9EE;


desc
@@


1.3
log
@merge
@
text
@<html>
<head>
    <title>libsm : C Language Portability Macros</title>
</head>
<body>

<a href="index.html">Back to libsm overview</a>

<center>
    <h1> libsm : C Language Portability Macros </h1>
    <br> $Id: cdefs.html,v 1.2 2000-12-07 17:33:09 dmoen Exp $
</center>

<h2> Description </h2>

The header file <tt>&lt;sm/cdefs.h&gt;</tt>
defines portable interfaces to non-portable features
of various C compilers.
It also assists you in writing C header files that are compatible
with C++.

<dl>
<dt>
<tt> __P(parameterlist) </tt>
<dd>
    This macro is used to write portable function prototypes.
    For example,

<blockquote><pre>
int foo __P((int));
</pre></blockquote>

<dt>
<tt> __CONCAT(x,y) </tt>
<dd>
    This macro concatenates two tokens x and y,
    forming a single token xy.
    Warning: make sure there is no white space around the arguments x and y.
    <p>

<dt>
<tt> __STRING(x) </tt>
<dd>
    This macro converts the token sequence x into a string literal.
    <p>

<dt>
<tt> __BEGIN_DECLS, __END_DECLS </tt>
<dd>
    These macros are used to write C header files that are compatible
    with C++ compilers.
    Put <tt>__BEGIN_DECLS</tt> before the first function or variable
    declaration in your header file,
    and put <tt>__END_DECLS</tt> after the last function or variable
    declaration.
    <p>

<dt>
<tt> const, signed, volatile </tt>
<dd>
    For pre-ANSI C compilers, <tt>const</tt>, <tt>signed</tt>
    and <tt>volatile</tt> are defined as empty macros.
    This means you can use these keywords without introducing
    portability problems.
    <p>

<dt>
<tt> SM_DEAD(function_declaration) </tt>
<dd>
    This macro modifies a prototype of a function
    that does not return to its caller.
    With some versions of gcc, this will result in slightly better code,
    and can suppress some useless warnings produced by gcc -Wall.
    For example,

<blockquote><pre>
SM_DEAD(void exit __P((int)));
</pre></blockquote>

<dt>
<tt> SM_UNUSED(variable_declaration) </tt>
<dd>
    This macro modifies a definition of an unused
    local variable, global variable or function parameter
    in order to suppress compiler warnings.
    Examples:

<blockquote><pre>
/* use SM_RCSID from <tt>&lt;sm/gen.h&gt;</tt> instead! */
SM_UNUSED(static const char Id[]) = "@@(#)$Id: cdefs.html,v 1.2 2000-12-07 17:33:09 dmoen Exp $";
void
foo(x)
	SM_UNUSED(int x);
{
	SM_UNUSED(int y) = 0;
	return 0;
}
void
bar(SM_UNUSED(int x))
{
	return 0;
}
</pre></blockquote>

</dl>

</body>
</html>
@


1.2
log
@merge newer sendmail; fix and correct; reduce upstream diffs; prep for deb
@
text
@d11 1
a11 1
    <br> $Id: cdefs.html,v 1.2 2000/12/07 17:33:09 dmoen Exp $
d90 1
a90 1
SM_UNUSED(static const char Id[]) = "@@(#)$Id: cdefs.html,v 1.2 2000/12/07 17:33:09 dmoen Exp $";
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
    <br> $Sendmail: cdefs.html,v 1.2 2000/12/07 17:33:09 dmoen Exp $
d89 2
a90 1
SM_UNUSED(static const char Id[]) = "@@(#)$Sendmail: cdefs.html,v 1.2 2000/12/07 17:33:09 dmoen Exp $";
@


1.1.127.1
log
@Import Sendmail 8.14.3, suitably stripped down by the not yet committed
contrib/samples/import-3rdpty,v 1.35; we have some new and renamed files
@
text
@d11 1
a11 1
    <br> $Id: cdefs.html,v 1.2 2000/12/07 17:33:09 dmoen Exp $
d89 1
a89 1
SM_UNUSED(static const char Id[]) = "@@(#)$Id: cdefs.html,v 1.2 2000/12/07 17:33:09 dmoen Exp $";
@


1.1.127.2
log
@Import sendmail 8.14.9
@
text
@d11 1
a11 1
    <br> $Id: cdefs.html,v 1.2 2000-12-07 17:33:09 dmoen Exp $
d89 1
a89 1
SM_UNUSED(static const char Id[]) = "@@(#)$Id: cdefs.html,v 1.2 2000-12-07 17:33:09 dmoen Exp $";
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d11 1
a11 1
    <br> $Id: cdefs.html,v 1.2 2000/12/07 17:33:09 dmoen Exp $
d89 1
a89 1
SM_UNUSED(static const char Id[]) = "@@(#)$Id: cdefs.html,v 1.2 2000/12/07 17:33:09 dmoen Exp $";
@

