head	1.3;
access;
symbols
	sendmail-8_14_9:1.1.127.2
	sendmail-8_14_7:1.1.127.1
	sendmail-8_14_6:1.1.127.1
	sendmail-8_14_5-ERRATA-1:1.1.127.1
	mbsd-20101220_mergebase:1.1.1.1.6.1
	sendmail-8_14_5:1.1.127.1
	cvs-201107021500:1.1.1.2
	cvs-20101220:1.1.1.2
	mbsd-20101220:1.1.1.1.0.6
	cvs-201012191730:1.1.1.1
	sendmail-8_14_5_Beta0:1.1.127.1
	sendmail-8_14_3:1.1.127.1
	sendmail:1.1.127
	cvs-200812170000:1.1.1.1
	cvs-200805071200:1.1.1.1
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	cvs-200803022030:1.1.1.1
	cvs-200707152000:1.1.1.1
	cvs-200704292000:1.1.1.1
	cvs-200702051700:1.1.1.1
	cvs-200609121900:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	cvs-200606151800:1.1.1.1
	cvs-200603231300:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	cvs-200504262050:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2014.06.09.15.17.30;	author tg;	state Exp;
branches;
next	1.2;
commitid	1005395CFC65E5646F1;

1.2
date	2011.07.02.15.03.57;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004E0F31C5496AB95F;

1.1
date	2005.02.05.17.24.23;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.127.1;
next	;

1.1.1.1
date	2005.02.05.17.24.23;	author tg;	state Exp;
branches
	1.1.1.1.6.1;
next	1.1.1.2;

1.1.1.2
date	2011.07.02.15.00.15;	author tg;	state Exp;
branches;
next	;
commitid	1004E0F31C5496AB95F;

1.1.1.1.6.1
date	2011.07.02.15.02.38;	author tg;	state Exp;
branches;
next	;
commitid	1004E0F31C5496AB95F;

1.1.127.1
date	2010.12.19.14.45.49;	author tg;	state Exp;
branches;
next	1.1.127.2;
commitid	1004D0E1A94384778FD;

1.1.127.2
date	2014.06.09.14.29.21;	author tg;	state Exp;
branches;
next	;
commitid	1005395C4CC1A6DB9EE;


desc
@@


1.3
log
@merge
@
text
@/*
 * Copyright (c) 2000-2001, 2003 Proofpoint, Inc. and its suppliers.
 *	All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 *
 */

#include <sm/gen.h>
SM_RCSID("@@(#)$Id: strdup.c,v 1.16 2013-11-22 20:51:43 ca Exp $")

#include <sm/heap.h>
#include <sm/string.h>

/*
**  SM_STRNDUP_X -- Duplicate a string of a given length
**
**	Allocates memory and copies source string (of given length) into it.
**
**	Parameters:
**		s -- string to copy.
**		n -- length to copy.
**
**	Returns:
**		copy of string, raises exception if out of memory.
**
**	Side Effects:
**		allocate memory for new string.
*/

char *
sm_strndup_x(s, n)
	const char *s;
	size_t n;
{
	char *d = sm_malloc_x(n + 1);

	(void) memcpy(d, s, n);
	d[n] = '\0';
	return d;
}

/*
**  SM_STRDUP -- Duplicate a string
**
**	Allocates memory and copies source string into it.
**
**	Parameters:
**		s -- string to copy.
**
**	Returns:
**		copy of string, NULL if out of memory.
**
**	Side Effects:
**		allocate memory for new string.
*/

char *
sm_strdup(s)
	char *s;
{
	size_t l;
	char *d;

	l = strlen(s) + 1;
	d = sm_malloc_tagged(l, "sm_strdup", 0, sm_heap_group());
	if (d != NULL)
		(void) sm_strlcpy(d, s, l);
	return d;
}

#if DO_NOT_USE_STRCPY

/*
**  SM_STRDUP_X -- Duplicate a string
**
**	Allocates memory and copies source string into it.
**
**	Parameters:
**		s -- string to copy.
**
**	Returns:
**		copy of string, exception if out of memory.
**
**	Side Effects:
**		allocate memory for new string.
*/

char *
sm_strdup_x(s)
	const char *s;
{
	size_t l;
	char *d;

	l = strlen(s) + 1;
	d = sm_malloc_tagged_x(l, "sm_strdup_x", 0, sm_heap_group());
	(void) sm_strlcpy(d, s, l);
	return d;
}

/*
**  SM_PSTRDUP_X -- Duplicate a string (using "permanent" memory)
**
**	Allocates memory and copies source string into it.
**
**	Parameters:
**		s -- string to copy.
**
**	Returns:
**		copy of string, exception if out of memory.
**
**	Side Effects:
**		allocate memory for new string.
*/

char *
sm_pstrdup_x(s)
	const char *s;
{
	size_t l;
	char *d;

	l = strlen(s) + 1;
	d = sm_pmalloc_x(l);
	(void) sm_strlcpy(d, s, l);
	return d;
}

/*
**  SM_STRDUP_X -- Duplicate a string
**
**	Allocates memory and copies source string into it.
**
**	Parameters:
**		s -- string to copy.
**		file -- name of source file
**		line -- line in source file
**		group -- heap group
**
**	Returns:
**		copy of string, exception if out of memory.
**
**	Side Effects:
**		allocate memory for new string.
*/

char *
sm_strdup_tagged_x(s, file, line, group)
	const char *s;
	char *file;
	int line, group;
{
	size_t l;
	char *d;

	l = strlen(s) + 1;
	d = sm_malloc_tagged_x(l, file, line, group);
	(void) sm_strlcpy(d, s, l);
	return d;
}

#endif /* DO_NOT_USE_STRCPY */

@


1.2
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001, 2003 Sendmail, Inc. and its suppliers.
d12 1
a12 1
SM_RCSID("@@(#)$Id: strdup.c,v 1.15 2003/10/10 17:56:57 ca Exp $")
@


1.1
log
@Initial revision
@
text
@d12 1
a12 1
SM_RCSID("@@(#)$Sendmail: strdup.c,v 1.15 2003/10/10 17:56:57 ca Exp $")
@


1.1.127.1
log
@Import Sendmail 8.14.3, suitably stripped down by the not yet committed
contrib/samples/import-3rdpty,v 1.35; we have some new and renamed files
@
text
@d12 1
a12 1
SM_RCSID("@@(#)$Id: strdup.c,v 1.15 2003/10/10 17:56:57 ca Exp $")
@


1.1.127.2
log
@Import sendmail 8.14.9
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001, 2003 Proofpoint, Inc. and its suppliers.
d12 1
a12 1
SM_RCSID("@@(#)$Id: strdup.c,v 1.16 2013-11-22 20:51:43 ca Exp $")
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.1.6.1
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d12 1
a12 1
SM_RCSID("@@(#)$Id: strdup.c,v 1.15 2003/10/10 17:56:57 ca Exp $")
@


1.1.1.2
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d12 1
a12 1
SM_RCSID("@@(#)$Id: strdup.c,v 1.15 2003/10/10 17:56:57 ca Exp $")
@

