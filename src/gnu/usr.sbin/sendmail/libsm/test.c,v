head	1.3;
access;
symbols
	sendmail-8_14_9:1.1.127.2
	sendmail-8_14_7:1.1.127.1
	sendmail-8_14_6:1.1.127.1
	sendmail-8_14_5-ERRATA-1:1.1.127.1
	mbsd-20101220_mergebase:1.1.1.1.6.1
	sendmail-8_14_5:1.1.127.1
	cvs-201107021500:1.1.1.2
	cvs-20101220:1.1.1.2
	mbsd-20101220:1.1.1.1.0.6
	cvs-201012191730:1.1.1.1
	sendmail-8_14_5_Beta0:1.1.127.1
	sendmail-8_14_3:1.1.127.1
	sendmail:1.1.127
	cvs-200812170000:1.1.1.1
	cvs-200805071200:1.1.1.1
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	cvs-200803022030:1.1.1.1
	cvs-200707152000:1.1.1.1
	cvs-200704292000:1.1.1.1
	cvs-200702051700:1.1.1.1
	cvs-200609121900:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	cvs-200606151800:1.1.1.1
	cvs-200603231300:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	cvs-200504262050:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2014.06.09.15.17.34;	author tg;	state Exp;
branches;
next	1.2;
commitid	1005395CFC65E5646F1;

1.2
date	2011.07.02.15.04.00;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004E0F31C5496AB95F;

1.1
date	2005.02.05.17.24.27;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.127.1;
next	;

1.1.1.1
date	2005.02.05.17.24.27;	author tg;	state Exp;
branches
	1.1.1.1.6.1;
next	1.1.1.2;

1.1.1.2
date	2011.07.02.15.00.21;	author tg;	state Exp;
branches;
next	;
commitid	1004E0F31C5496AB95F;

1.1.1.1.6.1
date	2011.07.02.15.02.44;	author tg;	state Exp;
branches;
next	;
commitid	1004E0F31C5496AB95F;

1.1.127.1
date	2010.12.19.14.45.49;	author tg;	state Exp;
branches;
next	1.1.127.2;
commitid	1004D0E1A94384778FD;

1.1.127.2
date	2014.06.09.14.29.21;	author tg;	state Exp;
branches;
next	;
commitid	1005395C4CC1A6DB9EE;


desc
@@


1.3
log
@merge
@
text
@/*
 * Copyright (c) 2000-2002 Proofpoint, Inc. and its suppliers.
 *	All rights reserved.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 */

#include <sm/gen.h>
SM_IDSTR(Id, "@@(#)$Id: test.c,v 1.17 2013-11-22 20:51:44 ca Exp $")

/*
**  Abstractions for writing libsm test programs.
*/

#include <stdlib.h>
#include <unistd.h>
#include <stdio.h>
#include <sm/debug.h>
#include <sm/test.h>

extern char *optarg;
extern int optind;
extern int optopt;
extern int opterr;

int SmTestIndex;
int SmTestNumErrors;
bool SmTestVerbose;

static char Help[] = "\
%s [-h] [-d debugging] [-v]\n\
\n\
%s\n\
\n\
-h		Display this help information.\n\
-d debugging	Set debug activation levels.\n\
-v		Verbose output.\n\
";

static char Usage[] = "\
Usage: %s [-h] [-v]\n\
Use %s -h for help.\n\
";

/*
**  SM_TEST_BEGIN -- initialize test system.
**
**	Parameters:
**		argc -- argument counter.
**		argv -- argument vector.
**		testname -- description of tests.
**
**	Results:
**		none.
*/

void
sm_test_begin(argc, argv, testname)
	int argc;
	char **argv;
	char *testname;
{
	int c;

	SmTestIndex = 0;
	SmTestNumErrors = 0;
	SmTestVerbose = false;
	opterr = 0;

	while ((c = getopt(argc, argv, "vhd:")) != -1)
	{
		switch (c)
		{
		  case 'v':
			SmTestVerbose = true;
			break;
		  case 'd':
			sm_debug_addsettings_x(optarg);
			break;
		  case 'h':
			(void) fprintf(stdout, Help, argv[0], testname);
			exit(0);
		  default:
			(void) fprintf(stderr,
					"Unknown command line option -%c\n",
					optopt);
			(void) fprintf(stderr, Usage, argv[0], argv[0]);
			exit(1);
		}
	}
}

/*
**  SM_TEST -- single test.
**
**	Parameters:
**		success -- did test succeeed?
**		expr -- expression that has been evaluated.
**		filename -- guess...
**		lineno -- line number.
**
**	Results:
**		value of success.
*/

bool
sm_test(success, expr, filename, lineno)
	bool success;
	char *expr;
	char *filename;
	int lineno;
{
	++SmTestIndex;
	if (SmTestVerbose)
		(void) fprintf(stderr, "%d..", SmTestIndex);
	if (!success)
	{
		++SmTestNumErrors;
		if (!SmTestVerbose)
			(void) fprintf(stderr, "%d..", SmTestIndex);
		(void) fprintf(stderr, "bad! %s:%d %s\n", filename, lineno,
				expr);
	}
	else
	{
		if (SmTestVerbose)
			(void) fprintf(stderr, "ok\n");
	}
	return success;
}

/*
**  SM_TEST_END -- end of test system.
**
**	Parameters:
**		none.
**
**	Results:
**		number of errors.
*/

int
sm_test_end()
{
	(void) fprintf(stderr, "%d of %d tests completed successfully\n",
			SmTestIndex - SmTestNumErrors, SmTestIndex);
	if (SmTestNumErrors != 0)
		(void) fprintf(stderr, "*** %d error%s in test! ***\n",
				SmTestNumErrors,
				SmTestNumErrors > 1 ? "s" : "");

	return SmTestNumErrors;
}
@


1.2
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2002 Sendmail, Inc. and its suppliers.
d11 1
a11 1
SM_IDSTR(Id, "@@(#)$Id: test.c,v 1.16 2002/01/08 17:54:40 ca Exp $")
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
SM_IDSTR(Id, "@@(#)$Sendmail: test.c,v 1.16 2002/01/08 17:54:40 ca Exp $")
@


1.1.127.1
log
@Import Sendmail 8.14.3, suitably stripped down by the not yet committed
contrib/samples/import-3rdpty,v 1.35; we have some new and renamed files
@
text
@d11 1
a11 1
SM_IDSTR(Id, "@@(#)$Id: test.c,v 1.16 2002/01/08 17:54:40 ca Exp $")
@


1.1.127.2
log
@Import sendmail 8.14.9
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2002 Proofpoint, Inc. and its suppliers.
d11 1
a11 1
SM_IDSTR(Id, "@@(#)$Id: test.c,v 1.17 2013-11-22 20:51:44 ca Exp $")
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.1.6.1
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d11 1
a11 1
SM_IDSTR(Id, "@@(#)$Id: test.c,v 1.16 2002/01/08 17:54:40 ca Exp $")
@


1.1.1.2
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d11 1
a11 1
SM_IDSTR(Id, "@@(#)$Id: test.c,v 1.16 2002/01/08 17:54:40 ca Exp $")
@

