head	1.3;
access;
symbols
	sendmail-8_14_9:1.1.127.2
	sendmail-8_14_7:1.1.127.1
	sendmail-8_14_6:1.1.127.1
	sendmail-8_14_5-ERRATA-1:1.1.127.1
	mbsd-20101220_mergebase:1.1.1.2.4.1
	sendmail-8_14_5:1.1.127.1
	cvs-201107021500:1.1.1.3
	cvs-20101220:1.1.1.3
	mbsd-20101220:1.1.1.2.0.4
	cvs-201012191730:1.1.1.2
	sendmail-8_14_5_Beta0:1.1.127.1
	sendmail-8_14_3:1.1.127.1
	sendmail:1.1.127
	cvs-200812170000:1.1.1.2
	cvs-200805071200:1.1.1.2
	MIRBSD_10:1.1.1.2.0.2
	MIRBSD_10_BASE:1.1.1.2
	cvs-200803022030:1.1.1.2
	cvs-200707152000:1.1.1.2
	cvs-200704292000:1.1.1.2
	cvs-200702051700:1.1.1.2
	cvs-200609121900:1.1.1.2
	MIRBSD_9_BASE:1.1.1.2
	cvs-200606151800:1.1.1.2
	cvs-200603231300:1.1.1.2
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	cvs-200504262050:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2014.06.09.15.17.25;	author tg;	state Exp;
branches;
next	1.2;
commitid	1005395CFC65E5646F1;

1.2
date	2011.07.02.15.03.51;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004E0F31C5496AB95F;

1.1
date	2005.02.05.17.24.23;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.127.1;
next	;

1.1.1.1
date	2005.02.05.17.24.23;	author tg;	state Exp;
branches
	1.1.1.1.2.1;
next	1.1.1.2;

1.1.1.2
date	2006.03.23.13.09.31;	author tg;	state Exp;
branches
	1.1.1.2.4.1;
next	1.1.1.3;
commitid	10044229DEA33D36552;

1.1.1.3
date	2011.07.02.15.00.04;	author tg;	state Exp;
branches;
next	;
commitid	1004E0F31C5496AB95F;

1.1.1.1.2.1
date	2006.03.30.19.27.46;	author tg;	state Exp;
branches;
next	;
commitid	100442C309C7183FA09;

1.1.1.2.4.1
date	2011.07.02.15.02.25;	author tg;	state Exp;
branches;
next	;
commitid	1004E0F31C5496AB95F;

1.1.127.1
date	2010.12.19.14.45.48;	author tg;	state Exp;
branches;
next	1.1.127.2;
commitid	1004D0E1A94384778FD;

1.1.127.2
date	2014.06.09.14.29.20;	author tg;	state Exp;
branches;
next	;
commitid	1005395C4CC1A6DB9EE;


desc
@@


1.3
log
@merge
@
text
@/*
 * Copyright (c) 2000-2001, 2005, 2006 Proofpoint, Inc. and its suppliers.
 *      All rights reserved.
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Chris Torek.
 *
 * By using this file, you agree to the terms and conditions set
 * forth in the LICENSE file which can be found at the top level of
 * the sendmail distribution.
 */

#include <sm/gen.h>
SM_RCSID("@@(#)$Id: fflush.c,v 1.46 2013-11-22 20:51:42 ca Exp $")
#include <unistd.h>
#include <errno.h>
#include <sm/time.h>
#include <signal.h>
#include <fcntl.h>
#include <string.h>
#include <sm/io.h>
#include <sm/assert.h>
#include <sm/setjmp.h>
#include "local.h"
#include <sm/conf.h>

/*
**  SM_IO_FLUSH -- flush the buffer for a 'fp' to the "file"
**
**  Flush a single file. We don't allow this function to flush
**  all open files when fp==NULL any longer.
**
**	Parameters:
**		fp -- the file pointer buffer to flush
**		timeout -- time to complete the flush
**
**	Results:
**		Failure: SM_IO_EOF and sets errno
**		Success: 0 (zero)
*/

int
sm_io_flush(fp, timeout)
	register SM_FILE_T *fp;
	int SM_NONVOLATILE timeout;
{
	int fd;
	struct timeval to;

	SM_REQUIRE_ISA(fp, SmFileMagic);

	if ((fp->f_flags & (SMWR | SMRW)) == 0)
	{
		/*
		**  The file is not opened for writing, so it cannot be flushed
		**  (writable means SMWR [write] or SMRW [read/write].
		*/

		errno = EBADF;
		return SM_IO_EOF;
	}

	SM_CONVERT_TIME(fp, fd, timeout, &to);

	/* Now do the flush */
	return sm_flush(fp, (int *) &timeout);
}

/*
**  SM_FLUSH -- perform the actual flush
**
**  Assumes that 'fp' has been validated before this function called.
**
**	Parameters:
**		fp -- file pointer to be flushed
**		timeout -- max time allowed for flush (milliseconds)
**
**	Results:
**		Success: 0 (zero)
**		Failure: SM_IO_EOF and errno set
**
**	Side Effects:
**		timeout will get updated with the time remaining (if any)
*/

int
sm_flush(fp, timeout)
	register SM_FILE_T *fp;
	int *timeout;
{
	register unsigned char *p;
	register int n, t;
	int fd;

	SM_REQUIRE_ISA(fp, SmFileMagic);

	t = fp->f_flags;
	if ((t & SMWR) == 0)
		return 0;

	if (t & SMSTR)
	{
		*fp->f_p = '\0';
		return 0;
	}

	if ((p = fp->f_bf.smb_base) == NULL)
		return 0;

	n = fp->f_p - p;		/* write this much */

	if ((fd = sm_io_getinfo(fp, SM_IO_WHAT_FD, NULL)) == -1)
	{
		/* can't get an fd, likely internal 'fake' fp */
		errno = 0;
		fd = -1;
	}

	/*
	**  Set these immediately to avoid problems with longjmp and to allow
	**  exchange buffering (via setvbuf) in user write function.
	*/

	fp->f_p = p;
	fp->f_w = t & (SMLBF|SMNBF) ? 0 : fp->f_bf.smb_size; /* implies SMFBF */

	for (; n > 0; n -= t, p += t)
	{
		errno = 0; /* needed to ensure EOF correctly found */

		/* Call the file type's write function */
		t = (*fp->f_write)(fp, (char *)p, n);
		if (t <= 0)
		{
			if (t == 0 && errno == 0)
				break; /* EOF found */

			if (IS_IO_ERROR(fd, t, *timeout))
			{
				fp->f_flags |= SMERR;

				/* errno set by fp->f_write */
				return SM_IO_EOF;
			}
			SM_IO_WR_TIMEOUT(fp, fd, *timeout);
			t = 0;
		}
	}
	return 0;
}
@


1.2
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001, 2005, 2006 Sendmail, Inc. and its suppliers.
d16 1
a16 1
SM_RCSID("@@(#)$Id: fflush.c,v 1.45 2006/03/03 22:25:00 ca Exp $")
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001 Sendmail, Inc. and its suppliers.
d16 1
a16 1
SM_RCSID("@@(#)$Sendmail: fflush.c,v 1.43 2001/09/11 04:04:48 gshapiro Exp $")
d19 1
a19 1
#include <sys/time.h>
d148 1
@


1.1.127.1
log
@Import Sendmail 8.14.3, suitably stripped down by the not yet committed
contrib/samples/import-3rdpty,v 1.35; we have some new and renamed files
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001, 2005, 2006 Sendmail, Inc. and its suppliers.
d16 1
a16 1
SM_RCSID("@@(#)$Id: fflush.c,v 1.45 2006/03/03 22:25:00 ca Exp $")
d19 1
a19 1
#include <sm/time.h>
a147 1
			t = 0;
@


1.1.127.2
log
@Import sendmail 8.14.9
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001, 2005, 2006 Proofpoint, Inc. and its suppliers.
d16 1
a16 1
SM_RCSID("@@(#)$Id: fflush.c,v 1.46 2013-11-22 20:51:42 ca Exp $")
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.1.2.1
log
@MFC most of the recent sendmail updates to MirOS #8-stable
agreed bsiegert@@

This also changes the LOCALBASE stuff, links libmilter not
against LDAP, etc. but doesn't install the FreeBSD 6 confs
nor a shared libmilter in order to pass a no-files-diff:

tg@@maou:/usr/src/gnu/usr.sbin/sendmail $ sudo find / -ls | sort -k11 >~/x1
tg@@maou:/usr/src/gnu/usr.sbin/sendmail $ sudo make install
tg@@maou:/usr/src/gnu/usr.sbin/sendmail/cf/cf $ sudo make distribution
tg@@maou:/usr/src/gnu/usr.sbin/sendmail/cf/cf $ sudo find / -ls | sort -k11 | diff -u ~/x1 - | less

Note: files in /etc/mail/ are also changed, this affects the etc8.ngz set
on fresh installs and cannot(!) be automatically upgraded!
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001, 2005, 2006 Sendmail, Inc. and its suppliers.
d16 1
a16 1
SM_RCSID("@@(#)$Sendmail: fflush.c,v 1.45 2006/03/03 22:25:00 ca Exp $")
d19 1
a19 1
#include <sm/time.h>
a147 1
			t = 0;
@


1.1.1.2
log
@Update to Sendmail 8.13.6
@
text
@d2 1
a2 1
 * Copyright (c) 2000-2001, 2005, 2006 Sendmail, Inc. and its suppliers.
d16 1
a16 1
SM_RCSID("@@(#)$Sendmail: fflush.c,v 1.45 2006/03/03 22:25:00 ca Exp $")
d19 1
a19 1
#include <sm/time.h>
a147 1
			t = 0;
@


1.1.1.2.4.1
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d16 1
a16 1
SM_RCSID("@@(#)$Id: fflush.c,v 1.45 2006/03/03 22:25:00 ca Exp $")
@


1.1.1.3
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d16 1
a16 1
SM_RCSID("@@(#)$Id: fflush.c,v 1.45 2006/03/03 22:25:00 ca Exp $")
@


