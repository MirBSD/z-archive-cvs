head	1.3;
access;
symbols
	sendmail-8_14_9:1.1.127.2
	sendmail-8_14_7:1.1.127.1
	sendmail-8_14_6:1.1.127.1
	sendmail-8_14_5-ERRATA-1:1.1.127.1
	mbsd-20101220_mergebase:1.1.1.3.4.1
	sendmail-8_14_5:1.1.127.1
	cvs-201107021500:1.1.1.4
	cvs-20101220:1.1.1.4
	mbsd-20101220:1.1.1.3.0.4
	cvs-201012191730:1.1.1.3
	sendmail-8_14_5_Beta0:1.1.127.1
	sendmail-8_14_3:1.1.127.1
	sendmail:1.1.127
	cvs-200812170000:1.1.1.3
	cvs-200805071200:1.1.1.3
	MIRBSD_10:1.1.1.3.0.2
	MIRBSD_10_BASE:1.1.1.3
	cvs-200803022030:1.1.1.3
	cvs-200707152000:1.1.1.3
	cvs-200704292000:1.1.1.3
	cvs-200702051700:1.1.1.3
	cvs-200609121900:1.1.1.2
	MIRBSD_9_BASE:1.1.1.1
	cvs-200606151800:1.1.1.1
	cvs-200603231300:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	cvs-200504262050:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.06.09.15.17.00;	author tg;	state Exp;
branches;
next	1.2;
commitid	1005395CFC65E5646F1;

1.2
date	2011.07.02.15.03.31;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004E0F31C5496AB95F;

1.1
date	2005.02.05.17.24.19;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.127.1;
next	;

1.1.1.1
date	2005.02.05.17.24.19;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.09.12.19.21.53;	author tg;	state Exp;
branches;
next	1.1.1.3;
commitid	100450708CE5C63A8F5;

1.1.1.3
date	2007.02.05.17.05.26;	author tg;	state Exp;
branches
	1.1.1.3.4.1;
next	1.1.1.4;
commitid	10045C763C551AABAF7;

1.1.1.4
date	2011.07.02.14.59.17;	author tg;	state Exp;
branches;
next	;
commitid	1004E0F31C5496AB95F;

1.1.1.3.4.1
date	2011.07.02.15.01.53;	author tg;	state Exp;
branches;
next	;
commitid	1004E0F31C5496AB95F;

1.1.127.1
date	2010.12.19.14.45.51;	author tg;	state Exp;
branches;
next	1.1.127.2;
commitid	1004D0E1A94384778FD;

1.1.127.2
date	2014.06.09.14.29.23;	author tg;	state Exp;
branches;
next	;
commitid	1005395C4CC1A6DB9EE;


desc
@@


1.3
log
@merge
@
text
@#!/usr/bin/perl -w

# $Id: cidrexpand,v 8.8 2006-08-07 17:18:37 ca Exp $
#
# v 0.4
#
# 17 July 2000 Derek J. Balling (dredd@@megacity.org)
# 
# Acts as a preparser on /etc/mail/access_db to allow you to use address/bit
# notation. 
#
# If you have two overlapping CIDR blocks with conflicting actions
# e.g.   10.2.3.128/25 REJECT and 10.2.3.143 ACCEPT
# make sure that the exceptions to the more general block are specified
# later in the access_db.
#
# the -r flag to makemap will make it "do the right thing"
#
# Modifications
# -------------
# 26 Jul 2001 Derek Balling (dredd@@megacity.org)
#     Now uses Net::CIDR because it makes life a lot easier.
#
#  5 Nov 2002 Richard Rognlie (richard@@sendmail.com)
#     Added code to deal with the prefix tags that may now be included in
#     the access_db
#
#     Added clarification in the notes for what to do if you have 
#     exceptions to a larger CIDR block.
#
#  26 Jul 2006 Richard Rognlie (richard@@sendmail.com>
#     Added code to strip "comments" (anything after a non-escaped #)
#     # characters after a \ or within quotes (single and double) are
#     left intact. 
#
#     e.g.
#	From:1.2.3.4	550 Die spammer # spammed us 2006.07.26
#     becomes
#	From:1.2.3.4	550 Die spammer 
#
#  3 August 2006
#
#     Corrected a bug to have it handle the special case of "0.0.0.0/0"
#     since Net::CIDR doesn't handle it properly.
#
# usage: 
#  cidrexpand < /etc/mail/access | makemap -r hash /etc/mail/access
#
#
# Report bugs to: <dredd@@megacity.org>
#


use strict;
use Net::CIDR;
use Getopt::Std;

our ($opt_c,$opt_t);
getopts('ct:');

my $spaceregex = '\s+';
if ($opt_t)
{
    $spaceregex = $opt_t;
}

while (<>)
{
    chomp;
    my ($prefix,$left,$right,$space);

    if ( (/\#/) && $opt_c )
    {
	# print "checking...\n";
	my $i;
	my $qtype='';
	for ($i=0 ; $i<length($_) ; $i++) 
	{
	    my $ch = substr($_,$i,1);
	    if ($ch eq '\\') 
	    {
		$i++;
		next;
	    }
	    elsif ($qtype eq '' && $ch eq '#') 
	    {
		substr($_,$i) = '';
		last;
	    }
	    elsif ($qtype ne '' && $ch eq $qtype) 
	    {
		$qtype = '';
	    }
	    elsif ($qtype eq '' && $ch =~ /[\'\"]/) 
	    {
		$qtype = $ch;
	    }
	}
    } 
    
    if (! /^(|\S\S*:)(\d+\.){3}\d+\/\d\d?$spaceregex.*/ )
    {
	print "$_\n";
    }
    else
    {
	($prefix,$left,$space,$right) = 
	    /^(|\S\S*:)((?:\d+\.){3}\d+\/\d\d?)($spaceregex)(.*)$/;
	
	my @@new_lefts = expand_network($left);
	foreach my $nl (@@new_lefts)
	{
	    print "$prefix$nl$space$right\n";
	}
    }
}
    
sub expand_network
{
    my $left_input = shift;
    my @@rc = ($left_input);
    my ($network,$mask) = split /\//, $left_input;
    if (defined $mask)
    {
	return (0..255)	if $mask == 0;

	my @@parts = split /\./, $network;
	while ($#parts < 3)
	{
	    push @@parts, "0";
	}
	my $clean_input = join '.', @@parts;
	$clean_input .= "/$mask";
	my @@octets = Net::CIDR::cidr2octets($clean_input);
	@@rc = @@octets;
    }
    return @@rc;
}
@


1.2
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d3 1
a3 1
# $Id: cidrexpand,v 8.8 2006/08/07 17:18:37 ca Exp $
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
# $Sendmail: cidrexpand,v 8.4 2002/11/22 21:13:14 ca Exp $
d31 15
d56 4
d62 1
a62 2

while (my $arg = shift @@ARGV)
d64 1
a64 4
    if ($arg eq '-t')
    {
	$spaceregex = shift;
    }
a66 4
use strict;

my $SENDMAIL = 1;

d69 1
d72 29
d103 1
a103 1
	print;
d107 2
a108 1
	($prefix,$left,$space,$right) = /^(|\S\S*:)((?:\d+\.){3}\d+\/\d\d?)($spaceregex)(.*)$/;
d125 2
@


1.1.127.1
log
@Import Sendmail 8.14.3, suitably stripped down by the not yet committed
contrib/samples/import-3rdpty,v 1.35; we have some new and renamed files
@
text
@d3 1
a3 1
# $Id: cidrexpand,v 8.8 2006/08/07 17:18:37 ca Exp $
a30 15
#  26 Jul 2006 Richard Rognlie (richard@@sendmail.com>
#     Added code to strip "comments" (anything after a non-escaped #)
#     # characters after a \ or within quotes (single and double) are
#     left intact. 
#
#     e.g.
#	From:1.2.3.4	550 Die spammer # spammed us 2006.07.26
#     becomes
#	From:1.2.3.4	550 Die spammer 
#
#  3 August 2006
#
#     Corrected a bug to have it handle the special case of "0.0.0.0/0"
#     since Net::CIDR doesn't handle it properly.
#
a40 1
use Getopt::Std;
d42 1
a42 2
our ($opt_c,$opt_t);
getopts('ct:');
d44 1
a44 2
my $spaceregex = '\s+';
if ($opt_t)
d46 4
a49 1
    $spaceregex = $opt_t;
d52 4
a57 1
    chomp;
a59 29
    if ( (/\#/) && $opt_c )
    {
	# print "checking...\n";
	my $i;
	my $qtype='';
	for ($i=0 ; $i<length($_) ; $i++) 
	{
	    my $ch = substr($_,$i,1);
	    if ($ch eq '\\') 
	    {
		$i++;
		next;
	    }
	    elsif ($qtype eq '' && $ch eq '#') 
	    {
		substr($_,$i) = '';
		last;
	    }
	    elsif ($qtype ne '' && $ch eq $qtype) 
	    {
		$qtype = '';
	    }
	    elsif ($qtype eq '' && $ch =~ /[\'\"]/) 
	    {
		$qtype = $ch;
	    }
	}
    } 
    
d62 1
a62 1
	print "$_\n";
d66 1
a66 2
	($prefix,$left,$space,$right) = 
	    /^(|\S\S*:)((?:\d+\.){3}\d+\/\d\d?)($spaceregex)(.*)$/;
a82 2
	return (0..255)	if $mask == 0;

@


1.1.127.2
log
@Import sendmail 8.14.9
@
text
@d3 1
a3 1
# $Id: cidrexpand,v 8.8 2006-08-07 17:18:37 ca Exp $
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import latest Sendmail
@
text
@d3 1
a3 1
# $Sendmail: cidrexpand,v 8.4.2.1 2006/08/07 17:22:10 ca Exp $
d8 1
a8 1
#
d10 1
a10 1
# notation.
d28 1
a28 1
#     Added clarification in the notes for what to do if you have
d31 1
a31 6
#  3 August 2006
#
#     Corrected a bug to have it handle the special case of "0.0.0.0/0"
#     since Net::CIDR doesn't handle it properly.
#
# usage:
d75 1
a75 1

a82 2
	return (0..255)	if $mask == 0;

@


1.1.1.3
log
@Import Sendmail 8.14.0 via OpenBSD
@
text
@d3 1
a3 1
# $Sendmail: cidrexpand,v 8.8 2006/08/07 17:18:37 ca Exp $
d8 1
a8 1
# 
d10 1
a10 1
# notation. 
d28 1
a28 1
#     Added clarification in the notes for what to do if you have 
a30 10
#  26 Jul 2006 Richard Rognlie (richard@@sendmail.com>
#     Added code to strip "comments" (anything after a non-escaped #)
#     # characters after a \ or within quotes (single and double) are
#     left intact. 
#
#     e.g.
#	From:1.2.3.4	550 Die spammer # spammed us 2006.07.26
#     becomes
#	From:1.2.3.4	550 Die spammer 
#
d36 1
a36 1
# usage: 
a45 1
use Getopt::Std;
d47 1
a47 2
our ($opt_c,$opt_t);
getopts('ct:');
d49 1
a49 2
my $spaceregex = '\s+';
if ($opt_t)
d51 4
a54 1
    $spaceregex = $opt_t;
d57 4
a62 1
    chomp;
a64 29
    if ( (/\#/) && $opt_c )
    {
	# print "checking...\n";
	my $i;
	my $qtype='';
	for ($i=0 ; $i<length($_) ; $i++) 
	{
	    my $ch = substr($_,$i,1);
	    if ($ch eq '\\') 
	    {
		$i++;
		next;
	    }
	    elsif ($qtype eq '' && $ch eq '#') 
	    {
		substr($_,$i) = '';
		last;
	    }
	    elsif ($qtype ne '' && $ch eq $qtype) 
	    {
		$qtype = '';
	    }
	    elsif ($qtype eq '' && $ch =~ /[\'\"]/) 
	    {
		$qtype = $ch;
	    }
	}
    } 
    
d67 1
a67 1
	print "$_\n";
d71 1
a71 2
	($prefix,$left,$space,$right) = 
	    /^(|\S\S*:)((?:\d+\.){3}\d+\/\d\d?)($spaceregex)(.*)$/;
d80 1
a80 1
    
@


1.1.1.3.4.1
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d3 1
a3 1
# $Id: cidrexpand,v 8.8 2006/08/07 17:18:37 ca Exp $
@


1.1.1.4
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d3 1
a3 1
# $Id: cidrexpand,v 8.8 2006/08/07 17:18:37 ca Exp $
@


