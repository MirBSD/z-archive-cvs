head	1.3;
access;
symbols
	sendmail-8_14_9:1.1.127.2
	sendmail-8_14_7:1.1.127.1
	sendmail-8_14_6:1.1.127.1
	sendmail-8_14_5-ERRATA-1:1.1.127.1
	mbsd-20101220_mergebase:1.1.1.3.4.1
	sendmail-8_14_5:1.1.127.1
	cvs-201107021500:1.1.1.4
	cvs-20101220:1.1.1.4
	mbsd-20101220:1.1.1.3.0.4
	cvs-201012191730:1.1.1.3
	sendmail-8_14_5_Beta0:1.1.127.1
	sendmail-8_14_3:1.1.127.1
	sendmail:1.1.127
	cvs-200812170000:1.1.1.3
	cvs-200805071200:1.1.1.3
	MIRBSD_10:1.1.1.3.0.2
	MIRBSD_10_BASE:1.1.1.3
	cvs-200803022030:1.1.1.3
	cvs-200707152000:1.1.1.3
	cvs-200704292000:1.1.1.3
	cvs-200702051700:1.1.1.2
	cvs-200609121900:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	cvs-200606151800:1.1.1.1
	cvs-200603231300:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	cvs-200504262050:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.06.09.15.17.20;	author tg;	state Exp;
branches;
next	1.2;
commitid	1005395CFC65E5646F1;

1.2
date	2011.07.02.15.03.46;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004E0F31C5496AB95F;

1.1
date	2005.02.05.17.24.23;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.127.1;
next	;

1.1.1.1
date	2005.02.05.17.24.23;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.02.05.17.05.58;	author tg;	state Exp;
branches;
next	1.1.1.3;
commitid	10045C763C551AABAF7;

1.1.1.3
date	2007.04.29.20.07.08;	author tg;	state Exp;
branches
	1.1.1.3.4.1;
next	1.1.1.4;
commitid	1004634FAED5BC54DF0;

1.1.1.4
date	2011.07.02.14.59.56;	author tg;	state Exp;
branches;
next	;
commitid	1004E0F31C5496AB95F;

1.1.1.3.4.1
date	2011.07.02.15.02.18;	author tg;	state Exp;
branches;
next	;
commitid	1004E0F31C5496AB95F;

1.1.127.1
date	2010.12.19.14.45.53;	author tg;	state Exp;
branches;
next	1.1.127.2;
commitid	1004D0E1A94384778FD;

1.1.127.2
date	2014.06.09.14.29.25;	author tg;	state Exp;
branches;
next	;
commitid	1005395C4CC1A6DB9EE;


desc
@@


1.3
log
@merge
@
text
@<HTML>
<HEAD><TITLE>xxfi_body</TITLE></HEAD>
<BODY>
<!--
$Id: xxfi_body.html,v 1.18 2013-11-22 20:51:39 ca Exp $
-->
<H1>xxfi_body</H1>

<TABLE border="0" cellspacing=4 cellpadding=4>
<!---------- Synopsis ----------->
<TR><TH valign="top" align=left width=100>SYNOPSIS</TH><TD>
<PRE>
#include &lt;libmilter/mfapi.h&gt;
sfsistat (*xxfi_body)(
	SMFICTX *ctx,
	unsigned char *bodyp,
	size_t len
);
</PRE>
Handle a piece of a message's body.
</TD></TR>

<!----------- Description ---------->
<TR><TH valign="top" align=left>DESCRIPTION</TH><TD>
<TABLE border="1" cellspacing=1 cellpadding=4>
<TR align="left" valign=top>
<TH width="80">Called When</TH>
<TD>xxfi_body is called zero or more times between xxfi_eoh and xxfi_eom.</TD>
</TR>
<TR align="left" valign=top>
<TH>Default Behavior</TH>
<TD>Do nothing; return SMFIS_CONTINUE.</TD>
</TR>
</TABLE>

<!----------- Arguments ---------->
<TR><TH valign="top" align=left>ARGUMENTS</TH><TD>
    <TABLE border="1" cellspacing=0>
    <TR bgcolor="#dddddd"><TH>Argument</TH><TH>Description</TH></TR>
    <TR valign="top"><TD>ctx</TD>
	<TD>Opaque context structure.
	</TD></TR>
    <TR valign="top"><TD>bodyp</TD>
	<TD>Pointer to the start of this block of body data.  bodyp is not valid outside this call to xxfi_body.
	</TD></TR>
    <TR valign="top"><TD>len</TD>
	<TD>The amount of data pointed to by bodyp.
	</TD></TR>
    </TABLE>
</TD></TR>

<!----------- Notes ---------->
<TR>
<TH valign="top" align=left>NOTES</TH> 
<TD>
<UL>
<LI>bodyp points to a sequence of bytes.
It is <EM>not</EM> a C string (a sequence of characters that is terminated by '\0').
Therefore, do not use the usual C string functions like <CODE>strlen(3)</CODE>
on this byte block.
Moreover, the byte sequence may contain '\0' characters inside the block.
Hence even if a trailing '\0' is added, C string functions may still fail
to work as expected.
<LI>Since message bodies can be very large, defining xxfi_body can
significantly impact filter performance.
<LI>End-of-lines are represented as received from SMTP (normally CR/LF).
<LI>Later filters will see body changes made by earlier ones.
<LI>Message bodies may be sent in multiple chunks, with one call to 
    xxfi_body per chunk.
<LI>Return
<A HREF="api.html#SMFIS_SKIP">SMFIS_SKIP</A>
if a milter has received sufficiently many
body chunks to make a decision,
but still wants to invoke
message modification functions that are only allowed to be called from
<A HREF="xxfi_eom.html">xxfi_eom()</A>.
Note: the milter <EM>must</EM>
<A HREF="xxfi_negotiate.html">negotiate</A>
this behavior with the MTA, i.e., it must check whether
the protocol action
<A HREF="xxfi_negotiate.html#SMFIP_SKIP"><CODE>SMFIP_SKIP</CODE></A>
is available and if so, the milter must request it.
</UL>
</TD>
</TR>
</TABLE>

<HR size="1">
<FONT size="-1">
Copyright (c) 2000-2003, 2007 Proofpoint, Inc. and its suppliers.
All rights reserved.
<BR>
By using this file, you agree to the terms and conditions set
forth in the LICENSE.
</FONT>
</BODY>
</HTML>
@


1.2
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d5 1
a5 1
$Id: xxfi_body.html,v 1.17 2007/03/26 20:12:46 ca Exp $
d90 1
a90 1
Copyright (c) 2000-2003, 2007 Sendmail, Inc. and its suppliers.
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
<html>
<head><title>xxfi_body</title></head>
<body>
d5 1
a5 1
$Sendmail: xxfi_body.html,v 1.12 2003/03/05 19:57:55 ca Exp $
d7 1
a7 1
<h1>xxfi_body</h1>
d9 1
a9 1
<table border="0" cellspacing=4 cellpadding=4>
d11 2
a12 2
<tr><th valign="top" align=left width=150>SYNOPSIS</th><td>
<pre>
d15 2
a16 2
	SMFICTX * ctx,
	unsigned char * bodyp,
d19 1
a19 1
</pre>
d21 1
a21 1
</td></tr>
d24 11
a34 11
<tr><th valign="top" align=left>DESCRIPTION</th><td>
<table border="1" cellspacing=1 cellpadding=4>
<tr align="left" valign=top>
<th width="80">Called When</th>
<td>xxfi_body is called zero or more times between xxfi_eoh and xxfi_eom.</td>
</tr>
<tr align="left" valign=top>
<th>Default Behavior</th>
<td>Do nothing; return SMFIS_CONTINUE.</td>
</tr>
</table>
d37 14
a50 14
<tr><th valign="top" align=left>ARGUMENTS</th><td>
    <table border="1" cellspacing=0>
    <tr bgcolor="#dddddd"><th>Argument</th><th>Description</th></tr>
    <tr valign="top"><td>ctx</td>
	<td>Opaque context structure.
	</td></tr>
    <tr valign="top"><td>bodyp</td>
	<td>Pointer to the start of this block of body data.  bodyp is not valid outside this call to xxfi_body.
	</td></tr>
    <tr valign="top"><td>len</td>
	<td>The amount of data pointed to by bodyp.
	</td></tr>
    </table>
</td></tr>
d53 8
a60 7
<tr>
<th valign="top" align=left>NOTES</th> 
<td>
<ul>
<li>bodyp points to a sequence of bytes.
It is <em>not</em> a C string (a sequence of characters that is terminated by '\0').
Therefore, do not use the usual C string functions like strlen() on this byte block.
d64 1
a64 1
<li>Since message bodies can be very large, defining xxfi_body can
d66 3
a68 3
<li>End-of-lines are represented as received from SMTP (normally CR/LF).
<li>Later filters will see body changes made by earlier ones.
<li>Message bodies may be sent in multiple chunks, with one call to 
d70 17
a86 4
</ul>
</td>
</tr>
</table>
d88 3
a90 3
<hr size="1">
<font size="-1">
Copyright (c) 2000-2003 Sendmail, Inc. and its suppliers.
d92 1
a92 1
<br>
d95 3
a97 3
</font>
</body>
</html>
@


1.1.127.1
log
@Import Sendmail 8.14.3, suitably stripped down by the not yet committed
contrib/samples/import-3rdpty,v 1.35; we have some new and renamed files
@
text
@d1 3
a3 3
<HTML>
<HEAD><TITLE>xxfi_body</TITLE></HEAD>
<BODY>
d5 1
a5 1
$Id: xxfi_body.html,v 1.17 2007/03/26 20:12:46 ca Exp $
d7 1
a7 1
<H1>xxfi_body</H1>
d9 1
a9 1
<TABLE border="0" cellspacing=4 cellpadding=4>
d11 2
a12 2
<TR><TH valign="top" align=left width=100>SYNOPSIS</TH><TD>
<PRE>
d15 2
a16 2
	SMFICTX *ctx,
	unsigned char *bodyp,
d19 1
a19 1
</PRE>
d21 1
a21 1
</TD></TR>
d24 11
a34 11
<TR><TH valign="top" align=left>DESCRIPTION</TH><TD>
<TABLE border="1" cellspacing=1 cellpadding=4>
<TR align="left" valign=top>
<TH width="80">Called When</TH>
<TD>xxfi_body is called zero or more times between xxfi_eoh and xxfi_eom.</TD>
</TR>
<TR align="left" valign=top>
<TH>Default Behavior</TH>
<TD>Do nothing; return SMFIS_CONTINUE.</TD>
</TR>
</TABLE>
d37 14
a50 14
<TR><TH valign="top" align=left>ARGUMENTS</TH><TD>
    <TABLE border="1" cellspacing=0>
    <TR bgcolor="#dddddd"><TH>Argument</TH><TH>Description</TH></TR>
    <TR valign="top"><TD>ctx</TD>
	<TD>Opaque context structure.
	</TD></TR>
    <TR valign="top"><TD>bodyp</TD>
	<TD>Pointer to the start of this block of body data.  bodyp is not valid outside this call to xxfi_body.
	</TD></TR>
    <TR valign="top"><TD>len</TD>
	<TD>The amount of data pointed to by bodyp.
	</TD></TR>
    </TABLE>
</TD></TR>
d53 7
a59 8
<TR>
<TH valign="top" align=left>NOTES</TH> 
<TD>
<UL>
<LI>bodyp points to a sequence of bytes.
It is <EM>not</EM> a C string (a sequence of characters that is terminated by '\0').
Therefore, do not use the usual C string functions like <CODE>strlen(3)</CODE>
on this byte block.
d63 1
a63 1
<LI>Since message bodies can be very large, defining xxfi_body can
d65 3
a67 3
<LI>End-of-lines are represented as received from SMTP (normally CR/LF).
<LI>Later filters will see body changes made by earlier ones.
<LI>Message bodies may be sent in multiple chunks, with one call to 
d69 4
a72 17
<LI>Return
<A HREF="api.html#SMFIS_SKIP">SMFIS_SKIP</A>
if a milter has received sufficiently many
body chunks to make a decision,
but still wants to invoke
message modification functions that are only allowed to be called from
<A HREF="xxfi_eom.html">xxfi_eom()</A>.
Note: the milter <EM>must</EM>
<A HREF="xxfi_negotiate.html">negotiate</A>
this behavior with the MTA, i.e., it must check whether
the protocol action
<A HREF="xxfi_negotiate.html#SMFIP_SKIP"><CODE>SMFIP_SKIP</CODE></A>
is available and if so, the milter must request it.
</UL>
</TD>
</TR>
</TABLE>
d74 3
a76 3
<HR size="1">
<FONT size="-1">
Copyright (c) 2000-2003, 2007 Sendmail, Inc. and its suppliers.
d78 1
a78 1
<BR>
d81 3
a83 3
</FONT>
</BODY>
</HTML>
@


1.1.127.2
log
@Import sendmail 8.14.9
@
text
@d5 1
a5 1
$Id: xxfi_body.html,v 1.18 2013-11-22 20:51:39 ca Exp $
d90 1
a90 1
Copyright (c) 2000-2003, 2007 Proofpoint, Inc. and its suppliers.
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import Sendmail 8.14.0 via OpenBSD
@
text
@d1 3
a3 3
<HTML>
<HEAD><TITLE>xxfi_body</TITLE></HEAD>
<BODY>
d5 1
a5 1
$Sendmail: xxfi_body.html,v 1.16 2006/12/21 18:30:35 ca Exp $
d7 1
a7 1
<H1>xxfi_body</H1>
d9 1
a9 1
<TABLE border="0" cellspacing=4 cellpadding=4>
d11 2
a12 2
<TR><TH valign="top" align=left width=100>SYNOPSIS</TH><TD>
<PRE>
d15 2
a16 2
	SMFICTX *ctx,
	unsigned char *bodyp,
d19 1
a19 1
</PRE>
d21 1
a21 1
</TD></TR>
d24 11
a34 11
<TR><TH valign="top" align=left>DESCRIPTION</TH><TD>
<TABLE border="1" cellspacing=1 cellpadding=4>
<TR align="left" valign=top>
<TH width="80">Called When</TH>
<TD>xxfi_body is called zero or more times between xxfi_eoh and xxfi_eom.</TD>
</TR>
<TR align="left" valign=top>
<TH>Default Behavior</TH>
<TD>Do nothing; return SMFIS_CONTINUE.</TD>
</TR>
</TABLE>
d37 14
a50 14
<TR><TH valign="top" align=left>ARGUMENTS</TH><TD>
    <TABLE border="1" cellspacing=0>
    <TR bgcolor="#dddddd"><TH>Argument</TH><TH>Description</TH></TR>
    <TR valign="top"><TD>ctx</TD>
	<TD>Opaque context structure.
	</TD></TR>
    <TR valign="top"><TD>bodyp</TD>
	<TD>Pointer to the start of this block of body data.  bodyp is not valid outside this call to xxfi_body.
	</TD></TR>
    <TR valign="top"><TD>len</TD>
	<TD>The amount of data pointed to by bodyp.
	</TD></TR>
    </TABLE>
</TD></TR>
d53 7
a59 8
<TR>
<TH valign="top" align=left>NOTES</TH> 
<TD>
<UL>
<LI>bodyp points to a sequence of bytes.
It is <EM>not</EM> a C string (a sequence of characters that is terminated by '\0').
Therefore, do not use the usual C string functions like <CODE>strlen(3)</CODE>
on this byte block.
d63 1
a63 1
<LI>Since message bodies can be very large, defining xxfi_body can
d65 3
a67 3
<LI>End-of-lines are represented as received from SMTP (normally CR/LF).
<LI>Later filters will see body changes made by earlier ones.
<LI>Message bodies may be sent in multiple chunks, with one call to 
d69 4
a72 4
</UL>
</TD>
</TR>
</TABLE>
d74 2
a75 2
<HR size="1">
<FONT size="-1">
d78 1
a78 1
<BR>
d81 3
a83 3
</FONT>
</BODY>
</HTML>
@


1.1.1.3
log
@import openbsd compress, ssh, perl, sendmail for minor bugfixes
@
text
@d5 1
a5 1
$Sendmail: xxfi_body.html,v 1.17 2007/03/26 20:12:46 ca Exp $
a69 13
<LI>Return
<A HREF="api.html#SMFIS_SKIP">SMFIS_SKIP</A>
if a milter has received sufficiently many
body chunks to make a decision,
but still wants to invoke
message modification functions that are only allowed to be called from
<A HREF="xxfi_eom.html">xxfi_eom()</A>.
Note: the milter <EM>must</EM>
<A HREF="xxfi_negotiate.html">negotiate</A>
this behavior with the MTA, i.e., it must check whether
the protocol action
<A HREF="xxfi_negotiate.html#SMFIP_SKIP"><CODE>SMFIP_SKIP</CODE></A>
is available and if so, the milter must request it.
d77 1
a77 1
Copyright (c) 2000-2003, 2007 Sendmail, Inc. and its suppliers.
@


1.1.1.3.4.1
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d5 1
a5 1
$Id: xxfi_body.html,v 1.17 2007/03/26 20:12:46 ca Exp $
@


1.1.1.4
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d5 1
a5 1
$Id: xxfi_body.html,v 1.17 2007/03/26 20:12:46 ca Exp $
@


