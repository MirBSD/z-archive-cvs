head	1.4;
access;
symbols
	sendmail-8_14_9:1.1.127.2
	sendmail-8_14_7:1.1.127.1
	sendmail-8_14_6:1.1.127.1
	sendmail-8_14_5-ERRATA-1:1.1.127.1
	mbsd-20101220_mergebase:1.2.2.1
	sendmail-8_14_5:1.1.127.1
	cvs-201107021500:1.1.1.4
	cvs-20101220:1.1.1.4
	mbsd-20101220:1.2.0.2
	cvs-201012191730:1.1.1.3
	sendmail-8_14_5_Beta0:1.1.127.1
	sendmail-8_14_3:1.1.127.1
	sendmail:1.1.127
	cvs-200812170000:1.1.1.3
	cvs-200805071200:1.1.1.3
	MIRBSD_10:1.1.1.2.0.2
	MIRBSD_10_BASE:1.1.1.2
	cvs-200803022030:1.1.1.2
	cvs-200707152000:1.1.1.2
	cvs-200704292000:1.1.1.2
	cvs-200702051700:1.1.1.2
	cvs-200609121900:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	cvs-200606151800:1.1.1.1
	cvs-200603231300:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	cvs-200504262050:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.06.09.15.17.18;	author tg;	state Exp;
branches;
next	1.3;
commitid	1005395CFC65E5646F1;

1.3
date	2011.07.02.15.03.44;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004E0F31C5496AB95F;

1.2
date	2008.05.07.11.57.04;	author tg;	state Exp;
branches
	1.2.2.1;
next	1.1;
commitid	100482198DE5A7916C7;

1.1
date	2005.02.05.17.24.22;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.127.1;
next	;

1.2.2.1
date	2011.07.02.15.02.13;	author tg;	state Exp;
branches;
next	;
commitid	1004E0F31C5496AB95F;

1.1.1.1
date	2005.02.05.17.24.22;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2007.02.05.17.05.54;	author tg;	state Exp;
branches
	1.1.1.2.2.1;
next	1.1.1.3;
commitid	10045C763C551AABAF7;

1.1.1.3
date	2008.05.07.12.31.48;	author tg;	state Exp;
branches;
next	1.1.1.4;
commitid	1004821A13C1FC036E1;

1.1.1.4
date	2011.07.02.14.59.53;	author tg;	state Exp;
branches;
next	;
commitid	1004E0F31C5496AB95F;

1.1.1.2.2.1
date	2008.05.17.19.11.55;	author tg;	state Exp;
branches;
next	;
commitid	100482F2DC168C89AEA;

1.1.127.1
date	2010.12.19.14.45.53;	author tg;	state Exp;
branches;
next	1.1.127.2;
commitid	1004D0E1A94384778FD;

1.1.127.2
date	2014.06.09.14.29.25;	author tg;	state Exp;
branches;
next	;
commitid	1005395C4CC1A6DB9EE;


desc
@@


1.4
log
@merge
@
text
@<HTML>
<HEAD><TITLE>smfi_opensocket</TITLE></HEAD>
<BODY>
<!--
$Id: smfi_opensocket.html,v 1.8 2013-11-22 20:51:39 ca Exp $
-->
<H1>smfi_opensocket</H1>

<TABLE border="0" cellspacing=4 cellpadding=4>
<!---------- Synopsis ----------->
<TR><TH valign="top" align=left width=100>SYNOPSIS</TH><TD>
<PRE>
#include &lt;libmilter/mfapi.h&gt;
int smfi_opensocket(
	bool rmsocket
);
</PRE>
Attempt to create the interface socket MTAs will use to connect to the
filter.
</TD></TR>

<!----------- Description ---------->
<TR><TH valign="top" align=left>DESCRIPTION</TH><TD>
<TABLE border="1" cellspacing=1 cellpadding=4>
<TR align="left" valign=top>
<TH width="80">Called When</TH>
<TD>Called only from program mainline,
after calling <TT>smfi_setconn()</TT> and <TT>smfi_register()</TT>,
but before calling <TT>smfi_main()</TT>.
</TD>
</TR>
<TR align="left" valign=top>
<TH width="80">Effects</TH>
<TD>smfi_opensocket attempts to create the socket specified previously by
a call to <TT>smfi_setconn()</TT> which will be the interface between MTAs
and the filter.
This allows the calling application to ensure that the
socket can be created.
If this is not called,
<TT>smfi_main()</TT> will do so implicitly.
</TD>
</TR>
</TABLE>

<!----------- Arguments ---------->
<TR><TH valign="top" align=left>ARGUMENTS</TH><TD>
    <TABLE border="1" cellspacing=0>
    <TR bgcolor="#dddddd"><TH>Argument</TH><TH>Description</TH></TR>
    <TR valign="top"><TD>rmsocket</TD>
	<TD>A flag indicating whether or not the library should try to
	remove any existing UNIX domain socket before trying to create
        a new one.
	</TD></TR>
    </TABLE>
</TD></TR>

<!----------- Return values ---------->
<TR>
<TH valign="top" align=left>RETURN VALUES</TH> 

<TD>smfi_opensocket will fail and return MI_FAILURE if:
<UL>
    <LI>The interface socket could not be created for any reason.
    <LI><TT>rmsocket</TT> was <TT>true</TT>, and either the socket could
        not be examined, or exists and could not be removed.
    <LI><TT>smfi_setconn()</TT> or <TT>smfi_register()</TT>
	have not been called.
</UL>
Otherwise, it will return MI_SUCCESS
</TD>
</TR>

</TABLE>

<HR size="1">
<FONT size="-1">
Copyright (c) 2003, 2008 Proofpoint, Inc. and its suppliers.
All rights reserved.
<BR>
By using this file, you agree to the terms and conditions set
forth in the LICENSE.
</FONT>
</BODY>
</HTML>
@


1.3
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d5 1
a5 1
$Id: smfi_opensocket.html,v 1.7 2008/01/31 17:29:33 ca Exp $
d77 1
a77 1
Copyright (c) 2003, 2008 Sendmail, Inc. and its suppliers.
@


1.2
log
@update to sendmail 8.14.3 (which has been on my TODO for 4 days *shames*),
a hah-I-knew-it! update for a bug I reported in IRC… (which seems lost, as
only DFBSD, OBSD etc. are credited for finding):

Sendmail, Inc., and the Sendmail Consortium announce the availability
of sendmail 8.14.3. This version fixes some bugs:

o the MTA accessed storage after it free()d it. This was a regression
  introduced in 8.14.2, but the bug only showed up on a few operating
  systems.
o ruleset processing: the function cataddr() could cause the
  addition of the BlankSub character between some tokens when it
  should not happen and thus failures in rule matching.  It seems
  that none of the default rules were affected by this bug and hence
  the problem did not show up for default configurations.
o the libmilter state engine did not deal correctly with milters
  that requested the omission of protocol steps during the negotiation
  callback.

A complete list of changes can be found in the release notes […]
@
text
@d5 1
a5 1
$Sendmail: smfi_opensocket.html,v 1.7 2008/01/31 17:29:33 ca Exp $
@


1.2.2.1
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d5 1
a5 1
$Id: smfi_opensocket.html,v 1.7 2008/01/31 17:29:33 ca Exp $
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
<html>
<head><title>smfi_opensocket</title></head>
<body>
d5 1
a5 1
$Sendmail: smfi_opensocket.html,v 1.4 2003/10/20 22:28:57 msk Exp $
d7 1
a7 1
<h1>smfi_opensocket</h1>
d9 1
a9 1
<table border="0" cellspacing=4 cellpadding=4>
d11 2
a12 2
<tr><th valign="top" align=left width=150>SYNOPSIS</th><td>
<pre>
d17 1
a17 1
</pre>
d20 1
a20 1
</td></tr>
d23 21
a43 16
<tr><th valign="top" align=left>DESCRIPTION</th><td>
<table border="1" cellspacing=1 cellpadding=4>
<tr align="left" valign=top>
<th width="80">Called When</th>
<td>Called only from program mainline, before calling
<tt>smfi_main()</tt>.</td>
</tr>
<tr align="left" valign=top>
<th width="80">Effects</th>
<td>smfi_opensocket attempts to create the socket specified previously by
a call to <tt>smfi_setconn()</tt> which will be the interface between MTAs
and the filter.  This allows the calling application to ensure that the
socket can be created.  If this is not called, <tt>smfi_main()</tt> will
do so implicitly.  </td>
</tr>
</table>
d46 5
a50 5
<tr><th valign="top" align=left>ARGUMENTS</th><td>
    <table border="1" cellspacing=0>
    <tr bgcolor="#dddddd"><th>Argument</th><th>Description</th></tr>
    <tr valign="top"><td>rmsocket</td>
	<td>A flag indicating whether or not the library should try to
d53 3
a55 3
	</td></tr>
    </table>
</td></tr>
d58 2
a59 2
<tr>
<th valign="top" align=left>RETURN VALUES</th> 
d61 4
a64 4
<td>smfi_opensocket will fail and return MI_FAILURE if:
<ul>
    <li>The interface socket could not be created for any reason.
    <li><tt>rmsocket</tt> was <tt>true</tt>, and either the socket could
d66 3
a68 2
    <li><tt>smfi_setconn()</tt> has not been called.
</ul>
d70 2
a71 2
</td>
</tr>
d73 1
a73 1
</table>
d75 3
a77 3
<hr size="1">
<font size="-1">
Copyright (c) 2003 Sendmail, Inc. and its suppliers.
d79 1
a79 1
<br>
d82 3
a84 3
</font>
</body>
</html>
@


1.1.127.1
log
@Import Sendmail 8.14.3, suitably stripped down by the not yet committed
contrib/samples/import-3rdpty,v 1.35; we have some new and renamed files
@
text
@d1 3
a3 3
<HTML>
<HEAD><TITLE>smfi_opensocket</TITLE></HEAD>
<BODY>
d5 1
a5 1
$Id: smfi_opensocket.html,v 1.7 2008/01/31 17:29:33 ca Exp $
d7 1
a7 1
<H1>smfi_opensocket</H1>
d9 1
a9 1
<TABLE border="0" cellspacing=4 cellpadding=4>
d11 2
a12 2
<TR><TH valign="top" align=left width=100>SYNOPSIS</TH><TD>
<PRE>
d17 1
a17 1
</PRE>
d20 1
a20 1
</TD></TR>
d23 16
a38 21
<TR><TH valign="top" align=left>DESCRIPTION</TH><TD>
<TABLE border="1" cellspacing=1 cellpadding=4>
<TR align="left" valign=top>
<TH width="80">Called When</TH>
<TD>Called only from program mainline,
after calling <TT>smfi_setconn()</TT> and <TT>smfi_register()</TT>,
but before calling <TT>smfi_main()</TT>.
</TD>
</TR>
<TR align="left" valign=top>
<TH width="80">Effects</TH>
<TD>smfi_opensocket attempts to create the socket specified previously by
a call to <TT>smfi_setconn()</TT> which will be the interface between MTAs
and the filter.
This allows the calling application to ensure that the
socket can be created.
If this is not called,
<TT>smfi_main()</TT> will do so implicitly.
</TD>
</TR>
</TABLE>
d41 5
a45 5
<TR><TH valign="top" align=left>ARGUMENTS</TH><TD>
    <TABLE border="1" cellspacing=0>
    <TR bgcolor="#dddddd"><TH>Argument</TH><TH>Description</TH></TR>
    <TR valign="top"><TD>rmsocket</TD>
	<TD>A flag indicating whether or not the library should try to
d48 3
a50 3
	</TD></TR>
    </TABLE>
</TD></TR>
d53 2
a54 2
<TR>
<TH valign="top" align=left>RETURN VALUES</TH> 
d56 4
a59 4
<TD>smfi_opensocket will fail and return MI_FAILURE if:
<UL>
    <LI>The interface socket could not be created for any reason.
    <LI><TT>rmsocket</TT> was <TT>true</TT>, and either the socket could
d61 2
a62 3
    <LI><TT>smfi_setconn()</TT> or <TT>smfi_register()</TT>
	have not been called.
</UL>
d64 2
a65 2
</TD>
</TR>
d67 1
a67 1
</TABLE>
d69 3
a71 3
<HR size="1">
<FONT size="-1">
Copyright (c) 2003, 2008 Sendmail, Inc. and its suppliers.
d73 1
a73 1
<BR>
d76 3
a78 3
</FONT>
</BODY>
</HTML>
@


1.1.127.2
log
@Import sendmail 8.14.9
@
text
@d5 1
a5 1
$Id: smfi_opensocket.html,v 1.8 2013-11-22 20:51:39 ca Exp $
d77 1
a77 1
Copyright (c) 2003, 2008 Proofpoint, Inc. and its suppliers.
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import Sendmail 8.14.0 via OpenBSD
@
text
@d1 3
a3 3
<HTML>
<HEAD><TITLE>smfi_opensocket</TITLE></HEAD>
<BODY>
d5 1
a5 1
$Sendmail: smfi_opensocket.html,v 1.6 2006/12/21 18:30:35 ca Exp $
d7 1
a7 1
<H1>smfi_opensocket</H1>
d9 1
a9 1
<TABLE border="0" cellspacing=4 cellpadding=4>
d11 2
a12 2
<TR><TH valign="top" align=left width=100>SYNOPSIS</TH><TD>
<PRE>
d17 1
a17 1
</PRE>
d20 1
a20 1
</TD></TR>
d23 11
a33 11
<TR><TH valign="top" align=left>DESCRIPTION</TH><TD>
<TABLE border="1" cellspacing=1 cellpadding=4>
<TR align="left" valign=top>
<TH width="80">Called When</TH>
<TD>Called only from program mainline, before calling
<TT>smfi_main()</TT>.</TD>
</TR>
<TR align="left" valign=top>
<TH width="80">Effects</TH>
<TD>smfi_opensocket attempts to create the socket specified previously by
a call to <TT>smfi_setconn()</TT> which will be the interface between MTAs
d35 4
a38 4
socket can be created.  If this is not called, <TT>smfi_main()</TT> will
do so implicitly.  </TD>
</TR>
</TABLE>
d41 5
a45 5
<TR><TH valign="top" align=left>ARGUMENTS</TH><TD>
    <TABLE border="1" cellspacing=0>
    <TR bgcolor="#dddddd"><TH>Argument</TH><TH>Description</TH></TR>
    <TR valign="top"><TD>rmsocket</TD>
	<TD>A flag indicating whether or not the library should try to
d48 3
a50 3
	</TD></TR>
    </TABLE>
</TD></TR>
d53 2
a54 2
<TR>
<TH valign="top" align=left>RETURN VALUES</TH> 
d56 4
a59 4
<TD>smfi_opensocket will fail and return MI_FAILURE if:
<UL>
    <LI>The interface socket could not be created for any reason.
    <LI><TT>rmsocket</TT> was <TT>true</TT>, and either the socket could
d61 2
a62 2
    <LI><TT>smfi_setconn()</TT> has not been called.
</UL>
d64 2
a65 2
</TD>
</TR>
d67 1
a67 1
</TABLE>
d69 2
a70 2
<HR size="1">
<FONT size="-1">
d73 1
a73 1
<BR>
d76 3
a78 3
</FONT>
</BODY>
</HTML>
@


1.1.1.2.2.1
log
@MFC sendmail update to 8.14.3

agreed bsiegert@@
@
text
@d5 1
a5 1
$Sendmail: smfi_opensocket.html,v 1.7 2008/01/31 17:29:33 ca Exp $
d27 2
a28 4
<TD>Called only from program mainline,
after calling <TT>smfi_setconn()</TT> and <TT>smfi_register()</TT>,
but before calling <TT>smfi_main()</TT>.
</TD>
d34 3
a36 6
and the filter.
This allows the calling application to ensure that the
socket can be created.
If this is not called,
<TT>smfi_main()</TT> will do so implicitly.
</TD>
d61 1
a61 2
    <LI><TT>smfi_setconn()</TT> or <TT>smfi_register()</TT>
	have not been called.
d71 1
a71 1
Copyright (c) 2003, 2008 Sendmail, Inc. and its suppliers.
@


1.1.1.3
log
@OpenBSD finally has upgraded their sendmail, too…
@
text
@d5 1
a5 1
$Sendmail: smfi_opensocket.html,v 1.7 2008/01/31 17:29:33 ca Exp $
d27 2
a28 4
<TD>Called only from program mainline,
after calling <TT>smfi_setconn()</TT> and <TT>smfi_register()</TT>,
but before calling <TT>smfi_main()</TT>.
</TD>
d34 3
a36 6
and the filter.
This allows the calling application to ensure that the
socket can be created.
If this is not called,
<TT>smfi_main()</TT> will do so implicitly.
</TD>
d61 1
a61 2
    <LI><TT>smfi_setconn()</TT> or <TT>smfi_register()</TT>
	have not been called.
d71 1
a71 1
Copyright (c) 2003, 2008 Sendmail, Inc. and its suppliers.
@


1.1.1.4
log
@Replace “$Sendmail: ” with “$Id: ” (the latter is used by upstream)
@
text
@d5 1
a5 1
$Id: smfi_opensocket.html,v 1.7 2008/01/31 17:29:33 ca Exp $
@


