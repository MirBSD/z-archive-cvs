head	1.1;
branch	1.1.101;
access;
symbols
	MIRBSD_10:1.1.101.3.0.4
	MIRBSD_10_BASE:1.1.101.3
	MIRBSD_9_BASE:1.1.101.3
	MIRBSD_8:1.1.101.3.0.2
	MIRBSD_8_BASE:1.1.101.3
	cvs-1_12_13:1.1.101.3
	cvs-1_12_12:1.1.101.2
	FSF:1.1.101;
locks; strict;
comment	@ * @;


1.1
date	2005.03.06.15.17.50;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.03.06.15.17.50;	author tg;	state Exp;
branches;
next	1.1.101.2;

1.1.101.2
date	2005.04.19.20.33.22;	author tg;	state Exp;
branches;
next	1.1.101.3;

1.1.101.3
date	2005.12.05.21.43.46;	author tg;	state Exp;
branches;
next	;
commitid	2cec4394b499b817;


desc
@@


1.1
log
@Initial revision
@
text
@/* ftruncate emulations that work on some System V's.
   This file is in the public domain. */

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <sys/types.h>
#include <fcntl.h>

#ifdef F_CHSIZE
int
ftruncate (fd, length)
     int fd;
     off_t length;
{
  return fcntl (fd, F_CHSIZE, length);
}
#else
#ifdef F_FREESP
/* The following function was written by
   kucharsk@@Solbourne.com (William Kucharski) */

#include <sys/stat.h>
#include <errno.h>
#include <unistd.h>

int
ftruncate (fd, length)
     int fd;
     off_t length;
{
  struct flock fl;
  struct stat filebuf;

  if (fstat (fd, &filebuf) < 0)
    return -1;

  if (filebuf.st_size < length)
    {
      /* Extend file length. */
      if (lseek (fd, (length - 1), SEEK_SET) < 0)
	return -1;

      /* Write a "0" byte. */
      if (write (fd, "", 1) != 1)
	return -1;
    }
  else
    {
      /* Truncate length. */
      fl.l_whence = 0;
      fl.l_len = 0;
      fl.l_start = length;
      fl.l_type = F_WRLCK;	/* Write lock on file space. */

      /* This relies on the UNDOCUMENTED F_FREESP argument to
	 fcntl, which truncates the file so that it ends at the
	 position indicated by fl.l_start.
	 Will minor miracles never cease? */
      if (fcntl (fd, F_FREESP, &fl) < 0)
	return -1;
    }

  return 0;
}
#else
int
ftruncate (fd, length)
     int fd;
     off_t length;
{
  return chsize (fd, length);
}
#endif
#endif
@


1.1.101.1
log
@GNU CVS 1.12.11 with the following directories removed:
- contrib/pam
- emx
- os2
- tools
- vms
- windows-NT
- zlib
@
text
@@


1.1.101.2
log
@GNU CVS 1.12.12 "should" fix security issues
@
text
@d2 1
a2 1
   This file is in the public domain.  */
d4 2
a5 2
#if HAVE_CONFIG_H
# include <config.h>
a11 1

d13 3
a15 1
ftruncate (int fd, off_t length)
d19 8
a26 11

#else /* not F_CHSIZE */
# ifdef F_FREESP

/* By William Kucharski <kucharsk@@netcom.com>.  */

#  include <sys/stat.h>
#  include <errno.h>
#  if HAVE_UNISTD_H
#   include <unistd.h>
#  endif
d29 3
a31 1
ftruncate (int fd, off_t length)
a50 1

a51 1

d55 1
a55 5
      fl.l_type = F_WRLCK;	/* write lock on file space */

      /* This relies on the *undocumented* F_FREESP argument to fcntl,
	 which truncates the file so that it ends at the position
	 indicated by fl.l_start.  Will minor miracles never cease?  */
d57 4
d67 1
a67 4

# else /* not F_CHSIZE nor F_FREESP */
#  if HAVE_CHSIZE

d69 3
a71 1
ftruncate (int fd, off_t length)
d75 2
a76 15

#  else /* not F_CHSIZE nor F_FREESP nor HAVE_CHSIZE */

#   include <errno.h>

int
ftruncate (int fd, off_t length)
{
  errno = EIO;
  return -1;
}

#  endif /* not HAVE_CHSIZE */
# endif /* not F_FREESP */
#endif /* not F_CHSIZE */
@


1.1.101.3
log
@Import current version of GNU CVS, in the hope to actually fix bugs...
@
text
@d4 1
a4 1
#ifdef HAVE_CONFIG_H
@


