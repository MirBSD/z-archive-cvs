head	1.2;
access;
symbols
	cvs-1_12_13:1.1.101.2
	cvs-1_12_12:1.1.101.1
	FSF:1.1.101;
locks; strict;
comment	@ * @;


1.2
date	2005.12.05.23.01.42;	author tg;	state dead;
branches;
next	1.1;
commitid	3ddc4394c6df587b;

1.1
date	2005.04.19.20.33.23;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.04.19.20.33.23;	author tg;	state Exp;
branches;
next	1.1.101.2;

1.1.101.2
date	2005.12.05.21.43.47;	author tg;	state Exp;
branches;
next	;
commitid	2cec4394b499b817;


desc
@@


1.2
log
@these won't work here... but we don't have multibyte locales, anyway
@
text
@/* Searching in a string.
   Copyright (C) 2001-2003 Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software Foundation,
   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

#if HAVE_STRSTR

/* Get strstr() declaration.  */
#include <string.h>

#else

#ifdef __cplusplus
extern "C" {
#endif

/* Find the first occurrence of NEEDLE in HAYSTACK.  */
extern char *strstr (const char *haystack, const char *needle);

#ifdef __cplusplus
}
#endif

#endif
@


1.1
log
@Initial revision
@
text
@@


1.1.101.1
log
@GNU CVS 1.12.12 "should" fix security issues
@
text
@@


1.1.101.2
log
@Import current version of GNU CVS, in the hope to actually fix bugs...
@
text
@d2 1
a2 1
   Copyright (C) 2001-2003, 2005 Free Software Foundation, Inc.
d16 1
a16 1
   Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  */
d18 1
d20 1
a20 2
/* Include string.h: on glibc systems, it contains a macro definition of
   strstr() that would collide with our definition if included afterwards.  */
d23 2
a28 5
/* No known system has a strstr() function that works correctly in
   multibyte locales. Therefore we use our version always.  */
#undef strstr
#define strstr rpl_strstr

d35 2
@

