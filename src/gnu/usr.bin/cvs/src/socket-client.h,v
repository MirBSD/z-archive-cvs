head	1.1;
branch	1.1.101;
access;
symbols
	MIRBSD_10:1.1.101.2.0.4
	MIRBSD_10_BASE:1.1.101.2
	MIRBSD_9_BASE:1.1.101.2
	MIRBSD_8:1.1.101.2.0.2
	MIRBSD_8_BASE:1.1.101.2
	cvs-1_12_13:1.1.101.2
	cvs-1_12_12:1.1.101.1
	FSF:1.1.101;
locks; strict;
comment	@ * @;


1.1
date	2005.03.06.15.17.59;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.03.06.15.17.59;	author tg;	state Exp;
branches;
next	1.1.101.2;

1.1.101.2
date	2005.12.05.21.43.45;	author tg;	state Exp;
branches;
next	;
commitid	2cec4394b499b817;


desc
@@


1.1
log
@Initial revision
@
text
@/* CVS socket client stuff.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.  */

#ifndef SOCKET_CLIENT_H__
#define SOCKET_CLIENT_H__ 1

#include <config.h>

struct buffer *socket_buffer_initialize
  (int, int, void (*) (struct buffer *));

# if defined(AUTH_CLIENT_SUPPORT) || defined(HAVE_KERBEROS) || defined(HAVE_GSSAPI) || defined(SOCK_ERRNO) || defined(SOCK_STRERROR)
#   ifdef HAVE_WINSOCK_H
#     include <winsock.h>
#   else /* No winsock.h */
#     include <sys/socket.h>
#     include <netinet/in.h>
#     include <arpa/inet.h>
#     include <netdb.h>
#   endif /* No winsock.h */
# endif

/* If SOCK_ERRNO is defined, then send()/recv() and other socket calls
   do not set errno, but that this macro should be used to obtain an
   error code.  This probably doesn't make sense unless
   NO_SOCKET_TO_FD is also defined. */
# ifndef SOCK_ERRNO
#   define SOCK_ERRNO errno
# endif

/* If SOCK_STRERROR is defined, then the error codes returned by
   socket operations are not known to strerror, and this macro must be
   used instead to convert those error codes to strings. */
# ifndef SOCK_STRERROR
#   define SOCK_STRERROR strerror

#   if STDC_HEADERS
#     include <string.h>
#   endif

#   ifndef strerror
extern char *strerror (int);
#   endif
# endif /* ! SOCK_STRERROR */

struct hostent *init_sockaddr (struct sockaddr_in *, char *, unsigned int);

#endif /* SOCKET_CLIENT_H__ */
@


1.1.101.1
log
@GNU CVS 1.12.11 with the following directories removed:
- contrib/pam
- emx
- os2
- tools
- vms
- windows-NT
- zlib
@
text
@@


1.1.101.2
log
@Import current version of GNU CVS, in the hope to actually fix bugs...
@
text
@d16 1
a16 6
#if defined SOCK_ERRNO || defined SOCK_STRERROR
# include <sys/socket.h>
# include <netinet/in.h>
# include <arpa/inet.h>
# include <netdb.h>
#endif
d21 11
d36 3
a38 3
#ifndef SOCK_ERRNO
# define SOCK_ERRNO errno
#endif
d43 2
a44 2
#ifndef SOCK_STRERROR
# define SOCK_STRERROR strerror
d46 5
a50 2
# include <string.h>
# ifndef strerror
d52 4
a55 2
# endif
#endif /* ! SOCK_STRERROR */
@

