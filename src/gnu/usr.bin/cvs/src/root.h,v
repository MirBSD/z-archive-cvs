head	1.5;
access;
symbols
	MIRBSD_10:1.1.101.3.0.4
	MIRBSD_10_BASE:1.1.101.3
	MIRBSD_9_BASE:1.1.101.3
	MIRBSD_8:1.1.101.3.0.2
	MIRBSD_8_BASE:1.1.101.3
	cvs-1_12_13:1.1.101.3
	cvs-1_12_12:1.1.101.2
	FSF:1.1.101;
locks; strict;
comment	@ * @;


1.5
date	2017.01.08.19.13.05;	author tg;	state Exp;
branches;
next	1.4;
commitid	10058728F2D5F1A39E6;

1.4
date	2011.06.11.00.24.06;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004DF2B5B25E899A1F;

1.3
date	2010.09.19.19.43.10;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004C9667C83946BB2E;

1.2
date	2010.09.16.20.56.11;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004C928463526833A8;

1.1
date	2005.03.06.15.17.56;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.03.06.15.17.56;	author tg;	state Exp;
branches;
next	1.1.101.2;

1.1.101.2
date	2005.04.19.20.33.19;	author tg;	state Exp;
branches;
next	1.1.101.3;

1.1.101.3
date	2005.12.05.21.43.45;	author tg;	state Exp;
branches;
next	;
commitid	2cec4394b499b817;


desc
@@


1.5
log
@Apply --allow-root-regexp patch, for the Savannah admins, slightly edited:
2007-05-09  Derek Price  <derek@@ximbiot.com> and/for Sylvain Beucler  <beuc@@beuc.net>
@
text
@/* $MirOS: src/gnu/usr.bin/cvs/src/root.h,v 1.4 2011/06/11 00:24:06 tg Exp $ */

/*
 * Copyright (C) 1986-2005 The Free Software Foundation, Inc.
 *
 * Portions Copyright (C) 1998-2005 Derek Price, Ximbiot <http://ximbiot.com>,
 *                                  and others.
 *
 * Portions Copyright (C) 1992, Brian Berliner and Jeff Polk
 * Portions Copyright (C) 1989-1992, Brian Berliner
 *
 * You may distribute under the terms of the GNU General Public License as
 * specified in the README file that comes with the CVS kit.
 */

/* CVSroot data structures */

/* Access method specified in CVSroot. */
typedef enum {
    null_method = 0,
    local_method,
    server_method,
    pserver_method,
    kserver_method,
    gserver_method,
    ext_method,
    extssh_method,
    fork_method
} CVSmethod;
extern const char method_names[][16];	/* change this in root.c if you change
					   the enum above */

typedef struct cvsroot_s {
    char *original;		/* The complete source CVSroot string. */
    CVSmethod method;		/* One of the enum values above. */
    char *directory;		/* The directory name. */
    bool isremote;		/* True if we are doing remote access. */
/* The following is required for servers now to allow Redirects to be sent
 * for remote roots when client support is disabled.
 */
#if defined (CLIENT_SUPPORT) || defined (SERVER_SUPPORT)
    char *username;		/* The username or NULL if method == local. */
    char *password;		/* The password or NULL if method == local. */
    char *hostname;		/* The hostname or NULL if method == local. */
    char *cvs_rsh;		/* The $CVS_RSH or NULL if method != ext. */
    char *cvs_server;		/* The $CVS_SERVER or NULL if
				 * method != ext and method != fork. */
    int port;			/* The port or zero if method == local. */
    char *proxy_hostname;	/* The hostname of the proxy server, or NULL
				 * when method == local or no proxy will be
				 * used.
				 */
    int proxy_port;		/* The port of the proxy or zero, as above. */
    bool redirect;		/* False if we are to disable redirects. */
#endif /* defined (CLIENT_SUPPORT) || defined (SERVER_SUPPORT) */
} cvsroot_t;

extern cvsroot_t *current_parsed_root;
extern const cvsroot_t *original_parsed_root;

cvsroot_t *Name_Root (const char *dir, const char *update_dir);
cvsroot_t *parse_cvsroot (const char *root)
	__attribute__ ((__malloc__));
cvsroot_t *local_cvsroot (const char *dir)
	__attribute__ ((__malloc__));
void Create_Root (const char *dir, const char *rootdir);
void root_allow_add (const char *, const char *configPath);
void root_allow_regexp_add (const char *, const char *configPath);
void root_allow_free (void);
bool root_allow_ok (const char *);
int root_allow_used (void);
struct config *get_root_allow_config (const char *arg, const char *configPath);
const char *primary_root_translate (const char *root_in);
const char *primary_root_inverse_translate (const char *root_in);
@


1.4
log
@make extssh a more separarte connection method and clean up old sins
@
text
@d1 1
a1 1
/* $MirOS: src/gnu/usr.bin/cvs/src/root.h,v 1.3 2010/09/19 19:43:10 tg Exp $ */
d68 1
@


1.3
log
@merge from ports/devel/cvs
@
text
@d1 1
a1 1
/* $MirOS: ports/devel/cvs/patches/patch-src_root_h,v 1.1 2010/09/15 20:57:02 tg Exp $ */
d27 1
@


1.2
log
@begin attempting to synchronise with the port
@
text
@@


1.1
log
@Initial revision
@
text
@d1 2
d4 7
a10 3
 * Copyright (c) 2001, Derek Price and others
 * Copyright (c) 1992, Brian Berliner and Jeff Polk
 * Copyright (c) 1989-1992, Brian Berliner
d36 5
a40 1
#ifdef CLIENT_SUPPORT
a52 1
    unsigned char isremote;	/* Nonzero if we are doing remote access. */
d54 1
a54 1
#endif /* CLIENT_SUPPORT */
a60 1
void free_cvsroot_t (cvsroot_t *root_in);
d66 1
a66 1
void root_allow_add (const char *);
d69 2
a70 1
struct config *get_root_allow_config (const char *arg);
@


1.1.101.1
log
@GNU CVS 1.12.11 with the following directories removed:
- contrib/pam
- emx
- os2
- tools
- vms
- windows-NT
- zlib
@
text
@@


1.1.101.2
log
@GNU CVS 1.12.12 "should" fix security issues
@
text
@d2 3
a4 7
 * Copyright (C) 1986-2005 The Free Software Foundation, Inc.
 *
 * Portions Copyright (C) 1998-2005 Derek Price, Ximbiot <http://ximbiot.com>,
 *                                  and others.
 *
 * Portions Copyright (C) 1992, Brian Berliner and Jeff Polk
 * Portions Copyright (C) 1989-1992, Brian Berliner
d30 1
a30 4
/* The following is required for servers now to allow Redirects to be sent
 * for remote roots when client support is disabled.
 */
#if defined (CLIENT_SUPPORT) || defined (SERVER_SUPPORT)
d45 1
a45 1
#endif /* defined (CLIENT_SUPPORT) || defined (SERVER_SUPPORT) */
@


1.1.101.3
log
@Import current version of GNU CVS, in the hope to actually fix bugs...
@
text
@a33 1
    bool isremote;		/* True if we are doing remote access. */
d50 1
d59 1
d65 1
a65 1
void root_allow_add (const char *, const char *configPath);
d68 1
a68 1
struct config *get_root_allow_config (const char *arg, const char *configPath);
@


