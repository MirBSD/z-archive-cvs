head	1.2;
access;
symbols
	MIRBSD_10:1.1.7.1.0.4
	MIRBSD_10_BASE:1.1.7.1
	MIRBSD_9_BASE:1.1.7.1
	MIRBSD_8:1.1.7.1.0.2
	MIRBSD_8_BASE:1.1.7.1
	mirbsd:1.1.7;
locks; strict;
comment	@ * @;


1.2
date	2008.08.07.19.43.39;	author tg;	state dead;
branches;
next	1.1;
commitid	100489B50512C3BDDCB;

1.1
date	2005.03.06.16.46.50;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.06.16.46.50;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@die schily die
@
text
@/* @@(#)nixread.c	1.10 03/06/15 Copyright 1986, 1996-2003 J. Schilling */
/*
 *	Non interruptable extended read
 *
 *	Copyright (c) 1986, 1996-2003 J. Schilling
 */
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; see the file COPYING.  If not, write to the Free Software
 * Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */

#include "io.h"
#include <errno.h>

EXPORT int
_nixread(f, buf, count)
	int	f;
	void	*buf;
	int	count;
{
	register char *p = (char *)buf;
	register int ret;
	register int total = 0;

	while (count > 0) {
		while ((ret = read(f, p, count)) < 0) {
			if (geterrno() == EINTR)
				continue;
			return (ret);	/* Any other error */
		}
		if (ret == 0)		/* Something went wrong */
			break;

		total += ret;
		count -= ret;
		p += ret;
	}
	return (total);
}
@


1.1
log
@Initial revision
@
text
@@


1.1.7.1
log
@Add another couple of software they didn't have
@
text
@@
