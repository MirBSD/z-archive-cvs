head	1.3;
access;
symbols
	MIRBSD_10:1.2.0.4
	MIRBSD_10_BASE:1.2
	MIRBSD_9_BASE:1.2
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	rcs-5_7:1.1.101.1
	FSF:1.1.101;
locks; strict;
comment	@ * @;


1.3
date	2009.07.18.13.10.34;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004A61C9B15A07C822;

1.2
date	2005.03.13.15.36.38;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.05.00.30.01;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.02.05.00.30.01;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@new feature: if
.Ev RCSLOCALID
begins with an exclamation sign
.Pq Sq \&! ,
it's the only keyword being matched, i.e. the built-in keywords, such
as $\&Id$, will never be touched.
@
text
@/* $MirOS: src/gnu/usr.bin/rcs/src/rcskeys.c,v 1.2 2005/03/13 15:36:38 tg Exp $ */

/* RCS keyword table and match operation */

/* Copyright 1982, 1988, 1989 Walter Tichy
   Copyright 1990, 1991, 1992, 1993, 1995 Paul Eggert
   Distributed under license by the Free Software Foundation, Inc.

This file is part of RCS.

RCS is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2, or (at your option)
any later version.

RCS is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with RCS; see the file COPYING.
If not, write to the Free Software Foundation,
59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

Report problems and direct all questions to:

    rcs-bugs@@cs.purdue.edu

*/

/*
 * $Log: rcskeys.c,v $
 * Revision 5.4  1995/06/16 06:19:24  eggert
 * Update FSF address.
 *
 * Revision 5.3  1993/11/03 17:42:27  eggert
 * Add Name keyword.
 *
 * Revision 5.2  1991/08/19  03:13:55  eggert
 * Say `T const' instead of `const T'; it's less confusing for pointer types.
 * (This change was made in other source files too.)
 *
 * Revision 5.1  1991/04/21  11:58:25  eggert
 * Don't put , just before } in initializer.
 *
 * Revision 5.0  1990/08/22  08:12:54  eggert
 * Add -k.  Ansify and Posixate.
 *
 * Revision 4.3  89/05/01  15:13:02  narten
 * changed copyright header to reflect current distribution rules
 * 
 * Revision 4.2  87/10/18  10:36:33  narten
 * Updating version numbers. Changes relative to 1.1 actuallyt
 * relative to 4.1
 * 
 * Revision 1.2  87/09/24  14:00:10  narten
 * Sources now pass through lint (if you ignore printf/sprintf/fprintf 
 * warnings)
 * 
 * Revision 4.1  83/05/04  10:06:53  wft
 * Initial revision.
 * 
 */


#include "rcsbase.h"

__RCSID("$MirOS: src/gnu/usr.bin/rcs/src/rcskeys.c,v 1.2 2005/03/13 15:36:38 tg Exp $");

char const *Keyword[] = {
    /* This must be in the same order as rcsbase.h's enum markers type. */
	0,
	AUTHOR, DATE, HEADER, IDH,
	LOCKER, LOG, NAME, RCSFILE, REVISION, SOURCE, STATE, NULL
};

int onlyRCSlocalId = 0;


	enum markers
trymatch(string)
	char const *string;
/* function: Checks whether string starts with a keyword followed
 * by a KDELIM or a VDELIM.
 * If successful, returns the appropriate marker, otherwise Nomatch.
 */
{
        register int j;
	register char const *p, *s;
	for (j = sizeof(Keyword)/sizeof(*Keyword);  (--j);  ) {
		if (onlyRCSlocalId && (j != LocalId))
			continue;
		if (Keyword[j] != NULL) {
			/* try next keyword */
			p = Keyword[j];
			s = string;
			while (*p++ == *s++) {
				if (!*p)
				    switch (*s) {
					case KDELIM:
					case VDELIM:
					    return (enum markers)j;
					default:
					    return Nomatch;
				    }
			}
		}
        }
        return(Nomatch);
}

	void
setRCSlocalId(string)
	char const *string;
/* function: sets local RCS id and RCSLOCALID envariable */
{
	static char local_id[keylength+1];

	if (*string == '!') {
		++string;
		onlyRCSlocalId = 1;
	}
	if (strlen(string) > keylength)
		warn("LocalId is too long");
	strlcpy(local_id, string, keylength+1);
	Keyword[LocalId] = local_id;
}
@


1.2
log
@merge diffs for GNU RCS
(that was a bit harder, since now, we don't fear RCS keywords
 in files under CVS version control any longer)
@
text
@d1 1
a1 1
/* $MirOS$ */
d69 1
a69 1
__RCSID("$MirOS$");
d78 1
d92 2
d120 4
@


1.1
log
@Initial revision
@
text
@d1 2
d69 1
a69 2
libId(keysId, "$Id: rcskeys.c,v 5.4 1995/06/16 06:19:24 eggert Exp $")

d71 1
a71 1
char const *const Keyword[] = {
d75 1
a75 1
	LOCKER, LOG, NAME, RCSFILE, REVISION, SOURCE, STATE
d91 14
a104 12
		/* try next keyword */
		p = Keyword[j];
		s = string;
		while (*p++ == *s++) {
			if (!*p)
			    switch (*s) {
				case KDELIM:
				case VDELIM:
				    return (enum markers)j;
				default:
				    return Nomatch;
			    }
d110 12
@


1.1.101.1
log
@GNU RCS 5.7
@
text
@@
