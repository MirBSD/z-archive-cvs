head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_4_4:1.1.1.2
	MIRBSD_10:1.1.1.2.0.2
	MIRBSD_10_BASE:1.1.1.2
	cvs-200704292000:1.1.1.2
	cvs-200606302200:1.1.1.2
	MIRBSD_9_BASE:1.1.1.1
	cvs-200601311430:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2005.02.05.17.22.36;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.22.36;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.06.30.22.40.28;	author tg;	state Exp;
branches;
next	;
commitid	10044A5A6F7276AA324;


desc
@@


1.1
log
@Initial revision
@
text
@#ifndef PERL_BEOS_BEOSISH_H
#define PERL_BEOS_BEOSISH_H

#include "../unixish.h"

#undef  waitpid
#define waitpid beos_waitpid

pid_t beos_waitpid(pid_t process_id, int *status_location, int options);

/* This seems to be protoless. */
char *gcvt(double value, int num_digits, char *buffer);

#endif

@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import Perl 5.8.8 from OpenLSD
@
text
@a13 23
/* flock support, if available */
#ifdef HAS_FLOCK

#include <flock.h>

#undef close
#define close flock_close

#undef dup2
#define dup2 flock_dup2

#endif /* HAS_FLOCK */


#undef kill
#define kill beos_kill
int beos_kill(pid_t pid, int sig);

#undef sigaction
#define sigaction(sig, act, oact) beos_sigaction((sig), (act), (oact))
int beos_sigaction(int sig, const struct sigaction *act,
                   struct sigaction *oact);

@

