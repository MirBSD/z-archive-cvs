head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_4_4:1.1.1.1
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	cvs-200704292000:1.1.1.1
	cvs-200606302200:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	cvs-200601311430:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.02.05.17.23.23;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.23.23;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!/usr/bin/perl -w

BEGIN {
    if( $ENV{PERL_CORE} ) {
        chdir 't' if -d 't';
        @@INC = '../lib';
    }
    else {
        unshift @@INC, 't/lib';
    }
}
chdir 't';

BEGIN {
    @@Methods = (qw(wraplist
                   rootdir
                   ext
                   guess_name
                   find_perl
                   path
                   maybe_command
                   perl_script
                   file_name_is_absolute
                   replace_manpage_separator
                   init_others
                   constants
                   cflags
                   const_cccmd
                   pm_to_blib
                   tool_autosplit
                   tool_xsubpp
                   tools_other
                   dist
                   c_o
                   xs_c
                   xs_o
                   top_targets
                   dlsyms
                   dynamic_lib
                   dynamic_bs
                   static_lib
                   manifypods
                   processPL
                   installbin
                   subdir_x
                   clean
                   realclean
                   dist_basics
                   dist_core
                   distdir
                   dist_test
                   install
                   perldepend
                   makefile
                   test
                   test_via_harness
                   test_via_script
                   makeaperl
                   nicetext
                  ));
}

BEGIN {
    use Test::More;
    if ($^O eq 'VMS') {
        plan( tests => @@Methods + 1 );
    }
    else {
        plan( skip_all => "This is not VMS" );
    }
}

use_ok( 'ExtUtils::MM_VMS' );

foreach my $meth (@@Methods) {
    can_ok( 'ExtUtils::MM_VMS', $meth);
}
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
