head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_4_4:1.1.1.1
	MIRBSD_10:1.1.1.1.0.2
	MIRBSD_10_BASE:1.1.1.1
	cvs-200704292000:1.1.1.1
	cvs-200606302200:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2006.06.30.22.41.36;	author tg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	10044A5A6F7276AA324;

1.1.1.1
date	2006.06.30.22.41.36;	author tg;	state Exp;
branches;
next	;
commitid	10044A5A6F7276AA324;


desc
@@


1.1
log
@Initial revision
@
text
@#!perl -w

use Test qw(plan ok);
plan tests => 5;

{
   package Digest::Foo;
   require Digest::base;
   use vars qw(@@ISA $VERSION);
   @@ISA = qw(Digest::base);

   sub new {
	my $class = shift;
	my $str = "";
	bless \$str, $class;
   }

   sub add {
	my $self = shift;
	$$self .= join("", @@_);
	return $self;
   }

   sub digest {
	my $self = shift;
	return sprintf "%04d", length($$self);
   }
}

use Digest::file qw(digest_file digest_file_hex digest_file_base64);

my $file = "test-$$";
die if -f $file;
open(F, ">$file") || die "Can't create '$file': $!";
binmode(F);
print F "foo\0\n";
close(F) || die "Can't write '$file': $!";

ok(digest_file($file, "Foo"), "0005");
ok(digest_file_hex($file, "Foo"), "30303035");
ok(digest_file_base64($file, "Foo"), "MDAwNQ");

unlink($file) || warn "Can't unlink '$file': $!";

ok(eval { digest_file("not-there.txt", "Foo") }, undef);
ok($@@);
@


1.1.1.1
log
@Import Perl 5.8.8 from OpenLSD
@
text
@@
