head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_4_4:1.1.1.1
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	cvs-200704292000:1.1.1.1
	cvs-200606302200:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	cvs-200601311430:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.02.05.17.23.37;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.23.37;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@BEGIN {
    if( $ENV{PERL_CORE} ) {
        chdir 't';
        @@INC = ('../lib', 'lib');
    }
    else {
        unshift @@INC, 't/lib';
    }
}

# Can't use Test.pm, that's a 5.005 thing.
package My::Test;

print "1..12\n";

my $test_num = 1;
# Utility testing functions.
sub ok ($;$) {
    my($test, $name) = @@_;
    my $ok = '';
    $ok .= "not " unless $test;
    $ok .= "ok $test_num";
    $ok .= " - $name" if defined $name;
    $ok .= "\n";
    print $ok;
    $test_num++;
}


package main;

require Test::Simple;

require Test::Simple::Catch;
my($out, $err) = Test::Simple::Catch::caught();

eval {
    Test::Simple->import;
};

My::Test::ok($$out eq '');
My::Test::ok($$err eq '');
My::Test::ok($@@    eq '');

eval {
    Test::Simple->import(tests => undef);
};

My::Test::ok($$out eq '');
My::Test::ok($$err eq '');
My::Test::ok($@@ =~ /Got an undefined number of tests/);

eval {
    Test::Simple->import(tests => 0);
};

My::Test::ok($$out eq '');
My::Test::ok($$err eq '');
My::Test::ok($@@ =~ /You said to run 0 tests!/);

eval {
    Test::Simple::ok(1);
};
My::Test::ok( $@@ =~ /You tried to run a test without a plan!/);


END {
    My::Test::ok($$out eq '');
    My::Test::ok($$err eq "");

    # Prevent Test::Simple from exiting with non zero.
    exit 0;
}
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
