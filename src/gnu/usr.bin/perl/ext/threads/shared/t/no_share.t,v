head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_4_4:1.1.1.1
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	cvs-200704292000:1.1.1.1
	cvs-200606302200:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	cvs-200601311430:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.02.05.17.23.08;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.23.08;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@use warnings;

BEGIN {
#    chdir 't' if -d 't';
#    push @@INC ,'../lib';
    require Config; import Config;
    unless ($Config{'useithreads'}) {
       print "1..0 # Skip: no useithreads\n";
        exit 0;
    }
    $SIG{__WARN__} = sub { $warnmsg = shift; };
}


sub ok {
    my ($id, $ok, $name) = @@_;

    $name = '' unless defined $name;
    # You have to do it this way or VMS will get confused.
    print $ok ? "ok $id - $name\n" : "not ok $id - $name\n";

    printf "# Failed test at line %d\n", (caller)[2] unless $ok;

    return $ok;
}

our $warnmsg;
use ExtUtils::testlib;
use strict;
BEGIN { print "1..5\n" };
use threads::shared;
use threads;
ok(1,1,"loaded");
ok(2,$warnmsg =~ /Warning, threads::shared has already been loaded/,
    "threads has warned us");
my $test = "bar";
share($test);
ok(3,$test eq "bar","Test disabled share not interfering");
threads->create(
               sub {
                   ok(4,$test eq "bar","Test disabled share after thread");
                   $test = "baz";
                   })->join();
# Value should either remain unchanged or be value set by other thread
ok(5,$test eq "bar" || $test eq 'baz',"Test that value is an expected one");


@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
