head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_4_4:1.1.1.1
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	cvs-200704292000:1.1.1.1
	cvs-200606302200:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	cvs-200601311430:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.02.05.17.23.08;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.23.08;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@
BEGIN {
    chdir 't' if -d 't';
    push @@INC, '../lib';
    require Config; import Config;
    unless ($Config{'useithreads'}) {
        print "1..0 # Skip: no useithreads\n";
        exit 0;
    }
}

use ExtUtils::testlib;
use strict;
BEGIN { $| = 1; print "1..11\n"};

use threads;
use threads::shared;
my $i = 10;
my $y = 20000;
my %localtime;
for(0..$i) {
	$localtime{$_} = localtime($_);
};
my $mutex = 1;
share($mutex);
sub localtime_r {
#  print "Waiting for lock\n";
  lock($mutex);
#  print "foo\n";
  my $retval = localtime(shift());
#  unlock($mutex);
  return $retval;
}
my @@threads;
for(0..$i) {
  my $thread = threads->create(sub {
				 my $arg = $_;
		    my $localtime = $localtime{$arg};
		    my $error = 0;
		    for(0..$y) {
		      my $lt = localtime($arg);
		      if($localtime ne $lt) {
			$error++;
		      }	
		    }
				 lock($mutex);
				 if($error) {
				   print "not ok $mutex # not a safe localtime\n";
				 } else {
				   print "ok $mutex\n";
				 }
				 $mutex++;
		  });	
  push @@threads, $thread;
}

for(@@threads) {
  $_->join();
}

@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
