head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_4_4:1.1.1.2
	MIRBSD_10:1.1.1.2.0.2
	MIRBSD_10_BASE:1.1.1.2
	cvs-200704292000:1.1.1.2
	cvs-200606302200:1.1.1.2
	MIRBSD_9_BASE:1.1.1.1
	cvs-200601311430:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.02.05.17.22.39;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.22.39;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.06.30.22.37.07;	author tg;	state Exp;
branches;
next	;
commitid	10044A5A6F7276AA324;


desc
@@


1.1
log
@Initial revision
@
text
@# typemap for Perl 5 interface to Berkeley 
#
# written by Paul Marquess <Paul.Marquess@@btinternet.com>
# last modified 20th June 2004
# version 1.809
#
#################################### DB SECTION
#
# 

u_int			T_U_INT
DB_File			T_PTROBJ
DBT			T_dbtdatum
DBTKEY			T_dbtkeydatum

INPUT
T_dbtkeydatum
	DBM_ckFilter($arg, filter_store_key, \"filter_store_key\");
	DBT_clear($var) ;
	SvGETMAGIC($arg) ;
        if (db->type == DB_RECNO) {
	    if (SvOK($arg))
	        Value = GetRecnoKey(aTHX_ db, SvIV($arg)) ; 
            else
	        Value = 1 ;
	    $var.data = & Value; 
	    $var.size = (int)sizeof(recno_t);
        }
        else if (SvOK($arg)) {
	    $var.data = SvPVbyte($arg, PL_na);
	    $var.size = (int)PL_na;
	}
T_dbtdatum
	DBM_ckFilter($arg, filter_store_value, \"filter_store_value\");
	DBT_clear($var) ;
	SvGETMAGIC($arg) ;
	if (SvOK($arg)) {
	    $var.data = SvPVbyte($arg, PL_na);
	    $var.size = (int)PL_na;
	}

OUTPUT

T_dbtkeydatum
	OutputKey($arg, $var)
T_dbtdatum
	OutputValue($arg, $var)
T_PTROBJ
        sv_setref_pv($arg, dbtype, (void*)$var);
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import Perl 5.8.8 from OpenLSD
@
text
@d18 1
a18 3
    {
	SV * my_sv = $arg;
	DBM_ckFilter(my_sv, filter_store_key, \"filter_store_key\");
d20 1
a20 1
	SvGETMAGIC(my_sv) ;
d22 2
a23 2
	    if (SvOK(my_sv))
	        Value = GetRecnoKey(aTHX_ db, SvIV(my_sv)) ; 
d29 2
a30 2
        else if (SvOK(my_sv)) {
	    $var.data = SvPVbyte(my_sv, PL_na);
a32 1
    }
d34 1
a34 3
    {
	SV * my_sv = $arg;
	DBM_ckFilter(my_sv, filter_store_value, \"filter_store_value\");
d36 3
a38 3
	SvGETMAGIC(my_sv) ;
	if (SvOK(my_sv)) {
	    $var.data = SvPVbyte(my_sv, PL_na);
a40 1
    }
@

