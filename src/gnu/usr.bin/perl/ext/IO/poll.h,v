head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_4_4:1.1.1.1
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	cvs-200704292000:1.1.1.1
	cvs-200606302200:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	cvs-200601311430:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.1
date	2005.02.05.17.23.00;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.23.00;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@/*
 * poll.h
 *
 * Copyright (c) 1997-8 Graham Barr <gbarr@@pobox.com>. All rights reserved.
 * This program is free software; you can redistribute it and/or
 * modify it under the same terms as Perl itself.
 *
 */

#ifndef POLL_H
#  define POLL_H

#if (defined(HAS_POLL) && defined(I_POLL)) || defined(POLLWRBAND)
#  include <poll.h>
#else
#ifdef HAS_SELECT


/* We shall emulate poll using select */

#define EMULATE_POLL_WITH_SELECT

#ifdef poll
# undef poll
#endif
#define poll Perl_my_poll

typedef struct pollfd {
    int fd;
    short events;
    short revents;
} pollfd_t;

#define	POLLIN		0x0001
#define	POLLPRI		0x0002
#define	POLLOUT		0x0004
#define	POLLRDNORM	0x0040
#define	POLLWRNORM	POLLOUT
#define	POLLRDBAND	0x0080
#define	POLLWRBAND	0x0100
#define	POLLNORM	POLLRDNORM

/* Return ONLY events (NON testable) */

#define	POLLERR		0x0008
#define	POLLHUP		0x0010
#define	POLLNVAL	0x0020

int poll (struct pollfd *, unsigned long, int);

#ifndef HAS_POLL
#  define HAS_POLL
#endif

#endif /* HAS_SELECT */

#endif /* I_POLL */

#endif /* POLL_H */

@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
