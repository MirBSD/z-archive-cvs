head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_4_4:1.1.1.1
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	cvs-200704292000:1.1.1.1
	cvs-200606302200:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	cvs-200601311430:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.02.05.17.23.04;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.23.04;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@BEGIN {
    eval { require Config; import Config };
    if ($@@) {
	print "1..0 # Skip: no Config\n";
	exit(0);
    }
}

use Thread;

$| = 1;

if (@@ARGV) {
    srand($ARGV[0]);
} else {
    my $seed = $$ ^ $^T;
    print "Randomising to $seed\n";
    srand($seed);
}

sub whoami {
    my ($depth, $a, $b, $c) = @@_;
    my $i;
    print "whoami ($depth): $a $b $c\n";
    sleep 1;
    whoami($depth - 1, $a, $b, $c) if $depth > 0;
}

sub start_foo {
    my $r = 3 + int(10 * rand);
    print "start_foo: r is $r\n";
    whoami($r, "start_foo", "foo1", "foo2");
    print "start_foo: finished\n";
}

sub start_bar {
    my $r = 3 + int(10 * rand);
    print "start_bar: r is $r\n";
    whoami($r, "start_bar", "bar1", "bar2");
    print "start_bar: finished\n";
}

$foo = new Thread \&start_foo;
$bar = new Thread \&start_bar;
print "main: exiting\n";
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
