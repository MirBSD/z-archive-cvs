head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_4_4:1.1.1.2
	MIRBSD_10:1.1.1.2.0.2
	MIRBSD_10_BASE:1.1.1.2
	cvs-200704292000:1.1.1.2
	cvs-200606302200:1.1.1.2
	MIRBSD_9_BASE:1.1.1.1
	cvs-200601311430:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.02.05.17.23.01;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.23.01;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.06.30.22.39.07;	author tg;	state Exp;
branches;
next	;
commitid	10044A5A6F7276AA324;


desc
@@


1.1
log
@Initial revision
@
text
@#!./perl

BEGIN {
    unless (-d 'blib') {
	chdir 't' if -d 't';
	@@INC = '../lib';
	require Config; import Config;
	keys %Config; # Silence warning
	if ($Config{extensions} !~ /\bList\/Util\b/) {
	    print "1..0 # Skip: List::Util was not built\n";
	    exit 0;
	}
    }
}

use Scalar::Util qw(readonly);


print "1..9\n";

print "not " unless readonly(1);
print "ok 1\n";

my $var = 2;

print "not " if readonly($var);
print "ok 2\n";

print "not " unless $var == 2;
print "ok 3\n";

print "not " unless readonly("fred");
print "ok 4\n";

$var = "fred";

print "not " if readonly($var);
print "ok 5\n";

print "not " unless $var eq "fred";
print "ok 6\n";

$var = \2;

print "not " if readonly($var);
print "ok 7\n";

print "not " unless readonly($$var);
print "ok 8\n";

print "not " if readonly(*STDOUT);
print "ok 9\n";
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import Perl 5.8.8 from OpenLSD
@
text
@a16 1
use Test::More tests => 9;
d18 5
a22 1
ok( readonly(1),	'number constant');
d26 5
a30 2
ok( !readonly($var),	'number variable');
is( $var,	2,	'no change to number variable');
d32 2
a33 1
ok( readonly("fred"),	'string constant');
d37 5
a41 2
ok( !readonly($var),	'string variable');
is( $var,	'fred',	'no change to string variable');
d45 5
a49 2
ok( !readonly($var),	'reference to constant');
ok( readonly($$var),	'de-reference to constant');
d51 2
a52 1
ok( !readonly(*STDOUT),	'glob');
@

