head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_4_4:1.1.1.2
	MIRBSD_10:1.1.1.2.0.2
	MIRBSD_10_BASE:1.1.1.2
	cvs-200704292000:1.1.1.2
	cvs-200606302200:1.1.1.2
	MIRBSD_9_BASE:1.1.1.1
	cvs-200601311430:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.02.05.17.23.57;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.23.57;	author tg;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.06.30.22.45.27;	author tg;	state Exp;
branches;
next	;
commitid	10044A5A6F7276AA324;


desc
@@


1.1
log
@Initial revision
@
text
@#!./perl

# $RCSfile: mod.t,v $$Revision: 1.7 $$Date: 2003/12/03 03:02:47 $

print "1..12\n";

print "ok 1\n" if 1;
print "not ok 1\n" unless 1;

print "ok 2\n" unless 0;
print "not ok 2\n" if 0;

1 && (print "not ok 3\n") if 0;
1 && (print "ok 3\n") if 1;
0 || (print "not ok 4\n") if 0;
0 || (print "ok 4\n") if 1;

$x = 0;
do {$x[$x] = $x;} while ($x++) < 10;
if (join(' ',@@x) eq '0 1 2 3 4 5 6 7 8 9 10') {
	print "ok 5\n";
} else {
	print "not ok 5 @@x\n";
}

$x = 15;
$x = 10 while $x < 10;
if ($x == 15) {print "ok 6\n";} else {print "not ok 6\n";}

$y[$_] = $_ * 2 foreach @@x;
if (join(' ',@@y) eq '0 2 4 6 8 10 12 14 16 18 20') {
	print "ok 7\n";
} else {
	print "not ok 7 @@y\n";
}

open(foo,'./TEST') || open(foo,'TEST') || open(foo,'t/TEST');
$x = 0;
$x++ while <foo>;
print $x > 50 && $x < 1000 ? "ok 8\n" : "not ok 8\n";

$x = -0.5;
print "not " if scalar($x) < 0 and $x >= 0;
print "ok 9\n";

print "not " unless (-(-$x) < 0) == ($x < 0);
print "ok 10\n";

print "ok 11\n" if $x < 0;
print "not ok 11\n" unless $x < 0;

print "ok 12\n" unless $x > 0;
print "not ok 12\n" if $x > 0;

@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@


1.1.1.2
log
@Import Perl 5.8.8 from OpenLSD
@
text
@d3 1
a3 1
# $RCSfile: mod.t,v $$Revision: 1.8 $$Date: 2006/03/28 19:23:12 $
d5 1
a5 1
print "1..13\n";
a54 3
# This used to cause a segfault
$x = "".("".do{"foo" for (1)});
print "ok 13\n";
@

