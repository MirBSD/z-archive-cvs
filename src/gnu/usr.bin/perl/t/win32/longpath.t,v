head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_4_4:1.1.1.1
	MIRBSD_10:1.1.1.1.0.4
	MIRBSD_10_BASE:1.1.1.1
	cvs-200704292000:1.1.1.1
	cvs-200606302200:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	cvs-200601311430:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200507211800:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2005.02.05.17.24.07;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.02.05.17.24.07;	author tg;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#!perl -w

# tests for Win32::GetLongPathName()

$^O =~ /^MSWin/ or print("1..0 # not win32\n" ), exit;

my @@paths = qw(
    /
    //
    .
    ..
    c:
    c:/
    c:./
    c:/.
    c:/..
    c:./..
    //./
    //.
    //..
    //./..
);
push @@paths, map { my $x = $_; $x =~ s,/,\\,g; $x } @@paths;
push @@paths, qw(
    ../\
    c:.\\../\
    c:/\..//
    c://.\/./\
    \\.\\../\
    //\..//
    //.\/./\
);

my $drive = $ENV{SystemDrive};
if ($drive) {
    for (@@paths) {
	s/^c:/$drive/;
    }
    push @@paths, $ENV{SystemRoot} if $ENV{SystemRoot};
}
my %expect;
@@expect{@@paths} = map { my $x = $_; $x =~ s,(.[/\\])[/\\]+,$1,g; $x } @@paths;

print "1.." . @@paths . "\n";
my $i = 1;
for (@@paths) {
    my $got = Win32::GetLongPathName($_);
    print "# '$_' => expect '$expect{$_}' => got '$got'\n";
    print "not " unless $expect{$_} eq $got;
    print "ok $i\n";
    ++$i;
}
@


1.1.1.1
log
@Import the OpenBSD foundation of MirOS BSD
@
text
@@
