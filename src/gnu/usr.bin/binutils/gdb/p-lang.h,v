head	1.2;
access;
symbols
	MIRBSD_10:1.2.0.2
	MIRBSD_10_BASE:1.2
	MIRBSD_9_BASE:1.2
	MIRBSD_8:1.1.101.2.0.2
	MIRBSD_8_BASE:1.1.101.2
	binutils-20050707:1.1.101.2
	gdb-20050107:1.1.101.1
	FSF:1.1.101;
locks; strict;
comment	@ * @;


1.2
date	2006.04.19.09.00.57;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004445FC3356353D7C;

1.1
date	2005.02.05.00.21.16;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.02.05.00.21.16;	author tg;	state Exp;
branches;
next	1.1.101.2;

1.1.101.2
date	2005.05.14.16.39.06;	author tg;	state Exp;
branches;
next	;
commitid	2ced428628ec0160;


desc
@@


1.2
log
@"Another useful gdb patch" from the gpc mailing list
(prevents gdb crashing in certain cases of uninitialised strings)
Message-ID: <013401c658ac$1432a380$270210ac@@ddell038>
@
text
@/* Pascal language support definitions for GDB, the GNU debugger.

   Copyright 2000, 2005 Free Software Foundation, Inc.

   This file is part of GDB.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

/* This file is derived from c-lang.h */

struct value;

extern int pascal_parse (void);	/* Defined in p-exp.y */

extern void pascal_error (char *);	/* Defined in p-exp.y */

/* Defined in p-typeprint.c */
extern void pascal_print_type (struct type *, char *, struct ui_file *, int, int);

extern int pascal_val_print (struct type *, const gdb_byte *, int,
			     CORE_ADDR, struct ui_file *, int, int,
			     int, enum val_prettyprint);

extern int pascal_value_print (struct value *, struct ui_file *, int, enum val_prettyprint);

extern void pascal_type_print_method_args (char *, char *,
					   struct ui_file *);

/* These are in p-lang.c: */

extern int 
  is_pascal_string_type (struct type *, int *, int *, int *, int *, int *, int *, char **);

extern void pascal_printchar (int, struct ui_file *);

extern void pascal_printstr (struct ui_file *, const gdb_byte *,
			     unsigned int, int, int);

extern struct type *pascal_create_fundamental_type (struct objfile *, int);

extern struct type **const (pascal_builtin_types[]);

/* These are in p-typeprint.c: */

extern void
  pascal_type_print_base (struct type *, struct ui_file *, int, int);

extern void
  pascal_type_print_varspec_prefix (struct type *, struct ui_file *, int, int);

/* These are in cp-valprint.c */

extern int vtblprint;		/* Controls printing of vtbl's */

extern int static_field_print;

extern void pascal_object_print_class_member (const gdb_byte *, struct type *,
					      struct ui_file *, char *);

extern void pascal_object_print_class_method (const gdb_byte *, struct type *,
					      struct ui_file *);

extern void pascal_object_print_value_fields (struct type *, const gdb_byte *,
					      CORE_ADDR, struct ui_file *,
					      int, int, enum val_prettyprint,
					      struct type **, int);

extern int pascal_object_is_vtbl_ptr_type (struct type *);

extern int pascal_object_is_vtbl_member (struct type *);
@


1.1
log
@Initial revision
@
text
@d2 2
a3 1
   Copyright 2000 Free Software Foundation, Inc.
d32 2
a33 1
extern int pascal_val_print (struct type *, char *, int, CORE_ADDR, struct ui_file *, int, int,
d44 1
a44 1
  is_pascal_string_type (struct type *, int *, int *, int *, int *, char **);
d48 2
a49 1
extern void pascal_printstr (struct ui_file *, char *, unsigned int, int, int);
d69 2
a70 1
extern void pascal_object_print_class_member (char *, struct type *, struct ui_file *, char *);
d72 2
a73 1
extern void pascal_object_print_class_method (char *, struct type *, struct ui_file *);
d75 3
a77 2
extern void pascal_object_print_value_fields (struct type *, char *, CORE_ADDR,
			   struct ui_file *, int, int, enum val_prettyprint,
@


1.1.101.1
log
@The GNU Debugger, CVS version matching binutils
@
text
@@


1.1.101.2
log
@The GNU Debugger, today's -current (mainline) snapshot
Some directories removed as usual
@
text
@d2 1
a2 2

   Copyright 2000, 2005 Free Software Foundation, Inc.
d31 1
a31 2
extern int pascal_val_print (struct type *, const gdb_byte *, int,
			     CORE_ADDR, struct ui_file *, int, int,
d46 1
a46 2
extern void pascal_printstr (struct ui_file *, const gdb_byte *,
			     unsigned int, int, int);
d66 1
a66 2
extern void pascal_object_print_class_member (const gdb_byte *, struct type *,
					      struct ui_file *, char *);
d68 1
a68 2
extern void pascal_object_print_class_method (const gdb_byte *, struct type *,
					      struct ui_file *);
d70 2
a71 3
extern void pascal_object_print_value_fields (struct type *, const gdb_byte *,
					      CORE_ADDR, struct ui_file *,
					      int, int, enum val_prettyprint,
@

