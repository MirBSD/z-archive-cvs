head	1.1;
branch	1.1.101;
access;
symbols
	MIRBSD_10:1.1.101.3.0.4
	MIRBSD_10_BASE:1.1.101.3
	MIRBSD_9_BASE:1.1.101.3
	MIRBSD_8:1.1.101.3.0.2
	MIRBSD_8_BASE:1.1.101.3
	binutils-20050707:1.1.101.3
	FSF:1.1.101;
locks; strict;
comment	@ * @;


1.1
date	2005.02.05.00.19.15;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.02.05.00.19.15;	author tg;	state Exp;
branches;
next	1.1.101.2;

1.1.101.2
date	2005.03.28.15.41.15;	author tg;	state Exp;
branches;
next	1.1.101.3;

1.1.101.3
date	2005.05.14.16.50.53;	author tg;	state Exp;
branches;
next	;
commitid	3a6242862a097542;


desc
@@


1.1
log
@Initial revision
@
text
@/* ARC target-dependent stuff. Extension data structures.
   Copyright 1995, 1997, 2000, 2001 Free Software Foundation, Inc.

This file is part of GDB.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */

#ifndef ARCEXT_H
#define ARCEXT_H

enum {EXT_INSTRUCTION   = 0};
enum {EXT_CORE_REGISTER = 1};
enum {EXT_AUX_REGISTER  = 2};
enum {EXT_COND_CODE     = 3};

enum {NUM_EXT_INST = (0x1f-0x10+1) + (0x3f-0x09+1)};
enum {NUM_EXT_CORE = 59-32+1};
enum {NUM_EXT_COND = 0x1f-0x10+1};

struct ExtInstruction 
{
  char flags;
  char *name;
}; 

struct ExtAuxRegister 
{
  long address;
  char *name;
  struct ExtAuxRegister *next; 
};

struct arcExtMap 
{
  struct ExtAuxRegister *auxRegisters;
  struct ExtInstruction *instructions[NUM_EXT_INST];
  unsigned char *coreRegisters[NUM_EXT_CORE];
  unsigned char *condCodes[NUM_EXT_COND];
};

extern int arcExtMap_add(void*, unsigned long);
extern const char *arcExtMap_coreRegName(int);
extern const char *arcExtMap_auxRegName(long);
extern const char *arcExtMap_condCodeName(int);
extern const char *arcExtMap_instName(int, int, int*);
extern void build_ARC_extmap(bfd *);

#define IGNORE_FIRST_OPD 1

#endif
@


1.1.101.1
log
@GNU binutils (CVS snapshot)
@
text
@@


1.1.101.2
log
@GNU binutils (CVS snapshot), without
* top-level files
* bfd/po
* binutils/po
* binutils/testsuite
* gas/po
* gas/testsuite
* gprof
* intl
* ld/po
* ld/testsuite
* libiberty/config
* opcodes/po
* texinfo
(same procedure as usual)
@
text
@d2 1
a2 1
   Copyright 1995, 1997, 2000, 2001, 2005 Free Software Foundation, Inc.
d23 4
a26 4
enum {EXT_INSTRUCTION   = 0,
      EXT_CORE_REGISTER = 1,
      EXT_AUX_REGISTER  = 2,
      EXT_COND_CODE     = 3};
d49 2
a50 2
  char *coreRegisters[NUM_EXT_CORE];
  char *condCodes[NUM_EXT_COND];
@


1.1.101.3
log
@GNU binutils, -current (mainline) snapshot as of today,
with the usual bunch of files removed
@
text
@d18 1
a18 1
Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.  */
@


