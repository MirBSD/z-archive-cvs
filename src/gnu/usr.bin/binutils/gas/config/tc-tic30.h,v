head	1.1;
branch	1.1.101;
access;
symbols
	MIRBSD_10:1.1.101.3.0.4
	MIRBSD_10_BASE:1.1.101.3
	MIRBSD_9_BASE:1.1.101.3
	MIRBSD_8:1.1.101.3.0.2
	MIRBSD_8_BASE:1.1.101.3
	binutils-20050707:1.1.101.3
	FSF:1.1.101;
locks; strict;
comment	@ * @;


1.1
date	2005.02.05.00.18.48;	author tg;	state Exp;
branches
	1.1.101.1;
next	;

1.1.101.1
date	2005.02.05.00.18.48;	author tg;	state Exp;
branches;
next	1.1.101.2;

1.1.101.2
date	2005.03.28.15.40.08;	author tg;	state Exp;
branches;
next	1.1.101.3;

1.1.101.3
date	2005.05.14.16.48.51;	author tg;	state Exp;
branches;
next	;
commitid	3a6242862a097542;


desc
@@


1.1
log
@Initial revision
@
text
@/* tc-tic30.h -- Header file for tc-tic30.c
   Copyright 1998, 2000 Free Software Foundation, Inc.
   Contributed by Steven Haworth (steve@@pm.cse.rmit.edu.au)

   This file is part of GAS, the GNU Assembler.

   GAS is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   GAS is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with GAS; see the file COPYING.  If not, write to the Free
   Software Foundation, 59 Temple Place - Suite 330, Boston, MA
   02111-1307, USA.  */

#ifndef _TC_TIC30_H_
#define _TC_TIC30_H_

#define TC_TIC30 1

#ifdef OBJ_AOUT
#define TARGET_FORMAT "a.out-tic30"
#endif

#define TARGET_ARCH		bfd_arch_tic30
#define TARGET_BYTES_BIG_ENDIAN	1

#define WORKING_DOT_WORD

char *output_invalid PARAMS ((int c));

#define END_OF_INSN '\0'
#define MAX_OPERANDS 6
#define DIRECT_REFERENCE '@@'
#define INDIRECT_REFERENCE '*'
#define PARALLEL_SEPARATOR '|'
#define INSN_SIZE 4

/* Define this to 1 if you want the debug output to be on stdout,
   otherwise stderr will be used.  If stderr is used, there will be a
   better synchronisation with the as_bad outputs, but you can't
   capture the output.  */
#define USE_STDOUT 0

#define tc_unrecognized_line tic30_unrecognized_line

extern int tic30_unrecognized_line PARAMS ((int));

#define tc_aout_pre_write_hook {}

#endif
@


1.1.101.1
log
@GNU binutils (CVS snapshot)
@
text
@@


1.1.101.2
log
@GNU binutils (CVS snapshot), without
* top-level files
* bfd/po
* binutils/po
* binutils/testsuite
* gas/po
* gas/testsuite
* gprof
* intl
* ld/po
* ld/testsuite
* libiberty/config
* opcodes/po
* texinfo
(same procedure as usual)
@
text
@d2 1
a2 1
   Copyright 1998, 2000, 2002, 2005 Free Software Foundation, Inc.
d33 1
d35 9
a43 6
#define END_OF_INSN 		'\0'
#define MAX_OPERANDS 		6
#define DIRECT_REFERENCE 	'@@'
#define INDIRECT_REFERENCE 	'*'
#define PARALLEL_SEPARATOR 	'|'
#define INSN_SIZE 		4
d49 1
a49 1
#define USE_STDOUT 		0
d53 1
a53 1
extern int tic30_unrecognized_line (int);
@


1.1.101.3
log
@GNU binutils, -current (mainline) snapshot as of today,
with the usual bunch of files removed
@
text
@d19 2
a20 2
   Software Foundation, 51 Franklin Street - Fifth Floor, Boston, MA
   02110-1301, USA.  */
@


