head	1.6;
access;
symbols
	lynx-2_8_8dev_16:1.1.109.6
	lynx-2_8_8dev_15e:1.1.109.6
	lynx-2_8_8dev_15:1.1.109.6
	lynx-2_8_8dev_14:1.1.109.6
	lynx-2_8_8dev_12:1.1.109.5
	lynx-2_8_8dev_11:1.1.109.5
	lynx-2_8_8dev_10a:1.1.109.5
	lynx-2_8_8dev_7a:1.1.109.5
	lynx-2_8_8dev_7:1.1.109.5
	lynx-2_8_7rel_1:1.1.109.4
	lynx-2_8_7dev_12:1.1.109.3
	lynx-2_8_7dev_11a:1.1.109.3
	MIRBSD_10:1.2.0.2
	MIRBSD_10_BASE:1.2
	lynx-2_8_7dev_8:1.1.109.2
	lynx-2_8_7dev_7:1.1.109.2
	lynx-2_8_7dev_5:1.1.109.1
	lynx-2_8_7dev_2:1.1.109.1
	lynx-2_8_6pre_5:1.1.109.1
	lynx-2_8_6pre_4:1.1.109.1
	lynx-2_8_6pre_3:1.1.109.1
	MIRBSD_9_BASE:1.1.109.1
	lynx-2_8_6dev_18c:1.1.109.1
	lynx-2_8_6dev_18:1.1.109.1
	MIRBSD_8:1.1.109.1.0.2
	MIRBSD_8_BASE:1.1.109.1
	lynx-2_8_6dev_16:1.1.109.1
	lynx:1.1.109;
locks; strict;
comment	@# @;


1.6
date	2012.08.23.18.36.09;	author tg;	state Exp;
branches;
next	1.5;
commitid	1005036781D23C1E744;

1.5
date	2010.12.19.19.22.25;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004D0E5B7B7150A62A;

1.4
date	2009.08.09.15.09.58;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004A7EE6D4601C9EC9;

1.3
date	2008.12.16.23.27.08;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004948395D7D988D96;

1.2
date	2007.08.03.15.55.07;	author tg;	state Exp;
branches;
next	1.1;
commitid	10046B34FD1734942EC;

1.1
date	2005.03.27.22.11.59;	author tg;	state Exp;
branches
	1.1.109.1;
next	;

1.1.109.1
date	2005.03.27.22.11.59;	author tg;	state Exp;
branches;
next	1.1.109.2;

1.1.109.2
date	2007.08.03.15.10.51;	author tg;	state Exp;
branches;
next	1.1.109.3;
commitid	10046B3450C0C128495;

1.1.109.3
date	2008.12.16.23.13.10;	author tg;	state Exp;
branches;
next	1.1.109.4;
commitid	100494835F965A87026;

1.1.109.4
date	2009.08.09.14.37.49;	author tg;	state Exp;
branches;
next	1.1.109.5;
commitid	1004A7EDF4952738297;

1.1.109.5
date	2010.12.19.18.12.42;	author tg;	state Exp;
branches;
next	1.1.109.6;
commitid	1004D0E4B24304015D1;

1.1.109.6
date	2012.08.23.17.48.15;	author tg;	state Exp;
branches;
next	;
commitid	10050366CBF479FD80F;


desc
@@


1.6
log
@fastmerge
@
text
@# $LynxId: makefile.in,v 1.31 2012/08/12 23:55:17 tom Exp $
# Make WWW under unix for a.n.other unix system (bsd)
# Use this as a template

# For W3 distribution, machine type for subdirectories
WWW_MACH	= Implementation
WWWINC		= $(top_srcdir)/WWW/Library/Implementation

ECHO =		@@DONT_ECHO_CC@@
LFLAGS =

prefix		= @@prefix@@
exec_prefix	= @@exec_prefix@@
datarootdir	= @@datarootdir@@
top_srcdir	= @@top_srcdir@@
srcdir		= @@srcdir@@
VPATH		= $(srcdir)

LYFLAGS		= # FIXME: set in parent makefile

CC		= @@CC@@
DEFS		= @@DEFS@@
EXTRA_CPPFLAGS	= @@EXTRA_CPPFLAGS@@
CPPFLAGS	= @@CPPFLAGS@@

AR		= @@AR@@
ARFLAGS		= @@ARFLAGS@@

RANLIB		= @@RANLIB@@

o		= .@@OBJEXT@@
x		= @@EXEEXT@@

INTLDIR_CPPFLAGS= @@INTLDIR_CPPFLAGS@@ -I$(top_srcdir)/intl

CPP		= @@CPP@@
CPPOPTS		= $(DEFS) $(LYFLAGS) \
		-I../../.. \
		-I../../../src \
		-I$(top_srcdir) \
		-I$(top_srcdir)/src \
		$(INTLDIR_CPPFLAGS) -I$(WWWINC) $(EXTRA_CPPFLAGS) $(CPPFLAGS)

LY_CFLAGS	= @@CFLAGS@@
CFLAGS		= $(CPPOPTS) $(LY_CFLAGS)

LINT		= @@LINT@@
LINTOPTS	=

CTAGS		= @@CTAGS@@

# Directory for installed binary:
BINDIR		= @@bindir@@

# Where is the W3 object library to be installed (not normally done)?
#_________________ OK if normal W3 distribution
# Where is the WWW source root?
WWW = $(top_srcdir)/WWW

#  Where should temporary (object) files go?
WTMP = ../..

# (Version.make)
VC = 2.14
#______________________________________________________________________
# (originally CommonMakefile)

#  If this env var is set to something else Some makes will use that instead
SHELL = @@CONFIG_SHELL@@

#	.h files are distributed but originally are made from the
#	self-documenting hypertext files.

.SUFFIXES: .h .html
.html.h:
#	- chmod +w $*.h
	www -w90 -na -to text/x-c $*.html > $*.h
#	chmod -w $*.h

# If this is actually run in a subdirectory,
#
# WWW = ../../..
# WWW = ../..	For [cernlib] build in this directory

CMN = $(WWW)/Library/Implementation/

# Where shall we put the objects and built library?

LOB = .

# Only needed if HTWAIS.c is to be compiled. Put into your Makefile.include
#  uncomment these and fill in WAISINC for adding direct wais access
#  to Lynx.
@@MAKE_WAIS@@HTWAIS_c = $(CMN)/HTWAIS.c
@@MAKE_WAIS@@HTWAIS_o = $(LOB)/HTWAIS$o
@@MAKE_WAIS@@WAIS = YES
#WAISINC = -I../../../../freeWAIS-0.202/ir
@@MAKE_WAIS@@WAISCFLAGS = -DDIRECT_WAIS
#

# add -DNEW_GATEWAY here for the new gateway config stuff
CFLAGS2 = $(CFLAGS) $(LYFLAGS) $(WAISCFLAGS) -I$(CMN) -DACCESS_AUTH

COMPILE	= $(ECHO) $(CC) $(CFLAGS2) -c

COMMON = $(LOB)/HTParse$o $(LOB)/HTAccess$o $(LOB)/HTTP$o \
	$(LOB)/HTFile$o	$(LOB)/HTBTree$o $(LOB)/HTFTP$o $(LOB)/HTTCP$o \
	$(LOB)/SGML$o $(LOB)/HTMLDTD$o $(LOB)/HTChunk$o \
	$(LOB)/HTPlain$o \
	$(LOB)/HTMLGen$o \
	$(LOB)/HTAtom$o $(LOB)/HTAnchor$o $(LOB)/HTStyle$o \
	$(LOB)/HTList$o $(LOB)/HTString$o \
	$(LOB)/HTRules$o $(LOB)/HTFormat$o  $(LOB)/HTMIME$o \
	$(LOB)/HTNews$o  $(LOB)/HTGopher$o \
	$(LOB)/HTTelnet$o $(LOB)/HTFinger$o $(LOB)/HTWSRC$o $(HTWAIS_o) \
	$(LOB)/HTAAUtil$o $(LOB)/HTAABrow$o \
	$(LOB)/HTGroup$o \
	$(LOB)/HTAAProt$o \
	$(LOB)/HTAssoc$o  $(LOB)/HTLex$o    $(LOB)/HTUU$o \

CFILES = $(CMN)HTParse.c $(CMN)HTAccess.c $(CMN)HTTP.c $(CMN)HTFile.c \
	$(CMN)HTBTree.c \
	$(CMN)HTFTP.c	$(CMN)HTTCP.c	  $(CMN)SGML.c \
	$(CMN)HTMLDTD.c \
	$(CMN)HTPlain.c	\
	$(CMN)HTMLGen.c \
	$(CMN)HTChunk.c $(CMN)HTAtom.c    $(CMN)HTAnchor.c $(CMN)HTStyle.c \
	$(CMN)HTList.c  $(CMN)HTString.c  $(CMN)HTRules.c \
	$(CMN)HTFormat.c $(CMN)HTMIME.c \
	$(CMN)HTNews.c  $(CMN)HTGopher.c  $(CMN)HTTelnet.c \
	$(CMN)HTFinger.c $(HTWAIS_c)	  $(CMN)HTWSRC.c \
	$(CMN)HTAABrow.c \
	$(CMN)HTGroup.c  \
	$(CMN)HTAAProt.c \
	$(CMN)HTAssoc.c  $(CMN)HTLex.c    $(CMN)HTUU.c

HFILES = $(CMN)HTParse.h $(CMN)HTAccess.h $(CMN)HTTP.h $(CMN)HTFile.h \
	$(CMN)HTBTree.h $(CMN)HTFTP.h $(CMN)HTTCP.h \
	$(CMN)SGML.h $(CMN)HTML.h $(CMN)HTMLDTD.h $(CMN)HTChunk.h \
	$(CMN)HTPlain.h	\
	$(CMN)HTFWriter.h	$(CMN)HTMLGen.h \
	$(CMN)HTStream.h \
	$(CMN)HTAtom.h $(CMN)HTAnchor.h $(CMN)HTStyle.h \
	$(CMN)HTList.h \
	$(CMN)HTString.h $(CMN)HTRules.h \
	$(CMN)HTFormat.h $(CMN)HTInit.h \
	$(CMN)HTMIME.h $(CMN)HTNews.h \
	$(CMN)HTGopher.h \
	$(CMN)HTUtils.h $(CMN)www_tcp.h $(CMN)HText.h \
	$(CMN)HTTelnet.h $(CMN)HTFinger.h \
	$(CMN)HTWAIS.h  $(CMN)HTWSRC.h \
	$(CMN)HTAABrow.h \
	$(CMN)HTGroup.h  \
	$(CMN)HTAAProt.h \
	$(CMN)HTAssoc.h  $(CMN)HTLex.h    $(CMN)HTUU.h

C_SRC		= $(COMMON:$o=.c)

all : $(LOB)/libwww.a

lint:
	$(LINT) $(LINTOPTS) $(CPPOPTS) $(C_SRC) 2>&1 |tee ../../../lint.libwww

.SUFFIXES: $o .i .h .html

.c$o:
	@@RULE_CC@@
	@@ECHO_CC@@$(CC) $(CPPOPTS) $(CFLAGS) -c $(srcdir)/$*.c

.c.i:
	@@RULE_CC@@
	@@ECHO_CC@@$(CPP) -C $(CPPOPTS) $(srcdir)/$*.c >$@@

depend :
	makedepend -fmakefile -- $(CFLAGS) -- $(CFILES)

#	Library
#
#  On SGI, ranlib is unnecessary and does not exist so we ignore errors
# for that step
$(LOB)/libwww.a : $(COMMON)
	$(AR) $(ARFLAGS) $(LOB)/libwww.a $(COMMON)
	-$(RANLIB) $(LOB)/libwww.a

#	Clean up everything generatable except final products
clean :
	rm -f core *.core *.leaks *.[oi] *.bak tags TAGS
	rm -f dtd_util$x
	rm -f $(LOB)/*$o

distclean : clean
	@@echo made $@@

tags:
	$(CTAGS) *.[ch]

#			Common code
#			-----------

$(LOB)/HTList$o : $(CMN)HTList.c $(CMN)HTUtils.h $(CMN)HTList.h
	$(COMPILE) $(CMN)HTList.c

$(LOB)/HTAnchor$o : $(CMN)HTAnchor.c $(CMN)HTUtils.h $(CMN)HTList.h
	$(COMPILE) $(CMN)HTAnchor.c

$(LOB)/HTFormat$o : $(CMN)HTFormat.c $(CMN)HTUtils.h $(CMN)HTList.h
	$(COMPILE) $(CMN)HTFormat.c

$(LOB)/HTMIME$o : $(CMN)HTMIME.c $(CMN)HTUtils.h $(CMN)HTList.h
	$(COMPILE) $(CMN)HTMIME.c

$(LOB)/HTNews$o : $(CMN)HTNews.c $(CMN)HTUtils.h $(CMN)HTList.h\
	 $(CMN)HTMLDTD.h
	$(COMPILE) $(CMN)HTNews.c

$(LOB)/HTGopher$o : $(CMN)HTGopher.c $(CMN)HTUtils.h $(CMN)HTList.h \
	 $(CMN)HTMLDTD.h
	$(COMPILE) $(CMN)HTGopher.c

$(LOB)/HTTelnet$o : $(CMN)HTTelnet.c $(CMN)HTUtils.h $(CMN)HTTelnet.h $(CMN)../../../userdefs.h
	$(COMPILE) $(CMN)HTTelnet.c

$(LOB)/HTFinger$o : $(CMN)HTFinger.c $(CMN)HTUtils.h $(CMN)HTList.h \
	$(CMN)HTMLDTD.h
	$(COMPILE) $(CMN)HTFinger.c

$(LOB)/HTStyle$o : $(CMN)HTStyle.c $(CMN)HTUtils.h
	$(COMPILE) $(CMN)HTStyle.c

$(LOB)/HTAtom$o : $(CMN)HTAtom.c $(CMN)HTUtils.h $(CMN)HTList.h
	$(COMPILE) $(CMN)HTAtom.c

$(LOB)/HTChunk$o : $(CMN)HTChunk.c $(CMN)HTUtils.h
	$(COMPILE) $(CMN)HTChunk.c

$(LOB)/HTString$o : $(CMN)HTString.c $(CMN)HTUtils.h $(CMN)Version.make
	$(COMPILE) -DVC=\"$(VC)\" $(CMN)HTString.c

$(LOB)/HTRules$o : $(CMN)HTRules.c $(CMN)HTUtils.h $(CMN)Version.make \
	 $(CMN)HTAAProt.h
	$(COMPILE) -DVC=\"$(VC)\" $(CMN)HTRules.c

$(LOB)/SGML$o : $(CMN)SGML.c $(CMN)HTUtils.h $(CMN)UCAux.h
	$(COMPILE) $(CMN)SGML.c

$(LOB)/HTMLGen$o : $(CMN)HTMLGen.c $(CMN)HTUtils.h $(CMN)HTMLDTD.h
	$(COMPILE) $(CMN)HTMLGen.c

$(LOB)/HTMLDTD$o : $(CMN)HTMLDTD.c $(CMN)SGML.h
	$(COMPILE) $(CMN)HTMLDTD.c

$(LOB)/HTPlain$o : $(CMN)HTPlain.c $(CMN)HTPlain.h $(CMN)HTStream.h \
	 $(CMN)UCAux.h
	$(COMPILE) $(CMN)HTPlain.c

$(LOB)/HTWAIS$o : $(CMN)HTWAIS.c $(CMN)HTUtils.h $(CMN)HTList.h
	$(COMPILE) $(WAISINC) $(CMN)HTWAIS.c

$(LOB)/HTWSRC$o : $(CMN)HTWSRC.c $(CMN)HTUtils.h $(CMN)HTList.h
	$(COMPILE) $(CMN)HTWSRC.c

#	Access Authorization

$(LOB)/HTAAUtil$o : $(CMN)HTAAUtil.c $(CMN)HTAAUtil.h \
	 $(CMN)HTUtils.h $(CMN)HTString.h
	$(COMPILE) $(CMN)HTAAUtil.c

$(LOB)/HTGroup$o : $(CMN)HTGroup.c $(CMN)HTGroup.h \
	 $(CMN)HTAAUtil.h \
	 $(CMN)HTAssoc.h $(CMN)HTLex.h
	$(COMPILE) $(CMN)HTGroup.c

$(LOB)/HTAABrow$o : $(CMN)HTAABrow.c $(CMN)HTAABrow.h \
	 $(CMN)HTAAUtil.h $(CMN)HTUU.h \
	 $(CMN)HTUtils.h $(CMN)HTString.h \
	 $(CMN)HTParse.h $(CMN)HTList.h \
	 $(CMN)HTAssoc.h
	$(COMPILE) $(CMN)HTAABrow.c

$(LOB)/HTAAProt$o : $(CMN)HTAAProt.c $(CMN)HTAAProt.h \
	 $(CMN)HTUtils.h $(CMN)HTAAUtil.h \
	 $(CMN)HTAssoc.h $(CMN)HTLex.h
	$(COMPILE) $(CMN)HTAAProt.c

$(LOB)/HTAssoc$o : $(CMN)HTAssoc.c $(CMN)HTAssoc.h \
	$(CMN)HTUtils.h $(CMN)HTString.h $(CMN)HTList.h
	$(COMPILE) $(CMN)HTAssoc.c

$(LOB)/HTLex$o : $(CMN)HTLex.c $(CMN)HTLex.h $(CMN)HTUtils.h
	$(COMPILE) $(CMN)HTLex.c

$(LOB)/HTUU$o : $(CMN)HTUU.c $(CMN)HTUU.h $(CMN)HTUtils.h
	$(COMPILE) $(CMN)HTUU.c


#	Communications & Files

$(LOB)/HTTP$o : $(CMN)HTTP.c $(CMN)HTUtils.h $(CMN)HTAABrow.h
	$(COMPILE) $(CMN)HTTP.c

$(LOB)/HTTCP$o : $(CMN)HTTCP.c $(CMN)HTUtils.h
	$(COMPILE) $(CMN)HTTCP.c

$(LOB)/HTFile$o : $(CMN)HTFile.c $(CMN)HTUtils.h \
	 $(CMN)HTMLDTD.h
	$(COMPILE) $(CMN)HTFile.c

$(LOB)/HTBTree$o : $(CMN)HTBTree.c $(CMN)HTUtils.h
	$(COMPILE) $(CMN)HTBTree.c

$(LOB)/HTFTP$o : $(CMN)HTFTP.c $(CMN)HTUtils.h
	$(COMPILE) $(CMN)HTFTP.c

$(LOB)/HTAccess$o : $(CMN)HTAccess.c $(CMN)HTUtils.h
	$(COMPILE) $(CMN)HTAccess.c

$(LOB)/HTParse$o : $(CMN)HTParse.c $(CMN)HTUtils.h
	$(COMPILE) $(CMN)HTParse.c

$(LOB)/HTVMS_WaisUI$o : $(CMN)HTVMS_WaisUI.c $(CMN)HTUtils.h
	$(COMPILE) $(CMN)HTVMS_WaisUI.c

$(LOB)/HTDOS$o : $(CMN)HTDOS.c $(CMN)HTUtils.h
	$(COMPILE) $(CMN)HTDOS.c

# Utilities
$(LOB)/dtd_util$o : $(CMN)dtd_util.c $(CMN)HTUtils.h
	$(COMPILE) $(CMN)dtd_util.c

DTD_UTIL = $(LOB)/dtd_util$o $(LOB)/HTMLDTD$o

sources: dtd_util$x src0_HTMLDTD.txt src1_HTMLDTD.txt
	-rm -f *_HTMLDTD.h
	./dtd_util$x -l src0_HTMLDTD.txt -s -c -o src0_HTMLDTD.h
	./dtd_util$x -l src1_HTMLDTD.txt -t -c -o src1_HTMLDTD.h
	./dtd_util$x -l src0_HTMLDTD.txt -s -h -o hdr_HTMLDTD.h

dtd_util$x: $(DTD_UTIL)
	$(CC) $(CC_OPTS) $(LDFLAGS) -o $@@  $(DTD_UTIL) $(LIBS)

check: dtd_util$x
	@@echo "** comparing builtin src0_HTMLDTD.txt"
	./dtd_util$x >HTMLDTD.log
	-diff -u src0_HTMLDTD.txt HTMLDTD.log

	@@echo "** comparing reloaded src0_HTMLDTD.txt"
	./dtd_util$x -l src0_HTMLDTD.txt >HTMLDTD.log
	-diff -u src0_HTMLDTD.txt HTMLDTD.log

	@@echo "** comparing header generated from builtin"
	./dtd_util$x -s -h -o HTMLDTD.log
	-diff -u hdr_HTMLDTD.h HTMLDTD.log
	./dtd_util$x -t -h -o HTMLDTD.log
	-diff -u hdr_HTMLDTD.h HTMLDTD.log

	@@echo "** comparing header generated by load"
	./dtd_util$x -s -h -o HTMLDTD.log -l src0_HTMLDTD.txt
	-diff -u hdr_HTMLDTD.h HTMLDTD.log
	./dtd_util$x -t -h -o HTMLDTD.log -l src1_HTMLDTD.txt
	-diff -u hdr_HTMLDTD.h HTMLDTD.log

	@@echo "** comparing strict source generated from builtin"
	./dtd_util$x -s -c -o HTMLDTD.log
	-diff -u src0_HTMLDTD.h HTMLDTD.log

	@@echo "** comparing strict source generated by load"
	./dtd_util$x -s -c -o HTMLDTD.log -l src0_HTMLDTD.txt
	-diff -u src0_HTMLDTD.h HTMLDTD.log

	@@echo "** comparing tagsoup source generated from builtin"
	./dtd_util$x -t -c -o HTMLDTD.log
	-diff -u src1_HTMLDTD.h HTMLDTD.log

	@@echo "** comparing tagsoup source generated by load"
	./dtd_util$x -t -c -o HTMLDTD.log -l src1_HTMLDTD.txt
	-diff -u src1_HTMLDTD.h HTMLDTD.log

# DO NOT DELETE THIS LINE -- make depend depends on it.
@


1.5
log
@fastmerge; break since I can’t get autoconf-2.13 to work and it’s late
@
text
@d1 1
a1 1
# $LynxId: makefile.in,v 1.30 2010/09/19 19:29:35 tom Exp $
d14 1
@


1.4
log
@automerge
@
text
@d1 1
a1 1
# $LynxId: makefile.in,v 1.25 2009/04/15 23:24:33 tom Exp $
d45 1
d47 3
d93 3
a95 3
#HTWAIS_c = $(CMN)/HTWAIS.c
#HTWAIS_o = $(LOB)/HTWAIS$o
#WAIS = YES
d97 1
a97 1
#WAISCFLAGS = -DDIRECT_WAIS
d156 2
d161 1
a161 1
	$(LINT) $(LINTOPTS) $(CPPOPTS) $(srcdir)/../Implementation/*.c  > ../../../lint.libwww
d166 1
a166 1
@@RULE_CC@@
d170 1
a170 1
@@RULE_CC@@
d194 1
a194 1
	ctags *.[ch]
@


1.3
log
@fastmerge
@
text
@d1 1
a1 1
# $LynxId: makefile.in,v 1.19 2008/09/17 01:14:02 tom Exp $
d25 5
a65 2
RANLIB	= @@RANLIB@@

d175 1
a175 1
	@@AR@@ @@AR_OPTS@@ $(LOB)/libwww.a $(COMMON)
d325 1
a325 1
sources: dtd_util$x
d327 3
a329 3
	./dtd_util$x -s -c -o src0_HTMLDTD.h
	./dtd_util$x -t -c -o src1_HTMLDTD.h
	./dtd_util$x -s -h -o hdr_HTMLDTD.h
d334 37
@


1.2
log
@finish upgrade
@
text
@d1 1
a1 1
# $LynxId: makefile.in,v 1.14 2007/05/23 00:57:38 tom Exp $
d26 1
d178 1
d181 3
d190 1
a190 1
$(LOB)/HTList$o : $(OE) $(CMN)HTList.c $(CMN)HTUtils.h $(CMN)HTList.h
d193 1
a193 1
$(LOB)/HTAnchor$o : $(OE) $(CMN)HTAnchor.c $(CMN)HTUtils.h $(CMN)HTList.h
d196 1
a196 1
$(LOB)/HTFormat$o : $(OE) $(CMN)HTFormat.c $(CMN)HTUtils.h $(CMN)HTList.h
d199 1
a199 1
$(LOB)/HTMIME$o : $(OE) $(CMN)HTMIME.c $(CMN)HTUtils.h $(CMN)HTList.h
d202 1
a202 1
$(LOB)/HTNews$o : $(OE) $(CMN)HTNews.c $(CMN)HTUtils.h $(CMN)HTList.h\
d206 1
a206 1
$(LOB)/HTGopher$o : $(OE) $(CMN)HTGopher.c $(CMN)HTUtils.h $(CMN)HTList.h \
d210 1
a210 1
$(LOB)/HTTelnet$o : $(OE) $(CMN)HTTelnet.c $(CMN)HTUtils.h $(CMN)HTTelnet.h $(CMN)../../../userdefs.h
d213 1
a213 1
$(LOB)/HTFinger$o : $(OE) $(CMN)HTFinger.c $(CMN)HTUtils.h $(CMN)HTList.h \
d217 1
a217 1
$(LOB)/HTStyle$o : $(OE) $(CMN)HTStyle.c $(CMN)HTUtils.h
d220 1
a220 1
$(LOB)/HTAtom$o : $(OE) $(CMN)HTAtom.c $(CMN)HTUtils.h $(CMN)HTList.h
d223 1
a223 1
$(LOB)/HTChunk$o : $(OE) $(CMN)HTChunk.c $(CMN)HTUtils.h
d226 1
a226 1
$(LOB)/HTString$o : $(OE) $(CMN)HTString.c $(CMN)HTUtils.h $(CMN)Version.make
d229 1
a229 1
$(LOB)/HTRules$o : $(OE) $(CMN)HTRules.c $(CMN)HTUtils.h $(CMN)Version.make \
d233 1
a233 1
$(LOB)/SGML$o : $(OE) $(CMN)SGML.c $(CMN)HTUtils.h $(CMN)UCAux.h
d236 1
a236 1
$(LOB)/HTMLGen$o : $(OE) $(CMN)HTMLGen.c $(CMN)HTUtils.h $(CMN)HTMLDTD.h
d239 1
a239 1
$(LOB)/HTMLDTD$o : $(OE) $(CMN)HTMLDTD.c $(CMN)SGML.h
d242 1
a242 1
$(LOB)/HTPlain$o : $(OE) $(CMN)HTPlain.c $(CMN)HTPlain.h $(CMN)HTStream.h \
d246 1
a246 1
$(LOB)/HTWAIS$o : $(OE) $(CMN)HTWAIS.c $(CMN)HTUtils.h $(CMN)HTList.h
d249 1
a249 1
$(LOB)/HTWSRC$o : $(OE) $(CMN)HTWSRC.c $(CMN)HTUtils.h $(CMN)HTList.h
d254 1
a254 1
$(LOB)/HTAAUtil$o : $(OE) $(CMN)HTAAUtil.c $(CMN)HTAAUtil.h \
d258 1
a258 1
$(LOB)/HTGroup$o : $(OE) $(CMN)HTGroup.c $(CMN)HTGroup.h \
d263 1
a263 1
$(LOB)/HTAABrow$o : $(OE) $(CMN)HTAABrow.c $(CMN)HTAABrow.h \
d270 1
a270 1
$(LOB)/HTAAProt$o : $(OE) $(CMN)HTAAProt.c $(CMN)HTAAProt.h \
d275 1
a275 1
$(LOB)/HTAssoc$o : $(OE) $(CMN)HTAssoc.c $(CMN)HTAssoc.h \
d279 1
a279 1
$(LOB)/HTLex$o : $(OE) $(CMN)HTLex.c $(CMN)HTLex.h $(CMN)HTUtils.h
d282 1
a282 1
$(LOB)/HTUU$o : $(OE) $(CMN)HTUU.c $(CMN)HTUU.h $(CMN)HTUtils.h
d288 1
a288 1
$(LOB)/HTTP$o : $(OE) $(CMN)HTTP.c $(CMN)HTUtils.h $(CMN)HTAABrow.h
d291 1
a291 1
$(LOB)/HTTCP$o : $(OE) $(CMN)HTTCP.c $(CMN)HTUtils.h
d294 1
a294 1
$(LOB)/HTFile$o : $(OE) $(CMN)HTFile.c $(CMN)HTUtils.h \
d298 1
a298 1
$(LOB)/HTBTree$o : $(OE) $(CMN)HTBTree.c $(CMN)HTUtils.h
d301 1
a301 1
$(LOB)/HTFTP$o : $(OE) $(CMN)HTFTP.c $(CMN)HTUtils.h
d304 1
a304 1
$(LOB)/HTAccess$o : $(OE)  $(CMN)HTAccess.c $(CMN)HTUtils.h
d307 1
a307 1
$(LOB)/HTParse$o : $(OE) $(CMN)HTParse.c $(CMN)HTUtils.h
d310 1
a310 1
$(LOB)/HTVMS_WaisUI$o : $(OE) $(CMN)HTVMS_WaisUI.c $(CMN)HTUtils.h
d313 1
a313 1
$(LOB)/HTDOS$o : $(OE) $(CMN)HTDOS.c $(CMN)HTUtils.h
d316 15
@


1.1
log
@Initial revision
@
text
@d1 3
a3 2
#  Make WWW under unix for a.n.other unix system (bsd)
#   Use this as a template
d30 1
a30 1
CPPOPTS		= $(DEFS) $(EXTRA_CPPFLAGS) $(CPPFLAGS) $(LYFLAGS) \
d35 1
a35 1
		$(INTLDIR_CPPFLAGS) -I$(WWWINC)
a110 1
	$(LOB)/HTDOS$o
@


1.1.109.1
log
@Lynx 2.8.6dev.11h (pre-patch) minus
* lib
* po
* scripts
@
text
@@


1.1.109.2
log
@Import Lynx 2.8.7dev.7 into base as well
@
text
@d1 2
a2 3
# $LynxId: makefile.in,v 1.14 2007/05/23 00:57:38 tom Exp $
# Make WWW under unix for a.n.other unix system (bsd)
# Use this as a template
d29 1
a29 1
CPPOPTS		= $(DEFS) $(LYFLAGS) \
d34 1
a34 1
		$(INTLDIR_CPPFLAGS) -I$(WWWINC) $(EXTRA_CPPFLAGS) $(CPPFLAGS)
@


1.1.109.3
log
@Import Lynx 2.8.7dev.11a via eMail from Tom Dickey:
Message-ID: <20081215010313.GA8373@@invisible-island.net>
Message-ID: <20081216012408.GA15364@@invisible-island.net>
@
text
@d1 1
a1 1
# $LynxId: makefile.in,v 1.19 2008/09/17 01:14:02 tom Exp $
a25 1
x		= @@EXEEXT@@
a177 1
	rm -f dtd_util$x
a179 3
distclean : clean
	@@echo made $@@

d186 1
a186 1
$(LOB)/HTList$o : $(CMN)HTList.c $(CMN)HTUtils.h $(CMN)HTList.h
d189 1
a189 1
$(LOB)/HTAnchor$o : $(CMN)HTAnchor.c $(CMN)HTUtils.h $(CMN)HTList.h
d192 1
a192 1
$(LOB)/HTFormat$o : $(CMN)HTFormat.c $(CMN)HTUtils.h $(CMN)HTList.h
d195 1
a195 1
$(LOB)/HTMIME$o : $(CMN)HTMIME.c $(CMN)HTUtils.h $(CMN)HTList.h
d198 1
a198 1
$(LOB)/HTNews$o : $(CMN)HTNews.c $(CMN)HTUtils.h $(CMN)HTList.h\
d202 1
a202 1
$(LOB)/HTGopher$o : $(CMN)HTGopher.c $(CMN)HTUtils.h $(CMN)HTList.h \
d206 1
a206 1
$(LOB)/HTTelnet$o : $(CMN)HTTelnet.c $(CMN)HTUtils.h $(CMN)HTTelnet.h $(CMN)../../../userdefs.h
d209 1
a209 1
$(LOB)/HTFinger$o : $(CMN)HTFinger.c $(CMN)HTUtils.h $(CMN)HTList.h \
d213 1
a213 1
$(LOB)/HTStyle$o : $(CMN)HTStyle.c $(CMN)HTUtils.h
d216 1
a216 1
$(LOB)/HTAtom$o : $(CMN)HTAtom.c $(CMN)HTUtils.h $(CMN)HTList.h
d219 1
a219 1
$(LOB)/HTChunk$o : $(CMN)HTChunk.c $(CMN)HTUtils.h
d222 1
a222 1
$(LOB)/HTString$o : $(CMN)HTString.c $(CMN)HTUtils.h $(CMN)Version.make
d225 1
a225 1
$(LOB)/HTRules$o : $(CMN)HTRules.c $(CMN)HTUtils.h $(CMN)Version.make \
d229 1
a229 1
$(LOB)/SGML$o : $(CMN)SGML.c $(CMN)HTUtils.h $(CMN)UCAux.h
d232 1
a232 1
$(LOB)/HTMLGen$o : $(CMN)HTMLGen.c $(CMN)HTUtils.h $(CMN)HTMLDTD.h
d235 1
a235 1
$(LOB)/HTMLDTD$o : $(CMN)HTMLDTD.c $(CMN)SGML.h
d238 1
a238 1
$(LOB)/HTPlain$o : $(CMN)HTPlain.c $(CMN)HTPlain.h $(CMN)HTStream.h \
d242 1
a242 1
$(LOB)/HTWAIS$o : $(CMN)HTWAIS.c $(CMN)HTUtils.h $(CMN)HTList.h
d245 1
a245 1
$(LOB)/HTWSRC$o : $(CMN)HTWSRC.c $(CMN)HTUtils.h $(CMN)HTList.h
d250 1
a250 1
$(LOB)/HTAAUtil$o : $(CMN)HTAAUtil.c $(CMN)HTAAUtil.h \
d254 1
a254 1
$(LOB)/HTGroup$o : $(CMN)HTGroup.c $(CMN)HTGroup.h \
d259 1
a259 1
$(LOB)/HTAABrow$o : $(CMN)HTAABrow.c $(CMN)HTAABrow.h \
d266 1
a266 1
$(LOB)/HTAAProt$o : $(CMN)HTAAProt.c $(CMN)HTAAProt.h \
d271 1
a271 1
$(LOB)/HTAssoc$o : $(CMN)HTAssoc.c $(CMN)HTAssoc.h \
d275 1
a275 1
$(LOB)/HTLex$o : $(CMN)HTLex.c $(CMN)HTLex.h $(CMN)HTUtils.h
d278 1
a278 1
$(LOB)/HTUU$o : $(CMN)HTUU.c $(CMN)HTUU.h $(CMN)HTUtils.h
d284 1
a284 1
$(LOB)/HTTP$o : $(CMN)HTTP.c $(CMN)HTUtils.h $(CMN)HTAABrow.h
d287 1
a287 1
$(LOB)/HTTCP$o : $(CMN)HTTCP.c $(CMN)HTUtils.h
d290 1
a290 1
$(LOB)/HTFile$o : $(CMN)HTFile.c $(CMN)HTUtils.h \
d294 1
a294 1
$(LOB)/HTBTree$o : $(CMN)HTBTree.c $(CMN)HTUtils.h
d297 1
a297 1
$(LOB)/HTFTP$o : $(CMN)HTFTP.c $(CMN)HTUtils.h
d300 1
a300 1
$(LOB)/HTAccess$o : $(CMN)HTAccess.c $(CMN)HTUtils.h
d303 1
a303 1
$(LOB)/HTParse$o : $(CMN)HTParse.c $(CMN)HTUtils.h
d306 1
a306 1
$(LOB)/HTVMS_WaisUI$o : $(CMN)HTVMS_WaisUI.c $(CMN)HTUtils.h
d309 1
a309 1
$(LOB)/HTDOS$o : $(CMN)HTDOS.c $(CMN)HTUtils.h
a311 15
# Utilities
$(LOB)/dtd_util$o : $(CMN)dtd_util.c $(CMN)HTUtils.h
	$(COMPILE) $(CMN)dtd_util.c

DTD_UTIL = $(LOB)/dtd_util$o $(LOB)/HTMLDTD$o

sources: dtd_util$x
	-rm -f *_HTMLDTD.h
	./dtd_util$x -s -c -o src0_HTMLDTD.h
	./dtd_util$x -t -c -o src1_HTMLDTD.h
	./dtd_util$x -s -h -o hdr_HTMLDTD.h

dtd_util$x: $(DTD_UTIL)
	$(CC) $(CC_OPTS) $(LDFLAGS) -o $@@  $(DTD_UTIL) $(LIBS)

@


1.1.109.4
log
@Woohoo, there’s a new Lynx release!
@
text
@d1 1
a1 1
# $LynxId: makefile.in,v 1.25 2009/04/15 23:24:33 tom Exp $
a24 5
AR		= @@AR@@
ARFLAGS		= @@ARFLAGS@@

RANLIB		= @@RANLIB@@

d61 2
d173 1
a173 1
	$(AR) $(ARFLAGS) $(LOB)/libwww.a $(COMMON)
d323 1
a323 1
sources: dtd_util$x src0_HTMLDTD.txt src1_HTMLDTD.txt
d325 3
a327 3
	./dtd_util$x -l src0_HTMLDTD.txt -s -c -o src0_HTMLDTD.h
	./dtd_util$x -l src1_HTMLDTD.txt -t -c -o src1_HTMLDTD.h
	./dtd_util$x -l src0_HTMLDTD.txt -s -h -o hdr_HTMLDTD.h
a331 37
check: dtd_util$x
	@@echo "** comparing builtin src0_HTMLDTD.txt"
	./dtd_util$x >HTMLDTD.log
	-diff -u src0_HTMLDTD.txt HTMLDTD.log

	@@echo "** comparing reloaded src0_HTMLDTD.txt"
	./dtd_util$x -l src0_HTMLDTD.txt >HTMLDTD.log
	-diff -u src0_HTMLDTD.txt HTMLDTD.log

	@@echo "** comparing header generated from builtin"
	./dtd_util$x -s -h -o HTMLDTD.log
	-diff -u hdr_HTMLDTD.h HTMLDTD.log
	./dtd_util$x -t -h -o HTMLDTD.log
	-diff -u hdr_HTMLDTD.h HTMLDTD.log

	@@echo "** comparing header generated by load"
	./dtd_util$x -s -h -o HTMLDTD.log -l src0_HTMLDTD.txt
	-diff -u hdr_HTMLDTD.h HTMLDTD.log
	./dtd_util$x -t -h -o HTMLDTD.log -l src1_HTMLDTD.txt
	-diff -u hdr_HTMLDTD.h HTMLDTD.log

	@@echo "** comparing strict source generated from builtin"
	./dtd_util$x -s -c -o HTMLDTD.log
	-diff -u src0_HTMLDTD.h HTMLDTD.log

	@@echo "** comparing strict source generated by load"
	./dtd_util$x -s -c -o HTMLDTD.log -l src0_HTMLDTD.txt
	-diff -u src0_HTMLDTD.h HTMLDTD.log

	@@echo "** comparing tagsoup source generated from builtin"
	./dtd_util$x -t -c -o HTMLDTD.log
	-diff -u src1_HTMLDTD.h HTMLDTD.log

	@@echo "** comparing tagsoup source generated by load"
	./dtd_util$x -t -c -o HTMLDTD.log -l src1_HTMLDTD.txt
	-diff -u src1_HTMLDTD.h HTMLDTD.log

@


1.1.109.5
log
@Import lynx-current
@
text
@d1 1
a1 1
# $LynxId: makefile.in,v 1.30 2010/09/19 19:29:35 tom Exp $
a44 1

a45 3
LINTOPTS	=

CTAGS		= @@CTAGS@@
d89 3
a91 3
@@MAKE_WAIS@@HTWAIS_c = $(CMN)/HTWAIS.c
@@MAKE_WAIS@@HTWAIS_o = $(LOB)/HTWAIS$o
@@MAKE_WAIS@@WAIS = YES
d93 1
a93 1
@@MAKE_WAIS@@WAISCFLAGS = -DDIRECT_WAIS
a152 2
C_SRC		= $(COMMON:$o=.c)

d156 1
a156 1
	$(LINT) $(LINTOPTS) $(CPPOPTS) $(C_SRC) 2>&1 |tee ../../../lint.libwww
d161 1
a161 1
	@@RULE_CC@@
d165 1
a165 1
	@@RULE_CC@@
d189 1
a189 1
	$(CTAGS) *.[ch]
@


1.1.109.6
log
@lynx2.8.8dev.14
@
text
@d1 1
a1 1
# $LynxId: makefile.in,v 1.31 2012/08/12 23:55:17 tom Exp $
a13 1
datarootdir	= @@datarootdir@@
@


