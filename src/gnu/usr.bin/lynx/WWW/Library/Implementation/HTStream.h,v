head	1.1;
branch	1.1.109;
access;
symbols
	lynx-2_8_8dev_16:1.1.109.3
	lynx-2_8_8dev_15e:1.1.109.3
	lynx-2_8_8dev_15:1.1.109.3
	lynx-2_8_8dev_14:1.1.109.3
	lynx-2_8_8dev_12:1.1.109.3
	lynx-2_8_8dev_11:1.1.109.3
	lynx-2_8_8dev_10a:1.1.109.3
	lynx-2_8_8dev_7a:1.1.109.2
	lynx-2_8_8dev_7:1.1.109.2
	lynx-2_8_7rel_1:1.1.109.1
	lynx-2_8_7dev_12:1.1.109.1
	lynx-2_8_7dev_11a:1.1.109.1
	MIRBSD_10:1.1.109.1.0.4
	MIRBSD_10_BASE:1.1.109.1
	lynx-2_8_7dev_8:1.1.109.1
	lynx-2_8_7dev_7:1.1.109.1
	lynx-2_8_7dev_5:1.1.109.1
	lynx-2_8_7dev_2:1.1.109.1
	lynx-2_8_6pre_5:1.1.109.1
	lynx-2_8_6pre_4:1.1.109.1
	lynx-2_8_6pre_3:1.1.109.1
	MIRBSD_9_BASE:1.1.109.1
	lynx-2_8_6dev_18c:1.1.109.1
	lynx-2_8_6dev_18:1.1.109.1
	MIRBSD_8:1.1.109.1.0.2
	MIRBSD_8_BASE:1.1.109.1
	lynx-2_8_6dev_16:1.1.109.1
	lynx:1.1.109;
locks; strict;
comment	@ * @;


1.1
date	2005.03.27.22.11.57;	author tg;	state Exp;
branches
	1.1.109.1;
next	;

1.1.109.1
date	2005.03.27.22.11.57;	author tg;	state Exp;
branches;
next	1.1.109.2;

1.1.109.2
date	2010.12.19.18.12.41;	author tg;	state Exp;
branches;
next	1.1.109.3;
commitid	1004D0E4B24304015D1;

1.1.109.3
date	2012.02.19.18.28.35;	author tg;	state Exp;
branches;
next	;
commitid	1004F413EF328BF0E26;


desc
@@


1.1
log
@Initial revision
@
text
@/*                                                      The Stream class definition -- libwww
                                 STREAM OBJECT DEFINITION

   A Stream object is something which accepts a stream of text.

   The creation methods will vary on the type of Stream Object.  All creation
   methods return a pointer to the stream type below.

   As you can see, but the methods used to write to the stream and close it are
   pointed to be the object itself.

 */
#ifndef HTSTREAM_H
#define HTSTREAM_H

#ifndef HTUTILS_H
#include <HTUtils.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif
    typedef struct _HTStream HTStream;

/*

   These are the common methods of all streams.  They should be
   self-explanatory.

 */
    typedef struct _HTStreamClass {

	const char *name;	/* Just for diagnostics */

	void (*_free) (HTStream *me);

	void (*_abort) (HTStream *me, HTError e);

	void (*put_character) (HTStream *me, char ch);

	void (*put_string) (HTStream *me, const char *str);

	void (*put_block) (HTStream *me, const char *str, int len);

    } HTStreamClass;

/*

  Generic Error Stream

   The Error stream simply signals an error on all output methods.
   This can be used to stop a stream as soon as data arrives, for
   example from the network.

 */
    extern HTStream *HTErrorStream(void);

#ifdef __cplusplus
}
#endif
#endif				/* HTSTREAM_H */
@


1.1.109.1
log
@Lynx 2.8.6dev.11h (pre-patch) minus
* lib
* po
* scripts
@
text
@@


1.1.109.2
log
@Import lynx-current
@
text
@d1 1
a1 4
/*
 * $LynxId: HTStream.h,v 1.15 2010/09/25 11:42:48 tom Exp $
 *
 *                                                      The Stream class definition -- libwww
d39 1
a39 1
	void (*put_character) (HTStream *me, int ch);
@


1.1.109.3
log
@Import Lynx 2.8.8dev.10 plus dev.10a patch from invisible-island plus
fix for “lynx -help” output by KIHARA Hideto, by import-3rdpty,v 1.43
@
text
@d2 1
a2 1
 * $LynxId: HTStream.h,v 1.16 2011/06/11 12:08:40 tom Exp $
a49 5
#ifndef HTSTREAM_INTERNAL
    struct _HTStream {
	HTStreamClass *isa;
    };
#endif
@


