head	1.1;
branch	1.1.109;
access;
symbols
	lynx-2_8_8dev_16:1.1.109.7
	lynx-2_8_8dev_15e:1.1.109.7
	lynx-2_8_8dev_15:1.1.109.7
	lynx-2_8_8dev_14:1.1.109.7
	lynx-2_8_8dev_12:1.1.109.7
	lynx-2_8_8dev_11:1.1.109.7
	lynx-2_8_8dev_10a:1.1.109.7
	lynx-2_8_8dev_7a:1.1.109.6
	lynx-2_8_8dev_7:1.1.109.6
	lynx-2_8_7rel_1:1.1.109.5
	lynx-2_8_7dev_12:1.1.109.4
	lynx-2_8_7dev_11a:1.1.109.3
	MIRBSD_10:1.1.109.3.0.2
	MIRBSD_10_BASE:1.1.109.3
	lynx-2_8_7dev_8:1.1.109.3
	lynx-2_8_7dev_7:1.1.109.3
	lynx-2_8_7dev_5:1.1.109.3
	lynx-2_8_7dev_2:1.1.109.2
	lynx-2_8_6pre_5:1.1.109.2
	lynx-2_8_6pre_4:1.1.109.2
	lynx-2_8_6pre_3:1.1.109.2
	MIRBSD_9_BASE:1.1.109.2
	lynx-2_8_6dev_18c:1.1.109.2
	lynx-2_8_6dev_18:1.1.109.2
	MIRBSD_8:1.1.109.2.0.2
	MIRBSD_8_BASE:1.1.109.2
	lynx-2_8_6dev_16:1.1.109.2
	lynx:1.1.109;
locks; strict;
comment	@ * @;


1.1
date	2005.03.27.22.11.59;	author tg;	state Exp;
branches
	1.1.109.1;
next	;

1.1.109.1
date	2005.03.27.22.11.59;	author tg;	state Exp;
branches;
next	1.1.109.2;

1.1.109.2
date	2005.10.21.21.33.55;	author tg;	state Exp;
branches;
next	1.1.109.3;
commitid	2f9543595ec47e83;

1.1.109.3
date	2007.05.19.22.29.52;	author tg;	state Exp;
branches;
next	1.1.109.4;
commitid	100464F7A1519624932;

1.1.109.4
date	2009.01.18.19.31.26;	author tg;	state Exp;
branches;
next	1.1.109.5;
commitid	1004973839C3B701938;

1.1.109.5
date	2009.08.09.14.37.49;	author tg;	state Exp;
branches;
next	1.1.109.6;
commitid	1004A7EDF4952738297;

1.1.109.6
date	2010.12.19.18.12.42;	author tg;	state Exp;
branches;
next	1.1.109.7;
commitid	1004D0E4B24304015D1;

1.1.109.7
date	2012.02.19.18.28.49;	author tg;	state Exp;
branches;
next	;
commitid	1004F413EF328BF0E26;


desc
@@


1.1
log
@Initial revision
@
text
@#ifndef UCMAP_H
#define UCMAP_H

#ifndef HTUTILS_H
#include <HTUtils.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif
    typedef long UCode_t;

    extern int UCTransUniChar(UCode_t unicode,
			      int charset_out);
    extern int UCTransUniCharStr(char *outbuf,
				 int buflen,
				 UCode_t unicode,
				 int charset_out,
				 int chk_single_flag);
    extern int UCTransChar(char ch_in,
			   int charset_in,
			   int charset_out);
    extern int UCReverseTransChar(char ch_out,
				  int charset_in,
				  int charset_out);
    extern int UCTransCharStr(char *outbuf,
			      int buflen,
			      char ch_in,
			      int charset_in,
			      int charset_out,
			      int chk_single_flag);
    extern UCode_t UCTransToUni(char ch_in,
				int charset_in);
    extern int UCGetRawUniMode_byLYhndl(int i);
    extern int UCGetLYhndl_byMIME(const char *p);	/* returns -1 if name not recognized */
    extern int safeUCGetLYhndl_byMIME(const char *p);	/* returns LATIN1 if name not recognized */

#ifdef EXP_LOCALE_CHARSET
    extern void LYFindLocaleCharset(void);
#endif

    extern int UCLYhndl_for_unspec;
    extern int UCLYhndl_for_unrec;
    extern int UCLYhndl_HTFile_for_unspec;
    extern int UCLYhndl_HTFile_for_unrec;

/* easy to type: */
    extern int LATIN1;		/* UCGetLYhndl_byMIME("iso-8859-1") */
    extern int US_ASCII;	/* UCGetLYhndl_byMIME("us-ascii")   */
    extern int UTF8_handle;	/* UCGetLYhndl_byMIME("utf-8")      */

#undef TRANSPARENT		/* defined on Solaris in <sys/stream.h> */
    extern int TRANSPARENT;	/* UCGetLYhndl_byMIME("x-transparent")  */

/*
In general, Lynx translates letters from document charset to display charset.
If document charset is not specified or not recognized by Lynx, we fall back
to different assumptions below, read also lynx.cfg for info.

UCLYhndl_for_unspec -  assume this as charset for documents that don't
                       specify a charset parameter in HTTP headers or via META
                       this corresponds to "assume_charset"

UCLYhndl_HTFile_for_unspec -  assume this as charset of local file
                       this corresponds to "assume_local_charset"

UCLYhndl_for_unrec  -  in case a charset parameter is not recognized;
                       this corresponds to "assume_unrec_charset"

UCLYhndl_HTFile_for_unrec  - the same but only for local files,
                             currently not used.

current_char_set  -	this corresponds to "display charset",
			declared in LYCharSets.c and really important.

All external charset information is available in so called MIME format.
For internal needs Lynx uses charset handlers as integers
from UCGetLYhndl_byMIME().  However, there is no way to recover
from user's error in configuration file lynx.cfg or command line switches,
those unrecognized MIME names are assumed as LATIN1 (via safeUCGetLYhndl...).
*/

#define UCTRANS_NOTFOUND (-4)

#ifdef __cplusplus
}
#endif
#endif				/* UCMAP_H */
@


1.1.109.1
log
@Lynx 2.8.6dev.11h (pre-patch) minus
* lib
* po
* scripts
@
text
@@


1.1.109.2
log
@Import new Lynx snapshot
@
text
@a31 5
#ifdef EXP_JAPANESEUTF8_SUPPORT
    extern UCode_t UCTransJPToUni(char *inbuf,
				  int buflen,
				  int charset_in);
#endif
@


1.1.109.3
log
@Finally, a new Lynx snapshot!
@
text
@d43 1
a43 1
#ifdef USE_LOCALE_CHARSET
@


1.1.109.4
log
@Import Lynx 2.8.7dev.12
@
text
@a0 3
/*
 * $LynxId: UCMap.h,v 1.22 2009/01/01 00:46:06 tom Exp $
 */
a10 12
    typedef enum {
	ucError = -1,
	ucZeroWidth = -2,
	ucInvalidHash = -3,
	ucNotFound = -4,
	ucNeedMore = -10,
	ucCannotConvert = -11,
	ucCannotOutput = -12,
	ucBufferTooSmall = -13,
	ucUnknown = -14,
    } UCStatus;

@


1.1.109.5
log
@Woohoo, there’s a new Lynx release!
@
text
@d2 1
a2 1
 * $LynxId: UCMap.h,v 1.23 2009/01/01 02:03:25 tom Exp $
d23 1
a23 1
	ucUnknown = -14
@


1.1.109.6
log
@Import lynx-current
@
text
@d2 1
a2 1
 * $LynxId: UCMap.h,v 1.26 2010/09/25 15:18:32 tom Exp $
d35 1
a35 1
    extern int UCTransChar(int ch_in,
d38 1
a38 1
    extern int UCReverseTransChar(int ch_out,
d43 1
a43 1
			      int ch_in,
d52 1
a52 1
    extern UCode_t UCTransToUni(int ch_in,
@


1.1.109.7
log
@Import Lynx 2.8.8dev.10 plus dev.10a patch from invisible-island plus
fix for “lynx -help” output by KIHARA Hideto, by import-3rdpty,v 1.43
@
text
@d2 1
a2 1
 * $LynxId: UCMap.h,v 1.27 2011/12/01 02:00:57 tom Exp $
a27 2
    extern BOOL UCScanCode(UCode_t *, const char *, BOOL);

@


