head	1.1;
branch	1.1.109;
access;
symbols
	lynx-2_8_8dev_16:1.1.109.3
	lynx-2_8_8dev_15e:1.1.109.3
	lynx-2_8_8dev_15:1.1.109.3
	lynx-2_8_8dev_14:1.1.109.3
	lynx-2_8_8dev_12:1.1.109.3
	lynx-2_8_8dev_11:1.1.109.3
	lynx-2_8_8dev_10a:1.1.109.3
	lynx-2_8_8dev_7a:1.1.109.3
	lynx-2_8_8dev_7:1.1.109.3
	lynx-2_8_7rel_1:1.1.109.2
	lynx-2_8_7dev_12:1.1.109.1
	lynx-2_8_7dev_11a:1.1.109.1
	MIRBSD_10:1.1.109.1.0.4
	MIRBSD_10_BASE:1.1.109.1
	lynx-2_8_7dev_8:1.1.109.1
	lynx-2_8_7dev_7:1.1.109.1
	lynx-2_8_7dev_5:1.1.109.1
	lynx-2_8_7dev_2:1.1.109.1
	lynx-2_8_6pre_5:1.1.109.1
	lynx-2_8_6pre_4:1.1.109.1
	lynx-2_8_6pre_3:1.1.109.1
	MIRBSD_9_BASE:1.1.109.1
	lynx-2_8_6dev_18c:1.1.109.1
	lynx-2_8_6dev_18:1.1.109.1
	MIRBSD_8:1.1.109.1.0.2
	MIRBSD_8_BASE:1.1.109.1
	lynx-2_8_6dev_16:1.1.109.1
	lynx:1.1.109;
locks; strict;
comment	@ * @;


1.1
date	2005.03.27.22.11.54;	author tg;	state Exp;
branches
	1.1.109.1;
next	;

1.1.109.1
date	2005.03.27.22.11.54;	author tg;	state Exp;
branches;
next	1.1.109.2;

1.1.109.2
date	2009.08.09.14.37.47;	author tg;	state Exp;
branches;
next	1.1.109.3;
commitid	1004A7EDF4952738297;

1.1.109.3
date	2010.12.19.18.12.40;	author tg;	state Exp;
branches;
next	;
commitid	1004D0E4B24304015D1;


desc
@@


1.1
log
@Initial revision
@
text
@
/* MODULE							HTAssoc.c
 *	    ASSOCIATION LIST FOR STORING NAME-VALUE PAIRS.
 *	    NAMES NOT CASE SENSITIVE, AND ONLY COMMON LENGTH
 *	    IS CHECKED (allows abbreviations; well, length is
 *	    taken from lookup-up name, so if table contains
 *	    a shorter abbrev it is not found).
 * AUTHORS:
 *	AL	Ari Luotonen	luotonen@@dxcern.cern.ch
 *
 * HISTORY:
 *
 *
 * BUGS:
 *
 *
 */

#include <HTUtils.h>

#include <HTAssoc.h>

#include <LYLeaks.h>

HTAssocList *HTAssocList_new(void)
{
    return HTList_new();
}

void HTAssocList_delete(HTAssocList *alist)
{
    if (alist) {
	HTAssocList *cur = alist;
	HTAssoc *assoc;

	while (NULL != (assoc = (HTAssoc *) HTList_nextObject(cur))) {
	    FREE(assoc->name);
	    FREE(assoc->value);
	    FREE(assoc);
	}
	HTList_delete(alist);
	alist = NULL;
    }
}

void HTAssocList_add(HTAssocList *alist,
		     const char *name,
		     const char *value)
{
    HTAssoc *assoc;

    if (alist) {
	if (!(assoc = (HTAssoc *) malloc(sizeof(HTAssoc))))
	      outofmem(__FILE__, "HTAssoc_add");

	assoc->name = NULL;
	assoc->value = NULL;

	if (name)
	    StrAllocCopy(assoc->name, name);
	if (value)
	    StrAllocCopy(assoc->value, value);
	HTList_addObject(alist, (void *) assoc);
    } else {
	CTRACE((tfp, "HTAssoc_add: ERROR: assoc list NULL!!\n"));
    }
}

char *HTAssocList_lookup(HTAssocList *alist,
			 const char *name)
{
    HTAssocList *cur = alist;
    HTAssoc *assoc;

    while (NULL != (assoc = (HTAssoc *) HTList_nextObject(cur))) {
	if (!strncasecomp(assoc->name, name, strlen(name)))
	    return assoc->value;
    }
    return NULL;
}
@


1.1.109.1
log
@Lynx 2.8.6dev.11h (pre-patch) minus
* lib
* po
* scripts
@
text
@@


1.1.109.2
log
@Woohoo, thereâ€™s a new Lynx release!
@
text
@d1 2
a2 4
/*
 * $LynxId: HTAssoc.c,v 1.9 2009/01/03 01:59:16 tom Exp $
 *
 * MODULE							HTAssoc.c
d76 1
a76 1
	if (!strncasecomp(assoc->name, name, (int) strlen(name)))
@


1.1.109.3
log
@Import lynx-current
@
text
@d2 1
a2 1
 * $LynxId: HTAssoc.c,v 1.10 2010/04/29 09:34:03 tom Exp $
a57 2
	assert(assoc != NULL);

@


