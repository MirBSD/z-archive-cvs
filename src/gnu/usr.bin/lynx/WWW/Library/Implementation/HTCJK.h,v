head	1.1;
branch	1.1.109;
access;
symbols
	lynx-2_8_8dev_16:1.1.109.4
	lynx-2_8_8dev_15e:1.1.109.4
	lynx-2_8_8dev_15:1.1.109.4
	lynx-2_8_8dev_14:1.1.109.4
	lynx-2_8_8dev_12:1.1.109.3
	lynx-2_8_8dev_11:1.1.109.3
	lynx-2_8_8dev_10a:1.1.109.3
	lynx-2_8_8dev_7a:1.1.109.3
	lynx-2_8_8dev_7:1.1.109.3
	lynx-2_8_7rel_1:1.1.109.2
	lynx-2_8_7dev_12:1.1.109.2
	lynx-2_8_7dev_11a:1.1.109.2
	MIRBSD_10:1.1.109.2.0.4
	MIRBSD_10_BASE:1.1.109.2
	lynx-2_8_7dev_8:1.1.109.2
	lynx-2_8_7dev_7:1.1.109.2
	lynx-2_8_7dev_5:1.1.109.2
	lynx-2_8_7dev_2:1.1.109.2
	lynx-2_8_6pre_5:1.1.109.2
	lynx-2_8_6pre_4:1.1.109.2
	lynx-2_8_6pre_3:1.1.109.2
	MIRBSD_9_BASE:1.1.109.2
	lynx-2_8_6dev_18c:1.1.109.2
	lynx-2_8_6dev_18:1.1.109.2
	MIRBSD_8:1.1.109.2.0.2
	MIRBSD_8_BASE:1.1.109.2
	lynx-2_8_6dev_16:1.1.109.2
	lynx:1.1.109;
locks; strict;
comment	@ * @;


1.1
date	2005.03.27.22.11.54;	author tg;	state Exp;
branches
	1.1.109.1;
next	;

1.1.109.1
date	2005.03.27.22.11.54;	author tg;	state Exp;
branches;
next	1.1.109.2;

1.1.109.2
date	2005.10.21.21.33.47;	author tg;	state Exp;
branches;
next	1.1.109.3;
commitid	2f9543595ec47e83;

1.1.109.3
date	2010.12.19.18.12.40;	author tg;	state Exp;
branches;
next	1.1.109.4;
commitid	1004D0E4B24304015D1;

1.1.109.4
date	2012.08.23.17.47.47;	author tg;	state Exp;
branches;
next	;
commitid	10050366CBF479FD80F;


desc
@@


1.1
log
@Initial revision
@
text
@/*			CJK character converter		HTCJK.h
 *			=======================
 *
 *	Added 11-Jun-96 by FM, based on jiscode.h for
 *	  Yutaka Sato's (ysato@@etl.go.jp) SJIS.c, and
 *	  Takuya ASADA's (asada@@three-a.co.jp) CJK patches.
 *	  (see SGML.c).
 *
 */

#ifndef HTCJK_H
#define HTCJK_H

#ifndef HTUTILS_H
#include <HTUtils.h>
#endif

#ifdef __cplusplus
extern "C" {
#endif
/*
 *	STATUS CHANGE CODES
 */
#ifdef ESC
#undef ESC
#endif				/* ESC */
#define ESC		CH_ESC	/* S/390 -- gil -- 0098 */
#define TO_2BCODE	'$'
#define TO_1BCODE	'('
#define TO_KANA		'\016'
#define TO_KANAOUT	'\017'
#define TO_KANJI	"\033$B"
#define TO_HANJI	"\033$A"
#define TO_HANGUL	"\033$(C"
#define TO_ASCII	"\033(B"
#define IS_SJIS_LO(lo)	((0x40<=lo)&&(lo!=0x7F)&&(lo<=0xFC))
#define IS_SJIS_HI1(hi) ((0x81<=hi)&&(hi<=0x9F))	/* 1st lev. */
#define IS_SJIS_HI2(hi) ((0xE0<=hi)&&(hi<=0xEF))	/* 2nd lev. */
#define IS_SJIS(hi,lo,in_sjis) (!IS_SJIS_LO(lo)?0:IS_SJIS_HI1(hi)?(in_sjis=1):in_sjis&&IS_SJIS_HI2(hi))
#define IS_SJIS_2BYTE(hi,lo) (IS_SJIS_LO(lo)&&(IS_SJIS_HI1(hi)||IS_SJIS_HI2(hi)))
#define IS_SJIS_X0201KANA(lo) ((0xA1<=lo)&&(lo<=0xDF))
#define IS_EUC_LOX(lo)	((0xA1<=lo)&&(lo<=0xFE))	/* extended */
#define IS_EUC_HI(hi)	((0xA1<=hi)&&(hi<=0xFE))
#define IS_EUC_X0201KANA(hi,lo) ((hi==0x8E)&&(0xA1<=lo)&&(lo<=0xDF))
#define IS_EUC(hi,lo) ((IS_EUC_HI(hi) && IS_EUC_LOX(lo))||IS_EUC_X0201KANA(hi,lo))
#define IS_JAPANESE_2BYTE(hi,lo) (IS_SJIS_2BYTE(hi,lo) || IS_EUC(hi,lo))
#define IS_BIG5_LOS(lo)	((0x40<=lo)&&(lo<=0x7E))	/* standard */
#define IS_BIG5_LOX(lo)	((0xA1<=lo)&&(lo<=0xFE))	/* extended */
#define IS_BIG5_HI(hi)	((0xA1<=hi)&&(hi<=0xFE))
#define IS_BIG5(hi,lo) (IS_BIG5_HI(hi) && (IS_BIG5_LOS(lo) || IS_BIG5_LOX(lo)))
    typedef enum {
	NOKANJI = 0, EUC, SJIS, JIS
    } HTkcode;
    typedef enum {
	NOCJK = 0, JAPANESE, CHINESE, KOREAN, TAIPEI
    } HTCJKlang;

    extern HTCJKlang HTCJK;

/*
 *  Function prototypes.
 */
    extern void JISx0201TO0208_EUC(register unsigned char IHI,
				   register unsigned char ILO,
				   register unsigned char *OHI,
				   register unsigned char *OLO);

    extern unsigned char *SJIS_TO_JIS1(register unsigned char HI,
				       register unsigned char LO,
				       register unsigned char *JCODE);

    extern unsigned char *JIS_TO_SJIS1(register unsigned char HI,
				       register unsigned char LO,
				       register unsigned char *SJCODE);

    extern unsigned char *EUC_TO_SJIS1(unsigned char HI,
				       unsigned char LO,
				       register unsigned char *SJCODE);

    extern void JISx0201TO0208_SJIS(register unsigned char I,
				    register unsigned char *OHI,
				    register unsigned char *OLO);

    extern unsigned char *SJIS_TO_EUC1(unsigned char HI,
				       unsigned char LO,
				       unsigned char *EUCp);

    extern unsigned char *SJIS_TO_EUC(unsigned char *src,
				      unsigned char *dst);

    extern unsigned char *EUC_TO_SJIS(unsigned char *src,
				      unsigned char *dst);

    extern unsigned char *EUC_TO_JIS(unsigned char *src,
				     unsigned char *dst,
				     const char *toK,
				     const char *toA);

    extern unsigned char *TO_EUC(const unsigned char *jis,
				 unsigned char *euc);

    extern void TO_SJIS(const unsigned char *any,
			unsigned char *sjis);

    extern void TO_JIS(const unsigned char *any,
		       unsigned char *jis);

    extern char *str_kcode(HTkcode code);

#ifdef __cplusplus
}
#endif
#endif				/* HTCJK_H */
@


1.1.109.1
log
@Lynx 2.8.6dev.11h (pre-patch) minus
* lib
* po
* scripts
@
text
@@


1.1.109.2
log
@Import new Lynx snapshot
@
text
@d24 4
@


1.1.109.3
log
@Import lynx-current
@
text
@d1 1
a1 4
/*
 * $LynxId: HTCJK.h,v 1.18 2010/09/25 11:41:29 tom Exp $
 *
 *			CJK character converter		HTCJK.h
d59 12
a70 12
    extern void JISx0201TO0208_EUC(unsigned IHI,
				   unsigned ILO,
				   unsigned char *OHI,
				   unsigned char *OLO);

    extern unsigned char *SJIS_TO_JIS1(unsigned HI,
				       unsigned LO,
				       unsigned char *JCODE);

    extern unsigned char *JIS_TO_SJIS1(unsigned HI,
				       unsigned LO,
				       unsigned char *SJCODE);
d72 2
a73 2
    extern unsigned char *EUC_TO_SJIS1(unsigned HI,
				       unsigned LO,
d76 3
a78 3
    extern void JISx0201TO0208_SJIS(unsigned I,
				    unsigned char *OHI,
				    unsigned char *OLO);
d80 2
a81 2
    extern unsigned char *SJIS_TO_EUC1(unsigned HI,
				       unsigned LO,
@


1.1.109.4
log
@lynx2.8.8dev.14
@
text
@d2 1
a2 1
 * $LynxId: HTCJK.h,v 1.19 2012/08/15 23:11:03 tom Exp $
d36 2
a37 2
#define IS_SJIS_HI1(hi) ((0x81 <= (hi)) && ((hi) <= 0x9F))	/* 1st lev. */
#define IS_SJIS_HI2(hi) ((0xE0 <= (hi)) && ((hi) <= 0xEF))	/* 2nd lev. */
@


