head	1.2;
access;
symbols
	lynx-2_8_8dev_16:1.1.109.5
	lynx-2_8_8dev_15e:1.1.109.5
	lynx-2_8_8dev_15:1.1.109.5
	lynx-2_8_8dev_14:1.1.109.5
	lynx-2_8_8dev_12:1.1.109.5
	lynx-2_8_8dev_11:1.1.109.5
	lynx-2_8_8dev_10a:1.1.109.5
	lynx-2_8_8dev_7a:1.1.109.4
	lynx-2_8_8dev_7:1.1.109.4
	lynx-2_8_7rel_1:1.1.109.3
	lynx-2_8_7dev_12:1.1.109.2
	lynx-2_8_7dev_11a:1.1.109.2
	MIRBSD_10:1.1.109.1.0.4
	MIRBSD_10_BASE:1.1.109.1
	lynx-2_8_7dev_8:1.1.109.1
	lynx-2_8_7dev_7:1.1.109.1
	lynx-2_8_7dev_5:1.1.109.1
	lynx-2_8_7dev_2:1.1.109.1
	lynx-2_8_6pre_5:1.1.109.1
	lynx-2_8_6pre_4:1.1.109.1
	lynx-2_8_6pre_3:1.1.109.1
	MIRBSD_9_BASE:1.1.109.1
	lynx-2_8_6dev_18c:1.1.109.1
	lynx-2_8_6dev_18:1.1.109.1
	MIRBSD_8:1.1.109.1.0.2
	MIRBSD_8_BASE:1.1.109.1
	lynx-2_8_6dev_16:1.1.109.1
	lynx:1.1.109;
locks; strict;
comment	@ * @;


1.2
date	2012.02.19.19.38.06;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004F414F917991F461;

1.1
date	2005.03.27.22.12.06;	author tg;	state Exp;
branches
	1.1.109.1;
next	;

1.1.109.1
date	2005.03.27.22.12.06;	author tg;	state Exp;
branches;
next	1.1.109.2;

1.1.109.2
date	2008.12.16.23.13.11;	author tg;	state Exp;
branches;
next	1.1.109.3;
commitid	100494835F965A87026;

1.1.109.3
date	2009.08.09.14.37.50;	author tg;	state Exp;
branches;
next	1.1.109.4;
commitid	1004A7EDF4952738297;

1.1.109.4
date	2010.12.19.18.12.45;	author tg;	state Exp;
branches;
next	1.1.109.5;
commitid	1004D0E4B24304015D1;

1.1.109.5
date	2012.02.19.18.29.23;	author tg;	state Exp;
branches;
next	;
commitid	1004F413EF328BF0E26;


desc
@@


1.2
log
@merge lynx2.8.8dev.10a and fix some spelling
@
text
@/*
 * $LynxId: HTForms.h,v 1.33 2012/02/12 22:30:53 tom Exp $
 */
#ifndef HTFORMS_H
#define HTFORMS_H

#ifndef LYSTRUCTS_H
#include <LYStructs.h>
#endif /* LYSTRUCTS_H */

#ifdef __cplusplus
extern "C" {
#endif
/* change_form_link() calls change_form_link_ex() with all its args and FALSE
 * as last arg
 */ extern int change_form_link(int cur,
				DocInfo *newdoc,
				BOOLEAN *refresh_screen,
				int use_last_tfpos,
				int immediate_submit);

    extern int change_form_link_ex(int cur,
				   DocInfo *newdoc,
				   BOOLEAN *refresh_screen,
				   int use_last_tfpos,
				   int immediate_submit,
				   int draw_only);

/* InputFieldData is used to pass the info between HTML.c and Gridtext.c in
 * HText_beginInput()
 */
    typedef struct _InputFieldData {
	const char *accept;
	const char *align;
	int checked;
	const char *iclass;
	int disabled;
	int readonly;
	const char *error;
	const char *height;
	const char *id;
	const char *lang;
	const char *max;
	const char *maxlength;
	const char *md;
	const char *min;
	const char *name;
	int size;
	const char *src;
	const char *type;
	char *value;
	const char *width;
	int name_cs;		/* charset handle for name */
	int value_cs;		/* charset handle for value */
	const char *accept_cs;
    } InputFieldData;

/* The OptionType structure is for a linked list of option entries
 */
    typedef struct _OptionType {
	char *name;		/* the name of the entry */
	char *cp_submit_value;	/* the value to submit   */
	int value_cs;		/* charset value is in   */
	struct _OptionType *next;	/* the next entry        */
    } OptionType;

/*
 * The FormInfo structure is used to contain the form field data within each
 * anchor.  A pointer to this structure is in the TextAnchor struct.
 */
    typedef struct _FormInfo {
	char *name;		/* the name of the link */
	int number;		/* which form is the link within */
	int type;		/* string, int, etc. */
	char *value;		/* user entered string data */
	char *orig_value;	/* the original value */
	int size;		/* width on the screen */
	size_t maxlength;	/* max width of data */
	int group;		/* a group associated with the link
				 *  this is used for selects
				 */
	int num_value;		/* value of the numerical fields */
	int hrange;		/* high numerical range */
	int lrange;		/* low numerical range */
	OptionType *select_list;	/* array of option choices */
	char *submit_action;	/* form's action */
	int submit_method;	/* form's method */
	char *submit_enctype;	/* form's entype */
	char *submit_title;	/* form's title */
	BOOL no_cache;		/* Always resubmit? */
	char *cp_submit_value;	/* option value to submit */
	char *orig_submit_value;	/* original submit value */
	int size_l;		/* The length of the option list */
	int disabled;		/* If YES, can't change values */
	int readonly;		/* If YES, can't change values */
	int name_cs;
	int value_cs;
	char *accept_cs;
    } FormInfo;

#define FormIsReadonly(form) ((form) && ((form)->disabled || (form)->readonly))

/*
 * As structure for info associated with a form.  There is some redundancy
 * here, this shouldn't waste too much memory since the total number of forms
 * (as opposed to form fields) per doc is expected to be rather small.  More
 * things which are per form rather than per field could be moved here.  - kw
 */
    typedef struct _PerFormInfo {
	int number;		/* form number, see GridText.c */
	int disabled;		/* If YES, can't change values */
	FormInfo data;
	struct _PerFormInfo *next;	/* pointer to next form in doc */
	int nfields;		/* number of fields */
	FormInfo *first_field;
	FormInfo *last_field;	/* pointer to last field in form */
	char *accept_cs;
	char *thisacceptcs;	/* used during submit */
    } PerFormInfo;

#define HYPERTEXT_ANCHOR 1
#define INPUT_ANCHOR     2	/* forms mode input fields */
#define INTERNAL_LINK_ANCHOR 5	/* 1+4, can be used as bitflag... - kw */

    typedef enum {
	F_UNKNOWN = 0,
	F_TEXT_TYPE,
	F_PASSWORD_TYPE,
	F_CHECKBOX_TYPE,
	F_RADIO_TYPE,
	F_SUBMIT_TYPE,
	F_RESET_TYPE,
	F_OPTION_LIST_TYPE,
	F_HIDDEN_TYPE,
	F_TEXTAREA_TYPE,
	F_RANGE_TYPE,
	F_FILE_TYPE,
	F_TEXT_SUBMIT_TYPE,
	F_IMAGE_SUBMIT_TYPE,
	F_KEYGEN_TYPE,
	F_BUTTON_TYPE
    } FieldTypes;

#define F_SUBMITLIKE(type) ((type) == F_SUBMIT_TYPE || \
			    (type) == F_IMAGE_SUBMIT_TYPE || \
			    (type) == F_TEXT_SUBMIT_TYPE)

#define F_TEXTLIKE(type) ((type) == F_TEXT_TYPE || \
			  (type) == F_TEXT_SUBMIT_TYPE || \
			  (type) == F_PASSWORD_TYPE || \
			  (type) == F_FILE_TYPE || \
			  (type) == F_TEXTAREA_TYPE)

#define WWW_FORM_LINK_TYPE  1
#define WWW_LINK_TYPE   2
#define WWW_INTERN_LINK_TYPE   6	/* can be used as a bitflag... - kw */
#define LINK_LINE_FOUND	8	/* used in follow_link_number, others - kw */
#define LINK_DO_ARROWUP	16	/* returned by HTGetLinkOrFieldStart - kw */

/* #define different lynx modes */
#define NORMAL_LYNX_MODE 1
#define FORMS_LYNX_MODE  2

#define FIRST_ORDER  1
#define MIDDLE_ORDER 2
#define LAST_ORDER   3

/* in LYForms.c */
    extern void show_formlink_statusline(const FormInfo * form,
					 int for_what);
#ifdef __cplusplus
}
#endif
#endif				/* HTFORMS_H */
@


1.1
log
@Initial revision
@
text
@d1 3
d19 2
a20 2
				BOOLEAN use_last_tfpos,
				BOOLEAN immediate_submit);
d25 3
a27 3
				   BOOLEAN use_last_tfpos,
				   BOOLEAN immediate_submit,
				   BOOLEAN draw_only);
d38 1
d78 1
a78 1
	unsigned maxlength;	/* max width of data */
d80 1
a80 1
				 *  this is used for select's
d95 1
d101 2
a110 1
	/* except for the last two, the following fields aren't actually used.. */
d112 1
d125 28
a152 20
#define F_TEXT_TYPE	   1
#define F_PASSWORD_TYPE    2
#define F_CHECKBOX_TYPE    3
#define F_RADIO_TYPE	   4
#define F_SUBMIT_TYPE	   5
#define F_RESET_TYPE	   6
#define F_OPTION_LIST_TYPE 7
#define F_HIDDEN_TYPE      8
#define F_TEXTAREA_TYPE    9
#define F_RANGE_TYPE      10
#define F_FILE_TYPE       11
#define F_TEXT_SUBMIT_TYPE 12
#define F_IMAGE_SUBMIT_TYPE 13
#define F_KEYGEN_TYPE     14

#define F_TEXTLIKE(type) ((type)==F_TEXT_TYPE ||\
			  (type)==F_TEXT_SUBMIT_TYPE ||\
			  (type)==F_PASSWORD_TYPE ||\
			  (type)==F_FILE_TYPE ||\
			  (type)==F_TEXTAREA_TYPE)
@


1.1.109.1
log
@Lynx 2.8.6dev.11h (pre-patch) minus
* lib
* po
* scripts
@
text
@@


1.1.109.2
log
@Import Lynx 2.8.7dev.11a via eMail from Tom Dickey:
Message-ID: <20081215010313.GA8373@@invisible-island.net>
Message-ID: <20081216012408.GA15364@@invisible-island.net>
@
text
@a0 3
/*
 * $LynxId: HTForms.h,v 1.26 2008/09/07 16:35:26 tom Exp $
 */
d118 20
a137 23
    typedef enum {
	F_UNKNOWN = 0,
	F_TEXT_TYPE,
	F_PASSWORD_TYPE,
	F_CHECKBOX_TYPE,
	F_RADIO_TYPE,
	F_SUBMIT_TYPE,
	F_RESET_TYPE,
	F_OPTION_LIST_TYPE,
	F_HIDDEN_TYPE,
	F_TEXTAREA_TYPE,
	F_RANGE_TYPE,
	F_FILE_TYPE,
	F_TEXT_SUBMIT_TYPE,
	F_IMAGE_SUBMIT_TYPE,
	F_KEYGEN_TYPE
    } FieldTypes;

#define F_TEXTLIKE(type) ((type) == F_TEXT_TYPE || \
			  (type) == F_TEXT_SUBMIT_TYPE || \
			  (type) == F_PASSWORD_TYPE || \
			  (type) == F_FILE_TYPE || \
			  (type) == F_TEXTAREA_TYPE)
@


1.1.109.3
log
@Woohoo, there’s a new Lynx release!
@
text
@d2 1
a2 1
 * $LynxId: HTForms.h,v 1.27 2009/05/28 22:49:51 tom Exp $
d136 1
a136 2
	F_KEYGEN_TYPE,
	F_BUTTON_TYPE
@


1.1.109.4
log
@Import lynx-current
@
text
@d2 1
a2 1
 * $LynxId: HTForms.h,v 1.28 2010/09/24 09:40:07 tom Exp $
d19 2
a20 2
				int use_last_tfpos,
				int immediate_submit);
d25 3
a27 3
				   int use_last_tfpos,
				   int immediate_submit,
				   int draw_only);
@


1.1.109.5
log
@Import Lynx 2.8.8dev.10 plus dev.10a patch from invisible-island plus
fix for “lynx -help” output by KIHARA Hideto, by import-3rdpty,v 1.43
@
text
@d2 1
a2 1
 * $LynxId: HTForms.h,v 1.33 2012/02/12 22:30:53 tom Exp $
a37 1
	int readonly;
d77 1
a77 1
	size_t maxlength;	/* max width of data */
a93 1
	int readonly;		/* If YES, can't change values */
a98 2
#define FormIsReadonly(form) ((form) && ((form)->disabled || (form)->readonly))

d107 1
a108 1
	FormInfo data;
a139 4
#define F_SUBMITLIKE(type) ((type) == F_SUBMIT_TYPE || \
			    (type) == F_IMAGE_SUBMIT_TYPE || \
			    (type) == F_TEXT_SUBMIT_TYPE)

@


