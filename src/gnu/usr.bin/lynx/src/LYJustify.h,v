head	1.1;
branch	1.1.109;
access;
symbols
	lynx-2_8_8dev_16:1.1.109.3
	lynx-2_8_8dev_15e:1.1.109.3
	lynx-2_8_8dev_15:1.1.109.3
	lynx-2_8_8dev_14:1.1.109.3
	lynx-2_8_8dev_12:1.1.109.3
	lynx-2_8_8dev_11:1.1.109.3
	lynx-2_8_8dev_10a:1.1.109.3
	lynx-2_8_8dev_7a:1.1.109.3
	lynx-2_8_8dev_7:1.1.109.3
	lynx-2_8_7rel_1:1.1.109.2
	lynx-2_8_7dev_12:1.1.109.1
	lynx-2_8_7dev_11a:1.1.109.1
	MIRBSD_10:1.1.109.1.0.4
	MIRBSD_10_BASE:1.1.109.1
	lynx-2_8_7dev_8:1.1.109.1
	lynx-2_8_7dev_7:1.1.109.1
	lynx-2_8_7dev_5:1.1.109.1
	lynx-2_8_7dev_2:1.1.109.1
	lynx-2_8_6pre_5:1.1.109.1
	lynx-2_8_6pre_4:1.1.109.1
	lynx-2_8_6pre_3:1.1.109.1
	MIRBSD_9_BASE:1.1.109.1
	lynx-2_8_6dev_18c:1.1.109.1
	lynx-2_8_6dev_18:1.1.109.1
	MIRBSD_8:1.1.109.1.0.2
	MIRBSD_8_BASE:1.1.109.1
	lynx-2_8_6dev_16:1.1.109.1
	lynx:1.1.109;
locks; strict;
comment	@ * @;


1.1
date	2005.03.27.22.12.09;	author tg;	state Exp;
branches
	1.1.109.1;
next	;

1.1.109.1
date	2005.03.27.22.12.09;	author tg;	state Exp;
branches;
next	1.1.109.2;

1.1.109.2
date	2009.08.09.14.37.52;	author tg;	state Exp;
branches;
next	1.1.109.3;
commitid	1004A7EDF4952738297;

1.1.109.3
date	2010.12.19.18.12.46;	author tg;	state Exp;
branches;
next	;
commitid	1004D0E4B24304015D1;


desc
@@


1.1
log
@Initial revision
@
text
@/* Justification for lynx - implemented by Vlad Harchev <hvv@@hippo.ru>
 * 11 July 1999
 */

#ifndef LYJUSTIFY_H
#define LYJUSTIFY_H

#include <HTUtils.h>

#ifdef __cplusplus
extern "C" {
#endif
#ifdef EXP_JUSTIFY_ELTS
    extern BOOL ok_justify;
    extern BOOL can_justify_here;
    extern BOOL can_justify_here_saved;

    extern BOOL can_justify_this_line;
    extern int wait_for_this_stacked_elt;
    extern BOOL form_in_htext;

/* this is the element with SGML_EMPTY content, so it won't get on the stack,
 * so we can't trap it with wait_for_this_stacked_elt
 */
    extern BOOL in_DT;

/*disabled by default*/
/*#define DEBUG_JUSTIFY*/
#ifdef DEBUG_JUSTIFY
    extern BOOL can_justify_stack_depth;	/* can be 0 or 1 if all code is correct */

#  define CAN_JUSTIFY_STACK_INC ++can_justify_stack_depth;\
	assert(can_justify_stack_depth < 2 && can_justify_stack_depth >=0 );
#  define CAN_JUSTIFY_STACK_DEC --can_justify_stack_depth;\
	assert(can_justify_stack_depth < 2 && can_justify_stack_depth >=0 );
#else
#  define CAN_JUSTIFY_STACK_INC	/* nothing */
#  define CAN_JUSTIFY_STACK_DEC	/* nothing */
#endif

#define CAN_JUSTIFY_PUSH(x) can_justify_here_saved=can_justify_here;\
	can_justify_here=(x); CAN_JUSTIFY_STACK_INC
#define CAN_JUSTIFY_POP can_justify_here=can_justify_here_saved;\
	CAN_JUSTIFY_STACK_INC
#define CAN_JUSTIFY_SET(x) can_justify_here=(x);

/*
 * This is used to indicate that starting from the current offset in current
 * line justification can take place (in order the gap between some prefix and
 * the word not to be enlarged.
 * For example, when forming OL,
 *     1.21 foo
 * 	   ^justification can start here so that gap between 1.21 and "foo"
 *	   will not be enlarged.
 * This is a macro (that uses 'me').
 */
#define CAN_JUSTIFY_START  mark_justify_start_position(me->text);
#define CANT_JUSTIFY_THIS_LINE can_justify_this_line = FALSE
#define EMIT_IFDEF_EXP_JUSTIFY_ELTS(x) x
    /*defined in order not to wrap single line of code  into #ifdef/#endif */

    extern void ht_justify_cleanup(void);
    extern void mark_justify_start_position(void *text);

#else				/* ! EXP_JUSTIFY_ELTS */
/*
 * define empty macros so that they can be used without wrapping them in
 * #ifdef EXP_JUSTIFY_ELTS/#endif
 */
#define CAN_JUSTIFY_PUSH(x)
#define CAN_JUSTIFY_POP
#define CAN_JUSTIFY_SET(x)
#define CAN_JUSTIFY_START
#define CANT_JUSTIFY_THIS_LINE
#define EMIT_IFDEF_EXP_JUSTIFY_ELTS(x)
#endif				/* EXP_JUSTIFY_ELTS */
#define CAN_JUSTIFY_PUSH_F CAN_JUSTIFY_PUSH(FALSE)
#ifdef __cplusplus
}
#endif
#endif				/* LYJUSTIFY_H */
@


1.1.109.1
log
@Lynx 2.8.6dev.11h (pre-patch) minus
* lib
* po
* scripts
@
text
@@


1.1.109.2
log
@Woohoo, thereâ€™s a new Lynx release!
@
text
@d1 1
a1 4
/*
 * $LynxId: LYJustify.h,v 1.7 2009/04/07 00:24:15 tom Exp $
 *
 * Justification for lynx - implemented by Vlad Harchev <hvv@@hippo.ru>
d14 1
@


1.1.109.3
log
@Import lynx-current
@
text
@d2 1
a2 1
 * $LynxId: LYJustify.h,v 1.8 2009/11/21 15:24:48 tom Exp $
d16 1
a16 1
#ifdef USE_JUSTIFY_ELTS
d61 1
a61 1
#define EMIT_IFDEF_USE_JUSTIFY_ELTS(x) x
d67 1
a67 1
#else				/* ! USE_JUSTIFY_ELTS */
d70 1
a70 1
 * #ifdef USE_JUSTIFY_ELTS/#endif
d77 2
a78 2
#define EMIT_IFDEF_USE_JUSTIFY_ELTS(x)
#endif				/* USE_JUSTIFY_ELTS */
@


