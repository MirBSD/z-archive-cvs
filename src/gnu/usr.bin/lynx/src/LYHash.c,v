head	1.1;
branch	1.1.109;
access;
symbols
	lynx-2_8_8dev_16:1.1.109.4
	lynx-2_8_8dev_15e:1.1.109.3
	lynx-2_8_8dev_15:1.1.109.3
	lynx-2_8_8dev_14:1.1.109.3
	lynx-2_8_8dev_12:1.1.109.3
	lynx-2_8_8dev_11:1.1.109.3
	lynx-2_8_8dev_10a:1.1.109.3
	lynx-2_8_8dev_7a:1.1.109.3
	lynx-2_8_8dev_7:1.1.109.3
	lynx-2_8_7rel_1:1.1.109.2
	lynx-2_8_7dev_12:1.1.109.2
	lynx-2_8_7dev_11a:1.1.109.1
	MIRBSD_10:1.1.109.1.0.4
	MIRBSD_10_BASE:1.1.109.1
	lynx-2_8_7dev_8:1.1.109.1
	lynx-2_8_7dev_7:1.1.109.1
	lynx-2_8_7dev_5:1.1.109.1
	lynx-2_8_7dev_2:1.1.109.1
	lynx-2_8_6pre_5:1.1.109.1
	lynx-2_8_6pre_4:1.1.109.1
	lynx-2_8_6pre_3:1.1.109.1
	MIRBSD_9_BASE:1.1.109.1
	lynx-2_8_6dev_18c:1.1.109.1
	lynx-2_8_6dev_18:1.1.109.1
	MIRBSD_8:1.1.109.1.0.2
	MIRBSD_8_BASE:1.1.109.1
	lynx-2_8_6dev_16:1.1.109.1
	lynx:1.1.109;
locks; strict;
comment	@ * @;


1.1
date	2005.03.27.22.12.09;	author tg;	state Exp;
branches
	1.1.109.1;
next	;

1.1.109.1
date	2005.03.27.22.12.09;	author tg;	state Exp;
branches;
next	1.1.109.2;

1.1.109.2
date	2009.01.18.19.31.28;	author tg;	state Exp;
branches;
next	1.1.109.3;
commitid	1004973839C3B701938;

1.1.109.3
date	2010.12.19.18.12.46;	author tg;	state Exp;
branches;
next	1.1.109.4;
commitid	1004D0E4B24304015D1;

1.1.109.4
date	2013.08.06.20.31.36;	author tg;	state Exp;
branches;
next	;
commitid	10052015D37118B3894;


desc
@@


1.1
log
@Initial revision
@
text
@/* A hash table for the (fake) CSS support in Lynx-rp
 * (c) 1996 Rob Partington
 */
#include <LYHash.h>

#ifdef USE_COLOR_STYLE

/*
 * This is the same function as the private HASH_FUNCTION() in HTAnchor.c, but
 * with a different value for HASH_SIZE.
 */

#define HASH_SIZE CSHASHSIZE
#define HASH_OF(h, v) ((int)((h) * 3 + UCH(v)) % HASH_SIZE)

int hash_code(const char *string)
{
    int hash;
    const char *p;

    for (p = string, hash = 0; *p; p++)
	hash = HASH_OF(hash, *p);

    return hash;
}

int hash_code_lowercase_on_fly(const char *string)
{
    int hash;
    const char *p;

    for (p = string, hash = 0; *p; p++)
	hash = HASH_OF(hash, TOLOWER(*p));

    return hash;
}

int hash_code_aggregate_char(char c, int hash)
{
    return HASH_OF(hash, c);
}

int hash_code_aggregate_lower_str(const char *string, int hash_was)
{
    int hash;
    const char *p;

    for (p = string, hash = hash_was; *p; p++)
	hash = HASH_OF(hash, TOLOWER(*p));

    return hash;
}

#endif /* USE_COLOR_STYLE */
@


1.1.109.1
log
@Lynx 2.8.6dev.11h (pre-patch) minus
* lib
* po
* scripts
@
text
@@


1.1.109.2
log
@Import Lynx 2.8.7dev.12
@
text
@d1 1
a1 4
/*
 * $LynxId: LYHash.c,v 1.16 2008/12/31 22:10:38 tom Exp $
 *
 * A hash table for the (fake) CSS support in Lynx-rp
a2 1
 * rewritten 1997 by Klaus Weide.
a4 1
#include <LYUtils.h>
@


1.1.109.3
log
@Import lynx-current
@
text
@d2 1
a2 1
 * $LynxId: LYHash.c,v 1.17 2010/09/24 09:43:18 tom Exp $
d43 1
a43 1
int hash_code_aggregate_char(int c, int hash)
@


1.1.109.4
log
@Update
@
text
@d2 1
a2 1
 * $LynxId: LYHash.c,v 1.19 2013/06/12 09:21:21 tom Exp $
a28 1
    CTRACE_STYLE((tfp, "hash_code(%s) = %d\n", string, hash));
a39 1
    CTRACE_STYLE((tfp, "hash_code_lc(%s) = %d\n", string, hash));
a55 1
    CTRACE_STYLE((tfp, "hash_code_lc2(%s) = %d\n", string, hash));
@


