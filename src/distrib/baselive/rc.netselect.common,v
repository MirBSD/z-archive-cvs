head	1.25;
access;
symbols
	MIRBSD_10:1.14.0.2
	MIRBSD_10_BASE:1.14;
locks; strict;
comment	@# @;


1.25
date	2018.12.15.05.12.19;	author tg;	state Exp;
branches;
next	1.24;
commitid	1005C148D43264B737D;

1.24
date	2018.12.15.05.05.22;	author tg;	state Exp;
branches;
next	1.23;
commitid	1005C148BA80D986C53;

1.23
date	2018.12.13.18.12.15;	author tg;	state Exp;
branches;
next	1.22;
commitid	1005C12A10B3689CD74;

1.22
date	2013.09.11.18.43.50;	author tg;	state Exp;
branches;
next	1.21;
commitid	1005230B9FD4CD38D84;

1.21
date	2010.07.11.17.35.08;	author tg;	state Exp;
branches;
next	1.20;
commitid	1004C3A00E31714D995;

1.20
date	2010.07.11.11.56.03;	author tg;	state Exp;
branches;
next	1.19;
commitid	1004C39B0F253C2A554;

1.19
date	2010.01.06.19.11.56;	author tg;	state Exp;
branches;
next	1.18;
commitid	1004B44E03412A89242;

1.18
date	2008.12.17.19.59.19;	author tg;	state Exp;
branches;
next	1.17;
commitid	100494959E512454B32;

1.17
date	2008.10.21.21.03.33;	author tg;	state Exp;
branches;
next	1.16;
commitid	10048FE43B158335A05;

1.16
date	2008.09.06.15.07.51;	author tg;	state Exp;
branches;
next	1.15;
commitid	10048C29C7F22578445;

1.15
date	2008.07.07.13.57.13;	author tg;	state Exp;
branches;
next	1.14;
commitid	100487220B36BA627AC;

1.14
date	2007.09.28.20.46.53;	author tg;	state Exp;
branches;
next	1.13;
commitid	10046FD684B204757B3;

1.13
date	2007.08.12.13.59.36;	author tg;	state Exp;
branches;
next	1.12;
commitid	10046BF124C3829B226;

1.12
date	2007.08.01.21.56.03;	author tg;	state Exp;
branches;
next	1.11;
commitid	10046B1018944EE6EB3;

1.11
date	2007.08.01.21.37.53;	author tg;	state Exp;
branches;
next	1.10;
commitid	10046B0FD0739BF82C2;

1.10
date	2007.08.01.15.27.04;	author tg;	state Exp;
branches;
next	1.9;
commitid	10046B0A62F606D986E;

1.9
date	2007.07.31.22.32.12;	author tg;	state Exp;
branches;
next	1.8;
commitid	10046AFB87008D75E62;

1.8
date	2007.07.31.22.23.49;	author tg;	state Exp;
branches;
next	1.7;
commitid	10046AFB68140813812;

1.7
date	2007.06.15.23.46.48;	author tg;	state Exp;
branches;
next	1.6;
commitid	100467324F93D46ABCA;

1.6
date	2006.12.21.23.14.25;	author tg;	state Exp;
branches;
next	1.5;
commitid	100458B156022BD925B;

1.5
date	2006.12.20.18.01.04;	author tg;	state Exp;
branches;
next	1.4;
commitid	10045897A5E09863141;

1.4
date	2006.12.20.17.58.28;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004589799B48029B22;

1.3
date	2006.11.19.16.43.41;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004560891159DD45F6;

1.2
date	2006.10.17.18.26.18;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004535205B6E4D7152;

1.1
date	2006.09.30.20.59.00;	author tg;	state Exp;
branches;
next	;
commitid	100451EDAA579D5615D;


desc
@@


1.25
log
@return/'none' in more detail
@
text
@# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.22 2013/09/11 18:43:50 tg Exp $
#-
# Copyright (c) 2006, 2007, 2008, 2010, 2013, 2018
#	mirabilos <m@@mirbsd.org>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.

function get_kbdtype {
	[[ -x /sbin/kbd ]] || return
	print
	while :; do
		set -o noglob
		print -n "kbd(8) mapping (default 'none')? ('?' for list) "
		read resp
		: ${resp:=none}
		set +o noglob
		if [[ $resp = none ]]; then
			echo OK, not changing console keyboard layout
			echo Using QWERTY MirKeyboardLayout under X11
			return
		fi
		[[ $resp = @@(\?|+([0-9])) && -z ${layouts[0]} ]] && \
		    set -A layouts -- $(kbd -lq | \
		    egrep '^..\.?(nodead|dvorak)?$' | sort)
		[[ $resp = +([0-9]) ]] && resp=${layouts[$resp]}
		[[ $resp = [a-z]* ]] && if kbd $resp; then
			ed -s /etc/wsconsctl.conf <<-EOF
				%g/keyboard.encoding/d
				\$a
				keyboard.encoding=$resp
				.
				wq
			EOF
			mv /home/live/.Xmodmap /home/live/.Xmodmap.dist
			[[ $resp = *.nodead ]] && \
			    ed -s /etc/X11/XF86Config <<-EOF
				%g/Xkb.*nodead/s/^#//
				wq
			EOF
			l=${resp%%.*}
			[[ $resp = *.dvorak ]] && l=dvorak
			ed -s /etc/X11/XF86Config <<-EOF
				%g/XkbLayout/s/us/$l/
				wq
			EOF
			return
		fi
		[[ $resp = \? ]] || continue
		print Available keyboard mappings:
		typeset -iR3 i=-1
		while (( ++i < ${#layouts[*]} )); do
			print "$i) ${layouts[i]}"
		done | rs
	done
}

function show_info {
	print
	print 'To get support, use lynx(1) with the following resources:'
	print 'online man pages: http://www.mirbsd.org/cman/'
	print 'interactive help: irc.freenode.net #MirBSD'
	get_kbdtype
	[[ -e /NONFREE.TXT || -e /nonfree.txt ]] || return
	print
	print 'ATTENTION: this Live CD contains possibly non-free or'
	print 'otherwise restricted components! These are:'
	(head -1 /NONFREE.TXT 2>&-; head -1 /nonfree.txt 2>&-) | \
	    fold -sw70 | sed 's!^!| !'
	print 'Please read /NONFREE.TXT for further information.'
	print
	print 'Press the RETURN key to continue...'
	read dummy
}

function get_passwd {
	print
	print "To login to the MirOS Live CD, a user 'live' has been added."
	print 'Please enter a password to login with now (default: "live").'
	print Note: it is highly suggested to change the password, because
	print 'sshd(8) is started by default.'
	passwd live
}

function set_hostname {
	typeset -Uui36 rndval=$(date +%s)
	typeset -i1 x=RANDOM
	rndpfx=${rndval#36#}
	RANDOM=$(dd if=/dev/arandom bs=4 count=1 2>&- | hexdump -ve '1/4 "%u"')
	while (( ${#rndpfx} < 36 )); do
		typeset -Uui36 'rndval=( (RANDOM << 15 | RANDOM) % 60466176)'
		rndpfx=${rndval#36#}$rndpfx
	done
	rndpfx=${rndpfx: -36}
	# yes, the "livecd." comes first, trust me on this
	print livecd.$rndpfx.invalid.mirbsd.org >/etc/myname
	print ::1 livecd livecd.$rndpfx.invalid.mirbsd.org >>/etc/hosts
	print 127.0.0.1 livecd livecd.$rndpfx.invalid.mirbsd.org >>/etc/hosts
}

function ask_netconfig {
	set -A all_ifnames -- $(ifconfig -l)
	default_ifname=${all_ifnames[0]}
	[[ $default_ifname = lo0 ]] && default_ifname=${all_ifnames[1]}
	if [[ -z $default_ifname ]]; then
		print
		print No network interface found, skipping.
		do_netconf none
		return
	fi
	print
	print "Available network interfaces: ${all_ifnames[*]}"
	if=
	while [[ -z $if ]]; do
		print -n Interface to run a DHCP client on \
		    "(or none/done) [$default_ifname]? "
		read ifname
		[[ $ifname = @@(d|n)one ]] && break
		[[ -z $ifname ]] && ifname=$default_ifname
		let i=0
		while (( i < ${#all_ifnames[*]} )); do
			[[ ${all_ifnames[i]} = $ifname ]] && \
			    if=${all_ifnames[i]}
			let ++i
		done
	done
	do_netconf ${if:-none}
}

function do_netconf {
	if [[ $1 = none ]]; then
		:
		#XXX this is actually a bad idea, maybe the network
		#XXX is manually configured later; for now, just do
		#XXX not add the run of rdate (ntpd is run with -S)
		#print ntpd_flags=NO >>/etc/rc.conf.local
	else
		print dhcp >/etc/hostname.$1
		print rdate_flags=\"-nv ntp.mirbsd.org\" >>/etc/rc.conf.local
		print rtsold_flags=-am >>/etc/rc.conf.local
		# pull IPv6 now (early), so that ntp.mirbsd.org can be reached
		ifconfig $1 up
		print Running IPv6 autoconfiguration on $1... takes a few secs
		rtsol $1
	fi
}

function do_before {
	rm -f /etc/hosts
}

function do_after {
	rm -f /etc/hostname.done
}

function do_shell {
	if ! grep -w ^console /etc/ttys | grep -qw secure; then
		oldIFS=$IFS; IFS=:
		set -A p -- $(grep ^root: /etc/master.passwd | head -1)
		IFS=$oldIFS
		#print "DEBUG: ${p[1]}"
		print Give me a root password, please.
		if [[ ${p[1]} != $(/usr/bin/encrypt -pS "${p[1]}") ]]; then
			print root login failed.
			continue
		fi
		set -A p
	fi

	HOME=/ /bin/mksh -l
	print
}
@


1.24
log
@skip lo0 as default interface
@
text
@d26 1
a26 1
		print -n "kbd(8) mapping? ('?' for list) "
d30 5
a34 1
		[[ $resp = none ]] && return
@


1.23
log
@begin updating

(the random hostname thingy could just use arandom directly)
@
text
@d3 2
a4 2
# Copyright (c) 2006, 2007, 2008, 2010, 2013
#	Thorsten Glaser <tg@@mirbsd.de>
d112 1
@


1.22
log
@ifconfig -l here, too
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.21 2010/07/11 17:35:08 tg Exp $
a96 2
	RANDOM=$(dd if=/dev/prandom bs=4 count=1 2>&- | hexdump -ve '1/4 "%u"')
	print -nr "${x#1#}" >/dev/arandom
d168 2
a169 2
		print "DEBUG: ${p[1]}"
		print Gimme a root password, please.
@


1.21
log
@hexdump -e without -v in a script is almost always wrong
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.20 2010/07/11 11:56:03 tg Exp $
d3 1
a3 1
# Copyright (c) 2006, 2007, 2008, 2010
a110 13
function get_net_ifnames {
	typeset foo
	typeset -i i

	set -A foo -- $(ifconfig -l)
	i=${#foo[*]}
	while (( i-- > 0 )); do
		[[ ${foo[i]} = @@(lo|bridge|enc|gif|gre|tun|vlan|irip|pflog|pfsync|plip|sl)+([0-9]) ]] && \
		    unset foo[i]
	done
	print ${foo[*]}
}

d112 1
a112 1
	set -A all_ifnames -- $(get_net_ifnames)
@


1.20
log
@remove calls to “set ±o arc4random” from all scripts
(and the arc4random_uniform implementation in shell from
rc.netselect.common – could be done with dd(1) but is too
expensive, and not really needed here anyway)

YOU *WILL* NEED TO UPGRADE /etc/rc WITH THIS VERSION BEFORE
UPGRADING /bin/{sh,mksh} TO THIS MONTH’S CODE!
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.19 2010/01/06 19:11:56 tg Exp $
d97 1
a97 1
	RANDOM=$(dd if=/dev/prandom bs=4 count=1 2>&- | hexdump -e '1/4 "%u"')
d99 1
a99 1
	RANDOM=$(dd if=/dev/arandom bs=4 count=1 2>&- | hexdump -e '1/4 "%u"')
@


1.19
log
@With the test programme below, I also have double-checked the
arc4random_uniform interna. Thus, sync it across all the dif-
ferent implemementations for better comprehension.

begin 644 test.c.gz
M'XL(```````"`UV036O#,`R&S_:O>-=1L)MN)$X(A7X<=^JUL,-@@C"6EAM0=
M:=(:UNRW3[83ME076=*C5[(>M?FLVJ+$ZMP4^O1\V'"N3<./']J(RTD7DG]S
MUE(JS]X;V#GJ/%N&3*I<)E642]6QK;Q?<LXLUH@@)NAYT54)$D<4*L4WBWG;;
MK03),M)RZ*B"*2SU,A*FFG_J/80+-X0N!C(HL#":R-KS"2+\6+<&8QW*ZES>
M84+$]J6W'9Z"\`Q04E)K(MWXT,Z"XC^><$>/L:Y?T/WE(:QQN^$OHK'2J7W5
M=+*]F-CU-%Z\(L^"3]5,#2_OW\QD[J_JFD`FAEM+$AW=6M)\&E^735L;6I3B
+CO\"?M$\_-(!````
`
end
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.18 2008/12/17 19:59:19 tg Exp $
a20 41

# derived from code written by Damien Miller <djm@@openbsd.org>
# published under the ISC licence
#-
# Calculate a uniformly distributed random number less than upper_bound
# avoiding "modulo bias".
#
# Uniformity is achieved by generating new random numbers until the one
# returned is outside the range [0, 2**32 % upper_bound).  This
# guarantees the selected random number will be inside
# [2**32 % upper_bound, 2**32) which maps back to [0, upper_bound)
# after reduction modulo upper_bound.
#
function arc4random_uniform {
	typeset -Ui upper_bound=$1 r min
	set -o arc4random

	if (( upper_bound < 2 )); then
		print 0
		return
	fi

	# Calculate (2**32 % upper_bound) avoiding 64-bit math
	# (2**32 - x) % x == 2**32 % x when x <= 2**31
	((# min = upper_bound > 0x80000000 ? 1 + ~upper_bound :
	    (0xFFFFFFFF - upper_bound + 1) % upper_bound ))

	# This could theoretically loop forever but each retry has
	# p > 0.5 (worst case, usually far better) of selecting a
	# number inside the range we need, so it should rarely need
	# to re-roll.
	while :; do
		((# r = ((RANDOM & 3) << 30) | ((RANDOM & 0x7FFF) << 15) | \
		    (RANDOM & 0x7FFF) ))
		((# r >= min )) && break
	done

	print $((# r % upper_bound))
}


a96 1
	set -o arc4random
d101 1
a101 1
		rndval=$(arc4random_uniform 36#100000)
@


1.18
log
@• use ${rndpfx: -36} instead of a loop
• when assign to a shell variable, do not %08u leading zeroes
• add arc4random_uniform pure shell implementation, similar to the one
  in BSD::arc4random courtesy of Damien Miller
• use $(arc4random_uniform 36#100000) instead of modulo operations
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.17 2008/10/21 21:03:33 tg Exp $
d3 1
a3 1
# Copyright (c) 2006, 2007, 2008
d44 1
a44 1
	# (2**32 - (x * 2)) % x == 2**32 % x when x <= 2**31
d46 1
a46 1
	    ((0xffffffff - (upper_bound * 2)) + 1) % upper_bound ))
@


1.17
log
@modernise, simplify
commit before testing (as backup)
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.16 2008/09/06 15:07:51 tg Exp $
d21 41
d139 1
a139 1
	RANDOM=$(dd if=/dev/prandom bs=4 count=1 2>&- | hexdump -e '1/4 "%08u"')
d141 1
a141 1
	RANDOM=$(dd if=/dev/arandom bs=4 count=1 2>&- | hexdump -e '1/4 "%08u"')
d143 1
a143 1
		typeset -Uui36 'rndval=( (RANDOM << 15 | RANDOM) % 60466176)'
d146 1
a146 3
	while (( ${#rndpfx} > 36 )); do
		rndpfx=${rndpfx#?}
	done
@


1.16
log
@add my new “you wanna shell? gimme root pw!” code to /etc/rc.netselect on
the baselive CD… for the archives (as my personal /etc/rc.netselect is not
publically versioned)

/etc/ttys on a live cd _should_ have a secure console, so it won’t trigger
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.15 2008/07/07 13:57:13 tg Exp $
d3 1
a3 1
# Copyright (c) 2006, 2007
d43 1
a43 1
			mv /home/live/.Xmodmap /home/live/.Xmodmap~
d59 2
a60 2
		typeset -iR3 i=0
		while (( i < ${#layouts[*]} )); do
a61 1
			let i++
d95 1
a95 1
	typeset -i8 x
d99 1
a99 2
	x=$((RANDOM & 255))
	print -n "\0${x#8#}" >/dev/arandom
@


1.15
log
@nuke more advertising clauses from me; also remove mine and TNF's original
one (not all the other nbsd related) from the list
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.14 2007/09/28 20:46:53 tg Exp $
d182 18
@


1.14
log
@reduce writes to /dev/arandom, do them where necessary only
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.13 2007/08/12 13:59:36 tg Exp $
a11 4
# Advertising materials mentioning features or use of this work must
# display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
@


1.13
log
@use entropy generated between /etc/rc start and hostname generation for the
latter, too
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.12 2007/08/01 21:56:03 tg Exp $
d100 1
d103 4
a106 1
	RANDOM=$(dd if=/dev/urandom bs=4 count=1 2>&- | hexdump -e '1/4 "%08u"')
@


1.12
log
@…
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.11 2007/08/01 21:37:53 tg Exp $
d101 2
@


1.11
log
@• /etc/skel -> /home/live (at that point already)
• note the setting in wsconsctl.conf not kbdtype
• change XF86Config, so that xdm already knows about the layout

XXX how to do this for sparc? (not yet anyway)
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.10 2007/08/01 15:27:04 tg Exp $
d42 1
a42 1
				$a
@


1.10
log
@if the user choses to override the keyboard layout, don't present our
custom ~/.Xmodmap but preserve it as ~/.Xmodmap~ ☺
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.9 2007/07/31 22:32:12 tg Exp $
d40 19
a58 2
			echo $resp >/etc/kbdtype
			mv /etc/skel/.Xmodmap /etc/skel/.Xmodmap~
@


1.9
log
@untested keyboard selection stuff for the baselive CD
requested by Bef from C3B3
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.8 2007/07/31 22:23:49 tg Exp $
d41 1
@


1.8
log
@• coding style
• no /?irc for now…
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.7 2007/06/15 23:46:48 tg Exp $
d3 1
a3 1
# Copyright (c) 2006
d25 28
d58 1
@


1.7
log
@same here… typeset and local
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.6 2006/12/21 23:14:25 tg Exp $
d25 1
a25 2
function show_info
{
d29 1
a29 1
	print 'interactive help: http://www.mirbsd.org/?irc'
d42 1
a42 2
function get_passwd
{
d51 1
a51 2
function set_hostname
{
d67 1
a67 2
function get_net_ifnames
{
d80 1
a80 2
function ask_netconfig
{
d108 1
a108 2
function do_netconf
{
d126 1
a126 2
function do_before
{
d130 1
a130 2
function do_after
{
@


1.6
log
@regexp syntax error, oops (typo)
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.5 2006/12/20 18:01:04 tg Exp $
d72 2
a73 2
	local foo
	integer i
@


1.5
log
@ask the user to interact in case we possibly scroll too much,
before information is lost on top of the screen
@
text
@d1 1
a1 1
# $MirOS: src/share/misc/licence.template,v 1.20 2006/12/11 21:04:56 tg Rel $
d36 1
a36 1
	    fold -sw70 | sed 's!^!| '
@


1.4
log
@add a "declaration where you can find source code", especially
for third-party stuff (e.g. Live CD with preinstalled GPL stuff),
and for preinstalled non-free material (first line of /NONFREE.TXT
shall con- tain a list of all of them, then descriptions), etc.
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.3 2006/11/19 16:43:41 tg Exp $
d6 5
a10 6
# Licensee is hereby permitted to deal in this work without restric-
# tion, including unlimited rights to use, publicly perform, modify,
# merge, distribute, sell, give away or sublicence, provided all co-
# pyright notices above, these terms and the disclaimer are retained
# in all redistributions or reproduced in accompanying documentation
# or other materials provided with binary redistributions.
d16 8
a23 8
# Licensor offers the work "AS IS" and WITHOUT WARRANTY of any kind,
# express, or implied, to the maximum extent permitted by applicable
# law, without malicious intent or gross negligence; in no event may
# licensor, an author or contributor be held liable for any indirect
# or other damage, or direct damage except proven a consequence of a
# direct error of said person and intended use of this work, loss or
# other issues arising in any way out of its use, even if advised of
# the possibility of such damage or existence of a defect.
d38 3
@


1.3
log
@make mksh compatible to the AT&T ksh spec which says, according to
twkm (from #ksh on freenode), that $RANDOM is always an unsigned
15-bit decimal integer.

(RANDOM << 15 | RANDOM) thusly yields 30 bit, which is still more
than 36^5, so we can use it on the baselife CD to speed things up
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.2 2006/10/17 18:26:18 tg Exp $
d32 7
@


1.2
log
@run rtsol on the dhcp interface early
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/rc.netselect.common,v 1.1 2006/09/30 20:59:00 tg Exp $
d49 1
a49 1
		typeset -Uui36 'rndval=(RANDOM % 60466176)' # 36^5
@


1.1
log
@simplify; commonise
@
text
@d1 1
a1 1
# $MirOS: src/distrib/baselive/i386/rc.netselect,v 1.4 2006/09/30 20:50:12 tg Exp $
d116 4
@

