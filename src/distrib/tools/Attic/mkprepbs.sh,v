head	1.5;
access;
symbols
	MIRBSD_10:1.4.0.2
	MIRBSD_10_BASE:1.4;
locks; strict;
comment	@# @;


1.5
date	2008.10.21.01.21.50;	author tg;	state dead;
branches;
next	1.4;
commitid	10048FD2EBE27E01F31;

1.4
date	2007.10.20.23.22.07;	author tg;	state Exp;
branches;
next	1.3;
commitid	100471A8DB00E5AB4D4;

1.3
date	2007.10.20.22.31.38;	author tg;	state Exp;
branches;
next	1.2;
commitid	100471A81D94BE3C6BF;

1.2
date	2007.10.20.22.27.19;	author tg;	state Exp;
branches;
next	1.1;
commitid	100471A80D13991C6E2;

1.1
date	2007.10.20.22.24.42;	author tg;	state Exp;
branches;
next	;
commitid	100471A802C2BF20985;


desc
@@


1.5
log
@clean up from the first stabs
@
text
@#!/bin/mksh
# $MirOS: src/distrib/tools/mkprepbs.sh,v 1.4 2007/10/20 23:22:07 tg Exp $
#-
# Copyright (c) 2007
#	Thorsten Glaser <tg@@mirbsd.de>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# Advertising materials mentioning features or use of this work must
# display the following acknowledgement:
#	This product includes material provided by Thorsten Glaser.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.
#-
# Create a self-installing bootxx for i386.
# Arguments: $1 = chain ELF object; $2 = binary chain, linked
# Output: shell script to stdout

rcsid='$MirOS: src/distrib/tools/mkprepbs.sh,v 1.4 2007/10/20 23:22:07 tg Exp $'

function die {
	rv=$1; shift
	print -u2 -- "$@@"
	exit $rv
}

[[ -s $1 ]] || die 1 Cannot read input file "'$1'"
[[ -s $2 ]] || die 1 Cannot read input file "'$2'"

nm $1 |&
while read -p adr typ sym; do
	[[ $sym = @@(_start|pad_start|patch_sector) ]] || continue
	eval typeset -i10 sym_$sym=0x\$adr
done

thecode=$(dd if=$2 bs=1 skip=$sym__start \
    count=$((sym_pad_start - sym__start)) 2>/dev/null | \
    hexdump -ve '1/1 "0x%02X "')

print '#!/usr/bin/env mksh'
print "# $rcsid"
print "# \$miros:${rcsid#*:}"
cat <<'EOF'
#-
# Copyright (c) 2007
#	Thorsten Glaser <tg@@mirbsd.de>
#
# Provided that these terms and disclaimer and all copyright notices
# are retained or reproduced in an accompanying document, permission
# is granted to deal in this work without restriction, including un-
# limited rights to use, publicly perform, distribute, sell, modify,
# merge, give away, or sublicence.
#
# This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
# the utmost extent permitted by applicable law, neither express nor
# implied; without malicious intent or gross negligence. In no event
# may a licensor, author or contributor be held liable for indirect,
# direct, other damage, loss, or other issues arising in any way out
# of dealing in the work, even if advised of the possibility of such
# damage or existence of a defect, except proven that it results out
# of said person's immediate fault when using the work as intended.
#-
# Self-installing i386 boot block chain loader for MirOS BSD
# Appends stdin to stdout.

EOF
print set -A pbs_thecode $thecode
print typeset -i pbs_ofs_sector=$((sym_patch_sector - sym__start))
print typeset -i pbs_curptr=$((sym_pad_start - sym__start))
cat <<'EOF'

function pbs_output {
	typeset ostr=
	typeset -Uui8 vo

	# fill the block table
	(( pbs_thecode[pbs_ofs_sector] = $1 + 1 ))
	while (( pbs_curptr < 126 )); do
		(( pbs_thecode[pbs_curptr++] = RANDOM & 0xFF ))
	done

	# fill in the hashes
	(( pbs_thecode[pbs_curptr++] = 0x8C ))
	(( pbs_thecode[pbs_curptr++] = 0xCA ))
	pbs_curptr=0
	while (( pbs_curptr < 126 )); do
		(( pbs_thecode[126] ^= pbs_thecode[pbs_curptr++] ))
		(( pbs_thecode[127] ^= pbs_thecode[pbs_curptr++] ))
	done

	# create the output string
	pbs_curptr=0
	while (( pbs_curptr < 128 )); do
		(( vo = pbs_thecode[pbs_curptr++] ))
		ostr="$ostr\\0${vo#8#}"
	done

	# the part after $ostr generated by:
	# $ dd if=<sparc cdrom with disklabel applied> bs=1 skip=128 | \
	#   hexdump -ve '1/1 "\\0%o"' | sed -e 's/\\00\\/\\0\\/g' -e 's/\\00\\/\\0\\/g'
	print -n "$ostr\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\01\0136\010\0\0\0\0\0\0\0\0\01\010\0\0\0\0\01\02\0200\0\0\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0332\0276\0125\0252"
}

typeset -i chainsec=-1

while getopts ":s:" ch; do
	case $ch {
	(s)	if (( (chainsec = OPTARG) < 0 || OPTARG > 62 )); then
			print -u2 Error: invalid chain sector "'$OPTARG'"
			exit 1
		fi ;;
	(*)	chainsec=-2
		break ;;
	}
done
shift $((OPTIND - 1))
if (( chainsec < 0 )); then
	print -u2 "Syntax: prepend_chain -s sector | dd of=image conv=notrunc"
	exit 1
fi

pbs_output $chainsec
exec cat
EOF
exit 0
@


1.4
log
@make this into a function
@
text
@d2 1
a2 1
# $MirOS: src/distrib/tools/mkprepbs.sh,v 1.3 2007/10/20 22:31:38 tg Exp $
d30 1
a30 1
rcsid='$MirOS: src/distrib/tools/mkprepbs.sh,v 1.3 2007/10/20 22:31:38 tg Exp $'
@


1.3
log
@oops, did not actually use the -s argument
@
text
@d2 1
a2 1
# $MirOS: src/distrib/tools/mkprepbs.sh,v 1.2 2007/10/20 22:27:19 tg Exp $
d30 1
a30 1
rcsid='$MirOS: src/distrib/tools/mkprepbs.sh,v 1.2 2007/10/20 22:27:19 tg Exp $'
d78 3
a80 3
print set -A thecode $thecode
print typeset -i ofs_sector=$((sym_patch_sector - sym__start))
print typeset -i curptr=$((sym_pad_start - sym__start))
d83 32
d133 1
a133 29
# fill the block table
(( thecode[ofs_sector] = chainsec + 1 ))
while (( curptr < 126 )); do
	(( thecode[curptr++] = RANDOM & 0xFF ))
done

# fill in the hashes
(( thecode[curptr++] = 0x8C ))
(( thecode[curptr++] = 0xCA ))
curptr=0
while (( curptr < 126 )); do
	(( thecode[126] ^= thecode[curptr++] ))
	(( thecode[127] ^= thecode[curptr++] ))
done

# create the output string
ostr=
curptr=0
typeset -Uui8 vo
while (( curptr < 128 )); do
	(( vo = thecode[curptr++] ))
	ostr="$ostr\\0${vo#8#}"
done

# over and out
# the part after $ostr generated by:
# $ dd if=<sparc cdrom with disklabel applied> bs=1 skip=128 | \
#   hexdump -ve '1/1 "\\0%o"' | sed -e 's/\\00\\/\\0\\/g' -e 's/\\00\\/\\0\\/g'
print -n "$ostr\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\01\0136\010\0\0\0\0\0\0\0\0\01\010\0\0\0\0\01\02\0200\0\0\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\024\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0332\0276\0125\0252"
@


1.2
log
@we need to prepend to input, so pass it through after us
@
text
@d2 1
a2 1
# $MirOS: src/distrib/tools/mkprepbs.sh,v 1.1 2007/10/20 22:24:42 tg Exp $
d30 1
a30 1
rcsid='$MirOS: src/distrib/tools/mkprepbs.sh,v 1.1 2007/10/20 22:24:42 tg Exp $'
d102 1
@


1.1
log
@add a dynamic chain-loader + SunOS disklabel creator, including entropy â˜º
@
text
@d2 1
a2 1
# $MirOS: src/distrib/tools/i386_chain.S,v 1.7 2007/10/20 22:05:13 tg Exp $
d30 1
a30 1
rcsid='$MirOS: src/sys/arch/i386/stand/bootxx/mkbxinst.sh,v 1.2 2007/10/20 21:59:02 tg Exp $'
d75 1
d129 1
a129 1
exit 0
@

