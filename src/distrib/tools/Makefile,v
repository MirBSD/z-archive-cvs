head	1.51;
access;
symbols
	MIRBSD_10:1.18.0.2
	MIRBSD_10_BASE:1.18;
locks; strict;
comment	@# @;


1.51
date	2019.01.05.13.30.52;	author tg;	state Exp;
branches;
next	1.50;
commitid	1005C30B1A05E192EA5;

1.50
date	2018.01.07.23.27.33;	author tg;	state Exp;
branches;
next	1.49;
commitid	1005A52ACF9654215C5;

1.49
date	2017.01.29.00.51.05;	author tg;	state Exp;
branches;
next	1.48;
commitid	100588D3C8F09DC1F20;

1.48
date	2016.01.02.20.05.07;	author tg;	state Exp;
branches;
next	1.47;
commitid	10056882D871C1C3E41;

1.47
date	2015.01.02.13.54.19;	author tg;	state Exp;
branches;
next	1.46;
commitid	10054A6A31E3A41516F;

1.46
date	2014.01.04.20.24.59;	author tg;	state Exp;
branches;
next	1.45;
commitid	10052C86E2F00C31DB5;

1.45
date	2013.01.01.17.31.05;	author tg;	state Exp;
branches;
next	1.44;
commitid	10050E31D6B7FB977FF;

1.44
date	2012.01.14.18.59.29;	author tg;	state Exp;
branches;
next	1.43;
commitid	1004F11D0A671854233;

1.43
date	2011.01.03.17.49.36;	author tg;	state Exp;
branches;
next	1.42;
commitid	1004D220C4445D53F23;

1.42
date	2010.08.15.14.20.43;	author tg;	state Exp;
branches;
next	1.41;
commitid	1004C67F7C957755D6D;

1.41
date	2010.01.07.20.56.10;	author tg;	state Exp;
branches;
next	1.40;
commitid	1004B464A630F817F6F;

1.40
date	2010.01.06.18.52.24;	author tg;	state Exp;
branches;
next	1.39;
commitid	1004B44DBF909E317C9;

1.39
date	2009.08.15.18.30.09;	author tg;	state Exp;
branches;
next	1.38;
commitid	1004A86FEC35A8149F4;

1.38
date	2009.08.15.18.17.03;	author tg;	state Exp;
branches;
next	1.37;
commitid	1004A86FBB278FB2986;

1.37
date	2009.08.11.21.12.28;	author tg;	state Exp;
branches;
next	1.36;
commitid	1004A81DECA055EA2BB;

1.36
date	2009.08.11.15.30.47;	author tg;	state Exp;
branches;
next	1.35;
commitid	1004A818EBF49B1E6B5;

1.35
date	2009.06.29.19.43.34;	author tg;	state Exp;
branches;
next	1.34;
commitid	1004A49196E0A8C7E20;

1.34
date	2009.06.29.17.08.29;	author tg;	state Exp;
branches;
next	1.33;
commitid	1004A48F4DB6BC02B75;

1.33
date	2009.06.07.13.13.18;	author tg;	state Exp;
branches;
next	1.32;
commitid	1004A2BBCF702DB98DA;

1.32
date	2009.04.26.10.22.09;	author tg;	state Exp;
branches;
next	1.31;
commitid	10049F435E840C30F06;

1.31
date	2009.04.16.13.20.23;	author tg;	state Exp;
branches;
next	1.30;
commitid	10049E73089575F8D71;

1.30
date	2009.01.25.20.13.07;	author tg;	state Exp;
branches;
next	1.29;
commitid	100497CC7E55BAA48A2;

1.29
date	2009.01.17.12.21.01;	author tg;	state Exp;
branches;
next	1.28;
commitid	1004971CD4344697E68;

1.28
date	2008.10.30.17.47.34;	author tg;	state Exp;
branches;
next	1.27;
commitid	1004909F292493E4BFA;

1.27
date	2008.10.21.19.57.37;	author tg;	state Exp;
branches;
next	1.26;
commitid	10048FE342C64FB53F7;

1.26
date	2008.10.21.19.54.36;	author tg;	state Exp;
branches;
next	1.25;
commitid	10048FE338521802F66;

1.25
date	2008.10.21.01.43.01;	author tg;	state Exp;
branches;
next	1.24;
commitid	10048FD33B40F8593B0;

1.24
date	2008.10.21.01.35.59;	author tg;	state Exp;
branches;
next	1.23;
commitid	10048FD319B20D7BD36;

1.23
date	2008.10.21.01.21.50;	author tg;	state Exp;
branches;
next	1.22;
commitid	10048FD2EBE27E01F31;

1.22
date	2008.08.06.00.28.37;	author tg;	state Exp;
branches;
next	1.21;
commitid	1004898F04165AB89FE;

1.21
date	2008.08.05.22.48.45;	author tg;	state Exp;
branches;
next	1.20;
commitid	1004898D8A016CF755D;

1.20
date	2008.08.05.19.19.57;	author tg;	state Exp;
branches;
next	1.19;
commitid	1004898A7E37E7F803E;

1.19
date	2008.03.15.22.23.04;	author tg;	state Exp;
branches;
next	1.18;
commitid	10047DC4C5E4800B348;

1.18
date	2007.10.20.23.30.40;	author tg;	state Exp;
branches;
next	1.17;
commitid	100471A8F9932BF985D;

1.17
date	2007.10.20.22.32.02;	author tg;	state Exp;
branches;
next	1.16;
commitid	100471A81F86B1015D6;

1.16
date	2007.10.20.22.24.41;	author tg;	state Exp;
branches;
next	1.15;
commitid	100471A802C2BF20985;

1.15
date	2007.10.20.21.59.49;	author tg;	state Exp;
branches;
next	1.14;
commitid	100471A7A5A6F57E677;

1.14
date	2007.10.20.20.28.13;	author tg;	state Exp;
branches;
next	1.13;
commitid	100471A64F10310F35A;

1.13
date	2007.10.16.22.45.12;	author tg;	state Exp;
branches;
next	1.12;
commitid	10047153EFF2FE6DA5B;

1.12
date	2007.10.16.22.07.55;	author tg;	state Exp;
branches;
next	1.11;
commitid	100471536484D11CA26;

1.11
date	2007.10.16.22.05.42;	author tg;	state Exp;
branches;
next	1.10;
commitid	100471535C2161E8684;

1.10
date	2007.10.02.18.34.47;	author tg;	state Exp;
branches;
next	1.9;
commitid	10047028F3C46428C83;

1.9
date	2007.10.02.00.48.12;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004701954801EB034C;

1.8
date	2007.10.01.22.00.24;	author tg;	state Exp;
branches;
next	1.7;
commitid	10047016DF82D88E25A;

1.7
date	2007.10.01.21.59.14;	author tg;	state Exp;
branches;
next	1.6;
commitid	10047016DC6749B7BCE;

1.6
date	2007.10.01.21.52.20;	author tg;	state Exp;
branches;
next	1.5;
commitid	10047016C034CB50FF7;

1.5
date	2007.10.01.21.40.23;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004701695D6FC1F0D8;

1.4
date	2007.10.01.21.38.20;	author tg;	state Exp;
branches;
next	1.3;
commitid	100470168D40FCD2E45;

1.3
date	2007.10.01.21.19.52;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004701646E79030948;

1.2
date	2007.09.28.22.44.36;	author tg;	state Exp;
branches;
next	1.1;
commitid	10046FD83E44B27BEF1;

1.1
date	2007.09.28.22.32.54;	author tg;	state Exp;
branches;
next	;
commitid	10046FD810245186BA9;


desc
@@


1.51
log
@2019
@
text
@# $MirOS: src/distrib/tools/Makefile,v 1.50 2018/01/07 23:27:33 tg Exp $

all: sundsklbl

.include <bsd.own.mk>

.if ${MACHINE_ARCH} == "i386"
all: i386_chain
.endif

CHAINSECTOR?=	24
.if defined(SERIALSPEED)
CDROM?=		cdrom${SERIALSPEED}.iso
.endif
CDROM?=		cdrom${OSrev}.iso
DSTTOPDIR?=	/var/www/htdocs/v${OSrev}

CPPFLAGS+=	-DCHAINSECTOR=${CHAINSECTOR}

depend:
prereq:

clean: .PHONY
	-rm -f i386_chain sundsklbl *.o eltorito.loo ${CDROM}*
	-rm -rf cddir

cleandir: .PHONY clean

i386_chain: i386_chain.o
	ld -o $@@ --oformat binary -Ttext 0 $>

sundsklbl: sundsklbl.c
	cd ${.CURDIR} && ${MAKE} -f ${.SYSMK}/bsd.prog.mk \
	    PROG=$@@ NOMAN=Yes EXPERIMENTAL=Yes

CDROM_OPTS+=	applicationid=NetBSD_makefs
CDROM_OPTS+=	bootimage=i386\;eltorito.loo
CDROM_OPTS+=	no-emul-boot
CDROM_OPTS+=	label=MirOS~v${OSrev}~BSD~manifold-boot~CD
CDROM_OPTS+=	no-trailing-padding
CDROM_OPTS+=	preparer=MirBSD_and_contributors
CDROM_OPTS+=	publisher=Copyright_\<c\>_2002=2019_MirBSD
CDROM_OPTS+=	rockridge
CDROM_OPTS+=	rr-squash
CDROM_OPTS+=	volumeid=$$(uname -sl | tr -- '- \#' :_):i386\;sparc:Setup
#CDROM_OPTS+=	v=1

makecdimage: .PHONY
	-rm -rf cddir ${CDROM}*
	dd if=/dev/arandom bs=2048 count=1 of=eltorito.loo 2>&-	# El Torito
	mkdir -p cddir/{boot/grub,v${OSrev}/{i386,sparc}}
	for arch in i386 sparc; do \
		for file in ${DSTTOPDIR}/$$arch/{*boot*,bsd.rd,*mbr*}; do \
			[[ -e $$file ]] || continue; \
			install -m644 $$file cddir/v${OSrev}/$$arch/; \
		done; \
		mv cddir/v${OSrev}/$$arch/boot cddir/b_$$arch.ldr; \
	done
	cp cddir/b_sparc.ldr cddir/v${OSrev}/sparc/boot.net
	# fix path to default kernel file in second-stage boot loader
	set -A dump -- $$(dd if=cddir/b_sparc.ldr bs=4 count=64 | \
	    hexdump -ve '1/1 "%02X"' | sed 's/\(........\)/ \1/g'); i=0; \
	while (( i < 64 )); do [[ $${dump[i++]} = 2035560? ]] && break; done; \
	if [[ $$i = 64 || $${dump[i-1]} != 20355601 ]]; then \
		print -u2 found invalid or no patch field version; exit 1; \
	fi; ofs=$$((#0x$${dump[i+1]})); \
	print -n v${OSrev}/sparc/bsd.rd\\0 | \
	    dd of=cddir/b_sparc.ldr bs=1 seek=$$ofs conv=notrunc
	ln cddir/v${OSrev}/sparc/bsd.rd cddir/vmunix		# for kicks
	cp ${.CURDIR}/../common/00-README cddir/
.if defined(SERIALSPEED)
	sed \
	    -e 's!^boot .*$$!boot /v${OSrev}/i386/bsd.rd!' \
	    -e 's/@@SPEED@@/${SERIALSPEED}/g' \
	    ${.CURDIR}/boot.cfg.serial >cddir/boot.cfg
.else
	cat ${.CURDIR}/../common/boot.cfg.i386 >cddir/boot.cfg
.endif
	cat ${.CURDIR}/../baselive/boot.cfg.dual >>cddir/boot.cfg
	cp ${.CURDIR}/../common/extra/loopback.cfg cddir/boot/grub/
.if defined(WAIT)
	@@print === press RETURN; read x
.endif
	makefs -t cd9660 -o "$$(print -r -- ${CDROM_OPTS} | tr ' ~' ', ')" \
	    ${CDROM} cddir
	# pad the ISO with ]0;256K] NUL bytes, ie. for
	# a geometry of 16 heads, 32 sectors per track
	dd if=/dev/zero count=1 bs=$$((# (512 * 32 * 16) - \
	    ($$(stat -f %z ${CDROM}) % (512 * 32 * 16)) )) 2>&- >>${CDROM}
	getextent_cd9660 -f ${CDROM} b_i386.ldr | \
	    ${MKSH} ${BSDSRCDIR}/usr.sbin/installboot/bxinst.i386 -B 11 | \
	    dd of=${CDROM} conv=notrunc bs=2048 seek=$$(getextent_cd9660 \
	    -f ${CDROM} -b '$$BootImage$$') 2>/dev/null
	getextent_cd9660 -f ${CDROM} b_i386.ldr | \
	    ${MKSH} ${BSDSRCDIR}/usr.sbin/installboot/bxinst.i386 -A -S 2 | \
	    dd of=${CDROM} conv=notrunc bs=512 seek=${CHAINSECTOR} 2>/dev/null
	getextent_cd9660 -f ${CDROM} b_sparc.ldr | \
	    ${MKSH} ${BSDSRCDIR}/usr.sbin/installboot/bxinst.sparc \
	    -g $$((#$$(stat -f %z ${CDROM}) / (512 * 32 * 16))):16:32 \
	    -0 ${CHAINSECTOR} -S 2 | \
	    dd of=${CDROM} conv=notrunc 2>/dev/null

.include <bsd.obj.mk>
@


1.50
log
@2018
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.49 2017/01/29 00:51:05 tg Exp $
d41 2
a42 2
CDROM_OPTS+=	preparer=MirBSD_and_its_contributors
CDROM_OPTS+=	publisher=Copyright_\<c\>_2002=2018_The_MirOS_Project
@


1.49
log
@2017
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.47 2015/01/02 13:54:19 tg Exp $
d42 1
a42 1
CDROM_OPTS+=	publisher=Copyright_\<c\>_2002=2017_The_MirOS_Project
@


1.48
log
@2016
@
text
@d42 1
a42 1
CDROM_OPTS+=	publisher=Copyright_\<c\>_2002=2016_The_MirOS_Project
@


1.47
log
@2015; another year of the rolling release (and yes, new snapshots will be coming soonish)
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.46 2014/01/04 20:24:59 tg Exp $
d42 1
a42 1
CDROM_OPTS+=	publisher=Copyright_\<c\>_2002=2015_The_MirOS_Project
@


1.46
log
@2014
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.45 2013/01/01 17:31:05 tg Exp $
d42 1
a42 1
CDROM_OPTS+=	publisher=Copyright_\<c\>_2002=2014_The_MirOS_Project
@


1.45
log
@2013
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.44 2012/01/14 18:59:29 tg Exp $
d42 1
a42 1
CDROM_OPTS+=	publisher=Copyright_\<c\>_2002=2013_The_MirOS_Project
@


1.44
log
@© 2012 (in most places where it’s appropriate)
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.43 2011/01/03 17:49:36 tg Exp $
d42 1
a42 1
CDROM_OPTS+=	publisher=Copyright_\<c\>_2002=2012_The_MirOS_Project
@


1.43
log
@2011
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.42 2010/08/15 14:20:43 tg Exp $
d42 1
a42 1
CDROM_OPTS+=	publisher=Copyright_\<c\>_2002=2011_The_MirOS_Project
@


1.42
log
@missing boot.cfg.dual and loopback.cfg
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.41 2010/01/07 20:56:10 tg Exp $
d42 1
a42 1
CDROM_OPTS+=	publisher=Copyright_\<c\>_2002=2010_The_MirOS_Project
@


1.41
log
@add auto-network-and-sshd ISO variant, requested by Vutral
thanks for the good idea - we'll provide it by default from now
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.40 2010/01/06 18:52:24 tg Exp $
d51 1
a51 1
	mkdir -p cddir/v${OSrev}/{i386,sparc}
d77 1
a77 1
	cp ${.CURDIR}/../common/boot.cfg.i386 cddir/boot.cfg
d79 2
@


1.40
log
@welcome to Y2k01
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.39 2009/08/15 18:30:09 tg Exp $
d74 1
a74 1
	    -e 's/@@/${SERIALSPEED}/g' \
@


1.39
log
@and I thought I had had enough coffee…
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.38 2009/08/15 18:17:03 tg Exp $
d42 1
a42 1
CDROM_OPTS+=	publisher=Copyright_\<c\>_2002=2009_The_MirOS_Project
@


1.38
log
@make this sedding easier for the floppy
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.37 2009/08/11 21:12:28 tg Exp $
d73 1
a73 1
	    -e 's!^boot .*$!boot /v${OSrev}/i386/bsd.rd!' \
@


1.37
log
@we want to squash UIDs and GIDs and the likes here, too
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.36 2009/08/11 15:30:47 tg Exp $
d72 4
a75 1
	sed 's/@@/${SERIALSPEED}/g' ${.CURDIR}/boot.cfg.serial >cddir/boot.cfg
@


1.36
log
@a boot.net file can be helpful for obsd/sol converts
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.35 2009/06/29 19:43:34 tg Exp $
d44 1
@


1.35
log
@better safe than sorry, use unsigned arithmetics (2G vs 4G ISOs, etc.)
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.34 2009/06/29 17:08:29 tg Exp $
d49 1
d58 1
a58 1
	dd if=/dev/arandom bs=2048 count=1 of=eltorito.loo 2>&-	# El Torito
@


1.34
log
@pad ISOs manually (without makefs(8)' help) to the correct geometry
not by 「dd conv=osync」 or truncating after makefs had padded, but
by telling makefs to not pad, calculating the missing amount of NUL
bytes ourselves, and simply appending them (faster than osync)
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.33 2009/06/07 13:13:18 tg Exp $
d64 1
a64 1
	fi; ofs=$$((0x$${dump[i+1]})); \
d81 1
a81 1
	dd if=/dev/zero count=1 bs=$$(( (512 * 32 * 16) - \
d92 1
a92 1
	    -g $$(($$(stat -f %z ${CDROM}) / (512 * 32 * 16))):16:32 \
@


1.33
log
@use bxinst.i386 -A option for ISOs HDD boot function
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.32 2009/04/26 10:22:09 tg Exp $
a35 1
# do *not* use no-trailing-padding
d40 1
d78 5
a82 5
	    ${CDROM}~ cddir
	# pad for a geometry of 16 heads, 32 sectors per track
	mv ${CDROM}~ ${CDROM}
	#XXX not needed
	#dd if=${CDROM}~ of=${CDROM} obs=$$((16 * 32 * 512)) conv=osync
@


1.32
log
@pasto
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.31 2009/04/16 13:20:23 tg Exp $
d88 1
a88 1
	    ${MKSH} ${BSDSRCDIR}/usr.sbin/installboot/bxinst.i386 -S 2 | \
@


1.31
log
@• make use of the imbedded patch area to note the file(!) offset of
  the __defkernel patch field (and with possible future extensions)
• strip /usr/mdec/boot now by default ☺
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.30 2009/01/25 20:13:07 tg Exp $
d59 1
a59 1
	set -A dump -- $$(dd if=${WRKDIR}/b_sparc.ldr bs=4 count=64 | \
@


1.30
log
@help in building the serial console CDs
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.29 2009/01/17 12:21:01 tg Exp $
d59 6
a64 10
	set -A sect_text -- $$(objdump -wh --target=a.out-sunos-big \
	    cddir/b_sparc.ldr | fgrep .text); \
	(( fofs_text = 0x$${sect_text[5]} )); \
	nm --target=a.out-sunos-big cddir/b_sparc.ldr |& \
	while read -p adr typ sym; do \
		[[ $$sym = @@(___defkernel|_start) ]] || continue; \
		eval typeset -i10 sym$$sym=0x\$$adr; \
	done; \
	typeset -Uui10 ofs; \
	(( ofs = sym___defkernel - sym_start + fofs_text )); \
a66 1
	strip --target=a.out-sunos-big cddir/b_sparc.ldr
@


1.29
log
@2009
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.28 2008/10/30 17:47:34 tg Exp $
d12 3
d74 3
d78 4
@


1.28
log
@improve padding scenarios:
• as we do not use makefs(8) -o no-trailing-padding, an extra 300 KiB
  is *always* added (not padded) at the end of the ISO 9660 filesy-
  stem, thusly we can just truncate to a padding of 256 KiB
• bigger padding (256 KiB ipv 64 KiB) reduces number of cylinders
• no need to dd(1) if we can mv(1)
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.27 2008/10/21 19:57:37 tg Exp $
d39 1
a39 1
CDROM_OPTS+=	publisher=Copyright_\<c\>_2002=2008_The_MirOS_Project
@


1.27
log
@strip sparc bootloader after patching, as we won’t need the symbol table
any more further on anyway, to save even more space (tested in qemu-snap)
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.26 2008/10/21 19:54:36 tg Exp $
d33 1
d74 4
a77 2
	# pad for a geometry of 8 heads, 16 sectors per track
	dd if=${CDROM}~ of=${CDROM} obs=$$((8 * 16 * 512)) conv=osync
d87 1
a87 1
	    -g $$(($$(stat -f %z ${CDROM}) / (512 * 16 * 8))):8:16 \
@


1.26
log
@here, too, adapt for new sparc bootloader
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.25 2008/10/21 01:43:01 tg Exp $
d67 1
@


1.25
log
@… this is what I mean by testing ;-)
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.24 2008/10/21 01:35:59 tg Exp $
d54 13
d68 2
a69 2
	ln cddir/v${OSrev}/sparc/bsd.rd cddir/bsd		# for idiots
	cp ${.CURDIR}/../common/00-README ${.CURDIR}/boot.cfg cddir/
@


1.24
log
@use some sensible geometry for the CD:
pad it up to “cylinders” of 8 heads, 16 sectors per track (in the worst
case, this is a loss of 62 KiB, but we pad with 300 KiB anyway, so the
percentage is low), and use this for the Sun disklabel, so that it now
exactly matches the real image size for all four slices (a, b, c, d)

XXX distrib/common clean target seems botched
XXX untested
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.23 2008/10/21 01:21:50 tg Exp $
d60 1
a60 1
	dd if=${CDROM}~ of=${CDROM} obs=$$(8*16*512) conv=osync
@


1.23
log
@clean up from the first stabs
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.22 2008/08/06 00:28:37 tg Exp $
d21 1
a21 1
	-rm -f i386_chain sundsklbl *.o eltorito.loo ${CDROM}
d44 1
a44 1
	-rm -rf cddir ${CDROM}
d58 3
a60 1
	    ${CDROM} cddir
d70 1
@


1.22
log
@switch to NetBSD® makefs(8), with prejudice
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.21 2008/08/05 22:48:45 tg Exp $
d8 1
a8 1
all: prepend_chain
a28 3
prepend_chain: ${.CURDIR}/mkprepbs.sh i386_chain
	${MKSH} ${.CURDIR}/mkprepbs.sh i386_chain.o i386_chain >$@@

@


1.21
log
@• replace uses of mkisofs.log file with new getextent_cd9660(1) tool
• remove -N -d -D -L: our bootloader can actually handle standard
  _conformant_ ISO 9660 filesystems… apparently unlike others’
• remove -f: no symlinks in the source tree
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.20 2008/08/05 19:19:57 tg Exp $
d21 1
a21 1
	-rm -f i386_chain sundsklbl *.o ${CDROM}
d36 10
d56 1
a56 1
	dd if=/dev/arandom bs=2048 count=1 of=cddir/b_i386.iso	# El Torito
d60 2
a61 6
	mkisofs -r -b b_i386.iso -c boot.cat -no-emul-boot \
	    -P 'The http://mirbsd.de/ team and its contributors' \
	    -p 'Copyright © 2002-2008 by The MirOS Project' \
	    -V 'MirOS #${OSrev} BSD manifold-boot CD' \
	    -volset "$$(uname -sl) i386/sparc Setup" -sysid MirOSBSD \
	    -pad -o ${CDROM} cddir 2>&1
d65 1
a65 1
	    -f ${CDROM} -b b_i386.iso) 2>/dev/null
@


1.20
log
@switch away from using mkisofs’ boot info table, for now and forever, or so…
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.19 2008/03/15 22:23:04 tg Exp $
d21 1
a21 2
	-rm -f i386_chain sundsklbl *.o
	-rm -rf ${CDROM} mkisofs.log
d37 1
a37 1
	-rm -rf cddir ${CDROM} mkisofs.log
d50 1
a50 2
	mkisofs -r -f -L -d -D -N -v -v -b b_i386.iso -c boot.cat \
	    -no-emul-boot \
d55 2
a56 2
	    -pad -o ${CDROM} cddir 2>&1 | tee mkisofs.log
	fgrep b_i386.ldr mkisofs.log | \
d58 3
a60 3
	    dd of=${CDROM} conv=notrunc bs=2048 seek=$$(fgrep b_i386.iso \
	    mkisofs.log | while read s rest; do print $$s; done) 2>/dev/null
	fgrep b_i386.ldr mkisofs.log | \
d63 1
a63 1
	fgrep b_sparc.ldr mkisofs.log | \
@


1.19
log
@2008
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.18 2007/10/20 23:30:40 tg Exp $
d47 3
a49 3
	cp cddir/b_i386.ldr cddir/b_i386.iso		# El Torito
	ln cddir/v${OSrev}/sparc/bsd.rd cddir/vmunix	# for kicks
	ln cddir/v${OSrev}/sparc/bsd.rd cddir/bsd	# for idiots
d52 1
a52 1
	    -no-emul-boot -boot-load-size 4 -boot-info-table \
d59 4
@


1.18
log
@use the new -0 option, remove need for pregenerated prepend_chain.sh to
exist in the repo, and dual_chain.bin hasn’t been used for a while either
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.17 2007/10/20 22:32:02 tg Exp $
d54 1
a54 1
	    -p 'Copyright © 2002-2007 by The MirOS Project' \
@


1.17
log
@use it
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.16 2007/10/20 22:24:41 tg Exp $
d62 2
a63 2
	    ${MKSH} ${BSDSRCDIR}/usr.sbin/installboot/bxinst.sparc -S 2 | \
	    mksh ${.CURDIR}/prepend_chain.sh -s ${CHAINSECTOR} | \
@


1.16
log
@add a dynamic chain-loader + SunOS disklabel creator, including entropy ☺
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.15 2007/10/20 21:59:49 tg Exp $
d63 1
a63 1
	    cat ${.CURDIR}/dual_chain.bin - | \
@


1.15
log
@• enable the i386 self-installing bootblocks
• enable to install these
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.14 2007/10/20 20:28:13 tg Exp $
d8 1
a8 1
all: i386_chain
d30 3
@


1.14
log
@use the new -S option
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.13 2007/10/16 22:45:12 tg Exp $
d55 3
a57 10
.if ${MACHINE} == "i386"
	/usr/mdec/installboot -S 24 -v -h 16 -s 63 -I $$(fgrep \
	    b_i386.ldr mkisofs.log | \
	    while read start end rest; do \
		print -- $$start $$end; \
	done) /usr/mdec/bootxx ${CDROM}
.else
	@@print Can only do this on i386 at the moment.
	@@exit 1
.endif
d61 1
a61 1
	    dd of=${CDROM} conv=notrunc
@


1.13
log
@• just fucking use /usr/mdec/bootxx in the i386 MD part for now
• sparc part: the bootloaders use 512-byte blocks, thusly scale
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.12 2007/10/16 22:07:55 tg Exp $
d66 1
a66 4
	    while read start end rest; do \
	    print -- $$((start * 4)) $$((end * 4 + 3)); \
	done | \
	    ${MKSH} ${BSDSRCDIR}/usr.sbin/installboot/bxinst.sparc | \
@


1.12
log
@consolidate – now we need i386 MI/self-installing bootxx too…
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.11 2007/10/16 22:05:42 tg Exp $
d60 1
a60 1
	done) ${DSTTOPDIR}/i386/bootxx ${CDROM}
d66 3
@


1.11
log
@new: do no longer need a sparc to make a cd bootable
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.10 2007/10/02 18:34:47 tg Exp $
d55 1
a55 5
	dd if=${.CURDIR}/dual_chain.bin of=${CDROM} conv=notrunc

makebootcd: makebootcd_${MACHINE}

makebootcd_i386: .PHONY
d61 4
a64 2

makebootcd_sparc: .PHONY
d67 2
a68 1
	    dd of=${CDROM} bs=512 seek=1 conv=notrunc
@


1.10
log
@simplify/unify even more
now all we need are self-installing bootblocks or mi installboot(8)
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.9 2007/10/02 00:48:12 tg Exp $
d67 3
a69 5
	/usr/mdec/installboot -v $$(fgrep \
	    b_sparc.ldr mkisofs.log | \
	    while read start end rest; do \
		print -- -s $$start -e $$end; \
	done) dummy ${DSTTOPDIR}/sparc/bootxx ${CDROM}
@


1.9
log
@all this mumpitz wasn't really necessary, after all (at least qemu shows)
now we'd better unify installboot(8) syntax between arches…
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.8 2007/10/01 22:00:24 tg Exp $
d37 8
a44 6
	cp ${DSTTOPDIR}/i386/boot cddir/b_i386.iso
	cp ${DSTTOPDIR}/i386/boot cddir/b_i386.ldr
	cp ${DSTTOPDIR}/sparc/boot cddir/b_sparc.ldr
	cp ${.CURDIR}/../common/00-README ${.CURDIR}/boot.cfg cddir/
	cp ${DSTTOPDIR}/i386/{bsd.rd,pxeboot} cddir/v${OSrev}/i386/
	cp ${DSTTOPDIR}/sparc/{bootxx,bsd.rd} cddir/v${OSrev}/sparc/
d47 1
a47 1
	chmod -R u+w cddir
d64 1
a64 1
	done) /usr/mdec/bootxx ${CDROM}
d71 1
a71 1
	done) dummy /usr/mdec/bootxx ${CDROM}
@


1.8
log
@since CD-R vnd(4)s have no real geometry, use the standard LBA emul values
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.7 2007/10/01 21:59:14 tg Exp $
a64 1
	# XXX see ../common/Makefile.sparc::cdrom-mdboot if this doesn’t work
@


1.7
log
@pasto
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.6 2007/10/01 21:52:20 tg Exp $
d58 1
a58 1
	/usr/mdec/installboot -S 24 -v -I $$(fgrep \
@


1.6
log
@if I see this correctly, boot(8/sparc) doesn’t parse a boot.cfg
until this is fixed, link the kernel to /bsd

doesn’t hurt as we won’t have dual-arch baselive CDs
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.5 2007/10/01 21:40:23 tg Exp $
d45 1
a45 1
	chmod -R u+w ${WRKDIR}
@


1.5
log
@simplify
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.4 2007/10/01 21:38:20 tg Exp $
d44 1
@


1.4
log
@add the hooks for creating the cd image
now all we need is self-installing boot blocks, yeah…
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.3 2007/10/01 21:19:52 tg Exp $
d50 1
a50 1
	    -volset 'MirBSD Kv#${OSrev} i386/sparc Setup' -sysid MirOSBSD \
@


1.3
log
@one step more towards the dual-arch manifold-bootable ISO
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.2 2007/09/28 22:44:36 tg Exp $
d3 1
a3 1
all: i386_chain sundsklbl
d7 4
d13 1
d22 2
d34 23
a56 1
makebootcd_i386:
d63 1
a63 1
makebootcd_sparc:
@


1.2
log
@make CHAINSECTOR a Makefile variable
@
text
@d1 1
a1 1
# $MirOS: src/distrib/tools/Makefile,v 1.1 2007/09/28 22:32:54 tg Exp $
d7 2
a8 1
CHAINSECTOR=	24
d27 15
@


1.1
log
@a kludgy Makefile for building them all (Benny, BSD make isn’t for this…)
XXX need -Wno-error for sundsklbl since gcc doesn't know about $ in printf
@
text
@d1 1
a1 1
# $MirOS$
d7 4
@

