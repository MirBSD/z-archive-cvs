head	1.7;
access;
symbols
	MIRBSD_10:1.7.0.2
	MIRBSD_10_BASE:1.7;
locks; strict;
comment	@# @;


1.7
date	2007.10.20.22.05.13;	author tg;	state Exp;
branches;
next	1.6;
commitid	100471A7BAD5C74744D;

1.6
date	2007.10.20.22.01.31;	author tg;	state Exp;
branches;
next	1.5;
commitid	100471A7AD02ECF5F56;

1.5
date	2007.09.28.22.44.36;	author tg;	state Exp;
branches;
next	1.4;
commitid	10046FD83E44B27BEF1;

1.4
date	2007.09.28.22.43.36;	author tg;	state Exp;
branches;
next	1.3;
commitid	10046FD83A3532EB336;

1.3
date	2007.09.28.22.41.27;	author tg;	state Exp;
branches;
next	1.2;
commitid	10046FD81B634278C88;

1.2
date	2007.09.28.22.32.54;	author tg;	state Exp;
branches;
next	1.1;
commitid	10046FD810245186BA9;

1.1
date	2007.09.28.21.14.46;	author tg;	state Exp;
branches;
next	;
commitid	10046FD6ECE1D5DD9D8;


desc
@@


1.7
log
@make this patchable
@
text
@/* $MirOS: src/distrib/tools/i386_chain.S,v 1.6 2007/10/20 22:01:31 tg Exp $ */

/*-
 * Copyright (c) 2007
 *	Thorsten Glaser <tg@@mirbsd.de>
 *
 * Provided that these terms and disclaimer and all copyright notices
 * are retained or reproduced in an accompanying document, permission
 * is granted to deal in this work without restriction, including un-
 * limited rights to use, publicly perform, distribute, sell, modify,
 * merge, give away, or sublicence.
 *
 * Advertising materials mentioning features or use of this work must
 * display the following acknowledgement:
 *	This product includes material provided by Thorsten Glaser.
 *
 * This work is provided "AS IS" and WITHOUT WARRANTY of any kind, to
 * the utmost extent permitted by applicable law, neither express nor
 * implied; without malicious intent or gross negligence. In no event
 * may a licensor, author or contributor be held liable for indirect,
 * direct, other damage, loss, or other issues arising in any way out
 * of dealing in the work, even if advised of the possibility of such
 * damage or existence of a defect, except proven that it results out
 * of said person's immediate fault when using the work as intended.
 */

#include <machine/asm.h>

#define LDENTRY(x)	OTYPE(_ASM_LABEL(x)); _ASM_LABEL(x):
#define LTENTRY(x)	FTYPE(_ASM_LABEL(x)); _ASM_LABEL(x):
#define GDENTRY(x)	.globl _ASM_LABEL(x); LDENTRY(x)
#define GTENTRY(x)	.globl _ASM_LABEL(x); LTENTRY(x)

#ifndef CHAINSECTOR
#define CHAINSECTOR	24	/* first = sector 0 = CHS 0/0/1 */
#endif

	.intel_syntax noprefix
	.code16
	.text

GTENTRY(_start)
	xor	eax,eax
	push	eax
	popfd
	/* set up stack from 07A0:FFFC (0x179FC) down */
	add	ax,0x07A0
	mov	ss,ax
	mov	sp,0xFFFC
	sti
	push	ax		/* for retf */
	push	offset Lmain
	/* set up code and data at 07A0:0000 (0x07A00) = 0000:7A00 up */
	mov	ds,ax
	mov	es,ax
	/* transfer code and data there from 0x07C00 first */
	xor	di,di
	mov	si,0x0200
	mov	cx,0x0200 / 4
	rep	movsd
	/* jump to 'cs:offset Lmain' */
	lret

LTENTRY(Lmain)
	mov	ax,0x0201
	mov	bx,0x0200
/*	mov	cx,CHAINSECTOR + 1 */
	.byte	0xB9
GTENTRY(patch_sector)
	.word	CHAINSECTOR + 1
	mov	dh,0
Lload:	pusha
	int	0x13
	popa
	jnc	Lboot
	pusha
	xor	ax,ax
	int	0x13
	popa
	jmp	Lload
Lboot:	ljmp	0x0000,0x7C00
GTENTRY(pad_start)
#if 0
	nop

	.balign	4, 0x90
	.org	128 - 4
	.byte	0x90, 0x90, 0x55, 0xAA
#endif
@


1.6
log
@add a label
@
text
@d1 1
a1 1
/* $MirOS: src/distrib/tools/i386_chain.S,v 1.5 2007/09/28 22:44:36 tg Exp $ */
d67 4
a70 1
	mov	cx,CHAINSECTOR + 1
d83 1
d89 1
@


1.5
log
@make CHAINSECTOR a Makefile variable
@
text
@d1 1
a1 1
/* $MirOS: src/distrib/tools/i386_chain.S,v 1.4 2007/09/28 22:43:36 tg Exp $ */
d79 1
@


1.4
log
@make CHAINSECTOR 0-based like installboot(8/i386) -S option is
@
text
@d1 1
a1 1
/* $MirOS: src/distrib/tools/i386_chain.S,v 1.3 2007/09/28 22:41:27 tg Exp $ */
d34 1
d36 1
@


1.3
log
@better raise CHAINSECTOR to 24, since disklabel+bootxx are already 16 sectors
@
text
@d1 1
a1 1
/* $MirOS: src/distrib/tools/i386_chain.S,v 1.2 2007/09/28 22:32:54 tg Exp $ */
d34 1
a34 1
#define CHAINSECTOR	24
d65 1
a65 1
	mov	cx,CHAINSECTOR
@


1.2
log
@a kludgy Makefile for building them all (Benny, BSD make isn’t for this…)
XXX need -Wno-error for sundsklbl since gcc doesn't know about $ in printf
@
text
@d1 1
a1 1
/* $MirOS: src/distrib/tools/i386_chain.S,v 1.1 2007/09/28 21:14:46 tg Exp $ */
d34 1
a34 1
#define CHAINSECTOR	3
@


1.1
log
@for a dual-arch bootable CD which is also bootable from HDD, CF, etc.
@
text
@d1 1
a1 1
/* $MirOS: src/sys/arch/i386/stand/bootxx/bootxx.S,v 1.8 2007/05/26 21:57:39 tg Exp $ */
a81 6

/*-
 * compile and disassemble with:
 * $ mgcc -c i386_chain.S && ld --oformat binary -Ttext 0 i386_chain.o
 * $ objdump -D -b binary -m i386 -Mintel,i8086 a.out
 */
@

