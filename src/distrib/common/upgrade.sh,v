head	1.11;
access;
symbols
	MIRBSD_10:1.6.0.2
	MIRBSD_10_BASE:1.6;
locks; strict;
comment	@# @;


1.11
date	2010.07.13.12.49.26;	author tg;	state Exp;
branches;
next	1.10;
commitid	1004C3C60E308A081B0;

1.10
date	2010.01.07.20.56.09;	author tg;	state Exp;
branches;
next	1.9;
commitid	1004B464A630F817F6F;

1.9
date	2009.12.28.17.26.58;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004B38EA1D0B8B7C26;

1.8
date	2009.12.28.17.00.19;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004B38E42D3A8F63BD;

1.7
date	2009.03.29.11.33.29;	author tg;	state Exp;
branches;
next	1.6;
commitid	10049CF5C807202B7E9;

1.6
date	2007.08.24.14.40.35;	author tg;	state Exp;
branches;
next	1.5;
commitid	10046CEEDEB385DC30F;

1.5
date	2007.06.22.20.06.58;	author tg;	state Exp;
branches;
next	1.4;
commitid	100467C2BF054EDA492;

1.4
date	2007.03.10.04.13.12;	author tg;	state Exp;
branches;
next	1.3;
commitid	10045F2302911381176;

1.3
date	2006.12.20.22.45.48;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004589BD251F2C09EE;

1.2
date	2006.10.17.22.24.51;	author tg;	state Exp;
branches;
next	1.1;
commitid	10045355843499B4CB2;

1.1
date	2006.08.17.19.34.17;	author tg;	state Exp;
branches;
next	;
commitid	10044E4C48801BF3A85;


desc
@@


1.11
log
@prevent users upgrading from shooting their own foot by not RTFFAQing
@
text
@#!/bin/mksh
# $MirOS: src/distrib/common/upgrade.sh,v 1.10 2010/01/07 20:56:09 tg Exp $
# $OpenBSD: upgrade.sh,v 1.61 2005/04/02 14:27:08 krw Exp $
# $NetBSD: upgrade.sh,v 1.2.4.5 1996/08/27 18:15:08 gwr Exp $
#
# Copyright © 2010
#	Thorsten Glaser <tg@@mirbsd.org>
#
# Copyright (c) 1997-2004 Todd Miller, Theo de Raadt, Ken Westerback
# All rights reserved.
#
# Copyright (c) 1996 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Jason R. Thorpe.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#        This product includes software developed by the NetBSD
#        Foundation, Inc. and its contributors.
# 4. Neither the name of The NetBSD Foundation nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

#	OpenBSD installation script.
#	In a perfect world, this would be a nice C program, with a reasonable
#	user interface.

# install.sub needs to know the MODE
MODE=upgrade

# include common subroutines and initialization code
. install.sub

# Have the user confirm that $ROOTDEV is the root filesystem.
while :; do
	ask "Root filesystem?" "$ROOTDEV"
	resp=${resp##*/}
	[[ -b /dev/$resp ]] && break

	echo "Sorry, $resp is not a block device."
done
ROOTDEV=$resp

echo -n "Checking root filesystem (fsck -fp /dev/${ROOTDEV}) ... "
if ! fsck -fp /dev/$ROOTDEV >/dev/null 2>&1; then
	echo	"FAILED.\nYou must fsck ${ROOTDEV} manually."
	exit
fi
echo	"OK."

echo -n "Mounting root filesystem..."
if ! mount -o ro /dev/$ROOTDEV /mnt; then
	echo	"ERROR: can't mount root filesystem!"
	exit
fi
echo	"done."

# The fstab, hosts and myname files are required.
for _file in fstab hosts myname; do
	if [ ! -f /mnt/etc/$_file ]; then
		echo "ERROR: no /mnt/etc/${_file}!"
		exit
	fi
	cp /mnt/etc/$_file /tmp/$_file
done
hostname $(</tmp/myname)

if [[ -f /etc/ssh/ssh_host_rsa_key ]]; then
	echo "Since sshd(8) is running, I assume you already have" \
	    "set up the network."
	echo 'I will *not* offer to use the configuration from the root fs!'
else
	ask_yn "Enable network using configuration stored on root filesystem?" yes
	[[ $resp = y ]] && enable_network
fi

# Offer the user the opportunity to tweak, repair, or create the network
# configuration by hand.
manual_net_cfg

cat <<__EOT

The fstab is configured as follows:

$(</tmp/fstab)

For the $MODE, filesystems in the fstab will be automatically mounted if the
'noauto' option is absent, and /sbin/mount_<fstype> is found, and the fstype is
not nfs or mfs. Non-ffs filesystems will be mounted read-only.

You can edit the fstab now, before it is used, but the edited fstab will only
be used during the upgrade. It will not be copied back to disk.
__EOT
edit_tmp_file fstab

# Create /etc/fstab.
munge_fstab

# fsck -p non-root filesystems in /etc/fstab.
check_fs

# Mount filesystems in /etc/fstab.
if ! umount /mnt; then
	echo	"ERROR: can't unmount previously mounted root!"
	exit
fi
mount_fs

# Upgrade helper for pkgutl*.ngz (pre-install part)
rm -f /mnt/usr/mpkg/_{upgrade,flst}
if [[ -d /mnt/usr/mpkg/db/. ]]; then (
	cd /mnt/usr/mpkg
	# fold in /usr/mpkg/db/pkg/{mirmake,pkgtools}-* from the database
	# as well as the contents of the mirmake package (pkgtools is OK)
	for i in db/pkg/mirmake-*; do
		[[ -d $i/. ]] || continue
		print -r -- "$i" >>_flst
		grep -v '^[+@@]' $i/+CONTENTS | grep -v '^share/mmake' >>_flst
		print share/mmake >>_flst
	done
	for i in db/pkg/pkgtools-*; do
		[[ -d $i/. ]] && print -r -- "$i" >>_flst
	done
	# XXX no sort here… # sort -uo _flst _flst
	cpio -oC512 -Hnewc -Mset <_flst >_upgrade
	rm -rf $(<_flst)
	rm -f _flst
); fi

# Install sets.
install_sets

# Upgrade helper for pkgutl*.ngz (post-install part)
if [[ -s /mnt/usr/mpkg/_upgrade ]]; then (
	cd /mnt/usr/mpkg
	found=0
	for i in db/pkg/pkgtools-*; do
		[[ -d $i/. ]] || continue
		found=1
		break
	done
	if (( !found )); then
		# restore mirmake and pkgtools from before
		tar xphf _upgrade
	fi
	rm -f _upgrade
); fi

# Little upgrade helpers
[[ -e /mnt/etc/boot.conf && ! -e /mnt/boot.cfg ]] && \
    cp /mnt/etc/boot.conf /mnt/boot.cfg
[[ -e /mnt/etc/boot.cfg && ! -e /mnt/boot.cfg ]] && \
    cp /mnt/etc/boot.cfg /mnt/boot.cfg
[[ -e /mnt/etc/spamd.conf && ! -e /mnt/etc/mail/spamd.conf ]] && \
    cp /mnt/etc/spamd.conf /mnt/etc/mail/spamd.conf
[[ -d /mnt/usr/dbin/. || -d /mnt/usr/dsbin/. ]] && \
    for f in /mnt/usr/dbin/* /mnt/usr/dsbin/*; do
	[[ -f $f ]] || continue
	for d in bin sbin usr/bin usr/sbin; do
		if [[ -e /mnt/$d/${f##*/} ]]; then
			rm -f $f
			ln -sf ../../$d/${f##*/} $f
			break
		fi
	done
done
if [[ -d /mnt/usr/include/gxx/. ]]; then
	found=
	for i in /mnt/usr/lib/gcc/*/3.4.6/include/c++/.; do
		[[ -d $i ]] && found=$i
	done
	[[ -n $found ]] && rm -rf /mnt/usr/include/gxx
fi
if [[ -d /mnt/usr/include/objc/. ]]; then
	found=
	for i in /mnt/usr/lib/gcc/*/3.4.6/include/objc/.; do
		[[ -d $i ]] && found=$i
	done
	[[ -n $found ]] && rm -rf /mnt/usr/include/objc
fi
[[ -s /mnt/etc/rc ]] && /mnt/bin/ed -s /mnt/etc/rc <<-'EOF'
	,g/set -o arc4random/s/^/#disabled by $MirOS$#/
	wq
EOF

# Perform final steps common to both an install and an upgrade.
finish_up

( ( dd if=/dev/prandom bs=64 count=1; \
    dd if=/dev/arandom bs=64 count=8; \
    dd if=/dev/urandom bs=64 count=55; \
  ) 2>/dev/wrandom | dd of=/mnt/var/db/host.random; \
    chown 0:0 /mnt/var/db/host.random; \
    chmod 600 /mnt/var/db/host.random) \
    >/dev/wrandom 2>&1
@


1.10
log
@add auto-network-and-sshd ISO variant, requested by Vutral
thanks for the good idea - we'll provide it by default from now
@
text
@d2 1
a2 1
# $MirOS: src/distrib/common/upgrade.sh,v 1.9 2009/12/28 17:26:58 tg Exp $
d6 3
d204 4
@


1.9
log
@(untested) upgrade helper for pkgutl*.ngz

works like this:
• before install: fold in /usr/mpkg/{db/pkg/{mirmake,pkgtools}-*} as
  well as the contents(!) of the mirmake package (pkgtools is OK, it
  is fully provided for by the pkgutl dist set, but mirmake isn’t)
  into /usr/mpkg/_upgrade (sv4cpio archive)
• after install: if /usr/mpkg/db/pkg/pkgtools-*/ exists, just nuke it,
  otherwise extract it first since pkgutl*.ngz obviously was not installed
@
text
@d2 1
a2 1
# $MirOS: src/distrib/common/upgrade.sh,v 1.8 2009/12/28 17:00:19 tg Exp $
d88 8
a95 2
ask_yn "Enable network using configuration stored on root filesystem?" yes
[[ $resp = y ]] && enable_network
@


1.8
log
@upgrade helper for /usr/include/{gxx,objc} – sadly too late for the snap…
@
text
@d2 1
a2 1
# $MirOS: src/distrib/common/upgrade.sh,v 1.7 2009/03/29 11:33:29 tg Exp $
d123 21
d147 16
@


1.7
log
@upgrade for /usr/dbin and /usr/dsbin: symlinks to their
(normally statically linked) counterparts, to gain security
fixes and the likes from a future update
@
text
@d2 1
a2 1
# $MirOS: src/distrib/common/upgrade.sh,v 1.6 2007/08/24 14:40:35 tg Exp $
d144 14
@


1.6
log
@it’s [[ $foo = b*r ]] not double-equals-sign, bad krw@@obsd
@
text
@d2 1
a2 1
# $MirOS: src/distrib/common/upgrade.sh,v 1.5 2007/06/22 20:06:58 tg Exp $
d133 11
@


1.5
log
@also do the entropy seed dance on upgrades proper
@
text
@d2 1
a2 1
# $MirOS: src/distrib/common/upgrade.sh,v 1.4 2007/03/10 04:13:12 tg Exp $
d89 1
a89 1
[[ $resp == y ]] && enable_network
@


1.4
log
@… and because we're SO cool, we help the user to migrate his
spamd.conf by copying it from /etc/ to /etc/mail/ automagically
@
text
@d2 1
a2 1
# $MirOS: src/distrib/common/upgrade.sh,v 1.3 2006/12/20 22:45:48 tg Exp $
d136 8
@


1.3
log
@make sure mfs isn't mounted
@
text
@d2 1
a2 1
# $MirOS: src/distrib/common/upgrade.sh,v 1.2 2006/10/17 22:24:51 tg Exp $
d131 2
@


1.2
log
@boot.cfg location upgrade helpers
@
text
@d2 3
a4 3
#	$MirOS$
#	$OpenBSD: upgrade.sh,v 1.61 2005/04/02 14:27:08 krw Exp $
#	$NetBSD: upgrade.sh,v 1.2.4.5 1996/08/27 18:15:08 gwr Exp $
d103 1
a103 1
not nfs. Non-ffs filesystems will be mounted read-only.
@


1.1
log
@move stuff required for images from miniroot/ and ramdisk/ to common/

PS: now's probably the time to not merge these with openbsd any more

PPS: this commit sponsored by johl's DEC VT320 @@9600,8n1 on NetBSD 1.6.1/pmax
@
text
@d2 1
d126 6
@

