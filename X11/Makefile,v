head	1.39;
access;
symbols
	MIRBSD_10_BASE:1.35
	MIRBSD_9_BASE:1.20
	MIRBSD_8:1.19.0.2
	MIRBSD_8_BASE:1.19;
locks; strict;
comment	@# @;


1.39
date	2012.09.02.11.08.25;	author tg;	state Exp;
branches;
next	1.38;
commitid	10050433E3440B7261C;

1.38
date	2008.10.05.16.26.12;	author tg;	state Exp;
branches;
next	1.37;
commitid	10048E8EA7D6EAD401E;

1.37
date	2008.07.19.22.12.09;	author tg;	state Exp;
branches;
next	1.36;
commitid	100488266CB714D8730;

1.36
date	2008.06.11.10.11.45;	author tg;	state Exp;
branches;
next	1.35;
commitid	100484FA4DA1DF3139A;

1.35
date	2006.10.28.19.42.35;	author tg;	state Exp;
branches;
next	1.34;
commitid	1004543B2C12DBCC75D;

1.34
date	2006.10.16.19.38.00;	author tg;	state Exp;
branches;
next	1.33;
commitid	1004533DFA70BFDF298;

1.33
date	2006.09.24.19.00.50;	author tg;	state Exp;
branches;
next	1.32;
commitid	1004516D5E476124155;

1.32
date	2006.07.03.11.29.52;	author tg;	state Exp;
branches;
next	1.31;
commitid	10044A8FFAF71182FF2;

1.31
date	2006.07.02.23.47.36;	author tg;	state Exp;
branches;
next	1.30;
commitid	10044A85B2E3F84BE8C;

1.30
date	2006.07.02.17.42.05;	author tg;	state Exp;
branches;
next	1.29;
commitid	10044A805710B686EF9;

1.29
date	2006.07.01.22.18.28;	author tg;	state Exp;
branches;
next	1.28;
commitid	10044A6F4C96ED43C4D;

1.28
date	2006.07.01.22.17.09;	author tg;	state Exp;
branches;
next	1.27;
commitid	10044A6F3F7560BD02C;

1.27
date	2006.07.01.20.48.02;	author tg;	state Exp;
branches;
next	1.26;
commitid	10044A6DF94017CDB6E;

1.26
date	2006.07.01.20.47.00;	author tg;	state Exp;
branches;
next	1.25;
commitid	10044A6DF4E0C3F46CE;

1.25
date	2006.07.01.20.18.13;	author tg;	state Exp;
branches;
next	1.24;
commitid	10044A6D7B73931F43C;

1.24
date	2006.07.01.00.35.00;	author tg;	state Exp;
branches;
next	1.23;
commitid	10044A5C33C5FA45C94;

1.23
date	2006.06.30.23.18.03;	author tg;	state Exp;
branches;
next	1.22;
commitid	10044A5B12A66F53B0F;

1.22
date	2006.06.29.20.59.53;	author tg;	state Exp;
branches;
next	1.21;
commitid	10044A43F55165E332C;

1.21
date	2006.06.29.19.53.07;	author tg;	state Exp;
branches;
next	1.20;
commitid	10044A42FB23183F603;

1.20
date	2006.06.02.21.19.50;	author tg;	state Exp;
branches;
next	1.19;
commitid	1004480AB8220C7B835;

1.19
date	2005.04.20.06.18.06;	author tg;	state Exp;
branches;
next	1.18;

1.18
date	2005.04.19.12.53.47;	author tg;	state Exp;
branches;
next	1.17;

1.17
date	2005.04.16.18.12.21;	author tg;	state Exp;
branches;
next	1.16;

1.16
date	2005.04.16.17.32.15;	author tg;	state Exp;
branches;
next	1.15;

1.15
date	2005.04.16.04.18.38;	author tg;	state Exp;
branches;
next	1.14;

1.14
date	2005.04.16.03.49.22;	author tg;	state Exp;
branches;
next	1.13;

1.13
date	2005.04.16.03.45.57;	author tg;	state Exp;
branches;
next	1.12;

1.12
date	2005.03.29.00.12.15;	author tg;	state Exp;
branches;
next	1.11;

1.11
date	2005.03.27.18.13.25;	author tg;	state Exp;
branches;
next	1.10;

1.10
date	2005.03.21.10.29.14;	author tg;	state Exp;
branches;
next	1.9;

1.9
date	2005.03.21.07.19.05;	author tg;	state Exp;
branches;
next	1.8;

1.8
date	2005.03.21.07.08.23;	author tg;	state Exp;
branches;
next	1.7;

1.7
date	2005.03.20.18.13.16;	author tg;	state Exp;
branches;
next	1.6;

1.6
date	2005.03.19.17.19.17;	author tg;	state Exp;
branches;
next	1.5;

1.5
date	2005.03.19.15.11.16;	author tg;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.19.15.09.59;	author tg;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.19.14.28.23;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.19.13.52.17;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.19.13.21.35;	author tg;	state Exp;
branches;
next	;


desc
@@


1.39
log
@ensure bdfctool is available to the build even if /usr/X11R6 is ENOENT
@
text
@# $MirOS: X11/Makefile,v 1.38 2008/10/05 16:26:12 tg Exp $

.include <bsd.own.mk>
.include "${BSDSRCDIR}/Makefile.inc"

SUBOBJDIR!=	realpath ${.OBJDIR}
BINDIST=	programs/Xserver/hw/xfree86/etc/bindist
HOSTDEF=	xc/${BINDIST}/OpenBSD-${MACHINE}/host.def
CONFHOSTDEF=	xc/config/cf/host.def
XCONFIG=	xc/${BINDIST}/OpenBSD-${MACHINE}/XF86Config
LOCALAPPX=	/usr/local/lib/X11
LOCALAPPD=	${LOCALAPPX}/app-defaults
REALAPPD=	/etc/X11/app-defaults
WORLD=		World

.include <bsd.obj.mk>

.if make(obj)
  SUBDIR+=	depends
  SUBDIR+=	extras
.  include <bsd.subdir.mk>
.endif

.MAIN: all
all: ${_STFILE_SUB}
	cd ${.CURDIR} && exec ${_STCMD_SUB} ${MAKE} compile

build:
	cd ${.CURDIR} && exec ${MAKE} all
	cd ${.CURDIR} && exec ${SUDO} ${MAKE} install
	cd ${.CURDIR} && exec ${SUDO} ${MAKE} fix-appd

b-r:
	# Test if the targets are mounted suitable for root (BTSTF)
.for _dir in ${BSDOBJDIR} ${BSDRELDIR}
	mkdir -p ${_dir} || ${SUDO} mkdir -p ${_dir}
	${SUDO} touch ${_dir}/permissions.test
	${SUDO} chown root:wheel ${_dir}/permissions.test
	${SUDO} rm ${_dir}/permissions.test
.endfor
	touch ${BSDOBJDIR}/permissions.test && rm ${BSDOBJDIR}/permissions.test
	cd ${.CURDIR} && ${MAKE} obj && exec ${MAKE} check-objdir
	cd ${.CURDIR} && exec ${MAKE} build

compile:
	${INSTALL} -d -m ${DIRMODE} \
	    ${SUBOBJDIR}/xc/exports/bin \
	    ${SUBOBJDIR}/xc/exports/include \
	    ${SUBOBJDIR}/xc/exports/include/{DPS,GL,X11,fontconfig,freetype2} \
	    ${SUBOBJDIR}/xc/exports/lib \
	    ${SUBOBJDIR}/xc/exports/lib/{X11,modules,pkgconfig} \
	    ${SUBOBJDIR}/xc/exports/man \
	    ${SUBOBJDIR}/xc/exports/man/cat{1,3,4,5,7}
	cd ${.CURDIR}/extras/bdfctool && ${MAKE} depend && ${MAKE}
	cd ${.CURDIR}/depends && ${MAKE} depend && ${MAKE} && \
	    exec ${SUDO} ${MAKE} install X11BASE=${SUBOBJDIR}/xc/exports
	${SUDO} chown -R $$(id -u) ${SUBOBJDIR}/xc/exports
	cd ${SUBOBJDIR}/xc/exports/include/freetype2/freetype; \
	    ln -sf ${SUBOBJDIR}/xc/extras/freetype2/include/freetype/internal
	rm -f ${CONFHOSTDEF}
	${INSTALL} ${HOSTDEF} ${CONFHOSTDEF}
.if defined(NOFONTS) && ${NOFONTS:L} != "no"
	echo "#define BuildFonts		NO" >>${CONFHOSTDEF}
.endif
	cd xc && exec env PATH=${SUBOBJDIR:Q}/extras/bdfctool:$$PATH \
	    ${MAKE} ${WORLD} WORLDOPTS="CC=${CC:Q} CXX=${CXX:Q} \
	    COPTS=${COPTS:Q} CPPFLAGS=${CPPFLAGS:Q}" \
	    CC="${CC}" CXX="${CXX}" COPTS="${COPTS}" CPPFLAGS="${CPPFLAGS}"
	cd ${.CURDIR}/extras/bdfctool && ${MAKE} cleandir
	cd ${.CURDIR}/extras && ${MAKE} depend && exec ${MAKE}

install:
	d="${DESTDIR}"; cd $${d:-/}; [[ -n $$d ]] || d="/:/*"; \
	    env WRITEDIR="$$d" NOWRITEDIR="${SUBOBJDIR}" ${EXTRA_ENV} \
	    ${SHELL} ${BSDSRCDIR}/scripts/systrace.mk ${MAKE}
	cd ${.CURDIR} && exec ${_STCMD_DEST} ${MAKE} do-install
	sleep 1; rm ${_STFILE_DEST}

do-install:
	${INSTALL} -d -o 0 -g 0 -m ${DIRMODE} \
	    ${DESTDIR}/usr/X11R6/bin \
	    ${DESTDIR}/usr/X11R6/include \
	    ${DESTDIR}/usr/X11R6/include/{DPS,GL,X11,fontconfig,freetype2} \
	    ${DESTDIR}/usr/X11R6/lib \
	    ${DESTDIR}/usr/X11R6/lib/{X11,modules,pkgconfig} \
	    ${DESTDIR}/usr/X11R6/man \
	    ${DESTDIR}/usr/X11R6/man/cat{1,3,4,5,7}
	cd ${.CURDIR}/depends && exec ${MAKE} install
	cd xc && env PATH=${SUBOBJDIR:Q}/extras/bdfctool:$$PATH \
	    ${MAKE} install CC="${CC}" && \
	    exec env PATH=${SUBOBJDIR:Q}/extras/bdfctool:$$PATH \
	    ${MAKE} install.man
	cd ${.CURDIR}/extras && exec ${MAKE} install
	/usr/libexec/makewhatis ${DESTDIR}/usr/X11R6/man
.if !defined(NOFONTS) || ${NOFONTS:L} == "no"
	LD_LIBRARY_PATH=${DESTDIR}/usr/X11R6/lib:${DESTDIR}/usr/lib \
	    ${DESTDIR}/usr/X11R6/bin/fc-cache -v \
	    ${DESTDIR}/usr/X11R6/lib/X11/fonts
.endif
	chown root:wheel ${DESTDIR}/usr/X11R6/man/whatis.db

fix-appd:
	# Make sure ${LOCALAPPD} is a symbolic link
	if [[ ! -L ${DESTDIR}${LOCALAPPD} ]]; then \
		if [[ -d ${DESTDIR}${LOCALAPPD} ]]; then \
			mv ${DESTDIR}${LOCALAPPD}/* ${DESTDIR}${REALAPPD}/ \
			    || true; \
			rmdir ${DESTDIR}${LOCALAPPD}; \
		fi; \
		mkdir -p ${DESTDIR}${LOCALAPPX}; \
		ln -sf ${REALAPPD} ${DESTDIR}${LOCALAPPD}; \
	fi

clean: ${_STFILE_SUB}
	cd xc && exec ${_STCMD_SUB} ${MAKE} clean

distclean:
	cd ${.CURDIR} && exec ${MAKE} clean
	sleep 1; rm -f ${_STFILE_SUB} xc/xmakefile

mrproper:
	[[ -h obj ]] || rm -rf *

perms:
.for _i in / /etc /etc/X11 /usr/X11R6 /usr/local /usr/local/lib \
    /usr/local/lib/X11
	chown 0:0 ${DESTDIR}${_i}/.
.endfor
	find ${DESTDIR}/etc/. ${DESTDIR}/usr/X11R6/. ${DESTDIR}/usr/local/. \
	    -type d \( \! -user 0 -o \! -group 0 \) -ls \
	    | sed -e 's!/\./!/!'
	find ${DESTDIR}/etc/. ${DESTDIR}/usr/X11R6/. \
	    -type f \( \! -user 0 -o \! -group 0 \) -ls \
	    | sed -e 's!/\./!/!'

dist:
	cd ${.CURDIR} && exec ${MAKE} perms

release:
	mkdir -p ${DESTDIR} ${BSDRELDIR}/rel
	${INSTALL} -d -o 0 -g 0 -m ${DIRMODE} \
	    ${DESTDIR}/etc ${DESTDIR}/etc/X11 \
	    ${DESTDIR}/usr/local ${DESTDIR}/usr/local/lib/X11
	cd ${.CURDIR} && exec ${MAKE} install
.if exists(${XCONFIG})
	@@if [[ -f ${DESTDIR}/etc/X11/XF86Config ]]; then \
		print Not overwriting existing ${DESTDIR}/etc/X11/XF86Config; \
	else \
		print ${INSTALL} ${INSTALL_COPY} -o root -g wheel -m 644 \
		    ${XCONFIG} ${DESTDIR}/etc/X11/XF86Config; \
		${INSTALL} ${INSTALL_COPY} -o root -g wheel -m 644 \
		    ${XCONFIG} ${DESTDIR}/etc/X11/XF86Config; \
	fi
.endif
	cd ${.CURDIR} && exec ${MAKE} fix-appd
	cd ${.CURDIR} && exec ${MAKE} dist

${_STFILE_SUB}: check-objdir
	cd ${SUBOBJDIR} && env WRITEDIR="${SUBOBJDIR}" \
	    ${SHELL} ${BSDSRCDIR}/scripts/systrace.mk ${MAKE}

check-objdir:
	@@if [[ ! -e ${.CURDIR}/obj || -e Makefile || -d xc/Imakefile ]]; then \
		print "Error: you must make obj first."; \
		exit 1; \
	fi
	@@if [[ ! -e xc ]]; then \
		mkdir -p xc; \
		(cd ${.OBJDIR}/xc && lndir ${.CURDIR}/xc); \
	fi

.PHONY: all b-r build check-objdir clean compile dist distclean \
	do-install fix-appd install mrproper perms release
@


1.38
log
@use mksh realpath builtin instead of readlink -f for canonicalisation

note: there’s still a readlink(1) call left in, for instance, mirmake;
this does not hurt because we initially assumed that readlink(1) does
exist anyway and bundled ours just because some do not have the ‘-f’
option for realpath(2)isation
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.37 2008/07/19 22:12:09 tg Exp $
d54 1
d65 2
a66 1
	cd xc && exec ${MAKE} ${WORLD} WORLDOPTS="CC=${CC:Q} CXX=${CXX:Q} \
d69 1
d89 4
a92 1
	cd xc && ${MAKE} install CC="${CC}" && exec ${MAKE} install.man
@


1.37
log
@remove rstart… it failed twice in a row for me, and we have no rsh anyway
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.36 2008/06/11 10:11:45 tg Exp $
d6 1
a6 1
SUBOBJDIR!=	readlink -nf ${.OBJDIR} 2>/dev/null
@


1.36
log
@• add sample i386 XF86Config (default: VESA 1024x768), requested by
  bsiegert@@
• sync sample sparc XF86Config (wsfb) font paths
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.35 2006/10/28 19:42:35 tg Exp $
a86 2
	cd xc/programs/rstart && ${MAKE} install CC="${CC}" \
	    && exec ${MAKE} install.man
@


1.35
log
@EPERM
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.34 2006/10/16 19:38:00 tg Exp $
d141 1
a141 1
.if (${MACHINE_ARCH} == "macppc") || (${MACHINE_ARCH} == "sparc")
@


1.34
log
@fix the permissions and directories issues
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.33 2006/09/24 19:00:50 tg Exp $
d46 1
a46 1
	${INSTALL} -d -o 0 -g 0 -m ${DIRMODE} \
@


1.33
log
@there is no DIROWN/DIRGRP, use root:wheel for X11 and BINOWN:BINGRP for rest
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.32 2006/07/03 11:29:52 tg Exp $
d46 8
a53 1
	mkdir -p ${SUBOBJDIR}/xc/exports/{bin,include,lib}
d77 8
a138 1
	    ${DESTDIR}/usr/X11R6/bin ${DESTDIR}/usr/X11R6/man/cat1 \
@


1.32
log
@fc-cache(1) operates recursively, bad tfries
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.31 2006/07/02 23:47:36 tg Exp $
a15 3
DIROWN?=	root
DIRGRP?=	wheel

d108 1
a108 1
	chown ${DIROWN}:${DIRGRP} ${DESTDIR}${_i}/.
d111 1
a111 1
	    -type d \( \! -user ${DIROWN} -o \! -group ${DIRGRP} \) -ls \
d114 1
a114 1
	    -type f \( \! -user ${BINOWN} -o \! -group wheel \) -ls \
d122 1
a122 1
	${INSTALL} -d -o ${DIROWN} -g ${DIRGRP} -m ${DIRMODE} \
@


1.31
log
@fix DESTDIR install
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.30 2006/07/02 17:42:05 tg Exp $
a18 7
FONTPATH=	${DESTDIR}/usr/X11R6/lib/X11/fonts
FONTDIRS?=	100dpi 75dpi OTF Speedo TTF Type1 cyrillic encodings \
		encodings/large local misc util
.for _font in ${FONTDIRS}
FONTPATH+=	${DESTDIR}/usr/X11R6/lib/X11/fonts/${_font}
.endfor

d81 2
a82 1
	    ${DESTDIR}/usr/X11R6/bin/fc-cache -v ${FONTPATH}
@


1.30
log
@run fc-cache, idea and some code by openbsd, fixes by me
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.29 2006/07/01 22:18:28 tg Exp $
d133 1
a133 1
	    ${DESTDIR}/usr/X11R6 ${DESTDIR}/usr/X11R6/man/cat1 \
@


1.29
log
@ln -sf
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.28 2006/07/01 22:17:09 tg Exp $
d19 7
d86 4
@


1.28
log
@* expose freetype2 internals to libfontconfig (monolith)
* add ReWorld target
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.27 2006/07/01 20:48:02 tg Exp $
d54 1
a54 1
	    ln -s ${SUBOBJDIR}/xc/extras/freetype2/include/freetype/internal
d90 1
a90 1
		ln -s ${REALAPPD} ${DESTDIR}${LOCALAPPD}; \
@


1.27
log
@need sudo for install (XXX bad here)
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.26 2006/07/01 20:47:00 tg Exp $
d14 1
d52 3
d60 1
a60 1
	cd xc && exec ${MAKE} World WORLDOPTS="CC=${CC:Q} CXX=${CXX:Q} \
@


1.26
log
@we mustn't forget to install libfreetype either ;)
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.25 2006/07/01 20:18:13 tg Exp $
d50 1
a50 1
	    exec ${MAKE} install X11BASE=${SUBOBJDIR}/xc/exports
@


1.25
log
@while unbreaking X is still not finished, allow programmes
to link against the newly-built libfreetype, and overhaul
libXfont's reachover and override build mechanism myself

*g* we now have better code and freetype than x.org
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.24 2006/07/01 00:35:00 tg Exp $
d69 1
@


1.24
log
@install files to BSDRELDIR only muuuuuuuuch later
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.23 2006/06/30 23:18:03 tg Exp $
d6 1
a6 1
SUBOBJDIR!=	readlink ${.OBJDIR} 2>/dev/null || ( cd ${.OBJDIR} && pwd )
d48 3
a50 1
	cd ${.CURDIR}/depends && ${MAKE} depend && exec ${MAKE}
@


1.23
log
@check MACHINE_ARCH not MACHINE for same-userland stuff
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.22 2006/06/29 20:59:53 tg Exp $
a45 1
	cd ${.CURDIR} && exec ${MAKE} release
a111 3
	cd ${.CURDIR} && exec ${SUDO} ${MAKE} do-rel DESTDIR=${BSDRELDIR}/x11

do-rel:
d146 1
a146 1
	do-install do-rel fix-appd install mrproper perms release
@


1.22
log
@hook new freetype2 into build system, "should" unbreak X
untested
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.21 2006/06/29 19:53:07 tg Exp $
d122 1
a122 1
.if (${MACHINE} == "macppc") || (${MACHINE} == "sparc")
@


1.21
log
@don't need this option here any more
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.20 2006/06/02 21:19:50 tg Exp $
d21 2
a22 1
SUBDIR=		extras
d49 1
@


1.20
log
@make X11 build again and quell a warning while here
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.19 2005/04/20 06:18:06 tg Exp $
a49 4
.if ${MKC_USAP:L} != "yes"
	echo '#define Freetype2BuildDefines	'\
	    '-DTT_CONFIG_OPTION_BYTECODE_INTERPRETER' >>${CONFHOSTDEF}
.endif
@


1.19
log
@get rid of ${RELEASEDIR} altogether
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.18 2005/04/19 12:53:47 tg Exp $
d6 1
a6 1
SUBOBJDIR!=	readlink ${.OBJDIR} || ( cd ${.OBJDIR} && pwd )
@


1.18
log
@make the overall build process more similar to a build.sh and have a
common framework, with ======== lines and stuff, and the checkflist
and maketars stuff only executed at the end of the whole make dist
(this means they are not built any more with a make b-r, I know).
This also unifies the set generation, runs cksum and rmd160 only
once and makes an unattended non-quiet build possible.
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.17 2005/04/16 18:12:21 tg Exp $
a6 2
RELEASEDIR?=	${BSDRELDIR}/rel

d118 1
a118 1
	mkdir -p ${DESTDIR} ${RELEASEDIR}
@


1.17
log
@honour CPPFLAGS and add these to the Standard{,Cpp}Defines
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.16 2005/04/16 17:32:15 tg Exp $
a44 3
	@@echo ============================================================
	@@date
	@@echo ============================================================
a47 4
	@@echo ============================================================
	@@echo Build and Release for the X-Window System complete.
	@@date; uname -a
	@@echo ============================================================
a114 13
	@@echo "============================================================"
	@@echo "Checking files:"
	@@echo ""
	cd ${BSDSRCDIR}/distrib/lists/x11 && MACHINE=${MACHINE} \
	    DESTDIR="${DESTDIR}" RELEASEDIR="${RELEASEDIR}" \
	    ${SHELL} ${BSDSRCDIR}/scripts/tarck
	@@echo "============================================================"
.ifndef BATCH
	@@read a?'Press Return to continue...'
.endif
	cd ${BSDSRCDIR}/distrib/lists/x11 && MACHINE=${MACHINE} \
	    DESTDIR="${DESTDIR}" RELEASEDIR="${RELEASEDIR}" \
	    ${SHELL} ${BSDSRCDIR}/scripts/tarmk ${OSrev}
a117 4
	-cd ${RELEASEDIR}; cksum x*.ngz \
	    | cat - CKSUM | ${SUDO} sort -k3 -o CKSUM
	-cd ${RELEASEDIR}; rmd160 x*.ngz \
	    | cat - RMD160 | ${SUDO} sort -o RMD160
@


1.16
log
@define a .MAIN target
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.15 2005/04/16 04:18:38 tg Exp $
d66 3
a68 3
	cd xc && exec ${MAKE} World \
	    WORLDOPTS="CC=${CC:Q} CXX=${CXX:Q} COPTS=${COPTS:Q}" \
	    CC="${CC}" CXX="${CXX}" COPTS="${COPTS}"
@


1.15
log
@don't half-space output for col, it can't represent it
this makes neqn(1) much nicer and fixes glMultMatrix(3)

XXX glMultMatrix: center instead of staircase
XXX neqn: \x'extraspace' ?
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.14 2005/04/16 03:49:22 tg Exp $
d27 1
@


1.14
log
@explicitly specify -Tcrt, this way we can use nrcon -e

XXX analyse the backspace problems
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.13 2005/04/16 03:45:57 tg Exp $
a67 5
	# We cannot yet auto-generate this manpage correctly
	cd xc/doc/man/GL/gl && if [ -e glMultMatrix._man ]; then \
		neqn <glMultMatrix._man | tbl | nrcon -e -Tcrt -man \
		    >glMultMatrix.0.fixed; \
	fi
a78 5
	# Install fixed copy of manual page
	cd xc/doc/man/GL/gl && if [ -e glMultMatrix.0.fixed ]; then \
		/usr/bin/install -c -m 0444 glMultMatrix.0.fixed \
		    /usr/X11R6/man/cat3/glMultMatrix.0; \
	fi
@


1.13
log
@manually install copy of man page which we can't auto-generate yet
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.12 2005/03/29 00:12:15 tg Exp $
d70 1
a70 1
		neqn <glMultMatrix._man | tbl | nroff -man \
@


1.12
log
@WAIT_CHECKFLIST => BATCH and reverse logic
default is now an interactive b-r
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.11 2005/03/27 18:13:25 tg Exp $
d68 5
d84 5
@


1.11
log
@move <bsd.obj.mk> include farther above,
in front of <bsd.subdir.mk>
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.10 2005/03/21 10:29:14 tg Exp $
d128 1
a128 1
.ifdef WAIT_CHECKFLIST
@


1.10
log
@now fix the permissions

update akomplished
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.9 2005/03/21 07:19:05 tg Exp $
d20 2
a177 2

.include <bsd.obj.mk>
@


1.9
log
@we don't need the "small line" scripts any more,
we can use GNU screen or redirect into build.log
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.8 2005/03/21 07:08:23 tg Exp $
d111 2
a112 1
	    -type d \( \! -user ${DIROWN} -o \! -group ${DIRGRP} \) -ls
d114 2
a115 1
	    -type f \( \! -user ${BINOWN} -o \! -group wheel \) -ls
d143 3
a145 2
	    ${DESTDIR}/etc/X11 ${DESTDIR}/usr/X11R6/man/cat1 \
	    ${DESTDIR}/usr/local/lib/X11
@


1.8
log
@enhance targets to mimick the other b-r processes
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.7 2005/03/20 18:13:16 tg Exp $
d45 7
a51 2
	cd ${.CURDIR} && ${MAKE} obj && ${MAKE} check-objdir \
	    && exec ${SHELL} ${.CURDIR}/build-release
a136 4
	@@echo ============================================================
	@@echo Build and Release for the X-Window System complete.
	@@date; uname -a
	@@echo ============================================================
@


1.7
log
@try better this time
also, use /usr/bin/cpp (which calls /usr/libexec/cpp (Reiser CCCP)
or /usr/bin/mcpp (GNU GCC) depending on which exists)
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.6 2005/03/19 17:19:17 tg Exp $
d33 14
a46 2
b-r: check-objdir
	exec ${SHELL} ${.CURDIR}/build-release
d128 8
@


1.6
log
@merge as much diff of old as possible
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.5 2005/03/19 15:11:16 tg Exp $
d22 1
d85 3
d141 1
a141 1
	@@if [[ -e obj || -e Makefile || ! -h xc ]]; then \
d146 1
d151 1
a151 1
	do-install do-rel fix-appd install perms release
@


1.5
log
@oops
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.4 2005/03/19 15:09:59 tg Exp $
a8 5
.if ${MACHINE} == i386
XMACH=		ix86
.else
XMACH=		${MACHINE}
.endif
d10 1
a10 1
HOSTDEF=	xc/${BINDIST}/OpenBSD-${XMACH}/host.def
d12 1
a12 1
XCONFIG=	xc/${BINDIST}/OpenBSD-${XMACH}/XF86Config
@


1.4
log
@rewrite Makefile, bring it up to current standards
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.3 2005/03/19 14:28:23 tg Exp $
d118 1
a118 1
do-release:
@


1.3
log
@fix and improve; use <bsd.obj.mk>; extras works already
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.2 2005/03/19 13:52:17 tg Exp $
d7 1
d18 3
d25 3
a27 3
LOCALAPPD=	/usr/local/lib/X11/app-defaults
LOCALAPPX=	/usr/local/lib/X11
REALAPPD=	/etc/X11/app-defaults
d29 2
d32 4
a35 2
all: ${_STFILE_SUB}
	cd ${.CURDIR} && ${_STCMD_SUB} ${MAKE} compile
d37 2
a38 2
depend:
	cd ${.OBJDIR}/xc && lndir ${.CURDIR}/xc
d45 1
a45 1
		'-DTT_CONFIG_OPTION_BYTECODE_INTERPRETER' >>${CONFHOSTDEF}
d47 1
a47 1
.if defined(NOFONTS)
d53 16
a68 1
	cd ${.CURDIR}/extras && ${MAKE} obj && ${MAKE} depend && exec ${MAKE}
d70 7
a76 22
build:
	cd ${.CURDIR} && ${MAKE} compile
	cd ${.CURDIR} && ${SUDO} ${MAKE} install
	cd ${.CURDIR} && ${SUDO} ${MAKE} fix-appd

release: release-clean release-mkdir release-install fix-appd dist

release-clean:
.if ! ( defined(DESTDIR) && defined(RELEASEDIR) )
	@@echo You must set DESTDIR and RELEASEDIR for a release.; exit 255
.endif
	rm -rf ${DESTDIR}/usr/X11R6/* ${DESTDIR}/usr/X11R6/.[a-zA-Z0-9]*
	rm -rf ${DESTDIR}/var/X11/*
	rm -rf ${DESTDIR}/etc/X11/*
	rm -rf ${DESTDIR}/etc/fonts/*
	@@if [[ -d ${DESTDIR}/usr/X11R6 ]]; then \
		d="$$(cd ${DESTDIR}/usr/X11R6; ls)"; \
		if [[ -n $$d ]]; then \
			print Files found in ${DESTDIR}/usr/X11R6:; \
			(cd ${DESTDIR}/usr/X11R6; pwd; ls -a); \
			print Cleanup before proceeding.; \
			exit 255; \
d78 2
d82 6
a87 20
release-mkdir:
	@@${INSTALL} -d -o ${DIROWN} -g ${DIRGRP} -m ${DIRMODE} \
		${DESTDIR}/usr/X11R6 ${DESTDIR}/etc/X11 \
		${DESTDIR}/usr/local/lib/X11 \
		${DESTDIR}/usr/X11R6/man \
		${DESTDIR}/usr/X11R6/man/cat1
	@@cd ${.CURDIR} && ${MAKE} perms

release-install:
	@@cd ${.CURDIR} && ${MAKE} install
.if ${MACHINE} == "macppc" || ${MACHINE} == "sparc"
	@@if [[ -f $(DESTDIR)/etc/X11/XF86Config ]]; then \
		echo "Not overwriting existing $(DESTDIR)/etc/X11/XF86Config"; \
	  else \
		set -x; \
		${INSTALL} ${INSTALL_COPY} -o root -g wheel -m 644 \
		    ${XCONFIG} ${DESTDIR}/etc/X11/XF86Config; \
	fi
.endif
	@@cd ${.CURDIR} && ${MAKE} fix-appd
a88 2
PERMDIRS=	/ /usr /usr/X11R6 /etc /etc/X11 /usr/local \
		/usr/local/lib /usr/local/lib/X11
d90 3
a92 2
.for _dir in ${PERMDIRS}
	chown ${DIROWN}:${DIRGRP} ${DESTDIR}${_dir}/.
d94 4
a97 8
	find ${DESTDIR}/usr/X11R6/. ${DESTDIR}/etc/. ${DESTDIR}/usr/local/. \
		-type d \
		\( \! -user ${DIROWN} -o \! -group ${DIRGRP} \) \
		-ls
	find ${DESTDIR}/usr/X11R6/. ${DESTDIR}/etc/. \
		-type f \
		\( \! -user ${BINOWN} -o \! -group wheel \) \
		-ls
d100 1
a100 1
	cd ${.CURDIR} && ${MAKE} perms
d105 1
d112 1
d115 2
a116 3
install: install-xc install-extra
	/usr/libexec/makewhatis ${DESTDIR}/usr/X11R6/man
	chown root:wheel ${DESTDIR}/usr/X11R6/man/whatis.db
d118 18
a135 11
install-xc:
	d="${DESTDIR}"; cd $${d:-/}; [[ -n $$d ]] || d="/:/*"; \
	    env WRITEDIR="$$d" NOWRITEDIR="${SUBOBJDIR}" ${EXTRA_ENV} \
	    ${SHELL} ${BSDSRCDIR}/scripts/systrace.mk make
	cd xc \
	    && ${_STCMD_DEST} ${MAKE} install CC="${CC}" \
	    && ${_STCMD_DEST} ${MAKE} install.man
	cd xc/programs/rstart \
	    && ${_STCMD_DEST} ${MAKE} install \
	    && ${_STCMD_DEST} ${MAKE} install.man
	sleep 1; rm -f ${_STFILE_DEST}
d137 11
a147 12
install-extra:
	cd ${.CURDIR}/extras && exec ${MAKE} install

fix-appd:
	# Make sure /usr/local/lib/X11/app-defaults is a link
	if [[ ! -L $(DESTDIR)${LOCALAPPD} ]]; then \
	    if [[ -d $(DESTDIR)${LOCALAPPD} ]]; then \
		mv $(DESTDIR)${LOCALAPPD}/* $(DESTDIR)${REALAPPD} || true; \
		rmdir $(DESTDIR)${LOCALAPPD}; \
	    fi; \
	    mkdir -p ${DESTDIR}${LOCALAPPX}; \
	    ln -s ${REALAPPD} ${DESTDIR}${LOCALAPPD}; \
d150 2
a151 18
clean: ${_STFILE_SUB}
	cd xc && ${_STCMD_SUB} ${MAKE} clean

distclean:
	cd ${.CURDIR} && ${MAKE} clean
	@@sleep 1
	rm -f xc/xmakefile ${_STFILE_SUB}

b-r:
	@@echo ${SHELL} ${.CURDIR}/build-release
	@@exec ${SHELL} ${.CURDIR}/build-release

${_STFILE_SUB}:
	cd ${SUBOBJDIR} && env WRITEDIR="${SUBOBJDIR}" ${EXTRA_ENV} \
	    ${SHELL} ${BSDSRCDIR}/scripts/systrace.mk make

.PHONY:	all build release dist install install-xc install-extra clean \
	distclean fix-appd b-r release-clean release-mkdir release-install
@


1.2
log
@convert to systrace'd build (untested)
@
text
@d1 1
a1 1
# $MirOS: X11/Makefile,v 1.1 2005/03/19 13:21:35 tg Exp $
d29 2
a30 13
obj:
	@@cd ${.CURDIR}; \
	here=$$(/bin/pwd); bsdsrcdir=$$(cd ${BSDSRCDIR}; /bin/pwd); \
	bsdobjdir=$$(cd ${BSDOBJDIR}; /bin/pwd); \
	subdir=$${here#$${bsdsrcdir}/}; \
	dest=$${bsdobjdir}/$$subdir; \
	echo "linking $$here -> $$dest"; \
	if test -d $${bsdobjdir} -a ! -d $$dest; then \
		mkdir -p $$dest; \
		( cd $$dest; lndir $$here ); \
	else \
		true; \
	fi;
d42 1
a42 1
	cd ${.CURDIR}/xc && exec ${MAKE} World \
d62 8
a69 5
	@@if [ -d ${DESTDIR}/usr/X11R6 ] && [ "$$(cd ${DESTDIR}/usr/X11R6;ls)" ]; then \
		echo "Files found in ${DESTDIR}/usr/X11R6:"; \
		(cd ${DESTDIR}/usr/X11R6;/bin/pwd;ls -a); \
		echo "Cleanup before proceeding."; \
		exit 255; \
d114 1
a114 1
	    ${SHELL} ${BSDSRCDIR}/scripts/checkflist
d120 1
a120 1
	    ${SHELL} ${BSDSRCDIR}/scripts/maketars ${OSrev}
d130 1
a130 1
	cd ${.CURDIR}/xc \
d133 1
a133 1
	cd ${.CURDIR}/xc/programs/rstart \
d153 1
a153 1
	cd ${.CURDIR}/xc && ${_STCMD_SUB} ${MAKE} clean
d164 4
d170 2
@


1.1
log
@add the files from old X11/. (slightly adapted)
XXX use systrace for builing X11, too
@
text
@d1 1
a1 1
# $MirOS$
d4 3
d26 2
a27 1
all:	compile
d53 1
a53 1
	cd xc && exec ${MAKE} World \
d56 1
a56 1
	cd extras && ${MAKE} obj && ${MAKE} depend && exec ${MAKE}
d59 3
a61 3
	${MAKE} compile
	${SUDO} ${MAKE} install
	${SUDO} ${MAKE} fix-appd
d86 1
a86 1
	@@${MAKE} perms
d89 1
a89 1
	@@${MAKE} install
d99 1
a99 1
	@@${MAKE} fix-appd
d117 1
a117 1
	${MAKE} perms
d135 10
a144 2
	cd xc; ${MAKE} install CC="${CC}" && ${MAKE} install.man
	cd xc/programs/rstart; ${MAKE} install && ${MAKE} install.man
d147 1
a147 1
	cd extras && exec ${MAKE} install
d160 2
a161 2
clean:
	cd xc; ${MAKE} clean
d164 3
a166 2
	${MAKE} clean
	rm -f xc/xmakefile
@

