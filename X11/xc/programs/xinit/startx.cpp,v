head	1.5;
access;
symbols
	MIRBSD_10_BASE:1.5
	MIRBSD_9_BASE:1.2
	MIRBSD_8:1.2.0.2
	MIRBSD_8_BASE:1.2
	xf-4_5_0:1.1.103.1
	xwindow:1.1.103;
locks; strict;
comment	@// @;


1.5
date	2007.02.07.16.00.42;	author tg;	state Exp;
branches;
next	1.4;
commitid	10045C9F7C16775339B;

1.4
date	2006.12.21.18.23.15;	author tg;	state Exp;
branches;
next	1.3;
commitid	100458AD10227A8DC3A;

1.3
date	2006.12.20.16.50.54;	author tg;	state Exp;
branches;
next	1.2;
commitid	100458969AC36242EFF;

1.2
date	2005.07.07.13.39.18;	author tg;	state Exp;
branches;
next	1.1;
commitid	331742cd306446f9;

1.1
date	2005.03.18.10.52.06;	author tg;	state Exp;
branches
	1.1.103.1;
next	;

1.1.103.1
date	2005.03.18.10.52.06;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@now that our only locale is utf-8, we don't care about the environment any more, thus revert 100458969AC36242EFF
@
text
@XCOMM!/bin/sh

XCOMM $Xorg: startx.cpp,v 1.3 2000/08/17 19:54:29 cpqbld Exp $
XCOMM
XCOMM This is just a sample implementation of a slightly less primitive
XCOMM interface than xinit.  It looks for user .xinitrc and .xserverrc
XCOMM files, then system xinitrc and xserverrc files, else lets xinit choose
XCOMM its default.  The system xinitrc should probably do things like check
XCOMM for .Xresources files and merge them in, startup up a window manager,
XCOMM and pop a clock and serveral xterms.
XCOMM
XCOMM Site administrators are STRONGLY urged to write nicer versions.
XCOMM
XCOMM $XFree86: xc/programs/xinit/startx.cpp,v 3.18 2003/08/22 19:27:33 eich Exp $

#ifdef SCO

XCOMM Check for /usr/bin/X11 and BINDIR in the path, if not add them.
XCOMM This allows startx to be placed in a place like /usr/bin or /usr/local/bin
XCOMM and people may use X without changing their PATH

XCOMM First our compiled path

bindir=BINDIR
if expr $PATH : ".*`echo $bindir | sed 's?/?\\/?g'`.*" > /dev/null 2>&1; then
	:
else
	PATH=$PATH:BINDIR
fi

XCOMM Now the "SCO" compiled path

if expr $PATH : '.*\/usr\/bin\/X11.*' > /dev/null 2>&1; then
	:
else
	PATH=$PATH:/usr/bin/X11
fi

XCOMM Set up the XMERGE env var so that dos merge is happy under X

if [ -f /usr/lib/merge/xmergeset.sh ]; then
	. /usr/lib/merge/xmergeset.sh
elif [ -f /usr/lib/merge/console.disp ]; then
	XMERGE=`cat /usr/lib/merge/console.disp`
	export XMERGE
fi

scoclientrc=$HOME/.startxrc
#endif

userclientrc=$HOME/.xinitrc
userserverrc=$HOME/.xserverrc
sysclientrc=XINITDIR/xinitrc
sysserverrc=XINITDIR/xserverrc
defaultclient=BINDIR/xterm
defaultserver=BINDIR/X
defaultclientargs=""
defaultserverargs=""
clientargs=""
serverargs=""

#ifdef SCO
if [ -f $scoclientrc ]; then
    defaultclientargs=$scoclientrc
else
#endif
if [ -f $userclientrc ]; then
    defaultclientargs=$userclientrc
elif [ -f $sysclientrc ]; then
    defaultclientargs=$sysclientrc
fi
#ifdef SCO
fi
#endif

if [ -f $userserverrc ]; then
    defaultserverargs=$userserverrc
elif [ -f $sysserverrc ]; then
    defaultserverargs=$sysserverrc
fi

whoseargs="client"
while [ x"$1" != x ]; do
    case "$1" in
    XCOMM '' required to prevent cpp from treating "/*" as a C comment.
    /''*|\./''*)
	if [ "$whoseargs" = "client" ]; then
	    if [ x"$clientargs" = x ]; then
		client="$1"
	    else
		clientargs="$clientargs $1"
	    fi
	else
	    if [ x"$serverargs" = x ]; then
		server="$1"
	    else
		serverargs="$serverargs $1"
	    fi
	fi
	;;
    --)
	whoseargs="server"
	;;
    *)
	if [ "$whoseargs" = "client" ]; then
	    clientargs="$clientargs $1"
	else
	    XCOMM display must be the FIRST server argument
	    if [ x"$serverargs" = x ] && @@@@
		 expr "$1" : ':[0-9][0-9]*$' > /dev/null 2>&1; then
		display="$1"
	    else
		serverargs="$serverargs $1"
	    fi
	fi
	;;
    esac
    shift
done

XCOMM process client arguments
if [ x"$client" = x ]; then
    XCOMM if no client arguments either, use rc file instead
    if [ x"$clientargs" = x ]; then
	client="$defaultclientargs"
    else
	client=$defaultclient
    fi
fi

XCOMM process server arguments
if [ x"$server" = x ]; then
    XCOMM if no server arguments or display either, use rc file instead
    if [ x"$serverargs" = x -a x"$display" = x ]; then
	server="$defaultserverargs"
    else
	server=$defaultserver
    fi
fi

if [ x"$XAUTHORITY" = x ]; then
    XAUTHORITY=$HOME/.Xauthority
    export XAUTHORITY
fi

removelist=

#if defined(HAS_COOKIE_MAKER) && defined(MK_COOKIE)
XCOMM set up default Xauth info for this machine
case `uname` in
Linux*)
	if [ -z "`hostname --version 2>&1 | grep GNU`" ]; then
		hostname=`hostname -f`
	else
		hostname=`hostname`
	fi
	;;
*)
	hostname=`hostname`
	;;
esac

authdisplay=${display:-:0}
mcookie=`MK_COOKIE`
for displayname in $authdisplay $hostname$authdisplay; do
    if ! xauth list "$displayname" | grep "$displayname " >/dev/null 2>&1; then
        xauth -q << EOF 
add $displayname . $mcookie
EOF
	removelist="$displayname $removelist"
    fi
done
#endif

xinit $client $clientargs -- $server $display $serverargs

if [ x"$removelist" != x ]; then
    xauth remove $removelist
fi

/*
 * various machines need special cleaning up
 */
#ifdef __linux__
if command -v deallocvt > /dev/null 2>&1; then
    deallocvt
fi
#endif

#ifdef macII
Xrepair
screenrestore
#endif

#if defined(sun) && !defined(i386)
kbd_mode -a
#endif
@


1.4
log
@fix script generation for mirbsd specifics;
use /bin/sh as shebang line since #ifdef lines aren't removed entirely
but lurk around as empty lines, so we can't do that... *sigh* X sucks.
@
text
@a2 1
XCOMM $MirOS: X11/xc/programs/xinit/startx.cpp,v 1.3 2006/12/20 16:50:54 tg Exp $
a15 7
#ifdef __MirBSD__
XCOMM This might have been inherited from /etc/profile - if the
XCOMM user wants a value to be passed to the X-Window system,
XCOMM he must use LANG or LC_ALL instead, on MirOS.
unset LC_CTYPE
#endif

@


1.3
log
@do *not* pass LC_CTYPE from the parent environment to
the X server or any other programmes startx/xinit calls.
The change *only* affects the startx(1) shell script,
not xinit(1), and only on MirOS.

Rationale: /etc/profile sets and exports LC_CTYPE.

xdm isn't affected by /etc/profile, and if a user wants
to manually set localisation information, he's better
off setting LC_ALL anyway (or LANG, if he wants to override
the information for specific categories).
@
text
@a0 3
#ifdef MirBSDArchitecture
XCOMM!/bin/mksh
#else
a1 1
#endif
d3 1
a3 1
XCOMM $MirOS$
d17 1
a17 1
#ifdef MirBSDArchitecture
@


1.2
log
@/bin/sh and /bin/ksh -> /bin/mksh

This should cover most uses.
@
text
@d1 1
d3 3
d7 1
d21 7
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
XCOMM!/bin/sh
@


1.1.103.1
log
@Import XFree86 4.5.0 directly from vendor anoncvs, -rxf-4_5_0 xc
at anoncvs@@anoncvs.xfree86.org:/cvs (ssh)
@
text
@@
