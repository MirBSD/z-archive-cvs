head	1.3;
access;
symbols
	MIRBSD_10_BASE:1.3
	tg-xterm-215-based:1.2.0.2
	tg-xterm-200-based:1.1
	xterm-215:1.1.109.1
	lynx:1.1.109
	MIRBSD_9_BASE:1.1.103.1
	MIRBSD_8:1.1.103.1.0.2
	MIRBSD_8_BASE:1.1.103.1
	xf-4_5_0:1.1.103.1
	xwindow:1.1.103;
locks; strict;
comment	@ * @;


1.3
date	2006.07.02.00.54.49;	author tg;	state Exp;
branches;
next	1.2;
commitid	10044A719405F9E103E;

1.2
date	2006.07.02.00.02.46;	author tg;	state Exp;
branches;
next	1.1;
commitid	10044A70D294F0BB63C;

1.1
date	2005.03.18.10.52.30;	author tg;	state Exp;
branches
	1.1.103.1
	1.1.109.1;
next	;

1.1.103.1
date	2005.03.18.10.52.30;	author tg;	state Exp;
branches;
next	;

1.1.109.1
date	2006.07.01.23.27.03;	author tg;	state Exp;
branches;
next	;
commitid	10044A704BD2A6243A3;


desc
@@


1.3
log
@revert to xterm-200-based (plus fix an openbsd glitch)
xterm-215-based does not work correctly:
* uxterm does not honour its class (e.g. my font is too small)
* utmp is never updated
@
text
@/*
 * $XFree86: xc/programs/xterm/fontutils.h,v 1.14 2005/01/14 01:50:02 dickey Exp $
 */

/************************************************************

Copyright 1998-2004,2005 by Thomas E. Dickey

                        All Rights Reserved

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the name(s) of the above copyright
holders shall not be used in advertising or otherwise to promote the
sale, use or other dealings in this Software without prior written
authorization.

********************************************************/

#ifndef included_fontutils_h
#define included_fontutils_h 1

#include <xterm.h>

extern const VTFontNames * xtermFontName(char *normal);
extern int lookupRelativeFontSize(TScreen * screen, int old, int relative);
extern int xtermLoadFont (TScreen *screen,
			  const VTFontNames *fonts,
			  Bool doresize, int fontnum);
extern void HandleSetFont PROTO_XT_ACTIONS_ARGS;
extern void SetVTFont (int i, Bool doresize, const VTFontNames *fonts);
extern void xtermComputeFontInfo (TScreen *screen, struct _vtwin *win, XFontStruct *font, int sbwidth);
extern void xtermSaveFontInfo (TScreen *screen, XFontStruct *font);
extern void xtermSetCursorBox (TScreen *screen);
extern void xtermUpdateFontInfo (TScreen *screen, Bool doresize);

#if OPT_DEC_CHRSET
extern char *xtermSpecialFont(unsigned atts, unsigned chrset);
#endif

#if OPT_BOX_CHARS
extern Bool xtermMissingChar(unsigned ch, XFontStruct *font);
extern void xtermDrawBoxChar(TScreen *screen, unsigned ch, unsigned flags, GC gc, int x, int y);
#endif

#if OPT_LOAD_VTFONTS
extern void HandleLoadVTFonts PROTO_XT_ACTIONS_ARGS;
#endif

#if OPT_LOAD_VTFONTS || OPT_WIDE_CHARS
extern Bool xtermLoadVTFonts(XtermWidget w, char *aName, char *cName);
#endif

#define xtermIsDecGraphic(ch) ((ch) > 0 && (ch) < 32)

#if OPT_RENDERFONT && OPT_WIDE_CHARS
extern Bool xtermIsLineDrawing(unsigned /* wc */);
extern Bool xtermXftMissing(XftFont * /* font */, unsigned /* wc */);
#endif

#if OPT_SHIFT_FONTS
extern void HandleSmallerFont PROTO_XT_ACTIONS_ARGS;
extern void HandleLargerFont PROTO_XT_ACTIONS_ARGS;
#endif

#if OPT_WIDE_CHARS
extern unsigned ucs2dec(unsigned);
extern unsigned dec2ucs(unsigned);
#endif

#endif /* included_fontutils_h */
@


1.2
log
@merge and go back to xterm-215
@
text
@a0 2
/* $XTermId: fontutils.h,v 1.57 2006/02/13 01:14:59 tom Exp $ */

d2 1
a2 1
 * $XFree86: xc/programs/xterm/fontutils.h,v 1.17 2006/02/13 01:14:59 dickey Exp $
d7 1
a7 1
Copyright 1998-2005,2006 by Thomas E. Dickey
d42 5
a46 8
extern Bool xtermLoadDefaultFonts (XtermWidget /* w */);
extern XFontStruct * xtermOpenFont (TScreen * /* screen */, char */* name */);
extern XFontStruct * xtermCloseFont(TScreen * /* screen */, XFontStruct * /* fnt */);
extern const VTFontNames * xtermFontName (char */* normal */);
extern int lookupRelativeFontSize (TScreen * /* screen */, int /* old */, int /* relative */);
extern int xtermLoadFont (XtermWidget /* xw */,
			  const VTFontNames */* fonts */,
			  Bool /* doresize */, int /* fontnum */);
d48 5
a52 6
extern void SetVTFont (XtermWidget /* xw */, int /* i */, Bool /* doresize */, const VTFontNames */* fonts */);
extern void xtermCloseFonts(TScreen * /* screen */, XFontStruct ** /* fnts[fMAX] */);
extern void xtermComputeFontInfo (XtermWidget /* xw */, struct _vtwin */* win */, XFontStruct */* font */, int /* sbwidth */);
extern void xtermSaveFontInfo (TScreen */* screen */, XFontStruct */* font */);
extern void xtermSetCursorBox (TScreen */* screen */);
extern void xtermUpdateFontInfo (XtermWidget /* xw */, Bool /* doresize */);
d55 1
a55 1
extern char *xtermSpecialFont (TScreen */* screen */, unsigned /* atts */, unsigned /* chrset */);
d59 2
a60 2
extern Bool xtermMissingChar (XtermWidget /* xw */, unsigned /* ch */, XFontStruct */* font */);
extern void xtermDrawBoxChar (XtermWidget /* xw */, unsigned /* ch */, unsigned /* flags */, GC /* gc */, int /* x */, int /* y */);
d68 1
a68 1
extern Bool xtermLoadWideFonts (XtermWidget /* w */, Bool /* nullOk */);
d71 1
a71 1
#define xtermIsDecGraphic(ch)	((ch) > 0 && (ch) < 32)
d74 2
a75 2
extern Bool xtermIsLineDrawing (unsigned /* wc */);
extern Bool xtermXftMissing (XtermWidget /* xw */, XftFont * /* font */, unsigned /* wc */);
d84 2
a85 2
extern unsigned ucs2dec (unsigned);
extern unsigned dec2ucs (unsigned);
@


1.1
log
@Initial revision
@
text
@d1 2
d4 1
a4 1
 * $XFree86: xc/programs/xterm/fontutils.h,v 1.14 2005/01/14 01:50:02 dickey Exp $
d9 1
a9 1
Copyright 1998-2004,2005 by Thomas E. Dickey
d44 8
a51 5
extern const VTFontNames * xtermFontName(char *normal);
extern int lookupRelativeFontSize(TScreen * screen, int old, int relative);
extern int xtermLoadFont (TScreen *screen,
			  const VTFontNames *fonts,
			  Bool doresize, int fontnum);
d53 6
a58 5
extern void SetVTFont (int i, Bool doresize, const VTFontNames *fonts);
extern void xtermComputeFontInfo (TScreen *screen, struct _vtwin *win, XFontStruct *font, int sbwidth);
extern void xtermSaveFontInfo (TScreen *screen, XFontStruct *font);
extern void xtermSetCursorBox (TScreen *screen);
extern void xtermUpdateFontInfo (TScreen *screen, Bool doresize);
d61 1
a61 1
extern char *xtermSpecialFont(unsigned atts, unsigned chrset);
d65 2
a66 2
extern Bool xtermMissingChar(unsigned ch, XFontStruct *font);
extern void xtermDrawBoxChar(TScreen *screen, unsigned ch, unsigned flags, GC gc, int x, int y);
d74 1
a74 1
extern Bool xtermLoadVTFonts(XtermWidget w, char *aName, char *cName);
d77 1
a77 1
#define xtermIsDecGraphic(ch) ((ch) > 0 && (ch) < 32)
d80 2
a81 2
extern Bool xtermIsLineDrawing(unsigned /* wc */);
extern Bool xtermXftMissing(XftFont * /* font */, unsigned /* wc */);
d90 2
a91 2
extern unsigned ucs2dec(unsigned);
extern unsigned dec2ucs(unsigned);
@


1.1.109.1
log
@Import xterm-215 (latest from Tom Dickey)
XFree86 4.6.0 had xterm-213 with no diffs,
so we only need to care about both obsd and
mbsd local diffs
@
text
@a0 2
/* $XTermId: fontutils.h,v 1.57 2006/02/13 01:14:59 tom Exp $ */

d2 1
a2 1
 * $XFree86: xc/programs/xterm/fontutils.h,v 1.17 2006/02/13 01:14:59 dickey Exp $
d7 1
a7 1
Copyright 1998-2005,2006 by Thomas E. Dickey
d42 5
a46 8
extern Bool xtermLoadDefaultFonts (XtermWidget /* w */);
extern XFontStruct * xtermOpenFont (TScreen * /* screen */, char */* name */);
extern XFontStruct * xtermCloseFont(TScreen * /* screen */, XFontStruct * /* fnt */);
extern const VTFontNames * xtermFontName (char */* normal */);
extern int lookupRelativeFontSize (TScreen * /* screen */, int /* old */, int /* relative */);
extern int xtermLoadFont (XtermWidget /* xw */,
			  const VTFontNames */* fonts */,
			  Bool /* doresize */, int /* fontnum */);
d48 5
a52 6
extern void SetVTFont (XtermWidget /* xw */, int /* i */, Bool /* doresize */, const VTFontNames */* fonts */);
extern void xtermCloseFonts(TScreen * /* screen */, XFontStruct ** /* fnts[fMAX] */);
extern void xtermComputeFontInfo (XtermWidget /* xw */, struct _vtwin */* win */, XFontStruct */* font */, int /* sbwidth */);
extern void xtermSaveFontInfo (TScreen */* screen */, XFontStruct */* font */);
extern void xtermSetCursorBox (TScreen */* screen */);
extern void xtermUpdateFontInfo (XtermWidget /* xw */, Bool /* doresize */);
d55 1
a55 1
extern char *xtermSpecialFont (TScreen */* screen */, unsigned /* atts */, unsigned /* chrset */);
d59 2
a60 2
extern Bool xtermMissingChar (XtermWidget /* xw */, unsigned /* ch */, XFontStruct */* font */);
extern void xtermDrawBoxChar (XtermWidget /* xw */, unsigned /* ch */, unsigned /* flags */, GC /* gc */, int /* x */, int /* y */);
d68 1
a68 1
extern Bool xtermLoadWideFonts (XtermWidget /* w */, Bool /* nullOk */);
d71 1
a71 1
#define xtermIsDecGraphic(ch)	((ch) > 0 && (ch) < 32)
d74 2
a75 2
extern Bool xtermIsLineDrawing (unsigned /* wc */);
extern Bool xtermXftMissing (XtermWidget /* xw */, XftFont * /* font */, unsigned /* wc */);
d84 2
a85 2
extern unsigned ucs2dec (unsigned);
extern unsigned dec2ucs (unsigned);
@


1.1.103.1
log
@Import XFree86 4.5.0 directly from vendor anoncvs, -rxf-4_5_0 xc
at anoncvs@@anoncvs.xfree86.org:/cvs (ssh)
@
text
@@
