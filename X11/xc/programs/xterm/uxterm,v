head	1.3;
access;
symbols
	MIRBSD_10_BASE:1.3
	tg-xterm-215-based:1.2.0.2
	tg-xterm-200-based:1.1
	xterm-215:1.1.109.1
	lynx:1.1.109
	MIRBSD_9_BASE:1.1.103.1
	MIRBSD_8:1.1.103.1.0.2
	MIRBSD_8_BASE:1.1.103.1
	xf-4_5_0:1.1.103.1
	xwindow:1.1.103;
locks; strict;
comment	@# @;


1.3
date	2006.07.02.00.54.53;	author tg;	state Exp;
branches;
next	1.2;
commitid	10044A719405F9E103E;

1.2
date	2006.07.02.00.02.50;	author tg;	state Exp;
branches;
next	1.1;
commitid	10044A70D294F0BB63C;

1.1
date	2005.03.18.10.52.33;	author tg;	state Exp;
branches
	1.1.103.1
	1.1.109.1;
next	;

1.1.103.1
date	2005.03.18.10.52.33;	author tg;	state Exp;
branches;
next	;

1.1.109.1
date	2006.07.01.23.27.05;	author tg;	state Exp;
branches;
next	;
commitid	10044A704BD2A6243A3;


desc
@@


1.3
log
@revert to xterm-200-based (plus fix an openbsd glitch)
xterm-215-based does not work correctly:
* uxterm does not honour its class (e.g. my font is too small)
* utmp is never updated
@
text
@#!/bin/sh
# $XTermId: uxterm,v 1.17 2004/11/29 20:39:26 tom Exp $
# $XFree86: xc/programs/xterm/uxterm,v 1.10 2004/12/01 01:27:47 dickey Exp $
# wrapper script to setup xterm with UTF-8 locale

program=xterm
locale=`(LC_ALL=C LC_CTYPE=C LANG=C locale >/dev/null) 2>&1`
found=no

# Check for -version and -help options, to provide a simple return without
# requiring the program to create a window:
if test $# = 1
then
	case $1 in
	-v|-ver*|-h|-he*)
		$program "$@@"
		exit $?
		;;
	esac
fi

# Check environment variables that xterm does, in the same order:
for name in LC_ALL LC_CTYPE LANG
do
	eval 'value=$'$name
	if test -n "$value" ; then
		case $value in
		*.utf8|*.UTF8|*.utf-8|*.UTF-8)
			found=yes
			;;
		*.utf8@@*|*.UTF8@@*|*.utf-8@@*|*.UTF-8@@*)
			found=yes
			;;
		C|POSIX)
			# Yes, I know this is not the same - but why are you
			# here then?
			value=en_US
			;;
		esac
		break
	fi
done

# If we didn't find one that used UTF-8, modify the safest one.  Not everyone
# has a UTF-8 locale installed (and there appears to be no trivial/portable way
# to determine whether it is, from a shell script).  We could check if the
# user's shell does not reset unknown locale specifiers, but not all shells do.
if test $found != yes ; then
	if test -n "$value" ; then
		value=`echo ${value} |sed -e 's/[.@@].*//'`.UTF-8
	else
		name="LC_CTYPE"
		value="en_US.UTF-8"
	fi
	eval ${name}=${value}
	eval export ${name}
	if test -z "$locale" ; then
		# The 'locale' program tries to do a sanity check.
		check=`(locale >/dev/null) 2>&1`
		if test -n "$check" ; then
			echo "uxterm tried to use locale $value" >&2
			echo "$check" >&2
			exit 1
		fi
	fi
fi

# for testing:
#test -f ./xterm && program=./xterm

exec $program -class UXTerm -title 'uxterm' -u8 "$@@"
@


1.2
log
@merge and go back to xterm-215
@
text
@d2 2
a3 2
# $XTermId: uxterm,v 1.23 2006/01/04 02:10:27 tom Exp $
# $XFree86: xc/programs/xterm/uxterm,v 1.12 2006/01/04 02:10:27 dickey Exp $
d6 2
a7 6
: ${XTERM_PROGRAM=xterm}

# Check if there is a workable locale program.  If there is not, we will read
# something via the standard error.  Ignore whatever is written to the
# standard output.
locale=`sh -c "LC_ALL=C LC_CTYPE=C LANG=C locale >/dev/null" 2>&1`
d16 1
a16 1
		$XTERM_PROGRAM "$@@"
a54 1
	eval save=\$${name}
d59 1
a59 1
		check=`sh -c "locale >/dev/null" 2>&1`
d61 2
a62 8
			eval ${name}=${save}
			eval export ${name}

			echo "uxterm tried to use locale $value by setting \$$name" >&2
			xmessage -file - <<EOF
uxterm tried unsuccessfully to use locale $value
by setting \$$name to "${value}".
EOF
d69 1
a69 1
#test -f ./xterm && XTERM_PROGRAM=./xterm
d71 1
a71 1
exec $XTERM_PROGRAM -class UXTerm -title 'uxterm' -u8 "$@@"
@


1.1
log
@Initial revision
@
text
@d2 2
a3 2
# $XTermId: uxterm,v 1.17 2004/11/29 20:39:26 tom Exp $
# $XFree86: xc/programs/xterm/uxterm,v 1.10 2004/12/01 01:27:47 dickey Exp $
d6 6
a11 2
program=xterm
locale=`(LC_ALL=C LC_CTYPE=C LANG=C locale >/dev/null) 2>&1`
d20 1
a20 1
		$program "$@@"
d59 1
d64 1
a64 1
		check=`(locale >/dev/null) 2>&1`
d66 8
a73 2
			echo "uxterm tried to use locale $value" >&2
			echo "$check" >&2
d80 1
a80 1
#test -f ./xterm && program=./xterm
d82 1
a82 1
exec $program -class UXTerm -title 'uxterm' -u8 "$@@"
@


1.1.109.1
log
@Import xterm-215 (latest from Tom Dickey)
XFree86 4.6.0 had xterm-213 with no diffs,
so we only need to care about both obsd and
mbsd local diffs
@
text
@d2 2
a3 2
# $XTermId: uxterm,v 1.23 2006/01/04 02:10:27 tom Exp $
# $XFree86: xc/programs/xterm/uxterm,v 1.12 2006/01/04 02:10:27 dickey Exp $
d6 2
a7 6
: ${XTERM_PROGRAM=xterm}

# Check if there is a workable locale program.  If there is not, we will read
# something via the standard error.  Ignore whatever is written to the
# standard output.
locale=`sh -c "LC_ALL=C LC_CTYPE=C LANG=C locale >/dev/null" 2>&1`
d16 1
a16 1
		$XTERM_PROGRAM "$@@"
a54 1
	eval save=\$${name}
d59 1
a59 1
		check=`sh -c "locale >/dev/null" 2>&1`
d61 2
a62 8
			eval ${name}=${save}
			eval export ${name}

			echo "uxterm tried to use locale $value by setting \$$name" >&2
			xmessage -file - <<EOF
uxterm tried unsuccessfully to use locale $value
by setting \$$name to "${value}".
EOF
d69 1
a69 1
#test -f ./xterm && XTERM_PROGRAM=./xterm
d71 1
a71 1
exec $XTERM_PROGRAM -class UXTerm -title 'uxterm' -u8 "$@@"
@


1.1.103.1
log
@Import XFree86 4.5.0 directly from vendor anoncvs, -rxf-4_5_0 xc
at anoncvs@@anoncvs.xfree86.org:/cvs (ssh)
@
text
@@
