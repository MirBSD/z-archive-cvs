head	1.2;
access;
symbols
	MIRBSD_10_BASE:1.1.1.1
	MIRBSD_9_BASE:1.1.1.1
	MIRBSD_8:1.1.1.1.0.2
	MIRBSD_8_BASE:1.1.1.1
	cvs-200503191540:1.1.1.1
	openbsd:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2014.03.13.02.41.54;	author tg;	state dead;
branches;
next	1.1;
commitid	10053211B0774FB200F;

1.1
date	2005.03.19.15.59.33;	author tg;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.03.19.15.59.33;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@kill *rand48()
@
text
@#if !defined( lint ) && !defined( SABER )
static const char sccsid[] = "@@(#)random.c	4.10 98/04/23 xlockmore";

#endif

/*-
 * random.c - various utilities for random numbers
 *
 * Copyright (c) 1998 by David Bagley
 *
 * Revision History:
 *
 * Changes maintained by David Bagley <bagleyd@@tux.org>
 * 23-Apr-96: Separated out of util.c
 *
 */


/*-
 * Dr. Park's algorithm published in the Oct. '88 ACM  "Random Number
 * Generators: Good Ones Are Hard To Find" His version available at
 * ftp://cs.wm.edu/pub/rngs.tar Present form by many authors.
 */

static int  Seed = 1;		/* This is required to be 32 bits long */

/*-
 *      Given an integer, this routine initializes the RNG seed.
 */
void
SetRNG(long int s)
{
	Seed = (int) s;
}

/*-
 *      Returns an integer between 0 and 2147483647, inclusive.
 */
long
LongRNG(void)
{
	if ((Seed = Seed % 44488 * 48271 - Seed / 44488 * 3399) < 0)
		Seed += 2147483647;
	return (long) (Seed - 1);
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import three helpful programmes from OpenBSD sources
@
text
@@
