head	1.1;
branch	1.1.103;
access;
symbols
	MIRBSD_10_BASE:1.1.103.1
	MIRBSD_9_BASE:1.1.103.1
	MIRBSD_8:1.1.103.1.0.2
	MIRBSD_8_BASE:1.1.103.1
	xf-4_5_0:1.1.103.1
	xwindow:1.1.103;
locks; strict;
comment	@# @;


1.1
date	2005.03.18.10.52.09;	author tg;	state Exp;
branches
	1.1.103.1;
next	;

1.1.103.1
date	2005.03.18.10.52.09;	author tg;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@// $Xorg: misc,v 1.3 2000/08/17 19:54:34 cpqbld Exp $
//
//
//
// $XFree86: xc/programs/xkbcomp/compat/misc,v 1.5 2003/12/02 13:13:07 pascal Exp $

default partial xkb_compatibility "misc"  {

    virtual_modifiers	Alt,Meta,Super,Hyper,ScrollLock;

    // Interpretations for some other useful keys

    interpret Terminate_Server {
        action = Terminate();
    };

    setMods.clearLocks= True;

    // Sets the "Alt" virtual modifier

    interpret Alt_L+Any     {
        useModMapMods= level1;
	virtualModifier= Alt;
	action = SetMods(modifiers=modMapMods);
    };

    interpret Alt_L	{
	action = SetMods(modifiers=Alt);
    };

    interpret Alt_R+Any     {
        useModMapMods= level1;
	virtualModifier= Alt;
	action = SetMods(modifiers=modMapMods);
    };

    interpret Alt_R	{
	action = SetMods(modifiers=Alt);
    };

    // Sets the "Meta" virtual modifier

    interpret Meta_L+Any     {
//        useModMapMods= level1;
	virtualModifier= Meta;
	action = SetMods(modifiers=modMapMods);
    };

    interpret Meta_L	{
	action = SetMods(modifiers=Meta);
    };

    interpret Meta_R+Any     {
        useModMapMods= level1;
	virtualModifier= Meta;
	action = SetMods(modifiers=modMapMods);
    };

    interpret Meta_R	{
	action = SetMods(modifiers=Alt);
    };

    // Sets the "Super" virtual modifier

    interpret Super_L+Any     {
//        useModMapMods= level1;
	virtualModifier= Super;
	action = SetMods(modifiers=modMapMods);
    };

    interpret Super_L	{
	action = SetMods(modifiers=Super);
    };

    interpret Super_R+Any     {
        useModMapMods= level1;
	virtualModifier= Super;
	action = SetMods(modifiers=modMapMods);
    };

    interpret Super_R	{
	action = SetMods(modifiers=Super);
    };

    // Sets the "Hyper" virtual modifier

    interpret Hyper_L+Any     {
//        useModMapMods= level1;
	virtualModifier= Hyper;
	action = SetMods(modifiers=modMapMods);
    };

    interpret Hyper_L	{
	action = SetMods(modifiers=Hyper);
    };

    interpret Hyper_R+Any     {
        useModMapMods= level1;
	virtualModifier= Hyper;
	action = SetMods(modifiers=modMapMods);
    };

    interpret Hyper_R	{
	action = SetMods(modifiers=Hyper);
    };

    // Sets the "ScrollLock" virtual modifier and
    // makes it actually lock when pressed.  Sets
    // up a map for the scroll lock indicator.
    interpret Scroll_Lock+Any	{
	virtualModifier= ScrollLock;
	action = LockMods(modifiers=modMapMods);
    };

    indicator "Scroll Lock" {
	allowExplicit;
	whichModState= Locked;
	modifiers= ScrollLock;
    };
};
@


1.1.103.1
log
@Import XFree86 4.5.0 directly from vendor anoncvs, -rxf-4_5_0 xc
at anoncvs@@anoncvs.xfree86.org:/cvs (ssh)
@
text
@@
