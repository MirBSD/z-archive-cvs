head	1.5;
access;
symbols
	freetype-2_7_1:1.1.115.4
	freetype-2_3_12:1.1.115.3
	freetype-2_3_6:1.1.1.1
	MIRBSD_10_BASE:1.3
	freetype-2_3_5:1.1.1.1
	freetype-2_2_1:1.1.115.2
	freetype-2_1_8:1.1.115.1
	freetype:1.1.115
	MIRBSD_9_BASE:1.1.103.1
	MIRBSD_8:1.1.103.1.0.2
	MIRBSD_8_BASE:1.1.103.1
	xf-4_5_0:1.1.103.1
	xwindow:1.1.103;
locks; strict;
comment	@# @;


1.5
date	2017.04.15.19.20.01;	author tg;	state Exp;
branches;
next	1.4;
commitid	10058F2723111C7BEE2;

1.4
date	2013.08.06.19.46.25;	author tg;	state Exp;
branches;
next	1.3;
commitid	100520152445E05B912;

1.3
date	2008.02.26.20.04.21;	author bsiegert;	state Exp;
branches;
next	1.2;
commitid	10047C470A72A1E13CE;

1.2
date	2006.06.29.20.24.09;	author tg;	state Exp;
branches;
next	1.1;
commitid	10044A435A50E5F7C11;

1.1
date	2005.03.18.10.42.56;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.103.1
	1.1.115.1;
next	;

1.1.1.1
date	2008.02.26.19.53.51;	author bsiegert;	state Exp;
branches;
next	;
commitid	10047C46DB5081DCD79;

1.1.103.1
date	2005.03.18.10.42.56;	author tg;	state Exp;
branches;
next	;

1.1.115.1
date	2006.06.29.18.34.04;	author tg;	state Exp;
branches;
next	1.1.115.2;
commitid	10044A41D276963C97B;

1.1.115.2
date	2006.06.29.18.38.24;	author tg;	state Exp;
branches;
next	1.1.115.3;
commitid	10044A41DBD6368BED5;

1.1.115.3
date	2013.08.06.19.12.16;	author tg;	state Exp;
branches;
next	1.1.115.4;
commitid	10052014A9975CEFD1D;

1.1.115.4
date	2017.04.15.15.41.52;	author tg;	state Exp;
branches;
next	;
commitid	10058F23F4858079E1C;


desc
@@


1.5
log
@first cut at a quickmerge
@
text
@#
# Makefile for FreeType2 link library using Amiga SAS/C 6.58
#


# Copyright 2005-2016 by
# Werner Lemberg and Detlef Würkner.
#
# This file is part of the FreeType project, and may only be used, modified,
# and distributed under the terms of the FreeType project license,
# LICENSE.TXT.  By continuing to use, modify, or distribute this file you
# indicate that you have read the license and understand and accept it
# fully.


# to build from the builds/amiga directory call
#
#  smake assign
#  smake
#
# Your programs source code should start with this
# (uncomment the parts you do not need to keep the program small):
# ---8<---
#define FT_USE_AUTOFIT // autofitter
#define FT_USE_RASTER  // monochrome rasterizer
#define FT_USE_SMOOTH  // anti-aliasing rasterizer
#define FT_USE_TT      // truetype font driver
#define FT_USE_T1      // type1 font driver
#define FT_USE_T42     // type42 font driver
#define FT_USE_T1CID   // cid-keyed type1 font driver
#define FT_USE_CFF     // opentype font driver
#define FT_USE_BDF     // bdf bitmap font driver
#define FT_USE_PCF     // pcf bitmap font driver
#define FT_USE_PFR     // pfr font driver
#define FT_USE_WINFNT  // windows .fnt|.fon bitmap font driver
#define FT_USE_OTV     // opentype validator
#define FT_USE_GXV     // truetype gx validator
#include "FT:src/base/ftinit.c"
# ---8<---
#
# link your programs with ft2_680x0.lib and either ftsystem.o or ftsystempure.o
# (and either ftdebug.o or ftdebugpure.o if you enabled FT_DEBUG_LEVEL_ERROR or
# FT_DEBUG_LEVEL_TRACE in include/freetype/config/ftoption.h).

OBJBASE = ftbase.o ftbbox.o ftbdf.o ftbitmap.o ftcid.o ftfntfmt.o ftfstype.o \
	  ftgasp.o ftglyph.o ftgxval.o ftlcdfil.o ftmm.o ftotval.o           \
	  ftpatent.o ftpfr.o ftstroke.o ftsynth.o fttype1.o ftwinfnt.o

OBJSYSTEM = ftsystem.o ftsystempure.o

OBJDEBUG = ftdebug.o ftdebugpure.o

OBJAFIT = autofit.o

OBJGXV = gxvalid.o

OBJOTV = otvalid.o

OBJPS = psaux.o psnames.o pshinter.o

OBJRASTER = raster.o smooth.o

OBJSFNT = sfnt.o

OBJCACHE = ftcache.o

OBJFONTD = cff.o type1.o type42.o type1cid.o\
	   truetype.o winfnt.o bdf.o pcf.o pfr.o

CORE = FT:src/

CPU       = 68000
#CPU      = 68020
#CPU      = 68030
#CPU      = 68040
#CPU      = 68060

OPTIMIZER = optinlocal

SCFLAGS = optimize opttime optsched strmerge data=faronly idlen=50 cpu=$(CPU)\
	  idir=include/ idir=$(CORE) idir=FT:include/ nostackcheck nochkabort\
	  noicons ignore=79,85,110,306 parameters=both define=FT2_BUILD_LIBRARY

LIB  = ft2_$(CPU).lib

# sample linker options
OPTS = link lib=$(LIB),lib:sc.lib,lib:amiga.lib,lib:debug.lib\
       smallcode smalldata noicons utillib

# sample program entry
#myprog: myprog.c ftsystem.o $(LIB)
#	sc $< programname=$@@ ftsystem.o $(SCFLAGS) $(OPTS)

all:	$(LIB) $(OBJSYSTEM) $(OBJDEBUG)

assign:
	assign FT: //

# uses separate object modules in lib to make for easier debugging
# also, can make smaller programs if entire engine is not used
ft2_$(CPU).lib:  $(OBJBASE) $(OBJAFIT) $(OBJOTV) $(OBJPS) $(OBJRASTER) $(OBJSFNT) $(OBJCACHE) $(OBJFONTD) lzw.o gzip.o bzip2.o
	oml $@@ r $(OBJBASE) $(OBJAFIT) $(OBJOTV) $(OBJPS) $(OBJRASTER) $(OBJSFNT) $(OBJCACHE) $(OBJFONTD) lzw.o gzip.o bzip2.o

clean:
	-delete \#?.o

realclean: clean
	-delete ft2$(CPU).lib

#
# freetype library base
#
ftbase.o: $(CORE)base/ftbase.c
	sc $(SCFLAGS) objname=$@@ $<
ftinit.o: $(CORE)base/ftinit.c
	sc $(SCFLAGS) objname=$@@ $<
ftsystem.o: $(CORE)base/ftsystem.c
	sc $(SCFLAGS) objname=$@@ $<
ftsystempure.o: src/base/ftsystem.c	## pure version for use in run-time library etc
	sc $(SCFLAGS) objname=$@@ $<
ftdebug.o: $(CORE)base/ftdebug.c
	sc $(SCFLAGS) objname=$@@ $<
ftdebugpure.o: src/base/ftdebug.c	## pure version for use in run-time library etc
	sc $(SCFLAGS) objname=$@@ $<
#
# freetype library base extensions
#
ftbbox.o: $(CORE)base/ftbbox.c
	sc $(SCFLAGS) objname=$@@ $<
ftbdf.o: $(CORE)base/ftbdf.c
	sc $(SCFLAGS) objname=$@@ $<
ftbitmap.o: $(CORE)base/ftbitmap.c
	sc $(SCFLAGS) objname=$@@ $<
ftcid.o: $(CORE)base/ftcid.c
	sc $(SCFLAGS) objname=$@@ $<
ftfntfmt.o: $(CORE)base/ftfntfmt.c
	sc $(SCFLAGS) objname=$@@ $<
ftfstype.o: $(CORE)base/ftfstype.c
	sc $(SCFLAGS) objname=$@@ $<
ftgasp.o: $(CORE)base/ftgasp.c
	sc $(SCFLAGS) objname=$@@ $<
ftglyph.o: $(CORE)base/ftglyph.c
	sc $(SCFLAGS) objname=$@@ $<
ftgxval.o: $(CORE)base/ftgxval.c
	sc $(SCFLAGS) objname=$@@ $<
ftlcdfil.o: $(CORE)base/ftlcdfil.c
	sc $(SCFLAGS) objname=$@@ $<
ftmm.o: $(CORE)base/ftmm.c
	sc $(SCFLAGS) objname=$@@ $<
ftotval.o: $(CORE)base/ftotval.c
	sc $(SCFLAGS) objname=$@@ $<
ftpatent.o: $(CORE)base/ftpatent.c
	sc $(SCFLAGS) objname=$@@ $<
ftpfr.o: $(CORE)base/ftpfr.c
	sc $(SCFLAGS) objname=$@@ $<
ftstroke.o: $(CORE)base/ftstroke.c
	sc $(SCFLAGS) objname=$@@ $<
ftsynth.o: $(CORE)base/ftsynth.c
	sc $(SCFLAGS) objname=$@@ $<
fttype1.o: $(CORE)base/fttype1.c
	sc $(SCFLAGS) objname=$@@ $<
ftwinfnt.o: $(CORE)base/ftwinfnt.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library autofitter module
#
autofit.o: $(CORE)autofit/autofit.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library PS hinting module
#
pshinter.o: $(CORE)pshinter/pshinter.c
	sc $(SCFLAGS) objname=$@@ $<
#
# freetype library PS support module
#
psaux.o: $(CORE)psaux/psaux.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library PS glyph names module
#
psnames.o: $(CORE)psnames/psnames.c
	sc $(SCFLAGS) code=far objname=$@@ $<

#
# freetype library monochrome raster module
#
raster.o: $(CORE)raster/raster.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library anti-aliasing raster module
#
smooth.o: $(CORE)smooth/smooth.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library 'sfnt' module
#
sfnt.o: $(CORE)sfnt/sfnt.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library glyph and image caching system (still experimental)
#
ftcache.o: $(CORE)cache/ftcache.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library OpenType font driver
#
cff.o: $(CORE)cff/cff.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library TrueType font driver
#
truetype.o: $(CORE)truetype/truetype.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library Type1 font driver
#
type1.o: $(CORE)type1/type1.c
	sc $(SCFLAGS) objname=$@@ $<

#
# FreeType2 library Type42 font driver
#
type42.o: $(CORE)type42/type42.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library CID-keyed Type1 font driver
#
type1cid.o: $(CORE)cid/type1cid.c
	sc $(SCFLAGS) objname=$@@ $<
#
# freetype library CID-keyed Type1 font driver extensions
#
#cidafm.o: $(CORE)cid/cidafm.c
#	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library BDF bitmap font driver
#
bdf.o: $(CORE)bdf/bdf.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library PCF bitmap font driver
#
pcf.o: $(CORE)pcf/pcf.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library gzip support for compressed PCF bitmap fonts
#
gzip.o: $(CORE)gzip/ftgzip.c
	sc $(SCFLAGS) define FAR objname=$@@ $<

#
# freetype library bzip2 support for compressed PCF bitmap fonts
#
bzip2.o: $(CORE)bzip2/ftbzip2.c
	sc $(SCFLAGS) define FAR objname=$@@ $<

#
# freetype library compress support for compressed PCF bitmap fonts
#
lzw.o: $(CORE)lzw/ftlzw.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library PFR font driver
#
pfr.o: $(CORE)pfr/pfr.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library Windows FNT/FON bitmap font driver
#
winfnt.o: $(CORE)winfonts/winfnt.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library TrueTypeGX validator
#
gxvalid.o: $(CORE)gxvalid/gxvalid.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library OpenType validator
#
otvalid.o: $(CORE)otvalid/otvalid.c
	sc $(SCFLAGS) objname=$@@ $<

#Local Variables:
#coding: latin-1
#End:
@


1.4
log
@fastmerge
@
text
@d6 1
a6 1
# Copyright 2005,2006, 2007, 2009 by
d45 3
a47 3
OBJBASE = ftbase.o ftbbox.o ftbdf.o ftbitmap.o ftcid.o ftfstype.o ftgasp.o   \
	  ftglyph.o ftgxval.o ftlcdfil.o ftmm.o ftotval.o ftpatent.o ftpfr.o \
	  ftstroke.o ftsynth.o fttype1.o ftwinfnt.o ftxf86.o
d101 2
a102 2
ft2_$(CPU).lib:  $(OBJBASE) $(OBJAFIT) $(OBJOTV) $(OBJPS) $(OBJRASTER) $(OBJSFNT) $(OBJCACHE) $(OBJFONTD) lzw.o gzip.o
	oml $@@ r $(OBJBASE) $(OBJAFIT) $(OBJOTV) $(OBJPS) $(OBJRASTER) $(OBJSFNT) $(OBJCACHE) $(OBJFONTD) lzw.o gzip.o
d136 2
a163 2
ftxf86.o: $(CORE)base/ftxf86.c
	sc $(SCFLAGS) objname=$@@ $<
d266 6
@


1.3
log
@Merge freetype 2.3.5, all conflicts automatically resolved
@
text
@d6 1
a6 1
# Copyright 2005,2006, 2007 by
d45 3
a47 3
OBJBASE = ftbase.o ftbbox.o ftbdf.o ftbitmap.o ftgasp.o ftglyph.o  \
	  ftgxval.o ftlcdfil.o ftmm.o ftotval.o ftpfr.o ftstroke.o \
	  ftsynth.o fttype1.o ftwinfnt.o ftxf86.o
d134 4
d150 2
@


1.2
log
@merge freetype 2.2.1, reduce diff against ft (rid some xf86 changes)
@
text
@d6 1
a6 1
# Copyright 2005,2006 by
d45 3
a47 2
OBJBASE = ftbase.o ftbbox.o ftbdf.o ftbitmap.o ftglyph.o ftgxval.o ftmm.o \
	  ftotval.o ftpfr.o ftstroke.o ftsynth.o fttype1.o ftwinfnt.o ftxf86.o
d134 2
d140 2
@


1.1
log
@Initial revision
@
text
@d4 12
d24 14
a37 12
#define FT_USE_AUTOHINT // autohinter
#define FT_USE_RASTER   // monochrome rasterizer
#define FT_USE_SMOOTH   // anti-aliasing rasterizer
#define FT_USE_TT       // truetype font driver
#define FT_USE_T1       // type1 font driver
#define FT_USE_T42      // type42 font driver
#define FT_USE_T1CID    // cid-keyed type1 font driver
#define FT_USE_CFF      // opentype font driver
#define FT_USE_BDF      // bdf bitmap font driver
#define FT_USE_PCF      // pcf bitmap font driver
#define FT_USE_PFR      // pfr font driver
#define FT_USE_WINFNT   // windows .fnt|.fon bitmap font driver
d45 2
a46 1
OBJBASE = ftbase.o ftglyph.o ftbbox.o ftmm.o ftsynth.o
d52 1
a52 1
OBJAHINT = autohint.o ahoptim.o
d54 1
a54 1
OBJPSHINT = pshinter.o
d56 1
a56 1
OBJPSAUX = psaux.o
d58 1
a58 1
OBJPSNAM = psnames.o
d60 1
a60 3
OBJRAST = raster.o

OBJSMOOTH = smooth.o
a65 4
OBJPS = $(OBJPSAUX) $(OBJPSNAM) $(OBJPSHINT)

OBJRASTER = $(OBJRAST) $(OBJSMOOTH)

d79 1
a79 1
SCFLAGS = optimize opttime optsched strmerge strsect=near idlen=40 cpu=$(CPU)\
d81 1
a81 1
	  noicons ignore=79,85,110,306 parameters=both
d100 2
a101 2
ft2_$(CPU).lib:  $(OBJBASE) $(OBJAHINT) $(OBJPS) $(OBJRASTER) $(OBJSFNT) $(OBJCACHE) $(OBJFONTD)
	oml $@@ r $(OBJBASE) $(OBJAHINT) $(OBJPS) $(OBJRASTER) $(OBJSFNT) $(OBJCACHE) $(OBJFONTD)
d127 6
d135 1
a135 1
ftbbox.o: $(CORE)base/ftbbox.c
d139 6
d147 6
d155 1
a155 1
# freetype library autohinting module
d157 1
a157 6
autohint.o: $(CORE)autohint/autohint.c
	sc $(SCFLAGS) objname=$@@ $<
#
# freetype library autohinting module extensions
#
ahoptim.o: $(CORE)autohint/ahoptim.c
d175 1
a175 1
	sc $(SCFLAGS) objname=$@@ $<
d249 12
d271 16
@


1.1.1.1
log
@Import freetype-2.3.5 into the X11 tree. This is a recommended security
update for everyone.
@
text
@a3 12


# Copyright 2005,2006, 2007 by
# Werner Lemberg and Detlef Würkner.
#
# This file is part of the FreeType project, and may only be used, modified,
# and distributed under the terms of the FreeType project license,
# LICENSE.TXT.  By continuing to use, modify, or distribute this file you
# indicate that you have read the license and understand and accept it
# fully.


d12 12
a23 14
#define FT_USE_AUTOFIT // autofitter
#define FT_USE_RASTER  // monochrome rasterizer
#define FT_USE_SMOOTH  // anti-aliasing rasterizer
#define FT_USE_TT      // truetype font driver
#define FT_USE_T1      // type1 font driver
#define FT_USE_T42     // type42 font driver
#define FT_USE_T1CID   // cid-keyed type1 font driver
#define FT_USE_CFF     // opentype font driver
#define FT_USE_BDF     // bdf bitmap font driver
#define FT_USE_PCF     // pcf bitmap font driver
#define FT_USE_PFR     // pfr font driver
#define FT_USE_WINFNT  // windows .fnt|.fon bitmap font driver
#define FT_USE_OTV     // opentype validator
#define FT_USE_GXV     // truetype gx validator
d31 1
a31 3
OBJBASE = ftbase.o ftbbox.o ftbdf.o ftbitmap.o ftgasp.o ftglyph.o  \
	  ftgxval.o ftlcdfil.o ftmm.o ftotval.o ftpfr.o ftstroke.o \
	  ftsynth.o fttype1.o ftwinfnt.o ftxf86.o
d37 3
a39 1
OBJAFIT = autofit.o
d41 1
a41 1
OBJGXV = gxvalid.o
d43 1
a43 1
OBJOTV = otvalid.o
d45 1
a45 1
OBJPS = psaux.o psnames.o pshinter.o
d47 1
a47 1
OBJRASTER = raster.o smooth.o
d53 4
d70 1
a70 1
SCFLAGS = optimize opttime optsched strmerge data=faronly idlen=50 cpu=$(CPU)\
d72 1
a72 1
	  noicons ignore=79,85,110,306 parameters=both define=FT2_BUILD_LIBRARY
d91 2
a92 2
ft2_$(CPU).lib:  $(OBJBASE) $(OBJAFIT) $(OBJOTV) $(OBJPS) $(OBJRASTER) $(OBJSFNT) $(OBJCACHE) $(OBJFONTD) lzw.o gzip.o
	oml $@@ r $(OBJBASE) $(OBJAFIT) $(OBJOTV) $(OBJPS) $(OBJRASTER) $(OBJSFNT) $(OBJCACHE) $(OBJFONTD) lzw.o gzip.o
a117 8
ftbbox.o: $(CORE)base/ftbbox.c
	sc $(SCFLAGS) objname=$@@ $<
ftbdf.o: $(CORE)base/ftbdf.c
	sc $(SCFLAGS) objname=$@@ $<
ftbitmap.o: $(CORE)base/ftbitmap.c
	sc $(SCFLAGS) objname=$@@ $<
ftgasp.o: $(CORE)base/ftgasp.c
	sc $(SCFLAGS) objname=$@@ $<
d120 1
a120 3
ftgxval.o: $(CORE)base/ftgxval.c
	sc $(SCFLAGS) objname=$@@ $<
ftlcdfil.o: $(CORE)base/ftlcdfil.c
a123 6
ftotval.o: $(CORE)base/ftotval.c
	sc $(SCFLAGS) objname=$@@ $<
ftpfr.o: $(CORE)base/ftpfr.c
	sc $(SCFLAGS) objname=$@@ $<
ftstroke.o: $(CORE)base/ftstroke.c
	sc $(SCFLAGS) objname=$@@ $<
d126 5
a130 1
fttype1.o: $(CORE)base/fttype1.c
a131 5
ftwinfnt.o: $(CORE)base/ftwinfnt.c
	sc $(SCFLAGS) objname=$@@ $<
ftxf86.o: $(CORE)base/ftxf86.c
	sc $(SCFLAGS) objname=$@@ $<

d133 1
a133 1
# freetype library autofitter module
d135 1
a135 1
autofit.o: $(CORE)autofit/autofit.c
d153 1
a153 1
	sc $(SCFLAGS) code=far objname=$@@ $<
a226 12
# freetype library gzip support for compressed PCF bitmap fonts
#
gzip.o: $(CORE)gzip/ftgzip.c
	sc $(SCFLAGS) define FAR objname=$@@ $<

#
# freetype library compress support for compressed PCF bitmap fonts
#
lzw.o: $(CORE)lzw/ftlzw.c
	sc $(SCFLAGS) objname=$@@ $<

#
a236 16

#
# freetype library TrueTypeGX validator
#
gxvalid.o: $(CORE)gxvalid/gxvalid.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library OpenType validator
#
otvalid.o: $(CORE)otvalid/otvalid.c
	sc $(SCFLAGS) objname=$@@ $<

#Local Variables:
#coding: latin-1
#End:
@


1.1.115.1
log
@re-base freetype 2.1.8
@
text
@@


1.1.115.2
log
@Import Freetype 2.2.1 with a bunch of security fixes
@
text
@a3 12


# Copyright 2005,2006 by
# Werner Lemberg and Detlef Würkner.
#
# This file is part of the FreeType project, and may only be used, modified,
# and distributed under the terms of the FreeType project license,
# LICENSE.TXT.  By continuing to use, modify, or distribute this file you
# indicate that you have read the license and understand and accept it
# fully.


d12 12
a23 14
#define FT_USE_AUTOFIT // autofitter
#define FT_USE_RASTER  // monochrome rasterizer
#define FT_USE_SMOOTH  // anti-aliasing rasterizer
#define FT_USE_TT      // truetype font driver
#define FT_USE_T1      // type1 font driver
#define FT_USE_T42     // type42 font driver
#define FT_USE_T1CID   // cid-keyed type1 font driver
#define FT_USE_CFF     // opentype font driver
#define FT_USE_BDF     // bdf bitmap font driver
#define FT_USE_PCF     // pcf bitmap font driver
#define FT_USE_PFR     // pfr font driver
#define FT_USE_WINFNT  // windows .fnt|.fon bitmap font driver
#define FT_USE_OTV     // opentype validator
#define FT_USE_GXV     // truetype gx validator
d31 1
a31 2
OBJBASE = ftbase.o ftbbox.o ftbdf.o ftbitmap.o ftglyph.o ftgxval.o ftmm.o \
	  ftotval.o ftpfr.o ftstroke.o ftsynth.o fttype1.o ftwinfnt.o ftxf86.o
d37 1
a37 1
OBJAFIT = autofit.o
d39 1
a39 1
OBJGXV = gxvalid.o
d41 1
a41 1
OBJOTV = otvalid.o
d43 1
a43 1
OBJPS = psaux.o psnames.o pshinter.o
d45 3
a47 1
OBJRASTER = raster.o smooth.o
d53 4
d70 1
a70 1
SCFLAGS = optimize opttime optsched strmerge data=faronly idlen=50 cpu=$(CPU)\
d72 1
a72 1
	  noicons ignore=79,85,110,306 parameters=both define=FT2_BUILD_LIBRARY
d91 2
a92 2
ft2_$(CPU).lib:  $(OBJBASE) $(OBJAFIT) $(OBJOTV) $(OBJPS) $(OBJRASTER) $(OBJSFNT) $(OBJCACHE) $(OBJFONTD) lzw.o gzip.o
	oml $@@ r $(OBJBASE) $(OBJAFIT) $(OBJOTV) $(OBJPS) $(OBJRASTER) $(OBJSFNT) $(OBJCACHE) $(OBJFONTD) lzw.o gzip.o
a117 6
ftbbox.o: $(CORE)base/ftbbox.c
	sc $(SCFLAGS) objname=$@@ $<
ftbdf.o: $(CORE)base/ftbdf.c
	sc $(SCFLAGS) objname=$@@ $<
ftbitmap.o: $(CORE)base/ftbitmap.c
	sc $(SCFLAGS) objname=$@@ $<
d120 1
a120 1
ftgxval.o: $(CORE)base/ftgxval.c
a123 6
ftotval.o: $(CORE)base/ftotval.c
	sc $(SCFLAGS) objname=$@@ $<
ftpfr.o: $(CORE)base/ftpfr.c
	sc $(SCFLAGS) objname=$@@ $<
ftstroke.o: $(CORE)base/ftstroke.c
	sc $(SCFLAGS) objname=$@@ $<
d126 5
a130 3
fttype1.o: $(CORE)base/fttype1.c
	sc $(SCFLAGS) objname=$@@ $<
ftwinfnt.o: $(CORE)base/ftwinfnt.c
a131 3
ftxf86.o: $(CORE)base/ftxf86.c
	sc $(SCFLAGS) objname=$@@ $<

d133 1
a133 1
# freetype library autofitter module
d135 1
a135 1
autofit.o: $(CORE)autofit/autofit.c
d153 1
a153 1
	sc $(SCFLAGS) code=far objname=$@@ $<
a226 12
# freetype library gzip support for compressed PCF bitmap fonts
#
gzip.o: $(CORE)gzip/ftgzip.c
	sc $(SCFLAGS) define FAR objname=$@@ $<

#
# freetype library compress support for compressed PCF bitmap fonts
#
lzw.o: $(CORE)lzw/ftlzw.c
	sc $(SCFLAGS) objname=$@@ $<

#
a236 16

#
# freetype library TrueTypeGX validator
#
gxvalid.o: $(CORE)gxvalid/gxvalid.c
	sc $(SCFLAGS) objname=$@@ $<

#
# freetype library OpenType validator
#
otvalid.o: $(CORE)otvalid/otvalid.c
	sc $(SCFLAGS) objname=$@@ $<

#Local Variables:
#coding: latin-1
#End:
@


1.1.115.3
log
@we need newer freetype for advance calculation
@
text
@d6 1
a6 1
# Copyright 2005,2006, 2007, 2009 by
d45 2
a46 3
OBJBASE = ftbase.o ftbbox.o ftbdf.o ftbitmap.o ftcid.o ftfstype.o ftgasp.o   \
	  ftglyph.o ftgxval.o ftlcdfil.o ftmm.o ftotval.o ftpatent.o ftpfr.o \
	  ftstroke.o ftsynth.o fttype1.o ftwinfnt.o ftxf86.o
a132 6
ftcid.o: $(CORE)base/ftcid.c
	sc $(SCFLAGS) objname=$@@ $<
ftfstype.o: $(CORE)base/ftfstype.c
	sc $(SCFLAGS) objname=$@@ $<
ftgasp.o: $(CORE)base/ftgasp.c
	sc $(SCFLAGS) objname=$@@ $<
a136 2
ftlcdfil.o: $(CORE)base/ftlcdfil.c
	sc $(SCFLAGS) objname=$@@ $<
a140 2
ftpatent.o: $(CORE)base/ftpatent.c
	sc $(SCFLAGS) objname=$@@ $<
@


1.1.115.4
log
@letâs see whether we canât update freetype2 as wellâ¦
@
text
@d6 1
a6 1
# Copyright 2005-2016 by
d45 3
a47 3
OBJBASE = ftbase.o ftbbox.o ftbdf.o ftbitmap.o ftcid.o ftfntfmt.o ftfstype.o \
	  ftgasp.o ftglyph.o ftgxval.o ftlcdfil.o ftmm.o ftotval.o           \
	  ftpatent.o ftpfr.o ftstroke.o ftsynth.o fttype1.o ftwinfnt.o
d101 2
a102 2
ft2_$(CPU).lib:  $(OBJBASE) $(OBJAFIT) $(OBJOTV) $(OBJPS) $(OBJRASTER) $(OBJSFNT) $(OBJCACHE) $(OBJFONTD) lzw.o gzip.o bzip2.o
	oml $@@ r $(OBJBASE) $(OBJAFIT) $(OBJOTV) $(OBJPS) $(OBJRASTER) $(OBJSFNT) $(OBJCACHE) $(OBJFONTD) lzw.o gzip.o bzip2.o
a135 2
ftfntfmt.o: $(CORE)base/ftfntfmt.c
	sc $(SCFLAGS) objname=$@@ $<
d162 2
a265 6
# freetype library bzip2 support for compressed PCF bitmap fonts
#
bzip2.o: $(CORE)bzip2/ftbzip2.c
	sc $(SCFLAGS) define FAR objname=$@@ $<

#
@


1.1.103.1
log
@Import XFree86 4.5.0 directly from vendor anoncvs, -rxf-4_5_0 xc
at anoncvs@@anoncvs.xfree86.org:/cvs (ssh)
@
text
@@
