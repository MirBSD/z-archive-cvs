head	1.5;
access;
symbols
	freetype-2_7_1:1.1.115.3
	freetype-2_3_12:1.1.115.2
	freetype-2_3_6:1.1.1.2
	MIRBSD_10_BASE:1.2
	freetype-2_3_5:1.1.1.1
	freetype-2_2_1:1.1.115.1
	freetype:1.1.115;
locks; strict;
comment	@# @;


1.5
date	2017.04.15.19.20.51;	author tg;	state Exp;
branches;
next	1.4;
commitid	10058F2723111C7BEE2;

1.4
date	2013.08.06.19.47.04;	author tg;	state Exp;
branches;
next	1.3;
commitid	100520152445E05B912;

1.3
date	2008.06.12.20.54.12;	author bsiegert;	state Exp;
branches;
next	1.2;
commitid	10048518C1E44F62885;

1.2
date	2008.02.26.20.04.38;	author bsiegert;	state Exp;
branches;
next	1.1;
commitid	10047C470A72A1E13CE;

1.1
date	2006.06.29.18.38.01;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.115.1;
next	;
commitid	10044A41DBD6368BED5;

1.1.1.1
date	2008.02.26.19.52.19;	author bsiegert;	state Exp;
branches;
next	1.1.1.2;
commitid	10047C46DB5081DCD79;

1.1.1.2
date	2008.06.12.20.37.15;	author bsiegert;	state Exp;
branches;
next	;
commitid	1004851887B4E012E38;

1.1.115.1
date	2006.06.29.18.38.01;	author tg;	state Exp;
branches;
next	1.1.115.2;
commitid	10044A41DBD6368BED5;

1.1.115.2
date	2013.08.06.19.12.11;	author tg;	state Exp;
branches;
next	1.1.115.3;
commitid	10052014A9975CEFD1D;

1.1.115.3
date	2017.04.15.15.41.47;	author tg;	state Exp;
branches;
next	;
commitid	10058F23F4858079E1C;


desc
@@


1.5
log
@first cut at a quickmerge
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>FreeType-2.7.1 API Reference</title>
<style type="text/css">
  a:link { color: #0000EF; }
  a:visited { color: #51188E; }
  a:hover { color: #FF0000; }

  body { font-family: Verdana, Geneva, Arial, Helvetica, serif;
         color: #000000;
         background: #FFFFFF;
         width: 87%;
         margin: auto; }

  div.section { width: 75%;
                margin: auto; }
  div.section hr { margin: 4ex 0 1ex 0; }
  div.section h4 { background-color: #EEEEFF;
                   font-size: medium;
                   font-style: oblique;
                   font-weight: bold;
                   margin: 3ex 0 1.5ex 9%;
                   padding: 0.3ex 0 0.3ex 1%; }
  div.section p { margin: 1.5ex 0 1.5ex 10%; }
  div.section pre { margin: 3ex 0 3ex 9%;
                    background-color: #D6E8FF;
                    padding: 2ex 0 2ex 1%; }
  div.section table.fields { width: 90%;
                             margin: 1.5ex 0 1.5ex 10%; }
  div.section table.toc { width: 95%;
                          margin: 1.5ex 0 1.5ex 5%; }
  div.timestamp { text-align: center;
                  font-size: 69%;
                  margin: 1.5ex 0 1.5ex 0; }

  h1 { text-align: center; }
  h3 { font-size: medium;
       margin: 4ex 0 1.5ex 0; }

  p { text-align: justify; }

  pre.colored { color: blue; }

  span.keyword { font-family: monospace;
                 text-align: left;
                 white-space: pre;
                 color: darkblue; }

  table.fields td.val { font-weight: bold;
                        text-align: right;
                        width: 30%;
                        vertical-align: baseline;
                        padding: 1ex 1em 1ex 0; }
  table.fields td.desc { vertical-align: baseline;
                         padding: 1ex 0 1ex 1em; }
  table.fields td.desc p:first-child { margin: 0; }
  table.fields td.desc p { margin: 1.5ex 0 0 0; }
  table.index { margin: 6ex auto 6ex auto;
                border: 0;
                border-collapse: separate;
                border-spacing: 1em 0.3ex; }
  table.index tr { padding: 0; }
  table.index td { padding: 0; }
  table.index-toc-link { width: 100%;
                         border: 0;
                         border-spacing: 0;
                         margin: 1ex 0 1ex 0; }
  table.index-toc-link td.left { padding: 0 0.5em 0 0.5em;
                                 font-size: 83%;
                                 text-align: left; }
  table.index-toc-link td.middle { padding: 0 0.5em 0 0.5em;
                                   font-size: 83%;
                                   text-align: center; }
  table.index-toc-link td.right { padding: 0 0.5em 0 0.5em;
                                  font-size: 83%;
                                  text-align: right; }
  table.synopsis { margin: 6ex auto 6ex auto;
                   border: 0;
                   border-collapse: separate;
                   border-spacing: 2em 0.6ex; }
  table.synopsis tr { padding: 0; }
  table.synopsis td { padding: 0; }
  table.toc td.link { width: 30%;
                      text-align: right;
                      vertical-align: baseline;
                      padding: 1ex 1em 1ex 0; }
  table.toc td.desc { vertical-align: baseline;
                      padding: 1ex 0 1ex 1em;
                      text-align: left; }
  table.toc td.desc p:first-child { margin: 0;
                                    text-align: left; }
  table.toc td.desc p { margin: 1.5ex 0 0 0;
                        text-align: left; }

</style>
</head>
<body>

<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table>
<h1>FreeType-2.7.1 API Reference</h1>

<h1 id="list_processing">List Processing</h1>
<h2>Synopsis</h2>
<table class="synopsis">
<tr><td><a href="#FT_List">FT_List</a></td><td><a href="#FT_List_Add">FT_List_Add</a></td><td><a href="#FT_List_Iterate">FT_List_Iterate</a></td></tr>
<tr><td><a href="#FT_ListNode">FT_ListNode</a></td><td><a href="#FT_List_Insert">FT_List_Insert</a></td><td><a href="#FT_List_Iterator">FT_List_Iterator</a></td></tr>
<tr><td><a href="#FT_ListRec">FT_ListRec</a></td><td><a href="#FT_List_Find">FT_List_Find</a></td><td><a href="#FT_List_Finalize">FT_List_Finalize</a></td></tr>
<tr><td><a href="#FT_ListNodeRec">FT_ListNodeRec</a></td><td><a href="#FT_List_Remove">FT_List_Remove</a></td><td><a href="#FT_List_Destructor">FT_List_Destructor</a></td></tr>
<tr><td>&nbsp;</td><td><a href="#FT_List_Up">FT_List_Up</a></td><td></td></tr>
</table>


<p>This section contains various definitions related to list processing using doubly-linked nodes.</p>

<div class="section">
<h3 id="FT_List">FT_List</h3>
<p>Defined in FT_TYPES_H (freetype/fttypes.h).</p>
<pre>
  <span class="keyword">typedef</span> <span class="keyword">struct</span> FT_ListRec_*  <b>FT_List</b>;
</pre>

<p>A handle to a list record (see <a href="ft2-list_processing.html#FT_ListRec">FT_ListRec</a>).</p>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_ListNode">FT_ListNode</h3>
<p>Defined in FT_TYPES_H (freetype/fttypes.h).</p>
<pre>
  <span class="keyword">typedef</span> <span class="keyword">struct</span> FT_ListNodeRec_*  <b>FT_ListNode</b>;
</pre>

<p>Many elements and objects in FreeType are listed through an <a href="ft2-list_processing.html#FT_List">FT_List</a> record (see <a href="ft2-list_processing.html#FT_ListRec">FT_ListRec</a>). As its name suggests, an FT_ListNode is a handle to a single list element.</p>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_ListRec">FT_ListRec</h3>
<p>Defined in FT_TYPES_H (freetype/fttypes.h).</p>
<pre>
  <span class="keyword">typedef</span> <span class="keyword">struct</span>  FT_ListRec_
  {
    <a href="ft2-list_processing.html#FT_ListNode">FT_ListNode</a>  head;
    <a href="ft2-list_processing.html#FT_ListNode">FT_ListNode</a>  tail;

  } <b>FT_ListRec</b>;
</pre>

<p>A structure used to hold a simple doubly-linked list. These are used in many parts of FreeType.</p>

<h4>fields</h4>
<table class="fields">
<tr><td class="val" id="head">head</td><td class="desc">
<p>The head (first element) of doubly-linked list.</p>
</td></tr>
<tr><td class="val" id="tail">tail</td><td class="desc">
<p>The tail (last element) of doubly-linked list.</p>
</td></tr>
</table>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_ListNodeRec">FT_ListNodeRec</h3>
<p>Defined in FT_TYPES_H (freetype/fttypes.h).</p>
<pre>
  <span class="keyword">typedef</span> <span class="keyword">struct</span>  FT_ListNodeRec_
  {
    <a href="ft2-list_processing.html#FT_ListNode">FT_ListNode</a>  prev;
    <a href="ft2-list_processing.html#FT_ListNode">FT_ListNode</a>  next;
    <span class="keyword">void</span>*        data;

  } <b>FT_ListNodeRec</b>;
</pre>

<p>A structure used to hold a single list element.</p>

<h4>fields</h4>
<table class="fields">
<tr><td class="val" id="prev">prev</td><td class="desc">
<p>The previous element in the list. NULL if first.</p>
</td></tr>
<tr><td class="val" id="next">next</td><td class="desc">
<p>The next element in the list. NULL if last.</p>
</td></tr>
<tr><td class="val" id="data">data</td><td class="desc">
<p>A typeless pointer to the listed object.</p>
</td></tr>
</table>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_List_Add">FT_List_Add</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
  FT_EXPORT( <span class="keyword">void</span> )
  <b>FT_List_Add</b>( <a href="ft2-list_processing.html#FT_List">FT_List</a>      list,
               <a href="ft2-list_processing.html#FT_ListNode">FT_ListNode</a>  node );
</pre>

<p>Append an element to the end of a list.</p>

<h4>inout</h4>
<table class="fields">
<tr><td class="val" id="list">list</td><td class="desc">
<p>A pointer to the parent list.</p>
</td></tr>
<tr><td class="val" id="node">node</td><td class="desc">
<p>The node to append.</p>
</td></tr>
</table>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_List_Insert">FT_List_Insert</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
  FT_EXPORT( <span class="keyword">void</span> )
  <b>FT_List_Insert</b>( <a href="ft2-list_processing.html#FT_List">FT_List</a>      list,
                  <a href="ft2-list_processing.html#FT_ListNode">FT_ListNode</a>  node );
</pre>

<p>Insert an element at the head of a list.</p>

<h4>inout</h4>
<table class="fields">
<tr><td class="val" id="list">list</td><td class="desc">
<p>A pointer to parent list.</p>
</td></tr>
<tr><td class="val" id="node">node</td><td class="desc">
<p>The node to insert.</p>
</td></tr>
</table>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_List_Find">FT_List_Find</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
  FT_EXPORT( <a href="ft2-list_processing.html#FT_ListNode">FT_ListNode</a> )
  <b>FT_List_Find</b>( <a href="ft2-list_processing.html#FT_List">FT_List</a>  list,
                <span class="keyword">void</span>*    data );
</pre>

<p>Find the list node for a given listed object.</p>

<h4>input</h4>
<table class="fields">
<tr><td class="val" id="list">list</td><td class="desc">
<p>A pointer to the parent list.</p>
</td></tr>
<tr><td class="val" id="data">data</td><td class="desc">
<p>The address of the listed object.</p>
</td></tr>
</table>

<h4>return</h4>
<p>List node. NULL if it wasn't found.</p>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_List_Remove">FT_List_Remove</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
  FT_EXPORT( <span class="keyword">void</span> )
  <b>FT_List_Remove</b>( <a href="ft2-list_processing.html#FT_List">FT_List</a>      list,
                  <a href="ft2-list_processing.html#FT_ListNode">FT_ListNode</a>  node );
</pre>

<p>Remove a node from a list. This function doesn't check whether the node is in the list!</p>

<h4>input</h4>
<table class="fields">
<tr><td class="val" id="node">node</td><td class="desc">
<p>The node to remove.</p>
</td></tr>
</table>

<h4>inout</h4>
<table class="fields">
<tr><td class="val" id="list">list</td><td class="desc">
<p>A pointer to the parent list.</p>
</td></tr>
</table>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_List_Up">FT_List_Up</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
  FT_EXPORT( <span class="keyword">void</span> )
  <b>FT_List_Up</b>( <a href="ft2-list_processing.html#FT_List">FT_List</a>      list,
              <a href="ft2-list_processing.html#FT_ListNode">FT_ListNode</a>  node );
</pre>

<p>Move a node to the head/top of a list. Used to maintain LRU lists.</p>

<h4>inout</h4>
<table class="fields">
<tr><td class="val" id="list">list</td><td class="desc">
<p>A pointer to the parent list.</p>
</td></tr>
<tr><td class="val" id="node">node</td><td class="desc">
<p>The node to move.</p>
</td></tr>
</table>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_List_Iterate">FT_List_Iterate</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
  FT_EXPORT( <a href="ft2-basic_types.html#FT_Error">FT_Error</a> )
  <b>FT_List_Iterate</b>( <a href="ft2-list_processing.html#FT_List">FT_List</a>           list,
                   <a href="ft2-list_processing.html#FT_List_Iterator">FT_List_Iterator</a>  iterator,
                   <span class="keyword">void</span>*             user );
</pre>

<p>Parse a list and calls a given iterator function on each element. Note that parsing is stopped as soon as one of the iterator calls returns a non-zero value.</p>

<h4>input</h4>
<table class="fields">
<tr><td class="val" id="list">list</td><td class="desc">
<p>A handle to the list.</p>
</td></tr>
<tr><td class="val" id="iterator">iterator</td><td class="desc">
<p>An iterator function, called on each node of the list.</p>
</td></tr>
<tr><td class="val" id="user">user</td><td class="desc">
<p>A user-supplied field that is passed as the second argument to the iterator.</p>
</td></tr>
</table>

<h4>return</h4>
<p>The result (a FreeType error code) of the last iterator call.</p>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_List_Iterator">FT_List_Iterator</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
  <span class="keyword">typedef</span> <a href="ft2-basic_types.html#FT_Error">FT_Error</a>
  (*<b>FT_List_Iterator</b>)( <a href="ft2-list_processing.html#FT_ListNode">FT_ListNode</a>  node,
                       <span class="keyword">void</span>*        user );
</pre>

<p>An FT_List iterator function that is called during a list parse by <a href="ft2-list_processing.html#FT_List_Iterate">FT_List_Iterate</a>.</p>

<h4>input</h4>
<table class="fields">
<tr><td class="val" id="node">node</td><td class="desc">
<p>The current iteration list node.</p>
</td></tr>
<tr><td class="val" id="user">user</td><td class="desc">
<p>A typeless pointer passed to <a href="ft2-list_processing.html#FT_List_Iterate">FT_List_Iterate</a>. Can be used to point to the iteration's state.</p>
</td></tr>
</table>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_List_Finalize">FT_List_Finalize</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
  FT_EXPORT( <span class="keyword">void</span> )
  <b>FT_List_Finalize</b>( <a href="ft2-list_processing.html#FT_List">FT_List</a>             list,
                    <a href="ft2-list_processing.html#FT_List_Destructor">FT_List_Destructor</a>  destroy,
                    <a href="ft2-system_interface.html#FT_Memory">FT_Memory</a>           memory,
                    <span class="keyword">void</span>*               user );
</pre>

<p>Destroy all elements in the list as well as the list itself.</p>

<h4>input</h4>
<table class="fields">
<tr><td class="val" id="list">list</td><td class="desc">
<p>A handle to the list.</p>
</td></tr>
<tr><td class="val" id="destroy">destroy</td><td class="desc">
<p>A list destructor that will be applied to each element of the list. Set this to NULL if not needed.</p>
</td></tr>
<tr><td class="val" id="memory">memory</td><td class="desc">
<p>The current memory object that handles deallocation.</p>
</td></tr>
<tr><td class="val" id="user">user</td><td class="desc">
<p>A user-supplied field that is passed as the last argument to the destructor.</p>
</td></tr>
</table>

<h4>note</h4>
<p>This function expects that all nodes added by <a href="ft2-list_processing.html#FT_List_Add">FT_List_Add</a> or <a href="ft2-list_processing.html#FT_List_Insert">FT_List_Insert</a> have been dynamically allocated.</p>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_List_Destructor">FT_List_Destructor</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
  <span class="keyword">typedef</span> <span class="keyword">void</span>
  (*<b>FT_List_Destructor</b>)( <a href="ft2-system_interface.html#FT_Memory">FT_Memory</a>  memory,
                         <span class="keyword">void</span>*      data,
                         <span class="keyword">void</span>*      user );
</pre>

<p>An <a href="ft2-list_processing.html#FT_List">FT_List</a> iterator function that is called during a list finalization by <a href="ft2-list_processing.html#FT_List_Finalize">FT_List_Finalize</a> to destroy all elements in a given list.</p>

<h4>input</h4>
<table class="fields">
<tr><td class="val" id="system">system</td><td class="desc">
<p>The current system object.</p>
</td></tr>
<tr><td class="val" id="data">data</td><td class="desc">
<p>The current object to destroy.</p>
</td></tr>
<tr><td class="val" id="user">user</td><td class="desc">
<p>A typeless pointer passed to <a href="ft2-list_processing.html#FT_List_Iterate">FT_List_Iterate</a>. It can be used to point to the iteration's state.</p>
</td></tr>
</table>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

</body>
</html>
@


1.4
log
@fastmerge
@
text
@d6 1
a6 1
<title>FreeType-2.3.12 API Reference</title>
d8 4
d14 28
a41 1
         background: #FFFFFF; }
a43 5
  h1 { text-align: center; }
  li { text-align: justify; }
  td { padding: 0 0.5em 0 0.5em; }
  td.left { padding: 0 0.5em 0 0.5em;
            text-align: left; }
d45 1
a45 3
  a:link { color: #0000EF; }
  a:visited { color: #51188E; }
  a:hover { color: #FF0000; }
d52 45
a96 1
  pre.colored { color: blue; }
a97 1
  ul.empty { list-style-type: none; }
d102 4
a105 8
<table align=center><tr><td><font size=-1>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-1>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
<center><h1>FreeType-2.3.12 API Reference</h1></center>

<center><h1>
List Processing
</h1></center>
d107 8
a114 7
<table align=center cellspacing=5 cellpadding=0 border=0>
<tr><td></td><td><a href="#FT_List">FT_List</a></td><td></td><td><a href="#FT_List_Add">FT_List_Add</a></td><td></td><td><a href="#FT_List_Iterate">FT_List_Iterate</a></td></tr>
<tr><td></td><td><a href="#FT_ListNode">FT_ListNode</a></td><td></td><td><a href="#FT_List_Insert">FT_List_Insert</a></td><td></td><td><a href="#FT_List_Destructor">FT_List_Destructor</a></td></tr>
<tr><td></td><td><a href="#FT_ListRec">FT_ListRec</a></td><td></td><td><a href="#FT_List_Remove">FT_List_Remove</a></td><td></td><td><a href="#FT_List_Finalize">FT_List_Finalize</a></td></tr>
<tr><td></td><td><a href="#FT_ListNodeRec">FT_ListNodeRec</a></td><td></td><td><a href="#FT_List_Up">FT_List_Up</a></td><td></td><td></td></tr>
<tr><td></td><td><a href="#FT_List_Find">FT_List_Find</a></td><td></td><td><a href="#FT_List_Iterator">FT_List_Iterator</a></td><td></td><td></td></tr>
</table><br><br>
a115 1
<table align=center width="87%"><tr><td>
a116 7
</td></tr></table><br>
<table align=center width="75%"><tr><td>
<h4><a name="FT_List">FT_List</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_TYPES_H (freetype/fttypes.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>
d118 4
d123 1
a124 2
</pre></table><br>
<table align=center width="87%"><tr><td>
a125 13
</td></tr></table><br>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>

<table align=center width="75%"><tr><td>
<h4><a name="FT_ListNode">FT_ListNode</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_TYPES_H (freetype/fttypes.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>
d127 7
d135 1
a136 2
</pre></table><br>
<table align=center width="87%"><tr><td>
a137 13
</td></tr></table><br>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>

<table align=center width="75%"><tr><td>
<h4><a name="FT_ListRec">FT_ListRec</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_TYPES_H (freetype/fttypes.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>
d139 7
d152 1
a153 2
</pre></table><br>
<table align=center width="87%"><tr><td>
d155 4
a158 5
</td></tr></table><br>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>fields</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>head</b></td><td>
d161 1
a161 1
<tr valign=top><td><b>tail</b></td><td>
a164 13
</td></tr></table>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>

<table align=center width="75%"><tr><td>
<h4><a name="FT_ListNodeRec">FT_ListNodeRec</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_TYPES_H (freetype/fttypes.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>
d166 7
d180 1
a181 2
</pre></table><br>
<table align=center width="87%"><tr><td>
d183 4
a186 5
</td></tr></table><br>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>fields</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>prev</b></td><td>
d189 1
a189 1
<tr valign=top><td><b>next</b></td><td>
d192 1
a192 1
<tr valign=top><td><b>data</b></td><td>
a195 17
</td></tr></table>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>

<table align=center width="75%"><tr><td>
<h4><a name="FT_List_Find">FT_List_Find</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>

  FT_EXPORT( <a href="ft2-list_processing.html#FT_ListNode">FT_ListNode</a> )
  <b>FT_List_Find</b>( <a href="ft2-list_processing.html#FT_List">FT_List</a>  list,
                <span class="keyword">void</span>*    data );
d197 2
a198 30
</pre></table><br>
<table align=center width="87%"><tr><td>
<p>Find the list node for a given listed object.</p>
</td></tr></table><br>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>input</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>list</b></td><td>
<p>A pointer to the parent list.</p>
</td></tr>
<tr valign=top><td><b>data</b></td><td>
<p>The address of the listed object.</p>
</td></tr>
</table>
</td></tr></table>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>return</b></em></td></tr><tr><td>
<p>List node. NULL if it wasn't found.</p>
</td></tr></table>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>

<table align=center width="75%"><tr><td>
<h4><a name="FT_List_Add">FT_List_Add</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>
d200 4
d207 1
a208 2
</pre></table><br>
<table align=center width="87%"><tr><td>
d210 4
a213 5
</td></tr></table><br>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>inout</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>list</b></td><td>
d216 1
a216 1
<tr valign=top><td><b>node</b></td><td>
a219 13
</td></tr></table>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>

<table align=center width="75%"><tr><td>
<h4><a name="FT_List_Insert">FT_List_Insert</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>
d221 7
d231 1
a232 2
</pre></table><br>
<table align=center width="87%"><tr><td>
d234 4
a237 5
</td></tr></table><br>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>inout</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>list</b></td><td>
d240 1
a240 1
<tr valign=top><td><b>node</b></td><td>
a243 13
</td></tr></table>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>

<table align=center width="75%"><tr><td>
<h4><a name="FT_List_Remove">FT_List_Remove</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>
d245 34
d282 1
a283 2
</pre></table><br>
<table align=center width="87%"><tr><td>
d285 4
a288 5
</td></tr></table><br>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>input</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>node</b></td><td>
d292 4
a295 5
</td></tr></table>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>inout</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>list</b></td><td>
a298 13
</td></tr></table>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>

<table align=center width="75%"><tr><td>
<h4><a name="FT_List_Up">FT_List_Up</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>
d300 7
d310 1
a311 2
</pre></table><br>
<table align=center width="87%"><tr><td>
d313 4
a316 5
</td></tr></table><br>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>inout</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>list</b></td><td>
d319 1
a319 1
<tr valign=top><td><b>node</b></td><td>
a322 13
</td></tr></table>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>

<table align=center width="75%"><tr><td>
<h4><a name="FT_List_Iterator">FT_List_Iterator</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>
d324 2
a325 31
  <span class="keyword">typedef</span> <a href="ft2-basic_types.html#FT_Error">FT_Error</a>
  (*<b>FT_List_Iterator</b>)( <a href="ft2-list_processing.html#FT_ListNode">FT_ListNode</a>  node,
                       <span class="keyword">void</span>*        user );

</pre></table><br>
<table align=center width="87%"><tr><td>
<p>An FT_List iterator function which is called during a list parse by <a href="ft2-list_processing.html#FT_List_Iterate">FT_List_Iterate</a>.</p>
</td></tr></table><br>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>input</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>node</b></td><td>
<p>The current iteration list node.</p>
</td></tr>
<tr valign=top><td><b>user</b></td><td>
<p>A typeless pointer passed to <a href="ft2-list_processing.html#FT_List_Iterate">FT_List_Iterate</a>. Can be used to point to the iteration's state.</p>
</td></tr>
</table>
</td></tr></table>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>

<table align=center width="75%"><tr><td>
<h4><a name="FT_List_Iterate">FT_List_Iterate</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>
d327 4
d335 1
a336 2
</pre></table><br>
<table align=center width="87%"><tr><td>
d338 4
a341 5
</td></tr></table><br>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>input</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>list</b></td><td>
d344 1
a344 1
<tr valign=top><td><b>iterator</b></td><td>
d347 2
a348 2
<tr valign=top><td><b>user</b></td><td>
<p>A user-supplied field which is passed as the second argument to the iterator.</p>
d351 2
a352 2
</td></tr></table>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>return</b></em></td></tr><tr><td>
a353 13
</td></tr></table>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>

<table align=center width="75%"><tr><td>
<h4><a name="FT_List_Destructor">FT_List_Destructor</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>
d355 13
a367 4
  <span class="keyword">typedef</span> <span class="keyword">void</span>
  (*<b>FT_List_Destructor</b>)( <a href="ft2-system_interface.html#FT_Memory">FT_Memory</a>  memory,
                         <span class="keyword">void</span>*      data,
                         <span class="keyword">void</span>*      user );
d369 4
a372 9
</pre></table><br>
<table align=center width="87%"><tr><td>
<p>An <a href="ft2-list_processing.html#FT_List">FT_List</a> iterator function which is called during a list finalization by <a href="ft2-list_processing.html#FT_List_Finalize">FT_List_Finalize</a> to destroy all elements in a given list.</p>
</td></tr></table><br>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>input</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>system</b></td><td>
<p>The current system object.</p>
d374 2
a375 5
<tr valign=top><td><b>data</b></td><td>
<p>The current object to destroy.</p>
</td></tr>
<tr valign=top><td><b>user</b></td><td>
<p>A typeless pointer passed to <a href="ft2-list_processing.html#FT_List_Iterate">FT_List_Iterate</a>. It can be used to point to the iteration's state.</p>
a377 13
</td></tr></table>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>

<table align=center width="75%"><tr><td>
<h4><a name="FT_List_Finalize">FT_List_Finalize</a></h4>
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
<table align=center width="87%"><tr bgcolor="#D6E8FF"><td><pre>
d379 7
d391 1
a392 2
</pre></table><br>
<table align=center width="87%"><tr><td>
d394 4
a397 5
</td></tr></table><br>
<table align=center width="87%" cellpadding=5><tr bgcolor="#EEEEFF"><td><em><b>input</b></em></td></tr><tr><td>
<p></p>
<table cellpadding=3 border=0>
<tr valign=top><td><b>list</b></td><td>
d400 33
a432 2
<tr valign=top><td><b>destroy</b></td><td>
<p>A list destructor that will be applied to each element of the list.</p>
d434 2
a435 2
<tr valign=top><td><b>memory</b></td><td>
<p>The current memory object which handles deallocation.</p>
d437 2
a438 2
<tr valign=top><td><b>user</b></td><td>
<p>A user-supplied field which is passed as the last argument to the destructor.</p>
d441 3
a443 6
</td></tr></table>
</td></tr></table>
<hr width="75%">
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
@


1.3
log
@Merge freetype 2.3.6
@
text
@d6 1
a6 1
<title>FreeType-2.3.6 API Reference</title>
d34 5
a38 1
<center><h1>FreeType-2.3.6 API Reference</h1></center>
d180 1
a180 1
<p>Finds the list node for a given listed object.</p>
d215 1
a215 1
<p>Appends an element to the end of a list.</p>
d247 1
a247 1
<p>Inserts an element at the head of a list.</p>
d279 1
a279 1
<p>Removes a node from a list. This function doesn't check whether the node is in the list!</p>
d316 1
a316 1
<p>Moves a node to the head/top of a list. Used to maintain LRU lists.</p>
d381 1
a381 1
<p>Parses a list and calls a given iterator function on each element. Note that parsing is stopped as soon as one of the iterator calls returns a non-zero value.</p>
d457 1
a457 1
<p>Destroys all elements in the list as well as the list itself.</p>
@


1.2
log
@Merge freetype 2.3.5, all conflicts automatically resolved
@
text
@d6 1
a6 1
<title>FreeType-2.3.5 API Reference</title>
d15 3
a17 1
  td { padding: 0 0.5em 0 0.5em }
d34 1
a34 1
<center><h1>FreeType-2.3.5 API Reference</h1></center>
d53 3
d66 1
a66 2
<table align=center width="75%"><tr><td><font size=-2>[<a href="
ft2-index.html">Index</a>]</font></td>
d68 1
a68 2
<td><font size=-2>[<a href="
ft2-toc.html">TOC</a>]</font></td></tr></table>
d72 3
d85 1
a85 2
<table align=center width="75%"><tr><td><font size=-2>[<a href="
ft2-index.html">Index</a>]</font></td>
d87 1
a87 2
<td><font size=-2>[<a href="
ft2-toc.html">TOC</a>]</font></td></tr></table>
d91 3
d108 1
d120 1
a120 2
<table align=center width="75%"><tr><td><font size=-2>[<a href="
ft2-index.html">Index</a>]</font></td>
d122 1
a122 2
<td><font size=-2>[<a href="
ft2-toc.html">TOC</a>]</font></td></tr></table>
d126 3
d144 1
d159 1
a159 2
<table align=center width="75%"><tr><td><font size=-2>[<a href="
ft2-index.html">Index</a>]</font></td>
d161 1
a161 2
<td><font size=-2>[<a href="
ft2-toc.html">TOC</a>]</font></td></tr></table>
d165 3
d179 1
d194 1
a194 2
<table align=center width="75%"><tr><td><font size=-2>[<a href="
ft2-index.html">Index</a>]</font></td>
d196 1
a196 2
<td><font size=-2>[<a href="
ft2-toc.html">TOC</a>]</font></td></tr></table>
d200 3
d214 1
d226 1
a226 2
<table align=center width="75%"><tr><td><font size=-2>[<a href="
ft2-index.html">Index</a>]</font></td>
d228 1
a228 2
<td><font size=-2>[<a href="
ft2-toc.html">TOC</a>]</font></td></tr></table>
d232 3
d246 1
d258 1
a258 2
<table align=center width="75%"><tr><td><font size=-2>[<a href="
ft2-index.html">Index</a>]</font></td>
d260 1
a260 2
<td><font size=-2>[<a href="
ft2-toc.html">TOC</a>]</font></td></tr></table>
d264 3
d278 1
d286 1
d295 1
a295 2
<table align=center width="75%"><tr><td><font size=-2>[<a href="
ft2-index.html">Index</a>]</font></td>
d297 1
a297 2
<td><font size=-2>[<a href="
ft2-toc.html">TOC</a>]</font></td></tr></table>
d301 3
d315 1
d327 1
a327 2
<table align=center width="75%"><tr><td><font size=-2>[<a href="
ft2-index.html">Index</a>]</font></td>
d329 1
a329 2
<td><font size=-2>[<a href="
ft2-toc.html">TOC</a>]</font></td></tr></table>
d333 3
d347 1
d359 1
a359 2
<table align=center width="75%"><tr><td><font size=-2>[<a href="
ft2-index.html">Index</a>]</font></td>
d361 1
a361 2
<td><font size=-2>[<a href="
ft2-toc.html">TOC</a>]</font></td></tr></table>
d365 3
d380 1
d398 1
a398 2
<table align=center width="75%"><tr><td><font size=-2>[<a href="
ft2-index.html">Index</a>]</font></td>
d400 1
a400 2
<td><font size=-2>[<a href="
ft2-toc.html">TOC</a>]</font></td></tr></table>
d404 3
d419 1
d434 1
a434 2
<table align=center width="75%"><tr><td><font size=-2>[<a href="
ft2-index.html">Index</a>]</font></td>
d436 1
a436 2
<td><font size=-2>[<a href="
ft2-toc.html">TOC</a>]</font></td></tr></table>
d440 3
d456 1
d474 1
a474 2
<table align=center width="75%"><tr><td><font size=-2>[<a href="
ft2-index.html">Index</a>]</font></td>
d476 1
a476 2
<td><font size=-2>[<a href="
ft2-toc.html">TOC</a>]</font></td></tr></table>
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
<title>FreeType-2.2.1 API Reference</title>
d32 1
a32 1
<center><h1>FreeType-2.2.1 API Reference</h1></center>
d361 1
a361 1
<p>An interator function, called on each node of the list.</p>
@


1.1.1.1
log
@Import freetype-2.3.5 into the X11 tree. This is a recommended security
update for everyone.
@
text
@d6 1
a6 1
<title>FreeType-2.3.5 API Reference</title>
d32 1
a32 1
<center><h1>FreeType-2.3.5 API Reference</h1></center>
d361 1
a361 1
<p>An iterator function, called on each node of the list.</p>
@


1.1.1.2
log
@SECURITY: Import freetype 2.3.6. From the release notes:

    - A  bunch of  potential security  problems have  been found.  All
      users should update.
@
text
@d6 1
a6 1
<title>FreeType-2.3.6 API Reference</title>
d15 1
a15 3
  td { padding: 0 0.5em 0 0.5em; }
  td.left { padding: 0 0.5em 0 0.5em;
            text-align: left; }
d32 1
a32 1
<center><h1>FreeType-2.3.6 API Reference</h1></center>
a50 3
<table align=center width="87%"><tr><td>
Defined in FT_TYPES_H (freetype/fttypes.h).
</td></tr></table><br>
d61 2
a62 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d64 2
a65 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a68 3
<table align=center width="87%"><tr><td>
Defined in FT_TYPES_H (freetype/fttypes.h).
</td></tr></table><br>
d79 2
a80 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d82 2
a83 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a86 3
<table align=center width="87%"><tr><td>
Defined in FT_TYPES_H (freetype/fttypes.h).
</td></tr></table><br>
a100 1
<p></p>
d112 2
a113 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d115 2
a116 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a119 3
<table align=center width="87%"><tr><td>
Defined in FT_TYPES_H (freetype/fttypes.h).
</td></tr></table><br>
a134 1
<p></p>
d149 2
a150 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d152 2
a153 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a156 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
a167 1
<p></p>
d182 2
a183 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d185 2
a186 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a189 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
a200 1
<p></p>
d212 2
a213 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d215 2
a216 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a219 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
a230 1
<p></p>
d242 2
a243 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d245 2
a246 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a249 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
a260 1
<p></p>
a267 1
<p></p>
d276 2
a277 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d279 2
a280 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a283 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
a294 1
<p></p>
d306 2
a307 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d309 2
a310 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a313 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
a324 1
<p></p>
d336 2
a337 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d339 2
a340 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a343 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
a355 1
<p></p>
d373 2
a374 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d376 2
a377 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a380 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
a392 1
<p></p>
d407 2
a408 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d410 2
a411 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a414 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
a427 1
<p></p>
d445 2
a446 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d448 2
a449 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
@


1.1.115.1
log
@Import Freetype 2.2.1 with a bunch of security fixes
@
text
@@


1.1.115.2
log
@we need newer freetype for advance calculation
@
text
@d6 1
a6 1
<title>FreeType-2.3.12 API Reference</title>
d15 1
a15 3
  td { padding: 0 0.5em 0 0.5em; }
  td.left { padding: 0 0.5em 0 0.5em;
            text-align: left; }
d32 1
a32 5

<table align=center><tr><td><font size=-1>[<a href="ft2-index.html">Index</a>]</font></td>
<td width="100%"></td>
<td><font size=-1>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
<center><h1>FreeType-2.3.12 API Reference</h1></center>
a50 3
<table align=center width="87%"><tr><td>
Defined in FT_TYPES_H (freetype/fttypes.h).
</td></tr></table><br>
d61 2
a62 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d64 2
a65 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a68 3
<table align=center width="87%"><tr><td>
Defined in FT_TYPES_H (freetype/fttypes.h).
</td></tr></table><br>
d79 2
a80 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d82 2
a83 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a86 3
<table align=center width="87%"><tr><td>
Defined in FT_TYPES_H (freetype/fttypes.h).
</td></tr></table><br>
a100 1
<p></p>
d112 2
a113 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d115 2
a116 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a119 3
<table align=center width="87%"><tr><td>
Defined in FT_TYPES_H (freetype/fttypes.h).
</td></tr></table><br>
a134 1
<p></p>
d149 2
a150 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d152 2
a153 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a156 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
d165 1
a165 1
<p>Find the list node for a given listed object.</p>
a167 1
<p></p>
d182 2
a183 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d185 2
a186 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a189 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
d198 1
a198 1
<p>Append an element to the end of a list.</p>
a200 1
<p></p>
d212 2
a213 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d215 2
a216 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a219 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
d228 1
a228 1
<p>Insert an element at the head of a list.</p>
a230 1
<p></p>
d242 2
a243 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d245 2
a246 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a249 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
d258 1
a258 1
<p>Remove a node from a list. This function doesn't check whether the node is in the list!</p>
a260 1
<p></p>
a267 1
<p></p>
d276 2
a277 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d279 2
a280 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a283 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
d292 1
a292 1
<p>Move a node to the head/top of a list. Used to maintain LRU lists.</p>
a294 1
<p></p>
d306 2
a307 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d309 2
a310 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a313 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
a324 1
<p></p>
d336 2
a337 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d339 2
a340 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a343 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
d353 1
a353 1
<p>Parse a list and calls a given iterator function on each element. Note that parsing is stopped as soon as one of the iterator calls returns a non-zero value.</p>
a355 1
<p></p>
d361 1
a361 1
<p>An iterator function, called on each node of the list.</p>
d373 2
a374 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d376 2
a377 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a380 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
a392 1
<p></p>
d407 2
a408 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d410 2
a411 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
a414 3
<table align=center width="87%"><tr><td>
Defined in FT_LIST_H (freetype/ftlist.h).
</td></tr></table><br>
d425 1
a425 1
<p>Destroy all elements in the list as well as the list itself.</p>
a427 1
<p></p>
d445 2
a446 1
<table align=center width="75%"><tr><td><font size=-2>[<a href="ft2-index.html">Index</a>]</font></td>
d448 2
a449 1
<td><font size=-2>[<a href="ft2-toc.html">TOC</a>]</font></td></tr></table>
@


1.1.115.3
log
@let’s see whether we can’t update freetype2 as well…
@
text
@d6 1
a6 1
<title>FreeType-2.7.1 API Reference</title>
a7 4
  a:link { color: #0000EF; }
  a:visited { color: #51188E; }
  a:hover { color: #FF0000; }

d10 1
a10 24
         background: #FFFFFF;
         width: 87%;
         margin: auto; }

  div.section { width: 75%;
                margin: auto; }
  div.section hr { margin: 4ex 0 1ex 0; }
  div.section h4 { background-color: #EEEEFF;
                   font-size: medium;
                   font-style: oblique;
                   font-weight: bold;
                   margin: 3ex 0 1.5ex 9%;
                   padding: 0.3ex 0 0.3ex 1%; }
  div.section p { margin: 1.5ex 0 1.5ex 10%; }
  div.section pre { margin: 3ex 0 3ex 9%;
                    background-color: #D6E8FF;
                    padding: 2ex 0 2ex 1%; }
  div.section table.fields { width: 90%;
                             margin: 1.5ex 0 1.5ex 10%; }
  div.section table.toc { width: 95%;
                          margin: 1.5ex 0 1.5ex 5%; }
  div.timestamp { text-align: center;
                  font-size: 69%;
                  margin: 1.5ex 0 1.5ex 0; }
d12 1
d14 4
a17 2
  h3 { font-size: medium;
       margin: 4ex 0 1.5ex 0; }
d19 3
a21 3
  p { text-align: justify; }

  pre.colored { color: blue; }
d28 1
a28 45
  table.fields td.val { font-weight: bold;
                        text-align: right;
                        width: 30%;
                        vertical-align: baseline;
                        padding: 1ex 1em 1ex 0; }
  table.fields td.desc { vertical-align: baseline;
                         padding: 1ex 0 1ex 1em; }
  table.fields td.desc p:first-child { margin: 0; }
  table.fields td.desc p { margin: 1.5ex 0 0 0; }
  table.index { margin: 6ex auto 6ex auto;
                border: 0;
                border-collapse: separate;
                border-spacing: 1em 0.3ex; }
  table.index tr { padding: 0; }
  table.index td { padding: 0; }
  table.index-toc-link { width: 100%;
                         border: 0;
                         border-spacing: 0;
                         margin: 1ex 0 1ex 0; }
  table.index-toc-link td.left { padding: 0 0.5em 0 0.5em;
                                 font-size: 83%;
                                 text-align: left; }
  table.index-toc-link td.middle { padding: 0 0.5em 0 0.5em;
                                   font-size: 83%;
                                   text-align: center; }
  table.index-toc-link td.right { padding: 0 0.5em 0 0.5em;
                                  font-size: 83%;
                                  text-align: right; }
  table.synopsis { margin: 6ex auto 6ex auto;
                   border: 0;
                   border-collapse: separate;
                   border-spacing: 2em 0.6ex; }
  table.synopsis tr { padding: 0; }
  table.synopsis td { padding: 0; }
  table.toc td.link { width: 30%;
                      text-align: right;
                      vertical-align: baseline;
                      padding: 1ex 1em 1ex 0; }
  table.toc td.desc { vertical-align: baseline;
                      padding: 1ex 0 1ex 1em;
                      text-align: left; }
  table.toc td.desc p:first-child { margin: 0;
                                    text-align: left; }
  table.toc td.desc p { margin: 1.5ex 0 0 0;
                        text-align: left; }
d30 1
d35 8
a42 4
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table>
<h1>FreeType-2.7.1 API Reference</h1>

<h1 id="list_processing">List Processing</h1>
d44 7
a50 8
<table class="synopsis">
<tr><td><a href="#FT_List">FT_List</a></td><td><a href="#FT_List_Add">FT_List_Add</a></td><td><a href="#FT_List_Iterate">FT_List_Iterate</a></td></tr>
<tr><td><a href="#FT_ListNode">FT_ListNode</a></td><td><a href="#FT_List_Insert">FT_List_Insert</a></td><td><a href="#FT_List_Iterator">FT_List_Iterator</a></td></tr>
<tr><td><a href="#FT_ListRec">FT_ListRec</a></td><td><a href="#FT_List_Find">FT_List_Find</a></td><td><a href="#FT_List_Finalize">FT_List_Finalize</a></td></tr>
<tr><td><a href="#FT_ListNodeRec">FT_ListNodeRec</a></td><td><a href="#FT_List_Remove">FT_List_Remove</a></td><td><a href="#FT_List_Destructor">FT_List_Destructor</a></td></tr>
<tr><td>&nbsp;</td><td><a href="#FT_List_Up">FT_List_Up</a></td><td></td></tr>
</table>

d52 1
d54 7
a61 4
<div class="section">
<h3 id="FT_List">FT_List</h3>
<p>Defined in FT_TYPES_H (freetype/fttypes.h).</p>
<pre>
a62 1
</pre>
d64 2
d67 13
a80 7
<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_ListNode">FT_ListNode</h3>
<p>Defined in FT_TYPES_H (freetype/fttypes.h).</p>
<pre>
a81 1
</pre>
d83 2
d86 13
a99 7
<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_ListRec">FT_ListRec</h3>
<p>Defined in FT_TYPES_H (freetype/fttypes.h).</p>
<pre>
a105 1
</pre>
d107 2
d110 5
a114 4

<h4>fields</h4>
<table class="fields">
<tr><td class="val" id="head">head</td><td class="desc">
d117 1
a117 1
<tr><td class="val" id="tail">tail</td><td class="desc">
d121 13
a134 7
<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_ListNodeRec">FT_ListNodeRec</h3>
<p>Defined in FT_TYPES_H (freetype/fttypes.h).</p>
<pre>
a141 1
</pre>
d143 2
d146 5
a150 4

<h4>fields</h4>
<table class="fields">
<tr><td class="val" id="prev">prev</td><td class="desc">
d153 1
a153 1
<tr><td class="val" id="next">next</td><td class="desc">
d156 1
a156 1
<tr><td class="val" id="data">data</td><td class="desc">
d160 17
d178 30
a207 2
<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>
a208 4
<div class="section">
<h3 id="FT_List_Add">FT_List_Add</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
a211 1
</pre>
d213 2
d216 5
a220 4

<h4>inout</h4>
<table class="fields">
<tr><td class="val" id="list">list</td><td class="desc">
d223 1
a223 1
<tr><td class="val" id="node">node</td><td class="desc">
d227 13
a240 7
<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_List_Insert">FT_List_Insert</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
a243 1
</pre>
d245 2
d248 5
a252 4

<h4>inout</h4>
<table class="fields">
<tr><td class="val" id="list">list</td><td class="desc">
d255 1
a255 1
<tr><td class="val" id="node">node</td><td class="desc">
d259 13
a272 34
<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_List_Find">FT_List_Find</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
  FT_EXPORT( <a href="ft2-list_processing.html#FT_ListNode">FT_ListNode</a> )
  <b>FT_List_Find</b>( <a href="ft2-list_processing.html#FT_List">FT_List</a>  list,
                <span class="keyword">void</span>*    data );
</pre>

<p>Find the list node for a given listed object.</p>

<h4>input</h4>
<table class="fields">
<tr><td class="val" id="list">list</td><td class="desc">
<p>A pointer to the parent list.</p>
</td></tr>
<tr><td class="val" id="data">data</td><td class="desc">
<p>The address of the listed object.</p>
</td></tr>
</table>

<h4>return</h4>
<p>List node. NULL if it wasn't found.</p>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_List_Remove">FT_List_Remove</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
a275 1
</pre>
d277 2
d280 5
a284 4

<h4>input</h4>
<table class="fields">
<tr><td class="val" id="node">node</td><td class="desc">
d288 5
a292 4

<h4>inout</h4>
<table class="fields">
<tr><td class="val" id="list">list</td><td class="desc">
d296 13
a309 7
<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_List_Up">FT_List_Up</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
a312 1
</pre>
d314 2
d317 5
a321 4

<h4>inout</h4>
<table class="fields">
<tr><td class="val" id="list">list</td><td class="desc">
d324 1
a324 1
<tr><td class="val" id="node">node</td><td class="desc">
d328 13
d342 31
a372 2
<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>
a373 4
<div class="section">
<h3 id="FT_List_Iterate">FT_List_Iterate</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
a377 1
</pre>
d379 2
d382 5
a386 4

<h4>input</h4>
<table class="fields">
<tr><td class="val" id="list">list</td><td class="desc">
d389 1
a389 1
<tr><td class="val" id="iterator">iterator</td><td class="desc">
d392 2
a393 2
<tr><td class="val" id="user">user</td><td class="desc">
<p>A user-supplied field that is passed as the second argument to the iterator.</p>
d396 2
a397 2

<h4>return</h4>
d399 13
d413 4
a416 2
<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>
d418 12
a429 15
<div class="section">
<h3 id="FT_List_Iterator">FT_List_Iterator</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
  <span class="keyword">typedef</span> <a href="ft2-basic_types.html#FT_Error">FT_Error</a>
  (*<b>FT_List_Iterator</b>)( <a href="ft2-list_processing.html#FT_ListNode">FT_ListNode</a>  node,
                       <span class="keyword">void</span>*        user );
</pre>

<p>An FT_List iterator function that is called during a list parse by <a href="ft2-list_processing.html#FT_List_Iterate">FT_List_Iterate</a>.</p>

<h4>input</h4>
<table class="fields">
<tr><td class="val" id="node">node</td><td class="desc">
<p>The current iteration list node.</p>
d431 2
a432 2
<tr><td class="val" id="user">user</td><td class="desc">
<p>A typeless pointer passed to <a href="ft2-list_processing.html#FT_List_Iterate">FT_List_Iterate</a>. Can be used to point to the iteration's state.</p>
d435 13
a448 7
<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_List_Finalize">FT_List_Finalize</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
a453 1
</pre>
d455 2
d458 5
a462 4

<h4>input</h4>
<table class="fields">
<tr><td class="val" id="list">list</td><td class="desc">
d465 2
a466 33
<tr><td class="val" id="destroy">destroy</td><td class="desc">
<p>A list destructor that will be applied to each element of the list. Set this to NULL if not needed.</p>
</td></tr>
<tr><td class="val" id="memory">memory</td><td class="desc">
<p>The current memory object that handles deallocation.</p>
</td></tr>
<tr><td class="val" id="user">user</td><td class="desc">
<p>A user-supplied field that is passed as the last argument to the destructor.</p>
</td></tr>
</table>

<h4>note</h4>
<p>This function expects that all nodes added by <a href="ft2-list_processing.html#FT_List_Add">FT_List_Add</a> or <a href="ft2-list_processing.html#FT_List_Insert">FT_List_Insert</a> have been dynamically allocated.</p>

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>

<div class="section">
<h3 id="FT_List_Destructor">FT_List_Destructor</h3>
<p>Defined in FT_LIST_H (freetype/ftlist.h).</p>
<pre>
  <span class="keyword">typedef</span> <span class="keyword">void</span>
  (*<b>FT_List_Destructor</b>)( <a href="ft2-system_interface.html#FT_Memory">FT_Memory</a>  memory,
                         <span class="keyword">void</span>*      data,
                         <span class="keyword">void</span>*      user );
</pre>

<p>An <a href="ft2-list_processing.html#FT_List">FT_List</a> iterator function that is called during a list finalization by <a href="ft2-list_processing.html#FT_List_Finalize">FT_List_Finalize</a> to destroy all elements in a given list.</p>

<h4>input</h4>
<table class="fields">
<tr><td class="val" id="system">system</td><td class="desc">
<p>The current system object.</p>
d468 2
a469 2
<tr><td class="val" id="data">data</td><td class="desc">
<p>The current object to destroy.</p>
d471 2
a472 2
<tr><td class="val" id="user">user</td><td class="desc">
<p>A typeless pointer passed to <a href="ft2-list_processing.html#FT_List_Iterate">FT_List_Iterate</a>. It can be used to point to the iteration's state.</p>
d475 6
a480 3

<hr>
<table class="index-toc-link"><tr><td class="left">[<a href="ft2-index.html">Index</a>]</td><td class="middle">[<a href="#">Top</a>]</td><td class="right">[<a href="ft2-toc.html">TOC</a>]</td></tr></table></div>
@


