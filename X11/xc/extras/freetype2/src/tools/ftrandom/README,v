head	1.2;
access;
symbols
	freetype-2_7_1:1.1.115.2
	freetype-2_3_12:1.1.115.1
	freetype-2_3_6:1.1.1.1
	MIRBSD_10_BASE:1.1.1.1
	freetype-2_3_5:1.1.1.1
	freetype:1.1.115;
locks; strict;
comment	@# @;


1.2
date	2017.04.15.19.22.14;	author tg;	state Exp;
branches;
next	1.1;
commitid	10058F2723111C7BEE2;

1.1
date	2008.02.26.19.53.40;	author bsiegert;	state Exp;
branches
	1.1.1.1
	1.1.115.1;
next	;
commitid	10047C46DB5081DCD79;

1.1.1.1
date	2008.02.26.19.53.40;	author bsiegert;	state Exp;
branches;
next	;
commitid	10047C46DB5081DCD79;

1.1.115.1
date	2013.08.06.19.12.22;	author tg;	state Exp;
branches;
next	1.1.115.2;
commitid	10052014A9975CEFD1D;

1.1.115.2
date	2017.04.15.15.42.13;	author tg;	state Exp;
branches;
next	;
commitid	10058F23F4858079E1C;


desc
@@


1.2
log
@first cut at a quickmerge
@
text
@ftrandom
========

This program expects a set of directories containing good fonts, and a set
of extensions of fonts to be tested.  It will randomly pick a font, copy it,
introduce an error and then test it.

The FreeType tests are quite basic; for each erroneous font ftrandom

  . forks off a new tester,
  . initializes the library,
  . opens each font in the file,
  . loads each glyph,
  . optionally reviews the contours of the glyph,
  . optionally rasterizes the glyph, and
  . closes the face.

If a tester takes longer than 20 seconds, ftrandom saves the erroneous font
and continues.  If the tester exits normally or with an error, then the
superstructure removes the test font and continues.


Command line options
--------------------

  --all                    Test every font in the directory(ies) no matter
                           what its extension.
  --check-outlines         Call `FT_Outline_Decompose' on each glyph.
  --dir <dir>              Append <dir> to the list of directories to search
                           for good fonts.  No recursive search.
  --error-count <cnt>      Introduce <cnt> single-byte errors into the
                           erroneous fonts (default: 1).
  --error-fraction <frac>  Multiply the file size of the font by <frac> and
                           introduce that many errors into the erroneous
                           font file.  <frac> should be in the range [0;1]
                           (default: 0.0).
  --ext <ext>              Add <ext> to the set of font types tested.
  --help                   Print out this list of options.
  --nohints                Specify FT_LOAD_NO_HINTING when loading glyphs.
  --rasterize              Call `FT_Render_Glyph' as well as loading it.
  --result <dir>           This is the directory in which test files are
                           placed.
  --test <file>            Run a single test on a pre-generated testcase.
                           This is done in the current process so it can be
                           debugged more easily.

The default font extensions tested by ftrandom are

  .ttf .otf .ttc .cid .pfb .pfa .bdf .pcf .pfr .fon .otb .cff

The default font directory is controlled by the macro `GOOD_FONTS_DIR' in
the source code (and can be thus specified during compilation); its default
value is

  /usr/local/share/fonts

The default result directory is `results' (in the current directory).


Compilation
-----------

Two possible solutions.

. Run ftrandom within a debugging tool like `valgrind' to catch various
  memory issues.

. Compile FreeType with sanitizer flags as provided by gcc or clang, for
  example, then link it with ftrandom.
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
--------
d6 1
a6 1
introduce and error and then test it.
d8 1
a8 1
The FreeType tests are quite basic:
d10 7
a16 13
  For each erroneous font it
    forks off a new tester;
    initializes the library;
    opens each font in the file;
    loads each glyph;
      (optionally reviewing the contours of the glyph)
      (optionally rasterizing)
    closes the face.

If the tester exits with a signal, or takes longer than 20 seconds then
ftrandom saves the erroneous font and continues.  If the tester exits
normally or with an error, then the superstructure removes the test font and
continues.
d18 7
a24 1
Arguments are:
d27 2
a28 3
                           what its extension (some CID-keyed fonts have no
                           extension).
  --check-outlines         Call FT_Outline_Decompose on each glyph.
d30 1
a30 1
                           for good fonts.
d32 1
a32 1
                           erroneous fonts.
d35 3
a37 5
                           font file.
  --ext <ext>              Add <ext> to the set of font types tested.  Known
                           extensions are `ttf', `otf', `ttc', `cid', `pfb',
                           `pfa', `bdf', `pcf', `pfr', `fon', `otb', and
                           `cff'.
d40 1
a40 1
  --rasterize              Call FT_Render_Glyph as well as loading it.
d43 27
a69 3
  --test <file>            Run a single test on a pre-generated testcase. 
                           Done in the current process so it can be debugged
                           more easily.
@


1.1.115.1
log
@we need newer freetype for advance calculation
@
text
@@


1.1.115.2
log
@let’s see whether we can’t update freetype2 as well…
@
text
@d2 1
a2 1
========
d6 1
a6 1
introduce an error and then test it.
d8 1
a8 1
The FreeType tests are quite basic; for each erroneous font ftrandom
d10 13
a22 7
  . forks off a new tester,
  . initializes the library,
  . opens each font in the file,
  . loads each glyph,
  . optionally reviews the contours of the glyph,
  . optionally rasterizes the glyph, and
  . closes the face.
d24 1
a24 7
If a tester takes longer than 20 seconds, ftrandom saves the erroneous font
and continues.  If the tester exits normally or with an error, then the
superstructure removes the test font and continues.


Command line options
--------------------
d27 3
a29 2
                           what its extension.
  --check-outlines         Call `FT_Outline_Decompose' on each glyph.
d31 1
a31 1
                           for good fonts.  No recursive search.
d33 1
a33 1
                           erroneous fonts (default: 1).
d36 5
a40 3
                           font file.  <frac> should be in the range [0;1]
                           (default: 0.0).
  --ext <ext>              Add <ext> to the set of font types tested.
d43 1
a43 1
  --rasterize              Call `FT_Render_Glyph' as well as loading it.
d46 3
a48 27
  --test <file>            Run a single test on a pre-generated testcase.
                           This is done in the current process so it can be
                           debugged more easily.

The default font extensions tested by ftrandom are

  .ttf .otf .ttc .cid .pfb .pfa .bdf .pcf .pfr .fon .otb .cff

The default font directory is controlled by the macro `GOOD_FONTS_DIR' in
the source code (and can be thus specified during compilation); its default
value is

  /usr/local/share/fonts

The default result directory is `results' (in the current directory).


Compilation
-----------

Two possible solutions.

. Run ftrandom within a debugging tool like `valgrind' to catch various
  memory issues.

. Compile FreeType with sanitizer flags as provided by gcc or clang, for
  example, then link it with ftrandom.
@


1.1.1.1
log
@Import freetype-2.3.5 into the X11 tree. This is a recommended security
update for everyone.
@
text
@@
