head	1.4;
access;
symbols
	freetype-2_7_1:1.1.115.4
	freetype-2_3_12:1.1.115.3
	freetype-2_3_6:1.1.1.1
	MIRBSD_10_BASE:1.3
	freetype-2_3_5:1.1.1.1
	freetype-2_2_1:1.1.115.2
	freetype-2_1_8:1.1.115.1
	freetype:1.1.115
	MIRBSD_9_BASE:1.1.103.1
	MIRBSD_8:1.1.103.1.0.2
	MIRBSD_8_BASE:1.1.103.1
	xf-4_5_0:1.1.103.1
	xwindow:1.1.103;
locks; strict;
comment	@ * @;


1.4
date	2017.04.15.19.21.00;	author tg;	state Exp;
branches;
next	1.3;
commitid	10058F2723111C7BEE2;

1.3
date	2008.02.26.20.04.42;	author bsiegert;	state Exp;
branches;
next	1.2;
commitid	10047C470A72A1E13CE;

1.2
date	2006.06.29.20.24.25;	author tg;	state Exp;
branches;
next	1.1;
commitid	10044A435A50E5F7C11;

1.1
date	2005.03.18.10.43.01;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.103.1
	1.1.115.1;
next	;

1.1.1.1
date	2008.02.26.19.51.48;	author bsiegert;	state Exp;
branches;
next	;
commitid	10047C46DB5081DCD79;

1.1.103.1
date	2005.03.18.10.43.01;	author tg;	state Exp;
branches;
next	;

1.1.115.1
date	2006.06.29.18.34.36;	author tg;	state Exp;
branches;
next	1.1.115.2;
commitid	10044A41D276963C97B;

1.1.115.2
date	2006.06.29.18.38.43;	author tg;	state Exp;
branches;
next	1.1.115.3;
commitid	10044A41DBD6368BED5;

1.1.115.3
date	2013.08.06.19.12.18;	author tg;	state Exp;
branches;
next	1.1.115.4;
commitid	10052014A9975CEFD1D;

1.1.115.4
date	2017.04.15.15.41.55;	author tg;	state Exp;
branches;
next	;
commitid	10058F23F4858079E1C;


desc
@@


1.4
log
@first cut at a quickmerge
@
text
@/***************************************************************************/
/*                                                                         */
/*  fterrdef.h                                                             */
/*                                                                         */
/*    FreeType error codes (specification).                                */
/*                                                                         */
/*  Copyright 2002-2016 by                                                 */
/*  David Turner, Robert Wilhelm, and Werner Lemberg.                      */
/*                                                                         */
/*  This file is part of the FreeType project, and may only be used,       */
/*  modified, and distributed under the terms of the FreeType project      */
/*  license, LICENSE.TXT.  By continuing to use, modify, or distribute     */
/*  this file you indicate that you have read the license and              */
/*  understand and accept it fully.                                        */
/*                                                                         */
/***************************************************************************/


  /*************************************************************************/
  /*                                                                       */
  /* <Section>                                                             */
  /*   error_code_values                                                   */
  /*                                                                       */
  /* <Title>                                                               */
  /*   Error Code Values                                                   */
  /*                                                                       */
  /* <Abstract>                                                            */
  /*   All possible error codes returned by FreeType functions.            */
  /*                                                                       */
  /* <Description>                                                         */
  /*   The list below is taken verbatim from the file `fterrdef.h'         */
  /*   (loaded automatically by including `FT_FREETYPE_H').  The first     */
  /*   argument of the `FT_ERROR_DEF_' macro is the error label; by        */
  /*   default, the prefix `FT_Err_' gets added so that you get error      */
  /*   names like `FT_Err_Cannot_Open_Resource'.  The second argument is   */
  /*   the error code, and the last argument an error string, which is not */
  /*   used by FreeType.                                                   */
  /*                                                                       */
  /*   Within your application you should *only* use error names and       */
  /*   *never* its numeric values!  The latter might (and actually do)     */
  /*   change in forthcoming FreeType versions.                            */
  /*                                                                       */
  /*   Macro `FT_NOERRORDEF_' defines `FT_Err_Ok', which is always zero.   */
  /*   See the `Error Enumerations' subsection how to automatically        */
  /*   generate a list of error strings.                                   */
  /*                                                                       */
  /*************************************************************************/


  /*************************************************************************/
  /*                                                                       */
  /* <Enum>                                                                */
  /*    FT_Err_XXX                                                         */
  /*                                                                       */
  /*************************************************************************/

  /* generic errors */

  FT_NOERRORDEF_( Ok,                                        0x00,
                  "no error" )

  FT_ERRORDEF_( Cannot_Open_Resource,                        0x01,
                "cannot open resource" )
  FT_ERRORDEF_( Unknown_File_Format,                         0x02,
                "unknown file format" )
  FT_ERRORDEF_( Invalid_File_Format,                         0x03,
                "broken file" )
  FT_ERRORDEF_( Invalid_Version,                             0x04,
                "invalid FreeType version" )
  FT_ERRORDEF_( Lower_Module_Version,                        0x05,
                "module version is too low" )
  FT_ERRORDEF_( Invalid_Argument,                            0x06,
                "invalid argument" )
  FT_ERRORDEF_( Unimplemented_Feature,                       0x07,
                "unimplemented feature" )
  FT_ERRORDEF_( Invalid_Table,                               0x08,
                "broken table" )
  FT_ERRORDEF_( Invalid_Offset,                              0x09,
                "broken offset within table" )
  FT_ERRORDEF_( Array_Too_Large,                             0x0A,
                "array allocation size too large" )
  FT_ERRORDEF_( Missing_Module,                              0x0B,
                "missing module" )
  FT_ERRORDEF_( Missing_Property,                            0x0C,
                "missing property" )

  /* glyph/character errors */

  FT_ERRORDEF_( Invalid_Glyph_Index,                         0x10,
                "invalid glyph index" )
  FT_ERRORDEF_( Invalid_Character_Code,                      0x11,
                "invalid character code" )
  FT_ERRORDEF_( Invalid_Glyph_Format,                        0x12,
                "unsupported glyph image format" )
  FT_ERRORDEF_( Cannot_Render_Glyph,                         0x13,
                "cannot render this glyph format" )
  FT_ERRORDEF_( Invalid_Outline,                             0x14,
                "invalid outline" )
  FT_ERRORDEF_( Invalid_Composite,                           0x15,
                "invalid composite glyph" )
  FT_ERRORDEF_( Too_Many_Hints,                              0x16,
                "too many hints" )
  FT_ERRORDEF_( Invalid_Pixel_Size,                          0x17,
                "invalid pixel size" )

  /* handle errors */

  FT_ERRORDEF_( Invalid_Handle,                              0x20,
                "invalid object handle" )
  FT_ERRORDEF_( Invalid_Library_Handle,                      0x21,
                "invalid library handle" )
  FT_ERRORDEF_( Invalid_Driver_Handle,                       0x22,
                "invalid module handle" )
  FT_ERRORDEF_( Invalid_Face_Handle,                         0x23,
                "invalid face handle" )
  FT_ERRORDEF_( Invalid_Size_Handle,                         0x24,
                "invalid size handle" )
  FT_ERRORDEF_( Invalid_Slot_Handle,                         0x25,
                "invalid glyph slot handle" )
  FT_ERRORDEF_( Invalid_CharMap_Handle,                      0x26,
                "invalid charmap handle" )
  FT_ERRORDEF_( Invalid_Cache_Handle,                        0x27,
                "invalid cache manager handle" )
  FT_ERRORDEF_( Invalid_Stream_Handle,                       0x28,
                "invalid stream handle" )

  /* driver errors */

  FT_ERRORDEF_( Too_Many_Drivers,                            0x30,
                "too many modules" )
  FT_ERRORDEF_( Too_Many_Extensions,                         0x31,
                "too many extensions" )

  /* memory errors */

  FT_ERRORDEF_( Out_Of_Memory,                               0x40,
                "out of memory" )
  FT_ERRORDEF_( Unlisted_Object,                             0x41,
                "unlisted object" )

  /* stream errors */

  FT_ERRORDEF_( Cannot_Open_Stream,                          0x51,
                "cannot open stream" )
  FT_ERRORDEF_( Invalid_Stream_Seek,                         0x52,
                "invalid stream seek" )
  FT_ERRORDEF_( Invalid_Stream_Skip,                         0x53,
                "invalid stream skip" )
  FT_ERRORDEF_( Invalid_Stream_Read,                         0x54,
                "invalid stream read" )
  FT_ERRORDEF_( Invalid_Stream_Operation,                    0x55,
                "invalid stream operation" )
  FT_ERRORDEF_( Invalid_Frame_Operation,                     0x56,
                "invalid frame operation" )
  FT_ERRORDEF_( Nested_Frame_Access,                         0x57,
                "nested frame access" )
  FT_ERRORDEF_( Invalid_Frame_Read,                          0x58,
                "invalid frame read" )

  /* raster errors */

  FT_ERRORDEF_( Raster_Uninitialized,                        0x60,
                "raster uninitialized" )
  FT_ERRORDEF_( Raster_Corrupted,                            0x61,
                "raster corrupted" )
  FT_ERRORDEF_( Raster_Overflow,                             0x62,
                "raster overflow" )
  FT_ERRORDEF_( Raster_Negative_Height,                      0x63,
                "negative height while rastering" )

  /* cache errors */

  FT_ERRORDEF_( Too_Many_Caches,                             0x70,
                "too many registered caches" )

  /* TrueType and SFNT errors */

  FT_ERRORDEF_( Invalid_Opcode,                              0x80,
                "invalid opcode" )
  FT_ERRORDEF_( Too_Few_Arguments,                           0x81,
                "too few arguments" )
  FT_ERRORDEF_( Stack_Overflow,                              0x82,
                "stack overflow" )
  FT_ERRORDEF_( Code_Overflow,                               0x83,
                "code overflow" )
  FT_ERRORDEF_( Bad_Argument,                                0x84,
                "bad argument" )
  FT_ERRORDEF_( Divide_By_Zero,                              0x85,
                "division by zero" )
  FT_ERRORDEF_( Invalid_Reference,                           0x86,
                "invalid reference" )
  FT_ERRORDEF_( Debug_OpCode,                                0x87,
                "found debug opcode" )
  FT_ERRORDEF_( ENDF_In_Exec_Stream,                         0x88,
                "found ENDF opcode in execution stream" )
  FT_ERRORDEF_( Nested_DEFS,                                 0x89,
                "nested DEFS" )
  FT_ERRORDEF_( Invalid_CodeRange,                           0x8A,
                "invalid code range" )
  FT_ERRORDEF_( Execution_Too_Long,                          0x8B,
                "execution context too long" )
  FT_ERRORDEF_( Too_Many_Function_Defs,                      0x8C,
                "too many function definitions" )
  FT_ERRORDEF_( Too_Many_Instruction_Defs,                   0x8D,
                "too many instruction definitions" )
  FT_ERRORDEF_( Table_Missing,                               0x8E,
                "SFNT font table missing" )
  FT_ERRORDEF_( Horiz_Header_Missing,                        0x8F,
                "horizontal header (hhea) table missing" )
  FT_ERRORDEF_( Locations_Missing,                           0x90,
                "locations (loca) table missing" )
  FT_ERRORDEF_( Name_Table_Missing,                          0x91,
                "name table missing" )
  FT_ERRORDEF_( CMap_Table_Missing,                          0x92,
                "character map (cmap) table missing" )
  FT_ERRORDEF_( Hmtx_Table_Missing,                          0x93,
                "horizontal metrics (hmtx) table missing" )
  FT_ERRORDEF_( Post_Table_Missing,                          0x94,
                "PostScript (post) table missing" )
  FT_ERRORDEF_( Invalid_Horiz_Metrics,                       0x95,
                "invalid horizontal metrics" )
  FT_ERRORDEF_( Invalid_CharMap_Format,                      0x96,
                "invalid character map (cmap) format" )
  FT_ERRORDEF_( Invalid_PPem,                                0x97,
                "invalid ppem value" )
  FT_ERRORDEF_( Invalid_Vert_Metrics,                        0x98,
                "invalid vertical metrics" )
  FT_ERRORDEF_( Could_Not_Find_Context,                      0x99,
                "could not find context" )
  FT_ERRORDEF_( Invalid_Post_Table_Format,                   0x9A,
                "invalid PostScript (post) table format" )
  FT_ERRORDEF_( Invalid_Post_Table,                          0x9B,
                "invalid PostScript (post) table" )

  /* CFF, CID, and Type 1 errors */

  FT_ERRORDEF_( Syntax_Error,                                0xA0,
                "opcode syntax error" )
  FT_ERRORDEF_( Stack_Underflow,                             0xA1,
                "argument stack underflow" )
  FT_ERRORDEF_( Ignore,                                      0xA2,
                "ignore" )
  FT_ERRORDEF_( No_Unicode_Glyph_Name,                       0xA3,
                "no Unicode glyph name found" )
  FT_ERRORDEF_( Glyph_Too_Big,                               0xA4,
                "glyph too big for hinting" )

  /* BDF errors */

  FT_ERRORDEF_( Missing_Startfont_Field,                     0xB0,
                "`STARTFONT' field missing" )
  FT_ERRORDEF_( Missing_Font_Field,                          0xB1,
                "`FONT' field missing" )
  FT_ERRORDEF_( Missing_Size_Field,                          0xB2,
                "`SIZE' field missing" )
  FT_ERRORDEF_( Missing_Fontboundingbox_Field,               0xB3,
                "`FONTBOUNDINGBOX' field missing" )
  FT_ERRORDEF_( Missing_Chars_Field,                         0xB4,
                "`CHARS' field missing" )
  FT_ERRORDEF_( Missing_Startchar_Field,                     0xB5,
                "`STARTCHAR' field missing" )
  FT_ERRORDEF_( Missing_Encoding_Field,                      0xB6,
                "`ENCODING' field missing" )
  FT_ERRORDEF_( Missing_Bbx_Field,                           0xB7,
                "`BBX' field missing" )
  FT_ERRORDEF_( Bbx_Too_Big,                                 0xB8,
                "`BBX' too big" )
  FT_ERRORDEF_( Corrupted_Font_Header,                       0xB9,
                "Font header corrupted or missing fields" )
  FT_ERRORDEF_( Corrupted_Font_Glyphs,                       0xBA,
                "Font glyphs corrupted or missing fields" )

  /* */


/* END */
@


1.3
log
@Merge freetype 2.3.5, all conflicts automatically resolved
@
text
@d7 1
a7 1
/*  Copyright 2002, 2004, 2006, 2007 by                                    */
d19 37
a55 12
  /*******************************************************************/
  /*******************************************************************/
  /*****                                                         *****/
  /*****                LIST OF ERROR CODES/MESSAGES             *****/
  /*****                                                         *****/
  /*******************************************************************/
  /*******************************************************************/


  /* You need to define both FT_ERRORDEF_ and FT_NOERRORDEF_ before */
  /* including this file.                                           */

d59 1
a59 1
  FT_NOERRORDEF_( Ok,                                        0x00, \
d62 1
a62 1
  FT_ERRORDEF_( Cannot_Open_Resource,                        0x01, \
d64 1
a64 1
  FT_ERRORDEF_( Unknown_File_Format,                         0x02, \
d66 1
a66 1
  FT_ERRORDEF_( Invalid_File_Format,                         0x03, \
d68 1
a68 1
  FT_ERRORDEF_( Invalid_Version,                             0x04, \
d70 1
a70 1
  FT_ERRORDEF_( Lower_Module_Version,                        0x05, \
d72 1
a72 1
  FT_ERRORDEF_( Invalid_Argument,                            0x06, \
d74 1
a74 1
  FT_ERRORDEF_( Unimplemented_Feature,                       0x07, \
d76 1
a76 1
  FT_ERRORDEF_( Invalid_Table,                               0x08, \
d78 1
a78 1
  FT_ERRORDEF_( Invalid_Offset,                              0x09, \
d80 1
a80 1
  FT_ERRORDEF_( Array_Too_Large,                             0x0A, \
d82 4
d89 1
a89 1
  FT_ERRORDEF_( Invalid_Glyph_Index,                         0x10, \
d91 1
a91 1
  FT_ERRORDEF_( Invalid_Character_Code,                      0x11, \
d93 1
a93 1
  FT_ERRORDEF_( Invalid_Glyph_Format,                        0x12, \
d95 1
a95 1
  FT_ERRORDEF_( Cannot_Render_Glyph,                         0x13, \
d97 1
a97 1
  FT_ERRORDEF_( Invalid_Outline,                             0x14, \
d99 1
a99 1
  FT_ERRORDEF_( Invalid_Composite,                           0x15, \
d101 1
a101 1
  FT_ERRORDEF_( Too_Many_Hints,                              0x16, \
d103 1
a103 1
  FT_ERRORDEF_( Invalid_Pixel_Size,                          0x17, \
d108 1
a108 1
  FT_ERRORDEF_( Invalid_Handle,                              0x20, \
d110 1
a110 1
  FT_ERRORDEF_( Invalid_Library_Handle,                      0x21, \
d112 1
a112 1
  FT_ERRORDEF_( Invalid_Driver_Handle,                       0x22, \
d114 1
a114 1
  FT_ERRORDEF_( Invalid_Face_Handle,                         0x23, \
d116 1
a116 1
  FT_ERRORDEF_( Invalid_Size_Handle,                         0x24, \
d118 1
a118 1
  FT_ERRORDEF_( Invalid_Slot_Handle,                         0x25, \
d120 1
a120 1
  FT_ERRORDEF_( Invalid_CharMap_Handle,                      0x26, \
d122 1
a122 1
  FT_ERRORDEF_( Invalid_Cache_Handle,                        0x27, \
d124 1
a124 1
  FT_ERRORDEF_( Invalid_Stream_Handle,                       0x28, \
d129 1
a129 1
  FT_ERRORDEF_( Too_Many_Drivers,                            0x30, \
d131 1
a131 1
  FT_ERRORDEF_( Too_Many_Extensions,                         0x31, \
d136 1
a136 1
  FT_ERRORDEF_( Out_Of_Memory,                               0x40, \
d138 1
a138 1
  FT_ERRORDEF_( Unlisted_Object,                             0x41, \
d143 1
a143 1
  FT_ERRORDEF_( Cannot_Open_Stream,                          0x51, \
d145 1
a145 1
  FT_ERRORDEF_( Invalid_Stream_Seek,                         0x52, \
d147 1
a147 1
  FT_ERRORDEF_( Invalid_Stream_Skip,                         0x53, \
d149 1
a149 1
  FT_ERRORDEF_( Invalid_Stream_Read,                         0x54, \
d151 1
a151 1
  FT_ERRORDEF_( Invalid_Stream_Operation,                    0x55, \
d153 1
a153 1
  FT_ERRORDEF_( Invalid_Frame_Operation,                     0x56, \
d155 1
a155 1
  FT_ERRORDEF_( Nested_Frame_Access,                         0x57, \
d157 1
a157 1
  FT_ERRORDEF_( Invalid_Frame_Read,                          0x58, \
d162 1
a162 1
  FT_ERRORDEF_( Raster_Uninitialized,                        0x60, \
d164 1
a164 1
  FT_ERRORDEF_( Raster_Corrupted,                            0x61, \
d166 1
a166 1
  FT_ERRORDEF_( Raster_Overflow,                             0x62, \
d168 1
a168 1
  FT_ERRORDEF_( Raster_Negative_Height,                      0x63, \
d173 1
a173 1
  FT_ERRORDEF_( Too_Many_Caches,                             0x70, \
d178 1
a178 1
  FT_ERRORDEF_( Invalid_Opcode,                              0x80, \
d180 1
a180 1
  FT_ERRORDEF_( Too_Few_Arguments,                           0x81, \
d182 1
a182 1
  FT_ERRORDEF_( Stack_Overflow,                              0x82, \
d184 1
a184 1
  FT_ERRORDEF_( Code_Overflow,                               0x83, \
d186 1
a186 1
  FT_ERRORDEF_( Bad_Argument,                                0x84, \
d188 1
a188 1
  FT_ERRORDEF_( Divide_By_Zero,                              0x85, \
d190 1
a190 1
  FT_ERRORDEF_( Invalid_Reference,                           0x86, \
d192 1
a192 1
  FT_ERRORDEF_( Debug_OpCode,                                0x87, \
d194 1
a194 1
  FT_ERRORDEF_( ENDF_In_Exec_Stream,                         0x88, \
d196 1
a196 1
  FT_ERRORDEF_( Nested_DEFS,                                 0x89, \
d198 1
a198 1
  FT_ERRORDEF_( Invalid_CodeRange,                           0x8A, \
d200 1
a200 1
  FT_ERRORDEF_( Execution_Too_Long,                          0x8B, \
d202 1
a202 1
  FT_ERRORDEF_( Too_Many_Function_Defs,                      0x8C, \
d204 1
a204 1
  FT_ERRORDEF_( Too_Many_Instruction_Defs,                   0x8D, \
d206 1
a206 1
  FT_ERRORDEF_( Table_Missing,                               0x8E, \
d208 1
a208 1
  FT_ERRORDEF_( Horiz_Header_Missing,                        0x8F, \
d210 1
a210 1
  FT_ERRORDEF_( Locations_Missing,                           0x90, \
d212 1
a212 1
  FT_ERRORDEF_( Name_Table_Missing,                          0x91, \
d214 1
a214 1
  FT_ERRORDEF_( CMap_Table_Missing,                          0x92, \
d216 1
a216 1
  FT_ERRORDEF_( Hmtx_Table_Missing,                          0x93, \
d218 1
a218 1
  FT_ERRORDEF_( Post_Table_Missing,                          0x94, \
d220 1
a220 1
  FT_ERRORDEF_( Invalid_Horiz_Metrics,                       0x95, \
d222 1
a222 1
  FT_ERRORDEF_( Invalid_CharMap_Format,                      0x96, \
d224 1
a224 1
  FT_ERRORDEF_( Invalid_PPem,                                0x97, \
d226 1
a226 1
  FT_ERRORDEF_( Invalid_Vert_Metrics,                        0x98, \
d228 1
a228 1
  FT_ERRORDEF_( Could_Not_Find_Context,                      0x99, \
d230 1
a230 1
  FT_ERRORDEF_( Invalid_Post_Table_Format,                   0x9A, \
d232 1
a232 1
  FT_ERRORDEF_( Invalid_Post_Table,                          0x9B, \
d237 1
a237 1
  FT_ERRORDEF_( Syntax_Error,                                0xA0, \
d239 1
a239 1
  FT_ERRORDEF_( Stack_Underflow,                             0xA1, \
d241 1
a241 1
  FT_ERRORDEF_( Ignore,                                      0xA2, \
d243 4
d250 1
a250 1
  FT_ERRORDEF_( Missing_Startfont_Field,                     0xB0, \
d252 1
a252 1
  FT_ERRORDEF_( Missing_Font_Field,                          0xB1, \
d254 1
a254 1
  FT_ERRORDEF_( Missing_Size_Field,                          0xB2, \
d256 3
a258 1
  FT_ERRORDEF_( Missing_Chars_Field,                         0xB3, \
d260 1
a260 1
  FT_ERRORDEF_( Missing_Startchar_Field,                     0xB4, \
d262 1
a262 1
  FT_ERRORDEF_( Missing_Encoding_Field,                      0xB5, \
d264 1
a264 1
  FT_ERRORDEF_( Missing_Bbx_Field,                           0xB6, \
d266 1
a266 1
  FT_ERRORDEF_( Bbx_Too_Big,                                 0xB7, \
d268 1
a268 1
  FT_ERRORDEF_( Corrupted_Font_Header,                       0xB8, \
d270 1
a270 1
  FT_ERRORDEF_( Corrupted_Font_Glyphs,                       0xB9, \
d273 2
@


1.2
log
@merge freetype 2.2.1, reduce diff against ft (rid some xf86 changes)
@
text
@d7 1
a7 1
/*  Copyright 2002, 2004, 2006 by                                          */
d233 4
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
/*  Copyright 2002, 2004 by                                                */
d55 2
d231 2
@


1.1.1.1
log
@Import freetype-2.3.5 into the X11 tree. This is a recommended security
update for everyone.
@
text
@d7 1
a7 1
/*  Copyright 2002, 2004, 2006, 2007 by                                    */
a54 2
  FT_ERRORDEF_( Array_Too_Large,                             0x0A, \
                "array allocation size too large" )
a228 6
  FT_ERRORDEF_( Bbx_Too_Big,                                 0xB7, \
                "`BBX' too big" )
  FT_ERRORDEF_( Corrupted_Font_Header,                       0xB8, \
                "Font header corrupted or missing fields" )
  FT_ERRORDEF_( Corrupted_Font_Glyphs,                       0xB9, \
                "Font glyphs corrupted or missing fields" )
@


1.1.115.1
log
@re-base freetype 2.1.8
@
text
@@


1.1.115.2
log
@Import Freetype 2.2.1 with a bunch of security fixes
@
text
@d7 1
a7 1
/*  Copyright 2002, 2004, 2006 by                                          */
a54 2
  FT_ERRORDEF_( Array_Too_Large,                             0x0A, \
                "array allocation size too large" )
a228 2
  FT_ERRORDEF_( Bbx_Too_Big,                                 0xB7, \
                "`BBX' too big" )
@


1.1.115.3
log
@we need newer freetype for advance calculation
@
text
@d7 1
a7 1
/*  Copyright 2002, 2004, 2006, 2007 by                                    */
a232 4
  FT_ERRORDEF_( Corrupted_Font_Header,                       0xB8, \
                "Font header corrupted or missing fields" )
  FT_ERRORDEF_( Corrupted_Font_Glyphs,                       0xB9, \
                "Font glyphs corrupted or missing fields" )
@


1.1.115.4
log
@let’s see whether we can’t update freetype2 as well…
@
text
@d7 1
a7 1
/*  Copyright 2002-2016 by                                                 */
d19 12
a30 37
  /*************************************************************************/
  /*                                                                       */
  /* <Section>                                                             */
  /*   error_code_values                                                   */
  /*                                                                       */
  /* <Title>                                                               */
  /*   Error Code Values                                                   */
  /*                                                                       */
  /* <Abstract>                                                            */
  /*   All possible error codes returned by FreeType functions.            */
  /*                                                                       */
  /* <Description>                                                         */
  /*   The list below is taken verbatim from the file `fterrdef.h'         */
  /*   (loaded automatically by including `FT_FREETYPE_H').  The first     */
  /*   argument of the `FT_ERROR_DEF_' macro is the error label; by        */
  /*   default, the prefix `FT_Err_' gets added so that you get error      */
  /*   names like `FT_Err_Cannot_Open_Resource'.  The second argument is   */
  /*   the error code, and the last argument an error string, which is not */
  /*   used by FreeType.                                                   */
  /*                                                                       */
  /*   Within your application you should *only* use error names and       */
  /*   *never* its numeric values!  The latter might (and actually do)     */
  /*   change in forthcoming FreeType versions.                            */
  /*                                                                       */
  /*   Macro `FT_NOERRORDEF_' defines `FT_Err_Ok', which is always zero.   */
  /*   See the `Error Enumerations' subsection how to automatically        */
  /*   generate a list of error strings.                                   */
  /*                                                                       */
  /*************************************************************************/


  /*************************************************************************/
  /*                                                                       */
  /* <Enum>                                                                */
  /*    FT_Err_XXX                                                         */
  /*                                                                       */
  /*************************************************************************/
d34 1
a34 1
  FT_NOERRORDEF_( Ok,                                        0x00,
d37 1
a37 1
  FT_ERRORDEF_( Cannot_Open_Resource,                        0x01,
d39 1
a39 1
  FT_ERRORDEF_( Unknown_File_Format,                         0x02,
d41 1
a41 1
  FT_ERRORDEF_( Invalid_File_Format,                         0x03,
d43 1
a43 1
  FT_ERRORDEF_( Invalid_Version,                             0x04,
d45 1
a45 1
  FT_ERRORDEF_( Lower_Module_Version,                        0x05,
d47 1
a47 1
  FT_ERRORDEF_( Invalid_Argument,                            0x06,
d49 1
a49 1
  FT_ERRORDEF_( Unimplemented_Feature,                       0x07,
d51 1
a51 1
  FT_ERRORDEF_( Invalid_Table,                               0x08,
d53 1
a53 1
  FT_ERRORDEF_( Invalid_Offset,                              0x09,
d55 1
a55 1
  FT_ERRORDEF_( Array_Too_Large,                             0x0A,
a56 4
  FT_ERRORDEF_( Missing_Module,                              0x0B,
                "missing module" )
  FT_ERRORDEF_( Missing_Property,                            0x0C,
                "missing property" )
d60 1
a60 1
  FT_ERRORDEF_( Invalid_Glyph_Index,                         0x10,
d62 1
a62 1
  FT_ERRORDEF_( Invalid_Character_Code,                      0x11,
d64 1
a64 1
  FT_ERRORDEF_( Invalid_Glyph_Format,                        0x12,
d66 1
a66 1
  FT_ERRORDEF_( Cannot_Render_Glyph,                         0x13,
d68 1
a68 1
  FT_ERRORDEF_( Invalid_Outline,                             0x14,
d70 1
a70 1
  FT_ERRORDEF_( Invalid_Composite,                           0x15,
d72 1
a72 1
  FT_ERRORDEF_( Too_Many_Hints,                              0x16,
d74 1
a74 1
  FT_ERRORDEF_( Invalid_Pixel_Size,                          0x17,
d79 1
a79 1
  FT_ERRORDEF_( Invalid_Handle,                              0x20,
d81 1
a81 1
  FT_ERRORDEF_( Invalid_Library_Handle,                      0x21,
d83 1
a83 1
  FT_ERRORDEF_( Invalid_Driver_Handle,                       0x22,
d85 1
a85 1
  FT_ERRORDEF_( Invalid_Face_Handle,                         0x23,
d87 1
a87 1
  FT_ERRORDEF_( Invalid_Size_Handle,                         0x24,
d89 1
a89 1
  FT_ERRORDEF_( Invalid_Slot_Handle,                         0x25,
d91 1
a91 1
  FT_ERRORDEF_( Invalid_CharMap_Handle,                      0x26,
d93 1
a93 1
  FT_ERRORDEF_( Invalid_Cache_Handle,                        0x27,
d95 1
a95 1
  FT_ERRORDEF_( Invalid_Stream_Handle,                       0x28,
d100 1
a100 1
  FT_ERRORDEF_( Too_Many_Drivers,                            0x30,
d102 1
a102 1
  FT_ERRORDEF_( Too_Many_Extensions,                         0x31,
d107 1
a107 1
  FT_ERRORDEF_( Out_Of_Memory,                               0x40,
d109 1
a109 1
  FT_ERRORDEF_( Unlisted_Object,                             0x41,
d114 1
a114 1
  FT_ERRORDEF_( Cannot_Open_Stream,                          0x51,
d116 1
a116 1
  FT_ERRORDEF_( Invalid_Stream_Seek,                         0x52,
d118 1
a118 1
  FT_ERRORDEF_( Invalid_Stream_Skip,                         0x53,
d120 1
a120 1
  FT_ERRORDEF_( Invalid_Stream_Read,                         0x54,
d122 1
a122 1
  FT_ERRORDEF_( Invalid_Stream_Operation,                    0x55,
d124 1
a124 1
  FT_ERRORDEF_( Invalid_Frame_Operation,                     0x56,
d126 1
a126 1
  FT_ERRORDEF_( Nested_Frame_Access,                         0x57,
d128 1
a128 1
  FT_ERRORDEF_( Invalid_Frame_Read,                          0x58,
d133 1
a133 1
  FT_ERRORDEF_( Raster_Uninitialized,                        0x60,
d135 1
a135 1
  FT_ERRORDEF_( Raster_Corrupted,                            0x61,
d137 1
a137 1
  FT_ERRORDEF_( Raster_Overflow,                             0x62,
d139 1
a139 1
  FT_ERRORDEF_( Raster_Negative_Height,                      0x63,
d144 1
a144 1
  FT_ERRORDEF_( Too_Many_Caches,                             0x70,
d149 1
a149 1
  FT_ERRORDEF_( Invalid_Opcode,                              0x80,
d151 1
a151 1
  FT_ERRORDEF_( Too_Few_Arguments,                           0x81,
d153 1
a153 1
  FT_ERRORDEF_( Stack_Overflow,                              0x82,
d155 1
a155 1
  FT_ERRORDEF_( Code_Overflow,                               0x83,
d157 1
a157 1
  FT_ERRORDEF_( Bad_Argument,                                0x84,
d159 1
a159 1
  FT_ERRORDEF_( Divide_By_Zero,                              0x85,
d161 1
a161 1
  FT_ERRORDEF_( Invalid_Reference,                           0x86,
d163 1
a163 1
  FT_ERRORDEF_( Debug_OpCode,                                0x87,
d165 1
a165 1
  FT_ERRORDEF_( ENDF_In_Exec_Stream,                         0x88,
d167 1
a167 1
  FT_ERRORDEF_( Nested_DEFS,                                 0x89,
d169 1
a169 1
  FT_ERRORDEF_( Invalid_CodeRange,                           0x8A,
d171 1
a171 1
  FT_ERRORDEF_( Execution_Too_Long,                          0x8B,
d173 1
a173 1
  FT_ERRORDEF_( Too_Many_Function_Defs,                      0x8C,
d175 1
a175 1
  FT_ERRORDEF_( Too_Many_Instruction_Defs,                   0x8D,
d177 1
a177 1
  FT_ERRORDEF_( Table_Missing,                               0x8E,
d179 1
a179 1
  FT_ERRORDEF_( Horiz_Header_Missing,                        0x8F,
d181 1
a181 1
  FT_ERRORDEF_( Locations_Missing,                           0x90,
d183 1
a183 1
  FT_ERRORDEF_( Name_Table_Missing,                          0x91,
d185 1
a185 1
  FT_ERRORDEF_( CMap_Table_Missing,                          0x92,
d187 1
a187 1
  FT_ERRORDEF_( Hmtx_Table_Missing,                          0x93,
d189 1
a189 1
  FT_ERRORDEF_( Post_Table_Missing,                          0x94,
d191 1
a191 1
  FT_ERRORDEF_( Invalid_Horiz_Metrics,                       0x95,
d193 1
a193 1
  FT_ERRORDEF_( Invalid_CharMap_Format,                      0x96,
d195 1
a195 1
  FT_ERRORDEF_( Invalid_PPem,                                0x97,
d197 1
a197 1
  FT_ERRORDEF_( Invalid_Vert_Metrics,                        0x98,
d199 1
a199 1
  FT_ERRORDEF_( Could_Not_Find_Context,                      0x99,
d201 1
a201 1
  FT_ERRORDEF_( Invalid_Post_Table_Format,                   0x9A,
d203 1
a203 1
  FT_ERRORDEF_( Invalid_Post_Table,                          0x9B,
d208 1
a208 1
  FT_ERRORDEF_( Syntax_Error,                                0xA0,
d210 1
a210 1
  FT_ERRORDEF_( Stack_Underflow,                             0xA1,
d212 1
a212 1
  FT_ERRORDEF_( Ignore,                                      0xA2,
a213 4
  FT_ERRORDEF_( No_Unicode_Glyph_Name,                       0xA3,
                "no Unicode glyph name found" )
  FT_ERRORDEF_( Glyph_Too_Big,                               0xA4,
                "glyph too big for hinting" )
d217 1
a217 1
  FT_ERRORDEF_( Missing_Startfont_Field,                     0xB0,
d219 1
a219 1
  FT_ERRORDEF_( Missing_Font_Field,                          0xB1,
d221 1
a221 1
  FT_ERRORDEF_( Missing_Size_Field,                          0xB2,
d223 1
a223 3
  FT_ERRORDEF_( Missing_Fontboundingbox_Field,               0xB3,
                "`FONTBOUNDINGBOX' field missing" )
  FT_ERRORDEF_( Missing_Chars_Field,                         0xB4,
d225 1
a225 1
  FT_ERRORDEF_( Missing_Startchar_Field,                     0xB5,
d227 1
a227 1
  FT_ERRORDEF_( Missing_Encoding_Field,                      0xB6,
d229 1
a229 1
  FT_ERRORDEF_( Missing_Bbx_Field,                           0xB7,
d231 1
a231 1
  FT_ERRORDEF_( Bbx_Too_Big,                                 0xB8,
d233 1
a233 1
  FT_ERRORDEF_( Corrupted_Font_Header,                       0xB9,
d235 1
a235 1
  FT_ERRORDEF_( Corrupted_Font_Glyphs,                       0xBA,
a237 2
  /* */

@


1.1.103.1
log
@Import XFree86 4.5.0 directly from vendor anoncvs, -rxf-4_5_0 xc
at anoncvs@@anoncvs.xfree86.org:/cvs (ssh)
@
text
@@
