head	1.4;
access;
symbols
	freetype-2_7_1:1.1.115.4
	freetype-2_3_12:1.1.115.3
	freetype-2_3_6:1.1.1.1
	MIRBSD_10_BASE:1.2
	freetype-2_3_5:1.1.1.1
	freetype-2_2_1:1.1.115.2
	freetype-2_1_8:1.1.115.1
	freetype:1.1.115
	MIRBSD_9_BASE:1.1.103.1
	MIRBSD_8:1.1.103.1.0.2
	MIRBSD_8_BASE:1.1.103.1
	xf-4_5_0:1.1.103.1
	xwindow:1.1.103;
locks; strict;
comment	@ * @;


1.4
date	2017.04.15.19.21.03;	author tg;	state Exp;
branches;
next	1.3;
commitid	10058F2723111C7BEE2;

1.3
date	2013.08.06.19.47.19;	author tg;	state Exp;
branches;
next	1.2;
commitid	100520152445E05B912;

1.2
date	2006.06.29.20.24.27;	author tg;	state Exp;
branches;
next	1.1;
commitid	10044A435A50E5F7C11;

1.1
date	2005.03.18.10.43.03;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.103.1
	1.1.115.1;
next	;

1.1.1.1
date	2008.02.26.19.51.51;	author bsiegert;	state Exp;
branches;
next	;
commitid	10047C46DB5081DCD79;

1.1.103.1
date	2005.03.18.10.43.03;	author tg;	state Exp;
branches;
next	;

1.1.115.1
date	2006.06.29.18.34.39;	author tg;	state Exp;
branches;
next	1.1.115.2;
commitid	10044A41D276963C97B;

1.1.115.2
date	2006.06.29.18.38.43;	author tg;	state Exp;
branches;
next	1.1.115.3;
commitid	10044A41DBD6368BED5;

1.1.115.3
date	2013.08.06.19.12.18;	author tg;	state Exp;
branches;
next	1.1.115.4;
commitid	10052014A9975CEFD1D;

1.1.115.4
date	2017.04.15.15.41.55;	author tg;	state Exp;
branches;
next	;
commitid	10058F23F4858079E1C;


desc
@@


1.4
log
@first cut at a quickmerge
@
text
@/***************************************************************************/
/*                                                                         */
/*  ftpfr.h                                                                */
/*                                                                         */
/*    FreeType API for accessing PFR-specific data (specification only).   */
/*                                                                         */
/*  Copyright 2002-2016 by                                                 */
/*  David Turner, Robert Wilhelm, and Werner Lemberg.                      */
/*                                                                         */
/*  This file is part of the FreeType project, and may only be used,       */
/*  modified, and distributed under the terms of the FreeType project      */
/*  license, LICENSE.TXT.  By continuing to use, modify, or distribute     */
/*  this file you indicate that you have read the license and              */
/*  understand and accept it fully.                                        */
/*                                                                         */
/***************************************************************************/


#ifndef FTPFR_H_
#define FTPFR_H_

#include <ft2build.h>
#include FT_FREETYPE_H

#ifdef FREETYPE_H
#error "freetype.h of FreeType 1 has been loaded!"
#error "Please fix the directory search order for header files"
#error "so that freetype.h of FreeType 2 is found first."
#endif


FT_BEGIN_HEADER


  /*************************************************************************/
  /*                                                                       */
  /* <Section>                                                             */
  /*    pfr_fonts                                                          */
  /*                                                                       */
  /* <Title>                                                               */
  /*    PFR Fonts                                                          */
  /*                                                                       */
  /* <Abstract>                                                            */
  /*    PFR/TrueDoc specific API.                                          */
  /*                                                                       */
  /* <Description>                                                         */
  /*    This section contains the declaration of PFR-specific functions.   */
  /*                                                                       */
  /*************************************************************************/


 /**********************************************************************
  *
  * @@function:
  *    FT_Get_PFR_Metrics
  *
  * @@description:
  *    Return the outline and metrics resolutions of a given PFR face.
  *
  * @@input:
  *    face :: Handle to the input face.  It can be a non-PFR face.
  *
  * @@output:
  *    aoutline_resolution ::
  *      Outline resolution.  This is equivalent to `face->units_per_EM'
  *      for non-PFR fonts.  Optional (parameter can be NULL).
  *
  *    ametrics_resolution ::
  *      Metrics resolution.  This is equivalent to `outline_resolution'
  *      for non-PFR fonts.  Optional (parameter can be NULL).
  *
  *    ametrics_x_scale ::
  *      A 16.16 fixed-point number used to scale distance expressed
  *      in metrics units to device sub-pixels.  This is equivalent to
  *      `face->size->x_scale', but for metrics only.  Optional (parameter
  *      can be NULL).
  *
  *    ametrics_y_scale ::
  *      Same as `ametrics_x_scale' but for the vertical direction.
  *      optional (parameter can be NULL).
  *
  * @@return:
  *    FreeType error code.  0~means success.
  *
  * @@note:
  *   If the input face is not a PFR, this function will return an error.
  *   However, in all cases, it will return valid values.
  */
  FT_EXPORT( FT_Error )
  FT_Get_PFR_Metrics( FT_Face    face,
                      FT_UInt   *aoutline_resolution,
                      FT_UInt   *ametrics_resolution,
                      FT_Fixed  *ametrics_x_scale,
                      FT_Fixed  *ametrics_y_scale );


 /**********************************************************************
  *
  * @@function:
  *    FT_Get_PFR_Kerning
  *
  * @@description:
  *    Return the kerning pair corresponding to two glyphs in a PFR face.
  *    The distance is expressed in metrics units, unlike the result of
  *    @@FT_Get_Kerning.
  *
  * @@input:
  *    face  :: A handle to the input face.
  *
  *    left  :: Index of the left glyph.
  *
  *    right :: Index of the right glyph.
  *
  * @@output:
  *    avector :: A kerning vector.
  *
  * @@return:
  *    FreeType error code.  0~means success.
  *
  * @@note:
  *    This function always return distances in original PFR metrics
  *    units.  This is unlike @@FT_Get_Kerning with the @@FT_KERNING_UNSCALED
  *    mode, which always returns distances converted to outline units.
  *
  *    You can use the value of the `x_scale' and `y_scale' parameters
  *    returned by @@FT_Get_PFR_Metrics to scale these to device sub-pixels.
  */
  FT_EXPORT( FT_Error )
  FT_Get_PFR_Kerning( FT_Face     face,
                      FT_UInt     left,
                      FT_UInt     right,
                      FT_Vector  *avector );


 /**********************************************************************
  *
  * @@function:
  *    FT_Get_PFR_Advance
  *
  * @@description:
  *    Return a given glyph advance, expressed in original metrics units,
  *    from a PFR font.
  *
  * @@input:
  *    face   :: A handle to the input face.
  *
  *    gindex :: The glyph index.
  *
  * @@output:
  *    aadvance :: The glyph advance in metrics units.
  *
  * @@return:
  *    FreeType error code.  0~means success.
  *
  * @@note:
  *    You can use the `x_scale' or `y_scale' results of @@FT_Get_PFR_Metrics
  *    to convert the advance to device sub-pixels (i.e., 1/64th of pixels).
  */
  FT_EXPORT( FT_Error )
  FT_Get_PFR_Advance( FT_Face   face,
                      FT_UInt   gindex,
                      FT_Pos   *aadvance );

  /* */


FT_END_HEADER

#endif /* FTPFR_H_ */


/* END */
@


1.3
log
@fastmerge
@
text
@d7 1
a7 1
/*  Copyright 2002, 2003, 2004, 2006, 2008, 2009 by                        */
d19 2
a20 2
#ifndef __FTPFR_H__
#define __FTPFR_H__
d164 1
a164 1
 /* */
d169 1
a169 1
#endif /* __FTPFR_H__ */
@


1.2
log
@merge freetype 2.2.1, reduce diff against ft (rid some xf86 changes)
@
text
@d7 1
a7 1
/*  Copyright 2002, 2003, 2004, 2006 by                                    */
d65 2
a66 2
  *      Outline resolution.  This is equivalent to `face->units_per_EM'.
  *      Optional (parameter can be NULL).
d76 1
a76 1
  *      can be NULL)
d80 1
a80 1
  *      optional (parameter can be NULL)
d83 1
a83 1
  *    FreeType error code.  0 means success.
d118 1
a118 1
  *    FreeType error code.  0 means success.
d153 1
a153 1
  *    FreeType error code.  0 means success.
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
/*  Copyright 2002, 2003 by                                                */
d44 1
a44 1
  /*    PFR/TrueDoc specific APIs                                          */
d157 1
a157 1
  *    to convert the advance to device sub-pixels (i.e. 1/64th of pixels).
d169 1
a169 1
#endif /* __FTBDF_H__ */
@


1.1.1.1
log
@Import freetype-2.3.5 into the X11 tree. This is a recommended security
update for everyone.
@
text
@d7 1
a7 1
/*  Copyright 2002, 2003, 2004, 2006 by                                    */
d44 1
a44 1
  /*    PFR/TrueDoc specific API.                                          */
d157 1
a157 1
  *    to convert the advance to device sub-pixels (i.e., 1/64th of pixels).
d169 1
a169 1
#endif /* __FTPFR_H__ */
@


1.1.115.1
log
@re-base freetype 2.1.8
@
text
@@


1.1.115.2
log
@Import Freetype 2.2.1 with a bunch of security fixes
@
text
@d7 1
a7 1
/*  Copyright 2002, 2003, 2004, 2006 by                                    */
d44 1
a44 1
  /*    PFR/TrueDoc specific API.                                          */
d157 1
a157 1
  *    to convert the advance to device sub-pixels (i.e., 1/64th of pixels).
d169 1
a169 1
#endif /* __FTPFR_H__ */
@


1.1.115.3
log
@we need newer freetype for advance calculation
@
text
@d7 1
a7 1
/*  Copyright 2002, 2003, 2004, 2006, 2008, 2009 by                        */
d65 2
a66 2
  *      Outline resolution.  This is equivalent to `face->units_per_EM'
  *      for non-PFR fonts.  Optional (parameter can be NULL).
d76 1
a76 1
  *      can be NULL).
d80 1
a80 1
  *      optional (parameter can be NULL).
d83 1
a83 1
  *    FreeType error code.  0~means success.
d118 1
a118 1
  *    FreeType error code.  0~means success.
d153 1
a153 1
  *    FreeType error code.  0~means success.
@


1.1.115.4
log
@let’s see whether we can’t update freetype2 as well…
@
text
@d7 1
a7 1
/*  Copyright 2002-2016 by                                                 */
d19 2
a20 2
#ifndef FTPFR_H_
#define FTPFR_H_
d164 1
a164 1
  /* */
d169 1
a169 1
#endif /* FTPFR_H_ */
@


1.1.103.1
log
@Import XFree86 4.5.0 directly from vendor anoncvs, -rxf-4_5_0 xc
at anoncvs@@anoncvs.xfree86.org:/cvs (ssh)
@
text
@@
