head	1.4;
access;
symbols
	freetype-2_7_1:1.1.115.4
	freetype-2_3_12:1.1.115.3
	freetype-2_3_6:1.1.1.1
	MIRBSD_10_BASE:1.3
	freetype-2_3_5:1.1.1.1
	freetype-2_2_1:1.1.115.2
	freetype-2_1_8:1.1.115.1
	freetype:1.1.115
	MIRBSD_9_BASE:1.1.103.1
	MIRBSD_8:1.1.103.1.0.2
	MIRBSD_8_BASE:1.1.103.1
	xf-4_5_0:1.1.103.1
	xwindow:1.1.103;
locks; strict;
comment	@ * @;


1.4
date	2017.04.15.19.21.04;	author tg;	state Exp;
branches;
next	1.3;
commitid	10058F2723111C7BEE2;

1.3
date	2008.02.26.20.04.43;	author bsiegert;	state Exp;
branches;
next	1.2;
commitid	10047C470A72A1E13CE;

1.2
date	2006.06.29.20.24.28;	author tg;	state Exp;
branches;
next	1.1;
commitid	10044A435A50E5F7C11;

1.1
date	2005.03.18.10.43.03;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.103.1
	1.1.115.1;
next	;

1.1.1.1
date	2008.02.26.19.51.46;	author bsiegert;	state Exp;
branches;
next	;
commitid	10047C46DB5081DCD79;

1.1.103.1
date	2005.03.18.10.43.03;	author tg;	state Exp;
branches;
next	;

1.1.115.1
date	2006.06.29.18.34.41;	author tg;	state Exp;
branches;
next	1.1.115.2;
commitid	10044A41D276963C97B;

1.1.115.2
date	2006.06.29.18.38.42;	author tg;	state Exp;
branches;
next	1.1.115.3;
commitid	10044A41DBD6368BED5;

1.1.115.3
date	2013.08.06.19.12.18;	author tg;	state Exp;
branches;
next	1.1.115.4;
commitid	10052014A9975CEFD1D;

1.1.115.4
date	2017.04.15.15.41.55;	author tg;	state Exp;
branches;
next	;
commitid	10058F23F4858079E1C;


desc
@@


1.4
log
@first cut at a quickmerge
@
text
@/***************************************************************************/
/*                                                                         */
/*  fttrigon.h                                                             */
/*                                                                         */
/*    FreeType trigonometric functions (specification).                    */
/*                                                                         */
/*  Copyright 2001-2016 by                                                 */
/*  David Turner, Robert Wilhelm, and Werner Lemberg.                      */
/*                                                                         */
/*  This file is part of the FreeType project, and may only be used,       */
/*  modified, and distributed under the terms of the FreeType project      */
/*  license, LICENSE.TXT.  By continuing to use, modify, or distribute     */
/*  this file you indicate that you have read the license and              */
/*  understand and accept it fully.                                        */
/*                                                                         */
/***************************************************************************/


#ifndef FTTRIGON_H_
#define FTTRIGON_H_

#include FT_FREETYPE_H

#ifdef FREETYPE_H
#error "freetype.h of FreeType 1 has been loaded!"
#error "Please fix the directory search order for header files"
#error "so that freetype.h of FreeType 2 is found first."
#endif


FT_BEGIN_HEADER


  /*************************************************************************/
  /*                                                                       */
  /* <Section>                                                             */
  /*   computations                                                        */
  /*                                                                       */
  /*************************************************************************/


  /*************************************************************************
   *
   * @@type:
   *   FT_Angle
   *
   * @@description:
   *   This type is used to model angle values in FreeType.  Note that the
   *   angle is a 16.16 fixed-point value expressed in degrees.
   *
   */
  typedef FT_Fixed  FT_Angle;


  /*************************************************************************
   *
   * @@macro:
   *   FT_ANGLE_PI
   *
   * @@description:
   *   The angle pi expressed in @@FT_Angle units.
   *
   */
#define FT_ANGLE_PI  ( 180L << 16 )


  /*************************************************************************
   *
   * @@macro:
   *   FT_ANGLE_2PI
   *
   * @@description:
   *   The angle 2*pi expressed in @@FT_Angle units.
   *
   */
#define FT_ANGLE_2PI  ( FT_ANGLE_PI * 2 )


  /*************************************************************************
   *
   * @@macro:
   *   FT_ANGLE_PI2
   *
   * @@description:
   *   The angle pi/2 expressed in @@FT_Angle units.
   *
   */
#define FT_ANGLE_PI2  ( FT_ANGLE_PI / 2 )


  /*************************************************************************
   *
   * @@macro:
   *   FT_ANGLE_PI4
   *
   * @@description:
   *   The angle pi/4 expressed in @@FT_Angle units.
   *
   */
#define FT_ANGLE_PI4  ( FT_ANGLE_PI / 4 )


  /*************************************************************************
   *
   * @@function:
   *   FT_Sin
   *
   * @@description:
   *   Return the sinus of a given angle in fixed-point format.
   *
   * @@input:
   *   angle ::
   *     The input angle.
   *
   * @@return:
   *   The sinus value.
   *
   * @@note:
   *   If you need both the sinus and cosinus for a given angle, use the
   *   function @@FT_Vector_Unit.
   *
   */
  FT_EXPORT( FT_Fixed )
  FT_Sin( FT_Angle  angle );


  /*************************************************************************
   *
   * @@function:
   *   FT_Cos
   *
   * @@description:
   *   Return the cosinus of a given angle in fixed-point format.
   *
   * @@input:
   *   angle ::
   *     The input angle.
   *
   * @@return:
   *   The cosinus value.
   *
   * @@note:
   *   If you need both the sinus and cosinus for a given angle, use the
   *   function @@FT_Vector_Unit.
   *
   */
  FT_EXPORT( FT_Fixed )
  FT_Cos( FT_Angle  angle );


  /*************************************************************************
   *
   * @@function:
   *   FT_Tan
   *
   * @@description:
   *   Return the tangent of a given angle in fixed-point format.
   *
   * @@input:
   *   angle ::
   *     The input angle.
   *
   * @@return:
   *   The tangent value.
   *
   */
  FT_EXPORT( FT_Fixed )
  FT_Tan( FT_Angle  angle );


  /*************************************************************************
   *
   * @@function:
   *   FT_Atan2
   *
   * @@description:
   *   Return the arc-tangent corresponding to a given vector (x,y) in
   *   the 2d plane.
   *
   * @@input:
   *   x ::
   *     The horizontal vector coordinate.
   *
   *   y ::
   *     The vertical vector coordinate.
   *
   * @@return:
   *   The arc-tangent value (i.e. angle).
   *
   */
  FT_EXPORT( FT_Angle )
  FT_Atan2( FT_Fixed  x,
            FT_Fixed  y );


  /*************************************************************************
   *
   * @@function:
   *   FT_Angle_Diff
   *
   * @@description:
   *   Return the difference between two angles.  The result is always
   *   constrained to the ]-PI..PI] interval.
   *
   * @@input:
   *   angle1 ::
   *     First angle.
   *
   *   angle2 ::
   *     Second angle.
   *
   * @@return:
   *   Constrained value of `value2-value1'.
   *
   */
  FT_EXPORT( FT_Angle )
  FT_Angle_Diff( FT_Angle  angle1,
                 FT_Angle  angle2 );


  /*************************************************************************
   *
   * @@function:
   *   FT_Vector_Unit
   *
   * @@description:
   *   Return the unit vector corresponding to a given angle.  After the
   *   call, the value of `vec.x' will be `cos(angle)', and the value of
   *   `vec.y' will be `sin(angle)'.
   *
   *   This function is useful to retrieve both the sinus and cosinus of a
   *   given angle quickly.
   *
   * @@output:
   *   vec ::
   *     The address of target vector.
   *
   * @@input:
   *   angle ::
   *     The input angle.
   *
   */
  FT_EXPORT( void )
  FT_Vector_Unit( FT_Vector*  vec,
                  FT_Angle    angle );


  /*************************************************************************
   *
   * @@function:
   *   FT_Vector_Rotate
   *
   * @@description:
   *   Rotate a vector by a given angle.
   *
   * @@inout:
   *   vec ::
   *     The address of target vector.
   *
   * @@input:
   *   angle ::
   *     The input angle.
   *
   */
  FT_EXPORT( void )
  FT_Vector_Rotate( FT_Vector*  vec,
                    FT_Angle    angle );


  /*************************************************************************
   *
   * @@function:
   *   FT_Vector_Length
   *
   * @@description:
   *   Return the length of a given vector.
   *
   * @@input:
   *   vec ::
   *     The address of target vector.
   *
   * @@return:
   *   The vector length, expressed in the same units that the original
   *   vector coordinates.
   *
   */
  FT_EXPORT( FT_Fixed )
  FT_Vector_Length( FT_Vector*  vec );


  /*************************************************************************
   *
   * @@function:
   *   FT_Vector_Polarize
   *
   * @@description:
   *   Compute both the length and angle of a given vector.
   *
   * @@input:
   *   vec ::
   *     The address of source vector.
   *
   * @@output:
   *   length ::
   *     The vector length.
   *
   *   angle ::
   *     The vector angle.
   *
   */
  FT_EXPORT( void )
  FT_Vector_Polarize( FT_Vector*  vec,
                      FT_Fixed   *length,
                      FT_Angle   *angle );


  /*************************************************************************
   *
   * @@function:
   *   FT_Vector_From_Polar
   *
   * @@description:
   *   Compute vector coordinates from a length and angle.
   *
   * @@output:
   *   vec ::
   *     The address of source vector.
   *
   * @@input:
   *   length ::
   *     The vector length.
   *
   *   angle ::
   *     The vector angle.
   *
   */
  FT_EXPORT( void )
  FT_Vector_From_Polar( FT_Vector*  vec,
                        FT_Fixed    length,
                        FT_Angle    angle );

  /* */


FT_END_HEADER

#endif /* FTTRIGON_H_ */


/* END */
@


1.3
log
@Merge freetype 2.3.5, all conflicts automatically resolved
@
text
@d7 1
a7 1
/*  Copyright 2001, 2003, 2005, 2007 by                                    */
d19 2
a20 2
#ifndef __FTTRIGON_H__
#define __FTTRIGON_H__
d49 1
a49 1
   *   angle is a 16.16 fixed float value expressed in degrees.
d109 1
a109 1
   *   Return the sinus of a given angle in fixed point format.
d133 1
a133 1
   *   Return the cosinus of a given angle in fixed point format.
d157 1
a157 1
   *   Return the tangent of a given angle in fixed point format.
d228 2
a229 2
   *   call, the value of `vec.x' will be `sin(angle)', and the value of
   *   `vec.y' will be `cos(angle)'.
d240 1
a240 1
   *     The address of angle.
d262 1
a262 1
   *     The address of angle.
d347 1
a347 1
#endif /* __FTTRIGON_H__ */
@


1.2
log
@merge freetype 2.2.1, reduce diff against ft (rid some xf86 changes)
@
text
@d7 1
a7 1
/*  Copyright 2001, 2003, 2005 by                                          */
d213 1
a213 1
   *   Contrainted value of `value2-value1'.
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
/*  Copyright 2001, 2003 by                                                */
d36 1
a36 1
  /* @@section:                                                             */
d42 10
a51 9
  /*************************************************************************/
  /*                                                                       */
  /* @@type:                                                                */
  /*    FT_Angle                                                           */
  /*                                                                       */
  /* @@description:                                                         */
  /*    This type is used to model angle values in FreeType.  Note that    */
  /*    the angle is a 16.16 fixed float value expressed in degrees.       */
  /*                                                                       */
d55 9
a63 8
  /*************************************************************************/
  /*                                                                       */
  /* @@macro:                                                               */
  /*    FT_ANGLE_PI                                                        */
  /*                                                                       */
  /* @@description:                                                         */
  /*   The angle pi expressed in @@FT_Angle units.                          */
  /*                                                                       */
d67 9
a75 8
  /*************************************************************************/
  /*                                                                       */
  /* @@macro:                                                               */
  /*    FT_ANGLE_2PI                                                       */
  /*                                                                       */
  /* @@description:                                                         */
  /*    The angle 2*pi expressed in @@FT_Angle units.                       */
  /*                                                                       */
d79 9
a87 8
  /*************************************************************************/
  /*                                                                       */
  /* @@macro:                                                               */
  /*    FT_ANGLE_PI2                                                       */
  /*                                                                       */
  /* @@description:                                                         */
  /*    The angle pi/2 expressed in @@FT_Angle units.                       */
  /*                                                                       */
d91 9
a99 8
  /*************************************************************************/
  /*                                                                       */
  /* @@macro:                                                               */
  /*    FT_ANGLE_PI4                                                       */
  /*                                                                       */
  /* @@description:                                                         */
  /*    The angle pi/4 expressed in @@FT_Angle units.                       */
  /*                                                                       */
d103 20
a122 18
  /*************************************************************************/
  /*                                                                       */
  /* @@function:                                                            */
  /*    FT_Sin                                                             */
  /*                                                                       */
  /* @@description:                                                         */
  /*    Return the sinus of a given angle in fixed point format.           */
  /*                                                                       */
  /* @@input:                                                               */
  /*    angle :: The input angle.                                          */
  /*                                                                       */
  /* @@return:                                                              */
  /*    The sinus value.                                                   */
  /*                                                                       */
  /* @@note:                                                                */
  /*    If you need both the sinus and cosinus for a given angle, use the  */
  /*    function @@FT_Vector_Unit.                                          */
  /*                                                                       */
d127 20
a146 18
  /*************************************************************************/
  /*                                                                       */
  /* @@function:                                                            */
  /*    FT_Cos                                                             */
  /*                                                                       */
  /* @@description:                                                         */
  /*    Return the cosinus of a given angle in fixed point format.         */
  /*                                                                       */
  /* @@input:                                                               */
  /*    angle :: The input angle.                                          */
  /*                                                                       */
  /* @@return:                                                              */
  /*    The cosinus value.                                                 */
  /*                                                                       */
  /* @@note:                                                                */
  /*    If you need both the sinus and cosinus for a given angle, use the  */
  /*    function @@FT_Vector_Unit.                                          */
  /*                                                                       */
d151 16
a166 14
  /*************************************************************************/
  /*                                                                       */
  /* @@function:                                                            */
  /*    FT_Tan                                                             */
  /*                                                                       */
  /* @@description:                                                         */
  /*    Return the tangent of a given angle in fixed point format.         */
  /*                                                                       */
  /* @@input:                                                               */
  /*    angle :: The input angle.                                          */
  /*                                                                       */
  /* @@return:                                                              */
  /*    The tangent value.                                                 */
  /*                                                                       */
d171 20
a190 17
  /*************************************************************************/
  /*                                                                       */
  /* @@function:                                                            */
  /*    FT_Atan2                                                           */
  /*                                                                       */
  /* @@description:                                                         */
  /*    Return the arc-tangent corresponding to a given vector (x,y) in    */
  /*    the 2d plane.                                                      */
  /*                                                                       */
  /* @@input:                                                               */
  /*    x :: The horizontal vector coordinate.                             */
  /*                                                                       */
  /*    y :: The vertical vector coordinate.                               */
  /*                                                                       */
  /* @@return:                                                              */
  /*    The arc-tangent value (i.e. angle).                                */
  /*                                                                       */
d196 20
a215 17
  /*************************************************************************/
  /*                                                                       */
  /* @@function:                                                            */
  /*    FT_Angle_Diff                                                      */
  /*                                                                       */
  /* @@description:                                                         */
  /*    Return the difference between two angles.  The result is always    */
  /*    constrained to the ]-PI..PI] interval.                             */
  /*                                                                       */
  /* @@input:                                                               */
  /*    angle1 :: First angle.                                             */
  /*                                                                       */
  /*    angle2 :: Second angle.                                            */
  /*                                                                       */
  /* @@return:                                                              */
  /*    Contrainted value of `value2-value1'.                              */
  /*                                                                       */
d221 22
a242 19
  /*************************************************************************/
  /*                                                                       */
  /* @@function:                                                            */
  /*    FT_Vector_Unit                                                     */
  /*                                                                       */
  /* @@description:                                                         */
  /*    Return the unit vector corresponding to a given angle.  After the  */
  /*    call, the value of `vec.x' will be `sin(angle)', and the value of  */
  /*    `vec.y' will be `cos(angle)'.                                      */
  /*                                                                       */
  /*    This function is useful to retrieve both the sinus and cosinus of  */
  /*    a given angle quickly.                                             */
  /*                                                                       */
  /* @@output:                                                              */
  /*    vec   :: The address of target vector.                             */
  /*                                                                       */
  /* @@input:                                                               */
  /*    angle :: The address of angle.                                     */
  /*                                                                       */
d248 17
a264 14
  /*************************************************************************/
  /*                                                                       */
  /* @@function:                                                            */
  /*    FT_Vector_Rotate                                                   */
  /*                                                                       */
  /* @@description:                                                         */
  /*    Rotate a vector by a given angle.                                  */
  /*                                                                       */
  /* @@inout:                                                               */
  /*    vec   :: The address of target vector.                             */
  /*                                                                       */
  /* @@input:                                                               */
  /*    angle :: The address of angle.                                     */
  /*                                                                       */
d270 17
a286 15
  /*************************************************************************/
  /*                                                                       */
  /* @@function:                                                            */
  /*   FT_Vector_Length                                                    */
  /*                                                                       */
  /* @@description:                                                         */
  /*   Return the length of a given vector.                                */
  /*                                                                       */
  /* @@input:                                                               */
  /*   vec :: The address of target vector.                                */
  /*                                                                       */
  /* @@return:                                                              */
  /*   The vector length, expressed in the same units that the original    */
  /*   vector coordinates.                                                 */
  /*                                                                       */
d291 20
a310 15
  /*************************************************************************/
  /*                                                                       */
  /* @@function:                                                            */
  /*    FT_Vector_Polarize                                                 */
  /*                                                                       */
  /* @@description:                                                         */
  /*    Compute both the length and angle of a given vector.               */
  /*                                                                       */
  /* @@input:                                                               */
  /*    vec    :: The address of source vector.                            */
  /*                                                                       */
  /* @@output:                                                              */
  /*    length :: The vector length.                                       */
  /*    angle  :: The vector angle.                                        */
  /*                                                                       */
d317 20
a336 15
  /*************************************************************************/
  /*                                                                       */
  /* @@function:                                                            */
  /*    FT_Vector_From_Polar                                               */
  /*                                                                       */
  /* @@description:                                                         */
  /*    Compute vector coordinates from a length and angle.                */
  /*                                                                       */
  /* @@output:                                                              */
  /*    vec    :: The address of source vector.                            */
  /*                                                                       */
  /* @@input:                                                               */
  /*    length :: The vector length.                                       */
  /*    angle  :: The vector angle.                                        */
  /*                                                                       */
@


1.1.1.1
log
@Import freetype-2.3.5 into the X11 tree. This is a recommended security
update for everyone.
@
text
@d7 1
a7 1
/*  Copyright 2001, 2003, 2005, 2007 by                                    */
d36 1
a36 1
  /* <Section>                                                             */
d42 9
a50 10
  /*************************************************************************
   *
   * @@type:
   *   FT_Angle
   *
   * @@description:
   *   This type is used to model angle values in FreeType.  Note that the
   *   angle is a 16.16 fixed float value expressed in degrees.
   *
   */
d54 8
a61 9
  /*************************************************************************
   *
   * @@macro:
   *   FT_ANGLE_PI
   *
   * @@description:
   *   The angle pi expressed in @@FT_Angle units.
   *
   */
d65 8
a72 9
  /*************************************************************************
   *
   * @@macro:
   *   FT_ANGLE_2PI
   *
   * @@description:
   *   The angle 2*pi expressed in @@FT_Angle units.
   *
   */
d76 8
a83 9
  /*************************************************************************
   *
   * @@macro:
   *   FT_ANGLE_PI2
   *
   * @@description:
   *   The angle pi/2 expressed in @@FT_Angle units.
   *
   */
d87 8
a94 9
  /*************************************************************************
   *
   * @@macro:
   *   FT_ANGLE_PI4
   *
   * @@description:
   *   The angle pi/4 expressed in @@FT_Angle units.
   *
   */
d98 18
a115 20
  /*************************************************************************
   *
   * @@function:
   *   FT_Sin
   *
   * @@description:
   *   Return the sinus of a given angle in fixed point format.
   *
   * @@input:
   *   angle ::
   *     The input angle.
   *
   * @@return:
   *   The sinus value.
   *
   * @@note:
   *   If you need both the sinus and cosinus for a given angle, use the
   *   function @@FT_Vector_Unit.
   *
   */
d120 18
a137 20
  /*************************************************************************
   *
   * @@function:
   *   FT_Cos
   *
   * @@description:
   *   Return the cosinus of a given angle in fixed point format.
   *
   * @@input:
   *   angle ::
   *     The input angle.
   *
   * @@return:
   *   The cosinus value.
   *
   * @@note:
   *   If you need both the sinus and cosinus for a given angle, use the
   *   function @@FT_Vector_Unit.
   *
   */
d142 14
a155 16
  /*************************************************************************
   *
   * @@function:
   *   FT_Tan
   *
   * @@description:
   *   Return the tangent of a given angle in fixed point format.
   *
   * @@input:
   *   angle ::
   *     The input angle.
   *
   * @@return:
   *   The tangent value.
   *
   */
d160 17
a176 20
  /*************************************************************************
   *
   * @@function:
   *   FT_Atan2
   *
   * @@description:
   *   Return the arc-tangent corresponding to a given vector (x,y) in
   *   the 2d plane.
   *
   * @@input:
   *   x ::
   *     The horizontal vector coordinate.
   *
   *   y ::
   *     The vertical vector coordinate.
   *
   * @@return:
   *   The arc-tangent value (i.e. angle).
   *
   */
d182 17
a198 20
  /*************************************************************************
   *
   * @@function:
   *   FT_Angle_Diff
   *
   * @@description:
   *   Return the difference between two angles.  The result is always
   *   constrained to the ]-PI..PI] interval.
   *
   * @@input:
   *   angle1 ::
   *     First angle.
   *
   *   angle2 ::
   *     Second angle.
   *
   * @@return:
   *   Constrained value of `value2-value1'.
   *
   */
d204 19
a222 22
  /*************************************************************************
   *
   * @@function:
   *   FT_Vector_Unit
   *
   * @@description:
   *   Return the unit vector corresponding to a given angle.  After the
   *   call, the value of `vec.x' will be `sin(angle)', and the value of
   *   `vec.y' will be `cos(angle)'.
   *
   *   This function is useful to retrieve both the sinus and cosinus of a
   *   given angle quickly.
   *
   * @@output:
   *   vec ::
   *     The address of target vector.
   *
   * @@input:
   *   angle ::
   *     The address of angle.
   *
   */
d228 14
a241 17
  /*************************************************************************
   *
   * @@function:
   *   FT_Vector_Rotate
   *
   * @@description:
   *   Rotate a vector by a given angle.
   *
   * @@inout:
   *   vec ::
   *     The address of target vector.
   *
   * @@input:
   *   angle ::
   *     The address of angle.
   *
   */
d247 15
a261 17
  /*************************************************************************
   *
   * @@function:
   *   FT_Vector_Length
   *
   * @@description:
   *   Return the length of a given vector.
   *
   * @@input:
   *   vec ::
   *     The address of target vector.
   *
   * @@return:
   *   The vector length, expressed in the same units that the original
   *   vector coordinates.
   *
   */
d266 15
a280 20
  /*************************************************************************
   *
   * @@function:
   *   FT_Vector_Polarize
   *
   * @@description:
   *   Compute both the length and angle of a given vector.
   *
   * @@input:
   *   vec ::
   *     The address of source vector.
   *
   * @@output:
   *   length ::
   *     The vector length.
   *
   *   angle ::
   *     The vector angle.
   *
   */
d287 15
a301 20
  /*************************************************************************
   *
   * @@function:
   *   FT_Vector_From_Polar
   *
   * @@description:
   *   Compute vector coordinates from a length and angle.
   *
   * @@output:
   *   vec ::
   *     The address of source vector.
   *
   * @@input:
   *   length ::
   *     The vector length.
   *
   *   angle ::
   *     The vector angle.
   *
   */
@


1.1.115.1
log
@re-base freetype 2.1.8
@
text
@@


1.1.115.2
log
@Import Freetype 2.2.1 with a bunch of security fixes
@
text
@d7 1
a7 1
/*  Copyright 2001, 2003, 2005 by                                          */
d36 1
a36 1
  /* <Section>                                                             */
d42 9
a50 10
  /*************************************************************************
   *
   * @@type:
   *   FT_Angle
   *
   * @@description:
   *   This type is used to model angle values in FreeType.  Note that the
   *   angle is a 16.16 fixed float value expressed in degrees.
   *
   */
d54 8
a61 9
  /*************************************************************************
   *
   * @@macro:
   *   FT_ANGLE_PI
   *
   * @@description:
   *   The angle pi expressed in @@FT_Angle units.
   *
   */
d65 8
a72 9
  /*************************************************************************
   *
   * @@macro:
   *   FT_ANGLE_2PI
   *
   * @@description:
   *   The angle 2*pi expressed in @@FT_Angle units.
   *
   */
d76 8
a83 9
  /*************************************************************************
   *
   * @@macro:
   *   FT_ANGLE_PI2
   *
   * @@description:
   *   The angle pi/2 expressed in @@FT_Angle units.
   *
   */
d87 8
a94 9
  /*************************************************************************
   *
   * @@macro:
   *   FT_ANGLE_PI4
   *
   * @@description:
   *   The angle pi/4 expressed in @@FT_Angle units.
   *
   */
d98 18
a115 20
  /*************************************************************************
   *
   * @@function:
   *   FT_Sin
   *
   * @@description:
   *   Return the sinus of a given angle in fixed point format.
   *
   * @@input:
   *   angle ::
   *     The input angle.
   *
   * @@return:
   *   The sinus value.
   *
   * @@note:
   *   If you need both the sinus and cosinus for a given angle, use the
   *   function @@FT_Vector_Unit.
   *
   */
d120 18
a137 20
  /*************************************************************************
   *
   * @@function:
   *   FT_Cos
   *
   * @@description:
   *   Return the cosinus of a given angle in fixed point format.
   *
   * @@input:
   *   angle ::
   *     The input angle.
   *
   * @@return:
   *   The cosinus value.
   *
   * @@note:
   *   If you need both the sinus and cosinus for a given angle, use the
   *   function @@FT_Vector_Unit.
   *
   */
d142 14
a155 16
  /*************************************************************************
   *
   * @@function:
   *   FT_Tan
   *
   * @@description:
   *   Return the tangent of a given angle in fixed point format.
   *
   * @@input:
   *   angle ::
   *     The input angle.
   *
   * @@return:
   *   The tangent value.
   *
   */
d160 17
a176 20
  /*************************************************************************
   *
   * @@function:
   *   FT_Atan2
   *
   * @@description:
   *   Return the arc-tangent corresponding to a given vector (x,y) in
   *   the 2d plane.
   *
   * @@input:
   *   x ::
   *     The horizontal vector coordinate.
   *
   *   y ::
   *     The vertical vector coordinate.
   *
   * @@return:
   *   The arc-tangent value (i.e. angle).
   *
   */
d182 17
a198 20
  /*************************************************************************
   *
   * @@function:
   *   FT_Angle_Diff
   *
   * @@description:
   *   Return the difference between two angles.  The result is always
   *   constrained to the ]-PI..PI] interval.
   *
   * @@input:
   *   angle1 ::
   *     First angle.
   *
   *   angle2 ::
   *     Second angle.
   *
   * @@return:
   *   Contrainted value of `value2-value1'.
   *
   */
d204 19
a222 22
  /*************************************************************************
   *
   * @@function:
   *   FT_Vector_Unit
   *
   * @@description:
   *   Return the unit vector corresponding to a given angle.  After the
   *   call, the value of `vec.x' will be `sin(angle)', and the value of
   *   `vec.y' will be `cos(angle)'.
   *
   *   This function is useful to retrieve both the sinus and cosinus of a
   *   given angle quickly.
   *
   * @@output:
   *   vec ::
   *     The address of target vector.
   *
   * @@input:
   *   angle ::
   *     The address of angle.
   *
   */
d228 14
a241 17
  /*************************************************************************
   *
   * @@function:
   *   FT_Vector_Rotate
   *
   * @@description:
   *   Rotate a vector by a given angle.
   *
   * @@inout:
   *   vec ::
   *     The address of target vector.
   *
   * @@input:
   *   angle ::
   *     The address of angle.
   *
   */
d247 15
a261 17
  /*************************************************************************
   *
   * @@function:
   *   FT_Vector_Length
   *
   * @@description:
   *   Return the length of a given vector.
   *
   * @@input:
   *   vec ::
   *     The address of target vector.
   *
   * @@return:
   *   The vector length, expressed in the same units that the original
   *   vector coordinates.
   *
   */
d266 15
a280 20
  /*************************************************************************
   *
   * @@function:
   *   FT_Vector_Polarize
   *
   * @@description:
   *   Compute both the length and angle of a given vector.
   *
   * @@input:
   *   vec ::
   *     The address of source vector.
   *
   * @@output:
   *   length ::
   *     The vector length.
   *
   *   angle ::
   *     The vector angle.
   *
   */
d287 15
a301 20
  /*************************************************************************
   *
   * @@function:
   *   FT_Vector_From_Polar
   *
   * @@description:
   *   Compute vector coordinates from a length and angle.
   *
   * @@output:
   *   vec ::
   *     The address of source vector.
   *
   * @@input:
   *   length ::
   *     The vector length.
   *
   *   angle ::
   *     The vector angle.
   *
   */
@


1.1.115.3
log
@we need newer freetype for advance calculation
@
text
@d7 1
a7 1
/*  Copyright 2001, 2003, 2005, 2007 by                                    */
d213 1
a213 1
   *   Constrained value of `value2-value1'.
@


1.1.115.4
log
@let’s see whether we can’t update freetype2 as well…
@
text
@d7 1
a7 1
/*  Copyright 2001-2016 by                                                 */
d19 2
a20 2
#ifndef FTTRIGON_H_
#define FTTRIGON_H_
d49 1
a49 1
   *   angle is a 16.16 fixed-point value expressed in degrees.
d109 1
a109 1
   *   Return the sinus of a given angle in fixed-point format.
d133 1
a133 1
   *   Return the cosinus of a given angle in fixed-point format.
d157 1
a157 1
   *   Return the tangent of a given angle in fixed-point format.
d228 2
a229 2
   *   call, the value of `vec.x' will be `cos(angle)', and the value of
   *   `vec.y' will be `sin(angle)'.
d240 1
a240 1
   *     The input angle.
d262 1
a262 1
   *     The input angle.
d347 1
a347 1
#endif /* FTTRIGON_H_ */
@


1.1.103.1
log
@Import XFree86 4.5.0 directly from vendor anoncvs, -rxf-4_5_0 xc
at anoncvs@@anoncvs.xfree86.org:/cvs (ssh)
@
text
@@
