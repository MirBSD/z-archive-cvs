head	1.3;
access;
symbols
	freetype-2_7_1:1.1.115.2
	freetype-2_3_12:1.1.115.1
	freetype-2_3_6:1.1.1.1
	freetype:1.1.115;
locks; strict;
comment	@ * @;


1.3
date	2017.04.15.19.21.00;	author tg;	state Exp;
branches;
next	1.2;
commitid	10058F2723111C7BEE2;

1.2
date	2013.08.06.19.47.15;	author tg;	state Exp;
branches;
next	1.1;
commitid	100520152445E05B912;

1.1
date	2008.06.12.20.36.12;	author bsiegert;	state Exp;
branches
	1.1.1.1
	1.1.115.1;
next	;
commitid	1004851887B4E012E38;

1.1.1.1
date	2008.06.12.20.36.12;	author bsiegert;	state Exp;
branches;
next	;
commitid	1004851887B4E012E38;

1.1.115.1
date	2013.08.06.19.12.18;	author tg;	state Exp;
branches;
next	1.1.115.2;
commitid	10052014A9975CEFD1D;

1.1.115.2
date	2017.04.15.15.41.55;	author tg;	state Exp;
branches;
next	;
commitid	10058F23F4858079E1C;


desc
@@


1.3
log
@first cut at a quickmerge
@
text
@/***************************************************************************/
/*                                                                         */
/*  ftcid.h                                                                */
/*                                                                         */
/*    FreeType API for accessing CID font information (specification).     */
/*                                                                         */
/*  Copyright 2007-2016 by                                                 */
/*  Dereg Clegg and Michael Toftdal.                                       */
/*                                                                         */
/*  This file is part of the FreeType project, and may only be used,       */
/*  modified, and distributed under the terms of the FreeType project      */
/*  license, LICENSE.TXT.  By continuing to use, modify, or distribute     */
/*  this file you indicate that you have read the license and              */
/*  understand and accept it fully.                                        */
/*                                                                         */
/***************************************************************************/


#ifndef FTCID_H_
#define FTCID_H_

#include <ft2build.h>
#include FT_FREETYPE_H

#ifdef FREETYPE_H
#error "freetype.h of FreeType 1 has been loaded!"
#error "Please fix the directory search order for header files"
#error "so that freetype.h of FreeType 2 is found first."
#endif


FT_BEGIN_HEADER


  /*************************************************************************/
  /*                                                                       */
  /* <Section>                                                             */
  /*    cid_fonts                                                          */
  /*                                                                       */
  /* <Title>                                                               */
  /*    CID Fonts                                                          */
  /*                                                                       */
  /* <Abstract>                                                            */
  /*    CID-keyed font specific API.                                       */
  /*                                                                       */
  /* <Description>                                                         */
  /*    This section contains the declaration of CID-keyed font specific   */
  /*    functions.                                                         */
  /*                                                                       */
  /*************************************************************************/


  /**********************************************************************
   *
   * @@function:
   *    FT_Get_CID_Registry_Ordering_Supplement
   *
   * @@description:
   *    Retrieve the Registry/Ordering/Supplement triple (also known as the
   *    "R/O/S") from a CID-keyed font.
   *
   * @@input:
   *    face ::
   *       A handle to the input face.
   *
   * @@output:
   *    registry ::
   *       The registry, as a C~string, owned by the face.
   *
   *    ordering ::
   *       The ordering, as a C~string, owned by the face.
   *
   *    supplement ::
   *       The supplement.
   *
   * @@return:
   *    FreeType error code.  0~means success.
   *
   * @@note:
   *    This function only works with CID faces, returning an error
   *    otherwise.
   *
   * @@since:
   *    2.3.6
   */
  FT_EXPORT( FT_Error )
  FT_Get_CID_Registry_Ordering_Supplement( FT_Face       face,
                                           const char*  *registry,
                                           const char*  *ordering,
                                           FT_Int       *supplement);


  /**********************************************************************
   *
   * @@function:
   *    FT_Get_CID_Is_Internally_CID_Keyed
   *
   * @@description:
   *    Retrieve the type of the input face, CID keyed or not.  In
   *    contrast to the @@FT_IS_CID_KEYED macro this function returns
   *    successfully also for CID-keyed fonts in an SFNT wrapper.
   *
   * @@input:
   *    face ::
   *       A handle to the input face.
   *
   * @@output:
   *    is_cid ::
   *       The type of the face as an @@FT_Bool.
   *
   * @@return:
   *    FreeType error code.  0~means success.
   *
   * @@note:
   *    This function only works with CID faces and OpenType fonts,
   *    returning an error otherwise.
   *
   * @@since:
   *    2.3.9
   */
  FT_EXPORT( FT_Error )
  FT_Get_CID_Is_Internally_CID_Keyed( FT_Face   face,
                                      FT_Bool  *is_cid );


  /**********************************************************************
   *
   * @@function:
   *    FT_Get_CID_From_Glyph_Index
   *
   * @@description:
   *    Retrieve the CID of the input glyph index.
   *
   * @@input:
   *    face ::
   *       A handle to the input face.
   *
   *    glyph_index ::
   *       The input glyph index.
   *
   * @@output:
   *    cid ::
   *       The CID as an @@FT_UInt.
   *
   * @@return:
   *    FreeType error code.  0~means success.
   *
   * @@note:
   *    This function only works with CID faces and OpenType fonts,
   *    returning an error otherwise.
   *
   * @@since:
   *    2.3.9
   */
  FT_EXPORT( FT_Error )
  FT_Get_CID_From_Glyph_Index( FT_Face   face,
                               FT_UInt   glyph_index,
                               FT_UInt  *cid );

  /* */


FT_END_HEADER

#endif /* FTCID_H_ */


/* END */
@


1.2
log
@fastmerge
@
text
@d7 2
a8 1
/*  Copyright 2007, 2009 by Dereg Clegg, Michael Toftdal.                  */
d19 2
a20 2
#ifndef __FTCID_H__
#define __FTCID_H__
d100 2
a101 2
   *    constrast to the @@FT_IS_CID_KEYED macro this function returns
   *    successfully also for CID-keyed fonts in an SNFT wrapper.
d160 2
a161 1
 /* */
d165 1
a165 1
#endif /* __FTCID_H__ */
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
/*  Copyright 2007 by Dereg Clegg.                                         */
d67 1
a67 1
   *       The registry, as a C string, owned by the face.
d70 1
a70 1
   *       The ordering, as a C string, owned by the face.
d76 1
a76 1
   *    FreeType error code.  0 means success.
d91 68
@


1.1.115.1
log
@we need newer freetype for advance calculation
@
text
@d7 1
a7 1
/*  Copyright 2007, 2009 by Dereg Clegg, Michael Toftdal.                  */
d67 1
a67 1
   *       The registry, as a C~string, owned by the face.
d70 1
a70 1
   *       The ordering, as a C~string, owned by the face.
d76 1
a76 1
   *    FreeType error code.  0~means success.
a90 68

  /**********************************************************************
   *
   * @@function:
   *    FT_Get_CID_Is_Internally_CID_Keyed
   *
   * @@description:
   *    Retrieve the type of the input face, CID keyed or not.  In
   *    constrast to the @@FT_IS_CID_KEYED macro this function returns
   *    successfully also for CID-keyed fonts in an SNFT wrapper.
   *
   * @@input:
   *    face ::
   *       A handle to the input face.
   *
   * @@output:
   *    is_cid ::
   *       The type of the face as an @@FT_Bool.
   *
   * @@return:
   *    FreeType error code.  0~means success.
   *
   * @@note:
   *    This function only works with CID faces and OpenType fonts,
   *    returning an error otherwise.
   *
   * @@since:
   *    2.3.9
   */
  FT_EXPORT( FT_Error )
  FT_Get_CID_Is_Internally_CID_Keyed( FT_Face   face,
                                      FT_Bool  *is_cid );


  /**********************************************************************
   *
   * @@function:
   *    FT_Get_CID_From_Glyph_Index
   *
   * @@description:
   *    Retrieve the CID of the input glyph index.
   *
   * @@input:
   *    face ::
   *       A handle to the input face.
   *
   *    glyph_index ::
   *       The input glyph index.
   *
   * @@output:
   *    cid ::
   *       The CID as an @@FT_UInt.
   *
   * @@return:
   *    FreeType error code.  0~means success.
   *
   * @@note:
   *    This function only works with CID faces and OpenType fonts,
   *    returning an error otherwise.
   *
   * @@since:
   *    2.3.9
   */
  FT_EXPORT( FT_Error )
  FT_Get_CID_From_Glyph_Index( FT_Face   face,
                               FT_UInt   glyph_index,
                               FT_UInt  *cid );

@


1.1.115.2
log
@let’s see whether we can’t update freetype2 as well…
@
text
@d7 1
a7 2
/*  Copyright 2007-2016 by                                                 */
/*  Dereg Clegg and Michael Toftdal.                                       */
d18 2
a19 2
#ifndef FTCID_H_
#define FTCID_H_
d99 2
a100 2
   *    contrast to the @@FT_IS_CID_KEYED macro this function returns
   *    successfully also for CID-keyed fonts in an SFNT wrapper.
d159 1
a159 2
  /* */

d163 1
a163 1
#endif /* FTCID_H_ */
@


1.1.1.1
log
@SECURITY: Import freetype 2.3.6. From the release notes:

    - A  bunch of  potential security  problems have  been found.  All
      users should update.
@
text
@@
