head	1.4;
access;
symbols
	freetype-2_7_1:1.1.115.4
	freetype-2_3_12:1.1.115.3
	freetype-2_3_6:1.1.1.1
	MIRBSD_10_BASE:1.2
	freetype-2_3_5:1.1.1.1
	freetype-2_2_1:1.1.115.2
	freetype-2_1_8:1.1.115.1
	freetype:1.1.115
	MIRBSD_9_BASE:1.1.103.1
	MIRBSD_8:1.1.103.1.0.2
	MIRBSD_8_BASE:1.1.103.1
	xf-4_5_0:1.1.103.1
	xwindow:1.1.103;
locks; strict;
comment	@ * @;


1.4
date	2017.04.15.19.20.59;	author tg;	state Exp;
branches;
next	1.3;
commitid	10058F2723111C7BEE2;

1.3
date	2013.08.06.19.47.14;	author tg;	state Exp;
branches;
next	1.2;
commitid	100520152445E05B912;

1.2
date	2006.06.29.20.24.25;	author tg;	state Exp;
branches;
next	1.1;
commitid	10044A435A50E5F7C11;

1.1
date	2005.03.18.10.43.01;	author tg;	state Exp;
branches
	1.1.1.1
	1.1.103.1
	1.1.115.1;
next	;

1.1.1.1
date	2008.02.26.19.51.49;	author bsiegert;	state Exp;
branches;
next	;
commitid	10047C46DB5081DCD79;

1.1.103.1
date	2005.03.18.10.43.01;	author tg;	state Exp;
branches;
next	;

1.1.115.1
date	2006.06.29.18.34.35;	author tg;	state Exp;
branches;
next	1.1.115.2;
commitid	10044A41D276963C97B;

1.1.115.2
date	2006.06.29.18.38.41;	author tg;	state Exp;
branches;
next	1.1.115.3;
commitid	10044A41DBD6368BED5;

1.1.115.3
date	2013.08.06.19.12.18;	author tg;	state Exp;
branches;
next	1.1.115.4;
commitid	10052014A9975CEFD1D;

1.1.115.4
date	2017.04.15.15.41.55;	author tg;	state Exp;
branches;
next	;
commitid	10058F23F4858079E1C;


desc
@@


1.4
log
@first cut at a quickmerge
@
text
@/***************************************************************************/
/*                                                                         */
/*  ftbdf.h                                                                */
/*                                                                         */
/*    FreeType API for accessing BDF-specific strings (specification).     */
/*                                                                         */
/*  Copyright 2002-2016 by                                                 */
/*  David Turner, Robert Wilhelm, and Werner Lemberg.                      */
/*                                                                         */
/*  This file is part of the FreeType project, and may only be used,       */
/*  modified, and distributed under the terms of the FreeType project      */
/*  license, LICENSE.TXT.  By continuing to use, modify, or distribute     */
/*  this file you indicate that you have read the license and              */
/*  understand and accept it fully.                                        */
/*                                                                         */
/***************************************************************************/


#ifndef FTBDF_H_
#define FTBDF_H_

#include <ft2build.h>
#include FT_FREETYPE_H

#ifdef FREETYPE_H
#error "freetype.h of FreeType 1 has been loaded!"
#error "Please fix the directory search order for header files"
#error "so that freetype.h of FreeType 2 is found first."
#endif


FT_BEGIN_HEADER


  /*************************************************************************/
  /*                                                                       */
  /* <Section>                                                             */
  /*    bdf_fonts                                                          */
  /*                                                                       */
  /* <Title>                                                               */
  /*    BDF and PCF Files                                                  */
  /*                                                                       */
  /* <Abstract>                                                            */
  /*    BDF and PCF specific API.                                          */
  /*                                                                       */
  /* <Description>                                                         */
  /*    This section contains the declaration of functions specific to BDF */
  /*    and PCF fonts.                                                     */
  /*                                                                       */
  /*************************************************************************/


  /**********************************************************************
   *
   * @@enum:
   *    BDF_PropertyType
   *
   * @@description:
   *    A list of BDF property types.
   *
   * @@values:
   *    BDF_PROPERTY_TYPE_NONE ::
   *      Value~0 is used to indicate a missing property.
   *
   *    BDF_PROPERTY_TYPE_ATOM ::
   *      Property is a string atom.
   *
   *    BDF_PROPERTY_TYPE_INTEGER ::
   *      Property is a 32-bit signed integer.
   *
   *    BDF_PROPERTY_TYPE_CARDINAL ::
   *      Property is a 32-bit unsigned integer.
   */
  typedef enum  BDF_PropertyType_
  {
    BDF_PROPERTY_TYPE_NONE     = 0,
    BDF_PROPERTY_TYPE_ATOM     = 1,
    BDF_PROPERTY_TYPE_INTEGER  = 2,
    BDF_PROPERTY_TYPE_CARDINAL = 3

  } BDF_PropertyType;


  /**********************************************************************
   *
   * @@type:
   *    BDF_Property
   *
   * @@description:
   *    A handle to a @@BDF_PropertyRec structure to model a given
   *    BDF/PCF property.
   */
  typedef struct BDF_PropertyRec_*  BDF_Property;


 /**********************************************************************
  *
  * @@struct:
  *    BDF_PropertyRec
  *
  * @@description:
  *    This structure models a given BDF/PCF property.
  *
  * @@fields:
  *    type ::
  *      The property type.
  *
  *    u.atom ::
  *      The atom string, if type is @@BDF_PROPERTY_TYPE_ATOM.  May be
  *      NULL, indicating an empty string.
  *
  *    u.integer ::
  *      A signed integer, if type is @@BDF_PROPERTY_TYPE_INTEGER.
  *
  *    u.cardinal ::
  *      An unsigned integer, if type is @@BDF_PROPERTY_TYPE_CARDINAL.
  */
  typedef struct  BDF_PropertyRec_
  {
    BDF_PropertyType  type;
    union {
      const char*     atom;
      FT_Int32        integer;
      FT_UInt32       cardinal;

    } u;

  } BDF_PropertyRec;


 /**********************************************************************
  *
  * @@function:
  *    FT_Get_BDF_Charset_ID
  *
  * @@description:
  *    Retrieve a BDF font character set identity, according to
  *    the BDF specification.
  *
  * @@input:
  *    face ::
  *       A handle to the input face.
  *
  * @@output:
  *    acharset_encoding ::
  *       Charset encoding, as a C~string, owned by the face.
  *
  *    acharset_registry ::
  *       Charset registry, as a C~string, owned by the face.
  *
  * @@return:
  *   FreeType error code.  0~means success.
  *
  * @@note:
  *   This function only works with BDF faces, returning an error otherwise.
  */
  FT_EXPORT( FT_Error )
  FT_Get_BDF_Charset_ID( FT_Face       face,
                         const char*  *acharset_encoding,
                         const char*  *acharset_registry );


 /**********************************************************************
  *
  * @@function:
  *    FT_Get_BDF_Property
  *
  * @@description:
  *    Retrieve a BDF property from a BDF or PCF font file.
  *
  * @@input:
  *    face :: A handle to the input face.
  *
  *    name :: The property name.
  *
  * @@output:
  *    aproperty :: The property.
  *
  * @@return:
  *   FreeType error code.  0~means success.
  *
  * @@note:
  *   This function works with BDF _and_ PCF fonts.  It returns an error
  *   otherwise.  It also returns an error if the property is not in the
  *   font.
  *
  *   A `property' is a either key-value pair within the STARTPROPERTIES
  *   ... ENDPROPERTIES block of a BDF font or a key-value pair from the
  *   `info->props' array within a `FontRec' structure of a PCF font.
  *
  *   Integer properties are always stored as `signed' within PCF fonts;
  *   consequently, @@BDF_PROPERTY_TYPE_CARDINAL is a possible return value
  *   for BDF fonts only.
  *
  *   In case of error, `aproperty->type' is always set to
  *   @@BDF_PROPERTY_TYPE_NONE.
  */
  FT_EXPORT( FT_Error )
  FT_Get_BDF_Property( FT_Face           face,
                       const char*       prop_name,
                       BDF_PropertyRec  *aproperty );

  /* */

FT_END_HEADER

#endif /* FTBDF_H_ */


/* END */
@


1.3
log
@fastmerge
@
text
@d7 1
a7 1
/*  Copyright 2002, 2003, 2004, 2006, 2009 by                              */
d19 2
a20 2
#ifndef __FTBDF_H__
#define __FTBDF_H__
d56 1
a56 1
   *    FT_PropertyType
d109 2
a110 1
  *      The atom string, if type is @@BDF_PROPERTY_TYPE_ATOM.
d203 1
a203 1
 /* */
d207 1
a207 1
#endif /* __FTBDF_H__ */
@


1.2
log
@merge freetype 2.2.1, reduce diff against ft (rid some xf86 changes)
@
text
@d7 1
a7 1
/*  Copyright 2002, 2003, 2004, 2006 by                                    */
d41 1
a41 1
  /*    BDF Files                                                          */
d44 1
a44 1
  /*    BDF specific API.                                                  */
d47 2
a48 1
  /*    This section contains the declaration of BDF specific functions.   */
d53 21
a73 21
 /**********************************************************************
  *
  * @@enum:
  *    FT_PropertyType
  *
  * @@description:
  *    A list of BDF property types.
  *
  * @@values:
  *    BDF_PROPERTY_TYPE_NONE ::
  *      Value 0 is used to indicate a missing property.
  *
  *    BDF_PROPERTY_TYPE_ATOM ::
  *      Property is a string atom.
  *
  *    BDF_PROPERTY_TYPE_INTEGER ::
  *      Property is a 32-bit signed integer.
  *
  *    BDF_PROPERTY_TYPE_CARDINAL ::
  *      Property is a 32-bit unsigned integer.
  */
d84 9
a92 9
 /**********************************************************************
  *
  * @@type:
  *    BDF_Property
  *
  * @@description:
  *    A handle to a @@BDF_PropertyRec structure to model a given
  *    BDF/PCF property.
  */
d136 1
a136 1
  *    Retrieves a BDF font character set identity, according to
d145 1
a145 1
  *       Charset encoding, as a C string, owned by the face.
d148 1
a148 1
  *       Charset registry, as a C string, owned by the face.
d151 1
a151 1
  *   FreeType error code.  0 means success.
d168 1
a168 1
  *    Retrieves a BDF property from a BDF or PCF font file.
d179 1
a179 1
  *   FreeType error code.  0 means success.
d186 8
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
/*  Copyright 2002, 2003 by                                                */
d41 1
a41 1
  /*    BDF Fonts                                                          */
d44 1
a44 1
  /*    BDF-specific APIs                                                  */
d47 1
a47 1
  /*    This section contains the declaration of BDF-specific functions.   */
d185 1
a185 1
  *   In case of error, "aproperty->type" is always set to
@


1.1.1.1
log
@Import freetype-2.3.5 into the X11 tree. This is a recommended security
update for everyone.
@
text
@d7 1
a7 1
/*  Copyright 2002, 2003, 2004, 2006 by                                    */
d41 1
a41 1
  /*    BDF Files                                                          */
d44 1
a44 1
  /*    BDF specific API.                                                  */
d47 1
a47 1
  /*    This section contains the declaration of BDF specific functions.   */
d185 1
a185 1
  *   In case of error, `aproperty->type' is always set to
@


1.1.115.1
log
@re-base freetype 2.1.8
@
text
@@


1.1.115.2
log
@Import Freetype 2.2.1 with a bunch of security fixes
@
text
@d7 1
a7 1
/*  Copyright 2002, 2003, 2004, 2006 by                                    */
d41 1
a41 1
  /*    BDF Files                                                          */
d44 1
a44 1
  /*    BDF specific API.                                                  */
d47 1
a47 1
  /*    This section contains the declaration of BDF specific functions.   */
d185 1
a185 1
  *   In case of error, `aproperty->type' is always set to
@


1.1.115.3
log
@we need newer freetype for advance calculation
@
text
@d7 1
a7 1
/*  Copyright 2002, 2003, 2004, 2006, 2009 by                              */
d41 1
a41 1
  /*    BDF and PCF Files                                                  */
d44 1
a44 1
  /*    BDF and PCF specific API.                                          */
d47 1
a47 2
  /*    This section contains the declaration of functions specific to BDF */
  /*    and PCF fonts.                                                     */
d52 21
a72 21
  /**********************************************************************
   *
   * @@enum:
   *    FT_PropertyType
   *
   * @@description:
   *    A list of BDF property types.
   *
   * @@values:
   *    BDF_PROPERTY_TYPE_NONE ::
   *      Value~0 is used to indicate a missing property.
   *
   *    BDF_PROPERTY_TYPE_ATOM ::
   *      Property is a string atom.
   *
   *    BDF_PROPERTY_TYPE_INTEGER ::
   *      Property is a 32-bit signed integer.
   *
   *    BDF_PROPERTY_TYPE_CARDINAL ::
   *      Property is a 32-bit unsigned integer.
   */
d83 9
a91 9
  /**********************************************************************
   *
   * @@type:
   *    BDF_Property
   *
   * @@description:
   *    A handle to a @@BDF_PropertyRec structure to model a given
   *    BDF/PCF property.
   */
d135 1
a135 1
  *    Retrieve a BDF font character set identity, according to
d144 1
a144 1
  *       Charset encoding, as a C~string, owned by the face.
d147 1
a147 1
  *       Charset registry, as a C~string, owned by the face.
d150 1
a150 1
  *   FreeType error code.  0~means success.
d167 1
a167 1
  *    Retrieve a BDF property from a BDF or PCF font file.
d178 1
a178 1
  *   FreeType error code.  0~means success.
a184 8
  *   A `property' is a either key-value pair within the STARTPROPERTIES
  *   ... ENDPROPERTIES block of a BDF font or a key-value pair from the
  *   `info->props' array within a `FontRec' structure of a PCF font.
  *
  *   Integer properties are always stored as `signed' within PCF fonts;
  *   consequently, @@BDF_PROPERTY_TYPE_CARDINAL is a possible return value
  *   for BDF fonts only.
  *
@


1.1.115.4
log
@let’s see whether we can’t update freetype2 as well…
@
text
@d7 1
a7 1
/*  Copyright 2002-2016 by                                                 */
d19 2
a20 2
#ifndef FTBDF_H_
#define FTBDF_H_
d56 1
a56 1
   *    BDF_PropertyType
d109 1
a109 2
  *      The atom string, if type is @@BDF_PROPERTY_TYPE_ATOM.  May be
  *      NULL, indicating an empty string.
d202 1
a202 1
  /* */
d206 1
a206 1
#endif /* FTBDF_H_ */
@


1.1.103.1
log
@Import XFree86 4.5.0 directly from vendor anoncvs, -rxf-4_5_0 xc
at anoncvs@@anoncvs.xfree86.org:/cvs (ssh)
@
text
@@
