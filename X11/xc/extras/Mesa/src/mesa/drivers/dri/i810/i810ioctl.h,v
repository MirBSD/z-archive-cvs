head	1.1;
branch	1.1.103;
access;
symbols
	MIRBSD_10_BASE:1.1.103.1
	MIRBSD_9_BASE:1.1.103.1
	MIRBSD_8:1.1.103.1.0.2
	MIRBSD_8_BASE:1.1.103.1
	xf-4_5_0:1.1.103.1
	xwindow:1.1.103;
locks; strict;
comment	@ * @;


1.1
date	2005.03.18.10.42.04;	author tg;	state Exp;
branches
	1.1.103.1;
next	;

1.1.103.1
date	2005.03.18.10.42.04;	author tg;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* $XFree86: xc/extras/Mesa/src/mesa/drivers/dri/i810/i810ioctl.h,v 1.1.1.2 2004/06/10 14:22:48 alanh Exp $ */

#ifndef I810_IOCTL_H
#define I810_IOCTL_H

#include "i810context.h"

void i810EmitPrim( i810ContextPtr imesa );
void i810FlushPrims( i810ContextPtr mmesa ); 
void i810FlushPrimsLocked( i810ContextPtr mmesa );
void i810FlushPrimsGetBuffer( i810ContextPtr imesa );

void i810WaitAgeLocked( i810ContextPtr imesa, int age );
void i810WaitAge( i810ContextPtr imesa, int age );
void i810DmaFinish( i810ContextPtr imesa );
void i810RegetLockQuiescent( i810ContextPtr imesa );
void i810InitIoctlFuncs( struct dd_function_table *functions );
void i810CopyBuffer( const __DRIdrawablePrivate *dpriv );
void i810PageFlip( const __DRIdrawablePrivate *dpriv );
int i810_check_copy(int fd);

#define I810_STATECHANGE(imesa, flag)				\
do {								\
   if (imesa->vertex_low != imesa->vertex_last_prim)		\
      i810FlushPrims(imesa);					\
   imesa->dirty |= flag;					\
} while (0)							\


#define I810_FIREVERTICES(imesa)				\
do {								\
   if (imesa->vertex_buffer) {					\
      i810FlushPrims(imesa);					\
   }								\
} while (0)

static __inline GLuint *i810AllocDmaLow( i810ContextPtr imesa, int bytes )
{
   if (imesa->vertex_low + bytes > imesa->vertex_high) 
      i810FlushPrimsGetBuffer( imesa );

   {
      GLuint *start = (GLuint *)(imesa->vertex_addr + imesa->vertex_low);
      imesa->vertex_low += bytes;
      return start;
   }
}

#endif
@


1.1.103.1
log
@Import XFree86 4.5.0 directly from vendor anoncvs, -rxf-4_5_0 xc
at anoncvs@@anoncvs.xfree86.org:/cvs (ssh)
@
text
@@
