head	1.1;
branch	1.1.103;
access;
symbols
	MIRBSD_10_BASE:1.1.103.1
	MIRBSD_9_BASE:1.1.103.1
	MIRBSD_8:1.1.103.1.0.2
	MIRBSD_8_BASE:1.1.103.1
	xf-4_5_0:1.1.103.1
	xwindow:1.1.103;
locks; strict;
comment	@ * @;


1.1
date	2005.03.18.10.47.37;	author tg;	state Exp;
branches
	1.1.103.1;
next	;

1.1.103.1
date	2005.03.18.10.47.37;	author tg;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/* $XFree86: xc/lib/XvMC/XvMClibint.h,v 1.5 2002/10/16 00:37:33 dawes Exp $ */

#ifndef _XVMCLIBINT_H
#define _XVMCLIBINT_H
#define NEED_REPLIES

#include <X11/Xlibint.h>
#include <X11/extensions/Xvproto.h>
#include <X11/extensions/XvMCproto.h>
#include <X11/extensions/XvMClib.h>

#define XvMCCheckExtension(dpy, i, val) \
  XextCheckExtension(dpy, i, xvmc_extension_name, val)


#if !defined(UNIXCPP)
#define XvMCGetReq(name, req) \
        WORD64ALIGN\
	if ((dpy->bufptr + sizeof(xvmc##name##Req)) > dpy->bufmax)\
		_XFlush(dpy);\
	req = (xvmc##name##Req *)(dpy->last_req = dpy->bufptr);\
	req->reqType = info->codes->major_opcode;\
        req->xvmcReqType = xvmc_##name; \
        req->length = sizeof(xvmc##name##Req)>>2;\
	dpy->bufptr += sizeof(xvmc##name##Req);\
	dpy->request++
#else
#define XvMCGetReq(name, req) \
        WORD64ALIGN\
	if ((dpy->bufptr + sizeof(xvmc/**/name/**/Req)) > dpy->bufmax)\
		_XFlush(dpy);\
	req = (xvmc/**/name/**/Req *)(dpy->last_req = dpy->bufptr);\
	req->reqType = info->codes->major_opcode;\
	req->xvmcReqType = xvmc_/**/name;\
	req->length = sizeof(xvmc/**/name/**/Req)>>2;\
	dpy->bufptr += sizeof(xvmc/**/name/**/Req);\
	dpy->request++
#endif

#endif /* XVMCLIBINT_H */
@


1.1.103.1
log
@Import XFree86 4.5.0 directly from vendor anoncvs, -rxf-4_5_0 xc
at anoncvs@@anoncvs.xfree86.org:/cvs (ssh)
@
text
@@
