head	1.1;
branch	1.1.103;
access;
symbols
	MIRBSD_10_BASE:1.1.103.1
	MIRBSD_9_BASE:1.1.103.1
	MIRBSD_8:1.1.103.1.0.2
	MIRBSD_8_BASE:1.1.103.1
	xf-4_5_0:1.1.103.1
	xwindow:1.1.103;
locks; strict;
comment	@# @;


1.1
date	2005.03.18.10.41.11;	author tg;	state Exp;
branches
	1.1.103.1;
next	;

1.1.103.1
date	2005.03.18.10.41.11;	author tg;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@'\" e
'\"! eqn | mmdoc
'\"macro stdmacro
.ds Vn Version 1.2
.ds Dt 24 September 1999
.ds Re Release 1.2.1
.ds Dp Jan 14 18:30
.ds Dm 01 loadident
.ds Xs 65358 4 loadidentity.gl
.TH GLLOADIDENTITY 3G
.SH NAME
.B "glLoadIdentity
\- replace the current matrix with the identity matrix

.SH C SPECIFICATION
void \f3glLoadIdentity\fP( void )
.nf
.fi

.SH DESCRIPTION
\%\f3glLoadIdentity\fP replaces the current matrix with the identity matrix.
It is semantically equivalent to calling \%\f3glLoadMatrix\fP
with the identity matrix

.ce

.EQ
left (  down 20 { ~ matrix {
   ccol { 1 above 0 above 0 above 0~ }
   ccol { 0 above 1 above 0 above 0~ }
   ccol { 0 above 0 above 1 above 0~ }
   ccol { 0 above 0 above 0 above 1 }
} } ~~ right )
.EN


but in some cases it is more efficient.
.SH ERRORS
\%\f3GL_INVALID_OPERATION\fP is generated if \%\f3glLoadIdentity\fP
is executed between the execution of \%\f3glBegin\fP
and the corresponding execution of \%\f3glEnd\fP.
.SH ASSOCIATED GETS
\%\f3glGet\fP with argument \%\f3GL_MATRIX_MODE\fP
.br
\%\f3glGet\fP with argument \%\f3GL_COLOR_MATRIX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_MODELVIEW_MATRIX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_PROJECTION_MATRIX\fP
.br
\%\f3glGet\fP with argument \%\f3GL_TEXTURE_MATRIX\fP
.SH SEE ALSO
\%\f3glLoadMatrix(3G)\fP,
\%\f3glMatrixMode(3G)\fP,
\%\f3glMultMatrix(3G)\fP,
\%\f3glPushMatrix(3G)\fP
@


1.1.103.1
log
@Import XFree86 4.5.0 directly from vendor anoncvs, -rxf-4_5_0 xc
at anoncvs@@anoncvs.xfree86.org:/cvs (ssh)
@
text
@@
