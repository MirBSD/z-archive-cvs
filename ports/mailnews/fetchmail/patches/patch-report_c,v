head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2008.10.30.20.29.21;	author bsiegert;	state Exp;
branches;
next	;
commitid	100490A17554984BBA6;


desc
@@


1.1
log
@SECURITY: Update fetchmail to 6.3.8, with two security patches.

The fetchmail developers chose to distribute the patches in the WORST
way possible: embedding it, along with the description, in a PGP clearsigned
text file, which mangles "-" lines to "- -". Then they tell you to remove
these by hand. Oh, and the patches do not apply without -l (because of
mangled whitespace). Of course, one of these needs -p0 and the other one
-p1. Sigh.
@
text
@$MirOS$
--- report.c.orig	Tue Mar 14 09:53:08 2006
+++ report.c	Thu Oct 30 22:02:59 2008
@@@@ -238,11 +238,17 @@@@ report_build (FILE *errfp, message, va_a
     rep_ensuresize();
 
 #if defined(VA_START)
-    VA_START (args, message);
     for ( ; ; )
     {
+	/*
+	 * args has to be initialized before every call of vsnprintf(), 
+	 * because vsnprintf() invokes va_arg macro and thus args is 
+	 * undefined after the call.
+	 */
+	VA_START(args, message);
 	n = vsnprintf (partial_message + partial_message_size_used, partial_message_size - partial_message_size_used,
 		       message, args);
+	va_end (args);
 
 	if (n >= 0
 	    && (unsigned)n < partial_message_size - partial_message_size_used)
@@@@ -254,7 +260,6 @@@@ report_build (FILE *errfp, message, va_a
 	partial_message_size += 2048;
 	partial_message = REALLOC (partial_message, partial_message_size);
     }
-    va_end (args);
 #else
     for ( ; ; )
     {
@@@@ -304,12 +309,13 @@@@ report_complete (FILE *errfp, message, v
     rep_ensuresize();
 
 #if defined(VA_START)
-    VA_START (args, message);
     for ( ; ; )
     {
+	VA_START(args, message);
 	n = vsnprintf (partial_message + partial_message_size_used,
 		       partial_message_size - partial_message_size_used,
 		       message, args);
+	va_end(args);
 
 	/* old glibc versions return -1 for truncation */
 	if (n >= 0
@@@@ -322,7 +328,6 @@@@ report_complete (FILE *errfp, message, v
 	partial_message_size += 2048;
 	partial_message = REALLOC (partial_message, partial_message_size);
     }
-    va_end (args);
 #else
     for ( ; ; )
     {
@
