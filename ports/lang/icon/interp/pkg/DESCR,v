head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2008.03.09.17.23.02;	author tg;	state Exp;
branches;
next	1.1;
commitid	10047D41CAA7E715397;

1.1
date	2005.03.18.15.47.41;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.47.41;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@bulk convert FLAVOR to FLAVOUR; nuke unused file; convert to $Mdocdate
@
text
@Icon is a program language that looks superficially like Pascal,
but which supports generators. It also include some very reasonable
X11 support.

The port has not yet been tested on all architectures. In particular,
most will need coexpr support (see openbsd/${ARCH}_coexpr.c and
openbsd/define.h), but we can probably steal that from an existing 
architecture.

The graphics picture loader can also be improved to handle gifs, jpeg, png,
tiff, along with xpm.

The icon compiler is actually no longer supported by the icon project,
though it is nice to have it along. 

The icon variant translators could be rather simply installed.

There is a patch floating around for some unix functions support (sockets,
mainly) that is crying to be adapted... and which has been integrated into
unicon (which is still beta at the moment).

There is a no_x11 flavour, that does not require X11 to run.
@


1.1
log
@Initial revision
@
text
@d22 1
a22 1
There is a no_x11 flavor, that does not require X11 to run.
@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
