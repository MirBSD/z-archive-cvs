head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2008.11.02.17.05.40;	author tg;	state dead;
branches;
next	1.1;
commitid	100490DDDBF34EF580F;

1.1
date	2008.11.02.03.07.50;	author tg;	state Exp;
branches;
next	;
commitid	100490D194917AD9139;


desc
@@


1.2
log
@this, llvm port would look like when both are taken from svn
⇒ still doesn’t work…

Message-ID: <Pine.BSM.4.64L.0811021642240.31401@@herc.mirbsd.org>
reported this upstream:

llvm[4]: Compiling BasicConstraintManager.cpp for Release-Asserts build
mpcxx -I/usr/ports/lang/llvm/w-llvm-58565-0/llvm/include -I/usr/ports/lang/llvm/w-llvm-58565-0/llvm/tools/clang/lib/Analysis  -DNDEBUG -I/usr/ports/lang/llvm/w-llvm-58565-0/llvm/tools/clang/lib/Analysis/../../include -D_GNU_SOURCE -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -O3  -fno-exceptions -fno-rtti -Woverloaded-virtual -pedantic -Wall -W -Wwrite-strings -Wno-long-long -Wunused -Wno-unused-parameter  -c BasicConstraintManager.cpp -o /usr/ports/lang/llvm/w-llvm-58565-0/llvm/tools/clang/lib/Analysis/Release-Asserts/BasicConstraintManager.o
In file included from /usr/ports/lang/llvm/w-llvm-58565-0/llvm/tools/clang/lib/Analysis/../../include/clang/Analysis/PathSensitive/Store.h:18,
                 from /usr/ports/lang/llvm/w-llvm-58565-0/llvm/tools/clang/lib/Analysis/../../include/clang/Analysis/PathSensitive/ConstraintManager.h:18,
                 from BasicConstraintManager.cpp:15:
/usr/ports/lang/llvm/w-llvm-58565-0/llvm/tools/clang/lib/Analysis/../../include/clang/Analysis/PathSensitive/MemRegion.h:246: error: base `clang::AnonTypedRegion' with only non-default constructor in class without a constructor
gmake[4]: *** [/usr/ports/lang/llvm/w-llvm-58565-0/llvm/tools/clang/lib/Analysis/Release-Asserts/BasicConstraintManager.o] Error 1
gmake[4]: Leaving directory `/usr/ports/lang/llvm/w-llvm-58565-0/llvm/tools/clang/lib/Analysis'
@
text
@$MirOS: ports/lang/llvm/patches/patch-tools_clang_lib_AST_Expr_cpp,v 1.1 2008/11/02 03:07:50 tg Exp $
--- tools/clang/lib/AST/Expr.cpp.orig	Thu Jan  1 00:00:00 1970
+++ tools/clang/lib/AST/Expr.cpp	Sun Nov  2 02:45:20 2008
@@@@ -30,9 +30,7 @@@@ using namespace clang;
 /// debugging dumps, etc.
 double FloatingLiteral::getValueAsApproximateDouble() const {
   llvm::APFloat V = getValue();
-  bool ignored;
-  V.convert(llvm::APFloat::IEEEdouble, llvm::APFloat::rmNearestTiesToEven,
-            &ignored);
+  V.convert(llvm::APFloat::IEEEdouble, llvm::APFloat::rmNearestTiesToEven);
   return V.convertToDouble();
 }
 
@@@@ -1032,10 +1030,8 @@@@ bool Expr::isIntegerConstantExpr(llvm::A
     // TODO: Warn on overflow, but probably not here: isIntegerConstantExpr can
     // be called multiple times per AST.
     uint64_t Space[4];
-    bool ignored;
     (void)FL->getValue().convertToInteger(Space, DestWidth, DestSigned,
-                                          llvm::APFloat::rmTowardZero,
-                                          &ignored);
+                                          llvm::APFloat::rmTowardZero);
     Result = llvm::APInt(DestWidth, 4, Space);
     break;
   }
@


1.1
log
@this is as far as I, bugged by nosy ciruZ who wants me to do some ObjC,
get for tonight. it is no fun, we need to find a clang version which fits
better to llvm 2.4 than the one I picked up… or switch to llvm-current…

… then too, this is a PITA to get compiled… I’m not any more too sure
about all of this… C++--
@
text
@d1 1
a1 1
$MirOS$
@

