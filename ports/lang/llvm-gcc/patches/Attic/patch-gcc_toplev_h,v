head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2014.01.07.13.05.48;	author tg;	state dead;
branches;
next	1.1;
commitid	10052CBFBBB38A00412;

1.1
date	2008.11.11.05.30.59;	author tg;	state Exp;
branches;
next	;
commitid	100491918A84F0245BD;


desc
@@


1.2
log
@kill LLVM+Clang and llvm-gcc ports; see transcript of #MirBSD on Freenode of today for details
if any, these may be resurrected build-depending on gcc… probably 4.8+, at least 4.7

note: gcc 4.4 “bootstrap-only” port is almost finished, as preliminary stage
(though we could choose 4.7 for that, too…)
@
text
@$MirOS: ports/lang/llvm-gcc/patches/patch-gcc_toplev_h,v 1.1 2008/11/11 05:30:59 tg Exp $

	Be able to compile llvm-gcc with itself and -std=gnu99

--- gcc/toplev.h.orig	Thu Jan  1 00:00:00 1970
+++ gcc/toplev.h	Tue Nov 11 02:14:22 2008
@@@@ -174,13 +174,19 @@@@ extern int floor_log2                  (
 #  define CTZ_HWI __builtin_ctz
 # endif
 
-extern inline int
+#ifdef __GNUC_STDC_INLINE__
+#define GCC_TOPLEV_H_INLINE	extern inline __attribute((__gnu_inline__))
+#else
+#define GCC_TOPLEV_H_INLINE	extern inline
+#endif
+
+GCC_TOPLEV_H_INLINE int
 floor_log2 (unsigned HOST_WIDE_INT x)
 {
   return x ? HOST_BITS_PER_WIDE_INT - 1 - (int) CLZ_HWI (x) : -1;
 }
 
-extern inline int
+GCC_TOPLEV_H_INLINE int
 exact_log2 (unsigned HOST_WIDE_INT x)
 {
   return x == (x & -x) && x ? (int) CTZ_HWI (x) : -1;
@


1.1
log
@Clean up the port a little
• cut down un unneeded dependencies
• enable threads, workaround enough to make them build
• include some more basic mnbsd configuration
• overhaul mbsd configuration to more match mgcc from base
  (it’s unknown if this one were suitable for native code
  generation, but quite possible)
• enable DWARF2 unwinding (sjlj exceptions didn’t quite work)
• compile fixes for building this with llvm-gcc4.2 gnu99 itself (inlining…)

This compiler has produced a working lang/llvm package.
@
text
@d1 1
a1 1
$MirOS$
@

