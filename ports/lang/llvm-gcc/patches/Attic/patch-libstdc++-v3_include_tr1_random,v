head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2014.01.07.13.05.52;	author tg;	state dead;
branches;
next	1.1;
commitid	10052CBFBBB38A00412;

1.1
date	2008.11.10.20.30.58;	author tg;	state Exp;
branches;
next	;
commitid	10049189A1037809661;


desc
@@


1.2
log
@kill LLVM+Clang and llvm-gcc ports; see transcript of #MirBSD on Freenode of today for details
if any, these may be resurrected build-depending on gcc… probably 4.8+, at least 4.7

note: gcc 4.4 “bootstrap-only” port is almost finished, as preliminary stage
(though we could choose 4.7 for that, too…)
@
text
@$MirOS: ports/lang/llvm-gcc/patches/patch-libstdc++-v3_include_tr1_random,v 1.1 2008/11/10 20:30:58 tg Exp $

	Support for OpenBSD/MirBSD /dev/*random system

--- libstdc++-v3/include/tr1/random.orig	Thu Jan  1 00:00:00 1970
+++ libstdc++-v3/include/tr1/random	Sun Nov  9 23:38:40 2008
@@@@ -1417,7 +1417,22 @@@@ _GLIBCXX_BEGIN_NAMESPACE(tr1)
 
 #ifdef _GLIBCXX_USE_RANDOM_TR1
 
+#if defined(__MirBSD__) || defined(__OpenBSD__)
     explicit
+    random_device(const std::string& __token = "/dev/arandom")
+    {
+      if (__token == "/dev/random" || __token == "/dev/srandom")
+	_M_file = std::fopen("/dev/srandom", "rb");
+      else if (__token == "/dev/urandom" || __token == "/dev/arandom")
+	_M_file = std::fopen(__token.c_str(), "rb");
+      else
+	_M_file = NULL;
+      if (!_M_file)
+	std::__throw_runtime_error(__N("random_device::"
+				       "random_device(const std::string&)"));
+    }
+#else
+    explicit
     random_device(const std::string& __token = "/dev/urandom")
     {
       if ((__token != "/dev/urandom" && __token != "/dev/random")
@@@@ -1425,6 +1440,7 @@@@ _GLIBCXX_BEGIN_NAMESPACE(tr1)
 	std::__throw_runtime_error(__N("random_device::"
 				       "random_device(const std::string&)"));
     }
+#endif
 
     ~random_device()
     { std::fclose(_M_file); }
@


1.1
log
@say hello to llvm-gcc
@
text
@d1 1
a1 1
$MirOS$
@

