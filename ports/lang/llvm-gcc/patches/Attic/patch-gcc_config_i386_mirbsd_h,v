head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2014.01.07.13.05.47;	author tg;	state dead;
branches;
next	1.2;
commitid	10052CBFBBB38A00412;

1.2
date	2008.11.11.05.30.59;	author tg;	state Exp;
branches;
next	1.1;
commitid	100491918A84F0245BD;

1.1
date	2008.11.10.20.30.55;	author tg;	state Exp;
branches;
next	;
commitid	10049189A1037809661;


desc
@@


1.3
log
@kill LLVM+Clang and llvm-gcc ports; see transcript of #MirBSD on Freenode of today for details
if any, these may be resurrected build-depending on gcc… probably 4.8+, at least 4.7

note: gcc 4.4 “bootstrap-only” port is almost finished, as preliminary stage
(though we could choose 4.7 for that, too…)
@
text
@$MirOS: ports/lang/llvm-gcc/patches/patch-gcc_config_i386_mirbsd_h,v 1.2 2008/11/11 05:30:59 tg Exp $
--- gcc/config/i386/mirbsd.h.orig	Tue Nov 11 01:56:31 2008
+++ gcc/config/i386/mirbsd.h	Tue Nov 11 01:56:31 2008
@@@@ -0,0 +1,72 @@@@
+/* $MirOS: ports/lang/llvm-gcc/patches/patch-gcc_config_i386_mirbsd_h,v 1.2 2008/11/11 05:30:59 tg Exp $ */
+
+/* Definitions of target machine for llvm-gcc,
+   for i386/ELF MirOS BSD systems.
+   Copyright (c) 2008 Free Software Foundation, Inc.
+
+This file is part of LLVM-GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 2, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING.  If not, write to
+the Free Software Foundation, 59 Temple Place - Suite 330,
+Boston, MA 02111-1307, USA.  */
+
+
+#define TARGET_OS_CPP_BUILTINS()		\
+  do						\
+    {						\
+      MIRBSD_OS_CPP_BUILTINS();			\
+    }						\
+  while (0)
+
+#undef ASM_APP_ON
+#define ASM_APP_ON "#APP\n"
+
+#undef ASM_APP_OFF
+#define ASM_APP_OFF "#NO_APP\n"
+
+#undef ASM_COMMENT_START
+#define ASM_COMMENT_START "#"
+
+#undef DBX_REGISTER_NUMBER
+#define DBX_REGISTER_NUMBER(n)  svr4_dbx_register_map[n]
+
+/* A C statement to output to the stdio stream FILE an assembler
+   command to advance the location counter to a multiple of 1<<LOG
+   bytes if it is within MAX_SKIP bytes.
+
+   This is used to align code labels according to Intel recommendations.  */
+
+#ifdef HAVE_GAS_MAX_SKIP_P2ALIGN
+#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE, LOG, MAX_SKIP)			\
+  if ((LOG) != 0) {							\
+    if ((MAX_SKIP) == 0) fprintf ((FILE), "\t.p2align %d\n", (LOG));	\
+    else fprintf ((FILE), "\t.p2align %d,,%d\n", (LOG), (MAX_SKIP));	\
+  }
+#endif
+
+/* Default to pcc-struct-return, because this is the ELF abi and
+   we don't care about compatibility with older gcc versions.  */
+#define DEFAULT_PCC_STRUCT_RETURN 1
+
+/* By default, target has a 80387, uses IEEE compatible arithmetic,
+   and returns float values in the 387.  */
+#undef TARGET_SUBTARGET_DEFAULT
+#define TARGET_SUBTARGET_DEFAULT (MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS)
+
+#undef TARGET_VERSION
+#define TARGET_VERSION fprintf (stderr, " (MirPorts llvm-gcc MirOS BSD/i386)");
+
+/* This gets defined in tm.h->linux.h->svr4.h, and keeps us from using
+   libraries compiled with the native cc, so undef it. */
+#undef NO_DOLLAR_IN_LABEL
@


1.2
log
@Clean up the port a little
• cut down un unneeded dependencies
• enable threads, workaround enough to make them build
• include some more basic mnbsd configuration
• overhaul mbsd configuration to more match mgcc from base
  (it’s unknown if this one were suitable for native code
  generation, but quite possible)
• enable DWARF2 unwinding (sjlj exceptions didn’t quite work)
• compile fixes for building this with llvm-gcc4.2 gnu99 itself (inlining…)

This compiler has produced a working lang/llvm package.
@
text
@d1 1
a1 1
$MirOS: ports/lang/llvm-gcc/patches/patch-gcc_config_i386_mirbsd_h,v 1.1 2008/11/10 20:30:55 tg Exp $
d5 1
a5 1
+/* $MirOS: ports/lang/llvm-gcc/patches/patch-gcc_config_i386_mirbsd_h,v 1.1 2008/11/10 20:30:55 tg Exp $ */
@


1.1
log
@say hello to llvm-gcc
@
text
@d1 26
a26 8
$MirOS$

	hacky, not recommended to feed upstream

--- gcc/config/i386/mirbsd.h.orig	Thu Jan  1 00:00:00 1970
+++ gcc/config/i386/mirbsd.h	Sun Nov  9 21:54:02 2008
@@@@ -0,0 +1,87 @@@@
+/* $MirOS$ */
a27 17
+/* This gets defined in tm.h->linux.h->svr4.h, and keeps us from using
+   libraries compiled with the native cc, so undef it. */
+#undef NO_DOLLAR_IN_LABEL
+
+/* Override the default comment-starter of "/".  */
+#undef ASM_COMMENT_START
+#define ASM_COMMENT_START "#"
+
+#undef DBX_REGISTER_NUMBER
+#define DBX_REGISTER_NUMBER(n)  svr4_dbx_register_map[n]
+
+/* This goes away when the math-emulator is fixed */
+#undef TARGET_DEFAULT
+#define TARGET_DEFAULT \
+  (MASK_80387 | MASK_IEEE_FP | MASK_FLOAT_RETURNS | MASK_NO_FANCY_MATH_387)
+
+/* Run-time target specifications */
d32 1
a32 1
+    	MIRBSD_OS_CPP_BUILTINS();		\
a35 2
+/* Assembler format: overall framework.  */
+
d42 2
a43 2
+#undef SET_ASM_OP
+#define SET_ASM_OP	"\t.set\t"
d45 2
a46 2
+/* The following macros were originally stolen from i386v4.h.
+   These have to be defined to get PIC code correct.  */
d48 3
a50 1
+/* Assembler format: dispatch tables.  */
d52 1
a52 1
+/* Assembler format: sections.  */
d54 7
a60 1
+/* Stack & calling: aggregate returns.  */
a65 29
+/* Assembler format: alignment output.  */
+
+#ifdef HAVE_GAS_MAX_SKIP_P2ALIGN
+#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP) \
+  if ((LOG) != 0) {\
+    if ((MAX_SKIP) == 0) fprintf ((FILE), "\t.p2align %d\n", (LOG)); \
+    else fprintf ((FILE), "\t.p2align %d,,%d\n", (LOG), (MAX_SKIP)); \
+  }
+#endif
+
+/* Stack & calling: profiling.  */
+
+/* OpenBSD's profiler recovers all information from the stack pointer.
+   The icky part is not here, but in machine/profile.h.  */
+#undef FUNCTION_PROFILER
+#define FUNCTION_PROFILER(FILE, LABELNO)  \
+  fputs (flag_pic ? "\tcall __mcount@@PLT\n": "\tcall __mcount\n", FILE);
+
+/* Assembler format: exception region output.  */
+
+/* our configuration still doesn't handle dwarf2 correctly */
+#define DWARF2_UNWIND_INFO 0
+
+/* Assembler format: alignment output.  */
+
+/* Note that we pick up ASM_OUTPUT_MAX_SKIP_ALIGN from i386/gas.h */
+
+/* Note that we pick up ASM_OUTPUT_MI_THUNK from unix.h.  */
+
d72 5
a76 1
+#define TARGET_VERSION fprintf (stderr, " (llvm-gcc-MirPorts MirOS BSD/i386)");
@

