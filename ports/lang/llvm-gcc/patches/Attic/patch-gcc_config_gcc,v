head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2014.01.07.13.05.46;	author tg;	state dead;
branches;
next	1.2;
commitid	10052CBFBBB38A00412;

1.2
date	2008.11.11.05.30.58;	author tg;	state Exp;
branches;
next	1.1;
commitid	100491918A84F0245BD;

1.1
date	2008.11.10.20.30.55;	author tg;	state Exp;
branches;
next	;
commitid	10049189A1037809661;


desc
@@


1.3
log
@kill LLVM+Clang and llvm-gcc ports; see transcript of #MirBSD on Freenode of today for details
if any, these may be resurrected build-depending on gcc… probably 4.8+, at least 4.7

note: gcc 4.4 “bootstrap-only” port is almost finished, as preliminary stage
(though we could choose 4.7 for that, too…)
@
text
@$MirOS: ports/lang/llvm-gcc/patches/patch-gcc_config_gcc,v 1.2 2008/11/11 05:30:58 tg Exp $

	MidnightBSD/sparc64, MirBSD/sparc support missing
	MidnightBSD/*, MirBSD/sparc headers missing

--- gcc/config.gcc.orig	Thu Jan  1 00:00:00 1970
+++ gcc/config.gcc	Tue Nov 11 02:24:34 2008
@@@@ -543,6 +543,37 @@@@ case ${target} in
   # Assume that glibc is being used and so __cxa_atexit is provided.
   default_use_cxa_atexit=yes
   ;;
+*-*-midnightbsd*)
+  tmake_file="t-slibgcc-elf-ver t-freebsd"
+  gas=yes
+  gnu_ld=yes
+  case ${enable_threads} in
+    no)
+      fbsd_tm_file="${fbsd_tm_file} freebsd-nthr.h"
+      ;;
+    "" | yes | posix)
+      thread_file='posix'
+      tmake_file="${tmake_file} t-freebsd-thread"
+      ;;
+    *)
+      echo 'Unknown thread configuration for MidnightBSD'
+      exit 1
+      ;;
+  esac
+  fbsd_tm_file="${fbsd_tm_file} midnightbsd.h"
+  ;;
+*-*-mirbsd*)
+  tmake_file="t-libc-ok t-mirbsd t-libgcc-pic"
+  gas=yes
+  gnu_ld=yes
+  case ${enable_threads} in
+    yes)
+      thread_file='posix'
+      tmake_file="${tmake_file} t-openbsd-thread"
+      ;;
+  esac
+  extra_parts="crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o"
+  ;;
 *-*-netbsd*)
   tmake_file="t-slibgcc-elf-ver t-libc-ok t-netbsd t-libgcc-pic"
   gas=yes
@@@@ -1113,6 +1144,20 @@@@ i[34567]86-*-freebsd*)
 	;;
 x86_64-*-freebsd*)
 	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h ${fbsd_tm_file} i386/x86-64.h i386/freebsd.h i386/freebsd64.h"
+	;;
+i?86-*-midnightbsd*)
+	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h"
+	tm_file="${tm_file} ${fbsd_tm_file} i386/midnightbsd.h"
+	;;
+x86_64-*-midnightbsd*)
+	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h"
+	tm_file="${tm_file} ${fbsd_tm_file} i386/x86-64.h i386/midnightbsd64.h"
+	;;
+i?86-*-mirbsd*)
+        tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h"
+	tm_file="${tm_file} mirbsd.h i386/mirbsd.h"
+	gas=yes
+	gnu_ld=yes
 	;;
 i[34567]86-*-netbsdelf*)
 	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h netbsd.h netbsd-elf.h i386/netbsd-elf.h"
@


1.2
log
@Clean up the port a little
• cut down un unneeded dependencies
• enable threads, workaround enough to make them build
• include some more basic mnbsd configuration
• overhaul mbsd configuration to more match mgcc from base
  (it’s unknown if this one were suitable for native code
  generation, but quite possible)
• enable DWARF2 unwinding (sjlj exceptions didn’t quite work)
• compile fixes for building this with llvm-gcc4.2 gnu99 itself (inlining…)

This compiler has produced a working lang/llvm package.
@
text
@d1 1
a1 1
$MirOS: ports/lang/llvm-gcc/patches/patch-gcc_config_gcc,v 1.1 2008/11/10 20:30:55 tg Exp $
@


1.1
log
@say hello to llvm-gcc
@
text
@d1 1
a1 1
$MirOS$
d3 2
a4 1
	MidnightBSD support missing
d7 2
a8 2
+++ gcc/config.gcc	Sun Nov  9 21:40:27 2008
@@@@ -543,6 +543,18 @@@@ case ${target} in
d12 19
d32 1
a32 1
+  tmake_file="t-libc-ok t-openbsd t-libgcc-pic"
d46 1
a46 1
@@@@ -1113,6 +1125,12 @@@@ i[34567]86-*-freebsd*)
d51 8
@

