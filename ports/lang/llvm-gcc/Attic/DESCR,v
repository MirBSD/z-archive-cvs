head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2014.01.07.13.05.44;	author tg;	state dead;
branches;
next	1.2;
commitid	10052CBFBBB38A00412;

1.2
date	2008.11.11.05.30.58;	author tg;	state Exp;
branches;
next	1.1;
commitid	100491918A84F0245BD;

1.1
date	2008.11.10.20.30.54;	author tg;	state Exp;
branches;
next	;
commitid	10049189A1037809661;


desc
@@


1.3
log
@kill LLVM+Clang and llvm-gcc ports; see transcript of #MirBSD on Freenode of today for details
if any, these may be resurrected build-depending on gcc… probably 4.8+, at least 4.7

note: gcc 4.4 “bootstrap-only” port is almost finished, as preliminary stage
(though we could choose 4.7 for that, too…)
@
text
@The GCC C Front-End for LLVM is based upon Apple GCC, which
in turn is based upon FSF GCC 4.2.1 (GNU GPLv2).

This port comes with the C, C++, Objective-C, and Objective-C++
languages enabled and can be considered experimental. Support
for MidnightBSD is mostly missing; MirBSD 10uA3 and up are the
only tested targets (Darwin might work). MirBSD 10 (release)
*will not work*. C++ sucks.

This port is quite hacky, expect rough edges.
@


1.2
log
@Clean up the port a little
• cut down un unneeded dependencies
• enable threads, workaround enough to make them build
• include some more basic mnbsd configuration
• overhaul mbsd configuration to more match mgcc from base
  (it’s unknown if this one were suitable for native code
  generation, but quite possible)
• enable DWARF2 unwinding (sjlj exceptions didn’t quite work)
• compile fixes for building this with llvm-gcc4.2 gnu99 itself (inlining…)

This compiler has produced a working lang/llvm package.
@
text
@@


1.1
log
@say hello to llvm-gcc
@
text
@d10 1
a10 1
This port is badly maintained. Check the dependencies.
@

