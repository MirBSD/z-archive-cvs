head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2007.04.03.19.43.45;	author tg;	state dead;
branches;
next	1.1;
commitid	1004612AC977E789195;

1.1
date	2005.03.18.15.47.53;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.47.53;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@• remove ports that are simply broken, don't work, for too long, with no
  update or update-willing person in sight, kde stuff, web2.0 stuff that
  we don't want in ports (just stuff it into /var/www yourself, it isn't
  that difficult, right?), stuff for which no new version exists/will be
  and some obsd cruft; adjust dependencies
• no BUILD_DEPENDS+=RUN_DEPENDS or vice versa any more, *ever*
• fix some other stuff partially

ok bsiegert@@
@
text
@$OpenBSD: patch-src_bsd_hpi_src_linker_md_c,v 1.1 2003/08/17 01:06:57 naddy Exp $
--- src/bsd/hpi/src/linker_md.c.orig	Sun Jun  8 10:43:23 2003
+++ src/bsd/hpi/src/linker_md.c	Sun Jun  8 10:50:44 2003
@@@@ -251,6 +251,42 @@@@ char *
 dlfname(const void *addr)
 {
 #if defined(__OpenBSD__) || (defined(__FreeBSD__) && (__FreeBSD__ < 3))
+#ifdef __ELF__
+    int tag;
+    Elf_Dyn *dp;
+    struct link_map *lm;
+    Elf_Ehdr *ehdr;
+    Elf_Phdr *phdr;
+    char *s;
+    int i;
+
+    for (dp = _DYNAMIC; (tag = dp->d_tag) != 0; dp++) {
+        if (tag == DT_DEBUG) {
+            lm = ((struct r_debug *)(dp->d_un.d_ptr))->r_map;
+        }
+    }
+
+    for (; lm != NULL; lm = lm->l_next) {
+        ehdr = (Elf_Ehdr *)lm->l_addr;
+        if (ehdr == NULL)
+                continue;
+
+        phdr = (Elf_Phdr *)((char *)lm->l_addr + ehdr->e_phoff);
+
+        for (i = 0; i < ehdr->e_phnum; i++) {
+                switch (phdr[i].p_type) {
+                case PT_LOAD:
+                        s = (char *)phdr[i].p_vaddr + (int)lm->l_addr;
+                        if (addr >= s && addr < s + phdr[i].p_memsz)
+                                return lm->l_name;
+                        break;
+                default:
+                }
+        }
+    }
+
+    return NULL;
+#else
     struct so_map *so_map;
 
     so_map = (struct so_map *)dlopen(0, RTLD_LAZY);
@@@@ -262,6 +298,7 @@@@ dlfname(const void *addr)
 	}
     }
     return so_map ? so_map->som_path : NULL;
+#endif
 #else
     Obj_Entry * so_map;
 
@


1.1
log
@Initial revision
@
text
@@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
