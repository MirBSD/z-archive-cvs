head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2005.11.04.14.02.36;	author tg;	state dead;
branches;
next	1.1;
commitid	35cd436b691eab9c;

1.1
date	2005.03.18.15.47.49;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.47.49;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Preliminary commit, to be ok'd by bsiegert@@ later
* remove Python 2.1
* remove Python 2.2
* make the Python 2.3 Makefile easier by shoving stuff into Makefile.inc
* sync patch-configure_in with OpenBSD
  + cc -shared for a.out platforms on 3.8+
  + support for 3.7, 3.8
* add RCS IDs to all patches/files
* sync port and Makefile.inc better against OpenBSD
* sort flavours
* sort Makefile.inc order
* no_cxx flavour now implies _all_ other no_* (missed expat)
* use ${PICFLAG} not -fPIC (invalid on e.g. Darwin, Interix)
* by default, still pull in only the no_cxx flavour as a dependency
  XXX should make no-no_cxx match no_cxx dependency
* XXX update to 2.3.5 missing, will commit that (and 2.4) later
  after this is ok'd by bsiegert@@

untested, WIP
@
text
@$OpenBSD: patch-Python_thread_pthread_h,v 1.2 2002/05/11 21:35:13 matt Exp $

        This has been submitted to the Python team as patch 554841.

--- Python/thread_pthread.h.orig	Thu Jan 10 06:12:20 2002
+++ Python/thread_pthread.h	Mon Feb 25 15:37:53 2002
@@@@ -128,16 +128,21 @@@@ PyThread_start_new_thread(void (*func)(v
 {
 	pthread_t th;
 	int success;
-#ifdef PTHREAD_SYSTEM_SCHED_SUPPORTED
+#if defined(PTHREAD_SYSTEM_SCHED_SUPPORTED) || defined(THREAD_STACK_SIZE)
 	pthread_attr_t attrs;
 #endif
         dprintf(("PyThread_start_new_thread called\n"));
 	if (!initialized)
 		PyThread_init_thread();
-#ifdef PTHREAD_SYSTEM_SCHED_SUPPORTED
+#if defined(PTHREAD_SYSTEM_SCHED_SUPPORTED) || defined(THREAD_STACK_SIZE)
 	pthread_attr_init(&attrs);
+#endif
+#ifdef PTHREAD_SYSTEM_SCHED_SUPPORTED
 	pthread_attr_setscope(&attrs, PTHREAD_SCOPE_SYSTEM);
 #endif
+#ifdef THREAD_STACK_SIZE
+	pthread_attr_setstacksize(&attrs, THREAD_STACK_SIZE);
+#endif
 
 	success = pthread_create(&th, 
 #if defined(PY_PTHREAD_D4)
@@@@ -153,7 +158,7 @@@@ PyThread_start_new_thread(void (*func)(v
 				 func,
 				 arg
 #elif defined(PY_PTHREAD_STD)
-#ifdef PTHREAD_SYSTEM_SCHED_SUPPORTED
+#if defined(PTHREAD_SYSTEM_SCHED_SUPPORTED) || defined(THREAD_STACK_SIZE)
 				 &attrs,
 #else
 				 (pthread_attr_t*)NULL,
@


1.1
log
@Initial revision
@
text
@@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
