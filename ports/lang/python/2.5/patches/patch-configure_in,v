head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	2010.01.06.17.32.38;	author bsiegert;	state Exp;
branches;
next	1.4;
commitid	1004B44C8F44C0A8C2F;

1.4
date	2009.05.30.20.38.26;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004A2198964D89D064;

1.3
date	2008.12.06.16.03.08;	author tg;	state Exp;
branches;
next	1.2;
commitid	100493AA2505634C2E2;

1.2
date	2008.08.08.20.51.08;	author tg;	state Exp;
branches;
next	1.1;
commitid	100489CB19979A49E0E;

1.1
date	2008.07.15.19.18.54;	author bsiegert;	state Exp;
branches;
next	;
commitid	100487CF80D4D2AD871;


desc
@@


1.5
log
@Make this actually usable on Darwin by installing unstripped binaries.
Also quote the tests for MACOSX_DEPLOYMENT_TARGET, which may be empty,
and drop support for old (<10.3) Mac OS versions. Bump 2.5 patchlevel.
@
text
@$MirOS: ports/lang/python/2.5/patches/patch-configure_in,v 1.4 2009/05/30 20:38:26 tg Exp $
$OpenBSD: patch-configure_in,v 1.4 2004/05/12 22:27:24 brad Exp $
--- configure.in.orig	2008-12-13 15:13:52.000000000 +0100
+++ configure.in	2010-01-05 18:31:34.000000000 +0100
@@@@ -198,10 +198,15 @@@@ fi
 # (which may remove their limitations).
 dnl quadrigraphs "@@<:@@" and "@@:>@@" produce "[" and "]" in the output
 case $ac_sys_system/$ac_sys_release in
+  # MirBSD #10 and up have _ALL_SOURCE
+  MirBSD/@@<:@@123456789@@:>@@@@<:@@0123456789@@:>@@*)
+    define_xopen_source=no	# not needed, since we define _ALL_SOURCE
+    AC_DEFINE(_ALL_SOURCE, 1, [Define on MirBSD to activate all library features])
+    ;;
   # On OpenBSD, select(2) is not available if _XOPEN_SOURCE is defined,
   # even though select is a POSIX function. Reported by J. Ribbens.
   # Reconfirmed for OpenBSD 3.3 by Zachary Hamm, for 3.4 by Jason Ish.
-  OpenBSD/2.* | OpenBSD/3.@@<:@@0123456789@@:>@@ | OpenBSD/4.@@<:@@0123@@:>@@) 
+  OpenBSD/2.* | OpenBSD/3.@@<:@@0123456789@@:>@@ | OpenBSD/4.@@<:@@0123@@:>@@ | MirBSD/*)
     define_xopen_source=no
     # OpenBSD undoes our definition of __BSD_VISIBLE if _XOPEN_SOURCE is
     # also defined. This can be overridden by defining _BSD_SOURCE
@@@@ -1479,7 +1484,7 @@@@ then
 		# Use -undefined dynamic_lookup whenever possible (10.3 and later).
 		# This allows an extension to be used in any Python
 		cur_target=`sw_vers -productVersion | sed 's/\(10\.[[0-9]]*\).*/\1/'`
-		if test ${cur_target} '>' 10.2; then
+		if test "${cur_target}" '>' "10.2"; then
 			cur_target=10.3
 		fi
 		CONFIGURE_MACOSX_DEPLOYMENT_TARGET=${MACOSX_DEPLOYMENT_TARGET-${cur_target}}
@@@@ -1492,25 +1497,11 @@@@ then
 		export MACOSX_DEPLOYMENT_TARGET
 
 		EXPORT_MACOSX_DEPLOYMENT_TARGET=''
-		if test ${MACOSX_DEPLOYMENT_TARGET-${cur_target}} '>' 10.2
-		then
 			if test "${enable_universalsdk}"; then
 				LDFLAGS="-arch i386 -arch ppc -isysroot ${UNIVERSALSDK} ${LDFLAGS}"
 			fi
 			LDSHARED='$(CC) $(LDFLAGS) -bundle -undefined dynamic_lookup'
 			BLDSHARED="$LDSHARED"
-		else
-			LDSHARED='$(CC) $(LDFLAGS) -bundle'
-			if test "$enable_framework" ; then
-				# Link against the framework. All externals should be defined.
-				BLDSHARED="$LDSHARED "'$(PYTHONFRAMEWORKDIR)/Versions/$(VERSION)/$(PYTHONFRAMEWORK)'
-				LDSHARED="$LDSHARED "'$(PYTHONFRAMEWORKPREFIX)/$(PYTHONFRAMEWORKDIR)/Versions/$(VERSION)/$(PYTHONFRAMEWORK)'
-			else
-				# No framework, use the Python app as bundle-loader
-				BLDSHARED="$LDSHARED "'-bundle_loader $(BUILDPYTHON)'
-				LDSHARED="$LDSHARED "'-bundle_loader $(BINDIR)/python$(VERSION)$(EXE)'
-			fi
-		fi
 		;;
 	Linux*|GNU*) LDSHARED='$(CC) -shared';;
 	BSD/OS*/4*) LDSHARED="gcc -shared";;
@@@@ -1521,6 +1512,9 @@@@ then
 		else
 			LDSHARED="ld -Bshareable ${LDFLAGS}"
 		fi;;
+	MidnightBSD* | MirBSD*)
+		LDSHARED="${CC} -shared ${CCSHARED} ${LDFLAGS}"
+		;;
 	OpenBSD*)
 		if [[ "`$CC -dM -E - </dev/null | grep __ELF__`" != "" ]]
 		then
@@@@ -1568,7 +1562,7 @@@@ then
 		 fi;;
 	Linux*|GNU*) CCSHARED="-fPIC";;
 	BSD/OS*/4*) CCSHARED="-fpic";;
-	FreeBSD*|NetBSD*|OpenBSD*|DragonFly*) CCSHARED="-fPIC";;
+	FreeBSD*|MidnightBSD*|MirBSD*|NetBSD*|OpenBSD*|DragonFly*) CCSHARED="-fPIC";;
 	OpenUNIX*|UnixWare*)
 		if test "$GCC" = "yes"
 		then CCSHARED="-fPIC"
@@@@ -1619,7 +1613,7 @@@@ then
 	OpenUNIX*|UnixWare*) LINKFORSHARED="-Wl,-Bexport";;
 	SCO_SV*) LINKFORSHARED="-Wl,-Bexport";;
 	ReliantUNIX*) LINKFORSHARED="-W1 -Blargedynsym";;
-	FreeBSD*|NetBSD*|OpenBSD*|DragonFly*) 
+	FreeBSD*|MidnightBSD*|MirBSD*|NetBSD*|OpenBSD*|DragonFly*) 
 		if [[ "`$CC -dM -E - </dev/null | grep __ELF__`" != "" ]]
 		then
 			LINKFORSHARED="-Wl,--export-dynamic"
@@@@ -1678,9 +1672,10 @@@@ AC_CHECK_LIB(dld, shl_load)	# Dynamic li
 
 # only check for sem_ini if thread support is requested
 if test "$with_threads" = "yes" -o -z "$with_threads"; then
-    AC_SEARCH_LIBS(sem_init, pthread rt posix4) # 'Real Time' functions on Solaris
+#    AC_SEARCH_LIBS(sem_init, pthread rt posix4) # 'Real Time' functions on Solaris
 						# posix4 on Solaris 2.6
 						# pthread (first!) on Linux
+    LIBS="-pthread ${LIBS}"
 fi
 
 # check if we need libintl for locale functions
@@@@ -1881,8 +1876,8 @@@@ yes
     # on HP/UX, pthread.h renames pthread_create to a different symbol name.
     # So we really have to include pthread.h, and then link.
     _libs=$LIBS
-    LIBS="$LIBS -lpthread"
-    AC_MSG_CHECKING([for pthread_create in -lpthread])
+    LIBS="$LIBS -pthread"
+    AC_MSG_CHECKING([for pthread_create in -pthread])
     AC_TRY_LINK([#include <pthread.h>
 
 void * start_routine (void *arg) { exit (0); }], [
@


1.4
log
@• update to the latest 2.5 series Python
• cope for possible hidden dependency on ncursesw
• mark as NOT_FOR_PLATFORM Darwin, because both anakin and jajabings
  are not powered on right now, so I cannot sync PFRAG.dylib, and this
  way we can avoid needing to bump DASH_VER upon doing so (just remove
  the NOT_FOR_PLATFORM clause, commit Makefile and PFRAG.dylib at once)
• make dbhash usable with bsddb185 module ipv bsddb module (gebi@@grml.org)
• make gdbm usable, it’s pulled in anyway if installed, and in py3k there
  will be no bsddb[185] any more anyway (gebi@@grml.org)
• ensure IPv6 is not forcibly enabled on Interix
• add PATCHLEVEL to SUBST_VARS (for egg info)
@
text
@d1 1
a1 1
$MirOS: ports/lang/python/2.5/patches/patch-configure_in,v 1.3 2008/12/06 16:03:08 tg Exp $
d3 2
a4 2
--- configure.in.orig	Sat Dec 13 14:13:29 2008
+++ configure.in	Sat May 30 19:04:26 2009
d22 36
a57 1
@@@@ -1521,6 +1526,9 @@@@ then
d67 1
a67 1
@@@@ -1568,7 +1576,7 @@@@ then
d76 1
a76 1
@@@@ -1619,7 +1627,7 @@@@ then
d85 1
a85 1
@@@@ -1678,9 +1686,10 @@@@ AC_CHECK_LIB(dld, shl_load)	# Dynamic li
d97 1
a97 1
@@@@ -1881,8 +1890,8 @@@@ yes
@


1.3
log
@* remove obsolete ffi patches, now that we use system ffi
* link to CVSweb in changelog
* chmod u+w before ranlibbing
* use -D_ALL_SOURCE on MirBSD #10 and up (to #99 ;)
* fix shlibs for MidnightBSD
* never pick up /usr/local/{include,lib} - this might be dangerous
  (e.g. wrong libintl on mnbsd) and is not controlled by MirPorts
  but not considered part of the base system either
* never pick up a Berkeley/Sleepycat/Oracle DB3 or DB4, because,
  if it's detected, the bsddb185 module is not built automatically
* bump dashver
@
text
@d1 1
a1 1
$MirOS: ports/lang/python/2.5/patches/patch-configure_in,v 1.2 2008/08/08 20:51:08 tg Exp $
d3 2
a4 2
--- configure.in.orig	Wed Feb 13 19:17:17 2008
+++ configure.in	Sat Dec  6 15:18:14 2008
d17 2
a18 2
-  OpenBSD/2.* | OpenBSD/3.@@<:@@0123456789@@:>@@ | OpenBSD/4.@@<:@@0@@:>@@) 
+  OpenBSD/2.* | OpenBSD/3.@@<:@@0123456789@@:>@@ | OpenBSD/4.@@<:@@0@@:>@@ | MirBSD/*)
d22 1
a22 1
@@@@ -1525,6 +1530,9 @@@@ then
d32 1
a32 1
@@@@ -1572,7 +1580,7 @@@@ then
d41 1
a41 1
@@@@ -1623,7 +1631,7 @@@@ then
d50 1
a50 1
@@@@ -1682,9 +1690,10 @@@@ AC_CHECK_LIB(dld, shl_load)	# Dynamic li
d62 1
a62 1
@@@@ -1885,8 +1894,8 @@@@ yes
a72 14
@@@@ -3095,11 +3104,8 @@@@ fi
 # check where readline lives
 # save the value of LIBS so we don't actually link Python with readline
 LIBS_no_readline=$LIBS
-AC_CHECK_LIB(readline, readline)
-if test "$ac_cv_have_readline_readline" = no
-then
-  AC_CHECK_LIB(termcap, readline)
-fi
+AC_CHECK_LIB([readline], [readline],
+    [LIBS="-lreadline -ltermcap $LIBS"], [], [-ltermcap])
 
 # check for readline 2.1
 AC_CHECK_LIB(readline, rl_callback_handler_install,
@


1.2
log
@• pull in libffi, fix ctype module
• use wctype on !Interix !OpenBSD, i.e. locale aware OSes
• build loudly
• fix readline detection and interface
• bump dashver
@
text
@d1 1
a1 1
$MirOS: ports/lang/python/2.5/patches/patch-configure_in,v 1.1 2008/07/15 19:18:54 bsiegert Exp $
d3 11
a13 3
--- configure.in.orig	Wed Feb 13 19:16:54 2008
+++ configure.in	Fri Aug  8 20:27:45 2008
@@@@ -201,7 +201,7 @@@@ case $ac_sys_system/$ac_sys_release in
d18 1
a18 1
+  OpenBSD/2.* | OpenBSD/3.@@<:@@0123456789@@:>@@ | OpenBSD/4.@@<:@@0@@:>@@ | MirBSD/*) 
d22 1
a22 1
@@@@ -1525,6 +1525,7 @@@@ then
d26 3
a28 1
+	MirBSD*) LDSHARED="${CC} -shared ${CCSHARED} ${LDFLAGS}";;
d32 1
a32 1
@@@@ -1572,7 +1573,7 @@@@ then
d41 1
a41 1
@@@@ -1623,7 +1624,7 @@@@ then
d50 1
a50 1
@@@@ -1682,9 +1683,10 @@@@ AC_CHECK_LIB(dld, shl_load)	# Dynamic li
d62 1
a62 1
@@@@ -1885,8 +1887,8 @@@@ yes
d73 1
a73 1
@@@@ -3095,11 +3097,8 @@@@ fi
@


1.1
log
@New python 2.5 port, still experimental. Contains security fixes that are
no longer applied to the unmaintained 2.3 series.
@
text
@d1 1
a1 1
$MirOS: ports/lang/python/2.3/patches/patch-configure_in,v 1.3 2005/11/15 19:16:58 tg Exp $
d3 2
a4 2
--- configure.in.orig	2008-02-13 20:17:17.000000000 +0100
+++ configure.in	2008-04-22 23:11:47.000000000 +0200
d27 1
a27 1
+	FreeBSD*|NetBSD*|OpenBSD*|MirBSD*|DragonFly*) CCSHARED="-fPIC";;
d36 1
a36 1
+	FreeBSD*|NetBSD*|OpenBSD*|MirBSD*|DragonFly*) 
d63 14
@

