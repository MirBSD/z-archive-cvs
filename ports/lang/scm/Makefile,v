head	1.9;
access;
symbols;
locks; strict;
comment	@# @;


1.9
date	2009.08.16.17.17.55;	author tg;	state Exp;
branches;
next	1.8;
commitid	1004A883C9B4C196B76;

1.8
date	2009.08.16.16.27.19;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004A882F1F72B43308;

1.7
date	2008.10.04.19.03.16;	author tg;	state Exp;
branches;
next	1.6;
commitid	10048E7BD9A0842B398;

1.6
date	2008.06.25.15.27.25;	author bsiegert;	state Exp;
branches;
next	1.5;
commitid	100486263CE7988A609;

1.5
date	2008.03.09.17.23.04;	author tg;	state Exp;
branches;
next	1.4;
commitid	10047D41CAA7E715397;

1.4
date	2006.09.14.00.10.27;	author tg;	state Exp;
branches;
next	1.3;
commitid	10045089C0E234154C3;

1.3
date	2006.02.09.11.11.57;	author tg;	state Exp;
branches;
next	1.2;
commitid	10043EB23217A35557B;

1.2
date	2005.07.07.21.22.34;	author bsiegert;	state Exp;
branches;
next	1.1;
commitid	66bc42cd9a7ea714;

1.1
date	2005.03.18.15.47.50;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.47.50;	author tg;	state Exp;
branches;
next	;


desc
@@


1.9
log
@change all V to VSN (ok bsiegert@@) and some DASH_VER while here
@
text
@# $OpenBSD: Makefile,v 1.13 2003/11/13 01:18:45 pvalchev Exp $
# losely based on the FreeBSD port

BROKEN=		Hangs at runtime during build process

COMMENT=			scheme r5 interpreter

CATEGORIES=	lang

VSN=			5d3
DISTNAME=		scm${VSN}
PKGNAME=		scm-${VSN}-${DASH_VER}
EXTRACT_SUFX=		.zip

HOMEPAGE=	http://swissnet.ai.mit.edu/~jaffer/SCM.html

MASTER_SITES=	ftp://ftp.swiss.ai.mit.edu/pub/scm/


WRKDIST=	${WRKDIR}/scm

PERMIT_PACKAGE_CDROM=	Yes
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_FTP=	Yes

SCM_DATA=	COPYING Iedline.scm Init5d3.scm Link.scm \
		Macexp.scm Macro.scm Transcen.scm Tscript.scm mkimpcat.scm \
		disarm.scm build.scm split.scm

FEATURES=arrays bignums cautious edit-line curses posix socket unix \
dynamic-linking i/o-extensions inexact regex

FLAVOURS=no_x11

FLAVOUR?=
.if ${FLAVOUR:L:Mno_x11}
.else
FEATURES+=	x
OPTIONS+=	--compiler-options=-I${X11BASE}/include
OPTIONS+=	--linker-options=-L${X11BASE}/lib
SCM_DATA+=	x11.scm xevent.scm
USE_X11=	Yes
.endif

BUILD_DEPENDS=::devel/slib
RUN_DEPENDS=::devel/slib

post-build:
	cd ${WRKSRC} && ${MAKE_ENV} PATH=${WRKSRC}:${PORTPATH} /bin/sh ./build \
	    -F '${FEATURES}' \
	    ${OPTIONS} \
	    -h system \
	    -o scm \
	    -s "${PREFIX}/share/scm/"
	cd ${WRKSRC} && ${MAKE_ENV} PATH=${WRKSRC}:${PORTPATH} /bin/sh ./build \
	    -F '${FEATURES} sicp' \
	    ${OPTIONS} \
	    -h system \
	    -o scm-sicp \
	    -s "${PREFIX}/share/scm/"

ALL_TARGET=	scmlit

#CFLAGS+=	-Dunix
MAKE_FLAGS=	LD=${_PASS_CC:T:Q}
MAKE_ENV=	SCHEME_LIBRARY_PATH=${LOCALBASE}/share/slib/

do-install:
	${INSTALL_PROGRAM} ${WRKBUILD}/scm	${PREFIX}/bin
	${INSTALL_PROGRAM} ${WRKBUILD}/scm-sicp	${PREFIX}/bin
	${INSTALL_MAN} ${WRKBUILD}/scm.1	${PREFIX}/man/man1
	${INSTALL_DATA_DIR} ${PREFIX}/share/scm
	${INSTALL_DATA_DIR} ${PREFIX}/include/scm
	${INSTALL_DATA} ${WRKBUILD}/scm{,flags,fig}.h ${PREFIX}/include/scm
	sed -e 's,@@PREFIX@@,${TRUEPREFIX},' \
	    <${FILESDIR}/require.scm.in \
	    >${PREFIX}/share/scm/require.scm
.for file in ${SCM_DATA}
	${INSTALL_DATA} ${WRKSRC}/${file} ${PREFIX}/share/scm
.endfor
	${INSTALL_DATA} ${WRKSRC}/scm.info ${PREFIX}/info
.if ${FLAVOUR:L:Mno_x11}
.else
	${INSTALL_DATA} ${WRKSRC}/Xlibscm.info ${PREFIX}/info
.endif

REGRESS_TARGET=	check

.include <bsd.port.mk>
@


1.8
log
@change
‚Ä¢ _PASS_CC back from „Äåmpcc„Äç to „Äå${WRKDIR}/bin/mpcc„Äç (note that the
  former „Äå${WRKDIR:Q}/bin/mpcc„Äç was wrong)
‚Ä¢ all uses of _PASS_CC to either
  ‚Ä£ ${_PASS_CC:T:Q} (when passing, e.g. for libtool ‚Äì this is for use
    when ${WRKDIR}/bin is in $$PATH)
  ‚Ä£ ${_PASS_CC:Q} (when invoking, e.g. in post-build targets ‚Äì only
    these I saw when mechanically doing this; Benny wants to fix the
    remaining ones; I should‚Äôve introduced no more breakage than was)
‚Ä¢ _PASS_CXX/mpcxx just the same

agreed bsiegert@@
@
text
@d10 4
a13 4
V=5d3
DISTNAME=	scm$V
PKGNAME=	scm-$V-0
EXTRACT_SUFX=	.zip
@


1.7
log
@mass conversion from
‚Ä¢ ${CC}
‚Ä¢ "${CC}"
‚Ä¢ '${CC}'
‚Ä¢ ${CC:Q}
to ${_PASS_CC:Q} (or without :Q if it‚Äôs executed, not assigned), and
same for CXX‚Ä¶ most of these are VERY UGLY, prone to break with ccache
and maybe even without‚Ä¶
@
text
@d66 1
a66 1
MAKE_FLAGS=	LD=${_PASS_CC:Q}
@


1.6
log
@Break.

scm: same error as in some OpenBSD platforms.
ghc: only for OpenBSD, needs to be ported explicitly.
@
text
@d66 1
a66 1
MAKE_FLAGS=	LD='${CC}'
@


1.5
log
@bulk convert FLAVOR to FLAVOUR; nuke unused file; convert to $Mdocdate
@
text
@d4 1
a4 3
.if ${MACHINE_ARCH} == "alpha" || ${MACHINE_ARCH} == "vax"
BROKEN=		"hangs at runtime during build process"
.endif
@


1.4
log
@clean up COMMENT and HOMEPAGE; regenerate INDEX (2761, 169 marked as broken, probably many many more) ≠ edited by script with manual postprocessing
@
text
@d36 1
a36 1
FLAVORS=no_x11
d38 2
a39 2
FLAVOR?=
.if ${FLAVOR:L:Mno_x11}
d85 1
a85 1
.if ${FLAVOR:L:Mno_x11}
@


1.3
log
@Fix a few abuses:
| CONFIGURE_ENV=	CPPFLAGS="-I${LOCALBASE}/include/libpng \
|			    -I${LOCALBASE}/include -I${X11BASE}/include" \
| 			LDFLAGS="-L${LOCALBASE}/lib -L${X11BASE}/lib" \
|			PKGCONFIG_PATH=...

* use Benny's pkgconfig module
  - fixes PKGCONFIG_PATH in all places
  - adds explicit dependencies on pkgconfig where needed
* use a new png module
  - also cought a few implicit dependencies
* use a new freetype1 module in two places (more to come?)
* CPPFLAGS, LDFLAGS are in CONFIGURE_ENV anyway, so correctly
  add to them as CPPFLAGS+=<tab>foo instead
* use EXTRA_{M,X,F}AKE_FLAGS
* CC is given anyway, too
* add MAKEINFO= to gnu style

Still doesn't catch all OpenBSD abuses, but most of them.

Brokenness analysis:
* Automatically done
  - CFLAGS+=CPPFLAGS
  - CXXFLAGS+=CPPFLAGS
  - CPPFLAGS+=-I${LOCALBASE}/include
  - LDFLAGS+=-L${LOCALBASE}/lib
  - CONFIGURE_ENV, MAKE_FLAGS+=
    + LDFLAGS=LDFLAGS
    + CPPFLAGS you get the idea
    + CFLAGS
    + CXXFLAGS
    + CC
    + CXX (if USE_CXX)
* Done if USE_X11=Yes
  - CPPFLAGS+=X11BASE/include
  - LDFLAGS+=X11BASE/lib

Tell me if there are problems, but first try adding
an EXTRA_ before MAKE_FLAGS and FAKE_FLAGS.
Remember EXTRA_XAKE_FLAGS get added to both.
@
text
@d8 1
a8 1
COMMENT=	"scheme r5 interpreter"
@


1.2
log
@Semi-automatic update of the remaining ports to the new patchlevel format.

Please correct mistakes if you find them :).
@
text
@d68 1
a68 1
MAKE_FLAGS=	CFLAGS='${CFLAGS}' LD='${CC}'
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
PKGNAME=	scm-$V
@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
