head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	2006.09.14.00.10.23;	author tg;	state Exp;
branches;
next	1.4;
commitid	10045089C0E234154C3;

1.4
date	2006.02.09.11.11.55;	author tg;	state Exp;
branches;
next	1.3;
commitid	10043EB23217A35557B;

1.3
date	2005.04.11.15.55.52;	author tg;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.10.21.50.15;	author tg;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.18.15.47.44;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.47.44;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@clean up COMMENT and HOMEPAGE; regenerate INDEX (2761, 169 marked as broken, probably many many more) ­ edited by script with manual postprocessing
@
text
@# $OpenBSD: Makefile,v 1.22 2003/05/23 05:03:46 pvalchev Exp $
#
# If you are getting compile errors like these:
#     Undefined symbol `_postOutOfMemory' referenced from text segment
#     Undefined symbol `_PtrClass' referenced from text segment
# please read the file pkg/COMPILATION

# This port REQUIRES shared libs, and will not work without them
# (dynamic linking is an essential element of Java).
# At present it is only known to work on i386. 
# Builds nicely, but does not run at all, on sparc (gets 
# nullpointerexceptions everywhere).
ONLY_FOR_PLATFORM=	OpenBSD:*:i386 MirBSD:*:i386 # *:*:sparc *:*:m68k

COMMENT=			Transvirtual's Java JDK1.1 compiler, runtime and libs

DISTNAME=	kaffe-1.0.6
CATEGORIES=	lang

MASTER_SITES=	ftp://ftp.kaffe.org/pub/kaffe/

BUILD_DEPENDS=	::devel/libtool
# Note that "lesstif" is NOT a dependency: Kaffe has its own, Motifless, AWT.
# You must have the X11 client packages installed; no good way to DEPEND this
# (if you don't, I think it will build a command-line-only Java--untested).
LIB_DEPENDS=	jpeg.62.::graphics/jpeg \
		ungif.5.::graphics/libungif \
		png.2.::graphics/png \
		gmp.4.::devel/gmp

HOMEPAGE=	http://www.kaffe.org/

PERMIT_PACKAGE_CDROM=	Yes
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_DISTFILES_FTP=	Yes

# build/configuration variables
USE_CXX=	Yes
USE_X11=	Yes
CONFIGURE_STYLE=gnu
CONFIGURE_ARGS+=${CONFIGURE_SHARED} --enable-static

post-install:
	@@${INSTALL_DATA} ${WRKSRC}/FAQ/FAQ.* ${PREFIX}/share/kaffe

.include <bsd.port.mk>
@


1.4
log
@Fix a few abuses:
| CONFIGURE_ENV=	CPPFLAGS="-I${LOCALBASE}/include/libpng \
|			    -I${LOCALBASE}/include -I${X11BASE}/include" \
| 			LDFLAGS="-L${LOCALBASE}/lib -L${X11BASE}/lib" \
|			PKGCONFIG_PATH=...

* use Benny's pkgconfig module
  - fixes PKGCONFIG_PATH in all places
  - adds explicit dependencies on pkgconfig where needed
* use a new png module
  - also cought a few implicit dependencies
* use a new freetype1 module in two places (more to come?)
* CPPFLAGS, LDFLAGS are in CONFIGURE_ENV anyway, so correctly
  add to them as CPPFLAGS+=<tab>foo instead
* use EXTRA_{M,X,F}AKE_FLAGS
* CC is given anyway, too
* add MAKEINFO= to gnu style

Still doesn't catch all OpenBSD abuses, but most of them.

Brokenness analysis:
* Automatically done
  - CFLAGS+=CPPFLAGS
  - CXXFLAGS+=CPPFLAGS
  - CPPFLAGS+=-I${LOCALBASE}/include
  - LDFLAGS+=-L${LOCALBASE}/lib
  - CONFIGURE_ENV, MAKE_FLAGS+=
    + LDFLAGS=LDFLAGS
    + CPPFLAGS you get the idea
    + CFLAGS
    + CXXFLAGS
    + CC
    + CXX (if USE_CXX)
* Done if USE_X11=Yes
  - CPPFLAGS+=X11BASE/include
  - LDFLAGS+=X11BASE/lib

Tell me if there are problems, but first try adding
an EXTRA_ before MAKE_FLAGS and FAKE_FLAGS.
Remember EXTRA_XAKE_FLAGS get added to both.
@
text
@d15 1
a15 1
COMMENT=	"Transvirtual's Java JDK1.1 compiler, runtime and libs"
@


1.3
log
@the port part of platform refinal
@
text
@a42 3
CONFIGURE_ENV= CFLAGS="${CFLAGS} -I${LOCALBASE}/include" \
	CPPFLAGS="${CPPFLAGS} -I${LOCALBASE}/include" \
	LDFLAGS="${LDFLAGS} -L${LOCALBASE}/lib"
@


1.2
log
@NOPIC_PLATFORMS, LP64_PLATFORMS and general change of
{NOT,ONLY}_FOR_{ARCH{,E,ES},OS} to {NOT,ONLY}_FOR_PLATFORM

some fallout maybe, I hope not
@
text
@d13 1
a13 1
ONLY_FOR_PLATFORM=	OpenBSD:i386 MirBSD:i386 # *:sparc *:m68k
@


1.1
log
@Initial revision
@
text
@d8 7
a32 8
# This port REQUIRES shared libs, and will not work without them
# (dynamic linking is an essential element of Java).
# At present it is only known to work on i386. 
# Builds nicely, but does not run at all, on sparc (gets 
# nullpointerexceptions everywhere).
ONLY_FOR_ARCHS=	i386 # sparc m68k


@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
