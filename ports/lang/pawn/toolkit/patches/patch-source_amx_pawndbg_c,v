head     1.1;
branch   1.1.1;
access   ;
symbols  start:1.1.1.1 tg:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     2008.08.08.15.53.57;  author tg;  state Exp;
branches 1.1.1.1;
next     ;
commitid        100489C6BDF38E32927;

1.1.1.1
date     2008.08.08.15.53.57;  author tg;  state Exp;
branches ;
next     ;
commitid        100489C6BDF38E32927;


desc
@@



1.1
log
@Initial revision
@
text
@$MirOS$
--- source/amx/pawndbg.c.orig	Wed Mar 26 15:28:49 2008
+++ source/amx/pawndbg.c	Fri Aug  8 12:49:52 2008
@@@@ -931,9 +931,15 @@@@ static int remote_rs232(int port,int bau
     newtio.c_cflag=CS8 | CLOCAL | CREAD;
 
     switch (baud) {
+#ifdef B1152000
     case 1152000: newtio.c_cflag |= B1152000; break;
+#endif
+#ifdef B576000
     case  576000: newtio.c_cflag |=  B576000; break;
+#endif
+#ifdef B230400
     case  230400: newtio.c_cflag |=  B230400; break;
+#endif
     case  115200: newtio.c_cflag |=  B115200; break;
     case   57600: newtio.c_cflag |=   B57600; break;
     case   38400: newtio.c_cflag |=   B38400; break;
@@@@ -1186,7 +1192,7 @@@@ static int remote_transfer_rs232(const c
   len=strlen(str);
   send_rs232(str,len);
   getresponse_rs232(str,sizeof str,100);
-  if (sscanf(str,"@@%x",&block)!=1)
+  if (sscanf(str,"@@%zx",&block)!=1)
     block=0;
   /* allocate 1 byte more, for the ACK/NAK prefix */
   if (block==0 || (buffer=malloc((block+1)*sizeof(char)))==NULL) {
@@@@ -2676,6 +2682,8 @@@@ extern AMX_NATIVE_INFO console_Natives[]
       setenv("AMXLIB",libroot,0);
       free(libroot);
     } /* if */
+  #elif !defined(AMX_NODYNALOAD) && defined(MP_PREFIX)
+      setenv("AMXLIB", MP_PREFIX "/libexec/pawn", 0);
   #endif
 
   amx_printf("Pawn command line debugger\n\n");
@


1.1.1.1
log
@Add a couple of ports required for the customer whose job I'll now be
handling: the Pawn scripting language (of which E17's Embryo is a fork),
a gtk-server binary port (for quick testing; we'll probably want a na-
tive one in both GTK+1.2 and GTK+2 flavours), and libffi from base-gcj.
@
text
@@
