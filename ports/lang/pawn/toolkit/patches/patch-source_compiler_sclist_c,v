head     1.1;
branch   1.1.1;
access   ;
symbols  start:1.1.1.1 tg:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     2008.08.08.15.53.57;  author tg;  state Exp;
branches 1.1.1.1;
next     ;
commitid        100489C6BDF38E32927;

1.1.1.1
date     2008.08.08.15.53.57;  author tg;  state Exp;
branches ;
next     ;
commitid        100489C6BDF38E32927;


desc
@@



1.1
log
@Initial revision
@
text
@$MirOS$
--- source/compiler/sclist.c.orig	Fri Jan 25 16:46:03 2008
+++ source/compiler/sclist.c	Fri Aug  8 12:59:53 2008
@@@@ -479,12 +479,15 @@@@ SC_FUNC void delete_heaplisttable(void)
 #if PAWN_CELL_SIZE==64
   #define PRIdC  PRId64
   #define PRIxC  PRIx64
+  #define castC  int64_t
 #elif PAWN_CELL_SIZE==32
   #define PRIdC  "ld"
   #define PRIxC  "lx"
+  #define castC  long
 #else
   #define PRIdC  "d"
   #define PRIxC  "x"
+  #define castC  int
 #endif
 
 static stringlist dbgstrings = {NULL, NULL};
@@@@ -496,7 +499,7 @@@@ SC_FUNC stringlist *insert_dbgfile(const
     char string[_MAX_PATH+40];
     assert(filename!=NULL);
     assert(strlen(filename)+40<sizeof string);
-    sprintf(string,"F:%" PRIxC " %s",code_idx,filename);
+    sprintf(string,"F:%" PRIxC " %s",(castC)code_idx,filename);
     return insert_string(&dbgstrings,string,1);
   } /* if */
   return NULL;
@@@@ -508,7 +511,7 @@@@ SC_FUNC stringlist *insert_dbgline(int l
     char string[40];
     if (linenr>0)
       linenr--;         /* line numbers are zero-based in the debug information */
-    sprintf(string,"L:%" PRIxC " %x",code_idx,linenr);
+    sprintf(string,"L:%" PRIxC " %x",(castC)code_idx,linenr);
     return insert_string(&dbgstrings,string,1);
   } /* if */
   return NULL;
@@@@ -524,10 +527,10 @@@@ SC_FUNC stringlist *insert_dbgsymbol(sym
     /* address tag:name codestart codeend ident vclass [tag:dim ...] */
     if (sym->ident==iFUNCTN) {
       sprintf(string,"S:%" PRIxC " %x:%s %" PRIxC " %" PRIxC " %x %x",
-              sym->addr,sym->tag,symname,sym->addr,sym->codeaddr,sym->ident,sym->vclass);
+              (castC)sym->addr,sym->tag,symname,(castC)sym->addr,(castC)sym->codeaddr,sym->ident,sym->vclass);
     } else {
       sprintf(string,"S:%" PRIxC " %x:%s %" PRIxC " %" PRIxC " %x %x",
-              sym->addr,sym->tag,symname,sym->codeaddr,code_idx,sym->ident,sym->vclass);
+              (castC)sym->addr,sym->tag,symname,(castC)sym->codeaddr,(castC)code_idx,sym->ident,sym->vclass);
     } /* if */
     if (sym->ident==iARRAY || sym->ident==iREFARRAY) {
       #if !defined NDEBUG
@


1.1.1.1
log
@Add a couple of ports required for the customer whose job I'll now be
handling: the Pawn scripting language (of which E17's Embryo is a fork),
a gtk-server binary port (for quick testing; we'll probably want a na-
tive one in both GTK+1.2 and GTK+2 flavours), and libffi from base-gcj.
@
text
@@
