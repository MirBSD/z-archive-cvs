head     1.1;
branch   1.1.1;
access   ;
symbols  start:1.1.1.1 tg:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     2008.08.08.15.53.57;  author tg;  state Exp;
branches 1.1.1.1;
next     ;
commitid        100489C6BDF38E32927;

1.1.1.1
date     2008.08.08.15.53.57;  author tg;  state Exp;
branches ;
next     ;
commitid        100489C6BDF38E32927;


desc
@@



1.1
log
@Initial revision
@
text
@$MirOS$
--- DebugProc.txt.orig	Thu Nov 11 12:52:26 1999
+++ DebugProc.txt	Fri Aug  8 09:42:59 2008
@@@@ -1,10 +1,16 @@@@
++=============================================================+
+| NOTE: This document describes debugging hooks for the older |
+| version 1.8.4 of the toolkit, not the current 3.x versions. |
++=============================================================+
+
+
 Small DebugProc information
 
 When amx_Init() is called, these items may happen (Note that amx->flags will have the 
 AMX_FLAG_BROWSE bit se when initializing):
 
 1) amx->dbgcode==DBG_INIT. This is the appropriate time to initialize anything that needs to be 
-initialized. This will happen before any other dbgcode’s are sent. 
+initialized. This will happen before any other dbgcodes are sent. 
 
 2) amx->dbgcode==DBG_FILE. This will be sent down to tell you what the source file name and number 
 is. This code will eventually be sent for each source file that comprises the amx executable. Later, 
@@@@ -81,7 +87,7 @@@@ DBG_CLRSYM address can be used to clear 
 sent down while executing will be stack relative only. The stack grows down. An example of a stack 
 relative symbol is as follows:
 
-amx->dbgname=”lRet”
+amx->dbgname="lRet"
 amx->dbgparam=0x101
 amx->dbgaddr=-4
 amx->frm=10328
@


1.1.1.1
log
@Add a couple of ports required for the customer whose job I'll now be
handling: the Pawn scripting language (of which E17's Embryo is a fork),
a gtk-server binary port (for quick testing; we'll probably want a na-
tive one in both GTK+1.2 and GTK+2 flavours), and libffi from base-gcj.
@
text
@@
