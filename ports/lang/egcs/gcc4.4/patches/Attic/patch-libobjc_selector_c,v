head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2014.05.29.00.32.31;	author tg;	state dead;
branches;
next	1.1;
commitid	1005386801D215BA0FC;

1.1
date	2009.12.20.23.15.22;	author tg;	state Exp;
branches;
next	;
commitid	1004B2EB00F0DE6848D;


desc
@@


1.2
log
@we are getting closer… this needs -Werror-maybe-reset and sparc support…
@
text
@$MirOS: ports/lang/egcs/gcc4.4/patches/patch-libobjc_selector_c,v 1.1 2009/12/20 23:15:22 tg Exp $
--- libobjc/selector.c.orig	Thu Apr  9 23:22:43 2009
+++ libobjc/selector.c	Sun Dec 20 22:44:47 2009
@@@@ -410,7 +410,7 @@@@ __sel_register_typed_name (const char *n
 	j->sel_types = (const char *) types;
       else {
 	j->sel_types = (char *) objc_malloc (strlen (types) + 1);
-	strcpy ((char *) j->sel_types, types);
+	memcpy ((char *) j->sel_types, types, strlen (types) + 1);
       }
       l = (struct objc_list *) sarray_get_safe (__objc_selector_array, i);
     }
@@@@ -429,7 +429,7 @@@@ __sel_register_typed_name (const char *n
 	j->sel_types = (const char *) types;
       else {
 	j->sel_types = (char *) objc_malloc (strlen (types) + 1);
-	strcpy ((char *) j->sel_types, types);
+	memcpy ((char *) j->sel_types, types, strlen (types) + 1);
       }
       l = 0;
     }
@@@@ -446,7 +446,7 @@@@ __sel_register_typed_name (const char *n
       new_name = name;
     else {
       new_name = (char *) objc_malloc (strlen (name) + 1);
-      strcpy ((char *) new_name, name);
+      memcpy ((char *) new_name, name, strlen (name) + 1);
     }
 
     l = list_cons ((void *) j, l);
@


1.1
log
@I prefer my *.so.* DLLs -fPIC and my libobjc w/o strcpy, sprintf, 10x u
@
text
@d1 1
a1 1
$MirOS$
@

