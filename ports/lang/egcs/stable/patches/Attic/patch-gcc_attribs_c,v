head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2007.04.03.19.43.27;	author tg;	state dead;
branches;
next	1.1;
commitid	1004612AC977E789195;

1.1
date	2005.03.18.15.47.33;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.47.33;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@• remove ports that are simply broken, don't work, for too long, with no
  update or update-willing person in sight, kde stuff, web2.0 stuff that
  we don't want in ports (just stuff it into /var/www yourself, it isn't
  that difficult, right?), stuff for which no new version exists/will be
  and some obsd cruft; adjust dependencies
• no BUILD_DEPENDS+=RUN_DEPENDS or vice versa any more, *ever*
• fix some other stuff partially

ok bsiegert@@
@
text
@$OpenBSD: patch-gcc_attribs_c,v 1.3 2003/06/26 18:39:52 avsm Exp $
--- gcc/attribs.c.orig	Thu Jun 26 18:07:53 2003
+++ gcc/attribs.c	Thu Jun 26 18:19:35 2003
@@@@ -88,6 +88,8 @@@@ static tree handle_deprecated_attribute	
 						 bool *));
 static tree handle_vector_size_attribute PARAMS ((tree *, tree, tree, int,
 						  bool *));
+static tree handle_bounded_attribute    PARAMS ((tree *, tree, tree, int,
+						  bool *));
 static tree vector_size_helper PARAMS ((tree, tree));
 
 /* Table of machine-independent attributes common to all C-like languages.  */
@@@@ -148,6 +150,8 @@@@ static const struct attribute_spec c_com
 			      handle_deprecated_attribute },
   { "vector_size",	      1, 1, false, true, false,
 			      handle_vector_size_attribute },
+  { "bounded",		      3, 4, false, true, false,
+			      handle_bounded_attribute },
   { NULL,                     0, 0, false, false, false, NULL }
 };
 
@@@@ -1355,6 +1359,21 @@@@ vector_size_helper (type, bottom)
   TREE_THIS_VOLATILE (outer) = TREE_THIS_VOLATILE (type);
 
   return outer;
+}
+
+/* Handle a "bounded" attribute; arguments as in
+   struct attribute_spec.handler. 
+   Just a stub for now. */
+
+static tree
+handle_bounded_attribute (node, name, args, flags, no_add_attrs)
+     tree *node ATTRIBUTE_UNUSED;
+     tree name ATTRIBUTE_UNUSED;
+     tree args ATTRIBUTE_UNUSED;
+     int flags ATTRIBUTE_UNUSED;
+     bool *no_add_attrs ATTRIBUTE_UNUSED;
+{
+  return NULL_TREE;
 }
 
 /* Split SPECS_ATTRS, a list of declspecs and prefix attributes, into two
@


1.1
log
@Initial revision
@
text
@@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
