head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2007.04.03.19.43.32;	author tg;	state dead;
branches;
next	1.1;
commitid	1004612AC977E789195;

1.1
date	2005.03.18.15.47.33;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.47.33;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@• remove ports that are simply broken, don't work, for too long, with no
  update or update-willing person in sight, kde stuff, web2.0 stuff that
  we don't want in ports (just stuff it into /var/www yourself, it isn't
  that difficult, right?), stuff for which no new version exists/will be
  and some obsd cruft; adjust dependencies
• no BUILD_DEPENDS+=RUN_DEPENDS or vice versa any more, *ever*
• fix some other stuff partially

ok bsiegert@@
@
text
@$OpenBSD: patch-gcc_toplev_c,v 1.7 2004/02/10 20:14:25 sturm Exp $
--- gcc/toplev.c.orig	2003-10-09 14:53:35.000000000 -0600
+++ gcc/toplev.c	2004-02-08 01:47:51.000000000 -0700
@@@@ -852,7 +852,11 @@@@ int flag_instrument_function_entry_exit 
    On SVR4 targets, it also controls whether or not to emit a
    string identifying the compiler.  */
 
+#ifdef OPENBSD_NATIVE
+int flag_no_ident = 1;
+#else
 int flag_no_ident = 0;
+#endif
 
 /* This will perform a peephole pass before sched2.  */
 int flag_peephole2 = 0;
@@@@ -904,6 +908,9 @@@@ int align_functions_log;
    minimum function alignment.  Zero means no alignment is forced.  */
 int force_align_functions_log;
 
+/* Fake StackProtector option, does nothing. */
+int flag_propolice_protection = 0;
+
 /* Table of supported debugging formats.  */
 static const struct
 {
@@@@ -1186,6 +1193,8 @@@@ static const lang_independent_options f_
    N_("Report on permanent memory allocation at end of run") },
   { "trapv", &flag_trapv, 1,
    N_("Trap for signed overflow in addition / subtraction / multiplication") },
+  { "no-stack-protector", &flag_propolice_protection, 0,
+   N_("Fake disable stack protection") },
   { "new-ra", &flag_new_regalloc, 1,
    N_("Use graph coloring register allocation.") },
 };
@@@@ -1362,6 +1371,9 @@@@ documented_lang_options[] =
   { "-Wwrite-strings",
     N_("Mark strings as 'const char *'") },
   { "-Wno-write-strings", "" },
+  { "-Wbounded",
+    N_("Fake bounds checking option") },
+  { "-Wno-bounded", "" },
 
 #define DEFINE_LANG_NAME(NAME) { NULL, NAME },
 
@@@@ -4898,7 +4910,6 @@@@ parse_options_and_default_flags (argc, a
       flag_schedule_insns_after_reload = 1;
 #endif
       flag_regmove = 1;
-      flag_strict_aliasing = 1;
       flag_delete_null_pointer_checks = 1;
       flag_reorder_blocks = 1;
       flag_reorder_functions = 1;
@@@@ -4906,6 +4917,7 @@@@ parse_options_and_default_flags (argc, a
 
   if (optimize >= 3)
     {
+      flag_strict_aliasing = 1;
       flag_inline_functions = 1;
       flag_rename_registers = 1;
     }
@


1.1
log
@Initial revision
@
text
@@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
