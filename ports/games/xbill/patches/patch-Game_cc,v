head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2010.09.21.21.23.54;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004C992261692DCA0F;

1.1
date	2006.12.30.22.56.58;	author tg;	state Exp;
branches;
next	;
commitid	1004596EEB6254C0AA1;


desc
@@


1.2
log
@use arc4random() a bit more efficiently
@
text
@$MirOS: ports/games/xbill/patches/patch-Game_cc,v 1.1 2006/12/30 22:56:58 tg Exp $
--- Game.cc.orig	Thu Jan 23 16:22:30 1997
+++ Game.cc	Tue Sep 21 20:57:59 2010
@@@@ -10,7 +10,11 @@@@ Game game;
 UI ui;
 
 int Game::RAND(int lb, int ub) {
-	return (rand()%(ub-lb+1) + lb);
+#ifdef arc4random_uniform
+	return (arc4random_uniform(ub-lb+1) + lb);
+#else
+	return (arc4random()%(ub-lb+1) + lb);
+#endif
 }
 
 int Game::MAX(int x, int y) {
@@@@ -200,7 +204,6 @@@@ void Game::main(int argc, char **argv) {
 			case 'l':
 			case 'L': level = MAX (1, atoi(optarg)); break;
 		}
-	srand(time(NULL));
 	ui.make_mainwin();
 	ui.graph_init();
 	ui.clear();
@


1.1
log
@* unbreak
* re-activate red hat pixmaps
* use arc4random(3)
* regenerate patches
* bump patchlevel
@
text
@d1 1
a1 1
$MirOS$
d3 2
a4 2
+++ Game.cc	Sat Dec 30 22:52:23 2006
@@@@ -10,7 +10,7 @@@@ Game game;
d9 3
d13 1
d17 1
a17 1
@@@@ -200,7 +200,6 @@@@ void Game::main(int argc, char **argv) {
@

