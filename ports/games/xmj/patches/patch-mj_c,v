head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2016.06.25.20.34.59;	author tg;	state Exp;
branches;
next	1.1;
commitid	100576EEAFC0BC6AB73;

1.1
date	2016.06.25.19.35.09;	author tg;	state Exp;
branches;
next	;
commitid	100576EDD044DB1AC80;


desc
@@


1.2
log
@exchange the RNG when arc4random is in use, to avoid multiple identical neighbours
@
text
@$MirOS: ports/games/xmj/patches/patch-mj_c,v 1.1 2016/06/25 19:35:09 tg Exp $
--- mj.c.orig	Fri May  5 22:59:30 1989
+++ mj.c	Sat Jun 25 20:23:32 2016
@@@@ -33,6 +33,7 @@@@
 
 
 #include <stdio.h>
+#include <stdlib.h>
 #include <X11/Xos.h>
 #include <sys/ioctl.h>
 
@@@@ -244,11 +245,13 @@@@ char **argv;
     tp = (struct timeval *) malloc(sizeof(struct timeval));
     tz = (struct timezone *) malloc(sizeof(struct timezone));
     gettimeofday(tp, tz);
+#ifndef __OpenBSD__
 #if BSD_RANDOM
     (void) initstate((unsigned) (tp->tv_sec % 255), state, 256);
 #else
     (void) srand ((unsigned) (tp->tv_sec % 255));
 #endif
+#endif
     seed = RANDOM(20011);
     free(tp);
     free(tz);
@@@@ -680,7 +683,9 @@@@ boolean oldimage;
 
 	/* initialize random number counter */
 
+#ifndef __OpenBSD__
 	(void) srandom(seed);
+#endif
 
 	tile_count = 144;
 
@@@@ -699,6 +704,12 @@@@ boolean oldimage;
 
 	    if (!oldimage) { /* not repeating last board */
 
+#ifdef __OpenBSD__
+		do {
+			i = RANDOM(42);
+		} while (pool[i] == 0);
+		pool[i]--;
+#else
 		/* Randomly seed index into pool. Randomly *
 		 *  run up or down list until unused tile  *
 		 *  is found or end of list. If end of     *
@@@@ -709,18 +720,19 @@@@ boolean oldimage;
 
 		ok = FALSE;
 		while (ok == FALSE) {
-			i = RANDOM(41);
+			i = RANDOM(42);
 			/* Up, up, up! */
-			dir = random()&01;
-			while ((i < 42 || i >=0) && pool[i] == 0) (dir) ? i++ : i--;
+			dir = RANDOM(2);
+			while ((i < 42 && i >= 0) && pool[i] == 0) (dir) ? i++ : i--;
 			if (i == 42 || i < 0) { /* Thud! Reverse march! */
-				i = RANDOM(41);
-				while ((i < 42 || i >= 0) && pool[i] == 0) (dir) ? i-- : i++;
+				i = RANDOM(42);
+				while ((i < 42 && i >= 0) && pool[i] == 0) (dir) ? i-- : i++;
 			}
 			if (i == 42 || i < 0) continue; /* Missed! try again */
 			pool[i]--;
 			ok = TRUE;
 		}
+#endif
 
 		/* all flowers and all seasons */
 
@


1.1
log
@modernise
@
text
@d1 1
a1 1
$MirOS$
d3 1
a3 1
+++ mj.c	Sat Jun 25 19:32:48 2016
d36 16
a51 1
@@@@ -711,7 +716,7 @@@@ boolean oldimage;
d53 2
a54 1
 			i = RANDOM(41);
d57 3
a59 2
+			dir = RANDOM(1);
 			while ((i < 42 || i >=0) && pool[i] == 0) (dir) ? i++ : i--;
d61 13
a73 1
 				i = RANDOM(41);
@

