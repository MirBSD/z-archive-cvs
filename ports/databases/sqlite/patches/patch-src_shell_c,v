head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2008.08.26.12.53.59;	author tg;	state Exp;
branches;
next	1.3;
commitid	10048B3FCC805E2DB13;

1.3
date	2007.05.06.20.22.31;	author tg;	state Exp;
branches;
next	1.2;
commitid	100463E38F6534C390D;

1.2
date	2006.10.06.21.01.22;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004526C4385B130D93;

1.1
date	2006.05.04.11.41.25;	author tg;	state Exp;
branches;
next	;
commitid	1004459E85B1C749769;


desc
@@


1.4
log
@update

XXX this uses libtool 2.2, which we downgrade to 1.5, whereas it
XXX would be better to provide a port of such via MirPorts infra

XXX this uses detectheader CONFIGURE_STYLE, which ought to be default
@
text
@$MirOS: ports/databases/sqlite/patches/patch-src_shell_c,v 1.3 2007/05/06 20:22:31 tg Exp $
--- src/shell.c.orig	Tue Aug  5 19:58:27 2008
+++ src/shell.c	Tue Aug 26 12:22:43 2008
@@@@ -64,6 +64,10 @@@@ extern int isatty();
 #include <sys/time.h>
 #include <sys/resource.h>
 
+#include "regexp.h"
+
+__RCSID("$MirOS$");
+
 /* Saved resource information for the beginning of an operation */
 static struct rusage sBegin;
 
@@@@ -956,6 +960,7 @@@@ static void open_db(struct callback_data
     sqlite3_open(p->zDbFilename, &p->db);
     db = p->db;
     if( db && sqlite3_errcode(db)==SQLITE_OK ){
+      sqlite3_regexp_posixext_register(db);
       sqlite3_create_function(db, "shellstatic", 0, SQLITE_UTF8, 0,
           shellstaticFunc, 0, 0);
     }
@


1.3
log
@• regexp (POSIX Extended) extension for the SQLite shell:
  – simplify code paths, error handling; reduce memory/stack usage
• upgrade SQLite to 3.3.17
@
text
@d1 6
a6 6
$MirOS: ports/databases/sqlite/patches/patch-src_shell_c,v 1.2 2006/10/06 21:01:22 tg Exp $
--- src/shell.c.orig	Thu Mar 29 18:39:09 2007
+++ src/shell.c	Sun May  6 20:11:39 2007
@@@@ -61,6 +61,8 @@@@
 extern int isatty();
 #endif
d10 6
a15 5
 /*
 ** If the following flag is set, then command execution stops
 ** at an error if we are not interactive.
@@@@ -891,6 +893,7 @@@@ static void open_db(struct callback_data
   if( p->db==0 ){
d18 5
a22 4
+    sqlite3_regexp_posixext_register(db);
     sqlite3_create_function(db, "shellstatic", 0, SQLITE_UTF8, 0,
         shellstaticFunc, 0, 0);
     if( SQLITE_OK!=sqlite3_errcode(db) ){
@


1.2
log
@update
@
text
@d1 5
a5 5
$MirOS: ports/databases/sqlite/patches/patch-src_shell_c,v 1.1 2006/05/04 11:41:25 tg Exp $
--- src/shell.c.orig	Sat Aug 12 12:48:55 2006
+++ src/shell.c	Fri Oct  6 20:42:30 2006
@@@@ -52,6 +52,8 @@@@
 # define stifle_history(X)
d10 4
a13 4
 /* Make sure isatty() has a prototype.
 */
 extern int isatty();
@@@@ -800,6 +802,7 @@@@ static void open_db(struct callback_data
@


1.1
log
@add "SELECT * FROM foo WHERE field REGEXP blah" support
(GPL-friendly by request of cnuke@@)
@
text
@d1 4
a4 4
$MirOS$
--- src/shell.c.orig	Mon Apr  3 20:15:38 2006
+++ src/shell.c	Thu May  4 11:33:57 2006
@@@@ -48,6 +48,8 @@@@
d13 1
a13 1
@@@@ -793,6 +795,7 @@@@ static void open_db(struct callback_data
@

