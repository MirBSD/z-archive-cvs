head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2016.03.25.23.49.19;	author tg;	state Exp;
branches;
next	;
commitid	10056F5CE886D3D7D76;


desc
@@


1.1
log
@use timet2posix() where applicable (XXX should autoconf this instead)
@
text
@$MirOS$
--- src/os.c.orig	Mon Jun  6 13:08:55 2005
+++ src/os.c	Fri Mar 25 23:41:41 2016
@@@@ -1820,6 +1820,14 @@@@ char *sqliteOsFullPathname(const char *z
 int sqlite_current_time = 0;
 #endif
 
+#if defined(__MirBSD__)
+/* convert time_t to POSIX' idea of it, for the internal algorithms */
+#define uCTp(x) timet2posix(x)
+#else
+/* assume POSIX */
+#define uCTp(x) (x)
+#endif
+
 /*
 ** Find the current time (in Universal Coordinated Time).  Write the
 ** current time and date as a Julian Day number into *prNow and
@@@@ -1829,7 +1837,7 @@@@ int sqliteOsCurrentTime(double *prNow){
 #if OS_UNIX
   time_t t;
   time(&t);
-  *prNow = t/86400.0 + 2440587.5;
+  *prNow = uCTp(t)/86400.0 + 2440587.5;
 #endif
 #if OS_WIN
   FILETIME ft;
@
