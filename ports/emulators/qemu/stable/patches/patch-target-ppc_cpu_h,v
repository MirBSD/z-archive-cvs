head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2015.01.09.15.00.46;	author tg;	state Exp;
branches;
next	1.1;
commitid	10054AFED1E455A6FA1;

1.1
date	2008.05.07.15.46.13;	author tg;	state Exp;
branches;
next	;
commitid	1004821CEB27BD5D7BE;


desc
@@


1.2
log
@POSIX says to use siginfo_t (and “struct siginfo” got dropped by glibc)
@
text
@$MirOS: ports/emulators/qemu/stable/patches/patch-target-ppc_cpu_h,v 1.1 2008/05/07 15:46:13 tg Exp $
--- target-ppc/cpu.h.orig	Sun Sep  4 17:11:09 2005
+++ target-ppc/cpu.h	Tue Nov 15 11:37:45 2005
@@@@ -589,8 +589,7 @@@@ void cpu_ppc_close(CPUPPCState *s);
 /* you can call this signal handler from your SIGBUS and SIGSEGV
    signal handlers to inform the virtual CPU of exceptions. non zero
    is returned if the signal was handled by the virtual CPU.  */
-struct siginfo;
-int cpu_ppc_signal_handler(int host_signum, struct siginfo *info, 
+int cpu_ppc_signal_handler(int host_signum, siginfo_t *info, 
                            void *puc);
 
 void do_interrupt (CPUPPCState *env);
@


1.1
log
@move existing qemu port (0.7.2) to emulators/qemu/stable/
@
text
@d1 1
a1 1
$MirOS: ports/emulators/qemu/patches/patch-target-ppc_cpu_h,v 1.3 2005/11/15 12:25:10 tg Exp $
d10 1
a10 1
+int cpu_ppc_signal_handler(int host_signum, qemu_siginfo *info, 
@

