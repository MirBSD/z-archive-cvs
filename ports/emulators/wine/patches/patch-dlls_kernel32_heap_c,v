head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2008.07.30.00.15.44;	author tg;	state Exp;
branches;
next	;
commitid	100488FB23E3E0E7494;


desc
@@


1.1
log
@Wine 1.0 port, mostly taken from pkgsrc®

request for help: there is probably something about mmap.c the only
thing preventing us from running this… similar to the issues outlined
in the FreeBSD wiki about Wine, but made harder due to W^X probably

This will almost certainly not work on MidnightBSD, have a hard time
working on OpenBSD (especially due to no VFORK_SHM there), is totally
untested on Darwin (and PFRAG.dylib is missing), and not for Interix;
I wonder if it would work on NetBSD® (it should) if MirPorts ran the-
re, but if so, it had IPX support, which theirs doesn’t ☺
@
text
@$MirOS$
--- dlls/kernel32/heap.c.orig	Tue Jun 17 14:07:08 2008
+++ dlls/kernel32/heap.c	Tue Jul 29 17:52:27 2008
@@@@ -1206,7 +1206,7 @@@@ BOOL WINAPI GlobalMemoryStatusEx( LPMEMO
     SYSTEM_INFO si;
 #ifdef linux
     FILE *f;
-#elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__)
+#elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__) || defined(__OpenBSD__)
     unsigned long val;
     int mib[2];
     size_t size_sys;
@@@@ -1278,7 +1278,7 @@@@ BOOL WINAPI GlobalMemoryStatusEx( LPMEMO
         }
         fclose( f );
     }
-#elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__) || defined(__APPLE__)
+#elif defined(__FreeBSD__) || defined(__FreeBSD_kernel__) || defined(__NetBSD__) || defined(__OpenBSD__) || defined(__APPLE__)
     mib[0] = CTL_HW;
     mib[1] = HW_PHYSMEM;
     size_sys = sizeof(val);
@
