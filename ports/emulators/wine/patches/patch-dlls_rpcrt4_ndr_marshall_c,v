head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2008.07.30.00.15.46;	author tg;	state Exp;
branches;
next	;
commitid	100488FB23E3E0E7494;


desc
@@


1.1
log
@Wine 1.0 port, mostly taken from pkgsrc®

request for help: there is probably something about mmap.c the only
thing preventing us from running this… similar to the issues outlined
in the FreeBSD wiki about Wine, but made harder due to W^X probably

This will almost certainly not work on MidnightBSD, have a hard time
working on OpenBSD (especially due to no VFORK_SHM there), is totally
untested on Darwin (and PFRAG.dylib is missing), and not for Interix;
I wonder if it would work on NetBSD® (it should) if MirPorts ran the-
re, but if so, it had IPX support, which theirs doesn’t ☺
@
text
@$MirOS$
--- dlls/rpcrt4/ndr_marshall.c.orig	Tue Jun 17 14:07:08 2008
+++ dlls/rpcrt4/ndr_marshall.c	Tue Jul 29 21:17:44 2008
@@@@ -105,9 +105,9 @@@@ WINE_DEFAULT_DEBUG_CHANNEL(ole);
     } while(0)
 
 #define STD_OVERFLOW_CHECK(_Msg) do { \
-    TRACE("buffer=%d/%d\n", _Msg->Buffer - (unsigned char *)_Msg->RpcMsg->Buffer, _Msg->BufferLength); \
+    TRACE("buffer=%zd/%lu\n", _Msg->Buffer - (unsigned char *)_Msg->RpcMsg->Buffer, (unsigned long)_Msg->BufferLength); \
     if (_Msg->Buffer > (unsigned char *)_Msg->RpcMsg->Buffer + _Msg->BufferLength) \
-        ERR("buffer overflow %d bytes\n", _Msg->Buffer - ((unsigned char *)_Msg->RpcMsg->Buffer + _Msg->BufferLength)); \
+        ERR("buffer overflow %zu bytes\n", (size_t)(_Msg->Buffer - ((unsigned char *)_Msg->RpcMsg->Buffer + _Msg->BufferLength))); \
   } while (0)
 
 #define NDR_TABLE_SIZE 128
@@@@ -372,7 +372,7 @@@@ void * WINAPI NdrAllocate(MIDL_STUB_MESS
     /* check for overflow */
     if (adjusted_len < len)
     {
-        ERR("overflow of adjusted_len %d, len %d\n", adjusted_len, len);
+        ERR("overflow of adjusted_len %zd, len %zd\n", adjusted_len, len);
         RpcRaiseException(RPC_X_BAD_STUB_DATA);
     }
 
@@@@ -2829,7 +2829,7 @@@@ unsigned char * WINAPI NdrComplexStructM
 
     /* save it for use by embedded pointer code later */
     pStubMsg->PointerBufferMark = pStubMsg->BufferStart + pStubMsg->BufferLength;
-    TRACE("difference = 0x%x\n", pStubMsg->PointerBufferMark - pStubMsg->Buffer);
+    TRACE("difference = 0x%tx\n", pStubMsg->PointerBufferMark - pStubMsg->Buffer);
     pointer_buffer_mark_set = 1;
 
     /* restore the original buffer length */
@@@@ -3396,7 +3396,7 @@@@ unsigned char * WINAPI NdrComplexArrayMa
 
     /* save it for use by embedded pointer code later */
     pStubMsg->PointerBufferMark = pStubMsg->BufferStart + pStubMsg->BufferLength;
-    TRACE("difference = 0x%x\n", pStubMsg->Buffer - pStubMsg->BufferStart);
+    TRACE("difference = 0x%tx\n", pStubMsg->Buffer - pStubMsg->BufferStart);
     pointer_buffer_mark_set = 1;
 
     /* restore fields */
@
