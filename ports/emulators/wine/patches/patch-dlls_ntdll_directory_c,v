head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2008.07.30.00.15.45;	author tg;	state Exp;
branches;
next	;
commitid	100488FB23E3E0E7494;


desc
@@


1.1
log
@Wine 1.0 port, mostly taken from pkgsrc®

request for help: there is probably something about mmap.c the only
thing preventing us from running this… similar to the issues outlined
in the FreeBSD wiki about Wine, but made harder due to W^X probably

This will almost certainly not work on MidnightBSD, have a hard time
working on OpenBSD (especially due to no VFORK_SHM there), is totally
untested on Darwin (and PFRAG.dylib is missing), and not for Interix;
I wonder if it would work on NetBSD® (it should) if MirPorts ran the-
re, but if so, it had IPX support, which theirs doesn’t ☺
@
text
@$MirOS$
$NetBSD: patch-ac,v 1.38 2008/01/09 17:46:41 reinoud Exp $
--- dlls/ntdll/directory.c.orig	Tue Jun 17 14:07:08 2008
+++ dlls/ntdll/directory.c	Tue Jul 29 17:52:28 2008
@@@@ -127,6 +127,20 @@@@ static inline int getdents64( int fd, ch
 #endif  /* linux */
 
 #define IS_OPTION_TRUE(ch) ((ch) == 'y' || (ch) == 'Y' || (ch) == 't' || (ch) == 'T' || (ch) == '1')
+#if defined(__NetBSD_Version__) && __NetBSD_Version__ >= 399000800
+/*
+ * workaround for obsolete getdirentries() which returns
+ * the old 32-bit inode struct dirent, while dirent.h has the
+ * new 64-bit inode struct dirent inode since 3.99.8
+ */
+int compat_netbsd_getdirentries(int fd, char *buf, int nbytes, long *basep)
+{
+        *basep = (long)lseek(fd, 0, SEEK_CUR);
+        return getdents(fd, buf, (size_t)nbytes);
+}
+#define getdirentries compat_netbsd_getdirentries
+#endif
+
 #define IS_SEPARATOR(ch)   ((ch) == '\\' || (ch) == '/')
 
 #define INVALID_NT_CHARS   '*','?','<','>','|','"'
@
