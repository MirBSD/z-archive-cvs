head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2007.04.03.19.42.40;	author tg;	state dead;
branches;
next	1.2;
commitid	1004612AC977E789195;

1.2
date	2005.10.11.22.00.18;	author tg;	state Exp;
branches;
next	1.1;
commitid	3d0c434c35fc3eef;

1.1
date	2005.03.18.15.46.01;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.46.01;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@• remove ports that are simply broken, don't work, for too long, with no
  update or update-willing person in sight, kde stuff, web2.0 stuff that
  we don't want in ports (just stuff it into /var/www yourself, it isn't
  that difficult, right?), stuff for which no new version exists/will be
  and some obsd cruft; adjust dependencies
• no BUILD_DEPENDS+=RUN_DEPENDS or vice versa any more, *ever*
• fix some other stuff partially

ok bsiegert@@
@
text
@$MirOS: ports/emulators/wine/wine/patches/patch-misc_winsock_c,v 1.2 2005/10/11 22:00:18 tg Exp $
$OpenBSD: patch-misc_winsock_c,v 1.1 2003/12/31 04:21:45 espie Exp $
--- misc/winsock.c.orig	Sat Feb 20 16:46:17 1999
+++ misc/winsock.c	Tue Oct 11 21:25:30 2005
@@@@ -48,6 +48,17 @@@@
 # include <resolv.h>
 #endif
 
+#ifdef __MirBSD__
+#define	rsipx_network	sipx_addr.ipx_net.l_net
+#define	rsipx_node	sipx_addr.ipx_host.c_host
+#define	rsipx_port	sipx_addr.ipx_port
+#define	IPX_NODE_LEN	IPX_HOSTADDRLEN
+#else
+#define	rsipx_port	sipx_port
+#define	rsipx_network	sipx_network
+#define	rsipx_node	sipx_node
+#endif
+
 #include "wine/winbase16.h"
 #include "winsock.h"
 #include "winnt.h"
@@@@ -590,10 +601,10 @@@@ SOCKET32 WINAPI WINSOCK_accept32(SOCKET3
 		    memcpy(addr, addr2,
 				addrlen32 ? *addrlen32 : sizeof(*addr2));
 		    addr2->sipx_family = WS_AF_IPX;
-		    addr2->sipx_network = ((struct sockaddr_ipx *)addr)->sipx_network;
-		    addr2->sipx_port = ((struct sockaddr_ipx *)addr)->sipx_port;
+		    addr2->sipx_network = ((struct sockaddr_ipx *)addr)->rsipx_network;
+		    addr2->sipx_port = ((struct sockaddr_ipx *)addr)->rsipx_port;
 		    memcpy(addr2->sipx_node,
-			((struct sockaddr_ipx *)addr)->sipx_node, IPX_NODE_LEN);
+			((struct sockaddr_ipx *)addr)->rsipx_node, IPX_NODE_LEN);
 		    free(addr);
 		}
 #endif
@@@@ -609,10 +620,10 @@@@ SOCKET32 WINAPI WINSOCK_accept32(SOCKET3
 			malloc(addrlen32 ? *addrlen32 : sizeof(*addr2));
 	memcpy(addr, addr2, addrlen32 ? *addrlen32 : sizeof(*addr2));
 	addr2->sipx_family = WS_AF_IPX;
-	addr2->sipx_network = ((struct sockaddr_ipx *)addr)->sipx_network;
-	addr2->sipx_port = ((struct sockaddr_ipx *)addr)->sipx_port;
+	addr2->sipx_network = ((struct sockaddr_ipx *)addr)->rsipx_network;
+	addr2->sipx_port = ((struct sockaddr_ipx *)addr)->rsipx_port;
 	memcpy(addr2->sipx_node,
-	    ((struct sockaddr_ipx *)addr)->sipx_node, IPX_NODE_LEN);
+	    ((struct sockaddr_ipx *)addr)->rsipx_node, IPX_NODE_LEN);
 	free(addr);
     }
 #endif
@@@@ -660,9 +671,9 @@@@ INT32 WINAPI WINSOCK_bind32(SOCKET32 s, 
 	name = (struct sockaddr *) malloc(sizeof(struct sockaddr_ipx));
 	memset(name, '\0', sizeof(struct sockaddr_ipx));
 	((struct sockaddr_ipx *)name)->sipx_family = AF_IPX;
-	((struct sockaddr_ipx *)name)->sipx_port = name2->sipx_port;
-	((struct sockaddr_ipx *)name)->sipx_network = name2->sipx_network;
-	memcpy(((struct sockaddr_ipx *)name)->sipx_node,
+	((struct sockaddr_ipx *)name)->rsipx_port = name2->sipx_port;
+	((struct sockaddr_ipx *)name)->rsipx_network = name2->sipx_network;
+	memcpy(((struct sockaddr_ipx *)name)->rsipx_node,
 		name2->sipx_node, IPX_NODE_LEN);
 	namelen = sizeof(struct sockaddr_ipx);
       }
@@@@ -776,9 +787,9 @@@@ INT32 WINAPI WINSOCK_connect32(SOCKET32 
 	name = (struct sockaddr *) malloc(sizeof(struct sockaddr_ipx));
 	memset(name, '\0', sizeof(struct sockaddr_ipx));
 	((struct sockaddr_ipx *)name)->sipx_family = AF_IPX;
-	((struct sockaddr_ipx *)name)->sipx_port = name2->sipx_port;
-	((struct sockaddr_ipx *)name)->sipx_network = name2->sipx_network;
-	memcpy(((struct sockaddr_ipx *)name)->sipx_node,
+	((struct sockaddr_ipx *)name)->rsipx_port = name2->sipx_port;
+	((struct sockaddr_ipx *)name)->rsipx_network = name2->sipx_network;
+	memcpy(((struct sockaddr_ipx *)name)->rsipx_node,
 		name2->sipx_node, IPX_NODE_LEN);
 	namelen = sizeof(struct sockaddr_ipx);
     }
@@@@ -855,10 +866,10 @@@@ INT32 WINAPI WINSOCK_getpeername32(SOCKE
 				malloc(namelen ? *namelen : sizeof(*name2));
 		memcpy(name, name2, namelen ? *namelen : sizeof(*name2));
 		name2->sipx_family = WS_AF_IPX;
-		name2->sipx_network = ((struct sockaddr_ipx *)name)->sipx_network;
-		name2->sipx_port = ((struct sockaddr_ipx *)name)->sipx_port;
+		name2->sipx_network = ((struct sockaddr_ipx *)name)->rsipx_network;
+		name2->sipx_port = ((struct sockaddr_ipx *)name)->rsipx_port;
 		memcpy(name2->sipx_node,
-			((struct sockaddr_ipx *)name)->sipx_node, IPX_NODE_LEN);
+			((struct sockaddr_ipx *)name)->rsipx_node, IPX_NODE_LEN);
 		free(name);
 	    }
 #endif
@@@@ -871,10 +882,10 @@@@ INT32 WINAPI WINSOCK_getpeername32(SOCKE
 	name = (struct sockaddr *) malloc(namelen ? *namelen : sizeof(*name2));
 	memcpy(name, name2, namelen ? *namelen : sizeof(*name2));
 	name2->sipx_family = WS_AF_IPX;
-	name2->sipx_network = ((struct sockaddr_ipx *)name)->sipx_network;
-	name2->sipx_port = ((struct sockaddr_ipx *)name)->sipx_port;
+	name2->sipx_network = ((struct sockaddr_ipx *)name)->rsipx_network;
+	name2->sipx_port = ((struct sockaddr_ipx *)name)->rsipx_port;
 	memcpy(name2->sipx_node,
-		((struct sockaddr_ipx *)name)->sipx_node, IPX_NODE_LEN);
+		((struct sockaddr_ipx *)name)->rsipx_node, IPX_NODE_LEN);
 	free(name);
     }
 #endif
@@@@ -921,10 +932,10 @@@@ INT32 WINAPI WINSOCK_getsockname32(SOCKE
 				malloc(namelen ? *namelen : sizeof(*name2));
 		memcpy(name, name2, namelen ? *namelen : sizeof(*name2));
 		name2->sipx_family = WS_AF_IPX;
-		name2->sipx_network = ((struct sockaddr_ipx *)name)->sipx_network;
-		name2->sipx_port = ((struct sockaddr_ipx *)name)->sipx_port;
+		name2->sipx_network = ((struct sockaddr_ipx *)name)->rsipx_network;
+		name2->sipx_port = ((struct sockaddr_ipx *)name)->rsipx_port;
 		memcpy(name2->sipx_node,
-			((struct sockaddr_ipx *)name)->sipx_node, IPX_NODE_LEN);
+			((struct sockaddr_ipx *)name)->rsipx_node, IPX_NODE_LEN);
 		free(name);
 	    }
 #endif
@@@@ -937,10 +948,10 @@@@ INT32 WINAPI WINSOCK_getsockname32(SOCKE
 	name = (struct sockaddr *) malloc(namelen ? *namelen : sizeof(*name2));
 	memcpy(name, name2, namelen ? *namelen : sizeof(*name2));
 	name2->sipx_family = WS_AF_IPX;
-	name2->sipx_network = ((struct sockaddr_ipx *)name)->sipx_network;
-	name2->sipx_port = ((struct sockaddr_ipx *)name)->sipx_port;
+	name2->sipx_network = ((struct sockaddr_ipx *)name)->rsipx_network;
+	name2->sipx_port = ((struct sockaddr_ipx *)name)->rsipx_port;
 	memcpy(name2->sipx_node,
-		((struct sockaddr_ipx *)name)->sipx_node, IPX_NODE_LEN);
+		((struct sockaddr_ipx *)name)->rsipx_node, IPX_NODE_LEN);
 	free(name);
     }
 #endif
@@@@ -1237,10 +1248,10 @@@@ INT32 WINAPI WINSOCK_recvfrom32(SOCKET32
 				malloc(fromlen32 ? *fromlen32 : sizeof(*from2));
 	    memcpy(from, from2, fromlen32 ? *fromlen32 : sizeof(*from2));
 	    from2->sipx_family = WS_AF_IPX;
-	    from2->sipx_network = ((struct sockaddr_ipx *)from)->sipx_network;
-	    from2->sipx_port = ((struct sockaddr_ipx *)from)->sipx_port;
+	    from2->sipx_network = ((struct sockaddr_ipx *)from)->rsipx_network;
+	    from2->sipx_port = ((struct sockaddr_ipx *)from)->rsipx_port;
 	    memcpy(from2->sipx_node,
-			((struct sockaddr_ipx *)from)->sipx_node, IPX_NODE_LEN);
+			((struct sockaddr_ipx *)from)->rsipx_node, IPX_NODE_LEN);
 	    free(from);
 	}
 #endif
@@@@ -1256,10 +1267,10 @@@@ INT32 WINAPI WINSOCK_recvfrom32(SOCKET32
 				malloc(fromlen32 ? *fromlen32 : sizeof(*from2));
 	memcpy(from, from2, fromlen32 ? *fromlen32 : sizeof(*from2));
 	from2->sipx_family = WS_AF_IPX;
-	from2->sipx_network = ((struct sockaddr_ipx *)from)->sipx_network;
-	from2->sipx_port = ((struct sockaddr_ipx *)from)->sipx_port;
+	from2->sipx_network = ((struct sockaddr_ipx *)from)->rsipx_network;
+	from2->sipx_port = ((struct sockaddr_ipx *)from)->rsipx_port;
 	memcpy(from2->sipx_node,
-		((struct sockaddr_ipx *)from)->sipx_node, IPX_NODE_LEN);
+		((struct sockaddr_ipx *)from)->rsipx_node, IPX_NODE_LEN);
 	free(from);
     }
 #endif
@@@@ -1423,9 +1434,9 @@@@ INT32 WINAPI WINSOCK_sendto32(SOCKET32 s
 	    to = (struct sockaddr *) malloc(sizeof(struct sockaddr_ipx));
 	    memset(to, '\0', sizeof(struct sockaddr_ipx));
 	    ((struct sockaddr_ipx *)to)->sipx_family = AF_IPX;
-	    ((struct sockaddr_ipx *)to)->sipx_port = to2->sipx_port;
-	    ((struct sockaddr_ipx *)to)->sipx_network = to2->sipx_network;
-	    memcpy(((struct sockaddr_ipx *)to)->sipx_node,
+	    ((struct sockaddr_ipx *)to)->rsipx_port = to2->sipx_port;
+	    ((struct sockaddr_ipx *)to)->rsipx_network = to2->sipx_network;
+	    memcpy(((struct sockaddr_ipx *)to)->rsipx_node,
 			to2->sipx_node, IPX_NODE_LEN);
 	    tolen = sizeof(struct sockaddr_ipx);
 	}
@@@@ -1964,8 +1975,8 @@@@ HANDLE16 WINAPI WSAAsyncGetHostByName16(
 {
   LPWSINFO              pwsi = wsi_find(GetCurrentTask());
 
-  TRACE(winsock, "(%08x): hwnd %04x, msg %04x, host %s, 
-buffer %i\n", (unsigned)pwsi, hWnd, uMsg, (name)?name:NULL_STRING, (int)buflen );
+  TRACE(winsock, "(%08x): hwnd %04x, msg %04x, host %s, \n"
+"buffer %i\n", (unsigned)pwsi, hWnd, uMsg, (name)?name:NULL_STRING, (int)buflen );
 
   if( pwsi )
     return __WSAsyncDBQuery(pwsi, hWnd, uMsg, 0, name, 0,
@


1.2
log
@make wine compile again with gcc-3.4 (not so forgiving)
and changed IPX header files
@
text
@d1 1
a1 1
$MirOS$
@


1.1
log
@Initial revision
@
text
@d1 1
d3 172
a174 3
--- misc/winsock.c.orig	2003-12-31 04:56:34.000000000 +0100
+++ misc/winsock.c	2003-12-31 04:56:42.000000000 +0100
@@@@ -1964,8 +1964,8 @@@@ HANDLE16 WINAPI WSAAsyncGetHostByName16(
@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
