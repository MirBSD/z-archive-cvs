head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2007.04.03.19.42.43;	author tg;	state dead;
branches;
next	1.1;
commitid	1004612AC977E789195;

1.1
date	2005.03.18.15.46.01;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.46.01;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@• remove ports that are simply broken, don't work, for too long, with no
  update or update-willing person in sight, kde stuff, web2.0 stuff that
  we don't want in ports (just stuff it into /var/www yourself, it isn't
  that difficult, right?), stuff for which no new version exists/will be
  and some obsd cruft; adjust dependencies
• no BUILD_DEPENDS+=RUN_DEPENDS or vice versa any more, *ever*
• fix some other stuff partially

ok bsiegert@@
@
text
@$MirOS: ports/emulators/wine/winesetup/patches/patch-tcltk_m4,v 1.1 2005/03/18 15:46:01 tg Exp $

XXX broken, need itcl/itk

--- tcltk.m4.orig	2004-02-25 20:29:14.000000000 +0000
+++ tcltk.m4	2004-02-25 20:35:20.000000000 +0000
@@@@ -33,10 +33,16 @@@@ AC_DEFUN(CHECK_TCLTK, 
 
   # add --with-tcltk command
   AC_ARG_WITH(tcl,
-    [  --with-tcltk=DIR        directory where statically compiled tcl, tk and itcl is]
+    [  --with-tcltk=DIR        directory where tcl and tk is]
   )
   AC_SUBST(with_tcltk)
 
+  # add --with-itcltk command
+  AC_ARG_WITH(tcl,
+    [  --with-itcltk=DIR        directory where statically compiled itcl and itk is]
+  )
+  AC_SUBST(with_itcltk)
+
   # var for compiler
   AC_SUBST(TCLTK_INC)
   TCLTK_INC=""  
@@@@ -70,65 +76,65 @@@@ AC_DEFUN(CHECK_TCLTK, 
     ############
     # check tcl
     ############
-    FileName="${with_tcltk}/local/lib/tclConfig.sh"
+    FileName="${with_tcltk}/lib/tcl${TCL_VERSION}/tclConfig.sh"
     if ! TestFile $FileName ; then break ; fi
     . $FileName
 
-    FileName="${with_tcltk}/local/bin/tclsh${TCL_VERSION}"
+    FileName="${with_tcltk}/bin/tclsh${TCL_VERSION}"
     if ! TestFile $FileName ; then break ; fi
 
-    FileName="${with_tcltk}/local/lib/libtcl${TCL_VERSION}.a"
+    FileName="${with_tcltk}/lib/libtcl$(echo ${TCL_VERSION}|sed 's/\.//').a"
     if ! TestFile $FileName ; then break ; fi
     TCLTK_LD="$TCLTK_LD $FileName"
 
-    FileName="${with_tcltk}/tcl${TCL_VERSION}${TCL_PATCH_LEVEL}/generic"
+    FileName="${with_tcltk}/include/tcl${TCL_VERSION}/generic"
     if ! TestDir $FileName ; then break ; fi
     TCLTK_INC="$TCLTK_INC -I${FileName}"
     
     ###############
     # check for tk
     ###############
-    FileName="${with_tcltk}/local/lib/tkConfig.sh"
+    FileName="${with_tcltk}/lib/tk${TK_VERSION}/tkConfig.sh"
     if ! TestFile $FileName ; then break ; fi
     . $FileName
 
-    FileName="${with_tcltk}/local/lib/libtk${TK_VERSION}.a"
+    FileName="${with_tcltk}/lib/libtk$(echo ${TK_VERSION}|sed 's/\.//').a"
     if ! TestFile $FileName ; then break ; fi
     TCLTK_LD="$TCLTK_LD $FileName"
 
-    FileName="${with_tcltk}/tk${TK_VERSION}${TK_PATCH_LEVEL}/generic"
+    FileName="${with_tcltk}/include/tk${TK_VERSION}/generic"
     if ! TestDir $FileName ; then break ; fi
     TCLTK_INC="$TCLTK_INC -I${FileName}"
 
     #################
     # check for itcl
     #################
-    FileName="${with_tcltk}/local/lib/itclConfig.sh"
+    FileName="${with_itcltk}/local/lib/itclConfig.sh"
     if ! TestFile $FileName ; then break ; fi
     . $FileName
 
-    FileName="${with_tcltk}/local/lib/libitcl${ITCL_VERSION}.a"
+    FileName="${with_itcltk}/local/lib/libitcl${ITCL_VERSION}.a"
     if ! TestFile $FileName ; then break ; fi
     TCLTK_LD="$TCLTK_LD $FileName"
 
-    FileName="${with_tcltk}/itcl${ITCL_VERSION}.${ITCL_RELEASE_LEVEL}/itcl/generic"
+    FileName="${with_itcltk}/itcl${ITCL_VERSION}.${ITCL_RELEASE_LEVEL}/itcl/generic"
     if ! TestDir $FileName ; then break ; fi
     TCLTK_INC="$TCLTK_INC -I${FileName}"
     #################
     # check for itk
     #################
-    FileName="${with_tcltk}/local/lib/libitk${ITCL_VERSION}.a"
+    FileName="${with_itcltk}/local/lib/libitk${ITCL_VERSION}.a"
     if ! TestFile $FileName ; then break ; fi
     TCLTK_LD="$TCLTK_LD $FileName"
 
-    FileName="${with_tcltk}/itcl${ITCL_VERSION}.${ITCL_RELEASE_LEVEL}/itk/generic"
+    FileName="${with_itcltk}/itcl${ITCL_VERSION}.${ITCL_RELEASE_LEVEL}/itk/generic"
     if ! TestDir $FileName ; then break ; fi
     TCLTK_INC="$TCLTK_INC -I${FileName}"
 
     # mktclapp is required, let's look for it.
-    # we use our version of mktclapp, so we'll accept just one in tcltk dir
+    # we use our version of mktclapp, so we'll accept just one in itcltk dir
     # AC_CHECK_PROG(MKTCLAPP,mktclapp,mktclapp,,)
-    AC_CHECK_PROG(MKTCLAPP,mktclapp,$with_tcltk/local/bin/mktclapp,no,$with_tcltk/local/bin)
+    AC_CHECK_PROG(MKTCLAPP,mktclapp,$with_itcltk/local/bin/mktclapp,no,$with_itcltk/local/bin)
     if test $MKTCLAPP = "no" ; then break ; fi
 
     TCLTK_CONF_OK=YES
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$MirOS$
@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
