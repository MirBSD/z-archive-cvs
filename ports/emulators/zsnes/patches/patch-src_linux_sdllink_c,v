head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2008.11.03.19.04.39;	author tg;	state Exp;
branches;
next	1.2;
commitid	100490F4AE20E132F01;

1.2
date	2005.10.02.19.25.35;	author tg;	state Exp;
branches;
next	1.1;
commitid	6107434033f5d23b;

1.1
date	2005.03.18.15.46.03;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.46.03;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@â€¢ apply some patches from zsnes CVS
â€¢ fix some things, e.g. code placement in .data section
â€¢ allow loading gzipâ€™d ROMs with â€˜.gzâ€™ extension
â€¢ on MirBSD, allow for loading gzipâ€™d files (even split ROMs)
  when they have no â€˜.gzâ€™ extension too, using gzfopen(3)
â€¢ simplify the port
â€¢ honour our CFLAGS better
@
text
@$MirOS$
$OpenBSD: patch-src_linux_sdllink_c,v 1.1 2002/08/31 04:19:14 wcobb Exp $
--- src/linux/sdllink.c.orig	Fri Jan 14 13:10:56 2005
+++ src/linux/sdllink.c	Mon Nov  3 17:08:37 2008
@@@@ -391,14 +391,24 @@@@ int Main_Proc(void)
 				if(cvidmode != 17) {
 				    surface = SDL_SetVideoMode(WindowWidth, WindowHeight,
 					    BitDepth, surface->flags & ~SDL_RESIZABLE);
-					adjustMouseXScale();
-					adjustMouseYScale();
+				    if (surface == NULL) {
+				    	printf("SDL_SetVideoMode: %s\n",
+					    SDL_GetError());
+					break;
+				    }
+				    adjustMouseXScale();
+				    adjustMouseYScale();
 				    break;
 				}
 				WindowWidth = SurfaceX = event.resize.w;
 				WindowHeight = SurfaceY = event.resize.h;
 				surface = SDL_SetVideoMode(WindowWidth,
 				    WindowHeight, BitDepth, surface->flags);
+				if (surface == NULL) {
+				    	printf("SDL_SetVideoMode: %s\n",
+					    SDL_GetError());
+					break;
+				}
 				adjustMouseXScale();
 				adjustMouseYScale();
 				glViewport(0,0, WindowWidth, WindowHeight);
@@@@ -573,7 +583,7 @@@@ int InitSound(void)
 
 	if (SDL_OpenAudio(&wanted, &audiospec) < 0)
 	{
-		fprintf(stderr, "Sound init failed!\n");
+		fprintf(stderr, "SDL_OpenAudio: %s\n", SDL_GetError());
 		fprintf(stderr, "freq: %d, channels: %d, samples: %d\n",
 			wanted.freq, wanted.channels, wanted.samples);
 		SoundEnabled = 0;
@@@@ -605,7 +615,10 @@@@ BOOL InitJoystickInput(void)
 	// If it is possible to use SDL_NumJoysticks
 	// before initialising SDL_INIT_JOYSTICK then
 	// this call can be replaced with SDL_InitSubSystem
-	SDL_InitSubSystem (SDL_INIT_JOYSTICK);
+	if (SDL_InitSubSystem (SDL_INIT_JOYSTICK) != 0) {
+		printf("SDL_InitSubSystem: %s\n", SDL_GetError());
+		return FALSE;
+	}
 	max_num_joysticks = SDL_NumJoysticks();
 	if (!max_num_joysticks)
 	{
@@@@ -620,6 +633,10 @@@@ BOOL InitJoystickInput(void)
 	for (i = 0; i < max_num_joysticks; i++)
 	{
 		JoystickInput[i] = SDL_JoystickOpen(i);
+		if (JoystickInput[i] == NULL) {
+			printf("SDL_JoystickOpen[%d]: %s\n", i, SDL_GetError());
+			return FALSE;
+		}
 		num_axes = SDL_JoystickNumAxes(JoystickInput[i]);
 		num_buttons = SDL_JoystickNumButtons(JoystickInput[i]);
 		num_hats = SDL_JoystickNumHats(JoystickInput[i]);
@@@@ -681,7 +698,8 @@@@ int startgame(void)
 		if (SDL_Init(SDL_INIT_AUDIO | SDL_INIT_TIMER |
 	        SDL_INIT_VIDEO) < 0)
 		{
-			fprintf(stderr, "Could not initialize SDL: %s", SDL_GetError());
+			fprintf(stderr, "Could not initialize SDL: %s\n",
+			    SDL_GetError());
 			return FALSE;
 		}
 		sdl_state = vid_none;
@@@@ -693,7 +711,10 @@@@ int startgame(void)
 #ifdef __OPENGL__
 	else if (sdl_state == vid_gl) gl_end();
 
-	SDL_Init(SDL_INIT_VIDEO);
+	if (SDL_Init(SDL_INIT_VIDEO) != 0) {
+		printf("SDL_INIT_VIDEO: %s\n", SDL_GetError());
+		return FALSE;
+	}
 
 	if (UseOpenGL)
 	{
@@@@ -1039,6 +1060,9 @@@@ void UpdateVFrame(void)
 {
 	const int SPCSize = 256;
 	int i;
+
+	//Quick fix for GUI CPU usage
+	if (GUIOn2) usleep(6000);
 
 	CheckTimers();
 	Main_Proc();
@


1.2
log
@Dunkelheit breitet sich über dem Land aus, während die Mana Kraft versiegt...

Update to 1.42, works sort of.
* Should, according to #zsnes hints, use -rHEAD instead, much better on BSD
* reverted man page to older version due to licence issues
* backported one zfilew.c hunk from CVS zsnes
* playing gzip'd files does not work
@
text
@d1 1
d4 1
a4 1
+++ src/linux/sdllink.c	Sun Oct  2 17:37:37 2005
d86 10
@


1.1
log
@Initial revision
@
text
@d2 4
a5 4
--- src/linux/sdllink.c.orig	Sat Aug 31 01:01:05 2002
+++ src/linux/sdllink.c	Sat Aug 31 01:11:38 2002
@@@@ -350,14 +350,24 @@@@ int Main_Proc(void)
 				if(cvidmode != 16) {
d31 1
a31 1
@@@@ -526,7 +536,7 @@@@ int InitSound(void)
d33 1
a33 1
 	if (SDL_OpenAudio(&wanted, NULL) < 0)
d40 1
a40 1
@@@@ -552,7 +562,10 @@@@ BOOL InitJoystickInput(void)
d52 1
a52 1
@@@@ -566,6 +579,10 @@@@ BOOL InitJoystickInput(void)
d60 4
a63 26
 		printf("Joystick %i (%i Buttons): %s\n", i,
 		       SDL_JoystickNumButtons(JoystickInput[i]),
 		       SDL_JoystickName(i));
@@@@ -584,7 +601,11 @@@@ int saybitdepth()
 {
   int MyBitsPerPixel;
   const SDL_VideoInfo *info;
-  SDL_Init(SDL_INIT_VIDEO);
+ 
+  if (SDL_Init(SDL_INIT_VIDEO) != 0) {
+  	printf("SDL_INIT_VIDEO: %s\n", SDL_GetError());
+	return FALSE;
+  }
   info = SDL_GetVideoInfo();
   MyBitsPerPixel = info->vfmt->BitsPerPixel;
   switch (MyBitsPerPixel)
@@@@ -593,7 +614,7 @@@@ int saybitdepth()
     case 16: break;
     default: printf("You are running in %d bpp, but ZSNES is forcing 16 bpp.\nYou may experience poor performance and/or crashing.\n\n", MyBitsPerPixel); break;
     }
-  return 0;
+  return TRUE;
 }
 
 int startgame(void)
@@@@ -605,7 +626,8 @@@@ int startgame(void)
d73 1
a73 2
@@@@ -614,7 +636,9 @@@@ int startgame(void)
 	if (sdl_state == vid_soft) sw_end();
d76 4
a79 2
-	saybitdepth();
+	if (saybitdepth() == FALSE) {
d82 1
a84 1
 		status = gl_start(WindowWidth, WindowHeight, BitDepth, FullScreen);
@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
