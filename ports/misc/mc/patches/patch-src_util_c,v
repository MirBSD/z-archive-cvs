head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2010.12.31.17.59.00;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004D1E19F83A245C88;

1.2
date	2010.12.31.17.53.04;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004D1E189509433782;

1.1
date	2008.09.17.20.06.59;	author tg;	state Exp;
branches;
next	;
commitid	10048D163476DE6CE0C;


desc
@@


1.3
log
@figures I’d have a typo…
@
text
@$MirOS: ports/misc/mc/patches/patch-src_util_c,v 1.2 2010/12/31 17:53:04 tg Exp $
--- src/util.c.orig	Fri May 27 14:18:56 2005
+++ src/util.c	Fri Dec 31 17:57:09 2010
@@@@ -900,10 +900,10 @@@@ char *get_current_wd (char *buffer, int 
  * Warning: this function moves the current file pointer */
 int get_compression_type (int fd)
 {
-    unsigned char magic[4];
+    unsigned char magic[16];
 
     /* Read the magic signature */
-    if (mc_read (fd, (char *) magic, 4) != 4)
+    if (mc_read (fd, (char *) magic, 6) != 6)
 	return COMPRESSION_NONE;
 
     /* GZIP_MAGIC and OLD_GZIP_MAGIC */
@@@@ -911,6 +911,11 @@@@ int get_compression_type (int fd)
 	return COMPRESSION_GZIP;
     }
 
+    /* xz container format */
+    if (magic[0] == 0xFD && magic[1] == '7' && magic[2] == 'z' &&
+	magic[3] == 'X' && magic[4] == 'Z' && magic[5] == 0x00)
+	return COMPRESSION_XZ;
+
     /* PKZIP_MAGIC */
     if (magic[0] == 0120 && magic[1] == 0113 && magic[2] == 003
 	&& magic[3] == 004) {
@@@@ -944,6 +949,31 @@@@ int get_compression_type (int fd)
 	    return COMPRESSION_BZIP2;
 	}
     }
+
+    /* LZMA1 files; both LZMA_Alone and LZMA utils formats. The LZMA_Alone
+     * format is used by the LZMA_Alone tool from LZMA SDK. The LZMA utils
+     * format is the default format of LZMA utils 4.32.1 and later. */
+    if (magic[0] == 0xFF && magic[1] == 'L' && magic[2] == 'Z' &&
+	magic[3] == 'M' && magic[4] == 'A' && magic[5] == 0x00)
+	/* LZMA utils format */
+	return COMPRESSION_LZMA;
+    if (magic[0] < 0xE1) {
+	if (mc_read (fd, (char *) magic + 6, 7) == 7) {
+	    /* The LZMA_Alone format has no magic bytes, thus we
+	     * need to play a wizard. This can give false positives,
+	     * thus the detection below should be removed when
+	     * the newer LZMA utils format has got popular. */
+	    if (magic[4] < 0x20 &&
+		((magic[10] == 0x00 && magic[11] == 0x00 &&
+		  magic[12] == 0x00) ||
+		 (magic[5] == 0xFF && magic[6] == 0xFF &&
+		  magic[7] == 0xFF && magic[8] == 0xFF &&
+		  magic[9] == 0xFF && magic[10] == 0xFF &&
+		  magic[11] == 0xFF && magic[12] == 0xFF)))
+		return COMPRESSION_LZMA;
+	}
+    }
+
     return 0;
 }
 
@@@@ -954,6 +984,8 @@@@ decompress_extension (int type)
 	case COMPRESSION_GZIP: return "#ugz";
 	case COMPRESSION_BZIP:   return "#ubz";
 	case COMPRESSION_BZIP2:  return "#ubz2";
+	case COMPRESSION_LZMA:  return "#ulzma";
+	case COMPRESSION_XZ:  return "#uxz";
 	}
 	/* Should never reach this place */
 	fprintf (stderr, "Fatal: decompress_extension called with an unknown argument\n");
@


1.2
log
@xz
@
text
@d1 1
a1 1
$MirOS: ports/misc/mc/patches/patch-src_util_c,v 1.1 2008/09/17 20:06:59 tg Exp $
d3 1
a3 1
+++ src/util.c	Fri Dec 31 17:51:46 2010
d23 1
a23 1
+	magic[3] == 'X' && magic[4] == 'Z' && magic[5] = 0x00)
@


1.1
log
@welcome the LZMA stand-alone gzip-style archiver to the tree… as I
saw *.tar.lzma files floating around, I asked my favourite source
mage what tool be preferred for operating them, voilà here it is.

10x sobukus
@
text
@d1 4
a4 4
$MirOS$
--- src/util.c.orig	Tue Sep 16 07:21:32 2008
+++ src/util.c	Tue Sep 16 07:21:00 2008
@@@@ -900,7 +900,7 @@@@ char *get_current_wd (char *buffer, int 
d12 18
a29 2
     if (mc_read (fd, (char *) magic, 4) != 4)
@@@@ -944,6 +944,31 @@@@ int get_compression_type (int fd)
d34 1
a34 1
+    /* LZMA files; both LZMA_Alone and LZMA utils formats. The LZMA_Alone
d37 6
a42 6
+    if (magic[0] < 0xE1 || (magic[0] == 0xFF && magic[1] == 'L' &&
+	magic[2] == 'Z' && magic[3] == 'M')) {
+	if (mc_read (fd, (char *) magic + 4, 9) == 9) {
+	    /* LZMA utils format */
+	    if (magic[0] == 0xFF && magic[4] == 'A' && magic[5] == 0x00)
+		return COMPRESSION_LZMA;
d47 1
a47 1
+	    if (magic[0] < 0xE1 && magic[4] < 0x20 &&
d61 1
a61 1
@@@@ -954,6 +979,7 @@@@ decompress_extension (int type)
d66 1
@

