head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2009.01.03.20.49.00;	author bsiegert;	state Exp;
branches;
next	1.1;
commitid	100495FCEB33EE258C2;

1.1
date	2009.01.02.12.29.48;	author bsiegert;	state Exp;
branches;
next	;
commitid	100495E08C127A59E65;


desc
@@


1.2
log
@Add a missing slash at the end of the download paths
@
text
@# $MirOS: ports/devel/p5-Test-NoWarnings/Makefile,v 1.1 2009/01/02 12:29:48 bsiegert Exp $

COMMENT=		make sure you did not emit any warnings while testing
DISTNAME=		Test-NoWarnings-0.084
PKGNAME=		p5-${DISTNAME}-${DASH_VER}
CATEGORIES=		devel perl5
MASTER_SITES=		${MASTER_SITE_PERL_CPAN:=../../authors/id/F/FD/FDALY/}

PERMIT_PACKAGE_CDROM=	Yes
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_DISTFILES_FTP=	Yes

CONFIGURE_STYLE=	perl

B_R_DEPENDS+=		:p5-Test-Tester>=0.103:devel/p5-Test-Tester

PKG_ARCH=		*

.include <bsd.port.mk>
@


1.1
log
@Add a port for Test::NoWarnings. From DESCR:

In general, your tests shouldn't produce warnings. This modules causes
any warnings to be captured and stored. It automatically adds an extra
test that will run when your script ends to check that there were no
warnings. If there were any warings, the test will give a "not ok" and
diagnostics of where, when and what the warning was, including a stack
trace of what was going on when the it occurred.

If some of your tests are supposed to produce warnings then you should
be capturing and checking them with Test::Warn, that way
Test::NoWarnings will not see them and so not complain.

The test is run by an END block in Test::NoWarnings. It will not be run
when any forked children exit.
@
text
@d1 1
a1 1
# $MirOS: ports/infrastructure/templates/perlmod.Makefile,v 1.1 2009/01/01 17:11:33 bsiegert Exp $
d7 1
a7 1
MASTER_SITES=		${MASTER_SITE_PERL_CPAN:=../../authors/id/F/FD/FDALY}
@

