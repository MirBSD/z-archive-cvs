head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2006.09.14.00.08.14;	author tg;	state Exp;
branches;
next	1.2;
commitid	10045089C0E234154C3;

1.2
date	2006.02.09.11.11.21;	author tg;	state Exp;
branches;
next	1.1;
commitid	10043EB23217A35557B;

1.1
date	2005.03.18.15.44.42;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.44.42;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@clean up COMMENT and HOMEPAGE; regenerate INDEX (2761, 169 marked as broken, probably many many more) ­ edited by script with manual postprocessing
@
text
@# $OpenBSD: Makefile,v 1.4 2004/02/24 00:06:43 naddy Exp $

COMMENT=			GNU PIC assembler and utilities

VERSION=		0.12.0
DISTNAME=		gputils-${VERSION}
DIST_SUBDIR=		gputils
DISTFILES=		${DISTNAME}${EXTRACT_SUFX} gputils-testsuite-${VERSION}${EXTRACT_SUFX}:0

CATEGORIES=		devel

HOMEPAGE=		http://gputils.sourceforge.net/


# GPL
PERMIT_PACKAGE_CDROM=	Yes
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_DISTFILES_FTP=	Yes

MASTER_SITES=		${MASTER_SITE_SOURCEFORGE:=gputils/}
MASTER_SITES0=		http://www.ajd.net.au/ports/

CONFIGURE_STYLE=	gnu autoconf
AUTOCONF_NEW=		Yes

# Commands used to create the testsuite tarball
# I put these here mainly for documentation, but if you can't fetch
# the tarball from MASTER_SITES0, this should be 100% reproducible.
# (I use find|pax to create the tarballs without directory timestamps.)
create-testsuite-tarball:
	rm -fr gputils/ gputils-${VERSION}
	cvs -z3 -d:pserver:anonymous@@cvs.gputils.sourceforge.net:/cvsroot/gputils login
	cvs -z3 -d:pserver:anonymous@@cvs.gputils.sourceforge.net:/cvsroot/gputils export -r gputils-${VERSION:S/./_/g} gputils/gpasm/testsuite > /dev/null
	mv gputils gputils-${VERSION}
	find gputils-${VERSION}/gpasm/testsuite/ -type f | pax -wzf ${FULLDISTDIR}/gputils-testsuite-${VERSION}.tar.gz 
	rm -fr gputils/ gputils-${VERSION}

do-regress:
	cd ${WRKSRC}/gpasm/testsuite && sh ./test all


DOCFILES=	gputils.lyx gputils.pdf gputils.ps
post-install:
	${INSTALL_DATA_DIR} ${PREFIX}/share/doc/gputils
.for FILE in ${DOCFILES}
	${INSTALL_DATA} ${WRKSRC}/doc/${FILE} ${PREFIX}/share/doc/gputils
.endfor

.include <bsd.port.mk>
@


1.2
log
@Fix a few abuses:
| CONFIGURE_ENV=	CPPFLAGS="-I${LOCALBASE}/include/libpng \
|			    -I${LOCALBASE}/include -I${X11BASE}/include" \
| 			LDFLAGS="-L${LOCALBASE}/lib -L${X11BASE}/lib" \
|			PKGCONFIG_PATH=...

* use Benny's pkgconfig module
  - fixes PKGCONFIG_PATH in all places
  - adds explicit dependencies on pkgconfig where needed
* use a new png module
  - also cought a few implicit dependencies
* use a new freetype1 module in two places (more to come?)
* CPPFLAGS, LDFLAGS are in CONFIGURE_ENV anyway, so correctly
  add to them as CPPFLAGS+=<tab>foo instead
* use EXTRA_{M,X,F}AKE_FLAGS
* CC is given anyway, too
* add MAKEINFO= to gnu style

Still doesn't catch all OpenBSD abuses, but most of them.

Brokenness analysis:
* Automatically done
  - CFLAGS+=CPPFLAGS
  - CXXFLAGS+=CPPFLAGS
  - CPPFLAGS+=-I${LOCALBASE}/include
  - LDFLAGS+=-L${LOCALBASE}/lib
  - CONFIGURE_ENV, MAKE_FLAGS+=
    + LDFLAGS=LDFLAGS
    + CPPFLAGS you get the idea
    + CFLAGS
    + CXXFLAGS
    + CC
    + CXX (if USE_CXX)
* Done if USE_X11=Yes
  - CPPFLAGS+=X11BASE/include
  - LDFLAGS+=X11BASE/lib

Tell me if there are problems, but first try adding
an EXTRA_ before MAKE_FLAGS and FAKE_FLAGS.
Remember EXTRA_XAKE_FLAGS get added to both.
@
text
@d3 1
a3 1
COMMENT=		"GNU PIC assembler and utilities"
@


1.1
log
@Initial revision
@
text
@a25 1
CONFIGURE_ENV=		"CC=${CC}" "CPP=${CPP}" "CFLAGS=${CFLAGS}" "CPPFLAGS=${CPPFLAGS}" "LDFLAGS=${LDFLAGS}"
@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
