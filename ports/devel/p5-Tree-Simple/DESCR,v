head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2017.08.07.20.16.00;	author tg;	state Exp;
branches;
next	1.1;
commitid	1005988C69344442E37;

1.1
date	2008.10.13.21.21.15;	author bsiegert;	state Exp;
branches;
next	;
commitid	10048F3BBC11A894342;


desc
@@


1.2
log
@filesystem
@
text
@This module in an fully object-oriented implementation of a simple n-ary
tree. It is built upon the concept of parent-child relationships, so
therefore every Tree::Simple object has both a parent and a set of
children (who themselves may have children, and so on). Every
Tree::Simple object also has siblings, as they are just the children of
their immediate parent.

It is can be used to model hierarchal information such as a filesystem,
the organizational structure of a company, an object inheritance
hierarchy, versioned files from a version control system or even an
abstract syntax tree for use in a parser. It makes no assumptions as to
your intended usage, but instead simply provides the structure and means
of accessing and traversing said structure.
@


1.1
log
@New package p5-Tree-Simple-1.18. From DESCR:

This module in a fully object-oriented implementation of a simple n-ary
tree. It is built upon the concept of parent-child relationships, so
therefore every Tree::Simple object has both a parent and a set of
children (who themselves may have children, and so on). Every
Tree::Simple object also has siblings, as they are just the children of
their immediate parent.

It is can be used to model hierarchal information such as a file-system,
the organizational structure of a company, an object inheritance
hierarchy, versioned files from a version control system or even an
abstract syntax tree for use in a parser. It makes no assumptions as to
your intended usage, but instead simply provides the structure and means
of accessing and traversing said structure.
@
text
@d8 1
a8 1
It is can be used to model hierarchal information such as a file-system,
@

