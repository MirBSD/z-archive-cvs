head	1.1;
branch	1.1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2005.03.18.15.45.01;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.45.01;	author tg;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@$OpenBSD: patch-sqlplusint_null1_hh,v 1.1 2004/01/06 11:16:53 wilfried Exp $
--- sqlplusint/null1.hh.orig	2001-05-19 18:44:48.000000000 +0200
+++ sqlplusint/null1.hh	2004-01-04 23:26:25.000000000 +0100
@@@@ -1,7 +1,7 @@@@
 #ifndef __null1_hh__
 #define __null1_hh__
 
-#include <ostream.h>
+#include <iostream>
 #include "exceptions.hh"
 #include "define_short"
 
@@@@ -18,19 +18,19 @@@@ const null_type null = null_type();
 //: Type to use for the behavior parameter for *Null<>*
 struct NullisNull {
   static null_type null_is() {return null_type();}
-  static ostream&  null_ostr(ostream& o) {o << "(NULL)"; return o;}
+  static std::ostream&  null_ostr(std::ostream& o) {o << "(NULL)"; return o;}
 };
 
 //: Type to use for the behavior parameter for *Null<>*
 struct NullisZero {
   static int   null_is() {return 0;}
-  static ostream& null_ostr(ostream &o) {o << 0; return o;}
+  static std::ostream& null_ostr(std::ostream &o) {o << 0; return o;}
 };
 
 //: Type to use for the behavior parameter for *Null<>*
 struct NullisBlank {
   static const char * null_is() {return "";}
-  static ostream& null_ostr(ostream &o) {o << ""; return o;}
+  static std::ostream& null_ostr(std::ostream &o) {o << ""; return o;}
 };
 
 //: Container class for holding null types.
@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
