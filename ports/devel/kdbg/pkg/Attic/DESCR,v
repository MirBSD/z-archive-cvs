head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2007.04.03.19.42.10;	author tg;	state dead;
branches;
next	1.1;
commitid	1004612AC977E789195;

1.1
date	2005.03.18.15.44.47;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.44.47;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@• remove ports that are simply broken, don't work, for too long, with no
  update or update-willing person in sight, kde stuff, web2.0 stuff that
  we don't want in ports (just stuff it into /var/www yourself, it isn't
  that difficult, right?), stuff for which no new version exists/will be
  and some obsd cruft; adjust dependencies
• no BUILD_DEPENDS+=RUN_DEPENDS or vice versa any more, *ever*
• fix some other stuff partially

ok bsiegert@@
@
text
@KDbg is a graphical frontend for GDB and KDE.

Features:

Inspection of variable values in a tree structure.

Direct member: For certain compound data types the most important member
values are displayed next to the variable name, so that it is not
necessary to expand the subtree of that variable in order to see the
member value. For example, you don't need to go into a variable of type
QString if you want to see the string that the variable holds. (BTW,
this is of course not hardcoded, but can be extended to new types.) KDbg
can also display Qt 2.0's QString values, which are Unicode strings.

Debugger at your finger tips: The basic debugger functions (step, next,
run, finish, until, set/clear/enable/disable breakpoint) are bound to
function keys F5 through F10.

Quick and easy.

Of course, lots of other basic functions: View source code, search text,
set program arguments and environment variables, display arbitrary
expressions. Everything you need to debug a program, eh!

Debugging of core dumps, attaching to running processes is possible.

Conditional breakpoints.
@


1.1
log
@Initial revision
@
text
@@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
