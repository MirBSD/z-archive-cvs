head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	2012.02.11.19.29.59;	author tg;	state dead;
branches;
next	1.6;
commitid	1004F36C11F02848ED5;

1.6
date	2011.06.11.03.55.36;	author tg;	state Exp;
branches;
next	1.5;
commitid	1004DF2E74A6938C5EF;

1.5
date	2010.09.16.00.13.45;	author tg;	state Exp;
branches;
next	1.4;
commitid	1004C9161392E1EE70E;

1.4
date	2010.09.15.20.57.01;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004C9132F41004B31C;

1.3
date	2007.06.06.13.46.44;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004666BAAA7E1DD106;

1.2
date	2007.03.10.23.53.50;	author tg;	state Exp;
branches;
next	1.1;
commitid	10045F344D65465EF23;

1.1
date	2006.10.02.05.59.17;	author tg;	state Exp;
branches;
next	;
commitid	1004520AAAB453C7791;


desc
@@


1.7
log
@update the CVS package in MirPorts (to match base and Debian)

• since the Debian cvs source package was taken over by this one,
  reverse things and use the Debian *.diff.gz to get our patches
  from ;-) saves tracking things in CVS thrice
• since the Debian cvs binary package contains PDF documentation
  generated from something with our patches, ship it instead of
  the one from the vanilla CVS distfile
• ship cvs-switchroot(1) from Debian, which is just a fancy name
  for mircvs://src/scripts/mnt-cvsroot and has a manpage
• move stuff from PREFIX/share/cvs to PREFIX/share/doc/cvs as is proper
• fix regression testsuite on MirBSD as much as possible (same as base)
@
text
@$MirOS: ports/devel/cvs/patches/patch-src_mkmodules_c,v 1.6 2011/06/11 03:55:36 tg Exp $
--- src/mkmodules.c.orig	Tue May 24 20:58:39 2005
+++ src/mkmodules.c	Sat Jun 11 03:06:19 2011
@@@@ -15,6 +15,8 @@@@
 #include "history.h"
 #include "save-cwd.h"
 
+__RCSID("$MirOS: ports/devel/cvs/patches/patch-src_mkmodules_c,v 1.6 2011/06/11 03:55:36 tg Exp $");
+
 #ifndef DBLKSIZ
 #define	DBLKSIZ	4096			/* since GNU ndbm doesn't define it */
 #endif
@@@@ -68,6 +70,7 @@@@ static const char *const loginfo_content
     "# If any format strings are present in the filter, they will be replaced\n",
     "# as follows:\n",
     "#    %c = canonical name of the command being executed\n",
+    "#    %I = unique (randomly generated) commit ID\n",
 #ifdef PROXY_SUPPORT
     "#    %R = the name of the referrer, if any, otherwise the value NONE\n",
 #endif
@@@@ -82,7 +85,7 @@@@ static const char *const loginfo_content
     "# Thus %{sv} is a legal format string, but will only be replaced with\n",
     "# file name and new revision.\n",
     "# It also generates multiple arguments for each file being operated upon.\n",
-    "# That is, if two files, file1 & file2, are being commited from 1.1 to\n",
+    "# That is, if two files, file1 & file2, are being committed from 1.1 to\n",
     "# version 1.1.2.1 and from 1.1.2.2 to 1.1.2.3, respectively, %{sVv} will\n",
     "# generate the following six arguments in this order:\n",
     "# file1, 1.1, 1.1.2.1, file2, 1.1.2.2, 1.1.2.3.\n",
@@@@ -124,13 +127,14 @@@@ static const char *const verifymsg_conte
     "#\n",
     "#   Making sure that the entered bug-id number is correct.\n",
     "#   Validating that the code that was reviewed is indeed the code being\n",
-    "#       checked in (using the bug-id number or a seperate review\n",
+    "#       checked in (using the bug-id number or a separate review\n",
     "#       number to identify this particular code set.).\n",
     "#\n",
     "# If any of the above test failed, then the commit would be aborted.\n",
     "#\n",
     "# Format strings present in the filter will be replaced as follows:\n",
     "#    %c = canonical name of the command being executed\n",
+    "#    %I = unique (randomly generated) commit ID\n",
 #ifdef PROXY_SUPPORT
     "#    %R = the name of the referrer, if any, otherwise the value NONE\n",
 #endif
@@@@ -163,6 +167,7 @@@@ static const char *const commitinfo_cont
     "#\n",
     "# Format strings present in the filter will be replaced as follows:\n",
     "#    %c = canonical name of the command being executed\n",
+    "#    %I = unique (randomly generated) commit ID\n",
 #ifdef PROXY_SUPPORT
     "#    %R = the name of the referrer, if any, otherwise the value NONE\n",
 #endif
@@@@ -199,6 +204,7 @@@@ static const char *const taginfo_content
     "#                     | \"N\" (not branch)\n",
     "#    %o = operation = \"add\" | \"mov\" | \"del\"\n",
     "#    %c = canonical name of the command being executed\n",
+    "#    %I = unique (randomly generated) commit ID\n",
 #ifdef PROXY_SUPPORT
     "#    %R = the name of the referrer, if any, otherwise the value NONE\n",
 #endif
@@@@ -245,6 +251,7 @@@@ static const char *const preproxy_conten
     "# If any format strings are present in the filter, they will be replaced\n",
     "# as follows:\n",
     "#    %c = canonical name of the command being executed\n",
+    "#    %I = unique (randomly generated) commit ID\n",
 #ifdef PROXY_SUPPORT
     "#    %R = the name of the referrer, if any, otherwise the value NONE\n",
 #endif
@@@@ -271,6 +278,7 @@@@ static const char *const postadmin_conte
     "# If any format strings are present in the filter, they will be replaced\n",
     "# as follows:\n",
     "#    %c = canonical name of the command being executed\n",
+    "#    %I = unique (randomly generated) commit ID\n",
 #ifdef PROXY_SUPPORT
     "#    %R = the name of the referrer, if any, otherwise the value NONE\n",
 #endif
@@@@ -299,6 +307,7 @@@@ static const char *const postproxy_conte
     "# If any format strings are present in the filter, they will be replaced\n",
     "# as follows:\n",
     "#    %c = canonical name of the command being executed\n",
+    "#    %I = unique (randomly generated) commit ID\n",
 #ifdef PROXY_SUPPORT
     "#    %R = the name of the referrer, if any, otherwise the value NONE\n",
 #endif
@@@@ -328,6 +337,7 @@@@ static const char *const posttag_content
     "#                     | \"N\" (not branch)\n",
     "#    %o = operation = \"add\" | \"mov\" | \"del\"\n",
     "#    %c = canonical name of the command being executed\n",
+    "#    %I = unique (randomly generated) commit ID\n",
 #ifdef PROXY_SUPPORT
     "#    %R = the name of the referrer, if any, otherwise the value NONE\n",
 #endif
@@@@ -368,6 +378,7 @@@@ static const char *const postwatch_conte
     "# If any format strings are present in the filter, they will be replaced\n",
     "# as follows:\n",
     "#    %c = canonical name of the command being executed\n",
+    "#    %I = unique (randomly generated) commit ID\n",
 #ifdef PROXY_SUPPORT
     "#    %R = the name of the referrer, if any, otherwise the value NONE\n",
 #endif
@@@@ -446,6 +457,7 @@@@ static const char *const notify_contents
     "#\n",
     "# format strings are replaceed as follows:\n",
     "#    %c = canonical name of the command being executed\n",
+    "#    %I = unique (randomly generated) commit ID\n",
 #ifdef PROXY_SUPPORT
     "#    %R = the name of the referrer, if any, otherwise the value NONE\n",
 #endif
@@@@ -465,11 +477,10 @@@@ static const char *const modules_content
     "#	key [options] directory files...\n",
     "#\n",
     "# Where \"options\" are composed of:\n",
-    "#	-i prog		Run \"prog\" on \"cvs commit\" from top-level of module.\n",
     "#	-o prog		Run \"prog\" on \"cvs checkout\" of module.\n",
     "#	-e prog		Run \"prog\" on \"cvs export\" of module.\n",
+    "#	-s status	Assign a status to the module.\n",
     "#	-t prog		Run \"prog\" on \"cvs rtag\" of module.\n",
-    "#	-u prog		Run \"prog\" on \"cvs update\" of module.\n",
     "#	-d dir		Place module in directory \"dir\" instead of module name.\n",
     "#	-l		Top-level directory only -- do not recurse.\n",
     "#\n",
@@@@ -489,67 +500,67 @@@@ static const char *const modules_content
 };
 
 static const char *const config_contents[] = {
-    "# Set `SystemAuth' to `no' if pserver shouldn't check system users/passwords.\n",
+    "# Set 'SystemAuth' to 'no' if pserver shouldn't check system users/passwords.\n",
     "#SystemAuth=no\n",
     "\n",
-    "# Set `LocalKeyword' to specify a local alias for a standard keyword.\n",
+    "# Set 'LocalKeyword' to specify a local alias for a standard keyword.\n",
     "#LocalKeyword=MYCVS=CVSHeader\n",
     "\n",
-    "# Set `KeywordExpand' to `i' followed by a list of keywords to expand or\n",
-    "# `e' followed by a list of keywords to not expand.\n"
-    "#KeywordExpand=iMYCVS,Name,Date\n",
+    "# Set 'KeywordExpand' to 'i' followed by a list of keywords to expand or\n",
+    "# 'e' followed by a list of keywords to not expand.\n"
+    "#KeywordExpand=iMYCVS,Name,Date,Mdocdate\n",
     "#KeywordExpand=eCVSHeader\n",
     "\n",
 #ifdef PRESERVE_PERMISSIONS_SUPPORT
-    "# Set `PreservePermissions' to `yes' to save file status information\n",
+    "# Set 'PreservePermissions' to 'yes' to save file status information\n",
     "# in the repository.\n",
     "#PreservePermissions=no\n",
     "\n",
 #endif
-    "# Set `TopLevelAdmin' to `yes' to create a CVS directory at the top\n",
-    "# level of the new working directory when using the `cvs checkout'\n",
+    "# Set 'TopLevelAdmin' to 'yes' to create a CVS directory at the top\n",
+    "# level of the new working directory when using the 'cvs checkout'\n",
     "# command.\n",
     "#TopLevelAdmin=no\n",
     "\n",
     "# Put CVS lock files in this directory rather than directly in the repository.\n",
     "#LockDir=/var/lock/cvs\n",
     "\n",
-    "# Set `LogHistory' to `all' or `" ALL_HISTORY_REC_TYPES "' to log all transactions to the\n",
-    "# history file, or a subset as needed (ie `TMAR' logs all write operations)\n",
+    "# Set 'LogHistory' to 'all' or '" ALL_HISTORY_REC_TYPES "' to log all transactions to the\n",
+    "# history file, or a subset as needed (ie 'TMAR' logs all write operations)\n",
     "#LogHistory=" ALL_HISTORY_REC_TYPES "\n",
     "\n",
-    "# Set `RereadLogAfterVerify' to `always' (the default) to allow the verifymsg\n",
-    "# script to change the log message.  Set it to `stat' to force CVS to verify\n",
+    "# Set 'RereadLogAfterVerify' to 'always' (the default) to allow the verifymsg\n",
+    "# script to change the log message.  Set it to 'stat' to force CVS to verify\n",
     "# that the file has changed before reading it (this can take up to an extra\n",
     "# second per directory being committed, so it is not recommended for large\n",
-    "# repositories.  Set it to `never' (the previous CVS behavior) to prevent\n",
+    "# repositories.  Set it to 'never' (the previous CVS behavior) to prevent\n",
     "# verifymsg scripts from changing the log message.\n",
     "#RereadLogAfterVerify=always\n",
     "\n",
-    "# Set `UserAdminOptions' to the list of `cvs admin' commands (options)\n",
-    "# that users not in the `cvsadmin' group are allowed to run.  This\n",
-    "# defaults to `k', or only allowing the changing of the default\n",
-    "# keyword expansion mode for files for users not in the `cvsadmin' group.\n",
-    "# This value is ignored if the `cvsadmin' group does not exist.\n",
+    "# Set 'UserAdminOptions' to the list of 'cvs admin' commands (options)\n",
+    "# that users not in the '_cvsadmin' group are allowed to run.  This\n",
+    "# defaults to 'k', or only allowing the changing of the default\n",
+    "# keyword expansion mode for files for users not in the '_cvsadmin' group.\n",
+    "# This value is ignored if the '_cvsadmin' group does not exist.\n",
     "#\n",
-    "# The following string would enable all `cvs admin' commands for all\n",
+    "# The following string would enable all 'cvs admin' commands for all\n",
     "# users:\n",
     "#UserAdminOptions=aAbceIklLmnNostuU\n",
 #ifdef SUPPORT_OLD_INFO_FMT_STRINGS
     "\n",
-    "# Set `UseNewInfoFmtStrings' to `no' if you must support a legacy system by\n",
+    "# Set 'UseNewInfoFmtStrings' to 'no' if you must support a legacy system by\n",
     "# enabling the deprecated old style info file command line format strings.\n",
     "# Be warned that these strings could be disabled in any new version of CVS.\n",
     "UseNewInfoFmtStrings=yes\n",
 #endif /* SUPPORT_OLD_INFO_FMT_STRINGS */
     "\n",
-    "# Set `ImportNewFilesToVendorBranchOnly' to `yes' if you wish to force\n",
-    "# every `cvs import' command to behave as if the `-X' flag was\n",
+    "# Set 'ImportNewFilesToVendorBranchOnly' to 'yes' if you wish to force\n",
+    "# every 'cvs import' command to behave as if the '-X' flag was\n",
     "# specified.\n",
     "#ImportNewFilesToVendorBranchOnly=no\n",
 #ifdef PROXY_SUPPORT
     "\n",
-    "# Set `PrimaryServer' to the CVSROOT to the primary, or write, server when\n",
+    "# Set 'PrimaryServer' to the CVSROOT to the primary, or write, server when\n",
     "# establishing one or more read-only mirrors which serve as proxies for\n",
     "# the write server in write mode or redirect the client to the primary for\n",
     "# write requests.\n",
@@@@ -558,13 +569,13 @@@@ static const char *const config_contents
     "#\n",
     "#   PrimaryServer=:fork:localhost/cvsroot\n",
     "\n",
-    "# Set `MaxProxyBufferSize' to the the maximum allowable secondary\n",
+    "# Set 'MaxProxyBufferSize' to the the maximum allowable secondary\n",
     "# buffer memory cache size before the buffer begins being stored to disk, in\n",
-    "# bytes.  Must be a positive integer but may end in `k', `M', `G', or `T' (for\n",
-    "# kiilo, mega, giga, & tera, respectively).  If an otherwise valid number you\n",
+    "# bytes.  Must be a positive integer but may end in 'K', 'M', 'G', or 'T' (for\n",
+    "# Kibi, Mebi, Gibi, & Tebi, respectively).  If an otherwise valid number you\n",
     "# specify is greater than the SIZE_MAX defined by your system's C compiler,\n",
     "# then it will be resolved to SIZE_MAX without a warning.  Defaults to 8M (8\n",
-    "# megabytes).\n",
+    "# Mebibytes). The 'i' from 'Ki', 'Mi', etc. is omitted.\n",
     "#\n",
     "# High values for MaxProxyBufferSize may speed up a secondary server\n",
     "# with old hardware and a lot of available memory but can actually slow a\n",
@@@@ -575,23 +586,23 @@@@ static const char *const config_contents
     "#   MaxProxyBufferSize=1G\n",
 #endif /* PROXY_SUPPORT */
     "\n",
-    "# Set `MaxCommentLeaderLength' to the maximum length permitted for the\n",
+    "# Set 'MaxCommentLeaderLength' to the maximum length permitted for the\n",
     "# automagically determined comment leader used when expanding the Log\n",
     "# keyword, in bytes.  CVS's behavior when the automagically determined\n",
-    "# comment leader exceeds this length is dependant on the value of\n",
-    "# `UseArchiveCommentLeader' set in this file.  `unlimited' is a valid\n",
+    "# comment leader exceeds this length is dependent on the value of\n",
+    "# 'UseArchiveCommentLeader' set in this file.  'unlimited' is a valid\n",
     "# setting for this value.  Defaults to 20 bytes.\n",
     "#\n",
     "# For example:\n",
     "#\n",
     "#   MaxCommentLeaderLength=20\n",
     "\n",
-    "# Set `UseArchiveCommentLeader' to `yes' to cause CVS to fall back on\n",
+    "# Set 'UseArchiveCommentLeader' to 'yes' to cause CVS to fall back on\n",
     "# the comment leader set in the RCS archive file, if any, when the\n",
-    "# automagically determined comment leader exceeds `MaxCommentLeaderLength'\n",
-    "# bytes.  If `UseArchiveCommentLeader' is not set and a comment leader\n",
-    "# greater than `MaxCommentLeaderLength' is calculated, the Log keyword\n",
-    "# being examined will not be expanded.  Defaults to `no'.\n",
+    "# automagically determined comment leader exceeds 'MaxCommentLeaderLength'\n",
+    "# bytes.  If 'UseArchiveCommentLeader' is not set and a comment leader\n",
+    "# greater than 'MaxCommentLeaderLength' is calculated, the Log keyword\n",
+    "# being examined will not be expanded.  Defaults to 'no'.\n",
     "#\n",
     "# For example:\n",
     "#\n",
@@@@ -816,7 +827,7 @@@@ mkmodules (char *dir)
     }
 
     if (restore_cwd (&cwd))
-	error (1, errno, "Failed to restore current directory, `%s'.",
+	error (1, errno, "Failed to restore current directory, '%s'.",
 	       cwd.name);
     free_cwd (&cwd);
 
@@@@ -878,7 +889,7 @@@@ checkout_file (char *file, char *temp)
     {
 	/* Probably not necessary (?); RCS_parsercsfile already printed a
 	   message.  */
-	error (0, 0, "Failed to parse `%s'.", rcs);
+	error (0, 0, "Failed to parse '%s'.", rcs);
 	free (rcs);
 	return 1;
     }
@@@@ -962,20 +973,22 @@@@ write_dbmfile( char *temp )
 	    key.dptr = vp;
 	    while (*vp && !isspace ((unsigned char) *vp))
 		vp++;
-	    key.dsize = vp - key.dptr;
+	    key.dsize = vp - (char *)key.dptr;
 	    *vp++ = '\0';		/* NULL terminate the key */
 	    while (*vp && isspace ((unsigned char) *vp))
 		vp++;			/* skip whitespace to value */
 	    if (*vp == '\0')
 	    {
-		error (0, 0, "warning: NULL value for key `%s'", key.dptr);
+		error (0, 0, "warning: NULL value for key '%s'",
+		    (char *)key.dptr);
 		continue;
 	    }
 	    val.dptr = vp;
 	    val.dsize = strlen (vp);
 	    if (dbm_store (db, key, val, DBM_INSERT) == 1)
 	    {
-		error (0, 0, "duplicate key found for `%s'", key.dptr);
+		error (0, 0, "duplicate key found for '%s'",
+		    (char *)key.dptr);
 		err++;
 	    }
 	}
@@@@ -1174,6 +1187,9 @@@@ init (int argc, char **argv)
        non-existent parent directory is as likely to be a typo as something
        which needs to be created.  */
     mkdir_if_needed (current_parsed_root->directory);
+
+    if (noexec)
+	return (0);
 
     adm = Xasprintf ("%s/%s", current_parsed_root->directory, CVSROOTADM);
     mkdir_if_needed (adm);
@


1.6
log
@update and bring them in sync
@
text
@d1 1
a1 1
$MirOS: ports/devel/cvs/patches/patch-src_mkmodules_c,v 1.5 2010/09/16 00:13:45 tg Exp $
d8 1
a8 1
+__RCSID("$MirOS: ports/devel/cvs/patches/patch-src_mkmodules_c,v 1.5 2010/09/16 00:13:45 tg Exp $");
@


1.5
log
@-Wall clean, now first batch of lintian (-vIi for now, -E --pedantic later)
XXX need to mmake regress, too…
@
text
@d1 1
a1 1
$MirOS: ports/devel/cvs/patches/patch-src_mkmodules_c,v 1.4 2010/09/15 20:57:01 tg Exp $
d3 1
a3 1
+++ src/mkmodules.c	Thu Sep 16 00:12:19 2010
d8 1
a8 1
+__RCSID("$MirOS: ports/devel/cvs/patches/patch-src_mkmodules_c,v 1.4 2010/09/15 20:57:01 tg Exp $");
d110 14
a123 1
@@@@ -489,67 +501,67 @@@@ static const char *const modules_content
d214 1
a214 1
@@@@ -558,13 +570,13 @@@@ static const char *const config_contents
d232 1
a232 1
@@@@ -575,23 +587,23 @@@@ static const char *const config_contents
d264 1
a264 1
@@@@ -816,7 +828,7 @@@@ mkmodules (char *dir)
d273 1
a273 1
@@@@ -878,7 +890,7 @@@@ checkout_file (char *file, char *temp)
d282 1
a282 1
@@@@ -962,20 +974,22 @@@@ write_dbmfile( char *temp )
d308 10
@


1.4
log
@WIP port (will be worked on more, commit for safety)

Some changes, in this order:
• re-sync with MirOS base cvs
• reduce diff against upstream
• apply cvs-datetime.patch from Arkadiusz Miskiewicz <arekm>
  via Concurrent Versions System - Bugs: bug #21523, can't parse date/time: =UTC when commiting file (workaround/fix attached)
• apply (only those considered somewhat sane) patches from Debian cvs_1:1.12.13-12
  – 11_check_method_crash
  – 12_rcs2log_POSIX_sort
  – 14_ext_expansion
  – 15_PATH_MAX_check
  – 20_readdir_errno
  – 21_getcwd_chroot
  – 25_import-n-X
  – 51_newlines_in_commit_template (partially)
  – 55_keyword_alphanumerics (modified)
  – 62_cvsrc_whitespace
  – 65_login_cvspass_message
  – 69_ext_allowroot (modified)
  – 71_cvsbug_tmpfix
  – 81_fix_-l (modified)
  – 85_normalize_correct_roots
  – 86_server_wrapper (modified)
  – 93_homedir (modified)
  – 95_flag_conflicted_copies
  – 96_manpage_fixes (partially)
  – 97_cvs.info.typo (partially)
  – 98_fix_sparc_sigbus.diff
• document Debian’s changes in the Texinfo manual
• modify mkman.pl to produce more correct looking output
• point to texinfo HTML document from HTML manpage
• fix fseeko configure.in test
• correct bugs in Debian’s changes
@
text
@d1 1
a1 1
$MirOS$
d3 1
a3 1
+++ src/mkmodules.c	Wed Sep 15 19:36:15 2010
d8 1
a8 1
+__RCSID("$MirOS: ports/devel/cvs/patches/patch-src_mkmodules_c,v 1.3 2007/06/06 13:46:44 tg Exp $");
d21 18
a38 1
@@@@ -131,6 +134,7 @@@@ static const char *const verifymsg_conte
d227 1
a227 1
     "# comment leader exceeds this length is dependant on the value of\n",
d229 1
@


1.3
log
@support the $Mdocdate keyword of that Other bsd
credits to jmc@@obsd for the idea and most of the code
actual implementation by me though
@
text
@d1 1
a1 1
$MirOS: ports/devel/cvs/patches/patch-src_mkmodules_c,v 1.2 2007/03/10 23:53:50 tg Exp $
d3 1
a3 1
+++ src/mkmodules.c	Wed Jun  6 13:44:11 2007
d8 1
a8 1
+__RCSID("$MirOS: ports/devel/cvs/patches/patch-src_mkmodules_c,v 1.2 2007/03/10 23:53:50 tg Exp $");
@


1.2
log
@sync the cvs port and the cvs in the base system;
RCSID stuff like in commitid 10045F33CB2157CFEAE
@
text
@d1 3
a3 3
$MirOS: ports/devel/cvs/patches/patch-src_mkmodules_c,v 1.1 2006/10/02 05:59:17 tg Exp $
--- src/mkmodules.c.orig	Sat Mar 10 23:14:20 2007
+++ src/mkmodules.c	Sat Mar 10 23:14:14 2007
d8 1
a8 1
+__RCSID("$MirOS: src/gnu/usr.bin/cvs/src/mkmodules.c,v 1.6 2005/12/05 22:12:48 tg Exp $");
d107 1
d110 1
a110 1
     "#KeywordExpand=iMYCVS,Name,Date\n",
@


1.1
log
@add cvs port, compiles fine and warning-free on MirOS-current;
other OSes not tested, older MirOS may have issues (mktime, regex/wctype)
@
text
@d1 13
a13 4
$MirOS$
--- src/mkmodules.c.orig	Tue May 24 20:58:39 2005
+++ src/mkmodules.c	Mon Oct  2 04:40:37 2006
@@@@ -68,6 +68,7 @@@@ static const char *const loginfo_content
d21 1
a21 1
@@@@ -131,6 +132,7 @@@@ static const char *const verifymsg_conte
d29 1
a29 1
@@@@ -163,6 +165,7 @@@@ static const char *const commitinfo_cont
d37 1
a37 1
@@@@ -199,6 +202,7 @@@@ static const char *const taginfo_content
d45 1
a45 1
@@@@ -245,6 +249,7 @@@@ static const char *const preproxy_conten
d53 1
a53 1
@@@@ -271,6 +276,7 @@@@ static const char *const postadmin_conte
d61 1
a61 1
@@@@ -299,6 +305,7 @@@@ static const char *const postproxy_conte
d69 1
a69 1
@@@@ -328,6 +335,7 @@@@ static const char *const posttag_content
d77 1
a77 1
@@@@ -368,6 +376,7 @@@@ static const char *const postwatch_conte
d85 1
a85 1
@@@@ -446,6 +455,7 @@@@ static const char *const notify_contents
d93 1
a93 1
@@@@ -489,67 +499,67 @@@@ static const char *const modules_content
d183 1
a183 1
@@@@ -558,13 +568,13 @@@@ static const char *const config_contents
d201 1
a201 1
@@@@ -575,23 +585,23 @@@@ static const char *const config_contents
d232 1
a232 1
@@@@ -816,7 +826,7 @@@@ mkmodules (char *dir)
d241 1
a241 1
@@@@ -878,7 +888,7 @@@@ checkout_file (char *file, char *temp)
d250 1
a250 1
@@@@ -962,20 +972,22 @@@@ write_dbmfile( char *temp )
@

