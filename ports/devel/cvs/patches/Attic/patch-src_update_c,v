head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2012.02.11.19.30.03;	author tg;	state dead;
branches;
next	1.3;
commitid	1004F36C11F02848ED5;

1.3
date	2010.09.15.20.57.03;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004C9132F41004B31C;

1.2
date	2007.03.10.23.53.51;	author tg;	state Exp;
branches;
next	1.1;
commitid	10045F344D65465EF23;

1.1
date	2006.10.02.05.59.18;	author tg;	state Exp;
branches;
next	;
commitid	1004520AAAB453C7791;


desc
@@


1.4
log
@update the CVS package in MirPorts (to match base and Debian)

• since the Debian cvs source package was taken over by this one,
  reverse things and use the Debian *.diff.gz to get our patches
  from ;-) saves tracking things in CVS thrice
• since the Debian cvs binary package contains PDF documentation
  generated from something with our patches, ship it instead of
  the one from the vanilla CVS distfile
• ship cvs-switchroot(1) from Debian, which is just a fancy name
  for mircvs://src/scripts/mnt-cvsroot and has a manpage
• move stuff from PREFIX/share/cvs to PREFIX/share/doc/cvs as is proper
• fix regression testsuite on MirBSD as much as possible (same as base)
@
text
@$MirOS: ports/devel/cvs/patches/patch-src_update_c,v 1.3 2010/09/15 20:57:03 tg Exp $
--- src/update.c.orig	Thu Sep 22 18:48:55 2005
+++ src/update.c	Wed Sep 15 20:50:45 2010
@@@@ -51,6 +51,8 @@@@
 #include "buffer.h"
 #include "hardlink.h"
 
+__RCSID("$MirOS: ports/devel/cvs/patches/patch-src_update_c,v 1.3 2010/09/15 20:57:03 tg Exp $");
+
 static int checkout_file (struct file_info *finfo, Vers_TS *vers_ts,
 				 int adding, int merging, int update_server);
 #ifdef SERVER_SUPPORT
@@@@ -58,7 +60,7 @@@@ static void checkout_to_buffer (void *, 
 static int patch_file (struct file_info *finfo,
                        Vers_TS *vers_ts, 
                        int *docheckout, struct stat *file_info,
-                       unsigned char *checksum);
+                       md5_uint32 *checksum);
 static void patch_file_write (void *, const char *, size_t);
 #endif
 static int merge_file (struct file_info *finfo, Vers_TS *vers);
@@@@ -723,7 +725,7 @@@@ update_fileproc (void *callerdat, struct
 		{
 		    int docheckout;
 		    struct stat file_info;
-		    unsigned char checksum[16];
+		    md5_uint32 checksum[4];
 
 		    retval = patch_file (finfo,
 					 vers, &docheckout,
@@@@ -735,7 +737,8 @@@@ update_fileproc (void *callerdat, struct
 					    (rcs_diff_patches
 					     ? SERVER_RCS_DIFF
 					     : SERVER_PATCHED),
-					    file_info.st_mode, checksum,
+					    file_info.st_mode,
+					    (void *)checksum,
 					    NULL);
 			break;
 		    }
@@@@ -1197,7 +1200,7 @@@@ checkout_file (struct file_info *finfo, 
 {
     char *backup;
     int set_time, retval = 0;
-    int status;
+    int status = 0;
     int file_is_dead;
     struct buffer *revbuf;
 
@@@@ -1511,7 +1514,7 @@@@ struct patch_file_data
  */
 static int
 patch_file (struct file_info *finfo, Vers_TS *vers_ts, int *docheckout,
-	    struct stat *file_info, unsigned char *checksum)
+	    struct stat *file_info, md5_uint32 *checksum)
 {
     char *backup;
     char *file1;
@


1.3
log
@WIP port (will be worked on more, commit for safety)

Some changes, in this order:
• re-sync with MirOS base cvs
• reduce diff against upstream
• apply cvs-datetime.patch from Arkadiusz Miskiewicz <arekm>
  via Concurrent Versions System - Bugs: bug #21523, can't parse date/time: =UTC when commiting file (workaround/fix attached)
• apply (only those considered somewhat sane) patches from Debian cvs_1:1.12.13-12
  – 11_check_method_crash
  – 12_rcs2log_POSIX_sort
  – 14_ext_expansion
  – 15_PATH_MAX_check
  – 20_readdir_errno
  – 21_getcwd_chroot
  – 25_import-n-X
  – 51_newlines_in_commit_template (partially)
  – 55_keyword_alphanumerics (modified)
  – 62_cvsrc_whitespace
  – 65_login_cvspass_message
  – 69_ext_allowroot (modified)
  – 71_cvsbug_tmpfix
  – 81_fix_-l (modified)
  – 85_normalize_correct_roots
  – 86_server_wrapper (modified)
  – 93_homedir (modified)
  – 95_flag_conflicted_copies
  – 96_manpage_fixes (partially)
  – 97_cvs.info.typo (partially)
  – 98_fix_sparc_sigbus.diff
• document Debian’s changes in the Texinfo manual
• modify mkman.pl to produce more correct looking output
• point to texinfo HTML document from HTML manpage
• fix fseeko configure.in test
• correct bugs in Debian’s changes
@
text
@d1 1
a1 1
$MirOS$
d8 1
a8 1
+__RCSID("$MirOS: ports/devel/cvs/patches/patch-src_update_c,v 1.2 2007/03/10 23:53:51 tg Exp $");
@


1.2
log
@sync the cvs port and the cvs in the base system;
RCSID stuff like in commitid 10045F33CB2157CFEAE
@
text
@d1 4
a4 4
$MirOS: ports/devel/cvs/patches/patch-src_update_c,v 1.1 2006/10/02 05:59:18 tg Exp $
--- src/update.c.orig	Sat Mar 10 23:14:20 2007
+++ src/update.c	Sat Mar 10 23:14:14 2007
@@@@ -51,12 +51,14 @@@@
d8 1
a8 1
+__RCSID("$MirOS$");
d13 1
a13 1
 static void checkout_to_buffer (void *, const char *, size_t);
d15 1
a15 2
-                       Vers_TS *vers_ts, 
+                       Vers_TS *vers_ts,
d17 2
a18 1
                        unsigned char *checksum);
d20 22
a41 64
@@@@ -251,7 +253,7 @@@@ update (int argc, char **argv)
     argv += optind;
 
 #ifdef CLIENT_SUPPORT
-    if (current_parsed_root->isremote) 
+    if (current_parsed_root->isremote)
     {
 	int pass;
 
@@@@ -295,7 +297,7 @@@@ update (int argc, char **argv)
 	    {
                 unsigned int flags = 0;
 
-		/* If the server supports the command "update-patches", that 
+		/* If the server supports the command "update-patches", that
 		   means that it knows how to handle the -u argument to update,
 		   which means to send patches instead of complete files.
 
@@@@ -560,7 +562,7 @@@@ get_linkinfo_proc (void *callerdat, stru
 	   a file that was removed. */
 	return 0;
     }
-    
+
     /* Create a new, empty hardlink_info node. */
     hlinfo = xmalloc (sizeof (struct hardlink_info));
 
@@@@ -582,7 +584,7 @@@@ get_linkinfo_proc (void *callerdat, stru
  * set to the path relative to where we started (for pretty printing).
  * repository is the repository. entries and srcfiles are the pre-parsed
  * entries and source control files.
- * 
+ *
  * This routine decides what needs to be done for each file and does the
  * appropriate magic for checkout
  */
@@@@ -625,7 +627,7 @@@@ update_fileproc (void *callerdat, struct
 	/*
 	 * We just return success without doing anything if any of the really
 	 * funky cases occur
-	 * 
+	 *
 	 * If there is still a valid RCS file, do a regular checkout type
 	 * operation
 	 */
@@@@ -695,7 +697,7 @@@@ update_fileproc (void *callerdat, struct
                     status = T_CHECKOUT;
                     retval = checkout_file (finfo, vers, 0, 0, 1);
                 }
-                else 
+                else
                 {
                     if (vers->ts_conflict)
                     {
@@@@ -707,7 +709,7 @@@@ update_fileproc (void *callerdat, struct
                         else
                         {
                             /* Reregister to clear conflict flag. */
-                            Register (finfo->entries, finfo->file, 
+                            Register (finfo->entries, finfo->file,
                                       vers->vn_rcs, vers->ts_rcs,
                                       vers->options, vers->tag,
                                       vers->date, NULL);
@@@@ -1197,7 +1199,7 @@@@ checkout_file (struct file_info *finfo, 
d50 9
a58 38
@@@@ -1343,7 +1345,7 @@@@ VERS: ", 0);
 
 	    wrap_fromcvs_process_file (finfo->file);
 
-	    xvers_ts = Version_TS (finfo, options, tag, date, 
+	    xvers_ts = Version_TS (finfo, options, tag, date,
 				   force_tag_match, set_time);
 	    if (strcmp (xvers_ts->options, "-V4") == 0)
 		xvers_ts->options[0] = '\0';
@@@@ -1642,7 +1644,7 @@@@ patch_file (struct file_info *finfo, Ver
 	    fail = 1;
 	else
 	    md5_finish_ctx (&data.context, checksum);
-    }	  
+    }
 
     retcode = 0;
     if (! fail)
@@@@ -2250,8 +2252,8 @@@@ join_file (struct file_info *finfo, Vers
            for removal.  FIXME: If we are doing a checkout, this has
            the effect of first checking out the file, and then
            removing it.  It would be better to just register the
-           removal. 
-	
+           removal.
+
 	   The same goes for a removal then an add.  e.g.
 	   cvs up -rbr -jbr2 could remove and readd the same file
 	 */
@@@@ -2839,7 +2841,7 @@@@ special_file_mismatch (struct file_info 
 		   (rev2 == NULL ? "working file" : rev2));
 	    result = 1;
 	}
-    
+
 	/* Compare permissions. */
 	if (check_modes &&
 	    (rev1_mode & 07777) != (rev2_mode & 07777))
@


1.1
log
@add cvs port, compiles fine and warning-free on MirOS-current;
other OSes not tested, older MirOS may have issues (mktime, regex/wctype)
@
text
@d1 83
a83 4
$MirOS$
--- src/update.c.orig	Thu Sep 22 18:48:55 2005
+++ src/update.c	Mon Oct  2 04:40:37 2006
@@@@ -1197,7 +1197,7 @@@@ checkout_file (struct file_info *finfo, 
d92 38
@

