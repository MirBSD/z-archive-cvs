head	1.3;
access;
symbols
	bsiegert-experimental:1.2.0.4
	bsiegert-experimental_BASE:1.2
	bsiegert-pkgconfig:1.2.0.2
	bsiegert-pkgconfig_base:1.2;
locks; strict;
comment	@# @;


1.3
date	2010.11.25.12.09.58;	author bsiegert;	state Exp;
branches;
next	1.2;
commitid	1004CEE51FF028684B4;

1.2
date	2005.12.28.15.49.35;	author tg;	state Exp;
branches
	1.2.2.1
	1.2.4.1;
next	1.1;
commitid	10043B2B3F34F224B12;

1.1
date	2005.03.18.15.45.22;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.2.2.1
date	2008.08.08.20.15.30;	author bsiegert;	state Exp;
branches;
next	;
commitid	100489CA91237E7272E;

1.2.4.1
date	2009.11.24.19.53.45;	author bsiegert;	state Exp;
branches;
next	;
commitid	1004B0C39C3525BF8BF;

1.1.7.1
date	2005.03.18.15.45.22;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Merge pkgconfig-0.23 into trunk. THis is now the mandatory version for
building packages, as it is needed at least for the new glib2 etc.
@
text
@$MirOS: ports/devel/pkgconfig/patches/patch-configure_in,v 1.2 2005/12/28 15:49:35 tg Exp $
--- configure.in.orig	2008-01-16 23:48:07.000000000 +0100
+++ configure.in	2008-08-06 08:47:32.000000000 +0200
@@@@ -85,34 +85,7 @@@@ case "$libdir" in
 *) : ;;
 esac
 
-if test x$native_win32 = xyes; then
-  # On Win32, use the normal installed GLib.  Yes, this is a circular
-  # dependency. But then, only experienced hackers that presumably can
-  # work around that will be building pkg-config and GLib on Win32
-  # anyway (especially using the auto*/configure/libtool
-  # mechanism). Others use prebuilt versions.
-  #
-  # These are correct for GLib 2.x
-  GLIB_CFLAGS="-I$includedir/glib-2.0 -I$libdir/glib-2.0/include"
-  GLIB_LIBS="-L$libdir -lglib-2.0 -liconv -lintl"
-  use_installed_glib=yes
-else
-  use_installed_glib=no
-  AC_ARG_WITH([installed-glib],
-    [  --with-installed-glib   Use installed Glib-2.x], [
-    if test x$withval = xyes; then
-      # Not on Win32, but the user requested to use the installed Glib-2.x,
-      # therefore we may assume that (some older version of) pkg-config can
-      # be found in the users PATH (otherwise we simply ignore the request).
-      AC_CHECK_PROGS([PKG_CONFIG], [pkg-config], [])
-      if test -n $PKG_CONFIG && $PKG_CONFIG --exists glib-2.0; then
-	GLIB_CFLAGS=`$PKG_CONFIG --cflags glib-2.0`
-	GLIB_LIBS=`$PKG_CONFIG --libs glib-2.0`
-	use_installed_glib=yes
-      fi
-    fi
-  ])
-fi # !use_installed_glib
+use_installed_glib=yes
 
 AM_CONDITIONAL(USE_INSTALLED_GLIB, test x$use_installed_glib = xyes)
 
@


1.2
log
@* it just cannot be that this brings its own libglib-1.2, while
  we have a port which can be used (and has been patched to work
  well within our environment)
* while here, fix underquoted definition (m4)
* bump patchlevel, clean up Makefile
@
text
@d1 6
a6 4
$MirOS: ports/devel/pkgconfig/patches/patch-configure_in,v 1.1.7.1 2005/03/18 15:45:22 tg Exp $
--- configure.in.orig	Thu Jan 16 21:07:09 2003
+++ configure.in	Wed Dec 28 15:45:50 2005
@@@@ -10,38 +10,12 @@@@ AM_PROG_LIBTOOL
a7 16
 AC_PROG_CC
 
-AC_MSG_CHECKING([for Win32])
-case "$host" in
-  *-*-mingw*)
-    native_win32=yes
     AC_DEFINE(USE_INSTALLED_GLIB, 1, [We are using an installed GLib])
-  ;;
-  *)
-    native_win32=no
-  ;;
-esac
-AC_MSG_RESULT([$native_win32])
 
-AM_CONDITIONAL(USE_INSTALLED_GLIB, test x$native_win32 = xyes)
-
d18 1
a18 5
-
   AC_SUBST(GLIB_LIBS)
   AC_SUBST(GLIB_CFLAGS)
 
-  AC_CONFIG_AUX_DIR(.)
d20 17
a36 3
-  AC_CONFIG_SUBDIRS(glib-1.2.8)
-fi # !native_win32
+AM_CONDITIONAL(USE_INSTALLED_GLIB, test xyes = xyes)
d38 1
a38 1
 AC_FUNC_ALLOCA
@


1.2.4.1
log
@Experimental upgrade to 0.23-0.
@
text
@d1 4
a4 4
$MirOS: ports/devel/pkgconfig/patches/patch-configure_in,v 1.2 2005/12/28 15:49:35 tg Exp $
--- configure.in.orig	Wed Jan 16 23:47:44 2008
+++ configure.in	Fri Nov 20 18:28:38 2009
@@@@ -69,50 +69,12 @@@@ AC_SUBST(WARN_CFLAGS)
d6 1
a6 1
 AC_DEFINE_UNQUOTED(ENABLE_INDIRECT_DEPS, `test $use_indirect_deps = no; echo $?`, [Link library to all dependent libraries, not only directly needed ones])
d12 1
d19 2
a21 5
 case "$libdir" in
 *lib64) AC_DEFINE(PREFER_LIB64,1,[Define if your native architecture defines libdir to be $prefix/lib64 instead of $prefix/lib.]) ;;
 *) : ;;
 esac
 
d32 5
a36 1
-  use_installed_glib=yes
d38 3
a40 17
-  use_installed_glib=no
-  AC_ARG_WITH([installed-glib],
-    [  --with-installed-glib   Use installed Glib-2.x], [
-    if test x$withval = xyes; then
-      # Not on Win32, but the user requested to use the installed Glib-2.x,
-      # therefore we may assume that (some older version of) pkg-config can
-      # be found in the users PATH (otherwise we simply ignore the request).
-      AC_CHECK_PROGS([PKG_CONFIG], [pkg-config], [])
-      if test -n $PKG_CONFIG && $PKG_CONFIG --exists glib-2.0; then
-	GLIB_CFLAGS=`$PKG_CONFIG --cflags glib-2.0`
-	GLIB_LIBS=`$PKG_CONFIG --libs glib-2.0`
-	use_installed_glib=yes
-      fi
-    fi
-  ])
-fi # !use_installed_glib
+use_installed_glib=yes
d42 1
a42 1
 AM_CONDITIONAL(USE_INSTALLED_GLIB, test x$use_installed_glib = xyes)
@


1.2.2.1
log
@Update (inside the branch) pkg-config to 0.23. I was told a long time ago
that with newer pkgconfig versions, "bad things happen" on MirOS. However,
I do need the new version for LyX/Mac. So let's try this on MirOS some time
and see what happens.

For persons feeling lucky: Install this and try to build some software on
MirOS. ;)
@
text
@d1 4
a4 6
$MirOS: ports/devel/pkgconfig/patches/patch-configure_in,v 1.2 2005/12/28 15:49:35 tg Exp $
--- configure.in.orig	2008-01-16 23:48:07.000000000 +0100
+++ configure.in	2008-08-06 08:47:32.000000000 +0200
@@@@ -85,34 +85,7 @@@@ case "$libdir" in
 *) : ;;
 esac
d6 16
d32 5
a36 1
-  use_installed_glib=yes
d38 3
a40 17
-  use_installed_glib=no
-  AC_ARG_WITH([installed-glib],
-    [  --with-installed-glib   Use installed Glib-2.x], [
-    if test x$withval = xyes; then
-      # Not on Win32, but the user requested to use the installed Glib-2.x,
-      # therefore we may assume that (some older version of) pkg-config can
-      # be found in the users PATH (otherwise we simply ignore the request).
-      AC_CHECK_PROGS([PKG_CONFIG], [pkg-config], [])
-      if test -n $PKG_CONFIG && $PKG_CONFIG --exists glib-2.0; then
-	GLIB_CFLAGS=`$PKG_CONFIG --cflags glib-2.0`
-	GLIB_LIBS=`$PKG_CONFIG --libs glib-2.0`
-	use_installed_glib=yes
-      fi
-    fi
-  ])
-fi # !use_installed_glib
+use_installed_glib=yes
d42 1
a42 1
 AM_CONDITIONAL(USE_INSTALLED_GLIB, test x$use_installed_glib = xyes)
@


1.1
log
@Initial revision
@
text
@d1 4
a4 4
$MirOS$
--- configure.in.orig	2004-03-14 20:54:30.000000000 +0000
+++ configure.in	2004-03-14 20:54:47.000000000 +0000
@@@@ -24,24 +24,7 @@@@ AC_MSG_RESULT([$native_win32])
d6 1
a6 1
 AM_CONDITIONAL(USE_INSTALLED_GLIB, test x$native_win32 = xyes)
d8 14
d33 3
a35 3
-  AC_SUBST(GLIB_LIBS)
-  AC_SUBST(GLIB_CFLAGS)
-
d38 1
a38 1
   AC_CONFIG_SUBDIRS(glib-1.2.8)
d40 1
@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
