head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2009.01.03.20.49.00;	author bsiegert;	state Exp;
branches;
next	1.1;
commitid	100495FCEB33EE258C2;

1.1
date	2009.01.02.16.40.46;	author bsiegert;	state Exp;
branches;
next	;
commitid	100495E4392514E9D6F;


desc
@@


1.2
log
@Add a missing slash at the end of the download paths
@
text
@# $MirOS: ports/devel/p5-Test-Exception/Makefile,v 1.1 2009/01/02 16:40:46 bsiegert Exp $

COMMENT=		test exception based code
DISTNAME=		Test-Exception-0.27
PKGNAME=		p5-${DISTNAME}-${DASH_VER}
CATEGORIES=		devel perl5
MASTER_SITES=		${MASTER_SITE_PERL_CPAN:=../../authors/id/A/AD/ADIE/}

PERMIT_PACKAGE_CDROM=	Yes
PERMIT_PACKAGE_FTP=	Yes
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_DISTFILES_FTP=	Yes

CONFIGURE_STYLE=	perl

B_R_DEPENDS+=		:p5-Sub-Uplevel>=0.18:devel/p5-Sub-Uplevel

PKG_ARCH=		*

.include <bsd.port.mk>
@


1.1
log
@Add a port for Test::Exception. From DESCR:

This module provides a few convenience methods for testing exception
based code. It is built with Test::Builder and plays happily with
Test::More and friends.

Test::Exception only checks for exceptions. It will ignore other
methods of stopping program execution - including exit(). If you have an
exit() in evalled code, Test::Exception will not catch this with any of
its testing functions.
@
text
@d1 1
a1 1
# $MirOS: ports/infrastructure/templates/perlmod.Makefile,v 1.1 2009/01/01 17:11:33 bsiegert Exp $
d7 1
a7 1
MASTER_SITES=		${MASTER_SITE_PERL_CPAN:=../../authors/id/A/AD/ADIE}
@

