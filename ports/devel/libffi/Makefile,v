head	1.6;
access;
symbols
	start:1.1.1.1 tg:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2014.05.28.19.07.39;	author tg;	state Exp;
branches;
next	1.5;
commitid	1005386340A207CCD06;

1.5
date	2014.04.09.21.11.37;	author tg;	state Exp;
branches;
next	1.4;
commitid	1005345B7A2215AEFB9;

1.4
date	2009.10.13.17.36.27;	author bsiegert;	state Exp;
branches;
next	1.3;
commitid	1004AD4B62575A2DCC0;

1.3
date	2008.12.07.18.57.51;	author tg;	state Exp;
branches;
next	1.2;
commitid	100493C1C934A10FB73;

1.2
date	2008.12.06.13.48.26;	author tg;	state Exp;
branches;
next	1.1;
commitid	100493A82A35B130A79;

1.1
date	2008.08.08.15.53.57;	author tg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	100489C6BDF38E32927;

1.1.1.1
date	2008.08.08.15.53.57;	author tg;	state Exp;
branches;
next	;
commitid	100489C6BDF38E32927;


desc
@@


1.6
log
@update DESCR, distinfo; add HOMEPAGE; remove junk from Makefile
@
text
@# $MirOS: ports/devel/libffi/Makefile,v 1.5 2014/04/09 21:11:37 tg Exp $

COMMENT=		foreign function calling interface library
CATEGORIES=		devel
RESPONSIBLE=		Thorsten Glaser <tg@@mirbsd.de>
DISTNAME=		libffi-3.0.8
DASH_VER=		1
HOMEPAGE=		http://sourceware.org/libffi/

# Historic Permission Clause
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_DISTFILES_FTP=	Yes
PERMIT_PACKAGE_CDROM=	Yes
PERMIT_PACKAGE_FTP=	Yes

MASTER_SITES=		ftp://sourceware.org/pub/libffi/
MODULES+=		devel/pkgconfig
REGRESS_DEPENDS+=	::devel/dejagnu

CONFIGURE_STYLE=	autogen
AUTOMAKE_VERSION=	1.9
AUTOCONF_NEW=		Yes

CONFIGURE_ARGS+=	${CONFIGURE_SHARED}
CONFIGURE_ARGS+=	CCASFLAGS=-D_ASM_SOURCE

.include <bsd.port.mk>
@


1.5
log
@fix build
@
text
@d1 1
a1 1
# $MirOS: ports/devel/libffi/Makefile,v 1.4 2009/10/13 17:36:27 bsiegert Exp $
d8 1
a8 1
MASTER_SITES=		ftp://sourceware.org/pub/libffi/
d16 1
a19 1
#WRKDIST=		${WRKDIR}/gcc/libffi
a26 1

@


1.4
log
@libffi-3.0.8

We gain:
- a .pc file,
- an info page,
- the warm and fuzzy feeling of not using a "beta" version that the gcc
  people chose to import at some point and fiddle around with.

Builds on MirOS and Darwin. Regression tests do not work on Darwin, as it
uses dejagnu, which uses Tcl, which is ONLY_FOR_PLATFORM mirbsd. Does not
work on MirOS either. Will test python build next.
@
text
@d1 1
a1 1
# $MirOS: ports/devel/libffi/Makefile,v 1.3 2008/12/07 18:57:51 tg Exp $
d7 1
@


1.3
log
@switch all CVS_DISTF (and svn) to MCZ_FETCH=Yes except these
which already were or these which are broken anyway (net/bind)
to make them IS_INTERACTIVE=No and thus suitable for bulk builds

agreed bsiegert@@
@
text
@d1 1
a1 1
# $MirOS: ports/devel/libffi/Makefile,v 1.2 2008/12/06 13:48:26 tg Exp $
a4 5
MCZ_FETCH=		Yes
CVS_DISTREPO=		${_MIROS_ANONCVS}
CVS_DISTDATE=		2008/08/08
CVS_DISTMODS=		gcc/libffi gcc/config/accross.m4
CVS_DISTFILE=		libffi
d6 2
d15 4
a18 1
WRKDIST=		${WRKDIR}/gcc/libffi
a21 2
MAKE_FLAGS+=		'libffi_la_OBJECTS=$$(libffi_la_SOURCES:T:R:=.lo)'
EXTRA_XAKE_FLAGS+=	toolexeclibdir='$$(libdir)'
d23 3
a25 2
post-extract:
	print '/libtool.m4/d\nwq' | ed -s ${WRKSRC}/acinclude.m4
@


1.2
log
@the mnbsd people botched up their gcc configuration (targetting
a multi-os with only one entry), so work around:

mirabilos@@stargazer:~ $ cc -print-multi-os-directory
elf
@
text
@d1 1
a1 1
# $MirOS: ports/devel/libffi/Makefile,v 1.1.1.1 2008/08/08 15:53:57 tg Exp $
d5 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $MirOS$
d22 1
@


1.1.1.1
log
@Add a couple of ports required for the customer whose job I'll now be
handling: the Pawn scripting language (of which E17's Embryo is a fork),
a gtk-server binary port (for quick testing; we'll probably want a na-
tive one in both GTK+1.2 and GTK+2 flavours), and libffi from base-gcj.
@
text
@@
