head	1.3;
access;
symbols
	bsiegert-experimental:1.2.0.2
	bsiegert-experimental_BASE:1.2;
locks; strict;
comment	@# @;


1.3
date	2010.11.25.15.35.40;	author bsiegert;	state Exp;
branches;
next	1.2;
commitid	1004CEE81C53B9CCA70;

1.2
date	2009.07.07.18.08.02;	author bsiegert;	state Exp;
branches
	1.2.2.1;
next	1.1;
commitid	1004A538EED0D4E6F70;

1.1
date	2008.03.06.22.08.24;	author tg;	state Exp;
branches;
next	;
commitid	10047D06AEA5DDE8D1F;

1.2.2.1
date	2009.07.15.16.46.56;	author bsiegert;	state Exp;
branches;
next	;
commitid	1004A5E07FE2C199394;


desc
@@


1.3
log
@Step by step, bring Gtk+ a bit closer to the current version. Update
glib to latest 2.14, pango to latest 1.18 and Gtk+ to latest 2.12.
Update these three together.

Pango does not build its xft backend because we do not have a xrender.pc
file in base. Some packages that depend on pangoxft will have to be touched.
@
text
@$MirOS: ports/devel/glib/patches/patch-glib_gslice_c,v 1.2 2009/07/07 18:08:02 bsiegert Exp $
--- glib/gslice.c.orig	Fri Sep 12 19:55:28 2008
+++ glib/gslice.c	Thu Nov 25 12:24:44 2010
@@@@ -103,6 +103,7 @@@@
 /* --- macros and constants --- */
 #define LARGEALIGNMENT          (256)
 #define P2ALIGNMENT             (2 * sizeof (gsize))                            /* fits 2 pointers (assumed to be 2 * GLIB_SIZEOF_SIZE_T below) */
+#undef ALIGN /* from <machine/param.h> */
 #define ALIGN(size, base)       ((base) * (gsize) (((size) + (base) - 1) / (base)))
 #define NATIVE_MALLOC_PADDING   P2ALIGNMENT                                     /* per-page padding left for native malloc(3) see [1] */
 #define SLAB_INFO_SIZE          P2ALIGN (sizeof (SlabInfo) + NATIVE_MALLOC_PADDING)
@@@@ -1110,8 +1111,10 @@@@ slab_allocator_free_chunk (gsize    chun
 }
 
 /* --- memalign implementation --- */
+#if HAVE_MEMALIGN
 #ifdef HAVE_MALLOC_H
 #include <malloc.h>             /* memalign() */
+#endif
 #endif
 
 /* from config.h:
@


1.2
log
@Fix on newer gcc versions by replacing "extern inline" by "static inline".
Bump.
@
text
@d1 4
a4 4
$MirOS: ports/devel/glib/patches/patch-glib_gslice_c,v 1.1 2008/03/06 22:08:24 tg Exp $
--- glib/gslice.c.orig	2007-07-16 20:57:12.000000000 +0200
+++ glib/gslice.c	2009-07-07 19:49:26.000000000 +0200
@@@@ -101,6 +101,7 @@@@
d12 1
a12 1
@@@@ -1039,9 +1040,11 @@@@ slab_allocator_free_chunk (gsize    chun
d19 1
a20 1
+#endif
a22 1
  * define HAVE_POSIX_MEMALIGN           1 // if free(posix_memalign(3)) works, <stdlib.h>
@


1.2.2.1
log
@Update to 2.21.3, not ready for general consumption yet.
@
text
@d1 4
a4 4
$MirOS: ports/devel/glib/patches/patch-glib_gslice_c,v 1.2 2009/07/07 18:08:02 bsiegert Exp $
--- glib/gslice.c.orig	2009-04-01 01:04:20.000000000 +0200
+++ glib/gslice.c	2009-07-14 20:28:31.000000000 +0200
@@@@ -103,6 +103,7 @@@@
d12 1
a12 1
@@@@ -1110,9 +1111,11 @@@@ slab_allocator_free_chunk (gsize    chun
@


1.1
log
@couple of improvements, bsiegert@@ agreed good idea
• re-run mmake makesum → add TIGER hash
• refresh patches (changes offsets)
• fix time_t casts
• do not call iconv if fromcharset and tocharset are the same
• do not cast a pointer to a long into a time_t oO
• while openbsd may have no wchar_t functions, do not prevent
  mac osx and mirbsd from using full unicode stuff
• ALIGN is defined by <machine/param.h>
• <malloc.h> _is_ obsolete
• support U+1E9E (ẞ, uppercase eszett)
@
text
@d1 3
a3 3
$MirOS$
--- glib/gslice.c.orig	Sat Sep 30 14:21:15 2006
+++ glib/gslice.c	Thu Mar  6 21:22:01 2008
d12 1
a12 1
@@@@ -1039,8 +1040,10 @@@@ slab_allocator_free_chunk (gsize    chun
d19 1
a20 1
 #endif
d23 1
@

