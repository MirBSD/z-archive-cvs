head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2008.10.04.23.47.14;	author tg;	state dead;
branches;
next	1.1;
commitid	10048E80064338F320C;

1.1
date	2005.03.18.15.44.30;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.44.30;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@• MirPorts standardisation: use ~/.etc/ccache by default
• fix the regression test, which falsely assumes that ${CC} is not
  a full pathname, but the basename of a compiler binary
• while here, nuke the pkg/ dir
@
text
@ccache is a compiler cache.  It acts as a caching pre-processor to
C/C++ compilers, utilizing compiler output and a hash to detect
when a compilation can be satisfied from cache.  This often results
in a 5 to 10 times speedup in common compilations.

The most important aspect of ccache is to _always_ produce exactly
the same output that the real compiler would produce.  This includes
providing exactly the same object files and exactly the same compiler
warnings that would be produced if you use the real compiler.

ccache typically adds a little bit of a slowdown to uncached compiles,
but makes up for it with drastic speedups in already-seen compiles
that it has cached.
@


1.1
log
@Initial revision
@
text
@@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
