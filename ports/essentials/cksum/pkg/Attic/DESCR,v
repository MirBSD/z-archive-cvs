head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	2009.06.29.19.36.17;	author tg;	state dead;
branches;
next	1.4;
commitid	1004A4917C152027FF4;

1.4
date	2008.03.09.16.42.42;	author tg;	state Exp;
branches;
next	1.3;
commitid	10047D4138B2CD6605D;

1.3
date	2006.10.13.17.09.20;	author tg;	state Exp;
branches;
next	1.2;
commitid	100452FC7FA2E1D2241;

1.2
date	2006.05.26.22.08.57;	author tg;	state Exp;
branches;
next	1.1;
commitid	10044777C824FD6F425;

1.1
date	2005.04.12.21.07.00;	author tg;	state Exp;
branches;
next	;


desc
@@


1.5
log
@update, new cool tool ;)
@
text
@A port for the MirOS base checksumming tools:
* cksum(1)
* md5(1)
* rmd160(1)
* sha1(1)
* sum(1)

Supported algorithms:
* ADLER32 CKSUM MD4 MD5 RMD160 SFV SHA1 SHA256 SHA384
  SHA512 SIZE SUM SUMA SYSVSUM TIGER WHIRLPOOL
@


1.4
log
@upgrade mirmake and mircksum, part 1 â†’ on MirOS
agreed bsiegert@@
@
text
@@


1.3
log
@new cksum package, leads to more distinguished choices
should, however, bring TIGER to everyone
@
text
@d9 2
a10 2
* SUM CKSUM SYSVSUM SUMA ADLER32 MD4 MD5 RMD160 SFV
  SHA1 SHA256 SHA384 SHA512 SIZE TIGER
@


1.2
log
@upgrade to newer version, supports suma mi and adler32 mi and md.i386
@
text
@d9 2
a10 1
* SUM CKSUM SYSVSUM SUMA ADLER32 MD4 MD5 RMD160 SHA1 SHA256 SHA384 SHA512
@


1.1
log
@My first Mac OSX port

Shortcoming: no sha512 checksums are generated or checked,
and there is (believe me) no way to get them.
Doesn't matter much though, since we check size+md5+sha1+rmd160
and sha2 is not more secure than sha1 anyway, only longer.
@
text
@d9 1
a9 1
* SUM CKSUM SYSVSUM MD4 MD5 RMD160 SHA1 SHA256 SHA384 SHA512
@

