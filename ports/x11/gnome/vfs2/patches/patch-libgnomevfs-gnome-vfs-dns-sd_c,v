head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2007.06.20.19.57.04;	author bsiegert;	state Exp;
branches;
next	1.2;
commitid	1004679862B7F2631F9;

1.2
date	2005.10.15.17.23.49;	author bsiegert;	state Exp;
branches;
next	1.1;
commitid	3f6c43513b104dc0;

1.1
date	2005.03.18.16.00.35;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.16.00.35;	author tg;	state Exp;
branches;
next	;


desc
@@


1.3
log
@GNOME update, the first part.

Actually, it is libbonoboui that is not compatible with the new Gtk+. But
I have to update some stuff along with it, so what the heck, I am doing a
little bit more.

Attention on update: gconf now uses PREFIX/db/gconf instead of /var/db and
.etc/gconf instead of .gconf.
@
text
@$MirOS: ports/x11/gnome/vfs2/patches/patch-libgnomevfs-gnome-vfs-dns-sd_c,v 1.2 2005/10/15 17:23:49 bsiegert Exp $
--- libgnomevfs/gnome-vfs-dns-sd.c.orig	Tue Apr 10 14:03:36 2007
+++ libgnomevfs/gnome-vfs-dns-sd.c	Sun Jun 17 13:38:05 2007
@@@@ -85,7 +85,7 @@@@ typedef struct {
 } dns_message_header;
 
 typedef struct {
-	char name[NS_MAXDNAME];
+       char name[MAXDNAME];
 	guint16 type;
 	guint16 class;
 	guint32 ttl;
@@@@ -250,7 +250,7 @@@@ parse_header (unsigned char *reply, int 
 	      unsigned char *p,
 	      dns_message_header *header)
 {
-	if (reply_len < NS_HFIXEDSZ)
+       if (reply_len < HFIXEDSZ)
 		return -1;
 
 	header->id = decode_16 (p); p += 2;
@@@@ -260,7 +260,7 @@@@ parse_header (unsigned char *reply, int 
 	header->nscount = decode_16 (p); p += 2;
 	header->arcount = decode_16 (p); p += 2;
 
-	return NS_HFIXEDSZ;
+	return HFIXEDSZ;
 }
 
 
@@@@ -333,7 +333,7 @@@@ unicast_list_domains_sync (const char *d
 	unsigned char reply[DNS_REPLY_SIZE];
 	unsigned char *p;
 	char *searchdomain;
-	char name[NS_MAXDNAME];
+	char name[MAXDNAME];
 	dns_message_header header;
 	dns_message_rr rr;
 	int res;
@@@@ -349,7 +349,7 @@@@ unicast_list_domains_sync (const char *d
 	/* Use TCP to support large queries */
 	_res.options |= RES_USEVC;
 	searchdomain = g_strconcat ("_browse._dns-sd._udp.", domain, NULL);
-	reply_len = res_search (searchdomain, ns_c_in, ns_t_ptr,
+	reply_len = res_search (searchdomain, C_IN, T_PTR,
 				reply, sizeof (reply));
 	g_free (searchdomain);
 	if (reply_len == -1) {
@@@@ -393,7 +393,7 @@@@ unicast_list_domains_sync (const char *d
 			goto error;
 		p += len;
 		
-		if (rr.type == ns_t_ptr) {
+		if (rr.type == T_PTR) {
 			len = dn_expand (reply, reply + reply_len, p, name, sizeof(name));
 			if (len < 0) 
 				goto error;
@@@@ -444,7 +444,7 @@@@ unicast_browse_sync (const char *domain,
 	unsigned char reply[DNS_REPLY_SIZE];
 	unsigned char *p;
 	char *searchdomain;
-	char name[NS_MAXDNAME];
+	char name[MAXDNAME];
 	dns_message_header header;
 	dns_message_rr rr;
 	GArray *array;
@@@@ -461,7 +461,7 @@@@ unicast_browse_sync (const char *domain,
 	/* Use TCP to support large queries */
 	_res.options |= RES_USEVC;
 	searchdomain = g_strconcat (type, ".", domain, NULL);
-	reply_len = res_search (searchdomain, ns_c_in, ns_t_ptr,
+	reply_len = res_search (searchdomain, C_IN, T_PTR,
 				reply, sizeof (reply));
 	g_free (searchdomain);
 	if (reply_len == -1) {
@@@@ -507,11 +507,12 @@@@ unicast_browse_sync (const char *domain,
 			goto error;
 		p += len;
 		
-		if (rr.type == ns_t_ptr) {
+		if (rr.type == T_PTR) {
 			GnomeVFSDNSSDService service;
-			char ptr_service[NS_MAXDNAME];
-			char ptr_type[NS_MAXDNAME];
-			char ptr_domain[NS_MAXDNAME];
+
+			char ptr_service[MAXDNAME];
+			char ptr_type[MAXDNAME];
+			char ptr_domain[MAXDNAME];
 			
 			len = dn_expand (reply, reply + reply_len, p, name, sizeof(name));
 			if (len < 0) 
@@@@ -605,7 +606,7 @@@@ unicast_resolve_sync (const char *name,
 	int reply_len, len, i;
 	unsigned char reply[DNS_REPLY_SIZE];
 	unsigned char *p;
-	char dnsname[NS_MAXDNAME];
+	char dnsname[MAXDNAME];
 	dns_message_header header;
 	dns_message_rr rr;
 	char *full_name;
@@@@ -625,7 +626,7 @@@@ unicast_resolve_sync (const char *name,
 	_res.options |= RES_USEVC;
   
 	full_name = service_to_dns_name (name, type, domain);
-	reply_len = res_search (full_name, ns_c_in, ns_t_any,
+	reply_len = res_search (full_name, C_IN, T_ANY,
 				reply, sizeof (reply));
 	g_free (full_name);
 	if (reply_len == -1) {
@@@@ -669,7 +670,7 @@@@ unicast_resolve_sync (const char *name,
 			goto error;
 		p += len;
 		
-		if (rr.type == ns_t_srv) {
+		if (rr.type == T_SRV) {
 			unsigned char *pp;
 			int priority, weight, port;
 			
@@@@ -690,7 +691,7 @@@@ unicast_resolve_sync (const char *name,
 			}
 		}
 		
-		if (rr.type == ns_t_txt) {
+		if (rr.type == T_TXT) {
 			*text_raw_out = g_memdup (p, rr.rdlength);
 			*text_raw_len_out = rr.rdlength;
 		}
@


1.2
log
@Update gnome-vfs to 2.12.1.1-0, hope I got it right...
@
text
@d1 4
a4 4
$MirOS$
--- libgnomevfs/gnome-vfs-dns-sd.c.orig	Thu Jul 14 09:47:31 2005
+++ libgnomevfs/gnome-vfs-dns-sd.c	Wed Oct 12 21:53:57 2005
@@@@ -76,7 +76,7 @@@@ typedef struct {
d13 1
a13 1
@@@@ -241,7 +241,7 @@@@ parse_header (unsigned char *reply, int 
d22 1
a22 1
@@@@ -251,7 +251,7 @@@@ parse_header (unsigned char *reply, int 
d31 1
a31 1
@@@@ -324,7 +324,7 @@@@ unicast_list_domains_sync (const char *d
d40 1
a40 1
@@@@ -340,7 +340,7 @@@@ unicast_list_domains_sync (const char *d
d49 1
a49 1
@@@@ -384,7 +384,7 @@@@ unicast_list_domains_sync (const char *d
d58 1
a58 1
@@@@ -435,7 +435,7 @@@@ unicast_browse_sync (const char *domain,
d67 1
a67 1
@@@@ -452,7 +452,7 @@@@ unicast_browse_sync (const char *domain,
d76 1
a76 1
@@@@ -498,11 +498,12 @@@@ unicast_browse_sync (const char *domain,
d93 1
a93 1
@@@@ -596,7 +597,7 @@@@ unicast_resolve_sync (const char *name,
d102 1
a102 1
@@@@ -616,7 +617,7 @@@@ unicast_resolve_sync (const char *name,
d111 1
a111 1
@@@@ -660,7 +661,7 @@@@ unicast_resolve_sync (const char *name,
d120 1
a120 1
@@@@ -681,7 +682,7 @@@@ unicast_resolve_sync (const char *name,
@


1.1
log
@Initial revision
@
text
@d1 4
a4 3
--- libgnomevfs/gnome-vfs-dns-sd.c.orig	Tue Sep 21 01:05:42 2004
+++ libgnomevfs/gnome-vfs-dns-sd.c	Sun Dec 12 16:24:37 2004
@@@@ -60,7 +60,7 @@@@ typedef struct {
d13 1
a13 1
@@@@ -225,7 +225,7 @@@@ parse_header (char *reply, int reply_len
d22 1
a22 1
@@@@ -235,7 +235,7 @@@@ parse_header (char *reply, int reply_len
d31 1
a31 1
@@@@ -308,7 +308,7 @@@@ unicast_list_domains_sync (const char *d
d40 1
a40 1
@@@@ -324,7 +324,7 @@@@ unicast_list_domains_sync (const char *d
d49 1
a49 1
@@@@ -368,7 +368,7 @@@@ unicast_list_domains_sync (const char *d
d58 1
a58 1
@@@@ -419,7 +419,7 @@@@ unicast_browse_sync (const char *domain,
d67 1
a67 1
@@@@ -436,7 +436,7 @@@@ unicast_browse_sync (const char *domain,
d76 1
a76 1
@@@@ -482,11 +482,12 @@@@ unicast_browse_sync (const char *domain,
d93 1
a93 1
@@@@ -580,7 +581,7 @@@@ unicast_resolve_sync (const char *name,
d102 1
a102 1
@@@@ -600,7 +601,7 @@@@ unicast_resolve_sync (const char *name,
d111 1
a111 1
@@@@ -644,7 +645,7 @@@@ unicast_resolve_sync (const char *name,
d120 1
a120 1
@@@@ -665,7 +666,7 @@@@ unicast_resolve_sync (const char *name,
@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
