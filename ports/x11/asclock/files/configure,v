head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2008.03.09.17.23.41;	author tg;	state Exp;
branches;
next	1.1;
commitid	10047D41CAA7E715397;

1.1
date	2005.03.18.16.00.12;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.16.00.12;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@bulk convert FLAVOR to FLAVOUR; nuke unused file; convert to $Mdocdate
@
text
@#!/usr/bin/perl -w
#
# $OpenBSD: configure,v 1.1 2001/01/06 16:43:44 naddy Exp $

use strict;

my @@themes = split " ", $ENV{THEMES} or die "$0: must define THEMES\n";
my @@classics = split " ", $ENV{CLASSICS} or die "$0: must define CLASSICS\n";
my @@languages = split " ", $ENV{LANGUAGES} or die "$0: must define LANGUAGES\n";
my @@flavour = split " ", $ENV{FLAVOUR} or die "$0: must define FLAVOUR\n";
my (%theme, %classic, %lang);
my $action;

if ($ARGV[0] eq 'chk') {
    $action = 0;
} elsif ($ARGV[0] eq 'conf') {
    $action = 1;
} else {
    die "usage: $0 chk|conf\n";
}

my $wrksrc = $ENV{WRKSRC} or die "$0: must define WRKSRC\n" if $action;

foreach my $i (@@themes) { $theme{lc $i} = $i };
foreach my $i (@@classics) { $classic{lc $i} = 1 };
foreach my $i (@@languages) { $lang{$i} = 1 };

chdir $wrksrc or die "$0: can't chdir to $wrksrc: $!\n" if $action;

if ($#flavour == 0) {
    &invalid_flavour if !$theme{$flavour[0]} || $classic{$flavour[0]};
    symlink "themes/$theme{$flavour[0]}", "default_theme" if $action;
} elsif ($#flavour == 1) {
    if ($classic{$flavour[0]} && $lang{$flavour[1]}) {
	;
    } elsif ($classic{$flavour[1]} && $lang{$flavour[0]}) {
	@@flavour = ($flavour[1], $flavour[0]);
    } else {
	&invalid_flavour;
    }
    mkdir "default_theme" if $action;
    foreach my $i (qw(config date.xpm clock.xpm led.xpm hour.xpm
		      minute.xpm second.xpm beats.xpm)) {
	symlink "../themes/$theme{$flavour[0]}/$i","default_theme/$i" if $action;
    }
    foreach my $i (qw(month.xpm weekday.xpm)) {
	symlink "../languages/$flavour[1]/$i", "default_theme/$i" if $action;
    }
} else {
    &invalid_flavour;
}

sub invalid_flavour {
    my (@@a, $i);

    print STDERR "$0: invalid FLAVOUR: @@flavour\n\n";
    print STDERR "Available flavours are:\n";
    @@a = sort keys %theme;
    for ($i = 0; $i <= $#a; $i++) {
	print STDERR "\t" if $i % 4 == 0;
	print STDERR $a[$i];
	print STDERR " <lang>" if $classic{$a[$i]};
	print STDERR ($i % 4 == 3) ? "\n" : ", " if $i != $#a;
    }
    print STDERR "\nwhere <lang> is a choice from\n";
    @@a = sort keys %lang;
    for ($i = 0; $i <= $#a; $i++) {
	print STDERR "\t" if $i % 6 == 0;
	print STDERR $a[$i];
	print STDERR ($i % 6 == 5) ? "\n" : ", " if $i != $#a;
    }
    print STDERR "\n";
    exit 2;
}
@


1.1
log
@Initial revision
@
text
@d10 1
a10 1
my @@flavor = split " ", $ENV{FLAVOR} or die "$0: must define FLAVOR\n";
d30 5
a34 5
if ($#flavor == 0) {
    &invalid_flavor if !$theme{$flavor[0]} || $classic{$flavor[0]};
    symlink "themes/$theme{$flavor[0]}", "default_theme" if $action;
} elsif ($#flavor == 1) {
    if ($classic{$flavor[0]} && $lang{$flavor[1]}) {
d36 2
a37 2
    } elsif ($classic{$flavor[1]} && $lang{$flavor[0]}) {
	@@flavor = ($flavor[1], $flavor[0]);
d39 1
a39 1
	&invalid_flavor;
d44 1
a44 1
	symlink "../themes/$theme{$flavor[0]}/$i","default_theme/$i" if $action;
d47 1
a47 1
	symlink "../languages/$flavor[1]/$i", "default_theme/$i" if $action;
d50 1
a50 1
    &invalid_flavor;
d53 1
a53 1
sub invalid_flavor {
d56 2
a57 2
    print STDERR "$0: invalid FLAVOR: @@flavor\n\n";
    print STDERR "Available flavors are:\n";
@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
