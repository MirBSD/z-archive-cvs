head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2014.04.18.21.07.18;	author tg;	state Exp;
branches;
next	1.1;
commitid	1005351940B3811EB47;

1.1
date	2013.11.06.20.32.21;	author tg;	state Exp;
branches;
next	;
commitid	100527AA7394E4ADFA4;


desc
@@


1.2
log
@make this available; note this does not do inband on MirBSD/OpenBSD either ☹
@
text
@# $MirOS: ports/sysutils/freeipmi/Makefile,v 1.1 2013/11/06 20:32:21 tg Exp $
# $OpenBSD: Makefile,v 1.16 2013/03/21 08:48:53 ajacoutot Exp $

# needs machine/sysarch.h & machine/pio.h
ONLY_FOR_PLATFORM+=	MirBSD:*:i386
ONLY_FOR_PLATFORM+=	OpenBSD:*:amd64 OpenBSD:*:arm OpenBSD:*:i386

COMMENT=		FreeIPMI provides in-band and out-of-band IPMI software
VSN=			0.4.6
DISTNAME=		freeipmi-${VSN}
CATEGORIES=		sysutils
HOMEPAGE=		http://www.gnu.org/software/freeipmi/
MASTER_SITES=		ftp://ftp.zresearch.com/pub/freeipmi/${VSN}/

# GNU GPLv2+
PERMIT_DISTFILES_CDROM=	Yes
PERMIT_DISTFILES_FTP=	Yes
PERMIT_PACKAGE_CDROM=	Yes
PERMIT_PACKAGE_FTP=	Yes

MODULES+=		devel/gettext
BUILD_DEPENDS+=		:argp-standalone-*:devel/argp-standalone
LIB_DEPENDS+=		gcrypt::security/libgcrypt

SEPARATE_BUILD=		Yes
USE_GMAKE=		Yes
CONFIGURE_STYLE=	autoconf
AUTOCONF_NEW=		Yes
AUTOCONF_VERSION=	2.59
CONFIGURE_ARGS+=	${CONFIGURE_SHARED}
FAKE_FLAGS=		localstatedir=${PREFIX}/share/examples/freeipmi \
			sysconfdir=${PREFIX}/share/examples/freeipmi

.if ("${OStype}" == "MirBSD") || ("${OStype}" == "OpenBSD")
.  if "${MACHINE_ARCH}" == "i386"
IOPL_LIBS=		-li386
.  elif "${MACHINE_ARCH}" == "amd64"
IOPL_LIBS=		-lamd64
.  endif
.endif
EXTRA_XAKE_FLAGS+=	IOPL_LIBS=${IOPL_LIBS:Q}

post-install:
	cd ${PREFIX}/share/examples/freeipmi && \
	    mv ${WRKINST}${SYSCONFDIR}/ipmi_monitoring_sensors.conf . && \
	    mv db/freeipmi/bmc-config-template db/freeipmi/ipckey . && \
	    rm -rf init.d logrotate.d sysconfig && \
	    rmdir db/freeipmi db log/freeipmi log
	cd ${PREFIX} && rmdir var/cache/ipmimonitoringsdrcache var/cache var
	rmdir ${WRKINST}/var/log/ipmiconsole

.include <bsd.port.mk>
@


1.1
log
@two more ports from obsd, with more prodding, and not yet complete

agenda:
• test whether freeipmi indeed works
• build ipmitool with driver freeipmi
• test whether ipmitool indeed works
• permit them both
@
text
@d1 1
a1 2
BROKEN=do not use yet: subject to change without DASH_VER bump
# $MirOS$
d22 1
a22 1
BUILD_DEPENDS+=		::devel/argp-standalone
@

