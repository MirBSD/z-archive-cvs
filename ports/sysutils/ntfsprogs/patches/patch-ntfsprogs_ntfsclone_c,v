head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2007.04.29.23.11.00;	author tg;	state Exp;
branches;
next	1.1;
commitid	100463525FE036F6381;

1.1
date	2005.03.18.15.52.18;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.52.18;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@unbreak, even seems to work (tried ntfsls with the “debug” stuff turned
on… that's the reason to move it into a flavour…)
@
text
@$MirOS: ports/sysutils/ntfsprogs/patches/patch-ntfsprogs_ntfsclone_c,v 1.1.7.1 2005/03/18 15:52:18 tg Exp $
$NetBSD: patch-af,v 1.1.1.1 2004/10/05 12:39:38 agc Exp $
--- ntfsprogs/ntfsclone.c.orig	Wed Jun 21 07:58:56 2006
+++ ntfsprogs/ntfsclone.c	Sun Apr 29 22:58:10 2007
@@@@ -55,6 +55,20 @@@@
 #include <getopt.h>
 #endif
 
+#ifdef __NetBSD__
+#  include <sys/param.h>
+   /* NetBSD versions later than 2.0D have statvfs(2) instead of statfs(2) */
+#  if __NetBSD_Version__ >= 200040000
+#    define F_TYPE	f_fsid
+#  else
+#    define F_TYPE	f_type
+#  endif
+#elif defined(__MirBSD__)
+#  define F_TYPE	f_fsid.val[0]
+#else
+#  define F_TYPE	f_type
+#endif
+
 #include "debug.h"
 #include "types.h"
 #include "support.h"
@@@@ -110,7 +124,11 @@@@ struct {
 	int restore_image;
 	char *output;
 	char *volume;
+#if defined(__NetBSD__) && (__NetBSD_Version__ >= 200040000)
+	struct statvfs stfs;
+#else
 	struct statfs stfs;
+#endif
 } opt;
 
 struct bitmap {
@@@@ -561,7 +579,7 @@@@ static void copy_cluster(int rescue, u64
 	if (write_all(&fd_out, buff, csize) == -1) {
 		int err = errno;
 		perr_printf("Write failed");
-		if (err == EIO && opt.stfs.f_type == 0x517b)
+		if (err == EIO && opt.stfs.F_TYPE == 0x517b)
 			Printf("Apparently you tried to clone to a remote "
 			       "Windows computer but they don't\nhave "
 			       "efficient sparse file handling by default. "
@@@@ -1426,7 +1444,7 @@@@ static void set_filesize(s64 filesize)
 		Printf("WARNING: Couldn't get filesystem type: "
 		       "%s\n", strerror(errno));
 	else
-		fs_type = opt.stfs.f_type;
+		fs_type = opt.stfs.F_TYPE;
 
 	if (fs_type == 0x52654973)
 		Printf("WARNING: You're using ReiserFS, it has very poor "
@@@@ -1607,7 +1625,11 @@@@ static void ignore_bad_clusters(ntfs_wal
 static void check_dest_free_space(u64 src_bytes)
 {
 	u64 dest_bytes;
+#ifdef HAVE_SYS_STATVFS_H
 	struct statvfs stvfs;
+#else
+	struct statfs stofs;
+#endif
 
 	if (opt.metadata || opt.blkdev_out || opt.std_out)
 		return;
@@@@ -1615,15 +1637,23 @@@@ static void check_dest_free_space(u64 sr
 	 * TODO: save_image needs a bit more space than src_bytes
 	 * due to the free space encoding overhead.
 	 */
+#ifdef HAVE_SYS_STATVFS_H
 	if (fstatvfs(fd_out, &stvfs) == -1) {
+#else
+	if (fstatfs(fd_out, &stofs) == -1) {
+#endif
 		Printf("WARNING: Unknown free space on the destination: %s\n",
 		       strerror(errno));
 		return;
 	}
 
+#ifdef HAVE_SYS_STATVFS_H
 	dest_bytes = (u64)stvfs.f_frsize * stvfs.f_bfree;
 	if (!dest_bytes)
 		dest_bytes = (u64)stvfs.f_bsize * stvfs.f_bfree;
+#else
+	dest_bytes = (u64)stofs.f_bsize * stofs.f_bfree;
+#endif
 	
 	if (dest_bytes < src_bytes)
 		err_exit("Destination doesn't have enough free space: "
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$MirOS$
d3 3
a5 4
--- ntfsprogs/ntfsclone.c.orig	Sat Sep  4 10:16:10 2004
+++ ntfsprogs/ntfsclone.c	Wed Mar  2 15:22:07 2005
@@@@ -30,6 +30,17 @@@@
 #include <errno.h>
d7 1
a12 1
+#    include <sys/statvfs.h>
d17 4
d26 1
a26 1
@@@@ -66,7 +77,11 @@@@ struct {
d38 1
a38 23
@@@@ -338,16 +353,13 @@@@ static void parse_options(int argc, char
 	}	
 		
 	msg_out = stdout;
-	
-	/* FIXME: this is a workaround for loosing debug info if stdout != stderr
-	   and for the uncontrollable verbose messages in libntfs. Ughhh. */
 	if (opt.std_out)
 		msg_out = stderr;
-	else if (opt.debug)
-		stderr = stdout; 
-	else
-		if (!(stderr = fopen("/dev/null", "rw")))
-			perr_exit("Couldn't open /dev/null");
+
+#ifdef DEBUG
+	if (!opt.debug)
+		ntfs_err_out = NULL;
+#endif
 }
 
 static void progress_init(struct progress_bar *p, u64 start, u64 stop, int res)
@@@@ -462,7 +474,7 @@@@ static void copy_cluster(void)
d47 1
a47 2
@@@@ -1152,12 +1164,12 @@@@ static void set_filesize(s64 filesize)
 	if (fstatfs(fd_out, &opt.stfs) == -1)
d50 5
a54 2
-	else if (opt.stfs.f_type == 0x52654973)
+	else if (opt.stfs.F_TYPE == 0x52654973)
d56 36
a91 17
 		       "performance creating\nlarge sparse files. The next "
 		       "operation might take a very long time!\n"
 		       "Creating sparse output file ...\n");
-	else if (opt.stfs.f_type == 0x517b)
+	else if (opt.stfs.F_TYPE == 0x517b)
 		Printf("WARNING: You're using SMBFS and if the remote share "
 		       "isn't Samba but a Windows\ncomputer then the clone "
 		       "operation will be very inefficient and may fail!\n");
@@@@ -1168,7 +1180,7 @@@@ static void set_filesize(s64 filesize)
 		if (err == E2BIG) {
 			Printf("Your system or the destination filesystem "
 			       "doesn't support large files.\n");
-			if (opt.stfs.f_type == 0x517b) {
+			if (opt.stfs.F_TYPE == 0x517b) {
 				Printf("SMBFS needs minimum Linux kernel "
 				       "version 2.4.25 and\n the 'lfs' option"
 				       "\nfor smbmount to have large "
@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
