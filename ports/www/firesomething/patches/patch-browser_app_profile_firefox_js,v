head	1.3;
access;
symbols
	bsiegert-ff3_m20081205:1.1.2.1
	bsiegert-ff3:1.1.0.2;
locks; strict;
comment	@# @;


1.3
date	2008.12.17.21.34.47;	author bsiegert;	state Exp;
branches;
next	1.2;
commitid	1004949706D2DC9AB85;

1.2
date	2008.12.05.16.26.08;	author bsiegert;	state Exp;
branches;
next	1.1;
commitid	100493955AC37C545FE;

1.1
date	2008.12.04.21.50.55;	author bsiegert;	state dead;
branches
	1.1.2.1;
next	;
commitid	1004938505A283FEFEC;

1.1.2.1
date	2008.12.04.21.50.55;	author bsiegert;	state Exp;
branches;
next	;
commitid	1004938505A283FEFEC;


desc
@@


1.3
log
@SECURITY: Update to 3.0.5-0, critical fixes.

Untested, it is building right now.
@
text
@$MirOS: ports/www/firesomething/patches/patch-browser_app_profile_firefox_js,v 1.2 2008/12/05 16:26:08 bsiegert Exp $
--- browser/app/profile/firefox.js.orig	Tue Nov 18 22:35:57 2008
+++ browser/app/profile/firefox.js	Wed Dec 17 23:21:26 2008
@@@@ -89,12 +89,12 @@@@ pref("browser.dictionaries.download.url"
 // App-specific update preferences
 
 // Whether or not app updates are enabled
-pref("app.update.enabled", true);
+pref("app.update.enabled", false);
 
 // This preference turns on app.update.mode and allows automatic download and
 // install to take place. We use a separate boolean toggle for this to make
 // the UI easier to construct.
-pref("app.update.auto", true);
+pref("app.update.auto", false);
 
 // Defines how the Application Update Service notifies the user about updates:
 //
@@@@ -188,7 +188,7 @@@@ pref("browser.shell.checkDefaultBrowser"
 
 // 0 = blank, 1 = home (browser.startup.homepage), 2 = last visited page, 3 = resume previous browser session
 // The behavior of option 3 is detailed at: http://wiki.mozilla.org/Session_Restore
-pref("browser.startup.page",                1);
+pref("browser.startup.page",                0);
 pref("browser.startup.homepage",            "resource:/browserconfig.properties");
 
 pref("browser.cache.disk.capacity",         50000);
@@@@ -590,7 +590,7 @@@@ pref("gecko.handlerService.allowRegister
 
 #ifdef MOZ_SAFE_BROWSING
 // Safe browsing does nothing unless this pref is set
-pref("browser.safebrowsing.enabled", true);
+pref("browser.safebrowsing.enabled", false);
 
 // Prevent loading of pages identified as malware
 pref("browser.safebrowsing.malware.enabled", true);
@@@@ -656,12 +656,9 @@@@ pref("browser.safebrowsing.malware.repor
 
 pref("browser.EULA.version", 3);
 pref("browser.rights.version", 3);
-pref("browser.rights.3.shown", false);
+pref("browser.rights.3.shown", true);
 
-#ifdef DEBUG
-// Don't show the about:rights notification in debug builds.
 pref("browser.rights.override", true);
-#endif
 
 pref("browser.sessionstore.enabled", true);
 pref("browser.sessionstore.resume_from_crash", true);
@@@@ -737,7 +734,7 @@@@ pref("places.frecency.unvisitedTypedBonu
 // 0 - don't pre-populate anything
 // 1 - pre-populate site URL, but don't fetch certificate
 // 2 - pre-populate site URL and pre-fetch certificate
-pref("browser.ssl_override_behavior", 1);
+pref("browser.ssl_override_behavior", 2);
 
 // Controls the display of domain in the identity box for SSL connections.
 // 0 - do not show domain
@


1.2
log
@Merge bsiegert-ff3 branch into the trunk, replacing firesomething 2.0.

Also add missing dependency on dbus, MirOS ca patches. Connecting
to https://www.mirbsd.org works fine without a warning.

MidnightBSD people: please test this version on your OS. It _should_ run
but I did not have the opportunity to test it.
@
text
@d1 3
a3 3
$MirOS: ports/www/firesomething/patches/patch-browser_app_profile_firefox_js,v 1.1.2.1 2008/12/04 21:50:55 bsiegert Exp $
--- browser/app/profile/firefox.js.orig	Tue Dec  2 21:18:33 2008
+++ browser/app/profile/firefox.js	Tue Dec  2 21:18:43 2008
d37 1
a37 7
@@@@ -660,15 +660,13 @@@@ pref("browser.EULA.3.accepted", true);
 #elifdef XP_WIN
 pref("browser.EULA.3.accepted", true);
 #else
-pref("browser.EULA.3.accepted", false);
+pref("browser.EULA.3.accepted", true);
 #endif
a38 1
 // if we rev the EULA again, we should bump this so users agree to the new EULA
d40 3
d45 2
a46 1
 pref("browser.EULA.override", true);
d51 1
a51 1
@@@@ -744,7 +742,7 @@@@ pref("places.frecency.unvisitedTypedBonu
@


1.1
log
@file patch-browser_app_profile_firefox_js was initially added on branch bsiegert-ff3.
@
text
@d1 62
@


1.1.2.1
log
@Update to 3.0.4-0. Also override the EULA in the branding file so that it
is NEVER shown, and set the homepage to about:blank. Regen some patches.

This is the first firefox3 version ready for general use. I still have to
merge it into trunk though. NB that it does not yet contain the MirOS
ssl certificate patch.
@
text
@a0 62
$MirOS$
--- browser/app/profile/firefox.js.orig	Tue Dec  2 21:18:33 2008
+++ browser/app/profile/firefox.js	Tue Dec  2 21:18:43 2008
@@@@ -89,12 +89,12 @@@@ pref("browser.dictionaries.download.url"
 // App-specific update preferences
 
 // Whether or not app updates are enabled
-pref("app.update.enabled", true);
+pref("app.update.enabled", false);
 
 // This preference turns on app.update.mode and allows automatic download and
 // install to take place. We use a separate boolean toggle for this to make
 // the UI easier to construct.
-pref("app.update.auto", true);
+pref("app.update.auto", false);
 
 // Defines how the Application Update Service notifies the user about updates:
 //
@@@@ -188,7 +188,7 @@@@ pref("browser.shell.checkDefaultBrowser"
 
 // 0 = blank, 1 = home (browser.startup.homepage), 2 = last visited page, 3 = resume previous browser session
 // The behavior of option 3 is detailed at: http://wiki.mozilla.org/Session_Restore
-pref("browser.startup.page",                1);
+pref("browser.startup.page",                0);
 pref("browser.startup.homepage",            "resource:/browserconfig.properties");
 
 pref("browser.cache.disk.capacity",         50000);
@@@@ -590,7 +590,7 @@@@ pref("gecko.handlerService.allowRegister
 
 #ifdef MOZ_SAFE_BROWSING
 // Safe browsing does nothing unless this pref is set
-pref("browser.safebrowsing.enabled", true);
+pref("browser.safebrowsing.enabled", false);
 
 // Prevent loading of pages identified as malware
 pref("browser.safebrowsing.malware.enabled", true);
@@@@ -660,15 +660,13 @@@@ pref("browser.EULA.3.accepted", true);
 #elifdef XP_WIN
 pref("browser.EULA.3.accepted", true);
 #else
-pref("browser.EULA.3.accepted", false);
+pref("browser.EULA.3.accepted", true);
 #endif
 
 // if we rev the EULA again, we should bump this so users agree to the new EULA
 pref("browser.EULA.version", 3);
 
-#ifdef DEBUG
 pref("browser.EULA.override", true);
-#endif
 
 pref("browser.sessionstore.enabled", true);
 pref("browser.sessionstore.resume_from_crash", true);
@@@@ -744,7 +742,7 @@@@ pref("places.frecency.unvisitedTypedBonu
 // 0 - don't pre-populate anything
 // 1 - pre-populate site URL, but don't fetch certificate
 // 2 - pre-populate site URL and pre-fetch certificate
-pref("browser.ssl_override_behavior", 1);
+pref("browser.ssl_override_behavior", 2);
 
 // Controls the display of domain in the identity box for SSL connections.
 // 0 - do not show domain
@

