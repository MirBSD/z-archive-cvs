head	1.4;
access;
symbols
	bsiegert-ff3_m20081205:1.1.2.2
	bsiegert-ff3:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	2008.12.17.21.34.48;	author bsiegert;	state Exp;
branches;
next	1.3;
commitid	1004949706D2DC9AB85;

1.3
date	2008.12.08.22.38.53;	author tg;	state Exp;
branches;
next	1.2;
commitid	100493DA1D97A5FCB92;

1.2
date	2008.12.05.16.26.11;	author bsiegert;	state Exp;
branches;
next	1.1;
commitid	100493955AC37C545FE;

1.1
date	2008.12.02.19.40.51;	author bsiegert;	state dead;
branches
	1.1.2.1;
next	;
commitid	10049358F044B289775;

1.1.2.1
date	2008.12.02.19.40.52;	author bsiegert;	state Exp;
branches;
next	1.1.2.2;
commitid	10049358F044B289775;

1.1.2.2
date	2008.12.04.21.50.57;	author bsiegert;	state Exp;
branches;
next	;
commitid	1004938505A283FEFEC;


desc
@@


1.4
log
@SECURITY: Update to 3.0.5-0, critical fixes.

Untested, it is building right now.
@
text
@$MirOS: ports/www/firesomething/patches/patch-toolkit_components_url-classifier_src_nsUrlClassifierDBService_cpp,v 1.3 2008/12/08 22:38:53 tg Exp $
$OpenBSD: patch-toolkit_components_url-classifier_src_nsUrlClassifierDBService_cpp,v 1.1 2008/11/20 23:41:32 martynas Exp $
--- toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp.orig	Sat Nov 15 00:29:47 2008
+++ toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp	Wed Dec 17 23:12:57 2008
@@@@ -38,6 +38,9 @@@@
  *
  * ***** END LICENSE BLOCK ***** */
 
+#include <sys/types.h>
+#include <sha2.h>
+
 #include "nsAutoPtr.h"
 #include "nsCOMPtr.h"
 #include "mozIStorageService.h"
@@@@ -225,23 +228,11 @@@@ struct nsUrlClassifierHash
     // Each entry in the chunk is composed of the 128 most significant bits
     // of the SHA 256 hash of a suffix/prefix expression.
 
-    nsresult rv = hash->Init(nsICryptoHash::SHA256);
-    NS_ENSURE_SUCCESS(rv, rv);
+    char hashed[65];
+    (void)SHA256_Data(reinterpret_cast<const u_int8_t *>(plainText.BeginReading()), plainText.Length(), hashed);
 
-    rv = hash->Update
-      (reinterpret_cast<const PRUint8*>(plainText.BeginReading()),
-       plainText.Length());
-    NS_ENSURE_SUCCESS(rv, rv);
+    memcpy(buf, hashed, sHashSize);
 
-    nsCAutoString hashed;
-    rv = hash->Finish(PR_FALSE, hashed);
-    NS_ENSURE_SUCCESS(rv, rv);
-
-    NS_ASSERTION(hashed.Length() >= sHashSize,
-                 "not enough characters in the hash");
-
-    memcpy(buf, hashed.BeginReading(), sHashSize);
-
     return NS_OK;
   }
 
@@@@ -2023,8 +2014,20 @@@@ nsUrlClassifierDBServiceWorker::GetShaEn
           return NS_ERROR_FAILURE;
         }
         const nsCSubstring& str = Substring(chunk, start, 4);
+#if 0
+        // You can't just cast a char* to an int* and access through it
         const PRUint32 *p = reinterpret_cast<const PRUint32*>(str.BeginReading());
         entry->mAddChunkId = PR_ntohl(*p);
+#else
+        // the old-school way...
+        union {
+          PRUint32 i;
+          char c[4];
+        } u;
+
+        memcpy(u.c, reinterpret_cast<const char *>(str.BeginReading()), 4);
+        entry->mAddChunkId = PR_ntohl(u.i);
+#endif
         if (entry->mAddChunkId == 0) {
           NS_WARNING("Received invalid chunk number.");
           return NS_ERROR_FAILURE;
@@@@ -2052,8 +2055,20 @@@@ nsUrlClassifierDBServiceWorker::GetShaEn
 
         if (chunkType == CHUNK_SUB) {
           const nsCSubstring& str = Substring(chunk, start, 4);
+#if 0
+          // You can't just cast a char* to an int* and access through it
           const PRUint32 *p = reinterpret_cast<const PRUint32*>(str.BeginReading());
           entry->mAddChunkId = PR_ntohl(*p);
+#else
+          // the old-school way...
+          union {
+            PRUint32 i;
+            char c[4];
+          } u;
+
+          memcpy(u.c, reinterpret_cast<const char *>(str.BeginReading()), 4);
+          entry->mAddChunkId = PR_ntohl(u.i);
+#endif
           if (entry->mAddChunkId == 0) {
             NS_WARNING("Received invalid chunk number.");
             return NS_ERROR_FAILURE;
@


1.3
log
@commit a port which at least packages and installs fine on MidnightBSD

note: it still bugs around because it picks up libraries from mports
because /usr/X11R6 is a symlink to /usr/local... fix pending, but in-
put on ideas how to do so in a sane way is sought
@
text
@d1 1
a1 1
$MirOS: ports/www/firesomething/patches/patch-toolkit_components_url-classifier_src_nsUrlClassifierDBService_cpp,v 1.2 2008/12/05 16:26:11 bsiegert Exp $
d3 2
a4 2
--- toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp.orig	Mon Aug 25 20:59:14 2008
+++ toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp	Mon Dec  8 20:37:32 2008
d15 1
a15 1
@@@@ -225,22 +228,10 @@@@ struct nsUrlClassifierHash
d21 3
a23 1
-
d28 2
a29 1
-
d36 1
a36 3
+    char hashed[65];
+    (void)SHA256_Data(reinterpret_cast<const u_int8_t *>(plainText.BeginReading()), plainText.Length(), hashed);
 
d38 1
a38 2
+    memcpy(buf, hashed, sHashSize);
 
d41 1
@


1.2
log
@Merge bsiegert-ff3 branch into the trunk, replacing firesomething 2.0.

Also add missing dependency on dbus, MirOS ca patches. Connecting
to https://www.mirbsd.org works fine without a warning.

MidnightBSD people: please test this version on your OS. It _should_ run
but I did not have the opportunity to test it.
@
text
@d1 1
a1 1
$MirOS: ports/www/firesomething/patches/patch-toolkit_components_url-classifier_src_nsUrlClassifierDBService_cpp,v 1.1.2.2 2008/12/04 21:50:57 bsiegert Exp $
d3 3
a5 3
--- toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp.orig	Mon Aug 25 22:58:51 2008
+++ toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp	Tue Dec  2 19:03:04 2008
@@@@ -38,6 +38,11 @@@@
a8 1
+extern "C" {
a10 1
+}
d15 1
a15 1
@@@@ -225,23 +230,11 @@@@ struct nsUrlClassifierHash
d21 1
a21 3
+    char hashed[65];
+    (void)SHA256_Data(reinterpret_cast<const u_int8_t *>(plainText.BeginReading()), plainText.Length(), hashed);
 
d26 1
a26 2
+    memcpy(buf, hashed, sHashSize);
 
d33 3
a35 1
-
d37 2
a38 1
-
d41 1
a41 2
 
@@@@ -2023,8 +2016,20 @@@@ nsUrlClassifierDBServiceWorker::GetShaEn
d62 1
a62 1
@@@@ -2052,8 +2057,20 @@@@ nsUrlClassifierDBServiceWorker::GetShaEn
@


1.1
log
@file patch-toolkit_components_url-classifier_src_nsUrlClassifierDBService_cpp was initially added on branch bsiegert-ff3.
@
text
@d1 85
@


1.1.2.1
log
@Okay, I have a working firefox3, even with stack protection. Yay!!!

Now: merge in main, update to 3.0.4.
@
text
@a0 85
$MirOS$
$OpenBSD: patch-toolkit_components_url-classifier_src_nsUrlClassifierDBService_cpp,v 1.1 2008/11/20 23:41:32 martynas Exp $
--- toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp.orig	Wed May  7 22:33:22 2008
+++ toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp	Tue Dec  2 16:25:08 2008
@@@@ -38,6 +38,11 @@@@
  *
  * ***** END LICENSE BLOCK ***** */
 
+extern "C" {
+#include <sys/types.h>
+#include <sha2.h>
+}
+
 #include "nsAutoPtr.h"
 #include "nsCOMPtr.h"
 #include "mozIStorageService.h"
@@@@ -222,23 +227,11 @@@@ struct nsUrlClassifierHash
     // Each entry in the chunk is composed of the 128 most significant bits
     // of the SHA 256 hash of a suffix/prefix expression.
 
-    nsresult rv = hash->Init(nsICryptoHash::SHA256);
-    NS_ENSURE_SUCCESS(rv, rv);
+    char hashed[65];
+    (void)SHA256_Data(reinterpret_cast<const u_int8_t *>(plainText.BeginReading()), plainText.Length(), hashed);
 
-    rv = hash->Update
-      (reinterpret_cast<const PRUint8*>(plainText.BeginReading()),
-       plainText.Length());
-    NS_ENSURE_SUCCESS(rv, rv);
+    memcpy(buf, hashed, sHashSize);
 
-    nsCAutoString hashed;
-    rv = hash->Finish(PR_FALSE, hashed);
-    NS_ENSURE_SUCCESS(rv, rv);
-
-    NS_ASSERTION(hashed.Length() >= sHashSize,
-                 "not enough characters in the hash");
-
-    memcpy(buf, hashed.BeginReading(), sHashSize);
-
     return NS_OK;
   }
 
@@@@ -2020,8 +2013,20 @@@@ nsUrlClassifierDBServiceWorker::GetShaEn
           return NS_ERROR_FAILURE;
         }
         const nsCSubstring& str = Substring(chunk, start, 4);
+#if 0
+        // You can't just cast a char* to an int* and access through it
         const PRUint32 *p = reinterpret_cast<const PRUint32*>(str.BeginReading());
         entry->mAddChunkId = PR_ntohl(*p);
+#else
+        // the old-school way...
+        union {
+          PRUint32 i;
+          char c[4];
+        } u;
+
+        memcpy(u.c, reinterpret_cast<const char *>(str.BeginReading()), 4);
+        entry->mAddChunkId = PR_ntohl(u.i);
+#endif
         if (entry->mAddChunkId == 0) {
           NS_WARNING("Received invalid chunk number.");
           return NS_ERROR_FAILURE;
@@@@ -2049,8 +2054,20 @@@@ nsUrlClassifierDBServiceWorker::GetShaEn
 
         if (chunkType == CHUNK_SUB) {
           const nsCSubstring& str = Substring(chunk, start, 4);
+#if 0
+          // You can't just cast a char* to an int* and access through it
           const PRUint32 *p = reinterpret_cast<const PRUint32*>(str.BeginReading());
           entry->mAddChunkId = PR_ntohl(*p);
+#else
+          // the old-school way...
+          union {
+            PRUint32 i;
+            char c[4];
+          } u;
+
+          memcpy(u.c, reinterpret_cast<const char *>(str.BeginReading()), 4);
+          entry->mAddChunkId = PR_ntohl(u.i);
+#endif
           if (entry->mAddChunkId == 0) {
             NS_WARNING("Received invalid chunk number.");
             return NS_ERROR_FAILURE;
@


1.1.2.2
log
@Update to 3.0.4-0. Also override the EULA in the branding file so that it
is NEVER shown, and set the homepage to about:blank. Regen some patches.

This is the first firefox3 version ready for general use. I still have to
merge it into trunk though. NB that it does not yet contain the MirOS
ssl certificate patch.
@
text
@d1 1
a1 1
$MirOS: ports/www/firesomething/patches/patch-toolkit_components_url-classifier_src_nsUrlClassifierDBService_cpp,v 1.1.2.1 2008/12/02 19:40:52 bsiegert Exp $
d3 2
a4 2
--- toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp.orig	Mon Aug 25 22:58:51 2008
+++ toolkit/components/url-classifier/src/nsUrlClassifierDBService.cpp	Tue Dec  2 19:03:04 2008
d17 1
a17 1
@@@@ -225,23 +230,11 @@@@ struct nsUrlClassifierHash
d44 1
a44 1
@@@@ -2023,8 +2016,20 @@@@ nsUrlClassifierDBServiceWorker::GetShaEn
d65 1
a65 1
@@@@ -2052,8 +2057,20 @@@@ nsUrlClassifierDBServiceWorker::GetShaEn
@


