head	1.6;
access;
symbols
	bsiegert-cfgfile_BASE:1.6
	bsiegert-cfgfile:1.6.0.2
	MIRBSD_8_BASE:1.4;
locks; strict;
comment	@ * @;


1.6
date	2009.11.29.17.02.42;	author bsiegert;	state Exp;
branches
	1.6.2.1;
next	1.5;
commitid	1004B12A93F5F693B4A;

1.5
date	2008.09.19.17.27.44;	author bsiegert;	state Exp;
branches;
next	1.4;
commitid	10048D3E0FB4792BC2D;

1.4
date	2005.12.16.12.12.52;	author tg;	state Exp;
branches;
next	1.3;
commitid	10043A2AF5448091F35;

1.3
date	2005.09.19.18.07.56;	author tg;	state Exp;
branches;
next	1.2;
commitid	5a41432efe740e6d;

1.2
date	2005.06.26.17.13.43;	author tg;	state Exp;
branches;
next	1.1;
commitid	224442bee24581eb;

1.1
date	2005.03.18.15.47.16;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.6.2.1
date	2009.12.23.15.41.46;	author bsiegert;	state Exp;
branches;
next	1.6.2.2;
commitid	1004B323A2376E23055;

1.6.2.2
date	2009.12.29.17.09.28;	author bsiegert;	state Exp;
branches;
next	1.6.2.3;
commitid	1004B3A36D83259360D;

1.6.2.3
date	2010.02.27.16.36.34;	author bsiegert;	state Exp;
branches;
next	;
commitid	1004B894A0D5C402F54;

1.1.7.1
date	2005.03.18.15.47.16;	author tg;	state Exp;
branches;
next	;


desc
@@


1.6
log
@One more unused variable
@
text
@/* $MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.5 2008/09/19 17:27:44 bsiegert Exp $ */
/* $OpenBSD: main.c,v 1.18 2003/08/06 20:46:36 millert Exp $	*/

/*
 * FreeBSD install - a package for the installation and maintainance
 * of non-core utilities.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * Jordan K. Hubbard
 * 18 July 1993
 *
 * This is the add module.
 */

#include <err.h>
#include <sys/param.h>
#include "lib.h"
#include "add.h"

__RCSID("$MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.5 2008/09/19 17:27:44 bsiegert Exp $");

static char Options[] = "d:fhIMNnp:qRSt:v";

char	*Prefix		= NULL;
bool	NoInstall	= false;
bool	NoRecord	= false;
bool	NoBackups	= false;
bool	Quiet		= false;

char	*Mode		= NULL;
char	*Owner		= NULL;
char	*Group		= NULL;
char	*PkgName	= NULL;
const char *Directory	= NULL;
char	FirstPen[FILENAME_MAX];
add_mode_t AddMode	= NORMAL;
display_mode_t DisplayMode = CAT;

char **pkgs;
int pkg_count = 0;

static __dead void usage(void);

int
main(int argc, char **argv)
{
    int ch, error;
    char *cp;

    while ((ch = getopt(argc, argv, Options)) != -1) {
	switch(ch) {
	case 'd':
	    switch(optarg[0]) {
		case 'c':
		    DisplayMode = CAT;
		    break;
		case 'e':
		    DisplayMode = ENV;
		    break;
		case 'l':
		    DisplayMode = LESS;
		    break;
		case 'm':
		    DisplayMode = MORE;
		    break;
		default:
		    usage();
		    break;
	    }
	    break;
	case 'v':
	    Verbose = true;
	    break;

	case 'p':
	    Prefix = optarg;
	    break;

	case 'I':
	    NoInstall = true;
	    break;

	case 'R':
	    NoRecord = true;
	    break;

	case 'f':
	    Force = true;
	    break;

	case 'N':
	    NoBackups = true;
	    break;

	case 'n':
	    Fake = true;
	    Verbose = true;
	    break;

	case 'q':
	    Quiet = true;
	    break;

	case 't':
	    strlcpy(FirstPen, optarg, sizeof(FirstPen));
	    break;

	case 'S':
	    AddMode = SLAVE;
	    break;

	case 'M':
	    AddMode = MASTER;
	    break;

	case 'h':
	case '?':
	default:
	    usage();
	    break;
	}
    }
    argc -= optind;
    argv += optind;

    pkg_count = argc + 1;
    pkgs = (char **)calloc(pkg_count,  sizeof(char **));
    if (pkgs == NULL) {
    	fprintf(stderr, "malloc failed - abandoning package add.\n");
    	exit(1);
    }

    if (AddMode != SLAVE) {

	/* Get all the remaining package names, if any */
	for (ch = 0; *argv; ch++, argv++) {
	    /* Don't mangle stdin ("-") or URL arguments */
	    if ( (strcmp(*argv, "-") == 0)
		 || (isURL(*argv))) {
	         pkgs[ch] = strdup(*argv);
		 if (pkgs[ch] == NULL) {
		     fprintf(stderr,
			     "malloc failed - abandoning package add.\n");
		     exit(1);
		 }
	    }
	    else {			/* expand all pathnames to fullnames */
		char *s, *tmp;

		s=ensure_tgz(*argv);

		if (fexists(s)) { /* refers to a file directly */
		    pkgs[ch] = (char *) malloc(MAXPATHLEN * sizeof(char));
		    if (pkgs[ch] == NULL) {
		        fprintf(stderr,
				"malloc failed - abandoning package add.\n");
			exit(1);
		    }
		    tmp = realpath(s, pkgs[ch]);
		    if (tmp == NULL) {
		        perror("realpath failed");
			fprintf(stderr, "failing path was %s\n", pkgs[ch]);
			exit(1);
		    }
		}
		else if (ispkgpattern(*argv)
			 && (s=findbestmatchingname(dirname(*argv),
						    basename(*argv)))
			    != NULL) {
		    if (Verbose)
			printf("Using %s for %s\n",s, *argv);
		    pkgs[ch] = (char *) malloc(MAXPATHLEN * sizeof(char));
		    if (pkgs[ch] == NULL) {
		        fprintf(stderr,
				"malloc failed - abandoning package add.\n");
			exit(1);
		    }
		    tmp = realpath(s, pkgs[ch]);
		    if (tmp == NULL) {
		        perror("realpath failed");
			fprintf(stderr, "failing path was %s\n", pkgs[ch]);
			exit(1);
		    }
		    free(s);
		} else {
		    /* look for the file(pattern) in the expected places */
		    if (!(cp = fileFindByPath(NULL, *argv))) {
		        fprintf(stderr, "can't find package '%s'\n", s);
			exit(1);
		    }
		    else {
			pkgs[ch] = strdup(cp);
			if (pkgs[ch] == NULL) {
			    fprintf(stderr,
				  "malloc failed - abandoning package add.\n");
			    exit(1);
			}
		    }
		}
	    }
	}
	/* If no packages, yelp */
	if (!ch)
	    pwarnx("missing package name(s)"), usage();
	else if (ch > 1 && AddMode == MASTER)
	    pwarnx("only one package name may be specified with master mode"),
	    usage();
	else {
	    int fd;
	    char *dbdir;

	    /* create a test file to see if dbdir is writable.
	     * if the file already exists, O_EXCL does not touch it
	     * (possible security issue)
	     */
	    cp = toabs(".test", (dbdir = getenv(PKG_DBDIR)) ?
		    dbdir : DEF_LOG_DIR);
	    fd = open(cp, O_WRONLY|O_CREAT|O_EXCL, 0600);

	    if (fd == -1) {
		pwarn("the package database directory is not writable");
		pwarnx("the installation is likely to fail (%s)",
			Force ? "continuing anyway" : "aborting");
		if (!Force)
		    exit(1);
	    } else {
		unlink(cp);
		close(fd);
	    }
	}
    }
    if ((error = pkg_perform(pkgs)) != 0) {
	if (Verbose)
	    pwarnx("%d package addition(s) failed", error);
	return error;
    }
    else
	return 0;
}

static __dead void
usage(void)
{
    fprintf(stderr, "%s\n",
	"usage: pkg_add [-vInfRMS] [-d celm] [-t template] [-p prefix] pkg-name ...");
    exit(1);
}
@


1.6.2.1
log
@Implement the first useful configuration directive:

	Pager /path/to/pager

for specifying the pager to use in pkg_add.
@
text
@d1 1
a1 1
/* $MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.6 2009/11/29 17:02:42 bsiegert Exp $ */
d28 1
a28 1
__RCSID("$MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.6 2009/11/29 17:02:42 bsiegert Exp $");
d45 1
a45 1
const char *Pager;
a57 2
    cfg_read_config();
    Pager = cfg_get_pager();
d63 1
a63 1
		    Pager = "/bin/cat";
d66 1
a66 1
		    Pager = getenv("PAGER");
d69 1
a69 1
		    Pager = "less";
d72 1
a72 1
		    Pager = "more";
@


1.6.2.2
log
@Experimental support for the config file in pkg_info and pkg_add. Packages
given as command-line arguments are found in the paths specified in "Source"
lines. Tested in pkg_info:

% pkg_info tiff-cxx-3.7.4-1

finds the uninstalled package in /usr/ports/Packages.

Oh, and PKG_PATH support is dropped for now.
@
text
@d1 1
a1 1
/* $MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.6.2.1 2009/12/23 15:41:46 bsiegert Exp $ */
d28 1
a28 1
__RCSID("$MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.6.2.1 2009/12/23 15:41:46 bsiegert Exp $");
d58 1
a58 1
    cfg_read_config(NULL);
@


1.6.2.3
log
@New option: "pkg_add -U", our equivalent to "apt-get update".
@
text
@d1 1
a1 1
/* $MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.6.2.2 2009/12/29 17:09:28 bsiegert Exp $ */
d28 1
a28 1
__RCSID("$MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.6.2.2 2009/12/29 17:09:28 bsiegert Exp $");
d30 1
a30 1
static char Options[] = "d:fhIMNnp:qRSt:Uv";
a36 1
bool	Update		= false;
a61 3
	case 'U':
		Update = true;
		break;
a135 5
    if (Update) {
	update_src_index();
	exit(0);
    }

@


1.5
log
@A feature I had wanted for some time: if the package db directory is not
writable, don't even start installing packages, except if  -f is given.
@
text
@d1 1
a1 1
/* $MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.4 2005/12/16 12:12:52 tg Exp $ */
d28 1
a28 1
__RCSID("$MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.4 2005/12/16 12:12:52 tg Exp $");
a55 1
    char **start;
a57 1
    start = argv;
@


1.4
log
@implement -q option needed by pkg_upgrade(1)
@
text
@d1 1
a1 1
/* $MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.3 2005/09/19 18:07:56 tg Exp $ */
d28 1
a28 1
__RCSID("$MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.3 2005/09/19 18:07:56 tg Exp $");
d218 23
@


1.3
log
@* implement option -N for removing backed-up already-existing
  files; ok bsiegert@@
* sort options in main.c too while here
@
text
@d1 1
a1 1
/* $MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.2 2005/06/26 17:13:43 tg Exp $ */
d28 1
a28 1
__RCSID("$MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.2 2005/06/26 17:13:43 tg Exp $");
d30 1
a30 1
static char Options[] = "d:fhIMNnp:RSt:v";
d36 1
d110 4
@


1.2
log
@overhaul pager logic, make cat(1) default since we display them
after each package, not one at the end
@
text
@d1 1
a1 1
/* $MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.1.7.1 2005/03/18 15:47:16 tg Exp $ */
d28 1
a28 1
__RCSID("$MirOS: ports/infrastructure/pkgtools/add/main.c,v 1.1.7.1 2005/03/18 15:47:16 tg Exp $");
d30 1
a30 1
static char Options[] = "hvIRfnp:SMt:d:";
d35 1
d100 4
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* $MirOS$ */
d28 1
a28 1
__RCSID("$MirOS$");
d43 1
a43 1
display_mode_t DisplayMode = ENV;
@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
