head	1.10;
access;
symbols
	bsiegert-cfgfile_BASE:1.8
	bsiegert-cfgfile:1.8.0.2
	MIRBSD_8_BASE:1.2;
locks; strict;
comment	@.\" @;


1.10
date	2018.12.25.19.38.03;	author tg;	state Exp;
branches;
next	1.9;
commitid	1005C22871909EC7FE2;

1.9
date	2016.02.11.20.12.04;	author tg;	state Exp;
branches;
next	1.8;
commitid	10056BCEAFF41919B5B;

1.8
date	2009.11.22.18.23.35;	author tg;	state Exp;
branches;
next	1.7;
commitid	1004B0981B210A68B89;

1.7
date	2009.11.22.15.48.47;	author tg;	state Exp;
branches;
next	1.6;
commitid	1004B095D622ECA4D23;

1.6
date	2008.06.12.19.41.44;	author tg;	state Exp;
branches;
next	1.5;
commitid	10048517C08602CECB1;

1.5
date	2008.03.14.16.46.01;	author tg;	state Exp;
branches;
next	1.4;
commitid	10047DAABDD118A6FDD;

1.4
date	2008.03.12.23.17.21;	author tg;	state Exp;
branches;
next	1.3;
commitid	10047D86495134E62E4;

1.3
date	2008.03.09.17.22.57;	author tg;	state Exp;
branches;
next	1.2;
commitid	10047D41CAA7E715397;

1.2
date	2005.08.05.20.34.04;	author bsiegert;	state Exp;
branches;
next	1.1;
commitid	4f3042f3ccfa3636;

1.1
date	2005.03.18.15.47.18;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.47.18;	author tg;	state Exp;
branches;
next	;


desc
@@


1.10
log
@update from contrib/samples/portmdoc,v 1.11
@
text
@.\" $MirOS: ports/infrastructure/pkgtools/rtfm/packages.7,v 1.9 2016/02/11 20:12:04 tg Exp $
.\" $OpenBSD: packages.7,v 1.18 2003/12/25 18:35:00 espie Exp $
.\"
.\" Copyright (c) 2000 Marc Espie
.\"
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE DEVELOPERS ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE DEVELOPERS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"-
.\" Copyright (c) 2008, 2009, 2010, 2016, 2018
.\"	mirabilos <m@@mirbsd.org>
.\"-
.\" Try to make GNU groff and AT&T nroff more compatible
.\" * ` generates ‘ in gnroff, so use \`
.\" * ' generates ’ in gnroff, \' generates ´, so use \*(aq
.\" * - generates ‐ in gnroff, \- generates −, so .tr it to -
.\"   thus use - for hyphens and \- for minus signs and option dashes
.\" * ~ is size-reduced and placed atop in groff, so use \*(TI
.\" * ^ is size-reduced and placed atop in groff, so use \*(ha
.\" * \(en does not work in nroff, so use \*(en
.\" * <>| are problematic, so redefine and use \*(Lt\*(Gt\*(Ba
.\" Also make sure to use \& *before* a punctuation char that is to not
.\" be interpreted as punctuation, and especially with two-letter words
.\" but also (after) a period that does not end a sentence (“e.g.\&”).
.\" The section after the "doc" macropackage has been loaded contains
.\" additional code to convene between the UCB mdoc macropackage (and
.\" its variant as BSD mdoc in groff) and the GNU mdoc macropackage.
.\"
.ie \n(.g \{\
.	if \*[.T]ascii .tr \-\N'45'
.	if \*[.T]latin1 .tr \-\N'45'
.	if \*[.T]utf8 .tr \-\N'45'
.	ds <= \[<=]
.	ds >= \[>=]
.	ds Rq \[rq]
.	ds Lq \[lq]
.	ds sL \(aq
.	ds sR \(aq
.	if \*[.T]utf8 .ds sL `
.	if \*[.T]ps .ds sL `
.	if \*[.T]utf8 .ds sR '
.	if \*[.T]ps .ds sR '
.	ds aq \(aq
.	ds TI \(ti
.	ds ha \(ha
.	ds en \(en
.\}
.el \{\
.	ds aq '
.	ds TI ~
.	ds ha ^
.	ds en \(em
.\}
.\"
.\" Implement .Dd with the Mdocdate RCS keyword
.\"
.rn Dd xD
.de Dd
.ie \\$1$Mdocdate: \{\
.	xD \\$2 \\$3, \\$4
.\}
.el .xD \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8
..
.\"
.\" .Dd must come before definition of .Mx, because when called
.\" with -mandoc, it might implement .Mx itself, but we want to
.\" use our own definition. And .Dd must come *first*, always.
.\"
.Dd $Mdocdate: December 25 2018 $
.\"
.\" Check which macro package we use, and do other -mdoc setup.
.\"
.ie \n(.g \{\
.	if \*[.T]utf8 .tr \[la]\*(Lt
.	if \*[.T]utf8 .tr \[ra]\*(Gt
.	ie d volume-ds-1 .ds tT gnu
.	el .ie d doc-volume-ds-1 .ds tT gnp
.	el .ds tT bsd
.\}
.el .ds tT ucb
.\"
.\" Implement .Mx (MirBSD)
.\"
.ie "\*(tT"gnu" \{\
.	eo
.	de Mx
.	nr curr-font \n[.f]
.	nr curr-size \n[.ps]
.	ds str-Mx \f[\n[curr-font]]\s[\n[curr-size]u]
.	ds str-Mx1 \*[Tn-font-size]\%MirBSD\*[str-Mx]
.	if !\n[arg-limit] \
.	if \n[.$] \{\
.	ds macro-name Mx
.	parse-args \$@@
.	\}
.	if (\n[arg-limit] > \n[arg-ptr]) \{\
.	nr arg-ptr +1
.	ie (\n[type\n[arg-ptr]] == 2) \
.	as str-Mx1 \~\*[arg\n[arg-ptr]]
.	el \
.	nr arg-ptr -1
.	\}
.	ds arg\n[arg-ptr] "\*[str-Mx1]
.	nr type\n[arg-ptr] 2
.	ds space\n[arg-ptr] "\*[space]
.	nr num-args (\n[arg-limit] - \n[arg-ptr])
.	nr arg-limit \n[arg-ptr]
.	if \n[num-args] \
.	parse-space-vector
.	print-recursive
..
.	ec
.	ds sP \s0
.	ds tN \*[Tn-font-size]
.\}
.el .ie "\*(tT"gnp" \{\
.	eo
.	de Mx
.	nr doc-curr-font \n[.f]
.	nr doc-curr-size \n[.ps]
.	ds doc-str-Mx \f[\n[doc-curr-font]]\s[\n[doc-curr-size]u]
.	ds doc-str-Mx1 \*[doc-Tn-font-size]\%MirBSD\*[doc-str-Mx]
.	if !\n[doc-arg-limit] \
.	if \n[.$] \{\
.	ds doc-macro-name Mx
.	doc-parse-args \$@@
.	\}
.	if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.	nr doc-arg-ptr +1
.	ie (\n[doc-type\n[doc-arg-ptr]] == 2) \
.	as doc-str-Mx1 \~\*[doc-arg\n[doc-arg-ptr]]
.	el \
.	nr doc-arg-ptr -1
.	\}
.	ds doc-arg\n[doc-arg-ptr] "\*[doc-str-Mx1]
.	nr doc-type\n[doc-arg-ptr] 2
.	ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.	nr doc-num-args (\n[doc-arg-limit] - \n[doc-arg-ptr])
.	nr doc-arg-limit \n[doc-arg-ptr]
.	if \n[doc-num-args] \
.	doc-parse-space-vector
.	doc-print-recursive
..
.	ec
.	ds sP \s0
.	ds tN \*[doc-Tn-font-size]
.\}
.el \{\
.	de Mx
.	nr cF \\n(.f
.	nr cZ \\n(.s
.	ds aa \&\f\\n(cF\s\\n(cZ
.	if \\n(aC==0 \{\
.		ie \\n(.$==0 \&MirBSD\\*(aa
.		el .aV \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9
.	\}
.	if \\n(aC>\\n(aP \{\
.		nr aP \\n(aP+1
.		ie \\n(C\\n(aP==2 \{\
.			as b1 \&MirBSD\ #\&\\*(A\\n(aP\\*(aa
.			ie \\n(aC>\\n(aP \{\
.				nr aP \\n(aP+1
.				nR
.			\}
.			el .aZ
.		\}
.		el \{\
.			as b1 \&MirBSD\\*(aa
.			nR
.		\}
.	\}
..
.\}
.\"-
.Dt PACKAGES 7
.Os
.Sh NAME
.Nm packages
.Nd overview of the binary package system
.Sh DESCRIPTION
MirPorts features a vast array of third-party software ready
to be compiled and installed on a new machine.
As an alternative, most of these ports are also available as binary
packages.
Adding a new package is as simple as
.Pp
.Dl pkg_add foo\-1.0\-0\-vanilla.cgz
.Pp
In appearance, packages seem to be .cgz archives, and as such, can be
examined on almost any computer system, but there is a bit more to it:
a package will also hold a description, a complete list of the files
installed by the package, a list of prerequisite packages, along with
shell script fragments to finish the actual installation.
.Sh SECURITY CAVEAT
The packages are not as thoroughly audited as the main
.Mx
source tree (in many cases, they have not been audited at all).
This is in part a scale issue: the source tree is under 100MB, compressed,
whereas source to the ports tree approaches 3GB.
.Sh MANAGING FILES
The package systems should offer a few basic warranties.
.Ss "Installing a package won't erase existing files"
.Xr pkg_add 1
will instead identify conflicts, back up the existing files, display a
warning message and finish installing itself.
However, if backups occurred, note that package deletion is no longer fully
automatic.
.Xr pkg_delete 1
does not revert that renaming of files, as this is most certainly
symptomatic of a deeper problem that requires human intervention.
.Ss "Modifying installed files is safe"
.Xr pkg_delete 1
will checksum the files it installed before removing them.
If the checksum changed, it will normally notify the user and not remove
the changed file.
.Pp
These should apply to most packages.
The actual packing-lists follow that rule, but the shell fragments embedded
in some packages may break this assumption.
Such a problem is a bug and should be reported.
.Ss "Packages install to /usr/mpkg"
This includes X11 packages, which no longer install under
.Pa /usr/X11R6 .
The only exceptions are
Japanese dictionaries, which install under
.Pa /var/dict ,
.Nm bind8 ,
which installs under
.Pa / .
.Pp
Some packages installation scripts will also create new configuration
files in
.Pa /etc ,
or need some working directory under
.Pa /var
to function correctly (e.g.,
.Nm squid ,
or
.Nm mysql ) .
Packages use
.Pa /usr/mpkg
as the default installation path.
.Pp
The current package system has some major limitations.
.Ss "The package system is not aware of shared network installations"
And thus, it does not handle that situation well.
For instance, there is no mechanism to mark some files as being shareable
on several machines, or even on several architectures.
Bear in mind that the package database is normally stored in
.Pa ${LOCALBASE}/db/pkg .
.Pp
Always installing packages on the same machine, and exporting
.Pa /usr/mpkg
to other machines should mostly work.
In such a case, always run
.Xr pkg_add 1
in
.Qq "verbose, don't actually install the package"
mode first, so that
additional steps may be figured out.
.Ss "The package system does not handle shared files across packages"
If two packages install a file with the same name, there is a conflict.
There is currently no mechanism in the package system beyond a basic
backup mechanism to handle this.
Two packages can't safely install an exact identical
copy of a given file:
.Xr pkg_delete 1
would blindly remove that file when deleting the first package, thus
breaking the other installed package.
.Pp
For instance, if packages
.Nm hansel
and
.Nm gretel
install the same file
.Pa foo ,
installation of
.Nm gretel
will
acknowledge the existence of the package
.Nm hansel ,
and backup
.Pa foo
to
.Pa foo.0 .
.Pp
If only the name is identical,
.Nm hansel
is now broken.
Using
.Xr pkg_delete 1
on
.Nm gretel
and renaming
.Pa foo.0
to
.Pa foo
will fix the situation.
.Pp
If the file contents are the same, using
.Xr pkg_delete 1
on
.Nm hansel
or
.Nm gretel
will break the remaining package, since
.Pa foo
will have been removed.
.Pa foo.0
can be renamed to
.Pa foo
to correct the situation.
.Pp
A few packages are specifically designed to replace existing files, and
should contain proper shell-fragments to handle those problems gracefully
(for instance, the
.Nm ghostscript_encrypt
package).
.Pp
Packages that are distinct but rely on a common subset of files usually
install a basic
.Qq common
package that holds those files, and is not useful as a stand-alone package.
.Sh PACKAGE NAMING
Most package names follow the pattern
.Qq name\-version\-patchlevel\-flavour ,
where
.Qq name
is the actual package name,
.Qq version
is the version number,
.Qq patchlevel
is the "revision" of the package and
.Qq flavour
denotes some options that were used when creating the package.
.Pp
Packages with the same name will usually not coexist peacefully, as
they contain different instances of the same program.
Hence,
.Xr pkg_add 1
does not allow several packages with the same name to be installed
simultaneously, and prints an error message instead.
.Pp
There are some exceptions to this rule, i.e. packages that use the
.Ar no\-default\-conflict
option. Examples are autoconf and the Tcl/Tk suite.
.Pp
Packages should contain correct annotations, and not allow themselves
to be installed on top of a conflicting package.
.Sh PACKAGE DEPENDENCIES
Each package holds a full list of pre-required packages.
.Xr pkg_add 1
will automatically install required dependencies before installing a given
package.
Installs through
.Xr ftp 1
are supported: setting the environment variable
.Ev PKG_PATH
to a distant package repository will let
.Xr pkg_add 1
automatically download dependencies as well.
For the moment, there is no official package repository from the
MirPorts developers.
.Pp
In theory, a package need only record direct dependencies, i.e., packages
it does require, and let required packages do the same.
In practice, having the full list of dependencies available does speed
things up: while installing a package through
.Xr ftp 1 ,
the package being installed consumes some extra resources, and it would
not be efficient to have lots of packages simultaneously frozen in
mid-installation.
.Pp
Always a difficult balancing act writing proper dependencies is (but the
Source is strong with this one).
Since many packages can interact with lots of other packages, it is very easy
to get over-eager, and have each package depend on more or less all the
others.
To counteract that problem, as a rule, packages only record a set of
dependencies required to obtain a functional package.
Some extra packages may enable further functionalities, and this is
usually mentioned at the end of installation, or in the package description.
.Pp
Some flavours are also explicitly provided to avoid having to depend on the
kitchen sink.
For instance, an
.Nm emacs\-no_x11
package is provided, which does not depend on X11 being installed to be
functional.
.Sh SEE ALSO
.Xr pkg_add 1 ,
.Xr pkg_delete 1 ,
.Xr pkg_info 1 ,
.Xr tar 1 ,
.Xr packages\-specs 7 ,
.Xr ports 7
@


1.9
log
@merge most recent portmdoc into a̲l̲l̲ of its users; fixup .\& into \&. like
in mksh(1), for Schillix ditroff
@
text
@d1 1
a1 1
.\" $MirOS: ports/infrastructure/pkgtools/rtfm/packages.7,v 1.7 2009/11/22 15:48:47 tg Exp $
d28 1
a28 1
.\" Copyright (c) 2008, 2009, 2010, 2016
d87 1
a87 1
.Dd $Mdocdate: November 22 2009 $
d95 1
d108 1
a108 1
.	ds str-Mx1 \*[Tn-font-size]\%MirOS\*[str-Mx]
d134 32
d172 1
a172 1
.		ie \\n(.$==0 \&MirOS\\*(aa
d178 1
a178 1
.			as b1 \&MirOS\ #\&\\*(A\\n(aP\\*(aa
d186 1
a186 1
.			as b1 \&MirOS\\*(aa
@


1.8
log
@fix more manpages
@
text
@d28 2
a29 2
.\" Copyright (c) 2008, 2009
.\"	Thorsten “mirabilos” Glaser <tg@@mirbsd.org>
d39 4
d89 1
a89 1
.\" Check which macro package we use
d92 2
@


1.7
log
@update to contrib/samples/portmdoc,v 1.6
@
text
@d1 1
a1 1
.\" $MirOS: ports/infrastructure/pkgtools/rtfm/packages.7,v 1.6 2008/06/12 19:41:44 tg Exp $
d83 1
a83 1
.Dd $Mdocdate: November 17 2009 $
d166 1
a166 1
.Dl pkg_add foo-1.0-0-vanilla.cgz
d305 1
a305 1
.Qq name-version-patchlevel-flavour ,
d324 1
a324 1
.Ar no-default-conflict
d366 1
a366 1
.Nm emacs-no_x11
d374 1
a374 1
.Xr packages-specs 7 ,
@


1.6
log
@packages aren't in /usr/local (quick fix)
@
text
@d1 1
a1 1
.\" $MirOS: ports/infrastructure/pkgtools/rtfm/packages.7,v 1.5 2008/03/14 16:46:01 tg Exp $
d27 3
a29 1
.\"
d32 3
a34 3
.\" * ` generates ‘ in groff, so use \`
.\" * ' generates ’ in groff, \' generates ´, so use \*(aq
.\" * - generates ‐ in groff, \- generates −, fixed in tmac/mdoc/doc-groff
d39 4
d44 13
d70 1
d82 10
a91 1
.Dd $Mdocdate: March 14 2008 $
d94 32
a125 7
.de Mx
.nr cF \\n(.f
.nr cZ \\n(.s
.ds aa \&\f\\n(cF\s\\n(cZ
.if \\n(aC==0 \{\
.	ie \\n(.$==0 \&MirOS\\*(aa
.	el .aV \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9
d127 21
a147 6
.if \\n(aC>\\n(aP \{\
.	nr aP \\n(aP+1
.	ie \\n(C\\n(aP==2 \{\
.		as b1 \&MirOS\ #\&\\*(A\\n(aP\\*(aa
.		ie \\n(aC>\\n(aP \{\
.			nr aP \\n(aP+1
a149 5
.		el .aZ
.	\}
.	el \{\
.		as b1 \&MirOS\\*(aa
.		nR
d151 1
d153 1
a153 1
..
@


1.5
log
@use .Dd before (re)defining .Mx, otherwise tmac.andoc fucks up on mnbsd
@
text
@d1 1
a1 1
.\" $MirOS: ports/infrastructure/pkgtools/rtfm/packages.7,v 1.4 2008/03/12 23:17:21 tg Exp $
d62 1
a62 1
.Dd $Mdocdate$
d135 1
a135 1
.Ss "Packages install to /usr/local"
d154 1
a154 1
On Darwin and Interix, packages use
d163 2
a164 2
Bear in mind that the package database is normally stored in /var/db/pkg,
which is usually not shared across machines.
d166 2
a167 1
Always installing packages on the same machine, and exporting /usr/local
@


1.4
log
@declare .Dd and .Mx
@
text
@d1 1
a1 1
.\" $MirOS: ports/infrastructure/pkgtools/rtfm/packages.7,v 1.3 2008/03/09 17:22:57 tg Exp $
d59 5
a88 1
.Dd $Mdocdate: March 9 2008 $
@


1.3
log
@bulk convert FLAVOR to FLAVOUR; nuke unused file; convert to $Mdocdate
@
text
@d1 1
a1 1
.\" $MirOS: ports/infrastructure/pkgtools/rtfm/packages.7,v 1.2 2005/08/05 20:34:04 bsiegert Exp $
d28 57
a84 1
.Dd $Mdocdate$
@


1.2
log
@Update MirPorts manpages.

flavor -> flavour
OpenBSD ports -> MirPorts
mandatory patchlevels
etc.pp.
@
text
@d1 1
a1 1
.\" $MirOS$
d28 1
a28 1
.Dd May 1, 2000
d179 1
a179 1
.Qq name-version-patchlevel-flavor ,
d187 1
a187 1
.Qq flavor
d237 1
a237 1
Some flavors are also explicitly provided to avoid having to depend on the
@


1.1
log
@Initial revision
@
text
@d1 1
d35 1
a35 3
The
.Ox
ports collection features a vast array of third-party software ready
d41 1
a41 1
.Dl pkg_add foo-1.0-vanilla.tgz
d43 1
a43 1
In appearance, packages seem to be .tgz archives, and as such, can be
d50 1
a50 1
.Ox
a53 4
Also, most
.Ox
developers concentrate on making the release as safe as possible and,
correspondingly, human resources for the ports tree are somewhat lacking.
d55 1
a55 3
As of
.Ox 2.7 ,
the package systems should offer a few basic warranties.
d58 1
a58 1
will instead identify conflicts, back the existing files up, display a
d94 3
d179 1
a179 1
.Qq name-version-flavor ,
d184 3
a186 1
is the version number, and
d197 3
a199 2
The most notable exception is the tcl/tk suite, where several versions
of the tcl/tk packages will coexist peacefully on a single machine.
d201 1
a201 4
Members of the
.Ox
project routinely scan built packages for conflicting files.
Most packages should contain correct annotations, and not allow themselves
d210 1
a210 1
are supported:  pointing
d212 1
a212 5
to a distant package repository, e.g.,
.Pp
.Dl setenv PKG_PATH ftp://ftp.openbsd.org/pub/OpenBSD/2.9/packages/i386
.Pp
will let
d215 2
@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
