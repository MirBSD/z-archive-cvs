head	1.18;
access;
symbols;
locks; strict;
comment	@# @;


1.18
date	2008.04.12.20.25.03;	author tg;	state Exp;
branches;
next	1.17;
commitid	10048011AAF5293EABD;

1.17
date	2008.04.12.20.22.14;	author tg;	state Exp;
branches;
next	1.16;
commitid	100480119FC3B66D4A6;

1.16
date	2008.04.07.19.46.56;	author tg;	state Exp;
branches;
next	1.15;
commitid	10047FA7A292EA81FEC;

1.15
date	2008.04.07.18.48.28;	author tg;	state Exp;
branches;
next	1.14;
commitid	10047FA6C8F771FD74D;

1.14
date	2008.04.07.18.47.35;	author tg;	state Exp;
branches;
next	1.13;
commitid	10047FA6C58020CF5BB;

1.13
date	2008.04.07.18.42.23;	author tg;	state Exp;
branches;
next	1.12;
commitid	10047FA6A081EF172DD;

1.12
date	2007.03.20.21.58.03;	author bsiegert;	state Exp;
branches;
next	1.11;
commitid	100460058CE10D92078;

1.11
date	2007.03.20.20.35.02;	author tg;	state Exp;
branches;
next	1.10;
commitid	100460045877BCF2B8A;

1.10
date	2006.08.26.23.33.46;	author tg;	state Exp;
branches;
next	1.9;
commitid	10044F0D836486F5483;

1.9
date	2006.06.27.18.54.05;	author tg;	state Exp;
branches;
next	1.8;
commitid	10044A17ED94E035644;

1.8
date	2006.03.19.19.19.40;	author tg;	state Exp;
branches;
next	1.7;
commitid	100441DAEDE7BF00476;

1.7
date	2006.03.14.22.51.57;	author bsiegert;	state Exp;
branches;
next	1.6;
commitid	1004417491D532C9E46;

1.6
date	2006.03.05.22.56.23;	author tg;	state Exp;
branches;
next	1.5;
commitid	100440B6C88534A830A;

1.5
date	2006.03.05.22.30.50;	author bsiegert;	state Exp;
branches;
next	1.4;
commitid	100440B667F165BC50B;

1.4
date	2006.02.20.19.04.15;	author tg;	state Exp;
branches;
next	1.3;
commitid	10043FA1237657099A6;

1.3
date	2006.02.01.17.23.35;	author tg;	state Exp;
branches;
next	1.2;
commitid	10043E0EE085FAE1F2C;

1.2
date	2006.02.01.16.28.01;	author tg;	state Exp;
branches;
next	1.1;
commitid	10043E0E1771404AF56;

1.1
date	2005.03.18.15.43.57;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.43.57;	author tg;	state Exp;
branches;
next	;


desc
@@


1.18
log
@damn! converted debugging test file accidentally
@
text
@# $MirOS: ports/converters/libiconv/libiconv.port.mk,v 1.17 2008/04/12 20:22:14 tg Exp $
# $OpenBSD: iconv.port.mk,v 1.4 2001/11/27 17:44:04 brad Exp $

# This is equivalent to USE_MOTIF.
# Can be one of 'any', 'base', 'gnu', 'port' + 'oldm4'
USE_ICONV?=	any

.if ${USE_ICONV:L:Many}
.  if ${OStype} == "MirBSD"
.    if ${NOPIC:L} != "no"
USE_ICONV+=	port
.    elif ${OSver:R} < 8
USE_ICONV+=	port
.    elif ${OSver:R} == 8
.      if ${OSver:E} < 163
USE_ICONV+=	port
.      else
USE_ICONV+=	base
.      endif
.    else
USE_ICONV+=	base
.    endif
.  elif ${MACHINE_OS} == "Darwin"
USE_ICONV+=	base
.  else
USE_ICONV+=	port
.  endif
.endif

.if ${USE_ICONV:L:Mgnu}
.  if ${MACHINE_OS} == "Darwin"
USE_ICONV+=	base
.  else
USE_ICONV+=	port
.  endif
.endif

.if ${USE_ICONV:L:Mport}
# The RUN_DEPENDS entry is to ensure libiconv is installed. This is
# necessary so that we have charset.alias installed on static archs.
# Typically installed in PREFIX/lib.
LIB_DEPENDS+=	pkgview/libiconv/lib/iconv:libiconv->=1.9.1-6:converters/libiconv
ICONV_PREFIX=	${LOCALBASE}/pkgview/libiconv
CONFIGURE_ENV+=	ICONV_PREFIX=${ICONV_PREFIX:Q}
CPPFLAGS+=	-I${ICONV_PREFIX:Q}/include
LDFLAGS+=	-Wl,-rpath,${ICONV_PREFIX:Q}/lib -L${ICONV_PREFIX:Q}/lib
.elif ${USE_ICONV:L:Mbase}
ICONV_PREFIX=	/usr
.else
.  error USE_ICONV=${USE_ICONV:L} invalid
.endif

.if ${USE_ICONV:L:Moldm4}
_ICONV_M4FILE=	${PORTSDIR}/converters/libiconv/iconvold.m4
.else
_ICONV_M4FILE=	${PORTSDIR}/converters/libiconv/iconv.m4
.endif

_MODGNU_loop_hooks+=	m4f=; if [[ -f $$d/m4/iconv.m4 ]]; then \
				m4f=$$d/m4/iconv.m4; \
			elif [[ -f $$d/$$ACAUX/iconv.m4 ]]; then \
				m4f=$$d/$$ACAUX/iconv.m4; \
			elif [[ -f $$d/$$ACAUX/m4/iconv.m4 ]]; then \
				m4f=$$d/$$ACAUX/m4/iconv.m4; \
			else \
				m4f=$$d/iconv.m4; \
			fi; \
			[[ -z $$m4f ]] || cp ${_ICONV_M4FILE} $$m4f;
@


1.17
log
@../ is not right here, actually
interesting find, discovered on stargazer.MidnightBSD.org
@
text
@d1 1
a1 1
# $MirOS: ports/converters/libiconv/libiconv.port.mk,v 1.16 2008/04/07 19:46:56 tg Exp $
d42 1
a42 2
#LIB_DEPENDS+=	pkgview/libiconv/lib/iconv:libiconv->=1.9.1-6:converters/libiconv
LIB_DEPENDS+=	iconv:libiconv->=1.9.1-6:converters/libiconv
@


1.16
log
@• fix LIB_DEPENDS
• merge RUN_DEPENDS into LIB_DEPENDS (middle part) – bsieger@@ says we can
• add to CPPFLAGS too
@
text
@d1 1
a1 1
# $MirOS: ports/converters/libiconv/libiconv.port.mk,v 1.15 2008/04/07 18:48:28 tg Exp $
d42 2
a43 1
LIB_DEPENDS+=	../pkgview/libiconv/lib/iconv:libiconv->=1.9.1-6:converters/libiconv
@


1.15
log
@• quoting
• path fix
@
text
@d1 1
a1 1
# $MirOS: ports/converters/libiconv/libiconv.port.mk,v 1.14 2008/04/07 18:47:35 tg Exp $
d42 1
a42 2
LIB_DEPENDS+=	../pkgview/libiconv/lib/iconv::converters/libiconv
RUN_DEPENDS+=	:libiconv->=1.9.1-6:converters/libiconv
d45 1
@


1.14
log
@add both -Wl,-rpath and -L
@
text
@d1 1
a1 1
# $MirOS: ports/converters/libiconv/libiconv.port.mk,v 1.13 2008/04/07 18:42:23 tg Exp $
d46 1
a46 1
LDFLAGS+=	-Wl,-rpath,${ICONV_PREFIX} -L${ICONV_PREFIX}
@


1.13
log
@• nuke VMEM_WARNING
• nuke INSTALL/DEINSTALL: LIB_DEPENDS can do relative paths
  like this: LIB_DEPENDS+= ../giconv/lib/iconv
• nuke MESSAGE, it is only confusing these days (pre-MirBSD-#9 times)

• introduce fake pkgviews, formal specification:
  – ${LOCALBASE}/pkgview/${STEM} (i.e. PKGNAME without version and dashver)
  – PLIST must also contain hierarchy up to “@@dirrm pkgview”
  – ${LOCALBASE}/pkgview/${STEM}/ may have subdirs include and lib *ONLY*
    (everything else goes directly to ${LOCALBASE}/ as usual)
  – packages with this system must use (provide) MODULES
  – the MODULES file must provide something like ${FOO_PREFIX}
  – and should probably add it to the appropriate *FLAGS vars
• these are until we have real pkgview+buildlink3 style stuff like TNF
  (ok, probably never or in 5 years ☻)

‣ NOTE: @@lib will add /usr/mpkg/pkgview/libiconv/lib (in my case) to
  the default library search path *and not remove it on pkg_delete*!
  ① this is buggy, if you add it you must remove it too (XXX how?)
  ② this should be unneeded because we use DT_RPATH – Benny?
@
text
@d1 1
a1 1
# $MirOS: ports/converters/libiconv/libiconv.port.mk,v 1.12 2007/03/20 21:58:03 bsiegert Exp $
d46 1
a46 1
LDFLAGS+=	-Wl,-rpath,${ICONV_PREFIX}
@


1.12
log
@Most source packages that use iconv do not have iconv.m4 inside the tree,
use a sensible default for this case and USE_ICONV=oldm4.
@
text
@d1 1
a1 1
# $MirOS: ports/converters/libiconv/libiconv.port.mk,v 1.11 2007/03/20 20:35:02 tg Exp $
d42 3
a44 3
LIB_DEPENDS+=	giconv::converters/libiconv
RUN_DEPENDS+=	:libiconv->=1.9.1-4:converters/libiconv
ICONV_PREFIX=	${LOCALBASE}/giconv
@


1.11
log
@bsiegert@@ wants me to do this
@
text
@d1 1
a1 1
# $MirOS: ports/converters/libiconv/libiconv.port.mk,v 1.10 2006/08/26 23:33:46 tg Exp $
d59 1
a59 3
_MODGNU_loop_hooks+=	m4f=; if [[ -f $$d/iconv.m4 ]]; then \
				m4f=$$d/iconv.m4; \
			elif [[ -f $$d/m4/iconv.m4 ]]; then \
d65 2
@


1.10
log
@OStype vs MACHINE_OS confusion, try to clean up the mess:

We use MACHINE_OS to distinguish between different OSes, i.e.
 BSD Darwin Interix Linux

Within these, there are OStype per MACHINE_OS, e.g.
 BSD -> MirBSD OpenBSD
 Darwin -> Darwin
 Interix -> Interix MirInterix
 Linux -> Debian

These are only the OStype""s seen until now,
so please use what semantically fits, e.g. on
Interix and MirInterix, you don't have IPv6,
but on MirInterix you won't need an explicit
texinfo dependency since it's in the base system.
Be aware that OStype can be user defined though!
@
text
@d1 1
a1 1
# $MirOS: ports/converters/libiconv/libiconv.port.mk,v 1.9 2006/06/27 18:54:05 tg Exp $
d5 1
a5 1
# Can be one of 'any', 'base', 'gnu', 'port'
d8 1
a8 1
.if ${USE_ICONV:L} == "any"
d11 1
a11 1
USE_ICONV=	port
d13 1
a13 1
USE_ICONV=	port
d16 1
a16 1
USE_ICONV=	port
d18 1
a18 1
USE_ICONV=	base
d21 1
a21 1
USE_ICONV=	base
d24 1
a24 1
USE_ICONV=	base
d26 1
a26 1
USE_ICONV=	port
d30 1
a30 1
.if ${USE_ICONV:L} == "gnu"
d32 1
a32 1
USE_ICONV=	base
d34 1
a34 1
USE_ICONV=	port
d38 1
a38 1
.if ${USE_ICONV:L} == "port"
d47 1
a47 1
.elif ${USE_ICONV:L} == "base"
d53 6
d68 1
a68 2
			[[ -z $$m4f ]] || \
			    cp ${PORTSDIR}/converters/libiconv/iconv.m4 $$m4f;
@


1.9
log
@on MirOS NOPIC arches, there is no libiconv
@
text
@d1 1
a1 1
# $MirOS: ports/converters/libiconv/libiconv.port.mk,v 1.8 2006/03/19 19:19:40 tg Exp $
d23 1
a23 1
.  elif ${OStype} == "Darwin"
d31 1
a31 1
.  if ${OStype} == "Darwin"
@


1.8
log
@-LDFLAGS+=      -L${ICONV_PREFIX:Q}/lib -Wl,-rpath,${ICONV_PREFIX:Q}/lib
-CPPFLAGS+=     -I${ICONV_PREFIX:Q}/include
+LDFLAGS+=      -Wl,-rpath,${ICONV_PREFIX}

as discussed in IRC
@
text
@d1 1
a1 1
# $MirOS: ports/converters/libiconv/libiconv.port.mk,v 1.7 2006/03/14 22:51:57 bsiegert Exp $
d10 3
a12 1
.    if ${OSver:R} < 8
@


1.7
log
@This seems to be a working solution for the iconv port trouble on -stable.

Add iconv includes and lib path (both -L and -rpath) to the iconv module.
Also add those to the glib pkgconfig file and make the port use the iconv
module. Bump patchlevel.

Hint: You will want to update those two together.
@
text
@d1 1
a1 1
# $MirOS: ports/converters/libiconv/libiconv.port.mk,v 1.6 2006/03/05 22:56:23 tg Exp $
d44 1
a44 2
LDFLAGS+=	-L${ICONV_PREFIX:Q}/lib -Wl,-rpath,${ICONV_PREFIX:Q}/lib
CPPFLAGS+=	-I${ICONV_PREFIX:Q}/include
@


1.6
log
@Fake a LOCALBASE/lib/libgiconv.{so,dylib} to please our
lib-depends checker, symlinked to LOCALBASE/giconv/lib/libiconv.{so,dylib}
and revert the change to a build dependency
@
text
@d1 1
a1 1
# $MirOS: ports/converters/libiconv/libiconv.port.mk,v 1.4 2006/02/20 19:04:15 tg Exp $
d43 3
@


1.5
log
@change lib dependency into run dependency so that ICONV_TYPE=port actually
works.
@
text
@d40 2
a41 2
BUILD_DEPENDS+=	:libiconv-*:converters/libiconv
RUN_DEPENDS+=	:libiconv-*:converters/libiconv
@


1.4
log
@autopatch any pre-existing iconv.m4 found in the current directory
or a subdirectory m4/ (or in the ac config aux dir)

older ones use lib-ld.m4 and friends which are broken
@
text
@d1 1
a1 1
# $MirOS: ports/converters/libiconv/libiconv.port.mk,v 1.3 2006/02/01 17:23:35 tg Exp $
d40 1
a40 1
LIB_DEPENDS+=	iconv::converters/libiconv
@


1.3
log
@move libiconv (and libcharset) includes from LOCALBASE/include and
LOCALBASE/lib to LOCALBASE/giconv/{include,lib}/, respectively, to
avoid a configure-time clash between these resulting in none being
picked (mgcc -LLOCALBASE/lib -L/usr/lib -liconv fails, because the
system libiconv isn't seen and GNU libiconv needs renamed function
macros which are not provided by /usr/include/iconv.h).
Add instructions to point symbolic links, for upgraders (on Darwin
and MirOS, recommend links to the base system libraries instead).
@
text
@d1 1
a1 1
# $MirOS: ports/converters/libiconv/libiconv.port.mk,v 1.2 2006/02/01 16:28:01 tg Exp $
d48 12
@


1.2
log
@add USE_ICONV variable to MODULES=converters/libiconv which
defaults to any -> doesn't pull in the port under Darwin and
MirOS-current, uses libiconv (GNU or BSD) in base
@
text
@d1 1
a1 1
# $MirOS$
d42 1
a42 1
ICONV_PREFIX=	${LOCALBASE}
@


1.1
log
@Initial revision
@
text
@d1 1
d4 33
d40 1
a40 1
LIB_DEPENDS+=	iconv.2::converters/libiconv
d42 6
@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
