head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2006.10.07.00.13.01;	author tg;	state Exp;
branches;
next	;
commitid	1004526F0E646DFD9A1;


desc
@@


1.1
log
@add a working port of the jmdict command line utility
NB: creating the sqlite version of the dictionary took more than one hour;
    that's why it's a separate port, which can be depended on by gjdict too
@
text
@$MirOS$
--- jmdict_import.cc.orig	Mon Oct 18 08:10:20 2004
+++ jmdict_import.cc	Fri Oct  6 22:48:29 2006
@@@@ -21,7 +21,7 @@@@ Foundation, Inc., 59 Temple Place - Suit
 #include <ctime>
 #include <string>
 #include <stack>
-#include "sqlite.h"
+#include "sqlitexx.h"
 #include "xmlparser.h"
 #include "kana2romaji.h"
 using namespace std;
@@@@ -77,13 +77,13 @@@@ public:
 
 private:
     void insert_kanji(const string& kanji) {
-        db.exec(sql::query("INSERT INTO kanji (entry, kanji) VALUES (%i, %Q)") % entry_seq % kanji);
+        db.exec(sql::query("INSERT INTO kanji (entry, kanji) VALUES (%u, %Q)") % entry_seq % kanji);
     }
 
     void insert_reading(const string& reading) {
         string romaji;
         kana2romaji(reading, romaji);
-        db.exec(sql::query("INSERT INTO reading (entry, kana, romaji) VALUES (%i, %Q, %Q)") % entry_seq % reading % romaji);
+        db.exec(sql::query("INSERT INTO reading (entry, kana, romaji) VALUES (%u, %Q, %Q)") % entry_seq % reading % romaji);
     }
     
     void insert_gloss(string lang, const string& text) {
@@@@ -91,7 +91,7 @@@@ private:
             lang = "en";
         db.exec(
             sql::query("INSERT INTO gloss (entry, sense, lang, gloss) "
-                       "VALUES (%i, %i, %Q, %Q)") % entry_seq % sense_seq % lang % text);
+                       "VALUES (%u, %u, %Q, %Q)") % entry_seq % sense_seq % lang % text);
 
         static unsigned seq = 0;
         if (++seq % 50000 == 0) {
@
