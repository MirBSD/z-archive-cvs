head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2008.08.17.01.54.17;	author tg;	state Exp;
branches;
next	;
commitid	10048A784A21ECFCCA3;


desc
@@


1.1
log
@• make gnupg flavour default
• regen distinfo
• use mirbsd master site for unfetchable distfile
• apply yahoo login fix from CenterIM, thanks
• use new mirbsd libc function for IRC charset auto-conversion, yay!
  (works better than the Perl one in MirSirc, even)
• modernise port
@
text
@Centericq is a text mode menu- and window-driven IM interface
that supports the ICQ2000, Yahoo!, AIM, MSN, IRC, Jabber etc.
protocols.  It is a fully featured client, can do things like
file transfer. Has the ability to associate sounds with
different actions/events and play them through a sound card,
as well as the standard beeping.

Things like colours are not hard-coded in the program itself,
but can be set in the corresponding config files.

GnuPG encryption via gpgme is available as the "gnupg" flavour;
be aware that adding this makes centericq even less stable. For
systems with g++ 3.3 and older, a "no-msn" flavour makes it run.

On MirOS 09A5 and higher (i.e. where libncursesw is installed
as lib(n)curses), centericq-utf8 is built instead of centericq.
If run in the UTF-8 locale, the text "(UTF-8)" is then displayed
behind the version in the title bar, and every input is "just
passed through" to the servers, unless a protocol defines (in
the C++ source!) a specific character set to be used, in which
case it's iconv'd. This is the case for ICQ (for now), which
prescribes windows-1252 to be used on the wire. The "Codepages
conversion" configuration subsection is still displayed but
ignored in that case, but honoured in a non-unicode locale.
Beware: centericq always links against libncurses; if this is
not a libncursesw implementation, UTF-8 mode is still broken!
(I could have it depend on the libncursesw port, but that one
is not tested on anything but MirOS-current anyway.)
@
