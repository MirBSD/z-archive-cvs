head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2007.12.23.23.27.28;	author bsiegert;	state Exp;
branches;
next	;
commitid	100476EEEF700009199;


desc
@@


1.1
log
@SECURITY: Add several patches for centericq, bump patchlevel. From Debian.

Relevant changelog entries:

  * Backport upstream patch to fix buffer overflows, which can allow
    remote attackers to execute arbitrary code
    Fixes: CVE-2007-3713
  * Applied patch by Julien Lemoine to fix buffer overflow
    [kkstrtext-0.1/kkstrtext.h,
    debian/patches/security_CVE-2005-3863.dpatch]
  * Corrected creation of temporary file in the hook handling
    [src/hooks/gaduhooks.cc, CAN-2005-1914,
    debian/patches/security_CAN-2005-1914.dpatch]
@
text
@#! /bin/sh -e
## Patch by Joey Schulze <joey@@debian.org>
##
## DP: Fix tmpfile vulnerability, CAN-2005-1914

[ -f debian/patches/00patch-opts ] && . debian/patches/00patch-opts
patch_opts="${patch_opts:--f --no-backup-if-mismatch}"

if [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
       -patch) patch $patch_opts -p1 < $0;;
       -unpatch) patch $patch_opts -p1 -R < $0;;
        *)
          echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
          exit 1;;
esac

exit 0

--- centericq-4.20.0.orig/src/hooks/gaduhook.cc	2005-01-19 00:20:17.000000000 +0100
+++ centericq-4.20.0/src/hooks/gaduhook.cc	2005-07-06 19:49:21.000000000 +0200
@@@@ -893,6 +893,7 @@@@ static char *token_ocr(const char *ocr, 
 string gaduhook::handletoken(struct gg_http *h) {
     struct gg_token *t;
     string fname, r;
+    char *tmpfilep = NULL;
 
     if(!h)
 	return "";
@@@@ -906,10 +907,22 @@@@ string gaduhook::handletoken(struct gg_h
     if(!(t = (struct gg_token *) h->data) || !h->body)
 	return "";
 
-    do {
-	fname = (getenv("TMPDIR") ? getenv("TMPDIR") : "/tmp");
-	fname += "/gg.token." + i2str(getpid()) + i2str(time(0));
-    } while(!access(fname.c_str(), F_OK));
+    while (tmpfilep == NULL) {
+      char tmpnam[100];
+      int tmpfiledes;
+      if (getenv("TMPDIR") && strlen(getenv("TMPDIR")) < 50)
+	sprintf (tmpnam, "%s/gg.token.XXXXXX", getenv("TMPDIR"));
+      else
+	sprintf (tmpnam, "/tmp/gg.token.XXXXXX");
+
+      if ((tmpfilep = mktemp (tmpnam)) != NULL) {
+	if ((tmpfiledes = open (tmpnam, O_CREAT | O_EXCL, S_IREAD | S_IWRITE)) == -1)
+	  tmpfilep = NULL;
+	else
+	  close (tmpfiledes);
+      }
+      fname = tmpnam;
+    }
 
     ofstream bf(fname.c_str());
 
@
