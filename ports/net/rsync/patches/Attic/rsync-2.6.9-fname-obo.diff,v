head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2008.04.02.00.06.04;	author tg;	state dead;
branches;
next	1.1;
commitid	10047F2CD0D74098805;

1.1
date	2007.09.02.19.55.51;	author tg;	state Exp;
branches;
next	;
commitid	10046DB154E5284945A;


desc
@@


1.2
log
@upgrade to rsync 3, GPLv3
• took me more than 2 hours
• book example of crazy buildsystem:
  ‣ does not use libtool or automake/aclocal
  ‣ does not use iconv.m4
  ‣ uses configure.sh custom filename for configure script
• bump version, remove old CVE fix
• switch to CONFIGURE_STYLE=autoconf
• add a touching file (rsyncam.dep) for “configure.sh” processing ☹
• use --disable-iconv explicitly for -static flavour
• use libiconv module (dependency) for normal flavour
• patch configure.in to use our iconv.m4 file
• install a few more doc files
• make rsync *NOT* link against -liconv if --disable-iconv is given!
  ‣ prevents a DT_NEEDED which otherwise appeared even if
    no function from the iconv library was imported!
• when calling $CC with -c, always add $CFLAGS $CPPFLAGS (sigh…)
• support MidnightBSD: we assume they have FreeBSD xattr support
@
text
@$MirOS: ports/net/rsync/patches/rsync-2.6.9-fname-obo.diff,v 1.1 2007/09/02 19:55:51 tg Exp $
--- sender.c~	2006-09-20 03:53:32.000000000 +0200
+++ sender.c	2007-07-25 15:33:05.000000000 +0200
@@@@ -123,6 +123,7 @@@@
 	char fname[MAXPATHLEN];
 	struct file_struct *file;
 	unsigned int offset;
+	size_t l = 0;
 
 	if (ndx < 0 || ndx >= the_file_list->count)
 		return;
@@@@ -133,6 +134,20 @@@@
 				    file->dir.root, "/", NULL);
 	} else
 		offset = 0;
+
+	l = offset + 1;
+	if (file) {
+		if (file->dirname)
+			l += strlen(file->dirname);
+		if (file->basename)
+			l += strlen(file->basename);
+	}
+
+	if (l >= sizeof(fname)) {
+		rprintf(FERROR, "Overlong pathname\n");
+		exit_cleanup(RERR_FILESELECT);
+	}
+
 	f_name(file, fname + offset);
 	if (remove_source_files) {
 		if (do_unlink(fname) == 0) {
@@@@ -224,6 +239,7 @@@@
 	enum logcode log_code = log_before_transfer ? FLOG : FINFO;
 	int f_xfer = write_batch < 0 ? batch_fd : f_out;
 	int i, j;
+	size_t l = 0;
 
 	if (verbose > 2)
 		rprintf(FINFO, "send_files starting\n");
@@@@ -259,6 +275,20 @@@@
 				fname[offset++] = '/';
 		} else
 			offset = 0;
+
+		l = offset + 1;
+		if (file) {
+			if (file->dirname)
+				l += strlen(file->dirname);
+			if (file->basename)
+				l += strlen(file->basename);
+		}
+
+		if (l >= sizeof(fname)) {
+			rprintf(FERROR, "Overlong pathname\n");
+			exit_cleanup(RERR_FILESELECT);
+		}
+
 		fname2 = f_name(file, fname + offset);
 
 		if (verbose > 2)
@


1.1
log
@SECURITY: fix CVE-2007-4091
@
text
@d1 1
a1 1
$MirOS$
@

