head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2012.01.04.23.16.40;	author tg;	state dead;
branches;
next	1.2;
commitid	1004F04DDE925150E8F;

1.2
date	2009.05.17.17.51.08;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004A104EA2271C2AD8;

1.1
date	2008.04.02.00.06.04;	author tg;	state Exp;
branches;
next	;
commitid	10047F2CD0D74098805;


desc
@@


1.3
log
@update
@
text
@$MirOS: ports/net/rsync/patches/patch-configure_in,v 1.2 2009/05/17 17:51:08 tg Exp $
--- configure.in.orig	Fri May  8 17:06:50 2009
+++ configure.in	Sun May 17 17:46:38 2009
@@@@ -409,34 +409,8 @@@@ fi
 
 AC_SEARCH_LIBS(inet_ntop, resolv)
 
-# Solaris and HP-UX weirdness:
-# Search for libiconv_open (not iconv_open) to discover if -liconv is needed!
-AC_SEARCH_LIBS(libiconv_open, iconv)
+AM_ICONV
 
-AC_MSG_CHECKING([for iconv declaration])
-AC_CACHE_VAL(am_cv_proto_iconv, [
-    AC_TRY_COMPILE([
-#include <stdlib.h>
-#include <iconv.h>
-extern
-#ifdef __cplusplus
-"C"
-#endif
-#if defined(__STDC__) || defined(__cplusplus)
-size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
-#else
-size_t iconv();
-#endif
-], [], am_cv_proto_iconv_arg1="", am_cv_proto_iconv_arg1="const")
-      am_cv_proto_iconv="extern size_t iconv (iconv_t cd, $am_cv_proto_iconv_arg1 char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);"])
-    am_cv_proto_iconv=`echo "[$]am_cv_proto_iconv" | tr -s ' ' | sed -e 's/( /(/'`
-AC_MSG_RESULT([$]{ac_t:-
-         }[$]am_cv_proto_iconv)
-AC_DEFINE_UNQUOTED(ICONV_CONST, $am_cv_proto_iconv_arg1,
-		   [Define as const if the declaration of iconv() needs const.])
-
-dnl AC_MSG_NOTICE([Looking in libraries: $LIBS])
-
 AC_CHECK_FUNCS(inet_ntop, , [AC_LIBOBJ(lib/inet_ntop)])
 AC_CHECK_FUNCS(inet_pton, , [AC_LIBOBJ(lib/inet_pton)])
 
@@@@ -551,19 +525,19 @@@@ AC_CHECK_FUNCS(waitpid wait4 getcwd strd
     memmove lchown vsnprintf snprintf vasprintf asprintf setsid strpbrk \
     strlcat strlcpy strtol mallinfo getgroups setgroups geteuid getegid \
     setlocale setmode open64 lseek64 mkstemp64 mtrace va_copy __va_copy \
-    strerror putenv iconv_open locale_charset nl_langinfo getxattr \
+    strerror putenv locale_charset nl_langinfo getxattr \
     extattr_get_link sigaction sigprocmask setattrlist)
 
-dnl cygwin iconv.h defines iconv_open as libiconv_open
-if test x"$ac_cv_func_iconv_open" != x"yes"; then
-    AC_CHECK_FUNC(libiconv_open, [ac_cv_func_iconv_open=yes; AC_DEFINE(HAVE_ICONV_OPEN, 1)])
-fi
-
 AC_CHECK_FUNCS(getpgrp tcgetpgrp)
 if test $ac_cv_func_getpgrp = yes; then
     AC_FUNC_GETPGRP
 fi
 
+save_LIBS=$LIBS
+LIBS="$LIBICONV $LIBS"
+AC_CHECK_FUNCS([iconv_open])
+LIBS=$save_LIBS
+
 AC_ARG_ENABLE(iconv-open,
     AC_HELP_STRING([--disable-iconv-open],
 	    [disable all use of iconv_open() function]),
@@@@ -589,6 +563,19 @@@@ if test x"$enable_iconv" != x"no"; then
 	AC_DEFINE(UTF8_CHARSET, "UTF-8", [String to pass to iconv() for the UTF-8 charset.])
 fi
 
+if test x"$enable_iconv" != x"no"; then
+	LIBS="$LIBICONV $LIBS"
+
+	# Solaris and HP-UX weirdness:
+	# Search for libiconv_open (not iconv_open) to discover if -liconv is needed!
+	AC_SEARCH_LIBS(libiconv_open, iconv)
+
+	dnl cygwin iconv.h defines iconv_open as libiconv_open
+	if test x"$ac_cv_func_iconv_open" != x"yes"; then
+	    AC_CHECK_FUNC(libiconv_open, [ac_cv_func_iconv_open=yes; AC_DEFINE(HAVE_ICONV_OPEN, 1)])
+	fi
+fi
+
 AC_CACHE_CHECK([whether chown() modifies symlinks],rsync_cv_chown_modifies_symlink,[
   AC_TRY_RUN([
 #if HAVE_UNISTD_H
@@@@ -819,7 +806,7 @@@@ rm -rf conftest*
 cat > conftest.$ac_ext <<EOF
 int main() { return 0; }
 EOF
-${CC-cc} -c -o conftest..o conftest.$ac_ext
+${CC-cc} $CFLAGS $CPPFLAGS -c -o conftest..o conftest.$ac_ext
 if test -f conftest..o; then
     rsync_cv_DASHC_WORKS_WITH_DASHO=yes
 else
@@@@ -950,7 +937,7 @@@@ else
 	AC_DEFINE(HAVE_OSX_XATTRS, 1, [True if you have Mac OS X xattrs])
 	AC_DEFINE(SUPPORT_XATTRS, 1)
 	;;
-    freebsd*)
+    freebsd* | midnightbsd*)
 	AC_MSG_RESULT(Using FreeBSD extattrs)
 	AC_DEFINE(HAVE_FREEBSD_XATTRS, 1, [True if you have FreeBSD xattrs])
 	AC_DEFINE(SUPPORT_XATTRS, 1)
@


1.2
log
@update
@
text
@d1 1
a1 1
$MirOS: ports/net/rsync/patches/patch-configure_in,v 1.1 2008/04/02 00:06:04 tg Exp $
@


1.1
log
@upgrade to rsync 3, GPLv3
• took me more than 2 hours
• book example of crazy buildsystem:
  ‣ does not use libtool or automake/aclocal
  ‣ does not use iconv.m4
  ‣ uses configure.sh custom filename for configure script
• bump version, remove old CVE fix
• switch to CONFIGURE_STYLE=autoconf
• add a touching file (rsyncam.dep) for “configure.sh” processing ☹
• use --disable-iconv explicitly for -static flavour
• use libiconv module (dependency) for normal flavour
• patch configure.in to use our iconv.m4 file
• install a few more doc files
• make rsync *NOT* link against -liconv if --disable-iconv is given!
  ‣ prevents a DT_NEEDED which otherwise appeared even if
    no function from the iconv library was imported!
• when calling $CC with -c, always add $CFLAGS $CPPFLAGS (sigh…)
• support MidnightBSD: we assume they have FreeBSD xattr support
@
text
@d1 4
a4 4
$MirOS$
--- configure.in.orig	Mon Mar 31 06:29:20 2008
+++ configure.in	Tue Apr  1 23:51:47 2008
@@@@ -411,34 +411,8 @@@@ fi
d40 1
a40 1
@@@@ -553,19 +527,19 @@@@ AC_CHECK_FUNCS(waitpid wait4 getcwd strd
d63 4
a66 4
 AC_ARG_ENABLE(iconv,
     AC_HELP_STRING([--disable-iconv],
 	    [disable rsync's --iconv option]),
@@@@ -582,6 +556,19 @@@@ if test x"$enable_iconv" != x"no"; then
d86 1
a86 1
@@@@ -812,7 +799,7 @@@@ rm -rf conftest*
d95 1
a95 1
@@@@ -943,7 +930,7 @@@@ else
@

