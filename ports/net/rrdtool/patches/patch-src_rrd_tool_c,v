head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2008.11.12.23.27.27;	author tg;	state Exp;
branches;
next	1.1;
commitid	100491B6647322A1F73;

1.1
date	2008.11.12.20.27.50;	author tg;	state Exp;
branches;
next	;
commitid	100491B3C4928875210;


desc
@@


1.2
log
@resolve some signedness issues which occur because of implicit
conversions of unsigned long into zero-extended time_t instead
of sign-extended time_t from signed long, because the size of
time_t is larger than the size of a longâ€¦
@
text
@$MirOS: ports/net/rrdtool/patches/patch-src_rrd_tool_c,v 1.1 2008/11/12 20:27:50 tg Exp $
--- src/rrd_tool.c.orig	Mon Apr 25 21:03:24 2005
+++ src/rrd_tool.c	Wed Nov 12 22:46:16 2008
@@@@ -340,14 +340,14 @@@@ int HandleInputLine(int argc, char **arg
     else if (strcmp("resize", argv[1]) == 0)
 	rrd_resize(argc-1, &argv[1]);
     else if (strcmp("last", argv[1]) == 0)
-        printf("%ld\n",rrd_last(argc-1, &argv[1]));
+        printf("%lld\n",(int64_t)rrd_last(argc-1, &argv[1]));
     else if (strcmp("first", argv[1]) == 0)
-        printf("%ld\n",rrd_first(argc-1, &argv[1]));
+        printf("%lld\n",(int64_t)rrd_first(argc-1, &argv[1]));
     else if (strcmp("update", argv[1]) == 0)
 	rrd_update(argc-1, &argv[1]);
     else if (strcmp("fetch", argv[1]) == 0) {
-	time_t        start,end;
-	unsigned long step, ds_cnt,i,ii;
+	time_t        start,end,i;
+	unsigned long step, ds_cnt,ii;
 	rrd_value_t   *data,*datai;
 	char          **ds_namv;
 	if (rrd_fetch(argc-1, &argv[1],&start,&end,&step,&ds_cnt,&ds_namv,&data) != -1) {
@@@@ -357,7 +357,7 @@@@ int HandleInputLine(int argc, char **arg
                printf("%-18s",ds_namv[i]);
             printf("%s\n\n",ds_namv[i]);
 	    for (i = start; i <= end; i += step){
-	        printf("%10lu:", i);
+	        printf("%10lld:", (int64_t)i);
 	        for (ii = 0; ii < ds_cnt; ii++)
 		    printf("  %0.10e", *(datai++));
 	        printf("\n");
@@@@ -380,9 +380,9 @@@@ int HandleInputLine(int argc, char **arg
 	  printf("<?xml version=\"1.0\" encoding=\"%s\"?>\n\n", XML_ENCODING);
 	  printf("<%s>\n", ROOT_TAG);
 	  printf("  <%s>\n", META_TAG);
-	  printf("    <%s>%lu</%s>\n", META_START_TAG, start, META_START_TAG);
+	  printf("    <%s>%llu</%s>\n", META_START_TAG, (int64_t)start, META_START_TAG);
 	  printf("    <%s>%lu</%s>\n", META_STEP_TAG, step, META_STEP_TAG);
-	  printf("    <%s>%lu</%s>\n", META_END_TAG, end, META_END_TAG);
+	  printf("    <%s>%llu</%s>\n", META_END_TAG, (int64_t)end, META_END_TAG);
 	  printf("    <%s>%lu</%s>\n", META_ROWS_TAG, row_cnt, META_ROWS_TAG);
 	  printf("    <%s>%lu</%s>\n", META_COLS_TAG, col_cnt, META_COLS_TAG);
 	  printf("    <%s>\n", LEGEND_TAG);
@@@@ -398,7 +398,7 @@@@ int HandleInputLine(int argc, char **arg
 	  printf("  <%s>\n", DATA_TAG);
 	  for (i = start; i <= end; i += step) {
 	    printf ("    <%s>", DATA_ROW_TAG);
-	    printf ("<%s>%lu</%s>", COL_TIME_TAG, i, COL_TIME_TAG);
+	    printf ("<%s>%llu</%s>", COL_TIME_TAG, (int64_t)i, COL_TIME_TAG);
 	    for (j = 0; j < col_cnt; j++) {
 	      rrd_value_t newval = DNAN;
 	      newval = *(ptr++);
@


1.1
log
@unbreak; update to latest 1.0.x branch
(newer 1.3.x have horrid dependencies, such as cairo)
@
text
@d1 1
a1 1
$MirOS$
d3 2
a4 2
+++ src/rrd_tool.c	Wed Nov 12 20:13:20 2008
@@@@ -340,9 +340,9 @@@@ int HandleInputLine(int argc, char **arg
d16 16
@

