head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2008.03.04.02.24.15;	author tg;	state Exp;
branches;
next	1.2;
commitid	10047CCB28038B13532;

1.2
date	2007.09.07.21.40.37;	author tg;	state Exp;
branches;
next	1.1;
commitid	10046E1C549691BE56F;

1.1
date	2007.05.18.00.23.06;	author tg;	state Exp;
branches;
next	;
commitid	100464CF1EB52EB8039;


desc
@@


1.3
log
@• update

  Changes in version 0.1.2.19 - 2008-01-17

  o Security fixes:
    - Exit policies now reject connections that are addressed to a
      relay's public (external) IP address too, unless
      ExitPolicyRejectPrivate is turned off. We do this because too
      many relays are running nearby to services that trust them based
      on network address.

  o Major bugfixes:
    - When the clock jumps forward a lot, do not allow the bandwidth
      buckets to become negative. Fixes bug 544.
    - Fix a memory leak on exit relays; we were leaking a cached_resolve_t
      on every successful resolve. Reported by Mike Perry.
    - Purge old entries from the "rephist" database and the hidden
      service descriptor database even when DirPort is zero.
    - Stop thinking that 0.1.2.x directory servers can handle "begin_dir"
      requests. Should ease bugs 406 and 419 where 0.1.2.x relays are
      crashing or mis-answering these requests.
    - When we decide to send a 503 response to a request for servers, do
      not then also send the server descriptors: this defeats the whole
      purpose. Fixes bug 539.

  Changes in version 0.1.2.18 - 2007-10-28

  o Major bugfixes (crashes):
    - If a connection is shut down abruptly because of something that
      happened inside connection_flushed_some(), do not call
      connection_finished_flushing(). Should fix bug 451:
      "connection_stop_writing: Assertion conn->write_event failed"
      Bugfix on 0.1.2.7-alpha.
    - Fix possible segfaults in functions called from
      rend_process_relay_cell().

  o Major bugfixes (hidden services):
    - Hidden services were choosing introduction points uniquely by
      hexdigest, but when constructing the hidden service descriptor
      they merely wrote the (potentially ambiguous) nickname.
    - Clients now use the v2 intro format for hidden service
      connections: they specify their chosen rendezvous point by identity
      digest rather than by (potentially ambiguous) nickname. These
      changes could speed up hidden service connections dramatically.

  o Major bugfixes (other):
    - Stop publishing a new server descriptor just because we get a
      HUP signal. This led (in a roundabout way) to some servers getting
      dropped from the networkstatus lists for a few hours each day.
    - When looking for a circuit to cannibalize, consider family as well
      as identity. Fixes bug 438. Bugfix on 0.1.0.x (which introduced
      circuit cannibalization).
    - When a router wasn't listed in a new networkstatus, we were leaving
      the flags for that router alone -- meaning it remained Named,
      Running, etc -- even though absence from the networkstatus means
      that it shouldn't be considered to exist at all anymore. Now we
      clear all the flags for routers that fall out of the networkstatus
      consensus. Fixes bug 529.

• fix the regression test so that it can run on a platform honouring
  the German law about measurement and time keeping instead of POSIX
@
text
@$MirOS: ports/net/tor/patches/patch-src_or_config_c,v 1.2 2007/09/07 21:40:37 tg Exp $
--- src/or/config.c.orig	Mon Jan  7 07:54:05 2008
+++ src/or/config.c	Tue Mar  4 01:20:32 2008
@@@@ -2642,15 +2642,15 @@@@ options_validate(or_options_t *old_optio
 
   if (options->BandwidthRate > ROUTER_MAX_DECLARED_BANDWIDTH) {
     r = tor_snprintf(buf, sizeof(buf),
-                     "BandwidthRate must be at most %d",
-                     ROUTER_MAX_DECLARED_BANDWIDTH);
+                     "BandwidthRate must be at most %ld",
+                     (long)ROUTER_MAX_DECLARED_BANDWIDTH);
     *msg = tor_strdup(r >= 0 ? buf : "internal error");
     return -1;
   }
   if (options->BandwidthBurst > ROUTER_MAX_DECLARED_BANDWIDTH) {
     r = tor_snprintf(buf, sizeof(buf),
-                     "BandwidthBurst must be at most %d",
-                     ROUTER_MAX_DECLARED_BANDWIDTH);
+                     "BandwidthBurst must be at most %ld",
+                     (long)ROUTER_MAX_DECLARED_BANDWIDTH);
     *msg = tor_strdup(r >= 0 ? buf : "internal error");
     return -1;
   }
@


1.2
log
@upgrade, mostly security

$ gpg tor-0.1.2.17.tar.gz.asc
Detached signature.
Please enter name of data file: /usr/ports/Distfiles/tor-0.1.2.17.tar.gz
gpg: Signature made Thu Aug 30 21:03:35 2007 UTC using DSA key ID 28988BF5
gpg: Good signature from "Roger Dingledine <arma@@mit.edu>"
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: B117 2656 DFF9 83C3 042B  C699 EB5A 896A 2898 8BF5

… that guy should do some keysigning in Europe too …
@
text
@d1 4
a4 4
$MirOS: ports/net/tor/patches/patch-src_or_config_c,v 1.1 2007/05/18 00:23:06 tg Exp $
--- src/or/config.c.orig	Sat Aug 25 21:42:09 2007
+++ src/or/config.c	Fri Sep  7 21:33:12 2007
@@@@ -2640,15 +2640,15 @@@@ options_validate(or_options_t *old_optio
@


1.1
log
@Port the EFF's The Onion Router, with slight help from pkgsrc®.
Untested so far. (But this will change.)
@
text
@d1 4
a4 4
$MirOS$
--- src/or/config.c.orig	Wed Mar  7 11:12:10 2007
+++ src/or/config.c	Fri May 18 00:17:53 2007
@@@@ -2637,15 +2637,15 @@@@ options_validate(or_options_t *old_optio
@

