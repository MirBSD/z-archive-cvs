head	1.4;
access;
symbols;
locks; strict;
comment	@# @;


1.4
date	2011.11.20.04.57.07;	author tg;	state Exp;
branches;
next	1.3;
commitid	1004EC8880406A80564;

1.3
date	2008.03.04.02.24.15;	author tg;	state Exp;
branches;
next	1.2;
commitid	10047CCB28038B13532;

1.2
date	2007.08.06.09.47.34;	author tg;	state Exp;
branches;
next	1.1;
commitid	10046B6EE4653577C69;

1.1
date	2007.05.18.00.23.06;	author tg;	state Exp;
branches;
next	;
commitid	100464CF1EB52EB8039;


desc
@@


1.4
log
@first steps toward a new time API
• no DJB code (actual code) any more, only reimplementation of algorithms
  whose code is placed in USA PD
• no struct returns any more
• skip the extra tai_t step
• no _t suffix for types I define
• try to be a bit more elegant – I learned a lot since then, after all

the old ABI is still provided until we bump libc major
‣ the new API might wander off libc into libmbfun then, _too_

goal is functional equivalence (after all, it’s been proven correct)
@
text
@$MirOS: ports/net/tor/patches/patch-configure_in,v 1.3 2008/03/04 02:24:15 tg Exp $
--- configure.in.orig	Thu Jan 17 19:49:03 2008
+++ configure.in	Sun Nov 20 04:48:06 2011
@@@@ -44,7 +44,7 @@@@ AC_ARG_ENABLE(threads,
 
 if test x$enable_threads = x; then
    case $host in
-    *-*-netbsd* | *-*-openbsd* )
+    *-*-netbsd* | *-*-openbsd* | *-*-mirbsd*)
      # Don't try multithreading on netbsd -- there is no threadsafe DNS
      # lookup function there.
      if test x$eventdns != xtrue; then
@@@@ -322,7 +322,7 @@@@ fi
 fi
 
 dnl Now check for particular libevent functions.
-AC_CHECK_FUNCS(event_get_version event_get_method event_set_log_callback)
+AC_CHECK_FUNCS(event_get_version event_get_method event_set_log_callback evdns_init)
 
 dnl ------------------------------------------------------
 dnl Where do you live, openssl?  And how do we call you?
@@@@ -529,7 +529,7 @@@@ if test x$transparent = xtrue ; then
    if test x$transparent_ok = x1 ; then
      AC_DEFINE(USE_TRANSPARENT, 1, "Define to enable transparent proxy support")
      case $host in
-       *-*-openbsd*)
+       *-*-openbsd* | *-*-mirbsd*)
          AC_DEFINE(OPENBSD, 1, "Define to handle pf on OpenBSD properly") ;;
      esac
    else
@@@@ -861,9 +861,8 @@@@ AC_DEFINE_UNQUOTED(LOCALSTATEDIR,"$LOCAL
 # Set CFLAGS _after_ all the above checks, since our warnings are stricter
 # than autoconf's macros like.
 if test $ac_cv_c_compiler_gnu = yes; then
-  CFLAGS="$CFLAGS -Wall -g -O2"
+  CFLAGS="$CFLAGS -Wall"	# Don't set CFLAGS, MirPorts does that for us.
 else
-  CFLAGS="$CFLAGS -g -O"
   enable_gcc_warnings=no
 fi
 
@


1.3
log
@• update

  Changes in version 0.1.2.19 - 2008-01-17

  o Security fixes:
    - Exit policies now reject connections that are addressed to a
      relay's public (external) IP address too, unless
      ExitPolicyRejectPrivate is turned off. We do this because too
      many relays are running nearby to services that trust them based
      on network address.

  o Major bugfixes:
    - When the clock jumps forward a lot, do not allow the bandwidth
      buckets to become negative. Fixes bug 544.
    - Fix a memory leak on exit relays; we were leaking a cached_resolve_t
      on every successful resolve. Reported by Mike Perry.
    - Purge old entries from the "rephist" database and the hidden
      service descriptor database even when DirPort is zero.
    - Stop thinking that 0.1.2.x directory servers can handle "begin_dir"
      requests. Should ease bugs 406 and 419 where 0.1.2.x relays are
      crashing or mis-answering these requests.
    - When we decide to send a 503 response to a request for servers, do
      not then also send the server descriptors: this defeats the whole
      purpose. Fixes bug 539.

  Changes in version 0.1.2.18 - 2007-10-28

  o Major bugfixes (crashes):
    - If a connection is shut down abruptly because of something that
      happened inside connection_flushed_some(), do not call
      connection_finished_flushing(). Should fix bug 451:
      "connection_stop_writing: Assertion conn->write_event failed"
      Bugfix on 0.1.2.7-alpha.
    - Fix possible segfaults in functions called from
      rend_process_relay_cell().

  o Major bugfixes (hidden services):
    - Hidden services were choosing introduction points uniquely by
      hexdigest, but when constructing the hidden service descriptor
      they merely wrote the (potentially ambiguous) nickname.
    - Clients now use the v2 intro format for hidden service
      connections: they specify their chosen rendezvous point by identity
      digest rather than by (potentially ambiguous) nickname. These
      changes could speed up hidden service connections dramatically.

  o Major bugfixes (other):
    - Stop publishing a new server descriptor just because we get a
      HUP signal. This led (in a roundabout way) to some servers getting
      dropped from the networkstatus lists for a few hours each day.
    - When looking for a circuit to cannibalize, consider family as well
      as identity. Fixes bug 438. Bugfix on 0.1.0.x (which introduced
      circuit cannibalization).
    - When a router wasn't listed in a new networkstatus, we were leaving
      the flags for that router alone -- meaning it remained Named,
      Running, etc -- even though absence from the networkstatus means
      that it shouldn't be considered to exist at all anymore. Now we
      clear all the flags for routers that fall out of the networkstatus
      consensus. Fixes bug 529.

• fix the regression test so that it can run on a platform honouring
  the German law about measurement and time keeping instead of POSIX
@
text
@d1 1
a1 1
$MirOS: ports/net/tor/patches/patch-configure_in,v 1.2 2007/08/06 09:47:34 tg Exp $
d3 1
a3 1
+++ configure.in	Tue Mar  4 02:15:39 2008
d22 1
a22 10
@@@@ -492,6 +492,8 @@@@ dnl These headers are not essential
 
 AC_CHECK_HEADERS(stdint.h sys/types.h inttypes.h sys/param.h sys/wait.h limits.h sys/limits.h netinet/in.h arpa/inet.h machine/limits.h syslog.h sys/time.h sys/resource.h inttypes.h utime.h sys/utime.h sys/mman.h netintet/in.h netinet/in6.h sys/syslimits.h)
 
+AC_CHECK_HEADERS(sys/taitime.h)
+
 AC_CHECK_HEADERS(net/if.h, [net_if_found=1], [net_if_found=0],
 [#ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
@@@@ -529,7 +531,7 @@@@ if test x$transparent = xtrue ; then
d31 1
a31 1
@@@@ -861,9 +863,8 @@@@ AC_DEFINE_UNQUOTED(LOCALSTATEDIR,"$LOCAL
@


1.2
log
@SECURITY update; cf. http://www.heise.de/newsticker/meldung/93853
@
text
@d1 3
a3 3
$MirOS: ports/net/tor/patches/patch-configure_in,v 1.1 2007/05/18 00:23:06 tg Exp $
--- configure.in.orig	Thu Aug  2 04:38:22 2007
+++ configure.in	Mon Aug  6 09:14:46 2007
d13 1
a13 1
@@@@ -318,7 +318,7 @@@@ fi
d22 10
a31 1
@@@@ -525,7 +525,7 @@@@ if test x$transparent = xtrue ; then
d40 1
a40 1
@@@@ -845,9 +845,8 @@@@ AC_DEFINE_UNQUOTED(LOCALSTATEDIR,"$LOCAL
@


1.1
log
@Port the EFF's The Onion Router, with slight help from pkgsrc®.
Untested so far. (But this will change.)
@
text
@d1 3
a3 3
$MirOS$
--- configure.in.orig	Tue Apr 24 05:06:30 2007
+++ configure.in	Fri May 18 00:19:05 2007
d13 1
a13 1
@@@@ -310,7 +310,7 @@@@ fi
d22 1
a22 1
@@@@ -517,7 +517,7 @@@@ if test x$transparent = xtrue ; then
d31 1
a31 1
@@@@ -837,9 +837,8 @@@@ AC_DEFINE_UNQUOTED(LOCALSTATEDIR,"$LOCAL
@

