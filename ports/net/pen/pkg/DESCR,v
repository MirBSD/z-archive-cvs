head	1.1;
branch	1.1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2005.03.18.15.48.54;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.48.54;	author tg;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@Allows several servers to appear as one to the outside and automatically
detects servers that are down and distributes clients among the available
servers. This gives high availability and scalable performance.

The load balancing algorithm keeps track of clients and will try to send
them back to the server they visited the last time. The client table has
a number of slots (2048 by default). When the table is full, the least
recently used one will be thrown out to make room for the new one. When
pen detects that a server is unavailable, it scans for another starting
with the server after the most recently used one. That way we get load
balancing and "fair" failover for free.

A side-effect of the load-balancing is that several logfiles are produced,
and all accesses seem to come from the load balancer. The program mergelogs
solves this problem by merging pen's log file with the ones produced by the
web servers.
@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
