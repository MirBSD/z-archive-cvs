head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	2017.03.15.22.39.39;	author tg;	state Exp;
branches;
next	1.6;
commitid	10058C9C2C131BD4C13;

1.6
date	2017.03.15.22.33.32;	author tg;	state Exp;
branches;
next	1.5;
commitid	10058C9C1502E84F0A3;

1.5
date	2017.03.15.22.32.27;	author tg;	state Exp;
branches;
next	1.4;
commitid	10058C9C1092C8FA5EA;

1.4
date	2017.03.15.22.14.08;	author tg;	state Exp;
branches;
next	1.3;
commitid	10058C9BCAF663F20CC;

1.3
date	2016.03.26.17.29.22;	author tg;	state Exp;
branches;
next	1.2;
commitid	10056F6C535787D61F0;

1.2
date	2005.12.14.23.28.35;	author tg;	state Exp;
branches;
next	1.1;
commitid	10043A0AA0E5A220A51;

1.1
date	2005.05.14.23.21.04;	author tg;	state Exp;
branches
	1.1.201.1;
next	;
commitid	1e94428687d39445;

1.1.201.1
date	2005.05.14.23.21.04;	author tg;	state Exp;
branches;
next	;
commitid	1e94428687d39445;


desc
@@


1.7
log
@log.c is… tricky.
@
text
@$MirOS: ports/net/djbdns/patches/patch-src_log_c,v 1.6 2017/03/15 22:33:32 tg Exp $
--- src/log.c.orig	Sun Feb 11 21:11:23 2001
+++ src/log.c	Wed Mar 15 22:38:43 2017
@@@@ -3,6 +3,7 @@@@
 #include "uint16.h"
 #include "error.h"
 #include "byte.h"
+#include "ip6.h"
 #include "log.h"
 
 /* work around gcc 2.95.2 bug */
@@@@ -45,12 +46,10 @@@@ static void space(void)
   string(" ");
 }
 
-static void ip(const char i[4])
+static void ip(const char i[16])
 {
-  hex(i[0]);
-  hex(i[1]);
-  hex(i[2]);
-  hex(i[3]);
+  int j;
+  for (j=0; j<16; ++j) hex(i[j]);
 }
 
 static void logid(const char id[2])
@@@@ -76,7 +75,7 @@@@ static void name(const char *q)
     string(".");
     return;
   }
-  while (state = *q++) {
+  while ((state = *q++)) {
     while (state) {
       ch = *q++;
       --state;
@@@@ -94,7 +93,7 @@@@ void log_startup(void)
   line();
 }
 
-void log_query(uint64 *qnum,const char client[4],unsigned int port,const char id[2],const char *q,const char qtype[2])
+void log_query(uint64 *qnum,const char client[16],unsigned int port,const char id[2],const char *q,const char qtype[2])
 {
   string("query "); number(*qnum); space();
   ip(client); string(":"); hex(port >> 8); hex(port & 255);
@@@@ -119,14 +118,14 @@@@ void log_querydrop(uint64 *qnum)
   line();
 }
 
-void log_tcpopen(const char client[4],unsigned int port)
+void log_tcpopen(const char client[16],unsigned int port)
 {
   string("tcpopen ");
   ip(client); string(":"); hex(port >> 8); hex(port & 255);
   line();
 }
 
-void log_tcpclose(const char client[4],unsigned int port)
+void log_tcpclose(const char client[16],unsigned int port)
 {
   const char *x = error_str(errno);
   string("tcpclose ");
@@@@ -135,21 +134,28 @@@@ void log_tcpclose(const char client[4],u
   line();
 }
 
-void log_tx(const char *q,const char qtype[2],const char *control,const char servers[64],unsigned int gluelessness)
+void log_tx(const char *q,const char qtype[2],const char *control,const char servers[256],unsigned int gluelessness)
 {
   int i;
 
   string("tx "); number(gluelessness); space();
   logtype(qtype); space(); name(q); space();
   name(control);
-  for (i = 0;i < 64;i += 4)
-    if (byte_diff(servers + i,4,"\0\0\0\0")) {
+  for (i = 0;i < 256;i += 16)
+    if (byte_diff(servers + i,16,V6any) && byte_diff(servers + i,16,V4any)) {
       space();
       ip(servers + i);
     }
   line();
 }
 
+void log_tx_piggyback(const char *q, const char qtype[2], const char *control)
+{
+  string("txpb ");
+  logtype(qtype); space(); name(q); space(); name(control);
+  line();
+}
+
 void log_cachedanswer(const char *q,const char type[2])
 {
   string("cached "); logtype(type); space();
@@@@ -175,27 +181,34 @@@@ void log_cachednxdomain(const char *dn)
   line();
 }
 
-void log_nxdomain(const char server[4],const char *q,unsigned int ttl)
+void log_nxdomain(const char server[16],const char *q,unsigned int ttl)
 {
   string("nxdomain "); ip(server); space(); number(ttl); space();
   name(q);
   line();
 }
 
-void log_nodata(const char server[4],const char *q,const char qtype[2],unsigned int ttl)
+void log_nodata(const char server[16],const char *q,const char qtype[2],unsigned int ttl)
 {
   string("nodata "); ip(server); space(); number(ttl); space();
   logtype(qtype); space(); name(q);
   line();
 }
 
-void log_lame(const char server[4],const char *control,const char *referral)
+void log_lame(const char server[16],const char *control,const char *referral)
 {
   string("lame "); ip(server); space();
   name(control); space(); name(referral);
   line();
 }
 
+void log_ignore_referral(const char server[16],const char *control,const char *referral)
+{
+  string("ignored referral "); ip(server); space();
+  name(control); space(); name(referral);
+  line();
+}
+
 void log_servfail(const char *dn)
 {
   const char *x = error_str(errno);
@@@@ -205,7 +218,7 @@@@ void log_servfail(const char *dn)
   line();
 }
 
-void log_rr(const char server[4],const char *q,const char type[2],const char *buf,unsigned int len,unsigned int ttl)
+void log_rr(const char server[16],const char *q,const char type[2],const char *buf,unsigned int len,unsigned int ttl)
 {
   int i;
 
@@@@ -222,7 +235,7 @@@@ void log_rr(const char server[4],const c
   line();
 }
 
-void log_rrns(const char server[4],const char *q,const char *data,unsigned int ttl)
+void log_rrns(const char server[16],const char *q,const char *data,unsigned int ttl)
 {
   string("rr "); ip(server); space(); number(ttl);
   string(" ns "); name(q); space();
@@@@ -230,7 +243,7 @@@@ void log_rrns(const char server[4],const
   line();
 }
 
-void log_rrcname(const char server[4],const char *q,const char *data,unsigned int ttl)
+void log_rrcname(const char server[16],const char *q,const char *data,unsigned int ttl)
 {
   string("rr "); ip(server); space(); number(ttl);
   string(" cname "); name(q); space();
@@@@ -238,7 +251,7 @@@@ void log_rrcname(const char server[4],co
   line();
 }
 
-void log_rrptr(const char server[4],const char *q,const char *data,unsigned int ttl)
+void log_rrptr(const char server[16],const char *q,const char *data,unsigned int ttl)
 {
   string("rr "); ip(server); space(); number(ttl);
   string(" ptr "); name(q); space();
@@@@ -246,7 +259,7 @@@@ void log_rrptr(const char server[4],cons
   line();
 }
 
-void log_rrmx(const char server[4],const char *q,const char *mx,const char pref[2],unsigned int ttl)
+void log_rrmx(const char server[16],const char *q,const char *mx,const char pref[2],unsigned int ttl)
 {
   uint16 u;
 
@@@@ -257,7 +270,7 @@@@ void log_rrmx(const char server[4],const
   line();
 }
 
-void log_rrsoa(const char server[4],const char *q,const char *n1,const char *n2,const char misc[20],unsigned int ttl)
+void log_rrsoa(const char server[16],const char *q,const char *n1,const char *n2,const char misc[20],unsigned int ttl)
 {
   uint32 u;
   int i;
@@@@ -272,17 +285,21 @@@@ void log_rrsoa(const char server[4],cons
   line();
 }
 
-void log_stats(void)
+void log_stats(uint64 numqueries, uint64 cache_motion, int uactive, int tactive)
 {
-  extern uint64 numqueries;
-  extern uint64 cache_motion;
-  extern int uactive;
-  extern int tactive;
-
   string("stats ");
   number(numqueries); space();
   number(cache_motion); space();
   number(uactive); space();
   number(tactive);
+  line();
+}
+
+void log_dropns(const char localip[16], const char nsip[16])
+{
+  string("dropping ns ");
+  ip(nsip);
+  string(" from IPSEND ");
+  ip(localip);
   line();
 }
@


1.6
log
@next attempt at fixing the build…
@
text
@d1 1
a1 1
$MirOS: ports/net/djbdns/patches/patch-src_log_c,v 1.5 2017/03/15 22:32:27 tg Exp $
d3 1
a3 1
+++ src/log.c	Wed Mar 15 22:29:58 2017
d187 1
a187 1
@@@@ -272,6 +285,7 @@@@ void log_rrsoa(const char server[4],cons
d191 2
a192 2
+#ifdef IN_DNSCACHE
 void log_stats(void)
d194 7
a200 2
   extern uint64 numqueries;
@@@@ -284,5 +298,15 @@@@ void log_stats(void)
a205 1
+#endif
@


1.5
log
@fix ignoring 0.0.0.0 (broken by Fefe ignoring only ::)
@
text
@d1 1
a1 1
$MirOS: ports/net/djbdns/patches/patch-src_log_c,v 1.4 2017/03/15 22:14:08 tg Exp $
d3 1
a3 1
+++ src/log.c	Wed Mar 15 22:18:42 2017
d187 9
a195 1
@@@@ -284,5 +297,14 @@@@ void log_stats(void)
d201 1
@


1.4
log
@handle calling v6 servers with a v4 IPSEND (by dropping the server loudly)

discovered thanks to multiplexd from IRC
@
text
@d1 1
a1 1
$MirOS: ports/net/djbdns/patches/patch-src_log_c,v 1.3 2016/03/26 17:29:22 tg Exp $
d3 1
a3 1
+++ src/log.c	Wed Mar 15 22:04:13 2017
d78 1
a78 1
+    if (byte_diff(servers + i,16,V6any)) {
@


1.3
log
@complete overhaul of djbdns port:

• merge t4/t6 flavours back into one binary
  ‣ greatly simplify IPv6 handling, too; drop code for v6-less OSes
• merge v4/v6 dnsroots back into one, update all of them
• improve documentation a bit
• apply two patches from http://www.your.org/dnscache/ (SECURITY):
  ‣ merge identical outgoing requests
  ‣ allow caching SOA responses
• update to Fefe’s djbdns-1.05-test27.diff.bz2
  ‣ fixes recursively resolving hosts behind IPv6-only nameservers;
    spotted by Natureshadow (for Teckids’ Lunatics network) and via
    http://serverfault.com/q/627912/189656 (which I’ll answer RSN)
  ⚠ fix with “one second” CDB validity patch
  ⚠ adapt for OpenBSD-style IPv6
• drop ip6.int. reverse v6 DNS for good
• improve dealing with mixing v4/v6 transport
  ⇒ TODO add IP4SEND/IP6SEND support; currently; if IPSEND is v6
    but we send to a v4 server, we use INADDR_ANY for outgoing,
    as automatic fallback address
@
text
@d1 1
a1 1
$MirOS: ports/net/djbdns/patches/patch-src_log_c,v 1.2 2005/12/14 23:28:35 tg Exp $
d3 1
a3 1
+++ src/log.c	Sat Mar 26 15:33:08 2016
d187 15
@


1.2
log
@* update to fefe's djbdns-1.05-test23.diff
  with djbdns-1.05-ixfr.diff
* slightly change naming of v6-transport binaries
* consolidate all added source files in a central directory
  so it can be reused by the v6-transport stuff
* integrate the v6 transport binaries
* fix spacing
* sync descriptive texts with reality
* sync European ORSN (v4 and v6) to their root.hint
* sync OpenNIC too
* Open-RSC seeminly ceased to exist recently
* Apply compiler-temporary-filename.patch
  from http://homepages.tesco.net/~J.deBoynePollard/FGA/djbdns-problems.html
* apply dnscache-cname-handling.patch
* apply dnscache-strict-forwardonly.patch w/ IPv6 tweak
* apply dnscacheip-space-separator.patch
* apply tinydns-alias-chain-truncation.patch
* apply tinydns-data-semantic-error.patch
  appropriately for 6 and 3, too
* fix shell code and path to includes
* fix relative paths
* fix names of library and programmes; NOMAN=yes here (t6)
* Add support for the IPv6 transport module to communicate,
  as a client, with IPv4 transport name servers as well.

  WFM
* build it with -Wall -Werror
* honour ${SYSCONFDIR} throughout the port
@
text
@d1 1
a1 1
$MirOS: ports/net/djbdns/patches/patch-src_log_c,v 1.1.201.1 2005/05/14 23:21:04 tg Exp $
d3 2
a4 2
+++ src/log.c	Tue Dec 13 23:45:41 2005
@@@@ -3,6 +3,9 @@@@
a7 1
+#ifdef DJB_V6ONLY
a8 1
+#endif /* DJB_V6ONLY */
d12 1
a12 1
@@@@ -45,12 +48,21 @@@@ static void space(void)
d16 1
a16 3
+#ifndef DJB_V6ONLY
 static void ip(const char i[4])
+#else
a17 1
+#endif /* DJB_V6ONLY */
d19 4
a22 6
+#ifndef DJB_V6ONLY
   hex(i[0]);
   hex(i[1]);
   hex(i[2]);
   hex(i[3]);
+#else
a24 1
+#endif /* DJB_V6ONLY */
d28 1
a28 1
@@@@ -76,7 +88,7 @@@@ static void name(const char *q)
d37 1
a37 1
@@@@ -94,7 +106,11 @@@@ void log_startup(void)
d41 1
a41 3
+#ifndef DJB_V6ONLY
 void log_query(uint64 *qnum,const char client[4],unsigned int port,const char id[2],const char *q,const char qtype[2])
+#else
a42 1
+#endif /* DJB_V6ONLY */
d46 1
a46 1
@@@@ -119,14 +135,22 @@@@ void log_querydrop(uint64 *qnum)
d50 1
a50 3
+#ifndef DJB_V6ONLY
 void log_tcpopen(const char client[4],unsigned int port)
+#else
a51 1
+#endif /* DJB_V6ONLY */
d58 1
a58 3
+#ifndef DJB_V6ONLY
 void log_tcpclose(const char client[4],unsigned int port)
+#else
a59 1
+#endif /* DJB_V6ONLY */
d63 1
a63 1
@@@@ -135,15 +159,24 @@@@ void log_tcpclose(const char client[4],u
d67 1
a67 3
+#ifndef DJB_V6ONLY
 void log_tx(const char *q,const char qtype[2],const char *control,const char servers[64],unsigned int gluelessness)
+#else
a68 1
+#endif /* DJB_V6ONLY */
d75 2
a76 4
+#ifndef DJB_V6ONLY
   for (i = 0;i < 64;i += 4)
     if (byte_diff(servers + i,4,"\0\0\0\0")) {
+#else
a78 1
+#endif /* DJB_V6ONLY */
a81 1
@@@@ -175,27 +208,50 @@@@ void log_cachednxdomain(const char *dn)
d85 15
a99 3
+#ifndef DJB_V6ONLY
 void log_nxdomain(const char server[4],const char *q,unsigned int ttl)
+#else
a100 1
+#endif /* DJB_V6ONLY */
d107 1
a107 3
+#ifndef DJB_V6ONLY
 void log_nodata(const char server[4],const char *q,const char qtype[2],unsigned int ttl)
+#else
a108 1
+#endif /* DJB_V6ONLY */
d115 1
a115 3
+#ifndef DJB_V6ONLY
 void log_lame(const char server[4],const char *control,const char *referral)
+#else
a116 1
+#endif /* DJB_V6ONLY */
a122 3
+#ifndef DJB_V6ONLY
+void log_ignore_referral(const char server[4],const char *control,const char *referral)
+#else
a123 1
+#endif /* DJB_V6ONLY */
d133 1
a133 1
@@@@ -205,7 +261,11 @@@@ void log_servfail(const char *dn)
d137 1
a137 3
+#ifndef DJB_V6ONLY
 void log_rr(const char server[4],const char *q,const char type[2],const char *buf,unsigned int len,unsigned int ttl)
+#else
a138 1
+#endif /* DJB_V6ONLY */
d142 1
a142 1
@@@@ -222,7 +282,11 @@@@ void log_rr(const char server[4],const c
d146 1
a146 3
+#ifndef DJB_V6ONLY
 void log_rrns(const char server[4],const char *q,const char *data,unsigned int ttl)
+#else
a147 1
+#endif /* DJB_V6ONLY */
d151 1
a151 1
@@@@ -230,7 +294,11 @@@@ void log_rrns(const char server[4],const
d155 1
a155 3
+#ifndef DJB_V6ONLY
 void log_rrcname(const char server[4],const char *q,const char *data,unsigned int ttl)
+#else
a156 1
+#endif /* DJB_V6ONLY */
d160 1
a160 1
@@@@ -238,7 +306,11 @@@@ void log_rrcname(const char server[4],co
d164 1
a164 3
+#ifndef DJB_V6ONLY
 void log_rrptr(const char server[4],const char *q,const char *data,unsigned int ttl)
+#else
a165 1
+#endif /* DJB_V6ONLY */
d169 1
a169 1
@@@@ -246,7 +318,11 @@@@ void log_rrptr(const char server[4],cons
d173 1
a173 3
+#ifndef DJB_V6ONLY
 void log_rrmx(const char server[4],const char *q,const char *mx,const char pref[2],unsigned int ttl)
+#else
a174 1
+#endif /* DJB_V6ONLY */
d178 1
a178 1
@@@@ -257,7 +333,11 @@@@ void log_rrmx(const char server[4],const
d182 1
a182 3
+#ifndef DJB_V6ONLY
 void log_rrsoa(const char server[4],const char *q,const char *n1,const char *n2,const char misc[20],unsigned int ttl)
+#else
a183 1
+#endif /* DJB_V6ONLY */
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$MirOS$
d3 1
a3 1
+++ src/log.c	Sat May 14 22:27:17 2005
d36 9
d105 1
a105 1
@@@@ -175,21 +208,33 @@@@ void log_cachednxdomain(const char *dn)
d139 18
a156 1
@@@@ -205,7 +250,11 @@@@ void log_servfail(const char *dn)
d168 1
a168 1
@@@@ -222,7 +271,11 @@@@ void log_rr(const char server[4],const c
d180 1
a180 1
@@@@ -230,7 +283,11 @@@@ void log_rrns(const char server[4],const
d192 1
a192 1
@@@@ -238,7 +295,11 @@@@ void log_rrcname(const char server[4],co
d204 1
a204 1
@@@@ -246,7 +307,11 @@@@ void log_rrptr(const char server[4],cons
d216 1
a216 1
@@@@ -257,7 +322,11 @@@@ void log_rrmx(const char server[4],const
@


1.1.201.1
log
@New djbdns port, #ifdef'd, "original" and "no_ipv6" flavours removed
"no_ipv4" non-functional at the moment, will follow later after
redesign using crunchgen(1) and crunchide(1)
@
text
@@
