head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	2016.03.26.17.29.15;	author tg;	state Exp;
branches;
next	;
commitid	10056F6C535787D61F0;


desc
@@


1.1
log
@complete overhaul of djbdns port:

• merge t4/t6 flavours back into one binary
  ‣ greatly simplify IPv6 handling, too; drop code for v6-less OSes
• merge v4/v6 dnsroots back into one, update all of them
• improve documentation a bit
• apply two patches from http://www.your.org/dnscache/ (SECURITY):
  ‣ merge identical outgoing requests
  ‣ allow caching SOA responses
• update to Fefe’s djbdns-1.05-test27.diff.bz2
  ‣ fixes recursively resolving hosts behind IPv6-only nameservers;
    spotted by Natureshadow (for Teckids’ Lunatics network) and via
    http://serverfault.com/q/627912/189656 (which I’ll answer RSN)
  ⚠ fix with “one second” CDB validity patch
  ⚠ adapt for OpenBSD-style IPv6
• drop ip6.int. reverse v6 DNS for good
• improve dealing with mixing v4/v6 transport
  ⇒ TODO add IP4SEND/IP6SEND support; currently; if IPSEND is v6
    but we send to a v4 server, we use INADDR_ANY for outgoing,
    as automatic fallback address
@
text
@#ifndef QMERGE_H
#define QMERGE_H

#include "dns.h"

struct qmerge_key {
  char *q;
  char qtype[2];
  char *control;
};

struct qmerge {
  int active;
  struct qmerge_key key;
  struct dns_transmit dt;
  int state; /* -1 = error, 0 = need io, 1 = need get, 2 = got packet */
};

extern int qmerge_start(struct qmerge **,const char *,int,const char *,const char *,const char *,const char *);
extern void qmerge_io(struct qmerge *,iopause_fd *,struct taia *);
extern int qmerge_get(struct qmerge **,const iopause_fd *,const struct taia *);
extern void qmerge_free(struct qmerge **);

#endif /* QMERGE_H */
@
