head	1.3;
access;
symbols
	cvs-200908291130:1.1.1.1 openbsd:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2012.01.15.12.17.08;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004F12C3DA132E0FBE;

1.2
date	2009.08.29.13.04.28;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004A99276A53347E4D;

1.1
date	2009.08.29.11.43.42;	author tg;	state Exp;
branches
	1.1.1.1;
next	;
commitid	1004A991477761C8DC1;

1.1.1.1
date	2009.08.29.11.43.42;	author tg;	state Exp;
branches;
next	;
commitid	1004A991477761C8DC1;


desc
@@


1.3
log
@update
@
text
@$MirOS$
$OpenBSD: patch-src_buffer_c,v 1.2 2009/08/22 20:28:40 robert Exp $
--- src/buffer.c.orig	Mon Oct 15 04:20:42 2007
+++ src/buffer.c	Sun Jan 15 12:06:56 2012
@@@@ -33,7 +33,7 @@@@ static int sendraw(p_buffer buf, const c
 /*-------------------------------------------------------------------------*\
 * Initializes module
 \*-------------------------------------------------------------------------*/
-int buffer_open(lua_State *L) {
+int ls_buffer_open(lua_State *L) {
     (void) L;
     return 0;
 }
@@@@ -41,7 +41,7 @@@@ int buffer_open(lua_State *L) {
 /*-------------------------------------------------------------------------*\
 * Initializes C structure 
 \*-------------------------------------------------------------------------*/
-void buffer_init(p_buffer buf, p_io io, p_timeout tm) {
+void ls_buffer_init(p_buffer buf, p_io io, p_timeout tm) {
 	buf->first = buf->last = 0;
     buf->io = io;
     buf->tm = tm;
@@@@ -52,7 +52,7 @@@@ void buffer_init(p_buffer buf, p_io io, 
 /*-------------------------------------------------------------------------*\
 * object:getstats() interface
 \*-------------------------------------------------------------------------*/
-int buffer_meth_getstats(lua_State *L, p_buffer buf) {
+int ls_buffer_meth_getstats(lua_State *L, p_buffer buf) {
     lua_pushnumber(L, buf->received);
     lua_pushnumber(L, buf->sent);
     lua_pushnumber(L, timeout_gettime() - buf->birthday);
@@@@ -62,7 +62,7 @@@@ int buffer_meth_getstats(lua_State *L, p
 /*-------------------------------------------------------------------------*\
 * object:setstats() interface
 \*-------------------------------------------------------------------------*/
-int buffer_meth_setstats(lua_State *L, p_buffer buf) {
+int ls_buffer_meth_setstats(lua_State *L, p_buffer buf) {
     buf->received = (long) luaL_optnumber(L, 2, buf->received); 
     buf->sent = (long) luaL_optnumber(L, 3, buf->sent); 
     if (lua_isnumber(L, 4)) buf->birthday = timeout_gettime() - lua_tonumber(L, 4);
@@@@ -73,7 +73,7 @@@@ int buffer_meth_setstats(lua_State *L, p
 /*-------------------------------------------------------------------------*\
 * object:send() interface
 \*-------------------------------------------------------------------------*/
-int buffer_meth_send(lua_State *L, p_buffer buf) {
+int ls_buffer_meth_send(lua_State *L, p_buffer buf) {
     int top = lua_gettop(L);
     int err = IO_DONE;
     size_t size = 0, sent = 0;
@@@@ -106,7 +106,7 @@@@ int buffer_meth_send(lua_State *L, p_buf
 /*-------------------------------------------------------------------------*\
 * object:receive() interface
 \*-------------------------------------------------------------------------*/
-int buffer_meth_receive(lua_State *L, p_buffer buf) {
+int ls_buffer_meth_receive(lua_State *L, p_buffer buf) {
     int err = IO_DONE, top = lua_gettop(L);
     luaL_Buffer b;
     size_t size;
@@@@ -149,7 +149,7 @@@@ int buffer_meth_receive(lua_State *L, p_
 /*-------------------------------------------------------------------------*\
 * Determines if there is any data in the read buffer
 \*-------------------------------------------------------------------------*/
-int buffer_isempty(p_buffer buf) {
+int ls_buffer_isempty(p_buffer buf) {
     return buf->first >= buf->last;
 }
 
@@@@ -244,7 +244,7 @@@@ static int recvline(p_buffer buf, luaL_B
 static void buffer_skip(p_buffer buf, size_t count) {
     buf->received += count;
     buf->first += count;
-    if (buffer_isempty(buf)) 
+    if (ls_buffer_isempty(buf)) 
         buf->first = buf->last = 0;
 }
 
@@@@ -256,7 +256,7 @@@@ static int buffer_get(p_buffer buf, cons
     int err = IO_DONE;
     p_io io = buf->io;
     p_timeout tm = buf->tm;
-    if (buffer_isempty(buf)) {
+    if (ls_buffer_isempty(buf)) {
         size_t got;
         err = io->recv(io->ctx, buf->data, BUF_SIZE, &got, tm);
         buf->first = 0;
@


1.2
log
@regenerate patches etc. only, so that I can work from there
@
text
@d1 1
d3 2
a4 2
--- src/buffer.c.orig	Thu Apr 27 03:22:59 2006
+++ src/buffer.c	Sat Aug 29 13:03:49 2009
a47 1
     p_timeout tm = timeout_markstart(buf->tm);
d49 1
a56 1
     p_timeout tm = timeout_markstart(buf->tm);
d58 1
d68 1
a68 1
@@@@ -239,7 +239,7 @@@@ static int recvline(p_buffer buf, luaL_B
d77 1
a77 1
@@@@ -251,7 +251,7 @@@@ static int buffer_get(p_buffer buf, cons
@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
--- src/buffer.c.orig	Sat Aug 22 22:18:38 2009
+++ src/buffer.c	Sat Aug 22 22:19:02 2009
@@@@ -33,7 +33,7 @@@@ static int sendraw(p_buffer buf, const char *data, siz
d22 1
a22 1
@@@@ -52,7 +52,7 @@@@ void buffer_init(p_buffer buf, p_io io, p_timeout tm) 
d31 1
a31 1
@@@@ -62,7 +62,7 @@@@ int buffer_meth_getstats(lua_State *L, p_buffer buf) {
d40 1
a40 1
@@@@ -73,7 +73,7 @@@@ int buffer_meth_setstats(lua_State *L, p_buffer buf) {
a46 1
 #ifdef LUASOCKET_DEBUG
d48 2
a49 1
@@@@ -108,7 +108,7 @@@@ int buffer_meth_send(lua_State *L, p_buffer buf) {
a55 1
 #ifdef LUASOCKET_DEBUG
d57 2
a58 1
@@@@ -153,7 +153,7 @@@@ int buffer_meth_receive(lua_State *L, p_buffer buf) {
d67 1
a67 1
@@@@ -243,7 +243,7 @@@@ static int recvline(p_buffer buf, luaL_Buffer *b) {
d76 1
a76 1
@@@@ -255,7 +255,7 @@@@ static int buffer_get(p_buffer buf, const char **data,
@


1.1.1.1
log
@import Lua and some bindings required for the Simtec eKey
@
text
@@
