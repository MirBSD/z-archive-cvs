head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	2008.05.06.19.47.10;	author bsiegert;	state Exp;
branches;
next	;
commitid	1004820B5921875DEAB;


desc
@@


1.1
log
@Add a port for patchutils-0.2.31, hint by tonnerre@@netbsd. From DESCR:

Patchutils is a small collection of programs that operate on patch
files.

interdiff generates an incremental patch from two patches against a
common source. For example, if you have applied a pre-patch to a source
tree, and wish to apply another pre-patch (which is against the same
original source tree), you can use interdiff to generate the patch that
you need to apply. You can also use this to review changes between two
pre-patches.

combinediff generates a single patch from two incremental patches,
allowing you to merge patches together. The resulting patch file only
alters each file once.

filterdiff will select the portions of a patch file that apply to files
matching (or, alternatively, not matching) a shell wildcard.

fixcvsdiff is for correcting the output of "cvs diff".

rediff corrects hand-edited patches, by comparing the original patch
with the modified one and adjusting the offsets and counts.

lsdiff displays a short listing of affected files in a patch file, along
with (optionally) the line numbers of the start of each patch.

splitdiff separates out patches from a patch file so that each new patch
file only alters any given file once. In this way, a file containing
several incremental patches can be split into individual incremental
patches.

grepdiff displays a list of the files modified by a patch where the
patch contains a given regular expression.

recountdiff fixes up counts and offsets in a unified diff.

unwrapdiff fixes word-wrapped unified diffs.
@
text
@$MirOS$
--- src/util.c.orig	2008-05-06 21:32:58.000000000 +0200
+++ src/util.c	2008-05-06 21:33:11.000000000 +0200
@@@@ -311,7 +311,7 @@@@ ssize_t getline(char **line, size_t *n, 
 		return -1;
 	
 	len = strlen(p);
-	while ((*line)[len - 1] != '\n') {
+	while (len > 0 && (*line)[len - 1] != '\n') {
 		p = realloc(*line, *n + GLSTEP);
 		if (!p)
 			return -1;
@
