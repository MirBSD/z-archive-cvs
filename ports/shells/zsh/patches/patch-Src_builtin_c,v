head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2011.03.08.19.08.15;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004D767EB44F3A68F8;

1.1
date	2009.09.06.16.31.12;	author tg;	state Exp;
branches;
next	;
commitid	1004AA3E385782410B4;


desc
@@


1.2
log
@update, but keep multibyte disabled after analysis
@
text
@$MirOS: ports/shells/zsh/patches/patch-Src_builtin_c,v 1.1 2009/09/06 16:31:12 tg Exp $

	Octets and Multibyte Characters are handled the same
	in zsh on Debian, so we must do so in MirBSD as well

--- Src/builtin.c.orig	Mon Oct 18 09:31:12 2010
+++ Src/builtin.c	Tue Mar  8 17:18:23 2011
@@@@ -4291,6 +4291,10 @@@@ bin_print(char *name, char **args, Optio
 			mb_metacharinit();
 			(void)mb_metacharlenconv(metafy(curarg+1, curlen-1,
 							META_USEHEAP), &cc);
+#ifdef iswoctet
+			if (iswoctet(cc))
+				cc &= 0xFF;
+#endif
 		    }
 		    else
 			cc = WEOF;
@


1.1
log
@commit an updated zsh, mostly taken from OpenBSD, with a few MirBSD
modifications â€“ just so that it compiles, runs, and almost passes the
testsuite (MidnightBSD and Interix will need more patches; Darwin should
work as-is).

MirBSD testsuite results:
37 successful test scripts, 1 failure, 0 skipped

The reason for this file is documented at the bottom of ./SECURITY
because it led to discovering (at least) one buffer overflow hole
in the multibyte code (and to me not wanting to poke in this code
any longer).
@
text
@d1 1
a1 1
$MirOS$
d6 3
a8 3
--- Src/builtin.c.orig	Wed May 20 09:47:58 2009
+++ Src/builtin.c	Sun Sep  6 16:00:32 2009
@@@@ -4239,6 +4239,10 @@@@ bin_print(char *name, char **args, Optio
@

