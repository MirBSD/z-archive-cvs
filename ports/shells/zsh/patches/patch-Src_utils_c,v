head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2011.03.08.19.08.15;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004D767EB44F3A68F8;

1.1
date	2009.09.06.16.31.13;	author tg;	state Exp;
branches;
next	;
commitid	1004AA3E385782410B4;


desc
@@


1.2
log
@update, but keep multibyte disabled after analysis
@
text
@$MirOS: ports/shells/zsh/patches/patch-Src_utils_c,v 1.1 2009/09/06 16:31:13 tg Exp $
--- Src/utils.c.orig	Mon Dec 20 10:00:30 2010
+++ Src/utils.c	Tue Mar  8 17:18:23 2011
@@@@ -537,11 +537,14 @@@@ wcs_nicechar(wchar_t c, size_t *widthp, 
 	 * This comparison fails and generates a compiler warning
 	 * if wchar_t is 16 bits, but the code is still correct.
 	 */
+#if !defined(__WCHAR_MAX__) || (__WCHAR_MAX__ > 65535U)
 	if (c >=  0x10000) {
 	    sprintf(buf, "\\U%.8x", (unsigned int)c);
 	    if (widthp)
 		*widthp = 10;
-	} else if (c >= 0x100) {
+	} else
+#endif
+	  if (c >= 0x100) {
 	    sprintf(buf, "\\u%.4x", (unsigned int)c);
 	    if (widthp)
 		*widthp = 6;
@


1.1
log
@commit an updated zsh, mostly taken from OpenBSD, with a few MirBSD
modifications â€“ just so that it compiles, runs, and almost passes the
testsuite (MidnightBSD and Interix will need more patches; Darwin should
work as-is).

MirBSD testsuite results:
37 successful test scripts, 1 failure, 0 skipped

The reason for this file is documented at the bottom of ./SECURITY
because it led to discovering (at least) one buffer overflow hole
in the multibyte code (and to me not wanting to poke in this code
any longer).
@
text
@d1 4
a4 4
$MirOS$
--- Src/utils.c.orig	Tue May 19 11:17:47 2009
+++ Src/utils.c	Sun Sep  6 15:32:17 2009
@@@@ -536,11 +536,14 @@@@ wcs_nicechar(wchar_t c, size_t *widthp, 
@

