head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2007.04.03.19.44.28;	author tg;	state dead;
branches;
next	1.1;
commitid	1004612AC977E789195;

1.1
date	2005.03.18.15.50.15;	author tg;	state Exp;
branches
	1.1.7.1;
next	;

1.1.7.1
date	2005.03.18.15.50.15;	author tg;	state Exp;
branches;
next	;


desc
@@


1.2
log
@• remove ports that are simply broken, don't work, for too long, with no
  update or update-willing person in sight, kde stuff, web2.0 stuff that
  we don't want in ports (just stuff it into /var/www yourself, it isn't
  that difficult, right?), stuff for which no new version exists/will be
  and some obsd cruft; adjust dependencies
• no BUILD_DEPENDS+=RUN_DEPENDS or vice versa any more, *ever*
• fix some other stuff partially

ok bsiegert@@
@
text
@NTE is a shared text editor designed for use on the Mbone. It is not a
word processor (it is not clear that word processing is a useful task
to share) and it is not a whiteboard - if you want a whiteboard, wb
from LBL is a much better whiteboard.

Using NTE can be very interactive - unless you lock a block of text,
anyone else in your session can edit that text or delete it. This is
intentional. Many people can (if they wish) edit the same document
simultaneously. Many people can even edit the same block of text
simultaneously, but if more than one person tries to edit the same
line at one time, a conflict will occur, which results in only one of
the changes being preserved.

In general, it is up to you how you use NTE. You must develop human
protocols to be able to collaborate, even in face-to-face meetings,
and NTE is no exception. It will work well if you cooperate, and not
if you don't. It only provides minimal protection against disruptive
participants.

NTE tries hard to ensure you don't get confused by unexpected events
caused by other users - it always tells you who did what if it can.
However, it can't do the impossible, and sometimes network conditions
may mean that a change arrives somewhat delayed. If this happens, NTE
will reach a consistent result, but this may not be what you expected.
Thus we recommend using NTE as part of a multimedia conference in
which it is a support tool, rather than as the only channel of
communication.

NTE was originally written by Mark Handley as part of the MICE and
MERCI projects. Further contributions have been made by Jim Knowler
and Kristian Hasler as part of the MECCANO and PIPVIC projects.
@


1.1
log
@Initial revision
@
text
@@


1.1.7.1
log
@Import the MirPorts Framework, many files moved or renamed though, no KDE/QT
@
text
@@
