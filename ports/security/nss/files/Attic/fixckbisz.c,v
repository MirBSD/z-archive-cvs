head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;
expand	@b@;


1.2
date	2010.12.12.16.31.28;	author tg;	state dead;
branches;
next	1.1;
commitid	1004D04F8E5722A9ADD;

1.1
date	2010.07.22.15.10.29;	author tg;	state Exp;
branches;
next	;
commitid	1004C485EB7168C4697;


desc
@@


1.2
log
@^K/tr -d '"' | wc -c
is as useful, just add one for the NUL and you're set...
@
text
@#include <stdio.h>

struct NSSdoof {
	const char *text;
#define PRUint32 size_t
	size_t length;
};

struct NSSdoof foo[2] = {
  { (void *)"@@(#) $MirOS: ports/security/nss/files/certdata.c,v 1.1+1 2010/03/23 20:44:19 tg x $""; @@(#) $miros: ports/security/nss/files/certdata.txt,v 1.2 2010/07/22 14:21:10 tg Exp $""; @@(#) $RCSfile: certdata.perl,v $ $Revision: 1.12 $ $Date: 2008/01/23 07:34:49 $", (PRUint32)252 }
,
  { (void *)"@@(#) $MirOS: ports/security/nss/files/certdata.txt,v 1.2 2010/07/22 14:21:10 tg Exp $""; @@(#) $RCSfile: certdata.perl,v $ $Revision: 1.12 $ $Date: 2008/01/23 07:34:49 $", (PRUint32)167 }
};

int
main(void)
{
	printf("old { %zu -> %zu }  new { %zu -> %zu }\n",
	    foo[1].length, strlen(foo[1].text) + 1,
	    foo[0].length, strlen(foo[0].text) + 1);
	return (0);
}
@


1.1
log
@• update ca-certificates port with latest data
• update nsckbi in both nss (for package nss) and firesomething (for
  package nssckbi); if nss would create a subpackage nssckbi like
  firesomething does at the moment, and firesomething were to depend
  on nss and nssckbi instead of bringing their own¹, things would be
  MUCH better as it takes about 2 minutes per certdata.txt and 3-4
  minutes per certdata.c file to commit this

① maybe just build firesomething with its own nss and nssckbi but
  don’t include it in the binary package, rather use symlinks to
  the mirpackage for nss and nssckbi? or just depend on the extracted
  nss/nssckbi source tree (there’s at least one package that extracts
  jpeg and IIRC png during build in ports, so there’s precedent)

Benny, please consider cleaning up this situation.
@
text
@@

