head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2012.01.15.13.47.48;	author tg;	state dead;
branches;
next	1.1;
commitid	1004F12D919735D2719;

1.1
date	2009.11.22.19.32.34;	author tg;	state Exp;
branches;
next	;
commitid	1004B0991C1317436F4;


desc
@@


1.2
log
@update
@
text
@$MirOS: ports/security/ekeyd/patches/patch-daemon_ekeyd_h,v 1.1 2009/11/22 19:32:34 tg Exp $
--- daemon/ekeyd.h.orig	Mon Aug  3 14:19:35 2009
+++ daemon/ekeyd.h	Sun Nov 22 19:28:08 2009
@@@@ -59,12 +59,9 @@@@ extern int query_ekey_status(OpaqueEkey 
  * Retrieve the serial number associated with an ekey.
  *
  * @@param ekey The ekey structure to interrogate.
- * @@param buf A buffer into which to write the serial number.
- * @@return true if the ekey has a serial number, false otherwise.
- * @@note buf must be at least 16 chars long, a terminating null
- *       will not be added, the serial number will be PEM encoded.
+ * @@return malloc'd string if the ekey has a serial number, NULL otherwise.
  */
-extern bool retrieve_ekey_serial(OpaqueEkey *ekey, char *buf);
+extern char *retrieve_ekey_serial(OpaqueEkey *ekey);
 
 /**
  * Open an output stream for writing entropy to a file.
@


1.1
log
@update (most of our patches have been accepted, but ekey-rekey is
really FUBAR’d now in upstream, couldn’t work, and the rest are to
fix some really bad programming practice leading to a strcpy
@
text
@d1 1
a1 1
$MirOS$
@

