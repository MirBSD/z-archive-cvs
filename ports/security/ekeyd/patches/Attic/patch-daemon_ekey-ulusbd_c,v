head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	2009.11.22.19.32.33;	author tg;	state dead;
branches;
next	1.1;
commitid	1004B0991C1317436F4;

1.1
date	2009.11.14.21.45.30;	author tg;	state Exp;
branches;
next	;
commitid	1004AFF25061DF717E6;


desc
@@


1.2
log
@update (most of our patches have been accepted, but ekey-rekey is
really FUBAR’d now in upstream, couldn’t work, and the rest are to
fix some really bad programming practice leading to a strcpy
@
text
@$MirOS: ports/security/ekeyd/patches/patch-daemon_ekey-ulusbd_c,v 1.1 2009/11/14 21:45:30 tg Exp $
--- daemon/ekey-ulusbd.c.orig	Fri Nov  6 12:33:09 2009
+++ daemon/ekey-ulusbd.c	Sat Nov 14 21:48:09 2009
@@@@ -119,7 +119,14 @@@@ prepare_uds(void)
     }
     
     sa.sun_family = AF_UNIX;
-    strcpy(sa.sun_path, devpath);
+    if ((namelen = strlen(devpath) + 1) > sizeof(sa.sun_path)) {
+        fprintf(stderr, "Device name (%s) too long (%u, max. %u)\n", devpath,
+          (unsigned int)namelen, (unsigned int)sizeof(sa.sun_path));
+        /* same return code as config/cmdline syntax error */
+        exit(1);
+    }
+    /* this is effectively a strcpy, but strcpy produces warnings on BSD */
+    memcpy(sa.sun_path, devpath, namelen);
 
 #ifdef SUN_LEN
     namelen = SUN_LEN(&sa);
@@@@ -129,7 +136,7 @@@@ prepare_uds(void)
     
 #ifdef BSD44SOCKETS
     sa.sun_len = strlen(devpath)
-#ifdef EKEY_OS_OPENBSD
+#if defined(EKEY_OS_OPENBSD) || defined(EKEY_OS_MIRBSD)
         + 1
 #endif
         ;
@


1.1
log
@experimental port for the Simtec eKey control software
@
text
@d1 1
a1 1
$MirOS$
@

