head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2009.11.29.15.58.46;	author tg;	state Exp;
branches;
next	1.2;
commitid	1004B129A454781DC96;

1.2
date	2008.07.20.22.53.08;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004883C1DF3B43F165;

1.1
date	2008.07.15.12.14.55;	author tg;	state Exp;
branches;
next	;
commitid	100487C94CB4CDF58D0;


desc
@@


1.3
log
@upgrade, not relevant for MirBSD-current but for others
@
text
@The BSD::arc4random module contains
• ithreads-safe Perl bindings for
  ‣ arc4random()
  ‣ arc4random_addrandom()
  ‣ arc4random_pushb()
  ‣ arc4random_pushk()
  ‣ arc4random_stir()
• Pure Perl implementation of
  ‣ arc4random_bytes()
  ‣ arc4random_uniform()
• the ability to tie scalars to it
• a tied global $RANDOM variable behaving exactly like in mksh
• a have_kintf() constant function returning if arc4random_pushb()
  and arc4random_pushk() are aliases to arc4random_addrandom() or
  do indeed work with the kernel (and if only one of them exists,
  the other one is aliased to it)
• mksh’s contributed arc4random.c file for GNU operating systems
  with a couple of improvements (temporary, until mirngd is done)
@


1.2
log
@all:
• merge arc4random_stir branches
• improve descriptions, etc.
randex.pl:
• remove superfluous rcs id
• increase size of seed file to pgp-2.6.3in’s
• add a note why we CAN NOT use gpg’s
  (and suggest PuTTY’s works well)
@
text
@d15 2
a16 1
  do indeed work with the kernel
@


1.1
log
@BSD::arc4random, yay!
Vutral Martini finally uploaded it, 10x
@
text
@d7 1
d17 1
@

