head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2013.10.31.20.05.34;	author tg;	state Exp;
branches;
next	1.2;
commitid	1005272B7081B0E5655;

1.2
date	2011.08.04.15.27.18;	author tg;	state Exp;
branches;
next	1.1;
commitid	1004E3ABA562FC4351E;

1.1
date	2007.02.18.19.36.16;	author tg;	state Exp;
branches;
next	;
commitid	10045D8AAC722575B84;


desc
@@


1.3
log
@adapt most __attribute__((â€¦)) occurrences to new KNF style(9)
@
text
@$MirOS: ports/security/stunnel/patches/patch-prototypes_h,v 1.2 2011/08/04 15:27:18 tg Exp $
--- prototypes.h.orig	Fri Aug  1 23:42:49 2003
+++ prototypes.h	Thu Aug  4 14:56:25 2011
@@@@ -41,7 +41,8 @@@@ void sslerror(char *);
 /* Prototypes for client.c */
 void *client(void *);
 /* descriptor versions of fprintf/fscanf */
-int fdprintf(int, char *, ...);
+int fdprintf(int, char *, ...)
+    __attribute__((__format__(__printf__, 2, 3)));
 int fdscanf(int, char *, char *);
 #include <openssl/ssl.h>
 int set_rsa_blinding(SSL *);
@@@@ -50,7 +51,9 @@@@ int set_rsa_blinding(SSL *);
 
 void log_open();
 void log_close();
-void log(int, char *, ...);
+#define log log_
+void log(int, char *, ...)
+    __attribute__((__format__(__printf__, 2, 3)));
 
 /* Prototypes for sthreads.c */
 
@@@@ -81,6 +84,7 @@@@ void pty_make_controlling_tty(int *ttyfd
 #define OPT_REMOTE      0x20
 #define OPT_TRANSPARENT 0x40
 #define OPT_PTY         0x80
+#define OPT_FPASSTHROUGH 0x100
 
 typedef struct {
     char pem[STRLEN];                        /* pem (priv key/cert) filename */
@


1.2
log
@implement local-file passthrough mode, for a scalable arandom ssl server
(yes, I did just extend stunnel 3.x)
@
text
@d1 1
a1 1
$MirOS: ports/security/stunnel/patches/patch-prototypes_h,v 1.1 2007/02/18 19:36:16 tg Exp $
d10 1
a10 1
+    __attribute__((format (printf, 2, 3)));
d21 1
a21 1
+    __attribute__((format (printf, 2, 3)));
@


1.1
log
@format string and gcc warning cleanup, fixes logging
@
text
@d1 1
a1 1
$MirOS$
d3 1
a3 1
+++ prototypes.h	Sun Feb 18 19:23:23 2007
d25 8
@

